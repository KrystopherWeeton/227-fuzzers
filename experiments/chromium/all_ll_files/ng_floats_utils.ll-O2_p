; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_floats_utils.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_floats_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::NGUnpositionedFloat" = type { %"class.blink::NGBlockNode", %class.scoped_refptr.1841, %"struct.blink::LogicalSize", %"struct.blink::LogicalSize", %"struct.blink::LogicalSize", %"struct.blink::NGBfcOffset", %"class.blink::NGConstraintSpace"*, %"class.blink::ComputedStyle"*, %class.scoped_refptr.1631, %"struct.blink::NGBoxStrut" }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1798", %"class.std::__1::unique_ptr.1803", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1824, %"class.blink::Persistent.1825" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2136" }
%"class.blink::Member.2136" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2138" }
%"class.blink::Member.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2159 }
%class.scoped_refptr.2159 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2169" }
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2168" }
%"class.blink::MemberBase.2168" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2160", %"class.WTF::Vector.2160" }
%"class.WTF::Vector.2160" = type { %"class.WTF::VectorBuffer.2161" }
%"class.WTF::VectorBuffer.2161" = type { %"class.WTF::VectorBufferBase.2162" }
%"class.WTF::VectorBufferBase.2162" = type { %class.scoped_refptr.2159*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2145 }
%class.scoped_refptr.2145 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2146", %"class.WTF::Vector.630", %"class.WTF::Vector.2148", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2146" = type { %"class.base::RefCounted.2147" }
%"class.base::RefCounted.2147" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2148" = type { %"class.WTF::VectorBuffer.2149" }
%"class.WTF::VectorBuffer.2149" = type { %"class.WTF::VectorBufferBase.2150" }
%"class.WTF::VectorBufferBase.2150" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2151 }
%union.anon.2151 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1806", %"class.absl::optional.1811", %"class.absl::optional.1816" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1824 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1825" = type { %"class.blink::PersistentBase.1826" }
%"class.blink::PersistentBase.1826" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1829", %"struct.blink::PhysicalRect", %"class.blink::Member.1839" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.WTF::HashSet.1832"* }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%class.scoped_refptr.1841 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.2171" }
%"class.std::__1::unique_ptr.2171" = type { %"class.std::__1::__compressed_pair.2172" }
%"class.std::__1::__compressed_pair.2172" = type { %"struct.std::__1::__compressed_pair_elem.2173" }
%"struct.std::__1::__compressed_pair_elem.2173" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2140" }
%"class.WTF::Vector.2140" = type { %"class.WTF::VectorBuffer.2141" }
%"class.WTF::VectorBuffer.2141" = type { %"class.WTF::VectorBufferBase.2142" }
%"class.WTF::VectorBufferBase.2142" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2155" }
%"class.WTF::VectorBuffer.2155" = type { %"class.WTF::VectorBufferBase.2156", [32 x i8] }
%"class.WTF::VectorBufferBase.2156" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1797, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1791 }
%union.anon.1791 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%union.anon.1797 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1842, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1843, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1844", %"class.absl::optional.1860" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1842 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1865", [4 x i8], %union.anon.1867, %class.scoped_refptr.1842, i32, [4 x i8] }>
%"class.WTF::RefCounted.1865" = type { %"class.base::RefCounted.1866" }
%"class.base::RefCounted.1866" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1867 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%union.anon.1843 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1847", %"class.WTF::Vector.1852", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849" }
%"class.WTF::VectorBufferBase.1849" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1852" = type { %"class.WTF::VectorBuffer.1853" }
%"class.WTF::VectorBuffer.1853" = type { %"class.WTF::VectorBufferBase.1854" }
%"class.WTF::VectorBufferBase.1854" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1860" = type { %"class.absl::optional_internal::optional_data.1861" }
%"class.absl::optional_internal::optional_data.1861" = type { %"class.absl::optional_internal::optional_data_base.1862" }
%"class.absl::optional_internal::optional_data_base.1862" = type { %"class.absl::optional_internal::optional_data_dtor_base.1863" }
%"class.absl::optional_internal::optional_data_dtor_base.1863" = type { i8, %union.anon.1864 }
%union.anon.1864 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGPositionedFloat" = type <{ %class.scoped_refptr.1631, %"struct.blink::NGBfcOffset", i8, [7 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::NGBoxFragmentBuilder" = type { %"class.blink::NGContainerFragmentBuilder.base", %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.absl::optional.1872", %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGBlockNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.2050", i32, %"class.absl::optional.1636", %"class.absl::optional.1636", %"class.absl::optional.2055", %"class.absl::optional.2060", %class.scoped_refptr.2070, %"class.std::__1::unique_ptr.2088", %"class.absl::optional.2099", %"class.absl::optional.2099", %"class.std::__1::unique_ptr.2104", %"struct.blink::LogicalBoxSides", %class.scoped_refptr.1669, %"class.absl::optional.1641", %"class.std::__1::unique_ptr.2110", %"class.absl::optional.1860", %class.scoped_refptr.1841 }
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1636", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1869", %"class.WTF::Vector.1869", %"class.WTF::Vector.1869", %"class.WTF::HashMap.1879", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2010", %"class.WTF::Vector.2015", %class.scoped_refptr.2020, %class.scoped_refptr.1842, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1868, i8, i8 }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%class.scoped_refptr.1868 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1869" = type { %"class.WTF::VectorBuffer.1870" }
%"class.WTF::VectorBuffer.1870" = type { %"class.WTF::VectorBufferBase.1871" }
%"class.WTF::VectorBufferBase.1871" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.1872", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.WTF::HashMap.1879" = type { %"class.WTF::HashTable.1880" }
%"class.WTF::HashTable.1880" = type <{ %"struct.WTF::KeyValuePair.1883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1883" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.1935" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1884", %"class.std::__1::unique_ptr.1904" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1884" = type { %"class.blink::PersistentBase.1885" }
%"class.blink::PersistentBase.1885" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1888", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1888" = type { %"class.std::__1::__compressed_pair.1889" }
%"class.std::__1::__compressed_pair.1889" = type { %"struct.std::__1::__compressed_pair_elem.1890" }
%"struct.std::__1::__compressed_pair_elem.1890" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1891", %"class.WTF::HashMap.1896", %"class.WTF::String" }
%"class.WTF::Vector.1891" = type { %"class.WTF::VectorBuffer.1892" }
%"class.WTF::VectorBuffer.1892" = type { %"class.WTF::VectorBufferBase.1893" }
%"class.WTF::VectorBufferBase.1893" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1896" = type { %"class.WTF::HashTable.1897" }
%"class.WTF::HashTable.1897" = type <{ %"struct.WTF::KeyValuePair.1900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1900" = type opaque
%"class.std::__1::unique_ptr.1904" = type { %"class.std::__1::__compressed_pair.1905" }
%"class.std::__1::__compressed_pair.1905" = type { %"struct.std::__1::__compressed_pair_elem.1906" }
%"struct.std::__1::__compressed_pair_elem.1906" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1907", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1907" = type { %"class.WTF::HashTable.1910", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1910" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1913", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1916, %"class.std::__1::unique_ptr.1917", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1916 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2116", i16, %class.scoped_refptr.1916 }
%"class.WTF::ThreadSafeRefCounted.2116" = type { %"class.base::RefCountedThreadSafe.2117" }
%"class.base::RefCountedThreadSafe.2117" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.WTF::Vector.1920"* }
%"class.WTF::Vector.1920" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1922" }
%"class.WTF::VectorBufferBase.1922" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1931, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1931 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.1979", %"class.std::__1::unique_ptr.1985", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1938", %"class.std::__1::unique_ptr.1964", %"class.std::__1::unique_ptr.1888" }
%"class.WTF::Vector.1938" = type { %"class.WTF::VectorBuffer.1939" }
%"class.WTF::VectorBuffer.1939" = type { %"class.WTF::VectorBufferBase.1940" }
%"class.WTF::VectorBufferBase.1940" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1941, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1941 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1942", float, %"class.blink::FloatRect", %"class.WTF::Vector.1944", %class.scoped_refptr.1950, %"class.std::__1::unique_ptr.1951", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1942" = type { %"class.base::RefCounted.1943" }
%"class.base::RefCounted.1943" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1944" = type { %"class.WTF::VectorBuffer.1945" }
%"class.WTF::VectorBuffer.1945" = type { %"class.WTF::VectorBufferBase.1946" }
%"class.WTF::VectorBufferBase.1946" = type { %class.scoped_refptr.1947*, i32, i32 }
%class.scoped_refptr.1947 = type opaque
%class.scoped_refptr.1950 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1954", i32, float }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.1964" = type { %"class.std::__1::__compressed_pair.1965" }
%"class.std::__1::__compressed_pair.1965" = type { %"struct.std::__1::__compressed_pair_elem.1966" }
%"struct.std::__1::__compressed_pair_elem.1966" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1967", %"class.WTF::Vector.1972" }
%"class.WTF::Vector.1967" = type { %"class.WTF::VectorBuffer.1968" }
%"class.WTF::VectorBuffer.1968" = type { %"class.WTF::VectorBufferBase.1969" }
%"class.WTF::VectorBufferBase.1969" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1972" = type { %"class.WTF::VectorBuffer.1973" }
%"class.WTF::VectorBuffer.1973" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.1985" = type { %"class.std::__1::__compressed_pair.1986" }
%"class.std::__1::__compressed_pair.1986" = type { %"struct.std::__1::__compressed_pair_elem.1987" }
%"struct.std::__1::__compressed_pair_elem.1987" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.1988", %"class.WTF::Vector.1994", %"class.WTF::Vector.1994", %"class.WTF::HashMap.1999" }
%"class.WTF::Vector.1988" = type { %"class.WTF::VectorBuffer.1989" }
%"class.WTF::VectorBuffer.1989" = type { %"class.WTF::VectorBufferBase.1990" }
%"class.WTF::VectorBufferBase.1990" = type { %"struct.std::__1::pair.1991"*, i32, i32 }
%"struct.std::__1::pair.1991" = type opaque
%"class.WTF::Vector.1994" = type { %"class.WTF::VectorBuffer.1995" }
%"class.WTF::VectorBuffer.1995" = type { %"class.WTF::VectorBufferBase.1996" }
%"class.WTF::VectorBufferBase.1996" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.1999" = type { %"class.WTF::HashTable.2000" }
%"class.WTF::HashTable.2000" = type <{ %"struct.WTF::KeyValuePair.2003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2003" = type opaque
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012", [64 x i8] }
%"class.WTF::VectorBufferBase.2012" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.WTF::Vector.2015" = type { %"class.WTF::VectorBuffer.2016" }
%"class.WTF::VectorBuffer.2016" = type { %"class.WTF::VectorBufferBase.2017" }
%"class.WTF::VectorBufferBase.2017" = type { %class.scoped_refptr.1782*, i32, i32 }
%class.scoped_refptr.2020 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.absl::optional.1872" = type { %"class.absl::optional_internal::optional_data.1873" }
%"class.absl::optional_internal::optional_data.1873" = type { %"class.absl::optional_internal::optional_data_base.1874" }
%"class.absl::optional_internal::optional_data_base.1874" = type { %"class.absl::optional_internal::optional_data_dtor_base.1875" }
%"class.absl::optional_internal::optional_data_dtor_base.1875" = type { i8, %union.anon.1876 }
%union.anon.1876 = type { %"struct.blink::LogicalRect" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGFragmentItemsBuilder" = type <{ %"class.WTF::Vector.2021", %"class.WTF::String", %"class.WTF::String", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"*, %"class.WTF::HashMap.2045", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineNode", %"class.blink::WritingDirectionMode", i8, i8, i8, [3 x i8] }>
%"class.WTF::Vector.2021" = type { %"class.WTF::VectorBuffer.2022" }
%"class.WTF::VectorBuffer.2022" = type { %"class.WTF::VectorBufferBase.2023", [9216 x i8] }
%"class.WTF::VectorBufferBase.2023" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2024, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2024 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2025, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2025 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2026", %class.scoped_refptr.1950, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2028] }
%"class.WTF::RefCounted.2026" = type { %"class.base::RefCounted.2027" }
%"class.base::RefCounted.2027" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.2028 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2037 }
%union.anon.2037 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.WTF::HashMap.2045" = type { %"class.WTF::HashTable.2046" }
%"class.WTF::HashTable.2046" = type <{ %"struct.WTF::KeyValuePair.2049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2049" = type opaque
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.2040" }
%"class.WTF::Vector.2040" = type { %"class.WTF::VectorBuffer.2041" }
%"class.WTF::VectorBuffer.2041" = type { %"class.WTF::VectorBufferBase.2042", [1920 x i8] }
%"class.WTF::VectorBufferBase.2042" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1631, %"class.blink::NGInlineItem"*, %class.scoped_refptr.2025, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.absl::optional.2050" = type { %"class.absl::optional_internal::optional_data.2051" }
%"class.absl::optional_internal::optional_data.2051" = type { %"class.absl::optional_internal::optional_data_base.2052" }
%"class.absl::optional_internal::optional_data_base.2052" = type { %"class.absl::optional_internal::optional_data_dtor_base.2053" }
%"class.absl::optional_internal::optional_data_dtor_base.2053" = type { i8, %union.anon.2054 }
%union.anon.2054 = type { i32 }
%"class.absl::optional.2055" = type { %"class.absl::optional_internal::optional_data.2056" }
%"class.absl::optional_internal::optional_data.2056" = type { %"class.absl::optional_internal::optional_data_base.2057" }
%"class.absl::optional_internal::optional_data_base.2057" = type { %"class.absl::optional_internal::optional_data_dtor_base.2058" }
%"class.absl::optional_internal::optional_data_dtor_base.2058" = type { i8, %union.anon.2059 }
%union.anon.2059 = type { %"struct.blink::PhysicalRect" }
%"class.absl::optional.2060" = type { %"class.absl::optional_internal::optional_data.2061" }
%"class.absl::optional_internal::optional_data.2061" = type { %"class.absl::optional_internal::optional_data_base.2062" }
%"class.absl::optional_internal::optional_data_base.2062" = type { %"class.absl::optional_internal::optional_data_dtor_base.2063" }
%"class.absl::optional_internal::optional_data_dtor_base.2063" = type { i8, %union.anon.2064 }
%union.anon.2064 = type { %"class.WTF::Vector.2065" }
%"class.WTF::Vector.2065" = type { %"class.WTF::VectorBuffer.2066" }
%"class.WTF::VectorBuffer.2066" = type { %"class.WTF::VectorBufferBase.2067" }
%"class.WTF::VectorBufferBase.2067" = type { %"struct.blink::NGTableFragmentData::ColumnGeometry"*, i32, i32 }
%"struct.blink::NGTableFragmentData::ColumnGeometry" = type { i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGLayoutInputNode" }
%class.scoped_refptr.2070 = type { %"class.blink::NGTableBorders"* }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.2071", [4 x i8], %"class.WTF::Vector.2073", %"class.WTF::Vector.2078", i32, %"class.absl::optional.2083", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.2071" = type { %"class.base::RefCounted.2072" }
%"class.base::RefCounted.2072" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2073" = type { %"class.WTF::VectorBuffer.2074" }
%"class.WTF::VectorBuffer.2074" = type { %"class.WTF::VectorBufferBase.2075" }
%"class.WTF::VectorBufferBase.2075" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.2078" = type { %"class.WTF::VectorBuffer.2079" }
%"class.WTF::VectorBuffer.2079" = type { %"class.WTF::VectorBufferBase.2080" }
%"class.WTF::VectorBufferBase.2080" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.2083" = type { %"class.absl::optional_internal::optional_data.2084" }
%"class.absl::optional_internal::optional_data.2084" = type { %"class.absl::optional_internal::optional_data_base.2085" }
%"class.absl::optional_internal::optional_data_base.2085" = type { %"class.absl::optional_internal::optional_data_dtor_base.2086" }
%"class.absl::optional_internal::optional_data_dtor_base.2086" = type { i8, %union.anon.2087 }
%union.anon.2087 = type { %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.2088" = type { %"class.std::__1::__compressed_pair.2089" }
%"class.std::__1::__compressed_pair.2089" = type { %"struct.std::__1::__compressed_pair_elem.2090" }
%"struct.std::__1::__compressed_pair_elem.2090" = type { %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* }
%"struct.blink::NGTableFragmentData::CollapsedBordersGeometry" = type { %"class.WTF::Vector.2091", %"class.WTF::Vector.2091" }
%"class.WTF::Vector.2091" = type { %"class.WTF::VectorBuffer.2092" }
%"class.WTF::VectorBuffer.2092" = type { %"class.WTF::VectorBufferBase.2093" }
%"class.WTF::VectorBufferBase.2093" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.absl::optional.2099" = type { %"class.absl::optional_internal::optional_data.2100" }
%"class.absl::optional_internal::optional_data.2100" = type { %"class.absl::optional_internal::optional_data_base.2101" }
%"class.absl::optional_internal::optional_data_base.2101" = type { %"class.absl::optional_internal::optional_data_dtor_base.2102" }
%"class.absl::optional_internal::optional_data_dtor_base.2102" = type { i8, %union.anon.2103 }
%union.anon.2103 = type { i32 }
%"class.std::__1::unique_ptr.2104" = type { %"class.std::__1::__compressed_pair.2105" }
%"class.std::__1::__compressed_pair.2105" = type { %"struct.std::__1::__compressed_pair_elem.2106" }
%"struct.std::__1::__compressed_pair_elem.2106" = type { %"struct.blink::NGGridData"* }
%"struct.blink::LogicalBoxSides" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2110" = type { %"class.std::__1::__compressed_pair.2111" }
%"class.std::__1::__compressed_pair.2111" = type { %"struct.std::__1::__compressed_pair_elem.2112" }
%"struct.std::__1::__compressed_pair_elem.2112" = type { %"struct.blink::NGMathMLPaintInfo"* }
%"struct.blink::NGMathMLPaintInfo" = type <{ i16, [6 x i8], %class.scoped_refptr.2025, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", %"class.absl::optional.1636", [4 x i8] }>
%"class.blink::ShapeOutsideInfo" = type opaque
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1647", [4 x i8], %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.WTF::Vector.1659", %"class.WTF::Vector.1664", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"struct.std::__1::default_delete.1774" = type { i8 }

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink46ComputeMarginBoxInlineSizeForUnpositionedFloatEPNS_19NGUnpositionedFloatE(%"struct.blink::NGUnpositionedFloat"*) local_unnamed_addr #0 {
  tail call fastcc void @_ZN5blink12_GLOBAL__N_131LayoutFloatWithoutFragmentationEPNS_19NGUnpositionedFloatE(%"struct.blink::NGUnpositionedFloat"* %0)
  %2 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 8, i32 0
  %3 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %3, i64 0, i32 3, i32 0
  %5 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 6
  %7 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %7, i64 0, i32 3, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 112
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %5, i64 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %5, i64 0, i32 2, i32 1, i32 0
  %14 = select i1 %11, i32* %12, i32* %13
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 9, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 9, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %19) #10
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %25) #10
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  %32 = icmp sgt i32 %31, 0
  %33 = select i1 %32, i32 %31, i32 0
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_131LayoutFloatWithoutFragmentationEPNS_19NGUnpositionedFloatE(%"struct.blink::NGUnpositionedFloat"*) unnamed_addr #0 {
  %2 = alloca %"class.blink::NGConstraintSpace", align 8
  %3 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %3, i64 0, i32 0
  %5 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %4, align 8
  %6 = icmp eq %"class.blink::NGLayoutResult"* %5, null
  br i1 %6, label %7, label %49

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NGConstraintSpace"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %11 = bitcast %"class.blink::NGConstraintSpace"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_129CreateConstraintSpaceForFloatERKNS_19NGUnpositionedFloatEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::NGConstraintSpace"* nonnull sret %2, %"struct.blink::NGUnpositionedFloat"* dereferenceable(96) %0, i64 0)
  %12 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 0
  %13 = call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* %12, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %2, %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGEarlyBreak"* null) #10
  %14 = ptrtoint %"class.blink::NGLayoutResult"* %13 to i64
  %15 = bitcast %class.scoped_refptr.1631* %3 to i64*
  %16 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %4, align 8
  store i64 %14, i64* %15, align 8
  %17 = icmp eq %"class.blink::NGLayoutResult"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %16) #10
  %24 = bitcast %"class.blink::NGLayoutResult"* %16 to i8*
  call void @free(i8* %24) #10
  br label %25

25:                                               ; preds = %7, %18, %23
  %26 = bitcast %"struct.blink::NGUnpositionedFloat"* %0 to %"class.blink::LayoutObject"**
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 6
  %31 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %30, align 8
  %32 = call { i64, i64 } @_ZN5blink17ComputeMarginsForERKNS_17NGConstraintSpaceERKNS_13ComputedStyleES2_(%"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %29, %"class.blink::NGConstraintSpace"* dereferenceable(32) %31) #10
  %33 = extractvalue { i64, i64 } %32, 0
  %34 = extractvalue { i64, i64 } %32, 1
  %35 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 9
  %36 = bitcast %"struct.blink::NGBoxStrut"* %35 to i64*
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %0, i64 0, i32 9, i32 2
  %38 = bitcast %"class.blink::LayoutUnit"* %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = load i32, i32* %10, align 8
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %25
  %43 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %9, align 8
  %44 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %43) #10
  %46 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %43 to i8*
  call void @free(i8* %46) #10
  br label %47

47:                                               ; preds = %25, %42, %45
  %48 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 2, i32 0
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* %48, %"class.blink::NGExclusionSpaceInternal"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  br label %49

49:                                               ; preds = %1, %47
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13PositionFloatEPNS_19NGUnpositionedFloatEPNS_16NGExclusionSpaceE(%"struct.blink::NGPositionedFloat"* noalias nocapture sret, %"struct.blink::NGUnpositionedFloat"*, %"class.blink::NGExclusionSpace"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::unique_ptr.1731", align 8
  %5 = alloca %"class.blink::NGConstraintSpace", align 8
  %6 = alloca %"class.std::__1::unique_ptr.1731", align 8
  %7 = alloca %"class.blink::NGBlockNode", align 8
  %8 = alloca %"struct.blink::NGBoxStrut", align 8
  %9 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %10 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %11 = alloca %"class.blink::NGConstraintSpace", align 8
  %12 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %13 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 6
  %14 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %13, align 8
  %15 = bitcast %"class.blink::NGBlockNode"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %7, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %7, i64 0, i32 0, i32 1
  %18 = bitcast %"struct.blink::NGUnpositionedFloat"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %18, i64 16, i1 false)
  %19 = bitcast %"class.blink::NGBlockNode"* %7 to %"class.blink::LayoutObject"**
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %22 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %23 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %23, i64 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = lshr i160 %26, 102
  %28 = trunc i160 %27 to i8
  %29 = and i8 %28, 3
  %30 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 3, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 7
  %35 = icmp ne i8 %29, %34
  %36 = and i32 %31, 1
  %37 = icmp eq i32 %36, 0
  %38 = or i1 %37, %35
  %39 = bitcast %"class.blink::ComputedStyleBase"* %23 to %"class.blink::ComputedStyle"*
  br i1 %38, label %47, label %40

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1, i32 0
  %42 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %42, i64 0, i32 6
  %44 = load i16, i16* %43, align 8
  %45 = and i16 %44, 384
  %46 = icmp ne i16 %45, 0
  br label %47

47:                                               ; preds = %3, %40
  %48 = phi i1 [ false, %3 ], [ %46, %40 ]
  %49 = bitcast %"struct.blink::NGBoxStrut"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #10
  %50 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 2
  %53 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %52, i64 0, i32 0
  %54 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #10
  br i1 %48, label %86, label %55

55:                                               ; preds = %47
  tail call fastcc void @_ZN5blink12_GLOBAL__N_131LayoutFloatWithoutFragmentationEPNS_19NGUnpositionedFloatE(%"struct.blink::NGUnpositionedFloat"* %1)
  %56 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 8, i32 0
  %57 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %56, align 8
  %58 = icmp eq %"class.blink::NGLayoutResult"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %60) #10
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 9
  %63 = bitcast %"struct.blink::NGBoxStrut"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 4 %63, i64 16, i1 false)
  %64 = load i32, i32* %30, align 8
  %65 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %57, i64 0, i32 3, i32 0
  %66 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %65, align 8
  %67 = bitcast %"struct.blink::NGLayoutOpportunity"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #10
  %68 = and i32 %64, 112
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %66, i64 0, i32 2, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %66, i64 0, i32 2, i32 1, i32 0
  %72 = select i1 %69, i32* %70, i32* %71
  %73 = load i32, i32* %72, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_129FindLayoutOpportunityForFloatERKNS_19NGUnpositionedFloatERKNS_16NGExclusionSpaceERKNS_10NGBoxStrutENS_10LayoutUnitE(%"struct.blink::NGLayoutOpportunity"* nonnull sret %9, %"struct.blink::NGUnpositionedFloat"* dereferenceable(96) %1, %"class.blink::NGExclusionSpace"* dereferenceable(8) %2, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %8, i32 %73)
  %74 = bitcast %"struct.blink::NGLayoutOpportunity"* %9 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = lshr i64 %75, 32
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %9, i64 0, i32 0, i32 1
  %80 = bitcast %"struct.blink::NGBfcOffset"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %9, i64 0, i32 1
  %84 = bitcast %class.scoped_refptr.1770* %83 to i64*
  %85 = load i64, i64* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  br label %372

86:                                               ; preds = %47
  %87 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 3, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %39, i32 %88) #10
  %90 = extractvalue { i64, i64 } %89, 0
  %91 = trunc i64 %90 to i32
  %92 = lshr i64 %90, 32
  %93 = extractvalue { i64, i64 } %89, 1
  switch i8 %34, label %115 [
    i8 0, label %94
    i8 1, label %101
    i8 3, label %101
    i8 2, label %105
    i8 4, label %110
  ]

94:                                               ; preds = %86
  %95 = trunc i64 %92 to i32
  %96 = lshr i64 %93, 32
  %97 = trunc i64 %96 to i32
  %98 = and i64 %90, 4294967295
  %99 = shl i64 %93, 32
  %100 = or i64 %99, %98
  br label %115

101:                                              ; preds = %86, %86
  %102 = trunc i64 %93 to i32
  %103 = and i64 %93, -4294967296
  %104 = or i64 %103, %92
  br label %115

105:                                              ; preds = %86
  %106 = trunc i64 %93 to i32
  %107 = lshr i64 %93, 32
  %108 = and i64 %90, -4294967296
  %109 = or i64 %108, %107
  br label %115

110:                                              ; preds = %86
  %111 = trunc i64 %93 to i32
  %112 = lshr i64 %93, 32
  %113 = and i64 %90, -4294967296
  %114 = or i64 %113, %112
  br label %115

115:                                              ; preds = %86, %94, %101, %105, %110
  %116 = phi i64 [ 0, %86 ], [ %114, %110 ], [ %109, %105 ], [ %104, %101 ], [ %100, %94 ]
  %117 = phi i32 [ 0, %86 ], [ %91, %110 ], [ %106, %105 ], [ %102, %101 ], [ %95, %94 ]
  %118 = phi i32 [ 0, %86 ], [ %111, %110 ], [ %91, %105 ], [ %91, %101 ], [ %97, %94 ]
  %119 = trunc i32 %31 to i8
  %120 = icmp slt i8 %119, 0
  %121 = select i1 %120, i32 %118, i32 %117
  %122 = select i1 %120, i32 %117, i32 %118
  %123 = zext i32 %121 to i64
  %124 = shl nuw i64 %123, 32
  %125 = zext i32 %122 to i64
  %126 = or i64 %124, %125
  %127 = bitcast %"struct.blink::NGBoxStrut"* %8 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"class.blink::LayoutUnit"* %52 to i64*
  store i64 %116, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 1, i32 0
  %130 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %129, align 8
  %131 = icmp eq %"class.blink::NGBlockBreakToken"* %130, null
  %132 = trunc i64 %116 to i32
  br i1 %131, label %160, label %133

133:                                              ; preds = %115
  %134 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %130, i64 0, i32 0, i32 4
  %135 = load i16, i16* %134, align 8
  %136 = and i16 %135, 32
  %137 = icmp eq i16 %136, 0
  br i1 %137, label %153, label %138

138:                                              ; preds = %133
  %139 = and i16 %135, 64
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %141, label %155

141:                                              ; preds = %138
  %142 = and i16 %135, 1
  %143 = icmp eq i16 %142, 0
  br i1 %143, label %144, label %153

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %130, i64 0, i32 0, i32 3
  %146 = bitcast %"class.blink::LayoutBox"** %145 to %"class.blink::LayoutObject"**
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 4
  %149 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %148 to i96*
  %150 = load i96, i96* %149, align 4
  %151 = and i96 %150, 8388608
  %152 = icmp eq i96 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %144, %141, %133
  %154 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 2, i32 0
  store i32 0, i32* %154, align 8
  br label %155

155:                                              ; preds = %153, %144, %138
  %156 = phi i32 [ 0, %153 ], [ %132, %144 ], [ %132, %138 ]
  %157 = and i16 %135, 256
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  store i32 0, i32* %54, align 4
  br label %160

160:                                              ; preds = %115, %155, %159
  %161 = phi i32 [ %132, %115 ], [ %156, %155 ], [ %156, %159 ]
  %162 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 8, i32 0
  %163 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %162, align 8
  %164 = icmp eq %"class.blink::NGLayoutResult"* %163, null
  br i1 %164, label %191, label %165

165:                                              ; preds = %160
  %166 = load i32, i32* %30, align 8
  %167 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %163, i64 0, i32 3, i32 0
  %168 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %167, align 8
  %169 = bitcast %"struct.blink::NGLayoutOpportunity"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #10
  %170 = and i32 %166, 112
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %168, i64 0, i32 2, i32 0, i32 0
  %173 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %168, i64 0, i32 2, i32 1, i32 0
  %174 = select i1 %171, i32* %172, i32* %173
  %175 = load i32, i32* %174, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_129FindLayoutOpportunityForFloatERKNS_19NGUnpositionedFloatERKNS_16NGExclusionSpaceERKNS_10NGBoxStrutENS_10LayoutUnitE(%"struct.blink::NGLayoutOpportunity"* nonnull sret %10, %"struct.blink::NGUnpositionedFloat"* dereferenceable(96) %1, %"class.blink::NGExclusionSpace"* dereferenceable(8) %2, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %8, i32 %175)
  %176 = bitcast %"struct.blink::NGLayoutOpportunity"* %10 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = trunc i64 %177 to i32
  %179 = lshr i64 %177, 32
  %180 = trunc i64 %179 to i32
  %181 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %10, i64 0, i32 0, i32 1
  %182 = bitcast %"struct.blink::NGBfcOffset"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = trunc i64 %183 to i32
  %185 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %10, i64 0, i32 1
  %186 = bitcast %class.scoped_refptr.1770* %185 to i64*
  %187 = load i64, i64* %186, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #10
  %188 = icmp slt i32 %161, 0
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %180, i32 %161) #10
  br label %197

191:                                              ; preds = %160
  %192 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 5, i32 1, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %161, 0
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %193, i32 %161) #10
  br label %197

197:                                              ; preds = %191, %165
  %198 = phi { i32, i1 } [ %196, %191 ], [ %190, %165 ]
  %199 = phi i32 [ %195, %191 ], [ %189, %165 ]
  %200 = phi i64 [ 0, %191 ], [ %187, %165 ]
  %201 = phi i32 [ 2147483647, %191 ], [ %184, %165 ]
  %202 = phi i32 [ -2147483648, %191 ], [ %178, %165 ]
  %203 = phi i32 [ -2147483648, %191 ], [ %180, %165 ]
  %204 = phi i8 [ 1, %191 ], [ 0, %165 ]
  %205 = extractvalue { i32, i1 } %198, 1
  %206 = extractvalue { i32, i1 } %198, 0
  %207 = select i1 %205, i32 %199, i32 %206
  %208 = bitcast %"class.blink::NGConstraintSpace"* %11 to i8*
  %209 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %11, i64 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %11, i64 0, i32 3, i32 0
  %211 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 1
  %213 = bitcast %"struct.blink::NGBfcOffset"* %212 to i64*
  %214 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 2
  %215 = bitcast %"struct.blink::NGLayoutOpportunity"* %12 to i8*
  %216 = bitcast %"struct.blink::NGLayoutOpportunity"* %12 to i64*
  %217 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %12, i64 0, i32 0, i32 1
  %218 = bitcast %"struct.blink::NGBfcOffset"* %217 to i64*
  %219 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %12, i64 0, i32 1
  %220 = getelementptr inbounds %class.scoped_refptr.1770, %class.scoped_refptr.1770* %219, i64 0, i32 0
  %221 = bitcast %class.scoped_refptr.1770* %219 to i64*
  %222 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %12, i64 0, i32 1, i32 0
  %223 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %11, i64 0, i32 2, i32 0
  %224 = bitcast %"class.blink::NGConstraintSpace"* %11 to i8*
  br label %225

225:                                              ; preds = %333, %197
  %226 = phi i32 [ %207, %197 ], [ %316, %333 ]
  %227 = phi i64 [ %200, %197 ], [ %317, %333 ]
  %228 = phi i32 [ %201, %197 ], [ %318, %333 ]
  %229 = phi i32 [ %202, %197 ], [ %319, %333 ]
  %230 = phi i32 [ %203, %197 ], [ %320, %333 ]
  %231 = phi i64 [ 0, %197 ], [ %321, %333 ]
  %232 = phi i8 [ %204, %197 ], [ %323, %333 ]
  %233 = phi i8 [ 0, %197 ], [ %324, %333 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %208) #10
  %234 = zext i32 %226 to i64
  %235 = shl nuw i64 %234, 32
  %236 = or i64 %235, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 -86, i64 32, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_129CreateConstraintSpaceForFloatERKNS_19NGUnpositionedFloatEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::NGConstraintSpace"* nonnull sret %11, %"struct.blink::NGUnpositionedFloat"* dereferenceable(96) %1, i64 %236)
  %237 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %129, align 8
  %238 = call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* nonnull %7, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %11, %"class.blink::NGBlockBreakToken"* %237, %"class.blink::NGEarlyBreak"* null) #10
  %239 = ptrtoint %"class.blink::NGLayoutResult"* %238 to i64
  %240 = inttoptr i64 %231 to %"class.blink::NGLayoutResult"*
  %241 = icmp eq i64 %231, 0
  br i1 %241, label %249, label %242

242:                                              ; preds = %225
  %243 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %240, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %243) #10
  %244 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %240, i64 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %242
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %240) #10
  %248 = inttoptr i64 %231 to i8*
  call void @free(i8* %248) #10
  br label %249

249:                                              ; preds = %225, %242, %247
  %250 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %238, i64 0, i32 6, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = and i32 %251, 29360128
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %249
  store %"class.blink::NGLayoutResult"* %238, %"class.blink::NGLayoutResult"** %211, align 8
  %255 = icmp eq %"class.blink::NGLayoutResult"* %238, null
  br i1 %255, label %256, label %257

256:                                              ; preds = %254
  store i64 0, i64* %213, align 8
  store i8 1, i8* %214, align 8
  br label %315

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %238, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %258) #10
  store i64 0, i64* %213, align 8
  store i8 1, i8* %214, align 8
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #10
  %259 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %238, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %315

262:                                              ; preds = %257
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %238) #10
  %263 = bitcast %"class.blink::NGLayoutResult"* %238 to i8*
  call void @free(i8* %263) #10
  br label %315

264:                                              ; preds = %249
  %265 = and i8 %232, 1
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %315, label %267

267:                                              ; preds = %264
  %268 = load i32, i32* %30, align 8
  %269 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %238, i64 0, i32 3, i32 0
  %270 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %269, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #10
  %271 = and i32 %268, 112
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %270, i64 0, i32 2, i32 0, i32 0
  %274 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %270, i64 0, i32 2, i32 1, i32 0
  %275 = select i1 %272, i32* %273, i32* %274
  %276 = load i32, i32* %275, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_129FindLayoutOpportunityForFloatERKNS_19NGUnpositionedFloatERKNS_16NGExclusionSpaceERKNS_10NGBoxStrutENS_10LayoutUnitE(%"struct.blink::NGLayoutOpportunity"* nonnull sret %12, %"struct.blink::NGUnpositionedFloat"* dereferenceable(96) %1, %"class.blink::NGExclusionSpace"* dereferenceable(8) %2, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %8, i32 %276)
  %277 = load i64, i64* %216, align 8
  %278 = trunc i64 %277 to i32
  %279 = lshr i64 %277, 32
  %280 = trunc i64 %279 to i32
  %281 = load i64, i64* %218, align 8
  %282 = trunc i64 %281 to i32
  %283 = load i64, i64* %221, align 8
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %220, align 8
  %284 = inttoptr i64 %227 to %"class.blink::NGShapeExclusions"*
  %285 = icmp eq i64 %227, 0
  br i1 %285, label %293, label %286

286:                                              ; preds = %267
  %287 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %284, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %287) #10
  %288 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %284, i64 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %286
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %284) #10
  %292 = inttoptr i64 %227 to i8*
  call void @free(i8* %292) #10
  br label %293

293:                                              ; preds = %267, %286, %291
  %294 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %222, align 8
  %295 = icmp eq %"class.blink::NGShapeExclusions"* %294, null
  br i1 %295, label %303, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %294, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %297) #10
  %298 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %294, i64 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %303

301:                                              ; preds = %296
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %294) #10
  %302 = bitcast %"class.blink::NGShapeExclusions"* %294 to i8*
  call void @free(i8* %302) #10
  br label %303

303:                                              ; preds = %293, %296, %301
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #10
  %304 = load i32, i32* %53, align 8
  %305 = icmp slt i32 %304, 0
  %306 = select i1 %305, i32 -2147483648, i32 2147483647
  %307 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %280, i32 %304) #10
  %308 = extractvalue { i32, i1 } %307, 1
  %309 = extractvalue { i32, i1 } %307, 0
  %310 = select i1 %308, i32 %306, i32 %309, !prof !2
  %311 = icmp slt i32 %226, %310
  %312 = select i1 %311, i32 %310, i32 %226
  %313 = select i1 %311, i32 3, i32 2
  %314 = select i1 %311, i8 0, i8 %232
  br label %315

315:                                              ; preds = %303, %262, %257, %256, %264
  %316 = phi i32 [ %226, %264 ], [ %226, %256 ], [ %226, %257 ], [ %226, %262 ], [ %312, %303 ]
  %317 = phi i64 [ %227, %264 ], [ %227, %256 ], [ %227, %257 ], [ %227, %262 ], [ %283, %303 ]
  %318 = phi i32 [ %228, %264 ], [ %228, %256 ], [ %228, %257 ], [ %228, %262 ], [ %282, %303 ]
  %319 = phi i32 [ %229, %264 ], [ %229, %256 ], [ %229, %257 ], [ %229, %262 ], [ %278, %303 ]
  %320 = phi i32 [ %230, %264 ], [ %230, %256 ], [ %230, %257 ], [ %230, %262 ], [ %280, %303 ]
  %321 = phi i64 [ %239, %264 ], [ 0, %256 ], [ 0, %257 ], [ 0, %262 ], [ %239, %303 ]
  %322 = phi i32 [ 2, %264 ], [ 1, %256 ], [ 1, %257 ], [ 1, %262 ], [ %313, %303 ]
  %323 = phi i8 [ %232, %264 ], [ %232, %256 ], [ %232, %257 ], [ %232, %262 ], [ %314, %303 ]
  %324 = phi i8 [ %233, %264 ], [ 1, %256 ], [ 1, %257 ], [ 1, %262 ], [ %233, %303 ]
  %325 = load i32, i32* %210, align 8
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %333, label %328

328:                                              ; preds = %315
  %329 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %209, align 8
  %330 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %329, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %328
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %329) #10
  %332 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %329 to i8*
  call void @free(i8* %332) #10
  br label %333

333:                                              ; preds = %315, %328, %331
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* %223, %"class.blink::NGExclusionSpaceInternal"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %208) #10
  switch i32 %322, label %894 [
    i32 2, label %334
    i32 3, label %225
  ]

334:                                              ; preds = %333
  %335 = inttoptr i64 %321 to %"class.blink::NGLayoutResult"*
  %336 = load i32, i32* %30, align 8
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %344, label %339

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1, i32 0
  %341 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %340, align 8
  %342 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %341, i64 0, i32 5, i32 0
  %343 = load i32, i32* %342, align 4
  br label %344

344:                                              ; preds = %334, %339
  %345 = phi i32 [ %343, %339 ], [ 0, %334 ]
  %346 = icmp slt i32 %320, 0
  %347 = select i1 %346, i32 -2147483648, i32 2147483647
  %348 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %345, i32 %320) #10
  %349 = extractvalue { i32, i1 } %348, 1
  %350 = extractvalue { i32, i1 } %348, 0
  %351 = select i1 %349, i32 %347, i32 %350, !prof !2
  %352 = icmp sgt i32 %351, 0
  br i1 %352, label %353, label %372

353:                                              ; preds = %344
  %354 = load i32, i32* %53, align 8
  %355 = icmp slt i32 %354, 0
  %356 = select i1 %355, i32 -2147483648, i32 2147483647
  %357 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %351, i32 %354) #10
  %358 = extractvalue { i32, i1 } %357, 1
  %359 = extractvalue { i32, i1 } %357, 0
  %360 = select i1 %358, i32 %356, i32 %359, !prof !2
  %361 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %16, align 8
  %362 = bitcast i8* %17 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = call zeroext i1 @_ZN5blink18MovePastBreakpointERKNS_17NGConstraintSpaceENS_17NGLayoutInputNodeERKNS_14NGLayoutResultENS_10LayoutUnitENS_13NGBreakAppealEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %14, %"class.blink::LayoutBox"* %361, i64 %363, %"class.blink::NGLayoutResult"* dereferenceable(64) %335, i32 %360, i32 3, %"class.blink::NGBoxFragmentBuilder"* null) #10
  br i1 %364, label %365, label %372

365:                                              ; preds = %353
  %366 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %335, i64 0, i32 3, i32 0
  %367 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %366, align 8
  %368 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %367, i64 0, i32 4, i32 0
  %369 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %368, align 8
  %370 = icmp eq %"class.blink::NGBreakToken"* %369, null
  br i1 %370, label %372, label %371

371:                                              ; preds = %365
  store i32 0, i32* %54, align 4
  br label %372

372:                                              ; preds = %344, %353, %365, %371, %61
  %373 = phi i64 [ %85, %61 ], [ %317, %371 ], [ %317, %365 ], [ %317, %353 ], [ %317, %344 ]
  %374 = phi i32 [ %82, %61 ], [ %318, %371 ], [ %318, %365 ], [ %318, %353 ], [ %318, %344 ]
  %375 = phi i32 [ %76, %61 ], [ %319, %371 ], [ %319, %365 ], [ %319, %353 ], [ %319, %344 ]
  %376 = phi i32 [ %78, %61 ], [ %320, %371 ], [ %320, %365 ], [ %320, %353 ], [ %320, %344 ]
  %377 = phi %"class.blink::NGLayoutResult"* [ %57, %61 ], [ %335, %371 ], [ %335, %365 ], [ %335, %353 ], [ %335, %344 ]
  %378 = phi i8 [ 0, %61 ], [ %324, %371 ], [ %324, %365 ], [ 1, %353 ], [ %324, %344 ]
  %379 = load i32, i32* %30, align 8
  %380 = lshr i32 %379, 4
  %381 = trunc i32 %380 to i8
  %382 = and i8 %381, 7
  %383 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %377, i64 0, i32 3, i32 0
  %384 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %383, align 8
  %385 = lshr i32 %379, 7
  %386 = trunc i32 %385 to i8
  %387 = and i8 %386, 1
  %388 = bitcast %"struct.blink::NGUnpositionedFloat"* %1 to %"class.blink::LayoutObject"**
  %389 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %389, i64 0, i32 5, i32 0
  %391 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %391, i64 0, i32 0, i32 9
  %393 = bitcast [20 x i8]* %392 to i160*
  %394 = load i160, i160* %393, align 8
  %395 = lshr i160 %394, 71
  %396 = trunc i160 %395 to i32
  %397 = and i32 %396, 7
  %398 = add nsw i32 %397, -3
  %399 = icmp ult i32 %398, 2
  %400 = bitcast %"class.blink::LayoutObject"* %389 to %"class.blink::LayoutBox"*
  br i1 %399, label %401, label %405

401:                                              ; preds = %372
  %402 = icmp eq i8 %387, 0
  %403 = icmp ne i32 %397, 3
  %404 = xor i1 %402, %403
  br i1 %404, label %449, label %407

405:                                              ; preds = %372
  %406 = icmp eq i32 %397, 2
  br i1 %406, label %407, label %449

407:                                              ; preds = %401, %405
  %408 = icmp eq i8 %382, 0
  %409 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %384, i64 0, i32 2, i32 0, i32 0
  %410 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %384, i64 0, i32 2, i32 1, i32 0
  %411 = select i1 %408, i32* %409, i32* %410
  %412 = load i32, i32* %411, align 4
  %413 = load i32, i32* %50, align 8
  %414 = load i32, i32* %51, align 4
  %415 = icmp slt i32 %414, 0
  %416 = select i1 %415, i32 -2147483648, i32 2147483647
  %417 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %413, i32 %414) #10
  %418 = extractvalue { i32, i1 } %417, 1
  %419 = extractvalue { i32, i1 } %417, 0
  %420 = select i1 %418, i32 %416, i32 %419, !prof !2
  %421 = icmp slt i32 %420, 0
  %422 = select i1 %421, i32 -2147483648, i32 2147483647
  %423 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %412, i32 %420) #10
  %424 = extractvalue { i32, i1 } %423, 1
  %425 = extractvalue { i32, i1 } %423, 0
  %426 = select i1 %424, i32 %422, i32 %425, !prof !2
  %427 = icmp eq i32 %374, 2147483647
  br i1 %427, label %435, label %428

428:                                              ; preds = %407
  %429 = icmp sgt i32 %375, -1
  %430 = select i1 %429, i32 -2147483648, i32 2147483647
  %431 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %374, i32 %375) #10
  %432 = extractvalue { i32, i1 } %431, 1
  %433 = extractvalue { i32, i1 } %431, 0
  %434 = select i1 %432, i32 %430, i32 %433, !prof !2
  br label %435

435:                                              ; preds = %407, %428
  %436 = phi i32 [ %434, %428 ], [ 2147483647, %407 ]
  %437 = icmp sgt i32 %426, -1
  %438 = select i1 %437, i32 -2147483648, i32 2147483647
  %439 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %436, i32 %426) #10
  %440 = extractvalue { i32, i1 } %439, 1
  %441 = extractvalue { i32, i1 } %439, 0
  %442 = select i1 %440, i32 %438, i32 %441, !prof !2
  %443 = icmp slt i32 %442, 0
  %444 = select i1 %443, i32 -2147483648, i32 2147483647
  %445 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %375, i32 %442) #10
  %446 = extractvalue { i32, i1 } %445, 1
  %447 = extractvalue { i32, i1 } %445, 0
  %448 = select i1 %446, i32 %444, i32 %447, !prof !2
  br label %449

449:                                              ; preds = %401, %435, %405
  %450 = phi i32 [ %448, %435 ], [ %375, %405 ], [ %375, %401 ]
  %451 = and i8 %378, 1
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %528, label %453

453:                                              ; preds = %449
  %454 = and i32 %379, 1
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %483, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1, i32 0
  %458 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %457, align 8
  %459 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %458, i64 0, i32 6
  %460 = load i16, i16* %459, align 8
  %461 = and i16 %460, 384
  switch i16 %461, label %466 [
    i16 0, label %483
    i16 256, label %462
  ]

462:                                              ; preds = %456
  %463 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %458, i64 0, i32 4, i32 0
  %464 = load i32, i32* %463, align 8
  %465 = icmp eq i32 %464, -64
  br i1 %465, label %483, label %469

466:                                              ; preds = %456
  %467 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %458, i64 0, i32 4, i32 0
  %468 = load i32, i32* %467, align 8
  br label %469

469:                                              ; preds = %466, %462
  %470 = phi i32 [ %468, %466 ], [ %464, %462 ]
  %471 = icmp sgt i32 %470, 64
  %472 = select i1 %471, i32 %470, i32 64
  %473 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %458, i64 0, i32 5, i32 0
  %474 = load i32, i32* %473, align 4
  %475 = icmp sgt i32 %474, -1
  %476 = select i1 %475, i32 -2147483648, i32 2147483647
  %477 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %472, i32 %474) #10
  %478 = extractvalue { i32, i1 } %477, 1
  %479 = extractvalue { i32, i1 } %477, 0
  %480 = select i1 %478, i32 %476, i32 %479, !prof !2
  %481 = zext i32 %480 to i64
  %482 = shl nuw i64 %481, 32
  br label %483

483:                                              ; preds = %453, %456, %462, %469
  %484 = phi i64 [ %482, %469 ], [ -274877906944, %462 ], [ -274877906944, %453 ], [ -274877906944, %456 ]
  %485 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %486 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %485, i64 0, i32 5, i32 0
  %487 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %486, align 8
  %488 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %487, i64 0, i32 0, i32 9
  %489 = bitcast [20 x i8]* %488 to i160*
  %490 = load i160, i160* %489, align 8
  %491 = lshr i160 %490, 71
  %492 = trunc i160 %491 to i32
  %493 = and i32 %492, 7
  %494 = add nsw i32 %493, -3
  %495 = icmp ult i32 %494, 2
  br i1 %495, label %496, label %501

496:                                              ; preds = %483
  %497 = icmp eq i8 %387, 0
  %498 = icmp ne i32 %493, 3
  %499 = xor i1 %497, %498
  %500 = select i1 %499, i32 1, i32 2
  br label %501

501:                                              ; preds = %483, %496
  %502 = phi i32 [ %500, %496 ], [ %493, %483 ]
  %503 = call noalias i8* @malloc(i64 40) #10
  %504 = bitcast i8* %503 to %"struct.blink::NGExclusion"*
  %505 = bitcast i8* %503 to i32*
  store i32 1, i32* %505, align 4
  %506 = getelementptr inbounds i8, i8* %503, i64 4
  %507 = bitcast i8* %506 to i64*
  store i64 %484, i64* %507, align 4
  %508 = getelementptr inbounds i8, i8* %503, i64 12
  %509 = bitcast i8* %508 to i64*
  store i64 %484, i64* %509, align 4
  %510 = getelementptr inbounds i8, i8* %503, i64 20
  %511 = bitcast i8* %510 to i32*
  store i32 %502, i32* %511, align 4
  %512 = getelementptr inbounds i8, i8* %503, i64 24
  store i8 0, i8* %512, align 8
  %513 = getelementptr inbounds i8, i8* %503, i64 32
  %514 = bitcast i8* %513 to i64*
  store i64 0, i64* %514, align 8
  %515 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %516 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %515, align 8
  %517 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %516, null
  br i1 %517, label %518, label %525

518:                                              ; preds = %501
  %519 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %2, i64 0, i32 0
  %520 = bitcast %"class.std::__1::unique_ptr.1731"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %520) #10
  %521 = call noalias i8* @malloc(i64 40) #10
  %522 = bitcast i8* %521 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1Ev(%"class.blink::NGExclusionSpaceInternal"* %522) #10
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr.1731", %"class.std::__1::unique_ptr.1731"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %523, align 8
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* %519, %"class.blink::NGExclusionSpaceInternal"* %522) #10
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* nonnull %4, %"class.blink::NGExclusionSpaceInternal"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %520) #10
  %524 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %515, align 8
  br label %525

525:                                              ; preds = %518, %501
  %526 = phi %"class.blink::NGExclusionSpaceInternal"* [ %516, %501 ], [ %524, %518 ]
  call void @_ZN5blink24NGExclusionSpaceInternal3AddE13scoped_refptrIKNS_11NGExclusionEE(%"class.blink::NGExclusionSpaceInternal"* %526, %"struct.blink::NGExclusion"* %504) #10
  %527 = load i32, i32* %53, align 8
  br label %848

528:                                              ; preds = %449
  %529 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %530 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %529, i64 0, i32 5, i32 0
  %531 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %530, align 8
  %532 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %531, i64 0, i32 0, i32 9
  %533 = bitcast [20 x i8]* %532 to i160*
  %534 = load i160, i160* %533, align 8
  %535 = lshr i160 %534, 71
  %536 = trunc i160 %535 to i32
  %537 = and i32 %536, 7
  %538 = add nsw i32 %537, -3
  %539 = icmp ult i32 %538, 2
  br i1 %539, label %540, label %545

540:                                              ; preds = %528
  %541 = icmp eq i8 %387, 0
  %542 = icmp ne i32 %537, 3
  %543 = xor i1 %541, %542
  %544 = select i1 %543, i32 1, i32 2
  br label %545

545:                                              ; preds = %528, %540
  %546 = phi i32 [ %544, %540 ], [ %537, %528 ]
  %547 = zext i32 %376 to i64
  %548 = shl nuw i64 %547, 32
  %549 = zext i32 %450 to i64
  %550 = or i64 %548, %549
  %551 = icmp eq i8 %382, 0
  %552 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %384, i64 0, i32 2, i32 0, i32 0
  %553 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %384, i64 0, i32 2, i32 1, i32 0
  %554 = select i1 %551, i32* %552, i32* %553
  %555 = load i32, i32* %554, align 4
  %556 = load i32, i32* %50, align 8
  %557 = load i32, i32* %51, align 4
  %558 = icmp slt i32 %557, 0
  %559 = select i1 %558, i32 -2147483648, i32 2147483647
  %560 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %556, i32 %557) #10
  %561 = extractvalue { i32, i1 } %560, 1
  %562 = extractvalue { i32, i1 } %560, 0
  %563 = select i1 %561, i32 %559, i32 %562, !prof !2
  %564 = icmp slt i32 %563, 0
  %565 = select i1 %564, i32 -2147483648, i32 2147483647
  %566 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %555, i32 %563) #10
  %567 = extractvalue { i32, i1 } %566, 1
  %568 = extractvalue { i32, i1 } %566, 0
  %569 = select i1 %567, i32 %565, i32 %568, !prof !2
  %570 = icmp sgt i32 %569, 0
  %571 = select i1 %570, i32 %569, i32 0
  %572 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %450, i32 %571) #10
  %573 = extractvalue { i32, i1 } %572, 1
  %574 = extractvalue { i32, i1 } %572, 0
  %575 = select i1 %551, i32* %553, i32* %552
  %576 = load i32, i32* %575, align 4
  %577 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 2, i32 0
  %578 = load i32, i32* %577, align 8
  %579 = load i32, i32* %54, align 4
  %580 = icmp slt i32 %579, 0
  %581 = select i1 %580, i32 -2147483648, i32 2147483647
  %582 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %578, i32 %579) #10
  %583 = extractvalue { i32, i1 } %582, 1
  %584 = extractvalue { i32, i1 } %582, 0
  %585 = select i1 %583, i32 %581, i32 %584, !prof !2
  %586 = icmp slt i32 %585, 0
  %587 = select i1 %586, i32 -2147483648, i32 2147483647
  %588 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %576, i32 %585) #10
  %589 = extractvalue { i32, i1 } %588, 1
  %590 = extractvalue { i32, i1 } %588, 0
  %591 = select i1 %589, i32 %587, i32 %590, !prof !2
  %592 = icmp sgt i32 %591, 0
  %593 = select i1 %592, i32 %591, i32 0
  %594 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %376, i32 %593) #10
  %595 = extractvalue { i32, i1 } %594, 1
  %596 = extractvalue { i32, i1 } %594, 0
  %597 = call %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"* %400) #10
  %598 = icmp eq %"class.blink::ShapeOutsideInfo"* %597, null
  br i1 %598, label %816, label %599

599:                                              ; preds = %545
  %600 = bitcast %"struct.blink::NGUnpositionedFloat"* %1 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %13, align 8
  %603 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %602, i64 0, i32 3, i32 0
  %604 = load i32, i32* %603, align 8
  %605 = trunc i32 %604 to i8
  %606 = icmp sgt i8 %605, -1
  %607 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 0
  %608 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 1
  %609 = select i1 %606, %"class.blink::LayoutUnit"* %607, %"class.blink::LayoutUnit"* %608
  %610 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %609, i64 0, i32 0
  %611 = load i32, i32* %610, align 4
  %612 = select i1 %606, %"class.blink::LayoutUnit"* %608, %"class.blink::LayoutUnit"* %607
  %613 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %612, i64 0, i32 0
  %614 = load i32, i32* %613, align 4
  %615 = inttoptr i64 %601 to %"class.blink::LayoutObject"*
  %616 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %615, i64 0, i32 5, i32 0
  %617 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %616, align 8
  %618 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %617, i64 0, i32 0, i32 3, i32 0, i32 0
  %619 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %618, align 8
  %620 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %619, i64 0, i32 2, i32 0, i32 0
  %621 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %620, align 8
  %622 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %621, i64 0, i32 2, i32 0, i32 0
  %623 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %622, align 8
  %624 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %623, i64 0, i32 17, i32 0, i32 0
  %625 = load %"class.blink::ShapeValue"*, %"class.blink::ShapeValue"** %624, align 8
  %626 = getelementptr inbounds %"class.blink::ShapeValue", %"class.blink::ShapeValue"* %625, i64 0, i32 5
  %627 = load i32, i32* %626, align 8
  switch i32 %627, label %793 [
    i32 0, label %628
    i32 1, label %628
    i32 4, label %657
    i32 3, label %657
  ]

628:                                              ; preds = %599, %599
  %629 = icmp sgt i32 %611, -1
  %630 = select i1 %629, i32 -2147483648, i32 2147483647
  %631 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %611) #10
  %632 = extractvalue { i32, i1 } %631, 1
  %633 = extractvalue { i32, i1 } %631, 0
  %634 = select i1 %632, i32 %630, i32 %633, !prof !2
  %635 = icmp sgt i32 %614, -1
  %636 = select i1 %635, i32 -2147483648, i32 2147483647
  %637 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %614) #10
  %638 = extractvalue { i32, i1 } %637, 1
  %639 = extractvalue { i32, i1 } %637, 0
  %640 = select i1 %638, i32 %636, i32 %639, !prof !2
  %641 = icmp sgt i32 %578, -1
  %642 = select i1 %641, i32 -2147483648, i32 2147483647
  %643 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %578) #10
  %644 = extractvalue { i32, i1 } %643, 1
  %645 = extractvalue { i32, i1 } %643, 0
  %646 = select i1 %644, i32 %642, i32 %645, !prof !2
  %647 = zext i32 %646 to i64
  %648 = icmp sgt i32 %579, -1
  %649 = select i1 %648, i32 -2147483648, i32 2147483647
  %650 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %579) #10
  %651 = extractvalue { i32, i1 } %650, 1
  %652 = extractvalue { i32, i1 } %650, 0
  %653 = select i1 %651, i32 %649, i32 %652, !prof !2
  %654 = zext i32 %653 to i64
  %655 = shl nuw i64 %654, 32
  %656 = or i64 %655, %647
  br label %793

657:                                              ; preds = %599, %599
  %658 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 0
  %659 = bitcast %"class.blink::NGConstraintSpace"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %659) #10
  %660 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 1, i32 0
  %661 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %659, i8 -86, i64 32, i1 false) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_129CreateConstraintSpaceForFloatERKNS_19NGUnpositionedFloatEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::NGConstraintSpace"* nonnull sret %5, %"struct.blink::NGUnpositionedFloat"* dereferenceable(96) %1, i64 0) #10
  %662 = call { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %5, %"class.blink::NGBlockNode"* dereferenceable(16) %658) #10
  %663 = extractvalue { i64, i64 } %662, 0
  %664 = trunc i64 %663 to i32
  %665 = lshr i64 %663, 32
  %666 = trunc i64 %665 to i32
  %667 = extractvalue { i64, i64 } %662, 1
  %668 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %618, align 8
  %669 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %668, i64 0, i32 2, i32 0, i32 0
  %670 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %669, align 8
  %671 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %670, i64 0, i32 2, i32 0, i32 0
  %672 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %671, align 8
  %673 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %672, i64 0, i32 17, i32 0, i32 0
  %674 = load %"class.blink::ShapeValue"*, %"class.blink::ShapeValue"** %673, align 8
  %675 = getelementptr inbounds %"class.blink::ShapeValue", %"class.blink::ShapeValue"* %674, i64 0, i32 5
  %676 = load i32, i32* %675, align 8
  %677 = icmp eq i32 %676, 4
  br i1 %677, label %678, label %719

678:                                              ; preds = %657
  %679 = call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %5, %"class.blink::ComputedStyle"* dereferenceable(104) %617) #10
  %680 = extractvalue { i64, i64 } %679, 0
  %681 = trunc i64 %680 to i32
  %682 = lshr i64 %680, 32
  %683 = trunc i64 %682 to i32
  %684 = extractvalue { i64, i64 } %679, 1
  %685 = icmp slt i32 %681, 0
  %686 = select i1 %685, i32 -2147483648, i32 2147483647
  %687 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %664, i32 %681) #10
  %688 = extractvalue { i32, i1 } %687, 1
  %689 = extractvalue { i32, i1 } %687, 0
  %690 = select i1 %688, i32 %686, i32 %689, !prof !2
  %691 = icmp slt i32 %683, 0
  %692 = select i1 %691, i32 -2147483648, i32 2147483647
  %693 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %666, i32 %683) #10
  %694 = extractvalue { i32, i1 } %693, 1
  %695 = extractvalue { i32, i1 } %693, 0
  %696 = select i1 %694, i32 %692, i32 %695, !prof !2
  %697 = trunc i64 %667 to i32
  %698 = trunc i64 %684 to i32
  %699 = icmp slt i32 %698, 0
  %700 = select i1 %699, i32 -2147483648, i32 2147483647
  %701 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %697, i32 %698) #10
  %702 = extractvalue { i32, i1 } %701, 1
  %703 = extractvalue { i32, i1 } %701, 0
  %704 = select i1 %702, i32 %700, i32 %703, !prof !2
  %705 = zext i32 %704 to i64
  %706 = lshr i64 %667, 32
  %707 = trunc i64 %706 to i32
  %708 = lshr i64 %684, 32
  %709 = trunc i64 %708 to i32
  %710 = icmp slt i32 %709, 0
  %711 = select i1 %710, i32 -2147483648, i32 2147483647
  %712 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %707, i32 %709) #10
  %713 = extractvalue { i32, i1 } %712, 1
  %714 = extractvalue { i32, i1 } %712, 0
  %715 = select i1 %713, i32 %711, i32 %714, !prof !2
  %716 = zext i32 %715 to i64
  %717 = shl nuw i64 %716, 32
  %718 = or i64 %717, %705
  br label %719

719:                                              ; preds = %678, %657
  %720 = phi i32 [ %696, %678 ], [ %666, %657 ]
  %721 = phi i32 [ %690, %678 ], [ %664, %657 ]
  %722 = phi i64 [ %718, %678 ], [ %667, %657 ]
  %723 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %617, i64 0, i32 0, i32 9
  %724 = bitcast [20 x i8]* %723 to i160*
  %725 = load i160, i160* %724, align 8
  %726 = lshr i160 %725, 102
  %727 = trunc i160 %726 to i8
  %728 = and i8 %727, 3
  %729 = and i160 %725, 41538374868278621028243970633760768
  %730 = icmp ne i160 %729, 0
  %731 = select i1 %730, i32 %720, i32 %721
  %732 = select i1 %730, i32 %721, i32 %720
  switch i8 %728, label %750 [
    i8 0, label %733
    i8 1, label %739
    i8 3, label %739
    i8 2, label %744
  ]

733:                                              ; preds = %719
  %734 = trunc i64 %722 to i32
  %735 = lshr i64 %722, 32
  %736 = zext i32 %731 to i64
  %737 = shl nuw i64 %736, 32
  %738 = or i64 %737, %735
  br label %751

739:                                              ; preds = %719, %719
  %740 = trunc i64 %722 to i32
  %741 = and i64 %722, -4294967296
  %742 = zext i32 %732 to i64
  %743 = or i64 %741, %742
  br label %751

744:                                              ; preds = %719
  %745 = lshr i64 %722, 32
  %746 = trunc i64 %745 to i32
  %747 = zext i32 %732 to i64
  %748 = shl i64 %722, 32
  %749 = or i64 %748, %747
  br label %751

750:                                              ; preds = %719
  unreachable

751:                                              ; preds = %744, %739, %733
  %752 = phi i64 [ %749, %744 ], [ %743, %739 ], [ %738, %733 ]
  %753 = phi i32 [ %746, %744 ], [ %740, %739 ], [ %732, %733 ]
  %754 = phi i32 [ %731, %744 ], [ %731, %739 ], [ %734, %733 ]
  %755 = zext i32 %753 to i64
  %756 = shl nuw i64 %755, 32
  %757 = load i32, i32* %603, align 8
  %758 = lshr i32 %757, 4
  %759 = trunc i32 %758 to i8
  %760 = and i8 %759, 7
  switch i8 %760, label %779 [
    i8 0, label %761
    i8 1, label %767
    i8 3, label %767
    i8 2, label %771
    i8 4, label %775
  ]

761:                                              ; preds = %751
  %762 = lshr i64 %752, 32
  %763 = trunc i64 %762 to i32
  %764 = zext i32 %754 to i64
  %765 = shl i64 %752, 32
  %766 = or i64 %765, %764
  br label %779

767:                                              ; preds = %751, %751
  %768 = trunc i64 %752 to i32
  %769 = and i64 %752, -4294967296
  %770 = or i64 %769, %755
  br label %779

771:                                              ; preds = %751
  %772 = trunc i64 %752 to i32
  %773 = lshr i64 %752, 32
  %774 = or i64 %756, %773
  br label %779

775:                                              ; preds = %751
  %776 = trunc i64 %752 to i32
  %777 = lshr i64 %752, 32
  %778 = or i64 %756, %777
  br label %779

779:                                              ; preds = %775, %771, %767, %761, %751
  %780 = phi i64 [ 0, %751 ], [ %778, %775 ], [ %774, %771 ], [ %770, %767 ], [ %766, %761 ]
  %781 = phi i32 [ 0, %751 ], [ %754, %775 ], [ %772, %771 ], [ %768, %767 ], [ %753, %761 ]
  %782 = phi i32 [ 0, %751 ], [ %776, %775 ], [ %754, %771 ], [ %754, %767 ], [ %763, %761 ]
  %783 = load i32, i32* %661, align 8
  %784 = and i32 %783, 1
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %791, label %786

786:                                              ; preds = %779
  %787 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %660, align 8
  %788 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %787, null
  br i1 %788, label %791, label %789

789:                                              ; preds = %786
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %787) #10
  %790 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %787 to i8*
  call void @free(i8* %790) #10
  br label %791

791:                                              ; preds = %789, %786, %779
  %792 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 2, i32 0
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* %792, %"class.blink::NGExclusionSpaceInternal"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %659) #10
  br label %793

793:                                              ; preds = %791, %628, %599
  %794 = phi i64 [ 0, %599 ], [ %780, %791 ], [ %656, %628 ]
  %795 = phi i32 [ 0, %599 ], [ %781, %791 ], [ %640, %628 ]
  %796 = phi i32 [ 0, %599 ], [ %782, %791 ], [ %634, %628 ]
  %797 = call i8* @_Znwm(i64 40) #11
  %798 = bitcast i8* %797 to i64*
  store i64 %601, i64* %798, align 8
  %799 = getelementptr inbounds i8, i8* %797, i64 8
  %800 = bitcast i8* %799 to i32*
  store i32 %611, i32* %800, align 8
  %801 = getelementptr inbounds i8, i8* %797, i64 12
  %802 = bitcast i8* %801 to i32*
  store i32 %614, i32* %802, align 4
  %803 = getelementptr inbounds i8, i8* %797, i64 16
  %804 = bitcast i8* %803 to i32*
  store i32 %578, i32* %804, align 8
  %805 = getelementptr inbounds i8, i8* %797, i64 20
  %806 = bitcast i8* %805 to i32*
  store i32 %579, i32* %806, align 4
  %807 = getelementptr inbounds i8, i8* %797, i64 24
  %808 = bitcast i8* %807 to i64*
  %809 = zext i32 %795 to i64
  %810 = shl nuw i64 %809, 32
  %811 = zext i32 %796 to i64
  %812 = or i64 %810, %811
  store i64 %812, i64* %808, align 8
  %813 = getelementptr inbounds i8, i8* %797, i64 32
  %814 = bitcast i8* %813 to i64*
  store i64 %794, i64* %814, align 8
  %815 = ptrtoint i8* %797 to i64
  br label %816

816:                                              ; preds = %545, %793
  %817 = phi i64 [ %815, %793 ], [ 0, %545 ]
  %818 = zext i32 %596 to i64
  %819 = shl nuw i64 %818, 32
  %820 = select i1 %595, i64 9223372032559808512, i64 %819, !prof !2
  %821 = zext i32 %574 to i64
  %822 = select i1 %573, i64 2147483647, i64 %821, !prof !2
  %823 = or i64 %820, %822
  %824 = call noalias i8* @malloc(i64 40) #10
  %825 = bitcast i8* %824 to %"struct.blink::NGExclusion"*
  %826 = bitcast i8* %824 to i32*
  store i32 1, i32* %826, align 4
  %827 = getelementptr inbounds i8, i8* %824, i64 4
  %828 = bitcast i8* %827 to i64*
  store i64 %550, i64* %828, align 4
  %829 = getelementptr inbounds i8, i8* %824, i64 12
  %830 = bitcast i8* %829 to i64*
  store i64 %823, i64* %830, align 4
  %831 = getelementptr inbounds i8, i8* %824, i64 20
  %832 = bitcast i8* %831 to i32*
  store i32 %546, i32* %832, align 4
  %833 = getelementptr inbounds i8, i8* %824, i64 24
  store i8 0, i8* %833, align 8
  %834 = getelementptr inbounds i8, i8* %824, i64 32
  %835 = bitcast i8* %834 to i64*
  store i64 %817, i64* %835, align 8
  %836 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %837 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %836, align 8
  %838 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %837, null
  br i1 %838, label %839, label %846

839:                                              ; preds = %816
  %840 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %2, i64 0, i32 0
  %841 = bitcast %"class.std::__1::unique_ptr.1731"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %841) #10
  %842 = call noalias i8* @malloc(i64 40) #10
  %843 = bitcast i8* %842 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1Ev(%"class.blink::NGExclusionSpaceInternal"* %843) #10
  %844 = getelementptr inbounds %"class.std::__1::unique_ptr.1731", %"class.std::__1::unique_ptr.1731"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %844, align 8
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* %840, %"class.blink::NGExclusionSpaceInternal"* %843) #10
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* nonnull %6, %"class.blink::NGExclusionSpaceInternal"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %841) #10
  %845 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %836, align 8
  br label %846

846:                                              ; preds = %839, %816
  %847 = phi %"class.blink::NGExclusionSpaceInternal"* [ %837, %816 ], [ %845, %839 ]
  call void @_ZN5blink24NGExclusionSpaceInternal3AddE13scoped_refptrIKNS_11NGExclusionEE(%"class.blink::NGExclusionSpaceInternal"* %847, %"struct.blink::NGExclusion"* %825) #10
  br label %848

848:                                              ; preds = %846, %525
  %849 = phi i32 [ %578, %846 ], [ %527, %525 ]
  %850 = load i32, i32* %30, align 8
  %851 = trunc i32 %850 to i8
  %852 = icmp sgt i8 %851, -1
  %853 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 0
  %854 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 1
  %855 = select i1 %852, %"class.blink::LayoutUnit"* %853, %"class.blink::LayoutUnit"* %854
  %856 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %855, i64 0, i32 0
  %857 = load i32, i32* %856, align 4
  %858 = icmp slt i32 %857, 0
  %859 = select i1 %858, i32 -2147483648, i32 2147483647
  %860 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %450, i32 %857) #10
  %861 = extractvalue { i32, i1 } %860, 1
  %862 = extractvalue { i32, i1 } %860, 0
  %863 = select i1 %861, i32 %859, i32 %862, !prof !2
  %864 = icmp slt i32 %849, 0
  %865 = select i1 %864, i32 -2147483648, i32 2147483647
  %866 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %376, i32 %849) #10
  %867 = extractvalue { i32, i1 } %866, 1
  %868 = extractvalue { i32, i1 } %866, 0
  %869 = select i1 %867, i32 %865, i32 %868, !prof !2
  %870 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* %377, %"class.blink::NGLayoutResult"** %870, align 8
  %871 = icmp eq %"class.blink::NGLayoutResult"* %377, null
  br i1 %871, label %872, label %880

872:                                              ; preds = %848
  %873 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 1
  %874 = bitcast %"struct.blink::NGBfcOffset"* %873 to i64*
  %875 = zext i32 %869 to i64
  %876 = shl nuw i64 %875, 32
  %877 = zext i32 %863 to i64
  %878 = or i64 %876, %877
  store i64 %878, i64* %874, align 8
  %879 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 2
  store i8 %451, i8* %879, align 8
  br label %894

880:                                              ; preds = %848
  %881 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %377, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %881) #10
  %882 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 1
  %883 = bitcast %"struct.blink::NGBfcOffset"* %882 to i64*
  %884 = zext i32 %869 to i64
  %885 = shl nuw i64 %884, 32
  %886 = zext i32 %863 to i64
  %887 = or i64 %885, %886
  store i64 %887, i64* %883, align 8
  %888 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %0, i64 0, i32 2
  store i8 %451, i8* %888, align 8
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %881) #10
  %889 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %377, i64 0, i32 0, i32 0, i32 0, i32 0
  %890 = load i32, i32* %889, align 4
  %891 = icmp eq i32 %890, 0
  br i1 %891, label %892, label %894

892:                                              ; preds = %880
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %377) #10
  %893 = bitcast %"class.blink::NGLayoutResult"* %377 to i8*
  call void @free(i8* %893) #10
  br label %894

894:                                              ; preds = %333, %892, %880, %872
  %895 = phi i64 [ %373, %872 ], [ %373, %880 ], [ %373, %892 ], [ %317, %333 ]
  %896 = phi i64 [ 0, %872 ], [ 0, %880 ], [ 0, %892 ], [ %321, %333 ]
  %897 = inttoptr i64 %895 to %"class.blink::NGShapeExclusions"*
  %898 = icmp eq i64 %895, 0
  br i1 %898, label %906, label %899

899:                                              ; preds = %894
  %900 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %897, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %900) #10
  %901 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %897, i64 0, i32 0, i32 0, i32 0, i32 0
  %902 = load i32, i32* %901, align 4
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %904, label %906

904:                                              ; preds = %899
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %897) #10
  %905 = inttoptr i64 %895 to i8*
  call void @free(i8* %905) #10
  br label %906

906:                                              ; preds = %894, %899, %904
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #10
  %907 = inttoptr i64 %896 to %"class.blink::NGLayoutResult"*
  %908 = icmp eq i64 %896, 0
  br i1 %908, label %916, label %909

909:                                              ; preds = %906
  %910 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %907, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %910) #10
  %911 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %907, i64 0, i32 0, i32 0, i32 0, i32 0
  %912 = load i32, i32* %911, align 4
  %913 = icmp eq i32 %912, 0
  br i1 %913, label %914, label %916

914:                                              ; preds = %909
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %907) #10
  %915 = inttoptr i64 %896 to i8*
  call void @free(i8* %915) #10
  br label %916

916:                                              ; preds = %906, %909, %914
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129FindLayoutOpportunityForFloatERKNS_19NGUnpositionedFloatERKNS_16NGExclusionSpaceERKNS_10NGBoxStrutENS_10LayoutUnitE(%"struct.blink::NGLayoutOpportunity"* noalias sret, %"struct.blink::NGUnpositionedFloat"* nocapture readonly dereferenceable(96), %"class.blink::NGExclusionSpace"* nocapture readonly dereferenceable(8), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::NGBfcOffset"*
  %8 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = bitcast i64* %6 to i32*
  store i32 -1431655766, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %7, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 5, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 5, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %15, align 8
  %17 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %16, i64 0, i32 4, i32 0
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %5, %18
  %22 = phi i32 [ %20, %18 ], [ -2147483648, %5 ]
  %23 = icmp slt i32 %14, %22
  %24 = select i1 %23, i32 %22, i32 %14
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = zext i32 %12 to i64
  %28 = or i64 %26, %27
  store i64 %28, i64* %6, align 8
  %29 = bitcast %"struct.blink::NGUnpositionedFloat"* %1 to %"class.blink::LayoutObject"**
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = lshr i160 %35, 68
  %37 = trunc i160 %36 to i32
  %38 = and i32 %37, 7
  %39 = add nsw i32 %38, -3
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %41, label %51

41:                                               ; preds = %21
  %42 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 6
  %43 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %43, i64 0, i32 3, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = trunc i32 %45 to i8
  %47 = icmp sgt i8 %46, -1
  %48 = icmp ne i32 %38, 3
  %49 = xor i1 %48, %47
  %50 = select i1 %49, i32 1, i32 2
  br label %51

51:                                               ; preds = %21, %41
  %52 = phi i32 [ %50, %41 ], [ %38, %21 ]
  br i1 %17, label %71, label %53

53:                                               ; preds = %51
  switch i32 %52, label %71 [
    i32 5, label %60
    i32 1, label %54
    i32 2, label %57
  ]

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %16, i64 0, i32 2, i32 0
  %56 = load i32, i32* %55, align 4
  br label %71

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %16, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 8
  br label %71

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %16, i64 0, i32 2
  %62 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %16, i64 0, i32 3
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %62, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %64, %66
  %68 = select i1 %67, %"class.blink::LayoutUnit"* %62, %"class.blink::LayoutUnit"* %61
  %69 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br label %71

71:                                               ; preds = %51, %53, %54, %57, %60
  %72 = phi i32 [ -2147483648, %51 ], [ %70, %60 ], [ %59, %57 ], [ %56, %54 ], [ -2147483648, %53 ]
  %73 = call zeroext i1 @_ZN5blink17AdjustToClearanceENS_10LayoutUnitEPNS_11NGBfcOffsetE(i32 %72, %"struct.blink::NGBfcOffset"* nonnull %7) #10
  %74 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 2, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %3, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %3, i64 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %79) #10
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = icmp slt i32 %85, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %85) #10
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !2
  %92 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %15, align 8, !noalias !3
  %93 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %92, null
  br i1 %93, label %94, label %110

94:                                               ; preds = %71
  %95 = icmp sgt i32 %75, 0
  %96 = select i1 %95, i32 %75, i32 0
  %97 = load i32, i32* %9, align 8, !noalias !3
  %98 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %96) #10
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = load i64, i64* %6, align 8, !noalias !3
  %102 = zext i32 %100 to i64
  %103 = or i64 %102, 9223372032559808512
  %104 = select i1 %99, i64 9223372034707292159, i64 %103, !prof !2
  %105 = bitcast %"struct.blink::NGLayoutOpportunity"* %0 to i64*
  store i64 %101, i64* %105, align 8, !alias.scope !3
  %106 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 1
  %107 = bitcast %"struct.blink::NGBfcOffset"* %106 to i64*
  store i64 %104, i64* %107, align 8, !alias.scope !3
  %108 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 1
  %109 = bitcast %class.scoped_refptr.1770* %108 to i64*
  store i64 0, i64* %109, align 8, !alias.scope !3
  br label %141

110:                                              ; preds = %71
  %111 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %92, i64 0, i32 2
  %112 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %92, i64 0, i32 3
  %113 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %111, i64 0, i32 0
  %114 = load i32, i32* %113, align 4, !noalias !6
  %115 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %112, i64 0, i32 0
  %116 = load i32, i32* %115, align 4, !noalias !6
  %117 = icmp slt i32 %114, %116
  %118 = select i1 %117, %"class.blink::LayoutUnit"* %112, %"class.blink::LayoutUnit"* %111
  %119 = load i32, i32* %10, align 4, !noalias !6
  %120 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4, !noalias !6
  %122 = icmp slt i32 %119, %121
  br i1 %122, label %139, label %123

123:                                              ; preds = %110
  %124 = icmp sgt i32 %75, 0
  %125 = select i1 %124, i32 %75, i32 0
  %126 = load i32, i32* %9, align 8, !noalias !6
  %127 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 %125) #10
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = load i64, i64* %6, align 8, !noalias !6
  %131 = zext i32 %129 to i64
  %132 = or i64 %131, 9223372032559808512
  %133 = select i1 %128, i64 9223372034707292159, i64 %132, !prof !2
  %134 = bitcast %"struct.blink::NGLayoutOpportunity"* %0 to i64*
  store i64 %130, i64* %134, align 8, !alias.scope !6
  %135 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 1
  %136 = bitcast %"struct.blink::NGBfcOffset"* %135 to i64*
  store i64 %133, i64* %136, align 8, !alias.scope !6
  %137 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 1
  %138 = bitcast %class.scoped_refptr.1770* %137 to i64*
  store i64 0, i64* %138, align 8, !alias.scope !6
  br label %141

139:                                              ; preds = %110
  %140 = call dereferenceable(648) %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* @_ZNK5blink24NGExclusionSpaceInternal18GetDerivedGeometryENS_10LayoutUnitE(%"class.blink::NGExclusionSpaceInternal"* nonnull %92, i32 %119) #10, !noalias !6
  call void @_ZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_(%"struct.blink::NGLayoutOpportunity"* sret %0, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %140, %"struct.blink::NGBfcOffset"* nonnull dereferenceable(8) %7, i32 %75, i32 %91) #10
  br label %141

141:                                              ; preds = %94, %123, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129CreateConstraintSpaceForFloatERKNS_19NGUnpositionedFloatEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::NGConstraintSpace"* noalias nocapture sret, %"struct.blink::NGUnpositionedFloat"* dereferenceable(96), i64) unnamed_addr #0 {
  %4 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %5 = trunc i64 %2 to i8
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = bitcast %"struct.blink::NGUnpositionedFloat"* %1 to %"class.blink::NGLayoutInputNode"*
  %9 = bitcast %"struct.blink::NGUnpositionedFloat"* %1 to %"class.blink::LayoutObject"**
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 6
  %14 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %13, align 8
  %15 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 3
  %17 = bitcast %"struct.blink::NGConstraintSpace::Bitfields"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = lshr i160 %20, 102
  %22 = trunc i160 %21 to i16
  %23 = and i16 %22, 3
  %24 = lshr i160 %20, 108
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 3, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 3, i32 0
  %31 = shl nuw nsw i16 %23, 4
  %32 = trunc i160 %24 to i16
  %33 = and i16 %32, 128
  %34 = bitcast %union.anon.1634* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #10
  %35 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 1, i32 0
  store i32 -64, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 2
  %37 = and i32 %26, 112
  %38 = icmp ne i32 %37, 0
  %39 = icmp eq i16 %23, 0
  %40 = xor i1 %38, %39
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %36, align 4
  %42 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %42, align 1
  %43 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 5
  store i8 1, i8* %44, align 1
  %45 = select i1 %40, i32 0, i32 2048
  %46 = or i16 %33, %31
  %47 = or i16 %46, 1024
  %48 = zext i16 %47 to i32
  %49 = or i32 %45, %48
  store i32 %49, i32* %30, align 8
  %50 = load i32, i32* %25, align 8
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = bitcast %"class.blink::LayoutObject"* %10 to %"class.blink::LayoutBox"*
  br i1 %52, label %72, label %54

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1, i32 0
  %56 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %55, align 8
  %57 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %56, i64 0, i32 6
  %58 = load i16, i16* %57, align 8
  %59 = and i16 %58, 512
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %54
  %62 = tail call noalias i8* @malloc(i64 88) #10
  %63 = getelementptr inbounds i8, i8* %62, i64 24
  %64 = bitcast i8* %63 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 24, i1 false) #10
  store i32 -64, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %62, i64 28
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %62, i64 32
  %68 = bitcast i8* %67 to i16*
  %69 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %70 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %69 to i8**
  store i8* %62, i8** %70, align 8
  %71 = or i32 %49, 1
  store i32 %71, i32* %30, align 8
  store i16 512, i16* %68, align 8
  br label %72

72:                                               ; preds = %3, %54, %61
  %73 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 7
  %74 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %73, align 8
  %75 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 0, i32 0, i32 1
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  call void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104) %74, %"class.blink::LayoutBox"* %53, i64 %77, %"class.blink::NGConstraintSpaceBuilder"* nonnull %4) #10
  %78 = load i32, i32* %30, align 8
  %79 = or i32 %78, 4096
  store i32 %79, i32* %30, align 8
  %80 = icmp eq i8 %5, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %72
  call void @_ZN5blink33SetupSpaceBuilderForFragmentationERKNS_17NGConstraintSpaceERKNS_17NGLayoutInputNodeENS_10LayoutUnitEPNS_24NGConstraintSpaceBuilderEb(%"class.blink::NGConstraintSpace"* dereferenceable(32) %14, %"class.blink::NGLayoutInputNode"* dereferenceable(16) %8, i32 %7, %"class.blink::NGConstraintSpaceBuilder"* nonnull %4, i1 zeroext true) #10
  br label %82

82:                                               ; preds = %72, %81
  %83 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 1, i32 0
  %84 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %83, align 8
  %85 = icmp eq %"class.blink::NGBlockBreakToken"* %84, null
  br i1 %85, label %138, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %84, i64 0, i32 0, i32 4
  %88 = load i16, i16* %87, align 8
  %89 = and i16 %88, 32
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %138

91:                                               ; preds = %86
  %92 = load i32, i32* %30, align 8
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %97 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %96, align 8
  br label %114

98:                                               ; preds = %91
  %99 = call noalias i8* @malloc(i64 88) #10
  %100 = bitcast %union.anon.1634* %29 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds i8, i8* %99, i64 16
  %103 = bitcast i8* %102 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 16, i1 false) #10
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %99, i64 24
  %105 = bitcast i8* %104 to i32*
  store i32 -64, i32* %105, align 4
  %106 = getelementptr inbounds i8, i8* %99, i64 28
  %107 = bitcast i8* %106 to i32*
  store i32 0, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %99, i64 32
  %109 = bitcast i8* %108 to i16*
  store i16 0, i16* %109, align 8
  %110 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1, i32 0
  %111 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %110 to i8**
  store i8* %99, i8** %111, align 8
  %112 = or i32 %92, 1
  store i32 %112, i32* %30, align 8
  %113 = bitcast i8* %99 to %"struct.blink::NGConstraintSpace::RareData"*
  br label %114

114:                                              ; preds = %98, %95
  %115 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %97, %95 ], [ %113, %98 ]
  %116 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 6
  %117 = load i16, i16* %116, align 8
  %118 = and i16 %117, 7
  %119 = icmp eq i16 %118, 1
  br i1 %119, label %128, label %120

120:                                              ; preds = %114
  %121 = and i16 %117, -8
  %122 = or i16 %121, 1
  store i16 %122, i16* %116, align 8
  %123 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 7
  %124 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 7, i32 1, i64 24
  %125 = bitcast i8* %124 to i32*
  %126 = bitcast %union.anon.1635* %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 44, i1 false) #10
  store i32 -2147483648, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 7, i32 1, i64 28
  store i8 0, i8* %127, align 4
  br label %128

128:                                              ; preds = %114, %120
  %129 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 7
  %130 = bitcast %union.anon.1635* %129 to i8*
  %131 = bitcast %union.anon.1635* %129 to i32*
  store i32 0, i32* %131, align 4
  %132 = getelementptr inbounds i8, i8* %130, i64 4
  %133 = bitcast i8* %132 to i32*
  store i32 0, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 7, i32 1
  %135 = bitcast [40 x i8]* %134 to i32*
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 7, i32 1, i64 4
  store i8 0, i8* %136, align 4
  %137 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %115, i64 0, i32 7, i32 1, i64 5
  store i8 1, i8* %137, align 1
  br label %138

138:                                              ; preds = %82, %128, %86
  %139 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 2
  %140 = bitcast %"struct.blink::LogicalSize"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %4 to i64*
  store i64 %141, i64* %142, align 8
  %143 = load i8, i8* %36, align 4, !range !9
  %144 = icmp eq i8 %143, 1
  %145 = lshr i64 %141, 32
  %146 = trunc i64 %145 to i32
  br i1 %144, label %155, label %147, !prof !10

147:                                              ; preds = %138
  %148 = trunc i64 %141 to i32
  store i32 %146, i32* %27, align 8
  store i32 %148, i32* %28, align 4
  %149 = load i8, i8* %44, align 1, !range !9
  %150 = icmp ne i8 %149, 0
  %151 = icmp eq i32 %146, -64
  %152 = and i1 %151, %150
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = load i32, i32* %35, align 8
  store i32 %154, i32* %27, align 8
  br label %155

155:                                              ; preds = %138, %147, %153
  %156 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 3
  %157 = bitcast %"struct.blink::LogicalSize"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %4, i64 %158) #10
  %159 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %1, i64 0, i32 4
  %160 = bitcast %"struct.blink::LogicalSize"* %159 to i64*
  %161 = load i64, i64* %160, align 8
  call void @_ZN5blink24NGConstraintSpaceBuilder35SetReplacedPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %4, i64 %161) #10
  %162 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %163 = load i64, i64* %142, align 8, !noalias !11
  store i64 %163, i64* %162, align 8, !alias.scope !11
  %164 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2
  %165 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 2
  %166 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %165, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.blink::NGExclusionSpace"* %165 to i64*
  %168 = load i64, i64* %167, align 8, !noalias !11
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %166, align 8, !noalias !11
  %169 = bitcast %"class.blink::NGExclusionSpace"* %164 to i64*
  store i64 %168, i64* %169, align 8, !alias.scope !11
  %170 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %171 = load i32, i32* %30, align 8, !noalias !11
  store i32 %171, i32* %170, align 8, !alias.scope !11
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %179

174:                                              ; preds = %155
  %175 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %176 = bitcast %union.anon.1634* %29 to i64*
  %177 = bitcast %union.anon.1634* %175 to i64*
  %178 = load i64, i64* %176, align 8, !noalias !11
  store i64 %178, i64* %177, align 8, !alias.scope !11
  br label %185

179:                                              ; preds = %155
  %180 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %29, i64 0, i32 0
  %181 = bitcast %union.anon.1634* %29 to i64*
  %182 = load i64, i64* %181, align 8, !noalias !11
  %183 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1
  %184 = bitcast %union.anon.1634* %183 to i64*
  store i64 %182, i64* %184, align 8, !alias.scope !11
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %180, align 8, !noalias !11
  br label %185

185:                                              ; preds = %179, %174
  %186 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 2, i32 0
  call void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"* %186, %"class.blink::NGExclusionSpaceInternal"* null) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #10
  ret void
}

declare %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink18MovePastBreakpointERKNS_17NGConstraintSpaceENS_17NGLayoutInputNodeERKNS_14NGLayoutResultENS_10LayoutUnitENS_13NGBreakAppealEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::LayoutBox"*, i64, %"class.blink::NGLayoutResult"* dereferenceable(64), i32, i32, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink17ComputeMarginsForERKNS_17NGConstraintSpaceERKNS_13ComputedStyleES2_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NGConstraintSpace"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #3

declare zeroext i1 @_ZN5blink17AdjustToClearanceENS_10LayoutUnitEPNS_11NGBfcOffsetE(i32, %"struct.blink::NGBfcOffset"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1740* %4, null
  br i1 %5, label %42, label %6, !prof !10

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1740* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1740* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1742"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #10
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1740* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1737"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #10
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1740* %45, null
  br i1 %46, label %83, label %47, !prof !10

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1740* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !2

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1740* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #10
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1742"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #10
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1740* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1737"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #10
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare dereferenceable(648) %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* @_ZNK5blink24NGExclusionSpaceInternal18GetDerivedGeometryENS_10LayoutUnitE(%"class.blink::NGExclusionSpaceInternal"*, i32) local_unnamed_addr #2

declare void @_ZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_(%"struct.blink::NGLayoutOpportunity"* sret, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGBfcOffset"* dereferenceable(8), i32, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #2

declare void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutBox"*, i64, %"class.blink::NGConstraintSpaceBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink33SetupSpaceBuilderForFragmentationERKNS_17NGConstraintSpaceERKNS_17NGLayoutInputNodeENS_10LayoutUnitEPNS_24NGConstraintSpaceBuilderEb(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGLayoutInputNode"* dereferenceable(16), i32, %"class.blink::NGConstraintSpaceBuilder"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

declare void @_ZN5blink24NGConstraintSpaceBuilder35SetReplacedPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1635* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #10
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !10

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #10
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !10

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !2

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #10
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !10

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #10
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !10

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #10
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #10
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1635* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #10
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !10

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #10
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !10

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #10
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !10

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #10
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !10

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !2

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #10
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #10
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #10
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #10
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink24NGExclusionSpaceInternalENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1731"*, %"class.blink::NGExclusionSpaceInternal"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.1731", %"class.std::__1::unique_ptr.1731"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %3, align 8
  store %"class.blink::NGExclusionSpaceInternal"* %1, %"class.blink::NGExclusionSpaceInternal"** %3, align 8
  %5 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %4, null
  br i1 %5, label %66, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %4, i64 0, i32 6
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.1751", %"class.std::__1::unique_ptr.1751"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %8, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %8, align 8
  %10 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::unique_ptr.1751"* %7 to %"struct.std::__1::default_delete.1774"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"* %12, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %9) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %4, i64 0, i32 0, i32 0
  %15 = load %"class.base::RefCountedData.1735"*, %"class.base::RefCountedData.1735"** %14, align 8
  %16 = icmp eq %"class.base::RefCountedData.1735"* %15, null
  br i1 %16, label %64, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %64

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %15, i64 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %23, align 8
  %25 = icmp eq %class.scoped_refptr.1740* %24, null
  br i1 %25, label %62, label %26, !prof !10

26:                                               ; preds = %21
  %27 = bitcast %class.scoped_refptr.1740* %24 to i8*
  %28 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %60, label %31, !prof !2

31:                                               ; preds = %26
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %24, i64 %32
  br label %34

34:                                               ; preds = %54, %31
  %35 = phi %class.scoped_refptr.1740* [ %55, %54 ], [ %24, %31 ]
  %36 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %35, i64 0, i32 0
  %37 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %36, align 8
  %38 = icmp eq %"struct.blink::NGExclusion"* %37, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %40) #10
  %41 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %37, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %45, i64 8
  %47 = bitcast %"class.base::RefCounted.1742"* %46 to %"struct.blink::NGExclusionShapeData"**
  %48 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %47, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %47, align 8
  %49 = icmp eq %"struct.blink::NGExclusionShapeData"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %44
  %51 = bitcast %"struct.blink::NGExclusionShapeData"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %44
  %53 = bitcast %"struct.blink::NGExclusion"* %37 to i8*
  tail call void @free(i8* %53) #10
  br label %54

54:                                               ; preds = %52, %39, %34
  %55 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %35, i64 1
  %56 = icmp eq %class.scoped_refptr.1740* %55, %33
  br i1 %56, label %57, label %34

57:                                               ; preds = %54
  store i32 0, i32* %28, align 4
  %58 = bitcast %"class.WTF::Vector.1737"* %22 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %26
  %61 = phi i8* [ %59, %57 ], [ %27, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %61) #10
  br label %62

62:                                               ; preds = %21, %60
  %63 = bitcast %"class.base::RefCountedData.1735"* %15 to i8*
  tail call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %13, %17, %62
  %65 = bitcast %"class.blink::NGExclusionSpaceInternal"* %4 to i8*
  tail call void @free(i8* %65) #10
  br label %66

66:                                               ; preds = %2, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !2

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !10

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #10
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !10

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #10
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #10
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #10
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !10

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #10
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !2

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #10
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #10
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #10
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !10

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #10
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !2

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !10

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #10
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !10

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #10
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #10
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #3

declare void @_ZN5blink24NGExclusionSpaceInternal3AddE13scoped_refptrIKNS_11NGExclusionEE(%"class.blink::NGExclusionSpaceInternal"*, %"struct.blink::NGExclusion"*) local_unnamed_addr #2

declare void @_ZN5blink24NGExclusionSpaceInternalC1Ev(%"class.blink::NGExclusionSpaceInternal"*) unnamed_addr #2

declare %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink16NGExclusionSpace21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink16NGExclusionSpace21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZNK5blink24NGExclusionSpaceInternal21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink24NGExclusionSpaceInternal21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_"}
!9 = !{i8 0, i8 2}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
