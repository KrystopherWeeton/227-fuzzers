; ModuleID = '../../third_party/webrtc/modules/video_coding/svc/svc_rate_allocator.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/svc/svc_rate_allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::SvcRateAllocator" = type { %"class.webrtc::VideoBitrateAllocator", %"class.webrtc::VideoCodec", %"struct.webrtc::SvcRateAllocator::NumLayers", %"class.webrtc::StableTargetRateExperiment", %"class.absl::InlinedVector", i64 }
%"class.webrtc::VideoBitrateAllocator" = type { i32 (...)** }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.webrtc::SvcRateAllocator::NumLayers" = type { i64, i64 }
%"class.webrtc::StableTargetRateExperiment" = type { %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter.10", %"class.webrtc::FieldTrialParameter.10" }
%"class.webrtc::FieldTrialParameter" = type { %"class.webrtc::FieldTrialParameterInterface.base", i8, [6 x i8] }
%"class.webrtc::FieldTrialParameterInterface.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::basic_string", i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::FieldTrialParameterInterface"**, %"class.webrtc::FieldTrialParameterInterface"**, %"class.std::__1::__compressed_pair.5" }
%"class.webrtc::FieldTrialParameterInterface" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.webrtc::FieldTrialParameterInterface"** }
%"class.webrtc::FieldTrialParameter.10" = type { %"class.webrtc::FieldTrialParameterInterface.base", double }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.13" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.13" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Allocated" = type { %"class.webrtc::DataRate"*, i64 }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"struct.webrtc::ScalableVideoController::StreamLayersConfig" = type { i32, i32, [4 x i32], [4 x i32] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::ScalableVideoController" = type { i32 (...)** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.webrtc::DataRate"* }
%"class.webrtc::VideoBitrateAllocation" = type <{ i32, [5 x [4 x %"class.absl::optional.14"]], i8, [3 x i8] }>
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { i32 }
%"struct.webrtc::VideoBitrateAllocationParameters" = type { %"class.webrtc::DataRate", %"class.webrtc::DataRate", double }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6webrtc16SvcRateAllocatorD2Ev = comdat any

$_ZN6webrtc16SvcRateAllocatorD0Ev = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc8DataRateELm5ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRKS3_EEERS3_DpOT_ = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEEEEEvPKciS9_DpRKT_E1t = comdat any

@_ZTVN6webrtc16SvcRateAllocatorE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::SvcRateAllocator"*)* @_ZN6webrtc16SvcRateAllocatorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::SvcRateAllocator"*)* @_ZN6webrtc16SvcRateAllocatorD0Ev to i8*), i8* bitcast (void (%"class.webrtc::VideoBitrateAllocation"*, %"class.webrtc::VideoBitrateAllocator"*, i32, i32)* @_ZN6webrtc21VideoBitrateAllocator13GetAllocationEjj to i8*), i8* bitcast (void (%"class.webrtc::VideoBitrateAllocation"*, %"class.webrtc::SvcRateAllocator"*, %"struct.webrtc::VideoBitrateAllocationParameters"*)* @_ZN6webrtc16SvcRateAllocator8AllocateENS_32VideoBitrateAllocationParametersE to i8*), i8* bitcast (void (%"class.webrtc::VideoBitrateAllocator"*, i1)* @_ZN6webrtc21VideoBitrateAllocator23SetLegacyConferenceModeEb to i8*)] }, align 8
@.str = private unnamed_addr constant [72 x i8] c"../../third_party/webrtc/modules/video_coding/svc/svc_rate_allocator.cc\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"num_layers_.temporal == 3\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEEEEEvPKciS9_DpRKT_E1t = linkonce_odr hidden constant [4 x i8] c"\0D\05\01\00", comdat, align 1

@_ZN6webrtc16SvcRateAllocatorC1ERKNS_10VideoCodecE = hidden unnamed_addr alias void (%"class.webrtc::SvcRateAllocator"*, %"class.webrtc::VideoCodec"*), void (%"class.webrtc::SvcRateAllocator"*, %"class.webrtc::VideoCodec"*)* @_ZN6webrtc16SvcRateAllocatorC2ERKNS_10VideoCodecE

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6webrtc16SvcRateAllocator12GetNumLayersERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.webrtc::ScalableVideoController::StreamLayersConfig", align 4
  %3 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 18
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = zext i8 %6 to i64
  br label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp sgt i64 %12, -1
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %10
  tail call void @llvm.trap() #14
  unreachable

15:                                               ; preds = %8, %10
  %16 = phi i64 [ %12, %10 ], [ %9, %8 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %51, label %18

18:                                               ; preds = %15
  br i1 %7, label %22, label %19

19:                                               ; preds = %18
  %20 = zext i8 %6 to i64
  %21 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  br label %29

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp sgt i64 %26, -1
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %22
  tail call void @llvm.trap() #14
  unreachable

29:                                               ; preds = %19, %22
  %30 = phi i64 [ %24, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %26, %22 ], [ %20, %19 ]
  %32 = inttoptr i64 %30 to i8*
  %33 = tail call %"class.webrtc::ScalableVideoController"* @_ZN6webrtc26CreateScalabilityStructureEN4absl11string_viewE(i8* %32, i64 %31) #14
  %34 = icmp eq %"class.webrtc::ScalableVideoController"* %33, null
  br i1 %34, label %51, label %35

35:                                               ; preds = %29
  %36 = bitcast %"struct.webrtc::ScalableVideoController::StreamLayersConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -86, i64 40, i1 false)
  %37 = bitcast %"class.webrtc::ScalableVideoController"* %33 to void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalableVideoController"*)***
  %38 = load void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalableVideoController"*)**, void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalableVideoController"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalableVideoController"*)*, void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalableVideoController"*)** %38, i64 2
  %40 = load void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalableVideoController"*)*, void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalableVideoController"*)** %39, align 8
  call void %40(%"struct.webrtc::ScalableVideoController::StreamLayersConfig"* nonnull sret %2, %"class.webrtc::ScalableVideoController"* nonnull %33) #14
  %41 = getelementptr inbounds %"struct.webrtc::ScalableVideoController::StreamLayersConfig", %"struct.webrtc::ScalableVideoController::StreamLayersConfig"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.webrtc::ScalableVideoController::StreamLayersConfig", %"struct.webrtc::ScalableVideoController::StreamLayersConfig"* %2, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #14
  %47 = bitcast %"class.webrtc::ScalableVideoController"* %33 to void (%"class.webrtc::ScalableVideoController"*)***
  %48 = load void (%"class.webrtc::ScalableVideoController"*)**, void (%"class.webrtc::ScalableVideoController"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.webrtc::ScalableVideoController"*)*, void (%"class.webrtc::ScalableVideoController"*)** %48, i64 1
  %50 = load void (%"class.webrtc::ScalableVideoController"*)*, void (%"class.webrtc::ScalableVideoController"*)** %49, align 8
  call void %50(%"class.webrtc::ScalableVideoController"* nonnull %33) #14
  br label %64

51:                                               ; preds = %29, %15
  %52 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 2
  br i1 %54, label %55, label %64

55:                                               ; preds = %51
  %56 = tail call dereferenceable(20) %"struct.webrtc::VideoCodecVP9"* @_ZNK6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"* %0) #14
  %57 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %56, i64 0, i32 7
  %58 = load i8, i8* %57, align 2
  %59 = zext i8 %58 to i64
  %60 = tail call dereferenceable(20) %"struct.webrtc::VideoCodecVP9"* @_ZNK6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"* %0) #14
  %61 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %60, i64 0, i32 1
  %62 = load i8, i8* %61, align 4
  %63 = zext i8 %62 to i64
  br label %64

64:                                               ; preds = %51, %35, %55
  %65 = phi i64 [ %59, %55 ], [ %43, %35 ], [ 1, %51 ]
  %66 = phi i64 [ %63, %55 ], [ %46, %35 ], [ 1, %51 ]
  %67 = insertvalue { i64, i64 } undef, i64 %65, 0
  %68 = insertvalue { i64, i64 } %67, i64 %66, 1
  ret { i64, i64 } %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.webrtc::ScalableVideoController"* @_ZN6webrtc26CreateScalabilityStructureEN4absl11string_viewE(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(20) %"struct.webrtc::VideoCodecVP9"* @_ZNK6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16SvcRateAllocatorC2ERKNS_10VideoCodecE(%"class.webrtc::SvcRateAllocator"*, %"class.webrtc::VideoCodec"* dereferenceable(376)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc16SvcRateAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 1
  %5 = bitcast %"class.webrtc::VideoCodec"* %4 to i8*
  %6 = bitcast %"class.webrtc::VideoCodec"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 352, i1 false) #14
  %7 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 1, i32 18
  %8 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #14
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %18, i64 %20) #14
  br label %21

21:                                               ; preds = %13, %16
  %22 = tail call { i64, i64 } @_ZN6webrtc16SvcRateAllocator12GetNumLayersERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376) %1)
  %23 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 2, i32 0
  %24 = extractvalue { i64, i64 } %22, 0
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 2, i32 1
  %26 = extractvalue { i64, i64 } %22, 1
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc26StableTargetRateExperiment20ParseFromFieldTrialsEv(%"class.webrtc::StableTargetRateExperiment"* sret %27) #14
  %28 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4
  tail call void @_ZN6webrtc16SvcRateAllocator21GetLayerStartBitratesERKNS_10VideoCodecE(%"class.absl::InlinedVector"* sret %28, %"class.webrtc::VideoCodec"* dereferenceable(376) %1)
  %29 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 5
  store i64 0, i64* %29, align 8
  ret void
}

declare void @_ZN6webrtc26StableTargetRateExperiment20ParseFromFieldTrialsEv(%"class.webrtc::StableTargetRateExperiment"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16SvcRateAllocator21GetLayerStartBitratesERKNS_10VideoCodecE(%"class.absl::InlinedVector"* noalias sret, %"class.webrtc::VideoCodec"* dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.19", align 8
  %4 = alloca %"class.std::__1::vector.19", align 8
  %5 = alloca %"class.webrtc::DataRate", align 8
  %6 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 40, i1 false)
  %8 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = tail call { i64, i64 } @_ZN6webrtc16SvcRateAllocator12GetNumLayersERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376) %1)
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %2, %17
  %13 = phi i64 [ %18, %17 ], [ 0, %2 ]
  %14 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %13, i32 8
  %15 = load i8, i8* %14, align 4, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = add nuw i64 %13, 1
  %19 = icmp eq i64 %18, %10
  br i1 %19, label %31, label %12

20:                                               ; preds = %12, %2
  %21 = phi i64 [ 0, %2 ], [ %13, %12 ]
  %22 = icmp ult i64 %21, %10
  br i1 %22, label %23, label %31

23:                                               ; preds = %20, %28
  %24 = phi i64 [ %29, %28 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %24, i32 8
  %26 = load i8, i8* %25, align 4, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = add i64 %24, 1
  %30 = icmp eq i64 %29, %10
  br i1 %30, label %31, label %23

31:                                               ; preds = %17, %23, %28, %20
  %32 = phi i64 [ %21, %20 ], [ %21, %28 ], [ %21, %23 ], [ %10, %17 ]
  %33 = phi i64 [ %21, %20 ], [ %24, %23 ], [ %10, %28 ], [ %10, %17 ]
  %34 = sub i64 %33, %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %236, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.webrtc::DataRate"* %5 to i8*
  %38 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %5, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 12
  %40 = bitcast %"class.std::__1::vector.19"* %3 to i8*
  %41 = bitcast %"class.std::__1::vector.19"* %4 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 1
  %43 = bitcast %"class.webrtc::DataRate"** %42 to i64*
  %44 = bitcast %"class.std::__1::vector.19"* %3 to i64*
  %45 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %4, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %4, i64 0, i32 0, i32 1
  %47 = bitcast %"class.webrtc::DataRate"** %46 to i64*
  %48 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 0, i32 6
  %49 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %50 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %0, i64 0, i32 0, i32 1
  %51 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %50 to i64
  %52 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %53 = bitcast %"class.webrtc::DataRate"** %52 to i64*
  %54 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %0, i64 0, i32 0
  br label %55

55:                                               ; preds = %36, %232
  %56 = phi i64 [ 0, %36 ], [ %235, %232 ]
  %57 = phi i64 [ 1, %36 ], [ %233, %232 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #14
  store i64 -6148914691236517206, i64* %38, align 8
  %58 = icmp eq i64 %57, 1
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = load i32, i32* %48, align 4
  %61 = zext i32 %60 to i64
  %62 = mul nuw nsw i64 %61, 1000
  br label %214

63:                                               ; preds = %55
  %64 = load i32, i32* %39, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = add i64 %57, -1
  %68 = and i64 %56, 1
  %69 = icmp eq i64 %56, 1
  br i1 %69, label %165, label %70

70:                                               ; preds = %66
  %71 = sub i64 %56, %68
  br label %197

72:                                               ; preds = %63
  %73 = icmp ugt i64 %57, 1
  br i1 %73, label %74, label %107

74:                                               ; preds = %72
  %75 = add i64 %57, -1
  br label %76

76:                                               ; preds = %101, %74
  %77 = phi i64 [ %103, %101 ], [ 0, %74 ]
  %78 = phi i64 [ %102, %101 ], [ 0, %74 ]
  %79 = phi i64 [ %91, %101 ], [ 0, %74 ]
  %80 = add i64 %77, %32
  %81 = icmp eq i64 %79, 9223372036854775807
  br i1 %81, label %90, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %80, i32 6
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 1000
  %87 = icmp eq i64 %79, -9223372036854775808
  %88 = add nsw i64 %86, %79
  %89 = select i1 %87, i64 -9223372036854775808, i64 %88
  br label %90

90:                                               ; preds = %82, %76
  %91 = phi i64 [ %89, %82 ], [ 9223372036854775807, %76 ]
  %92 = icmp eq i64 %78, 9223372036854775807
  br i1 %92, label %101, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %80, i32 4
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = mul nuw nsw i64 %96, 1000
  %98 = icmp eq i64 %78, -9223372036854775808
  %99 = add nsw i64 %97, %78
  %100 = select i1 %98, i64 -9223372036854775808, i64 %99
  br label %101

101:                                              ; preds = %93, %90
  %102 = phi i64 [ %100, %93 ], [ 9223372036854775807, %90 ]
  %103 = add nuw i64 %77, 1
  %104 = icmp eq i64 %103, %75
  br i1 %104, label %105, label %76

105:                                              ; preds = %101
  %106 = icmp eq i64 %102, 9223372036854775807
  br i1 %106, label %119, label %107

107:                                              ; preds = %72, %105
  %108 = phi i64 [ %75, %105 ], [ -1, %72 ]
  %109 = phi i64 [ %102, %105 ], [ 0, %72 ]
  %110 = phi i64 [ %91, %105 ], [ 0, %72 ]
  %111 = add i64 %108, %32
  %112 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %111, i32 6
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = mul nuw nsw i64 %114, 1000
  %116 = icmp eq i64 %109, -9223372036854775808
  %117 = add nsw i64 %115, %109
  %118 = select i1 %116, i64 -9223372036854775808, i64 %117
  br label %119

119:                                              ; preds = %107, %105
  %120 = phi i64 [ %110, %107 ], [ %91, %105 ]
  %121 = phi i64 [ %118, %107 ], [ 9223372036854775807, %105 ]
  br label %122

122:                                              ; preds = %119, %162
  %123 = phi i64 [ %163, %162 ], [ %120, %119 ]
  %124 = phi i64 [ %164, %162 ], [ %121, %119 ]
  %125 = icmp eq i64 %124, 9223372036854775807
  %126 = icmp eq i64 %123, -9223372036854775808
  %127 = or i1 %126, %125
  br i1 %127, label %135, label %128

128:                                              ; preds = %122
  %129 = icmp ne i64 %124, -9223372036854775808
  %130 = icmp ne i64 %123, 9223372036854775807
  %131 = sub nsw i64 %124, %123
  %132 = and i1 %130, %129
  %133 = icmp sgt i64 %131, 1
  %134 = and i1 %132, %133
  br i1 %134, label %135, label %214

135:                                              ; preds = %128, %122
  %136 = icmp eq i64 %123, 9223372036854775807
  %137 = or i1 %136, %125
  br i1 %137, label %143, label %138

138:                                              ; preds = %135
  %139 = icmp eq i64 %124, -9223372036854775808
  %140 = or i1 %126, %139
  %141 = add nsw i64 %124, %123
  %142 = select i1 %140, i64 -9223372036854775808, i64 %141
  br label %143

143:                                              ; preds = %138, %135
  %144 = phi i64 [ %142, %138 ], [ 9223372036854775807, %135 ]
  %145 = sdiv i64 %144, 2
  %146 = sitofp i64 %145 to double
  %147 = fptosi double %146 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #14
  call fastcc void @_ZN6webrtc12_GLOBAL__N_112SplitBitrateEmNS_8DataRateEf(%"class.std::__1::vector.19"* nonnull sret %4, i64 %57, i64 %147) #14
  call fastcc void @_ZN6webrtc12_GLOBAL__N_115AdjustAndVerifyERKNS_10VideoCodecEmRKNSt3__16vectorINS_8DataRateENS4_9allocatorIS6_EEEE(%"class.std::__1::vector.19"* nonnull sret %3, %"class.webrtc::VideoCodec"* dereferenceable(376) %1, i64 %32, %"class.std::__1::vector.19"* nonnull dereferenceable(24) %4) #14
  %148 = load i64, i64* %43, align 8
  %149 = load i64, i64* %44, align 8
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 3
  %152 = icmp eq i64 %151, %57
  %153 = icmp eq i64 %149, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %143
  store i64 %149, i64* %43, align 8
  %155 = inttoptr i64 %149 to i8*
  call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %154, %143
  %157 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %45, align 8
  %158 = icmp eq %"class.webrtc::DataRate"* %157, null
  br i1 %158, label %162, label %159

159:                                              ; preds = %156
  %160 = ptrtoint %"class.webrtc::DataRate"* %157 to i64
  store i64 %160, i64* %47, align 8
  %161 = bitcast %"class.webrtc::DataRate"* %157 to i8*
  call void @_ZdlPv(i8* %161) #15
  br label %162

162:                                              ; preds = %159, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  %163 = select i1 %152, i64 %123, i64 %147
  %164 = select i1 %152, i64 %147, i64 %124
  br label %122

165:                                              ; preds = %247, %66
  %166 = phi i64 [ undef, %66 ], [ %248, %247 ]
  %167 = phi i1 [ undef, %66 ], [ %250, %247 ]
  %168 = phi i1 [ false, %66 ], [ %250, %247 ]
  %169 = phi i64 [ 0, %66 ], [ %249, %247 ]
  %170 = phi i64 [ 0, %66 ], [ %248, %247 ]
  %171 = icmp eq i64 %68, 0
  br i1 %171, label %185, label %172

172:                                              ; preds = %165
  br i1 %168, label %182, label %173

173:                                              ; preds = %172
  %174 = add i64 %169, %32
  %175 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %174, i32 5
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i64
  %178 = mul nuw nsw i64 %177, 1000
  %179 = icmp eq i64 %170, -9223372036854775808
  %180 = add nsw i64 %178, %170
  %181 = select i1 %179, i64 -9223372036854775808, i64 %180
  br label %182

182:                                              ; preds = %172, %173
  %183 = phi i64 [ %181, %173 ], [ 9223372036854775807, %172 ]
  %184 = icmp eq i64 %183, 9223372036854775807
  br label %185

185:                                              ; preds = %165, %182
  %186 = phi i64 [ %166, %165 ], [ %183, %182 ]
  %187 = phi i1 [ %167, %165 ], [ %184, %182 ]
  br i1 %187, label %214, label %188

188:                                              ; preds = %185
  %189 = add i64 %67, %32
  %190 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %189, i32 6
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = mul nuw nsw i64 %192, 1000
  %194 = icmp eq i64 %186, -9223372036854775808
  %195 = add nsw i64 %193, %186
  %196 = select i1 %194, i64 -9223372036854775808, i64 %195
  br label %214

197:                                              ; preds = %247, %70
  %198 = phi i1 [ false, %70 ], [ %250, %247 ]
  %199 = phi i64 [ 0, %70 ], [ %249, %247 ]
  %200 = phi i64 [ 0, %70 ], [ %248, %247 ]
  %201 = phi i64 [ %71, %70 ], [ %251, %247 ]
  br i1 %198, label %211, label %202

202:                                              ; preds = %197
  %203 = add i64 %199, %32
  %204 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %203, i32 5
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i64
  %207 = mul nuw nsw i64 %206, 1000
  %208 = icmp eq i64 %200, -9223372036854775808
  %209 = add nsw i64 %207, %200
  %210 = select i1 %208, i64 -9223372036854775808, i64 %209
  br label %211

211:                                              ; preds = %202, %197
  %212 = phi i64 [ %210, %202 ], [ 9223372036854775807, %197 ]
  %213 = icmp eq i64 %212, 9223372036854775807
  br i1 %213, label %247, label %237

214:                                              ; preds = %128, %59, %185, %188
  %215 = phi i64 [ %62, %59 ], [ %196, %188 ], [ 9223372036854775807, %185 ], [ %124, %128 ]
  store i64 %215, i64* %38, align 8
  %216 = load i64, i64* %8, align 8, !noalias !4
  %217 = and i64 %216, 1
  %218 = icmp eq i64 %217, 0
  %219 = load i64, i64* %49, align 8
  %220 = select i1 %218, i64 5, i64 %219
  %221 = lshr i64 %216, 1
  %222 = icmp eq i64 %221, %220
  br i1 %222, label %230, label %223, !prof !7

223:                                              ; preds = %214
  %224 = load i64, i64* %53, align 8
  %225 = select i1 %218, i64 %51, i64 %224
  %226 = inttoptr i64 %225 to %"class.webrtc::DataRate"*
  %227 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %226, i64 %221, i32 0, i32 0, i32 0
  store i64 %215, i64* %227, align 8
  %228 = load i64, i64* %8, align 8
  %229 = add i64 %228, 2
  store i64 %229, i64* %8, align 8
  br label %232

230:                                              ; preds = %214
  %231 = call dereferenceable(8) %"class.webrtc::DataRate"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc8DataRateELm5ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRKS3_EEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage"* %54, %"class.webrtc::DataRate"* nonnull dereferenceable(8) %5) #14
  br label %232

232:                                              ; preds = %223, %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #14
  %233 = add i64 %57, 1
  %234 = icmp ugt i64 %233, %34
  %235 = add i64 %56, 1
  br i1 %234, label %236, label %55

236:                                              ; preds = %232, %31
  ret void

237:                                              ; preds = %211
  %238 = or i64 %199, 1
  %239 = add i64 %238, %32
  %240 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %239, i32 5
  %241 = load i32, i32* %240, align 4
  %242 = zext i32 %241 to i64
  %243 = mul nuw nsw i64 %242, 1000
  %244 = icmp eq i64 %212, -9223372036854775808
  %245 = add nsw i64 %243, %212
  %246 = select i1 %244, i64 -9223372036854775808, i64 %245
  br label %247

247:                                              ; preds = %237, %211
  %248 = phi i64 [ %246, %237 ], [ 9223372036854775807, %211 ]
  %249 = add nuw i64 %199, 2
  %250 = icmp eq i64 %248, 9223372036854775807
  %251 = add i64 %201, -2
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %165, label %197
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16SvcRateAllocator8AllocateENS_32VideoBitrateAllocationParametersE(%"class.webrtc::VideoBitrateAllocation"* noalias sret, %"class.webrtc::SvcRateAllocator"*, %"struct.webrtc::VideoBitrateAllocationParameters"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.webrtc::VideoBitrateAllocation", align 4
  %5 = alloca %"class.webrtc::VideoBitrateAllocation", align 4
  %6 = alloca %"class.webrtc::VideoBitrateAllocation", align 4
  %7 = getelementptr inbounds %"struct.webrtc::VideoBitrateAllocationParameters", %"struct.webrtc::VideoBitrateAllocationParameters"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.webrtc::VideoBitrateAllocationParameters", %"struct.webrtc::VideoBitrateAllocationParameters"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = zext i32 %11 to i64
  %15 = mul nuw nsw i64 %14, 1000
  %16 = icmp slt i64 %15, %9
  %17 = select i1 %16, i64 %15, i64 %9
  br label %18

18:                                               ; preds = %3, %13
  %19 = phi i64 [ %9, %3 ], [ %17, %13 ]
  %20 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 11, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = bitcast %"class.webrtc::VideoBitrateAllocation"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 -86, i64 168, i1 false)
  tail call void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"* %0) #14
  %25 = trunc i64 %19 to i32
  %26 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 0, i64 0, i32 %25) #14
  br label %203

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 2, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %27, %36
  %32 = phi i64 [ %37, %36 ], [ 0, %27 ]
  %33 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 11, i64 %32, i32 8
  %34 = load i8, i8* %33, align 4, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = add nuw i64 %32, 1
  %38 = icmp eq i64 %37, %29
  br i1 %38, label %50, label %31

39:                                               ; preds = %31, %27
  %40 = phi i64 [ 0, %27 ], [ %32, %31 ]
  %41 = icmp ult i64 %40, %29
  br i1 %41, label %42, label %50

42:                                               ; preds = %39, %47
  %43 = phi i64 [ %48, %47 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 11, i64 %43, i32 8
  %45 = load i8, i8* %44, align 4, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = add i64 %43, 1
  %49 = icmp eq i64 %48, %29
  br i1 %49, label %50, label %42

50:                                               ; preds = %36, %42, %47, %39
  %51 = phi i64 [ %40, %39 ], [ %40, %47 ], [ %40, %42 ], [ %29, %36 ]
  %52 = phi i64 [ %40, %39 ], [ %43, %42 ], [ %29, %47 ], [ %29, %36 ]
  %53 = sub i64 %52, %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  tail call void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"* %0) #14
  br label %203

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 3
  %58 = tail call zeroext i1 @_ZNK6webrtc26StableTargetRateExperiment9IsEnabledEv(%"class.webrtc::StableTargetRateExperiment"* %57) #14
  br i1 %58, label %59, label %155

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.webrtc::VideoBitrateAllocationParameters", %"struct.webrtc::VideoBitrateAllocationParameters"* %2, i64 0, i32 1
  %61 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp sgt i64 %62, 0
  br i1 %63, label %64, label %155

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 12
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = tail call double @_ZNK6webrtc26StableTargetRateExperiment30GetScreenshareHysteresisFactorEv(%"class.webrtc::StableTargetRateExperiment"* %57) #14
  br label %72

70:                                               ; preds = %64
  %71 = tail call double @_ZNK6webrtc26StableTargetRateExperiment24GetVideoHysteresisFactorEv(%"class.webrtc::StableTargetRateExperiment"* %57) #14
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi double [ %71, %70 ], [ %69, %68 ]
  %74 = load i64, i64* %61, align 8
  %75 = load i64, i64* %8, align 8
  %76 = icmp slt i64 %74, %75
  %77 = select i1 %76, %"class.webrtc::DataRate"* %60, %"class.webrtc::DataRate"* %7
  %78 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = sitofp i64 %79 to double
  %81 = fdiv double %80, %73
  %82 = tail call double @llvm.round.f64(double %81) #14
  %83 = fcmp oeq double %82, 0x7FF0000000000000
  br i1 %83, label %88, label %84

84:                                               ; preds = %72
  %85 = fcmp oeq double %82, 0xFFF0000000000000
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = fptosi double %82 to i64
  br label %88

88:                                               ; preds = %72, %84, %86
  %89 = phi i64 [ %87, %86 ], [ 9223372036854775807, %72 ], [ -9223372036854775808, %84 ]
  %90 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp ult i64 %91, 2
  br i1 %92, label %119, label %93

93:                                               ; preds = %88
  %94 = and i64 %91, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %98 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %97, align 8
  br label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 1
  %101 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %100 to %"class.webrtc::DataRate"*
  br label %102

102:                                              ; preds = %99, %96
  %103 = phi %"class.webrtc::DataRate"* [ %98, %96 ], [ %101, %99 ]
  %104 = lshr i64 %91, 1
  %105 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %103, i64 %104
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %102, %115
  %108 = phi %"class.webrtc::DataRate"* [ %117, %115 ], [ %103, %102 ]
  %109 = phi i64 [ %116, %115 ], [ 0, %102 ]
  %110 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %108, i64 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %109, 0
  %113 = icmp sle i64 %111, %89
  %114 = or i1 %112, %113
  br i1 %114, label %115, label %119

115:                                              ; preds = %107
  %116 = add nuw nsw i64 %109, 1
  %117 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %108, i64 1
  %118 = icmp eq %"class.webrtc::DataRate"* %117, %105
  br i1 %118, label %119, label %107

119:                                              ; preds = %107, %115, %88, %102
  %120 = phi i64 [ 0, %88 ], [ 0, %102 ], [ %109, %107 ], [ %116, %115 ]
  %121 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 5
  %122 = load i64, i64* %121, align 8
  %123 = icmp ult i64 %120, %122
  br i1 %123, label %124, label %186

124:                                              ; preds = %119
  br i1 %92, label %151, label %125

125:                                              ; preds = %124
  %126 = and i64 %91, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %130 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %129, align 8
  br label %134

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 1
  %133 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %132 to %"class.webrtc::DataRate"*
  br label %134

134:                                              ; preds = %131, %128
  %135 = phi %"class.webrtc::DataRate"* [ %130, %128 ], [ %133, %131 ]
  %136 = lshr i64 %91, 1
  %137 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %135, i64 %136
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %134, %147
  %140 = phi %"class.webrtc::DataRate"* [ %149, %147 ], [ %135, %134 ]
  %141 = phi i64 [ %148, %147 ], [ 0, %134 ]
  %142 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %140, i64 0, i32 0, i32 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %141, 0
  %145 = icmp sle i64 %143, %79
  %146 = or i1 %144, %145
  br i1 %146, label %147, label %151

147:                                              ; preds = %139
  %148 = add nuw nsw i64 %141, 1
  %149 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %140, i64 1
  %150 = icmp eq %"class.webrtc::DataRate"* %149, %137
  br i1 %150, label %151, label %139

151:                                              ; preds = %139, %147, %124, %134
  %152 = phi i64 [ 0, %124 ], [ 0, %134 ], [ %141, %139 ], [ %148, %147 ]
  %153 = icmp ult i64 %152, %122
  %154 = select i1 %153, i64 %152, i64 %122
  br label %186

155:                                              ; preds = %56, %59
  %156 = load i64, i64* %8, align 8
  %157 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = icmp ult i64 %158, 2
  br i1 %159, label %186, label %160

160:                                              ; preds = %155
  %161 = and i64 %158, 1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %165 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %164, align 8
  br label %169

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 4, i32 0, i32 1
  %168 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %167 to %"class.webrtc::DataRate"*
  br label %169

169:                                              ; preds = %166, %163
  %170 = phi %"class.webrtc::DataRate"* [ %165, %163 ], [ %168, %166 ]
  %171 = lshr i64 %158, 1
  %172 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %170, i64 %171
  %173 = icmp eq i64 %171, 0
  br i1 %173, label %186, label %174

174:                                              ; preds = %169, %182
  %175 = phi %"class.webrtc::DataRate"* [ %184, %182 ], [ %170, %169 ]
  %176 = phi i64 [ %183, %182 ], [ 0, %169 ]
  %177 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %175, i64 0, i32 0, i32 0, i32 0
  %178 = load i64, i64* %177, align 8
  %179 = icmp eq i64 %176, 0
  %180 = icmp sle i64 %178, %156
  %181 = or i1 %179, %180
  br i1 %181, label %182, label %186

182:                                              ; preds = %174
  %183 = add nuw nsw i64 %176, 1
  %184 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %175, i64 1
  %185 = icmp eq %"class.webrtc::DataRate"* %184, %172
  br i1 %185, label %186, label %174

186:                                              ; preds = %182, %174, %169, %155, %151, %119
  %187 = phi i64 [ %154, %151 ], [ %120, %119 ], [ 0, %155 ], [ 0, %169 ], [ %176, %174 ], [ %183, %182 ]
  %188 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 5
  store i64 %187, i64* %188, align 8
  %189 = bitcast %"class.webrtc::VideoBitrateAllocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %189) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %189, i8 -86, i64 168, i1 false)
  call void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"* nonnull %4) #14
  %190 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 12
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %186
  %194 = bitcast %"class.webrtc::VideoBitrateAllocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %194) #14
  call void @_ZNK6webrtc16SvcRateAllocator24GetAllocationNormalVideoENS_8DataRateEmm(%"class.webrtc::VideoBitrateAllocation"* nonnull sret %5, %"class.webrtc::SvcRateAllocator"* %1, i64 %19, i64 %51, i64 %187)
  br label %197

195:                                              ; preds = %186
  %196 = bitcast %"class.webrtc::VideoBitrateAllocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %196) #14
  call void @_ZNK6webrtc16SvcRateAllocator26GetAllocationScreenSharingENS_8DataRateEmm(%"class.webrtc::VideoBitrateAllocation"* nonnull sret %6, %"class.webrtc::SvcRateAllocator"* %1, i64 %19, i64 %51, i64 %187)
  br label %197

197:                                              ; preds = %195, %193
  %198 = phi i8* [ %196, %195 ], [ %194, %193 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %189, i8* nonnull align 4 %198, i64 165, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %198) #14
  %199 = icmp ult i64 %187, %53
  %200 = zext i1 %199 to i8
  %201 = getelementptr inbounds %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation"* %4, i64 0, i32 2
  store i8 %200, i8* %201, align 4
  %202 = bitcast %"class.webrtc::VideoBitrateAllocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* nonnull align 4 %189, i64 168, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %189) #14
  br label %203

203:                                              ; preds = %55, %197, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"*) unnamed_addr #2

declare zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"*, i64, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK6webrtc26StableTargetRateExperiment9IsEnabledEv(%"class.webrtc::StableTargetRateExperiment"*) local_unnamed_addr #2

declare double @_ZNK6webrtc26StableTargetRateExperiment30GetScreenshareHysteresisFactorEv(%"class.webrtc::StableTargetRateExperiment"*) local_unnamed_addr #2

declare double @_ZNK6webrtc26StableTargetRateExperiment24GetVideoHysteresisFactorEv(%"class.webrtc::StableTargetRateExperiment"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc16SvcRateAllocator20FindNumEnabledLayersENS_8DataRateE(%"class.webrtc::SvcRateAllocator"* readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 2
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = and i64 %4, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %10, align 8
  br label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %13 to %"class.webrtc::DataRate"*
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi %"class.webrtc::DataRate"* [ %11, %9 ], [ %14, %12 ]
  %17 = lshr i64 %4, 1
  %18 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %16, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %15, %28
  %21 = phi %"class.webrtc::DataRate"* [ %30, %28 ], [ %16, %15 ]
  %22 = phi i64 [ %29, %28 ], [ 0, %15 ]
  %23 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, 0
  %26 = icmp sle i64 %24, %1
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %20
  %29 = add i64 %22, 1
  %30 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %21, i64 1
  %31 = icmp eq %"class.webrtc::DataRate"* %30, %18
  br i1 %31, label %32, label %20

32:                                               ; preds = %28, %20, %15, %2
  %33 = phi i64 [ 0, %2 ], [ 0, %15 ], [ %29, %28 ], [ %22, %20 ]
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc16SvcRateAllocator24GetAllocationNormalVideoENS_8DataRateEmm(%"class.webrtc::VideoBitrateAllocation"* noalias sret, %"class.webrtc::SvcRateAllocator"* nocapture readonly, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.19", align 16
  %7 = alloca %"class.std::__1::vector.19", align 16
  %8 = alloca %"class.std::__1::vector.19", align 8
  %9 = alloca %"class.std::__1::vector.19", align 8
  %10 = bitcast %"class.std::__1::vector.19"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #14
  %14 = icmp eq i64 %4, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %5
  %16 = bitcast %"class.webrtc::DataRate"** %12 to i64*
  %17 = bitcast %"class.std::__1::vector.19"* %6 to i64*
  %18 = bitcast %"class.webrtc::DataRate"** %13 to i64*
  %19 = tail call i8* @_Znwm(i64 8) #15
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast i8* %19 to i64*
  store i64 %2, i64* %22, align 8
  %23 = ptrtoint i8* %19 to i64
  store i64 %23, i64* %17, align 16
  store i64 %21, i64* %16, align 8
  store i64 %21, i64* %18, align 16
  br label %49

24:                                               ; preds = %5
  %25 = bitcast %"class.std::__1::vector.19"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1
  %27 = bitcast %"class.std::__1::vector.19"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #14
  call fastcc void @_ZN6webrtc12_GLOBAL__N_112SplitBitrateEmNS_8DataRateEf(%"class.std::__1::vector.19"* nonnull sret %8, i64 %4, i64 %2)
  call fastcc void @_ZN6webrtc12_GLOBAL__N_115AdjustAndVerifyERKNS_10VideoCodecEmRKNSt3__16vectorINS_8DataRateENS4_9allocatorIS6_EEEE(%"class.std::__1::vector.19"* nonnull sret %7, %"class.webrtc::VideoCodec"* dereferenceable(376) %26, i64 %3, %"class.std::__1::vector.19"* nonnull dereferenceable(24) %8)
  %28 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %11, align 16
  %29 = icmp eq %"class.webrtc::DataRate"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.webrtc::DataRate"* %28 to i8*
  call void @_ZdlPv(i8* %31) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #14
  br label %32

32:                                               ; preds = %24, %30
  %33 = bitcast %"class.std::__1::vector.19"* %7 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 16
  %35 = bitcast %"class.std::__1::vector.19"* %6 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %35, align 16
  %36 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.webrtc::DataRate"** %36 to i64*
  %38 = load i64, i64* %37, align 16
  %39 = bitcast %"class.webrtc::DataRate"** %13 to i64*
  store i64 %38, i64* %39, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 0, i64 24, i1 false) #14
  %40 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %8, i64 0, i32 0, i32 0
  %41 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %40, align 8
  %42 = icmp eq %"class.webrtc::DataRate"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %32
  %44 = bitcast %"class.webrtc::DataRate"* %41 to i8*
  %45 = ptrtoint %"class.webrtc::DataRate"* %41 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %8, i64 0, i32 0, i32 1
  %47 = bitcast %"class.webrtc::DataRate"** %46 to i64*
  store i64 %45, i64* %47, align 8
  call void @_ZdlPv(i8* %44) #15
  br label %48

48:                                               ; preds = %32, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  br label %49

49:                                               ; preds = %48, %15
  %50 = phi i64 [ %4, %48 ], [ 1, %15 ]
  %51 = bitcast %"class.webrtc::VideoBitrateAllocation"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 -86, i64 168, i1 false)
  call void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"* %0) #14
  %52 = bitcast %"class.std::__1::vector.19"* %9 to i8*
  %53 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %9, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %9, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 2, i32 1
  %56 = bitcast %"class.webrtc::DataRate"** %54 to i64*
  %57 = bitcast %"class.std::__1::vector.19"* %9 to i8*
  %58 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %11, align 16
  br label %67

59:                                               ; preds = %116
  %60 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %11, align 16
  %61 = icmp eq %"class.webrtc::DataRate"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = ptrtoint %"class.webrtc::DataRate"* %60 to i64
  %64 = bitcast %"class.webrtc::DataRate"** %12 to i64*
  store i64 %63, i64* %64, align 8
  %65 = bitcast %"class.webrtc::DataRate"* %60 to i8*
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  ret void

67:                                               ; preds = %116, %49
  %68 = phi i64 [ 0, %49 ], [ %117, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  %69 = load i64, i64* %55, align 8
  %70 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %58, i64 %68, i32 0, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  call fastcc void @_ZN6webrtc12_GLOBAL__N_112SplitBitrateEmNS_8DataRateEf(%"class.std::__1::vector.19"* nonnull sret %9, i64 %69, i64 %71)
  %72 = load i64, i64* %55, align 8
  switch i64 %72, label %92 [
    i64 1, label %73
    i64 2, label %80
    i64 3, label %93
  ]

73:                                               ; preds = %67
  %74 = add i64 %68, %3
  %75 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %53, align 8
  %76 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %74, i64 0, i32 %78) #14
  br label %110

80:                                               ; preds = %67
  %81 = add i64 %68, %3
  %82 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %53, align 8
  %83 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %82, i64 1, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %81, i64 0, i32 %85) #14
  %87 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %53, align 8
  %88 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = trunc i64 %89 to i32
  %91 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %81, i64 1, i32 %90) #14
  br label %110

92:                                               ; preds = %67
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i32 320, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEEEEEvPKciS9_DpRKT_E1t, i64 0, i64 0), i64 %72, i32 3) #16
  unreachable

93:                                               ; preds = %67
  %94 = add i64 %68, %3
  %95 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %53, align 8
  %96 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %95, i64 2, i32 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  %99 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %94, i64 0, i32 %98) #14
  %100 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %53, align 8
  %101 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = trunc i64 %102 to i32
  %104 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %94, i64 1, i32 %103) #14
  %105 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %53, align 8
  %106 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %105, i64 1, i32 0, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  %109 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %94, i64 2, i32 %108) #14
  br label %110

110:                                              ; preds = %80, %93, %73
  %111 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %53, align 8
  %112 = icmp eq %"class.webrtc::DataRate"* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %110
  %114 = ptrtoint %"class.webrtc::DataRate"* %111 to i64
  store i64 %114, i64* %56, align 8
  %115 = bitcast %"class.webrtc::DataRate"* %111 to i8*
  call void @_ZdlPv(i8* %115) #15
  br label %116

116:                                              ; preds = %110, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  %117 = add nuw i64 %68, 1
  %118 = icmp eq i64 %117, %50
  br i1 %118, label %59, label %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc16SvcRateAllocator26GetAllocationScreenSharingENS_8DataRateEmm(%"class.webrtc::VideoBitrateAllocation"* noalias sret, %"class.webrtc::SvcRateAllocator"* nocapture readonly, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast %"class.webrtc::VideoBitrateAllocation"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 -86, i64 168, i1 false)
  tail call void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"* %0) #14
  %8 = icmp eq i64 %4, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 11, i64 %3, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = mul nuw nsw i64 %12, 1000
  %14 = icmp sgt i64 %13, %2
  br i1 %14, label %21, label %15

15:                                               ; preds = %9
  %16 = add i64 %4, %3
  %17 = icmp ugt i64 %16, %3
  br i1 %17, label %18, label %70

18:                                               ; preds = %15
  %19 = icmp eq i64 %2, 9223372036854775807
  %20 = icmp eq i64 %2, -9223372036854775808
  br label %24

21:                                               ; preds = %5, %9
  %22 = trunc i64 %2 to i32
  %23 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %3, i64 0, i32 %22) #14
  br label %111

24:                                               ; preds = %67, %18
  %25 = phi i32 [ %11, %18 ], [ %69, %67 ]
  %26 = phi i64 [ %3, %18 ], [ %65, %67 ]
  %27 = phi i64 [ 0, %18 ], [ %64, %67 ]
  %28 = phi i64 [ 0, %18 ], [ %53, %67 ]
  %29 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 11, i64 %26, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 1000
  %33 = icmp eq i64 %27, 9223372036854775807
  br i1 %33, label %40, label %34

34:                                               ; preds = %24
  %35 = zext i32 %25 to i64
  %36 = mul nuw nsw i64 %35, 1000
  %37 = icmp eq i64 %27, -9223372036854775808
  %38 = add nsw i64 %36, %27
  %39 = select i1 %37, i64 -9223372036854775808, i64 %38
  br label %40

40:                                               ; preds = %24, %34
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %24 ]
  %42 = icmp sgt i64 %41, %2
  br i1 %42, label %70, label %43

43:                                               ; preds = %40
  %44 = icmp eq i64 %27, -9223372036854775808
  %45 = or i1 %19, %44
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = or i1 %20, %33
  %48 = sub nsw i64 %2, %27
  %49 = select i1 %47, i64 -9223372036854775808, i64 %48
  br label %50

50:                                               ; preds = %43, %46
  %51 = phi i64 [ %49, %46 ], [ 9223372036854775807, %43 ]
  %52 = icmp slt i64 %51, %32
  %53 = select i1 %52, i64 %51, i64 %32
  %54 = trunc i64 %53 to i32
  %55 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %26, i64 0, i32 %54) #14
  %56 = icmp eq i64 %53, 9223372036854775807
  %57 = or i1 %33, %56
  br i1 %57, label %63, label %58

58:                                               ; preds = %50
  %59 = icmp eq i64 %53, -9223372036854775808
  %60 = or i1 %44, %59
  %61 = add nsw i64 %53, %27
  %62 = select i1 %60, i64 -9223372036854775808, i64 %61
  br label %63

63:                                               ; preds = %50, %58
  %64 = phi i64 [ %62, %58 ], [ 9223372036854775807, %50 ]
  %65 = add i64 %26, 1
  %66 = icmp eq i64 %65, %16
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 11, i64 %65, i32 6
  %69 = load i32, i32* %68, align 4
  br label %24

70:                                               ; preds = %63, %40, %15
  %71 = phi i64 [ 0, %15 ], [ %53, %63 ], [ %28, %40 ]
  %72 = phi i64 [ 0, %15 ], [ %64, %63 ], [ %27, %40 ]
  %73 = phi i64 [ %3, %15 ], [ %16, %63 ], [ %26, %40 ]
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %111, label %75

75:                                               ; preds = %70
  %76 = icmp eq i64 %2, 9223372036854775807
  %77 = icmp eq i64 %72, -9223372036854775808
  %78 = or i1 %76, %77
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = icmp ne i64 %2, -9223372036854775808
  %81 = icmp ne i64 %72, 9223372036854775807
  %82 = and i1 %80, %81
  %83 = icmp slt i64 %72, %2
  %84 = and i1 %83, %82
  br i1 %84, label %87, label %111

85:                                               ; preds = %75
  %86 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  br label %99

87:                                               ; preds = %79
  %88 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  %89 = sub nsw i64 %2, %72
  %90 = icmp eq i64 %71, 9223372036854775807
  %91 = icmp eq i64 %89, 9223372036854775807
  %92 = or i1 %90, %91
  br i1 %92, label %99, label %93

93:                                               ; preds = %87
  %94 = icmp eq i64 %71, -9223372036854775808
  %95 = icmp eq i64 %89, -9223372036854775808
  %96 = or i1 %94, %95
  %97 = add nsw i64 %89, %71
  %98 = select i1 %96, i64 -9223372036854775808, i64 %97
  br label %99

99:                                               ; preds = %87, %85, %93
  %100 = phi i8* [ %88, %93 ], [ %86, %85 ], [ %88, %87 ]
  %101 = phi i64 [ %98, %93 ], [ 9223372036854775807, %85 ], [ 9223372036854775807, %87 ]
  %102 = add i64 %73, -1
  %103 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %1, i64 0, i32 1, i32 11, i64 %102, i32 4
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = mul nuw nsw i64 %105, 1000
  %107 = icmp slt i64 %106, %101
  %108 = select i1 %107, i64 %106, i64 %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  %109 = trunc i64 %108 to i32
  %110 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %102, i64 0, i32 %109) #14
  br label %111

111:                                              ; preds = %79, %99, %70, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6webrtc12_GLOBAL__N_115AdjustAndVerifyERKNS_10VideoCodecEmRKNSt3__16vectorINS_8DataRateENS4_9allocatorIS6_EEEE(%"class.std::__1::vector.19"* noalias sret, %"class.webrtc::VideoCodec"* nocapture readonly dereferenceable(376), i64, %"class.std::__1::vector.19"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.19", align 8
  %6 = bitcast %"class.std::__1::vector.19"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  %10 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 1
  %11 = bitcast %"class.webrtc::DataRate"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.19"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %206, label %17

17:                                               ; preds = %4
  %18 = ashr exact i64 %15, 3
  %19 = bitcast %"class.webrtc::DataRate"** %8 to i64*
  %20 = bitcast %"class.std::__1::vector.19"* %5 to i64*
  %21 = bitcast %"class.webrtc::DataRate"** %9 to i64*
  br label %22

22:                                               ; preds = %17, %193
  %23 = phi i64 [ 0, %17 ], [ %194, %193 ]
  %24 = phi %"class.webrtc::DataRate"* [ null, %17 ], [ %195, %193 ]
  %25 = phi i64 [ 0, %17 ], [ %196, %193 ]
  %26 = phi i64 [ %14, %17 ], [ %200, %193 ]
  %27 = phi i64 [ %18, %17 ], [ %202, %193 ]
  %28 = phi i64 [ %15, %17 ], [ %201, %193 ]
  %29 = phi i64 [ %12, %17 ], [ %199, %193 ]
  %30 = phi i64 [ 0, %17 ], [ %197, %193 ]
  %31 = phi i64 [ 0, %17 ], [ %198, %193 ]
  %32 = inttoptr i64 %26 to %"class.webrtc::DataRate"*
  %33 = add i64 %31, %2
  %34 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %33, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = mul nuw nsw i64 %36, 1000
  %38 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %32, i64 %31, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 9223372036854775807
  %41 = icmp eq i64 %30, 9223372036854775807
  %42 = or i1 %41, %40
  br i1 %42, label %83, label %43

43:                                               ; preds = %22
  %44 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %33, i32 6
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = mul nuw nsw i64 %46, 1000
  %48 = icmp eq i64 %39, -9223372036854775808
  %49 = icmp eq i64 %30, -9223372036854775808
  %50 = or i1 %49, %48
  %51 = add nsw i64 %39, %30
  %52 = select i1 %50, i64 -9223372036854775808, i64 %51
  %53 = icmp slt i64 %52, %47
  br i1 %53, label %54, label %83

54:                                               ; preds = %43
  %55 = icmp eq i64 %28, 8
  %56 = bitcast %"class.std::__1::vector.19"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #14
  br i1 %55, label %57, label %76

57:                                               ; preds = %54
  %58 = tail call i8* @_Znwm(i64 8) #15
  %59 = bitcast i8* %58 to %"class.webrtc::DataRate"*
  %60 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %61 = bitcast %"class.webrtc::DataRate"** %60 to i8**
  store i8* %58, i8** %61, align 8
  %62 = bitcast %"class.std::__1::vector.19"* %0 to i8**
  store i8* %58, i8** %62, align 8
  %63 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %59, i64 %27
  %64 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.webrtc::DataRate"* %63, %"class.webrtc::DataRate"** %64, align 8
  %65 = bitcast %"class.webrtc::DataRate"** %60 to i64*
  %66 = ptrtoint i8* %58 to i64
  %67 = sub i64 %29, %26
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %57
  %70 = lshr exact i64 %67, 3
  %71 = inttoptr i64 %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 %71, i64 %67, i1 false) #14
  %72 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %59, i64 %70
  %73 = ptrtoint %"class.webrtc::DataRate"* %72 to i64
  br label %74

74:                                               ; preds = %69, %57
  %75 = phi i64 [ %73, %69 ], [ %66, %57 ]
  store i64 %75, i64* %65, align 8
  br label %215

76:                                               ; preds = %54
  %77 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  store i64 %23, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %79 = bitcast %"class.webrtc::DataRate"** %78 to i64*
  store i64 %25, i64* %79, align 8
  %80 = load i64, i64* %21, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.webrtc::DataRate"** %81 to i64*
  store i64 %80, i64* %82, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  br label %215

83:                                               ; preds = %22, %43
  %84 = phi i64 [ %52, %43 ], [ 9223372036854775807, %22 ]
  %85 = icmp sgt i64 %84, %37
  br i1 %85, label %138, label %86

86:                                               ; preds = %83
  %87 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %9, align 8
  %88 = icmp eq %"class.webrtc::DataRate"* %24, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %24, i64 0, i32 0, i32 0, i32 0
  store i64 %84, i64* %90, align 8
  %91 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %24, i64 1
  %92 = ptrtoint %"class.webrtc::DataRate"* %91 to i64
  store i64 %92, i64* %19, align 8
  br label %193

93:                                               ; preds = %86
  %94 = ptrtoint %"class.webrtc::DataRate"* %87 to i64
  %95 = sub i64 %94, %23
  %96 = ashr exact i64 %95, 3
  %97 = add nsw i64 %96, 1
  %98 = icmp ugt i64 %97, 2305843009213693951
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = bitcast %"class.std::__1::vector.19"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %100) #16
  unreachable

101:                                              ; preds = %93
  %102 = icmp ult i64 %96, 1152921504606846975
  br i1 %102, label %103, label %111

103:                                              ; preds = %101
  %104 = ashr exact i64 %95, 2
  %105 = icmp ult i64 %104, %97
  %106 = select i1 %105, i64 %97, i64 %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = icmp ugt i64 %106, 2305843009213693951
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  tail call void @abort() #16
  unreachable

111:                                              ; preds = %108, %101
  %112 = phi i64 [ %106, %108 ], [ 2305843009213693951, %101 ]
  %113 = shl i64 %112, 3
  %114 = tail call i8* @_Znwm(i64 %113) #15
  %115 = bitcast i8* %114 to %"class.webrtc::DataRate"*
  br label %116

116:                                              ; preds = %111, %103
  %117 = phi i64 [ %112, %111 ], [ 0, %103 ]
  %118 = phi %"class.webrtc::DataRate"* [ %115, %111 ], [ null, %103 ]
  %119 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %118, i64 %96
  %120 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %118, i64 %117
  %121 = ptrtoint %"class.webrtc::DataRate"* %120 to i64
  %122 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %119, i64 0, i32 0, i32 0, i32 0
  store i64 %84, i64* %122, align 8
  %123 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %119, i64 1
  %124 = ptrtoint %"class.webrtc::DataRate"* %123 to i64
  %125 = sub i64 %25, %23
  %126 = ashr exact i64 %125, 3
  %127 = sub nsw i64 0, %126
  %128 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %119, i64 %127
  %129 = ptrtoint %"class.webrtc::DataRate"* %128 to i64
  %130 = icmp sgt i64 %125, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %116
  %132 = bitcast %"class.webrtc::DataRate"* %128 to i8*
  %133 = inttoptr i64 %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 %125, i1 false) #14
  br label %134

134:                                              ; preds = %131, %116
  store i64 %129, i64* %20, align 8
  store i64 %124, i64* %19, align 8
  store i64 %121, i64* %21, align 8
  %135 = icmp eq i64 %23, 0
  br i1 %135, label %193, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %23 to i8*
  tail call void @_ZdlPv(i8* %137) #15
  br label %193

138:                                              ; preds = %83
  %139 = icmp eq i64 %84, 9223372036854775807
  %140 = sub nsw i64 %84, %37
  %141 = select i1 %139, i64 9223372036854775807, i64 %140
  %142 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %9, align 8
  %143 = icmp eq %"class.webrtc::DataRate"* %24, %142
  br i1 %143, label %148, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %24, i64 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %145, align 8
  %146 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %24, i64 1
  %147 = ptrtoint %"class.webrtc::DataRate"* %146 to i64
  store i64 %147, i64* %19, align 8
  br label %193

148:                                              ; preds = %138
  %149 = ptrtoint %"class.webrtc::DataRate"* %142 to i64
  %150 = sub i64 %149, %23
  %151 = ashr exact i64 %150, 3
  %152 = add nsw i64 %151, 1
  %153 = icmp ugt i64 %152, 2305843009213693951
  br i1 %153, label %154, label %156

154:                                              ; preds = %148
  %155 = bitcast %"class.std::__1::vector.19"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %155) #16
  unreachable

156:                                              ; preds = %148
  %157 = icmp ult i64 %151, 1152921504606846975
  br i1 %157, label %158, label %166

158:                                              ; preds = %156
  %159 = ashr exact i64 %150, 2
  %160 = icmp ult i64 %159, %152
  %161 = select i1 %160, i64 %152, i64 %159
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %158
  %164 = icmp ugt i64 %161, 2305843009213693951
  br i1 %164, label %165, label %166

165:                                              ; preds = %163
  tail call void @abort() #16
  unreachable

166:                                              ; preds = %163, %156
  %167 = phi i64 [ %161, %163 ], [ 2305843009213693951, %156 ]
  %168 = shl i64 %167, 3
  %169 = tail call i8* @_Znwm(i64 %168) #15
  %170 = bitcast i8* %169 to %"class.webrtc::DataRate"*
  br label %171

171:                                              ; preds = %166, %158
  %172 = phi i64 [ %167, %166 ], [ 0, %158 ]
  %173 = phi %"class.webrtc::DataRate"* [ %170, %166 ], [ null, %158 ]
  %174 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %173, i64 %151
  %175 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %173, i64 %172
  %176 = ptrtoint %"class.webrtc::DataRate"* %175 to i64
  %177 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %174, i64 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %177, align 8
  %178 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %174, i64 1
  %179 = ptrtoint %"class.webrtc::DataRate"* %178 to i64
  %180 = sub i64 %25, %23
  %181 = ashr exact i64 %180, 3
  %182 = sub nsw i64 0, %181
  %183 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %174, i64 %182
  %184 = ptrtoint %"class.webrtc::DataRate"* %183 to i64
  %185 = icmp sgt i64 %180, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %171
  %187 = bitcast %"class.webrtc::DataRate"* %183 to i8*
  %188 = inttoptr i64 %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 %180, i1 false) #14
  br label %189

189:                                              ; preds = %186, %171
  store i64 %184, i64* %20, align 8
  store i64 %179, i64* %19, align 8
  store i64 %176, i64* %21, align 8
  %190 = icmp eq i64 %23, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %189
  %192 = inttoptr i64 %23 to i8*
  tail call void @_ZdlPv(i8* %192) #15
  br label %193

193:                                              ; preds = %89, %134, %136, %144, %189, %191
  %194 = phi i64 [ %184, %191 ], [ %184, %189 ], [ %23, %144 ], [ %129, %136 ], [ %129, %134 ], [ %23, %89 ]
  %195 = phi %"class.webrtc::DataRate"* [ %178, %191 ], [ %178, %189 ], [ %146, %144 ], [ %123, %136 ], [ %123, %134 ], [ %91, %89 ]
  %196 = phi i64 [ %179, %191 ], [ %179, %189 ], [ %147, %144 ], [ %124, %136 ], [ %124, %134 ], [ %92, %89 ]
  %197 = phi i64 [ %141, %191 ], [ %141, %189 ], [ %141, %144 ], [ 0, %136 ], [ 0, %134 ], [ 0, %89 ]
  %198 = add nuw i64 %31, 1
  %199 = load i64, i64* %11, align 8
  %200 = load i64, i64* %13, align 8
  %201 = sub i64 %199, %200
  %202 = ashr exact i64 %201, 3
  %203 = icmp ult i64 %198, %202
  br i1 %203, label %22, label %204

204:                                              ; preds = %193
  %205 = load i64, i64* %21, align 8
  br label %206

206:                                              ; preds = %4, %204
  %207 = phi i64 [ %205, %204 ], [ 0, %4 ]
  %208 = phi i64 [ %196, %204 ], [ 0, %4 ]
  %209 = phi i64 [ %194, %204 ], [ 0, %4 ]
  %210 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %212 = bitcast %"class.webrtc::DataRate"** %211 to i64*
  store i64 %208, i64* %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast %"class.webrtc::DataRate"** %213 to i64*
  store i64 %207, i64* %214, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  br label %215

215:                                              ; preds = %74, %76, %206
  %216 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %7, align 8
  %217 = icmp eq %"class.webrtc::DataRate"* %216, null
  br i1 %217, label %222, label %218

218:                                              ; preds = %215
  %219 = ptrtoint %"class.webrtc::DataRate"* %216 to i64
  %220 = bitcast %"class.webrtc::DataRate"** %8 to i64*
  store i64 %219, i64* %220, align 8
  %221 = bitcast %"class.webrtc::DataRate"* %216 to i8*
  tail call void @_ZdlPv(i8* %221) #15
  br label %222

222:                                              ; preds = %215, %218
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6webrtc12_GLOBAL__N_112SplitBitrateEmNS_8DataRateEf(%"class.std::__1::vector.19"* noalias sret, i64, i64) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.19"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = add i64 %1, -1
  %11 = and i64 %1, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = sub i64 %1, %11
  br label %42

15:                                               ; preds = %3
  %16 = tail call double @pow(double 0x3FE19999A0000000, double 0x43F0000000000000) #14
  br label %64

17:                                               ; preds = %42, %9
  %18 = phi double [ undef, %9 ], [ %60, %42 ]
  %19 = phi i64 [ 0, %9 ], [ %61, %42 ]
  %20 = phi double [ 0.000000e+00, %9 ], [ %60, %42 ]
  %21 = icmp eq i64 %11, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %17, %22
  %23 = phi i64 [ %29, %22 ], [ %19, %17 ]
  %24 = phi double [ %28, %22 ], [ %20, %17 ]
  %25 = phi i64 [ %30, %22 ], [ %11, %17 ]
  %26 = uitofp i64 %23 to double
  %27 = tail call double @pow(double 0x3FE19999A0000000, double %26) #14
  %28 = fadd double %24, %27
  %29 = add nuw i64 %23, 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %22, !llvm.loop !8

32:                                               ; preds = %22, %17
  %33 = phi double [ %18, %17 ], [ %28, %22 ]
  %34 = add i64 %1, -1
  %35 = uitofp i64 %34 to double
  %36 = tail call double @pow(double 0x3FE19999A0000000, double %35) #14
  br i1 %8, label %64, label %37

37:                                               ; preds = %32
  %38 = sitofp i64 %2 to double
  %39 = bitcast %"class.webrtc::DataRate"** %5 to i64*
  %40 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %41 = bitcast %"class.webrtc::DataRate"** %6 to i64*
  br label %121

42:                                               ; preds = %42, %13
  %43 = phi i64 [ 0, %13 ], [ %61, %42 ]
  %44 = phi double [ 0.000000e+00, %13 ], [ %60, %42 ]
  %45 = phi i64 [ %14, %13 ], [ %62, %42 ]
  %46 = uitofp i64 %43 to double
  %47 = tail call double @pow(double 0x3FE19999A0000000, double %46) #14
  %48 = fadd double %44, %47
  %49 = or i64 %43, 1
  %50 = uitofp i64 %49 to double
  %51 = tail call double @pow(double 0x3FE19999A0000000, double %50) #14
  %52 = fadd double %48, %51
  %53 = or i64 %43, 2
  %54 = uitofp i64 %53 to double
  %55 = tail call double @pow(double 0x3FE19999A0000000, double %54) #14
  %56 = fadd double %52, %55
  %57 = or i64 %43, 3
  %58 = uitofp i64 %57 to double
  %59 = tail call double @pow(double 0x3FE19999A0000000, double %58) #14
  %60 = fadd double %56, %59
  %61 = add nuw i64 %43, 4
  %62 = add i64 %45, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %17, label %42

64:                                               ; preds = %195, %15, %32
  %65 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %4, align 8
  %66 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %5, align 8
  %67 = icmp eq %"class.webrtc::DataRate"* %65, %66
  br i1 %67, label %118, label %68

68:                                               ; preds = %64
  %69 = ptrtoint %"class.webrtc::DataRate"* %65 to i64
  %70 = getelementptr %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %66, i64 -1, i32 0, i32 0, i32 0
  %71 = ptrtoint i64* %70 to i64
  %72 = sub i64 %71, %69
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %73, 0
  br i1 %76, label %101, label %77

77:                                               ; preds = %68
  %78 = sub nuw nsw i64 %74, %75
  br label %79

79:                                               ; preds = %246, %77
  %80 = phi i64 [ 0, %77 ], [ %247, %246 ]
  %81 = phi %"class.webrtc::DataRate"* [ %65, %77 ], [ %248, %246 ]
  %82 = phi i64 [ %78, %77 ], [ %249, %246 ]
  %83 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %81, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %80, 9223372036854775807
  %86 = icmp eq i64 %84, 9223372036854775807
  %87 = or i1 %85, %86
  br i1 %87, label %94, label %88

88:                                               ; preds = %79
  %89 = icmp eq i64 %80, -9223372036854775808
  %90 = icmp eq i64 %84, -9223372036854775808
  %91 = or i1 %89, %90
  %92 = add nsw i64 %84, %80
  %93 = select i1 %91, i64 -9223372036854775808, i64 %92
  br label %94

94:                                               ; preds = %88, %79
  %95 = phi i64 [ %93, %88 ], [ 9223372036854775807, %79 ]
  %96 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %81, i64 1, i32 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %95, 9223372036854775807
  %99 = icmp eq i64 %97, 9223372036854775807
  %100 = or i1 %98, %99
  br i1 %100, label %246, label %240

101:                                              ; preds = %246, %68
  %102 = phi i64 [ undef, %68 ], [ %247, %246 ]
  %103 = phi i64 [ 0, %68 ], [ %247, %246 ]
  %104 = phi %"class.webrtc::DataRate"* [ %65, %68 ], [ %248, %246 ]
  %105 = icmp eq i64 %75, 0
  br i1 %105, label %118, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %104, i64 0, i32 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %103, 9223372036854775807
  %110 = icmp eq i64 %108, 9223372036854775807
  %111 = or i1 %109, %110
  br i1 %111, label %118, label %112

112:                                              ; preds = %106
  %113 = icmp eq i64 %103, -9223372036854775808
  %114 = icmp eq i64 %108, -9223372036854775808
  %115 = or i1 %113, %114
  %116 = add nsw i64 %108, %103
  %117 = select i1 %115, i64 -9223372036854775808, i64 %116
  br label %118

118:                                              ; preds = %101, %106, %112, %64
  %119 = phi i64 [ 0, %64 ], [ %102, %101 ], [ %117, %112 ], [ 9223372036854775807, %106 ]
  %120 = icmp slt i64 %119, %2
  br i1 %120, label %199, label %218

121:                                              ; preds = %195, %37
  %122 = phi double [ %36, %37 ], [ %196, %195 ]
  %123 = phi i64 [ 0, %37 ], [ %197, %195 ]
  %124 = fmul double %122, %38
  %125 = tail call double @llvm.round.f64(double %124) #14
  %126 = fcmp oeq double %125, 0x7FF0000000000000
  br i1 %126, label %131, label %127

127:                                              ; preds = %121
  %128 = fcmp oeq double %125, 0xFFF0000000000000
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = fptosi double %125 to i64
  br label %131

131:                                              ; preds = %121, %127, %129
  %132 = phi i64 [ %130, %129 ], [ 9223372036854775807, %121 ], [ -9223372036854775808, %127 ]
  %133 = sitofp i64 %132 to double
  %134 = fdiv double %133, %33
  %135 = tail call double @llvm.round.f64(double %134) #14
  %136 = fcmp oeq double %135, 0x7FF0000000000000
  br i1 %136, label %141, label %137

137:                                              ; preds = %131
  %138 = fcmp oeq double %135, 0xFFF0000000000000
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = fptosi double %135 to i64
  br label %141

141:                                              ; preds = %131, %137, %139
  %142 = phi i64 [ %140, %139 ], [ 9223372036854775807, %131 ], [ -9223372036854775808, %137 ]
  %143 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %5, align 8
  %144 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %6, align 8
  %145 = icmp ult %"class.webrtc::DataRate"* %143, %144
  %146 = ptrtoint %"class.webrtc::DataRate"* %144 to i64
  br i1 %145, label %147, label %151

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %143, i64 0, i32 0, i32 0, i32 0
  store i64 %142, i64* %148, align 8
  %149 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %143, i64 1
  %150 = ptrtoint %"class.webrtc::DataRate"* %149 to i64
  store i64 %150, i64* %39, align 8
  br label %195

151:                                              ; preds = %141
  %152 = ptrtoint %"class.webrtc::DataRate"* %143 to i64
  %153 = load i64, i64* %40, align 8
  %154 = sub i64 %152, %153
  %155 = ashr exact i64 %154, 3
  %156 = add nsw i64 %155, 1
  %157 = icmp ugt i64 %156, 2305843009213693951
  br i1 %157, label %158, label %160

158:                                              ; preds = %151
  %159 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %159) #16
  unreachable

160:                                              ; preds = %151
  %161 = sub i64 %146, %153
  %162 = ashr exact i64 %161, 3
  %163 = icmp ult i64 %162, 1152921504606846975
  br i1 %163, label %164, label %172

164:                                              ; preds = %160
  %165 = ashr exact i64 %161, 2
  %166 = icmp ult i64 %165, %156
  %167 = select i1 %166, i64 %156, i64 %165
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %177, label %169

169:                                              ; preds = %164
  %170 = icmp ugt i64 %167, 2305843009213693951
  br i1 %170, label %171, label %172

171:                                              ; preds = %169
  tail call void @abort() #16
  unreachable

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %167, %169 ], [ 2305843009213693951, %160 ]
  %174 = shl i64 %173, 3
  %175 = tail call i8* @_Znwm(i64 %174) #15
  %176 = bitcast i8* %175 to %"class.webrtc::DataRate"*
  br label %177

177:                                              ; preds = %172, %164
  %178 = phi i64 [ %173, %172 ], [ 0, %164 ]
  %179 = phi i8* [ %175, %172 ], [ null, %164 ]
  %180 = phi %"class.webrtc::DataRate"* [ %176, %172 ], [ null, %164 ]
  %181 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %180, i64 %155
  %182 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %180, i64 %178
  %183 = ptrtoint %"class.webrtc::DataRate"* %182 to i64
  %184 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %181, i64 0, i32 0, i32 0, i32 0
  store i64 %142, i64* %184, align 8
  %185 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %181, i64 1
  %186 = ptrtoint %"class.webrtc::DataRate"* %185 to i64
  %187 = ptrtoint %"class.webrtc::DataRate"* %180 to i64
  %188 = icmp sgt i64 %154, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %177
  %190 = inttoptr i64 %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %190, i64 %154, i1 false) #14
  br label %191

191:                                              ; preds = %189, %177
  store i64 %187, i64* %40, align 8
  store i64 %186, i64* %39, align 8
  store i64 %183, i64* %41, align 8
  %192 = icmp eq i64 %153, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %194) #15
  br label %195

195:                                              ; preds = %147, %191, %193
  %196 = fdiv double %122, 0x3FE19999A0000000
  %197 = add nuw i64 %123, 1
  %198 = icmp eq i64 %197, %1
  br i1 %198, label %64, label %121

199:                                              ; preds = %118
  %200 = icmp eq i64 %2, 9223372036854775807
  %201 = icmp eq i64 %119, -9223372036854775808
  %202 = or i1 %200, %201
  %203 = sub nsw i64 %2, %119
  %204 = select i1 %202, i64 9223372036854775807, i64 %203
  %205 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %66, i64 -1, i32 0, i32 0, i32 0
  %206 = load i64, i64* %205, align 8
  %207 = icmp eq i64 %206, 9223372036854775807
  %208 = icmp eq i64 %204, 9223372036854775807
  %209 = or i1 %208, %207
  br i1 %209, label %216, label %210

210:                                              ; preds = %199
  %211 = icmp eq i64 %206, -9223372036854775808
  %212 = icmp eq i64 %204, -9223372036854775808
  %213 = or i1 %212, %211
  %214 = add nsw i64 %206, %204
  %215 = select i1 %213, i64 -9223372036854775808, i64 %214
  br label %216

216:                                              ; preds = %199, %210
  %217 = phi i64 [ %215, %210 ], [ 9223372036854775807, %199 ]
  store i64 %217, i64* %205, align 8
  br label %239

218:                                              ; preds = %118
  %219 = icmp sgt i64 %119, %2
  br i1 %219, label %220, label %239

220:                                              ; preds = %218
  %221 = icmp eq i64 %119, 9223372036854775807
  %222 = icmp eq i64 %2, -9223372036854775808
  %223 = or i1 %222, %221
  %224 = sub nsw i64 %119, %2
  %225 = select i1 %223, i64 9223372036854775807, i64 %224
  %226 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %66, i64 -1, i32 0, i32 0, i32 0
  %227 = load i64, i64* %226, align 8
  %228 = icmp eq i64 %227, 9223372036854775807
  %229 = icmp eq i64 %225, -9223372036854775808
  %230 = or i1 %229, %228
  br i1 %230, label %237, label %231

231:                                              ; preds = %220
  %232 = icmp eq i64 %227, -9223372036854775808
  %233 = icmp eq i64 %225, 9223372036854775807
  %234 = or i1 %233, %232
  %235 = sub nsw i64 %227, %225
  %236 = select i1 %234, i64 -9223372036854775808, i64 %235
  br label %237

237:                                              ; preds = %220, %231
  %238 = phi i64 [ %236, %231 ], [ 9223372036854775807, %220 ]
  store i64 %238, i64* %226, align 8
  br label %239

239:                                              ; preds = %218, %237, %216
  ret void

240:                                              ; preds = %94
  %241 = icmp eq i64 %95, -9223372036854775808
  %242 = icmp eq i64 %97, -9223372036854775808
  %243 = or i1 %241, %242
  %244 = add nsw i64 %97, %95
  %245 = select i1 %243, i64 -9223372036854775808, i64 %244
  br label %246

246:                                              ; preds = %240, %94
  %247 = phi i64 [ %245, %240 ], [ 9223372036854775807, %94 ]
  %248 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %81, i64 2
  %249 = add i64 %82, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %101, label %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc16SvcRateAllocator13GetMaxBitrateERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZN6webrtc16SvcRateAllocator12GetNumLayersERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376) %0)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1, %10
  %6 = phi i64 [ %11, %10 ], [ 0, %1 ]
  %7 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 11, i64 %6, i32 8
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = add nuw i64 %6, 1
  %12 = icmp eq i64 %11, %3
  br i1 %12, label %24, label %5

13:                                               ; preds = %5, %1
  %14 = phi i64 [ 0, %1 ], [ %6, %5 ]
  %15 = icmp ult i64 %14, %3
  br i1 %15, label %16, label %24

16:                                               ; preds = %13, %21
  %17 = phi i64 [ %22, %21 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 11, i64 %17, i32 8
  %19 = load i8, i8* %18, align 4, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = add i64 %17, 1
  %23 = icmp eq i64 %22, %3
  br i1 %23, label %24, label %16

24:                                               ; preds = %10, %16, %21, %13
  %25 = phi i64 [ %14, %13 ], [ %14, %21 ], [ %14, %16 ], [ %3, %10 ]
  %26 = phi i64 [ %14, %13 ], [ %17, %16 ], [ %3, %21 ], [ %3, %10 ]
  %27 = sub i64 %26, %25
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %24
  %30 = and i64 %27, 1
  %31 = add i64 %25, 1
  %32 = icmp eq i64 %26, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = sub i64 %27, %30
  br label %56

35:                                               ; preds = %90, %29
  %36 = phi i64 [ undef, %29 ], [ %91, %90 ]
  %37 = phi i64 [ 0, %29 ], [ %91, %90 ]
  %38 = phi i64 [ 0, %29 ], [ %92, %90 ]
  %39 = icmp eq i64 %30, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %35
  %41 = icmp eq i64 %37, 9223372036854775807
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = add i64 %38, %25
  %44 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 11, i64 %43, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = mul nuw nsw i64 %46, 1000
  %48 = icmp eq i64 %37, -9223372036854775808
  %49 = add nsw i64 %47, %37
  %50 = select i1 %48, i64 -9223372036854775808, i64 %49
  br label %51

51:                                               ; preds = %35, %40, %42, %24
  %52 = phi i64 [ 0, %24 ], [ %36, %35 ], [ %50, %42 ], [ 9223372036854775807, %40 ]
  %53 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %78, label %73

56:                                               ; preds = %90, %33
  %57 = phi i64 [ 0, %33 ], [ %91, %90 ]
  %58 = phi i64 [ 0, %33 ], [ %92, %90 ]
  %59 = phi i64 [ %34, %33 ], [ %93, %90 ]
  %60 = icmp eq i64 %57, 9223372036854775807
  br i1 %60, label %70, label %61

61:                                               ; preds = %56
  %62 = add i64 %58, %25
  %63 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 11, i64 %62, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = mul nuw nsw i64 %65, 1000
  %67 = icmp eq i64 %57, -9223372036854775808
  %68 = add nsw i64 %66, %57
  %69 = select i1 %67, i64 -9223372036854775808, i64 %68
  br label %70

70:                                               ; preds = %56, %61
  %71 = phi i64 [ %69, %61 ], [ 9223372036854775807, %56 ]
  %72 = icmp eq i64 %71, 9223372036854775807
  br i1 %72, label %90, label %80

73:                                               ; preds = %51
  %74 = zext i32 %54 to i64
  %75 = mul nuw nsw i64 %74, 1000
  %76 = icmp slt i64 %75, %52
  %77 = select i1 %76, i64 %75, i64 %52
  br label %78

78:                                               ; preds = %51, %73
  %79 = phi i64 [ %52, %51 ], [ %77, %73 ]
  ret i64 %79

80:                                               ; preds = %70
  %81 = or i64 %58, 1
  %82 = add i64 %81, %25
  %83 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 11, i64 %82, i32 4
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 1000
  %87 = icmp eq i64 %71, -9223372036854775808
  %88 = add nsw i64 %86, %71
  %89 = select i1 %87, i64 -9223372036854775808, i64 %88
  br label %90

90:                                               ; preds = %80, %70
  %91 = phi i64 [ %89, %80 ], [ 9223372036854775807, %70 ]
  %92 = add nuw i64 %58, 2
  %93 = add i64 %59, -2
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %35, label %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc16SvcRateAllocator17GetPaddingBitrateERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::InlinedVector", align 8
  %3 = bitcast %"class.absl::InlinedVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 48, i1 false)
  call void @_ZN6webrtc16SvcRateAllocator21GetLayerStartBitratesERKNS_10VideoCodecE(%"class.absl::InlinedVector"* nonnull sret %2, %"class.webrtc::VideoCodec"* dereferenceable(376) %0)
  %4 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 2
  %7 = and i64 %5, 1
  br i1 %6, label %19, label %8

8:                                                ; preds = %1
  %9 = icmp eq i64 %7, 0
  %10 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.webrtc::DataRate"*, %"class.webrtc::DataRate"** %10, align 8
  %12 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %2, i64 0, i32 0, i32 1
  %13 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %12 to %"class.webrtc::DataRate"*
  %14 = select i1 %9, %"class.webrtc::DataRate"* %13, %"class.webrtc::DataRate"* %11
  %15 = lshr i64 %5, 1
  %16 = add nsw i64 %15, -1
  %17 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %14, i64 %16, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %1, %8
  %20 = phi i64 [ %18, %8 ], [ 0, %1 ]
  %21 = icmp eq i64 %7, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.webrtc::DataRate"** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %19, %22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #14
  ret i64 %20
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc16SvcRateAllocatorD2Ev(%"class.webrtc::SvcRateAllocator"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc16SvcRateAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.webrtc::DataRate"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 3, i32 2
  %14 = bitcast %"class.webrtc::FieldTrialParameter.10"* %13 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %14) #14
  %15 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 3, i32 1
  %16 = bitcast %"class.webrtc::FieldTrialParameter.10"* %15 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %16) #14
  %17 = bitcast %"class.webrtc::StableTargetRateExperiment"* %12 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %17) #14
  %18 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 1, i32 18
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %11, %23
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc16SvcRateAllocatorD0Ev(%"class.webrtc::SvcRateAllocator"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc16SvcRateAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.webrtc::DataRate"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %7, %1
  %12 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 3, i32 2
  %14 = bitcast %"class.webrtc::FieldTrialParameter.10"* %13 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %14) #14
  %15 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 3, i32 1
  %16 = bitcast %"class.webrtc::FieldTrialParameter.10"* %15 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %16) #14
  %17 = bitcast %"class.webrtc::StableTargetRateExperiment"* %12 to %"class.webrtc::FieldTrialParameterInterface"*
  tail call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* %17) #14
  %18 = getelementptr inbounds %"class.webrtc::SvcRateAllocator", %"class.webrtc::SvcRateAllocator"* %0, i64 0, i32 1, i32 18
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %11, %23
  %27 = bitcast %"class.webrtc::SvcRateAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #15
  ret void
}

declare void @_ZN6webrtc21VideoBitrateAllocator13GetAllocationEjj(%"class.webrtc::VideoBitrateAllocation"* sret, %"class.webrtc::VideoBitrateAllocator"*, i32, i32) unnamed_addr #2

declare void @_ZN6webrtc21VideoBitrateAllocator23SetLegacyConferenceModeEb(%"class.webrtc::VideoBitrateAllocator"*, i1 zeroext) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"*) unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.webrtc::DataRate"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc8DataRateELm5ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRKS3_EEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage"*, %"class.webrtc::DataRate"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !10
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::DataRate, 5, std::__1::allocator<webrtc::DataRate> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.webrtc::DataRate"** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !10
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !10
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 2305843009213693951
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #16
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 10, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = inttoptr i64 %21 to %"class.webrtc::DataRate"*
  %23 = inttoptr i64 %21 to i8*
  %24 = lshr i64 %4, 1
  %25 = shl i64 %20, 3
  %26 = tail call i8* @_Znwm(i64 %25) #15
  %27 = bitcast i8* %26 to %"class.webrtc::DataRate"*
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %24
  %30 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  %33 = icmp eq i64 %24, 0
  br i1 %33, label %167, label %34

34:                                               ; preds = %19
  %35 = icmp ult i64 %4, 8
  br i1 %35, label %124, label %36

36:                                               ; preds = %34
  %37 = shl i64 %24, 3
  %38 = getelementptr i8, i8* %26, i64 %37
  %39 = getelementptr %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %22, i64 %24
  %40 = bitcast %"class.webrtc::DataRate"* %39 to i8*
  %41 = icmp ult i8* %26, %40
  %42 = icmp ugt i8* %38, %23
  %43 = and i1 %41, %42
  br i1 %43, label %124, label %44

44:                                               ; preds = %36
  %45 = and i64 %24, 9223372036854775804
  %46 = getelementptr %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %22, i64 %45
  %47 = add nsw i64 %45, -4
  %48 = lshr exact i64 %47, 2
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 3
  %51 = icmp ult i64 %47, 12
  br i1 %51, label %103, label %52

52:                                               ; preds = %44
  %53 = sub nsw i64 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %100, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %101, %54 ]
  %57 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %22, i64 %55, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %55, i32 0, i32 0, i32 0
  %59 = bitcast i64* %57 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8, !alias.scope !13
  %61 = getelementptr i64, i64* %57, i64 2
  %62 = bitcast i64* %61 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8, !alias.scope !13
  %64 = bitcast i64* %58 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %64, align 8, !alias.scope !16, !noalias !13
  %65 = getelementptr inbounds i64, i64* %58, i64 2
  %66 = bitcast i64* %65 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %66, align 8, !alias.scope !16, !noalias !13
  %67 = or i64 %55, 4
  %68 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %22, i64 %67, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %67, i32 0, i32 0, i32 0
  %70 = bitcast i64* %68 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !13
  %72 = getelementptr i64, i64* %68, i64 2
  %73 = bitcast i64* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !13
  %75 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !16, !noalias !13
  %76 = getelementptr inbounds i64, i64* %69, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !16, !noalias !13
  %78 = or i64 %55, 8
  %79 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %22, i64 %78, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %78, i32 0, i32 0, i32 0
  %81 = bitcast i64* %79 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !13
  %83 = getelementptr i64, i64* %79, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !13
  %86 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !16, !noalias !13
  %87 = getelementptr inbounds i64, i64* %80, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !16, !noalias !13
  %89 = or i64 %55, 12
  %90 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %22, i64 %89, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %89, i32 0, i32 0, i32 0
  %92 = bitcast i64* %90 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !13
  %94 = getelementptr i64, i64* %90, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !13
  %97 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !16, !noalias !13
  %98 = getelementptr inbounds i64, i64* %91, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !16, !noalias !13
  %100 = add i64 %55, 16
  %101 = add i64 %56, -4
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %54, !llvm.loop !18

103:                                              ; preds = %54, %44
  %104 = phi i64 [ 0, %44 ], [ %100, %54 ]
  %105 = icmp eq i64 %50, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %103, %106
  %107 = phi i64 [ %119, %106 ], [ %104, %103 ]
  %108 = phi i64 [ %120, %106 ], [ %50, %103 ]
  %109 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %22, i64 %107, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %107, i32 0, i32 0, i32 0
  %111 = bitcast i64* %109 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !13
  %113 = getelementptr i64, i64* %109, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !13
  %116 = bitcast i64* %110 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !16, !noalias !13
  %117 = getelementptr inbounds i64, i64* %110, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !16, !noalias !13
  %119 = add i64 %107, 4
  %120 = add i64 %108, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %106, !llvm.loop !20

122:                                              ; preds = %106, %103
  %123 = icmp eq i64 %24, %45
  br i1 %123, label %167, label %124

124:                                              ; preds = %122, %36, %34
  %125 = phi %"class.webrtc::DataRate"* [ %22, %36 ], [ %22, %34 ], [ %46, %122 ]
  %126 = phi i64 [ 0, %36 ], [ 0, %34 ], [ %45, %122 ]
  %127 = xor i64 %126, -1
  %128 = add nsw i64 %24, %127
  %129 = and i64 %24, 3
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %142, label %131

131:                                              ; preds = %124, %131
  %132 = phi %"class.webrtc::DataRate"* [ %138, %131 ], [ %125, %124 ]
  %133 = phi i64 [ %139, %131 ], [ %126, %124 ]
  %134 = phi i64 [ %140, %131 ], [ %129, %124 ]
  %135 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %132, i64 0, i32 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %133, i32 0, i32 0, i32 0
  %137 = load i64, i64* %135, align 8
  store i64 %137, i64* %136, align 8
  %138 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %132, i64 1
  %139 = add nuw nsw i64 %133, 1
  %140 = add i64 %134, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %131, !llvm.loop !21

142:                                              ; preds = %131, %124
  %143 = phi %"class.webrtc::DataRate"* [ %125, %124 ], [ %138, %131 ]
  %144 = phi i64 [ %126, %124 ], [ %139, %131 ]
  %145 = icmp ult i64 %128, 3
  br i1 %145, label %167, label %146

146:                                              ; preds = %142, %146
  %147 = phi %"class.webrtc::DataRate"* [ %164, %146 ], [ %143, %142 ]
  %148 = phi i64 [ %165, %146 ], [ %144, %142 ]
  %149 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %147, i64 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %148, i32 0, i32 0, i32 0
  %151 = load i64, i64* %149, align 8
  store i64 %151, i64* %150, align 8
  %152 = add nuw nsw i64 %148, 1
  %153 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %147, i64 1, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %152, i32 0, i32 0, i32 0
  %155 = load i64, i64* %153, align 8
  store i64 %155, i64* %154, align 8
  %156 = add nuw nsw i64 %148, 2
  %157 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %147, i64 2, i32 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %156, i32 0, i32 0, i32 0
  %159 = load i64, i64* %157, align 8
  store i64 %159, i64* %158, align 8
  %160 = add nuw nsw i64 %148, 3
  %161 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %147, i64 3, i32 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %27, i64 %160, i32 0, i32 0, i32 0
  %163 = load i64, i64* %161, align 8
  store i64 %163, i64* %162, align 8
  %164 = getelementptr inbounds %"class.webrtc::DataRate", %"class.webrtc::DataRate"* %147, i64 4
  %165 = add nuw nsw i64 %148, 4
  %166 = icmp eq i64 %165, %24
  br i1 %166, label %167, label %146, !llvm.loop !22

167:                                              ; preds = %142, %146, %122, %19
  br i1 %6, label %173, label %168

168:                                              ; preds = %167
  %169 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %170 = bitcast %"class.webrtc::DataRate"** %169 to i8**
  %171 = load i8*, i8** %170, align 8
  tail call void @_ZdlPv(i8* %171) #15
  %172 = load i64, i64* %3, align 8
  br label %173

173:                                              ; preds = %168, %167
  %174 = phi i64 [ %172, %168 ], [ %4, %167 ]
  %175 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %176 = bitcast %"class.webrtc::DataRate"** %175 to i64*
  store i64 %28, i64* %176, align 8
  %177 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %177, align 8
  %178 = or i64 %174, 1
  %179 = add i64 %178, 2
  store i64 %179, i64* %3, align 8
  ret %"class.webrtc::DataRate"* %29
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc8DataRateELm5ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!6 = distinct !{!6, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc8DataRateELm5ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc8DataRateELm5ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!12 = distinct !{!12, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc8DataRateELm5ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !9}
!21 = distinct !{!21, !9}
!22 = distinct !{!22, !19}
