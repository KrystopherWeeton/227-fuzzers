; ModuleID = '../../v8/src/heap/memory-chunk.cc'
source_filename = "../../v8/src/heap/memory-chunk.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.615"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.623", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.604", %"class.v8::internal::VirtualMemory" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.121", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.125", %"class.std::__1::vector.125", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.358", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.410", %"class.std::__1::unique_ptr.410", %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.422", %"class.std::__1::unique_ptr.422", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::shared_ptr.440", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.462", %"class.std::__1::unique_ptr.488", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.494", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.507", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.290", i8, [7 x i8], %"class.std::__1::unordered_map.513", %"class.std::__1::unordered_map.539", %"class.std::__1::unordered_map.513", %"class.std::__1::unordered_map.563", %"class.std::__1::vector.591", i8, %"class.std::__1::unique_ptr.598", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.682", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.688", %"class.std::__1::unique_ptr.709", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.719", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.839", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.852", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.862", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.873", %"struct.std::__1::atomic.112", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.948", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.991"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.999", i32, i8, i8, i32, i32, %"class.std::__1::vector.1005", %"class.std::__1::vector.1005", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1012", i64, %"class.std::__1::unordered_map.1013", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.500", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.120", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1069", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.677", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.677" = type { %"struct.std::__1::__atomic_base.678" }
%"struct.std::__1::__atomic_base.678" = type { %"struct.std::__1::__cxx_atomic_impl.679" }
%"struct.std::__1::__cxx_atomic_impl.679" = type { %"struct.std::__1::__cxx_atomic_base_impl.680" }
%"struct.std::__1::__cxx_atomic_base_impl.680" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.500" }
%"class.std::__1::shared_ptr.688" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.99", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.703" }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.101" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.692" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.99", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"class.std::__1::unique_ptr.694"*, %"class.std::__1::unique_ptr.694"*, %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.std::__1::unique_ptr.694"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.712", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.712" = type { %"struct.std::__1::__atomic_base.713" }
%"struct.std::__1::__atomic_base.713" = type { %"struct.std::__1::__cxx_atomic_impl.714" }
%"struct.std::__1::__cxx_atomic_impl.714" = type { %"struct.std::__1::__cxx_atomic_base_impl.715" }
%"struct.std::__1::__cxx_atomic_base_impl.715" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.719" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.720", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.720" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.721", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.std::__1::unique_ptr.723"*, %"class.std::__1::unique_ptr.723"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::unique_ptr.723" = type opaque
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.std::__1::unique_ptr.723"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"struct.std::__1::atomic.112", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", %"class.std::__1::set.771", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.771" = type { %"class.std::__1::__tree.772" }
%"class.std::__1::__tree.772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.780" }
%"class.v8::internal::TaggedImpl.780" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.779" }
%"class.v8::internal::TaggedImpl.779" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.647", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.781", %"class.v8::internal::DetachableVector.782", %"class.v8::internal::DetachableVector.781", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.782" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.781" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.441" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.451" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.451" = type { %"class.std::__1::__tree.452" }
%"class.std::__1::__tree.452" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.783", %"class.std::__1::vector.789", %"class.std::__1::unique_ptr.796", %"class.std::__1::vector.803", %"class.std::__1::unique_ptr.810", i64, %"class.std::__1::vector.816", %"class.std::__1::vector.824", %"class.std::__1::vector.832", i8, i8, i32 }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.791" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.v8::internal::GlobalHandles::NodeSpace.799"* }
%"class.v8::internal::GlobalHandles::NodeSpace.799" = type opaque
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"struct.std::__1::pair.818"*, %"struct.std::__1::pair.818"*, %"class.std::__1::__compressed_pair.819" }
%"struct.std::__1::pair.818" = type opaque
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::pair.818"* }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"struct.std::__1::pair.826"*, %"struct.std::__1::pair.826"*, %"class.std::__1::__compressed_pair.827" }
%"struct.std::__1::pair.826" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.std::__1::pair.826"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.834" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.653", %"class.std::__1::vector.839" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { i64**, i64**, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.846" }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { i32*, i32*, %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.852" = type { %"struct.std::__1::__atomic_base.853" }
%"struct.std::__1::__atomic_base.853" = type { %"struct.std::__1::__cxx_atomic_impl.854" }
%"struct.std::__1::__cxx_atomic_impl.854" = type { %"struct.std::__1::__cxx_atomic_base_impl.855" }
%"struct.std::__1::__cxx_atomic_base_impl.855" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.862" = type { %"struct.std::__1::__atomic_base.863" }
%"struct.std::__1::__atomic_base.863" = type { %"struct.std::__1::__cxx_atomic_impl.864" }
%"struct.std::__1::__cxx_atomic_impl.864" = type { %"struct.std::__1::__cxx_atomic_base_impl.865" }
%"struct.std::__1::__cxx_atomic_base_impl.865" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.869 }
%union.anon.869 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.873" = type { %"class.std::__1::__hash_table.874" }
%"class.std::__1::__hash_table.874" = type <{ %"class.std::__1::unique_ptr.875", %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.890", %"class.std::__1::__compressed_pair.893", [4 x i8] }>
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877", %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::__hash_node_base.878"** }
%"struct.std::__1::__hash_node_base.878" = type { %"struct.std::__1::__hash_node_base.878"* }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.std::__1::__bucket_list_deallocator.880" }
%"class.std::__1::__bucket_list_deallocator.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::__hash_node_base.878" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__cxx_atomic_impl.114" }
%"struct.std::__1::__cxx_atomic_impl.114" = type { %"struct.std::__1::__cxx_atomic_base_impl.115" }
%"struct.std::__1::__cxx_atomic_base_impl.115" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.899", %"class.v8::internal::Handle.905", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.906", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.905" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.906" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.907", %"class.std::__1::vector.913", %"class.std::__1::unique_ptr.921", %"class.std::__1::unique_ptr.927", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"struct.std::__1::pair.947" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"class.std::__1::unique_ptr.915"*, %"class.std::__1::unique_ptr.915"*, %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::unique_ptr.915" = type opaque
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.std::__1::unique_ptr.915"* }
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"struct.std::__1::pair.941"*, %"struct.std::__1::pair.941"*, %"class.std::__1::__compressed_pair.942" }
%"struct.std::__1::pair.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::pair.941"* }
%"struct.std::__1::pair.947" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.681"*, i16, i8*)*, i8* }
%"class.v8::Local.681" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.951", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.951" = type { %"class.std::__1::__hash_table.952" }
%"class.std::__1::__hash_table.952" = type <{ %"class.std::__1::unique_ptr.953", %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.968", %"class.std::__1::__compressed_pair.972", [4 x i8] }>
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955", %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"struct.std::__1::__hash_node_base.956"** }
%"struct.std::__1::__hash_node_base.956" = type { %"struct.std::__1::__hash_node_base.956"* }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.std::__1::__bucket_list_deallocator.958" }
%"class.std::__1::__bucket_list_deallocator.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::__hash_node_base.956" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.986" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.980"**, %"struct.std::__1::pair.980"**, %"struct.std::__1::pair.980"**, %"class.std::__1::__compressed_pair.981" }
%"struct.std::__1::pair.980" = type opaque
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::pair.980"** }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.991" = type { %"class.std::__1::__vector_base.992" }
%"class.std::__1::__vector_base.992" = type { %"class.v8::internal::Handle.993"*, %"class.v8::internal::Handle.993"*, %"class.std::__1::__compressed_pair.994" }
%"class.v8::internal::Handle.993" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.v8::internal::Handle.993"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.857", i32, %"class.v8::Local.681" }
%"class.v8::Local.857" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.653", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1005" = type { %"class.std::__1::__vector_base.1006" }
%"class.std::__1::__vector_base.1006" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1012" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1013" = type { %"class.std::__1::__hash_table.1014" }
%"class.std::__1::__hash_table.1014" = type <{ %"class.std::__1::unique_ptr.1015", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1033", [4 x i8] }>
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017", %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.std::__1::__hash_node_base.1018"** }
%"struct.std::__1::__hash_node_base.1018" = type { %"struct.std::__1::__hash_node_base.1018"* }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::__bucket_list_deallocator.1020" }
%"class.std::__1::__bucket_list_deallocator.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1018" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.500" = type { %"class.std::__1::__vector_base.501" }
%"class.std::__1::__vector_base.501" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.120" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1037", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1066", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1067", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1037" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1062, %union.anon.1064, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1062 = type { i64 }
%union.anon.1064 = type { i64 }
%"class.std::__1::weak_ptr.1066" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.120" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1067" = type { %"class.v8::PersistentBase.1068" }
%"class.v8::PersistentBase.1068" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1038", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1038" = type { %"class.std::__1::__hash_table.1039" }
%"class.std::__1::__hash_table.1039" = type <{ %"class.std::__1::unique_ptr.1040", %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1058", [4 x i8] }>
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042", %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1043"** }
%"struct.std::__1::__hash_node_base.1043" = type { %"struct.std::__1::__hash_node_base.1043"* }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.std::__1::__bucket_list_deallocator.1045" }
%"class.std::__1::__bucket_list_deallocator.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1043" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.634", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.434", %"class.std::__1::vector.669", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.634" = type { %"struct.std::__1::__atomic_base.635" }
%"struct.std::__1::__atomic_base.635" = type { %"struct.std::__1::__cxx_atomic_impl.636" }
%"struct.std::__1::__cxx_atomic_impl.636" = type { %"struct.std::__1::__cxx_atomic_base_impl.637" }
%"struct.std::__1::__cxx_atomic_base_impl.637" = type { i32 }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.653" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"struct.std::__1::pair.671"*, %"struct.std::__1::pair.671"*, %"class.std::__1::__compressed_pair.672" }
%"struct.std::__1::pair.671" = type opaque
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"struct.std::__1::pair.671"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.59" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.29", %"class.std::__1::vector.29", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.31" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.36" }
%"class.std::__1::__hash_table.36" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base.40"** }
%"struct.std::__1::__hash_node_base.40" = type { %"struct.std::__1::__hash_node_base.40"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator.42" }
%"class.std::__1::__bucket_list_deallocator.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.40" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.858", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.858" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.63" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*, %"class.std::__1::__compressed_pair.66" }
%"struct.std::__1::pair.65" = type { i32, i64 }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::pair.65"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.71" }
%"class.std::__1::unordered_map.71" = type { %"class.std::__1::__hash_table.72" }
%"class.std::__1::__hash_table.72" = type <{ %"class.std::__1::unique_ptr.73", %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93", [4 x i8] }>
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75", %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.76"** }
%"struct.std::__1::__hash_node_base.76" = type { %"struct.std::__1::__hash_node_base.76"* }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::__bucket_list_deallocator.78" }
%"class.std::__1::__bucket_list_deallocator.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::__hash_node_base.76" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.112", %"struct.std::__1::atomic.116", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.127" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.240", %"class.std::__1::vector.240", %"class.std::__1::vector.240", %"class.std::__1::vector.247", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.141", %"class.std::__1::vector.142", %"class.std::__1::vector.149", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.141" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.144" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.std::__1::unique_ptr.151"*, %"class.std::__1::unique_ptr.151"*, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::unique_ptr.151" = type opaque
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::unique_ptr.151"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.157", %"class.v8::internal::Worklist.159", %"class.v8::internal::Worklist.159", %"class.v8::internal::Worklist.159", %"class.v8::internal::Worklist.161", %"class.v8::internal::Worklist.163", %"class.v8::internal::Worklist.165", %"class.v8::internal::Worklist.167", %"class.v8::internal::Worklist.169", %"class.v8::internal::Worklist.171" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.157" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.159" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.161" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.163" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.165" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.167" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.169" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.171" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.173", i8, i64 }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.189" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.141"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.189" = type { %"class.std::__1::__hash_table.190" }
%"class.std::__1::__hash_table.190" = type <{ %"class.std::__1::unique_ptr.191", %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.209", [4 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193", %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base.194"** }
%"struct.std::__1::__hash_node_base.194" = type { %"struct.std::__1::__hash_node_base.194"* }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__bucket_list_deallocator.196" }
%"class.std::__1::__bucket_list_deallocator.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base.194" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.216" }
%"class.std::__1::unordered_map.216" = type { %"class.std::__1::__hash_table.217" }
%"class.std::__1::__hash_table.217" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.236", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base.221"** }
%"struct.std::__1::__hash_node_base.221" = type { %"struct.std::__1::__hash_node_base.221"* }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::__bucket_list_deallocator.223" }
%"class.std::__1::__bucket_list_deallocator.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.221" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"*, %"class.std::__1::__compressed_pair.250" }
%"struct.std::__1::pair.249" = type opaque
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::pair.249"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.255", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.240"], [3 x %"class.std::__1::vector.240"], i8, %"struct.std::__1::atomic.112", [6 x i8], %"class.std::__1::vector.240", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.265"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.240", %"class.std::__1::vector.240", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.265" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.290", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.283"], %"class.std::__1::unique_ptr.255" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.322", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.326", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.331" }
%"struct.std::__1::atomic.322" = type { %"struct.std::__1::__atomic_base.323" }
%"struct.std::__1::__atomic_base.323" = type { %"struct.std::__1::__cxx_atomic_impl.324" }
%"struct.std::__1::__cxx_atomic_impl.324" = type { %"struct.std::__1::__cxx_atomic_base_impl.325" }
%"struct.std::__1::__cxx_atomic_base_impl.325" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.326" = type { %"struct.std::__1::__atomic_base.327" }
%"struct.std::__1::__atomic_base.327" = type { %"struct.std::__1::__cxx_atomic_impl.328" }
%"struct.std::__1::__cxx_atomic_impl.328" = type { %"struct.std::__1::__cxx_atomic_base_impl.329" }
%"struct.std::__1::__cxx_atomic_base_impl.329" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.255", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.112", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.361", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.361" = type { %"class.std::__1::__hash_table.362" }
%"class.std::__1::__hash_table.362" = type <{ %"class.std::__1::unique_ptr.363", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.381", [4 x i8] }>
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.366"** }
%"struct.std::__1::__hash_node_base.366" = type { %"struct.std::__1::__hash_node_base.366"* }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__bucket_list_deallocator.368" }
%"class.std::__1::__bucket_list_deallocator.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.366" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.397" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.440" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.458", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.441", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.458" = type { %"struct.std::__1::__atomic_base.459" }
%"struct.std::__1::__atomic_base.459" = type { %"struct.std::__1::__cxx_atomic_impl.460" }
%"struct.std::__1::__cxx_atomic_impl.460" = type { %"struct.std::__1::__cxx_atomic_base_impl.461" }
%"struct.std::__1::__cxx_atomic_base_impl.461" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.462" = type { %"class.std::__1::__hash_table.463" }
%"class.std::__1::__hash_table.463" = type <{ %"class.std::__1::unique_ptr.464", %"class.std::__1::__compressed_pair.474", %"class.std::__1::__compressed_pair.479", %"class.std::__1::__compressed_pair.482", [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466", %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.std::__1::__hash_node_base.467"** }
%"struct.std::__1::__hash_node_base.467" = type { %"struct.std::__1::__hash_node_base.467"* }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.std::__1::__bucket_list_deallocator.469" }
%"class.std::__1::__bucket_list_deallocator.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.std::__1::__hash_node_base.467" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.500", %"class.std::__1::vector.500" }
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.290" = type { %"class.std::__1::__hash_table.291" }
%"class.std::__1::__hash_table.291" = type <{ %"class.std::__1::unique_ptr.292", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.311", [4 x i8] }>
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294", %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.295"** }
%"struct.std::__1::__hash_node_base.295" = type { %"struct.std::__1::__hash_node_base.295"* }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::__bucket_list_deallocator.297" }
%"class.std::__1::__bucket_list_deallocator.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base.295" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.539" = type { %"class.std::__1::__hash_table.540" }
%"class.std::__1::__hash_table.540" = type <{ %"class.std::__1::unique_ptr.541", %"class.std::__1::__compressed_pair.551", %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.559", [4 x i8] }>
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543", %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"struct.std::__1::__hash_node_base.544"** }
%"struct.std::__1::__hash_node_base.544" = type { %"struct.std::__1::__hash_node_base.544"* }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.std::__1::__bucket_list_deallocator.546" }
%"class.std::__1::__bucket_list_deallocator.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"struct.std::__1::__hash_node_base.544" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.513" = type { %"class.std::__1::__hash_table.514" }
%"class.std::__1::__hash_table.514" = type <{ %"class.std::__1::unique_ptr.515", %"class.std::__1::__compressed_pair.525", %"class.std::__1::__compressed_pair.530", %"class.std::__1::__compressed_pair.533", [4 x i8] }>
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517", %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.518"** }
%"struct.std::__1::__hash_node_base.518" = type { %"struct.std::__1::__hash_node_base.518"* }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.std::__1::__bucket_list_deallocator.520" }
%"class.std::__1::__bucket_list_deallocator.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.std::__1::__hash_node_base.518" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.563" = type { %"class.std::__1::__hash_table.564" }
%"class.std::__1::__hash_table.564" = type <{ %"class.std::__1::unique_ptr.565", %"class.std::__1::__compressed_pair.575", %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.585", [4 x i8] }>
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567", %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.568"** }
%"struct.std::__1::__hash_node_base.568" = type { %"struct.std::__1::__hash_node_base.568"* }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.std::__1::__bucket_list_deallocator.570" }
%"class.std::__1::__bucket_list_deallocator.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::__hash_node_base.568" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.591" = type { %"class.std::__1::__vector_base.592" }
%"class.std::__1::__vector_base.592" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.604" = type { %"struct.std::__1::__atomic_base.605" }
%"struct.std::__1::__atomic_base.605" = type { %"struct.std::__1::__cxx_atomic_impl.606" }
%"struct.std::__1::__cxx_atomic_impl.606" = type { %"struct.std::__1::__cxx_atomic_base_impl.607" }
%"struct.std::__1::__cxx_atomic_base_impl.607" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.608" }
%"class.std::__1::vector.608" = type { %"class.std::__1::__vector_base.609" }
%"class.std::__1::__vector_base.609" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.610" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.615" = type { %"class.std::__1::__tree.616" }
%"class.std::__1::__tree.616" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.623" = type { %"struct.std::__1::__atomic_base.624" }
%"struct.std::__1::__atomic_base.624" = type { %"struct.std::__1::__cxx_atomic_impl.625" }
%"struct.std::__1::__cxx_atomic_impl.625" = type { %"struct.std::__1::__cxx_atomic_base_impl.626" }
%"struct.std::__1::__cxx_atomic_base_impl.626" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.627", i8, [7 x i8] }>
%"class.std::__1::vector.627" = type { %"class.std::__1::__vector_base.628" }
%"class.std::__1::__vector_base.628" = type { i64*, i64*, %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.v8::internal::SlotSet::Bucket" = type { [32 x i32] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::HeapObject" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZN2v88internal11MemoryChunk14ReleaseSlotSetILNS0_17RememberedSetTypeE0EEEvv = comdat any

$_ZN2v88internal11MemoryChunk14ReleaseSlotSetILNS0_17RememberedSetTypeE1EEEvv = comdat any

$_ZN2v88internal11MemoryChunk19ReleaseTypedSlotSetILNS0_17RememberedSetTypeE0EEEvv = comdat any

$_ZN2v88internal11MemoryChunk19ReleaseTypedSlotSetILNS0_17RememberedSetTypeE1EEEvv = comdat any

$_ZN2v88internal11MemoryChunk23ReleaseInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEvv = comdat any

$_ZN2v88internal11MemoryChunk23ReleaseInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEvv = comdat any

$_ZN2v88internal11MemoryChunk34RegisterObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEvNS0_10HeapObjectE = comdat any

$_ZN2v88internal11MemoryChunk34RegisterObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEvNS0_10HeapObjectE = comdat any

$_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv = comdat any

$_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv = comdat any

$_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_12TypedSlotSetEv = comdat any

$_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_12TypedSlotSetEv = comdat any

$_ZN2v88internal11MemoryChunk24AllocateInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEPNSt3__13setINS0_10HeapObjectENS0_6Object8ComparerENS4_9allocatorIS6_EEEEv = comdat any

$_ZN2v88internal11MemoryChunk24AllocateInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEPNSt3__13setINS0_10HeapObjectENS0_6Object8ComparerENS4_9allocatorIS6_EEEEv = comdat any

$_ZN2v88internal11MemoryChunk36RegisteredObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEbNS0_10HeapObjectE = comdat any

$_ZN2v88internal11MemoryChunk36RegisteredObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEbNS0_10HeapObjectE = comdat any

$_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZN2v88internal12TypedSlotSetD0Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN2v88internal12TypedSlotSetE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [102 x i8] c"page_allocator->DiscardSystemPages( reinterpret_cast<void*>(memory_area.begin()), memory_area.size())\00", align 1
@.str.2 = private unnamed_addr constant [69 x i8] c"reservation_.SetPermissions(protect_start, protect_size, permission)\00", align 1
@_ZN2v88internal25FLAG_write_code_using_rwxE = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [151 x i8] c"reservation_.SetPermissions(unprotect_start, unprotect_size, FLAG_write_code_using_rwx ? PageAllocator::kReadWriteExecute : PageAllocator::kReadWrite)\00", align 1
@.str.4 = private unnamed_addr constant [102 x i8] c"chunk->reservation_.SetPermissions( chunk->area_start(), area_size, DefaultWritableCodePermissions())\00", align 1
@_ZN2v88internal6Bitmap5kSizeE = external local_unnamed_addr constant i64, align 8
@_ZN2v88internal12FLAG_jitlessE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal12TypedSlotSetE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::TypedSlots"*)* @_ZN2v88internal10TypedSlotsD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::TypedSlotSet"*)* @_ZN2v88internal12TypedSlotSetD0Ev to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk19DiscardUnusedMemoryEmm(%"class.v8::internal::MemoryChunk"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call { i64, i64 } @_ZN2v88internal15MemoryAllocator24ComputeDiscardMemoryAreaEmm(i64 %1, i64 %2) #11
  %5 = extractvalue { i64, i64 } %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %3
  %8 = extractvalue { i64, i64 } %4, 0
  %9 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %10, i64 0, i32 85, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %12, i64 0, i32 2
  %18 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %12, i64 0, i32 1
  %19 = select i1 %16, %"class.v8::PageAllocator"** %18, %"class.v8::PageAllocator"** %17
  %20 = load %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"** %19, align 8
  %21 = inttoptr i64 %8 to i8*
  %22 = bitcast %"class.v8::PageAllocator"* %20 to i1 (%"class.v8::PageAllocator"*, i8*, i64)***
  %23 = load i1 (%"class.v8::PageAllocator"*, i8*, i64)**, i1 (%"class.v8::PageAllocator"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.v8::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::PageAllocator"*, i8*, i64)** %23, i64 10
  %25 = load i1 (%"class.v8::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::PageAllocator"*, i8*, i64)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.v8::PageAllocator"* %20, i8* %21, i64 %5) #11
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

28:                                               ; preds = %7, %3
  ret void
}

declare { i64, i64 } @_ZN2v88internal15MemoryAllocator24ComputeDiscardMemoryAreaEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk25InitializationMemoryFenceEv(%"class.v8::internal::MemoryChunk"* nocapture readnone) local_unnamed_addr #3 align 2 {
  fence seq_cst
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk52DecrementWriteUnprotectCounterAndMaybeSetPermissionsENS_13PageAllocator10PermissionE(%"class.v8::internal::MemoryChunk"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 9
  %4 = load %"class.v8::base::Mutex"*, %"class.v8::base::Mutex"** %3, align 8
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 10
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %2
  %9 = add i64 %6, -1
  store i64 %9, i64* %5, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %8
  %12 = ptrtoint %"class.v8::internal::MemoryChunk"* %0 to i64
  %13 = tail call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() #11
  %14 = add i64 %13, %12
  %15 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #11
  %16 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = xor i64 %19, -1
  %21 = add i64 %17, %15
  %22 = add i64 %21, %20
  %23 = sub nsw i64 0, %15
  %24 = and i64 %22, %23
  %25 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 9
  %26 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %25, i64 %14, i64 %24, i32 %1) #11
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

28:                                               ; preds = %8, %11, %2
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %4) #11
  ret void
}

declare i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"*, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11MemoryChunk52DecrementWriteUnprotectCounterAndMaybeSetPermissionsENS_13PageAllocator10PermissionE(%"class.v8::internal::MemoryChunk"* %0, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11MemoryChunk52DecrementWriteUnprotectCounterAndMaybeSetPermissionsENS_13PageAllocator10PermissionE(%"class.v8::internal::MemoryChunk"* %0, i32 4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 9
  %3 = load %"class.v8::base::Mutex"*, %"class.v8::base::Mutex"** %2, align 8
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 10
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %28

8:                                                ; preds = %1
  %9 = ptrtoint %"class.v8::internal::MemoryChunk"* %0 to i64
  %10 = tail call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() #11
  %11 = add i64 %10, %9
  %12 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #11
  %13 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = xor i64 %16, -1
  %18 = add i64 %14, %12
  %19 = add i64 %18, %17
  %20 = sub nsw i64 0, %12
  %21 = and i64 %19, %20
  %22 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 9
  %23 = load i8, i8* @_ZN2v88internal25FLAG_write_code_using_rwxE, align 1, !range !3
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 2, i32 3
  %26 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %22, i64 %11, i64 %21, i32 %25) #11
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

28:                                               ; preds = %8, %1
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::Heap"*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::BasicMemoryChunk"* %0 to %"class.v8::internal::MemoryChunk"*
  %5 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 0
  store atomic volatile i64 0, i64* %5 release, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 1
  store atomic volatile i64 0, i64* %6 release, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 4
  store atomic volatile i64 0, i64* %7 release, align 8
  %8 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 5
  store atomic volatile i64 0, i64* %8 release, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  store atomic volatile i64 0, i64* %9 release, align 8
  %10 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 7
  %11 = bitcast %"struct.std::__1::atomic.15"* %10 to <2 x %"class.std::__1::set.615"*>*
  store <2 x %"class.std::__1::set.615"*> zeroinitializer, <2 x %"class.std::__1::set.615"*>* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 2
  %13 = bitcast %"class.v8::internal::Heap"** %12 to i64*
  store atomic i64 0, i64* %13 seq_cst, align 8
  %14 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 9, i32 1, i32 0
  store atomic i64 0, i64* %14 seq_cst, align 8
  %15 = tail call i8* @_Znwm(i64 40) #13
  %16 = bitcast i8* %15 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* nonnull %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 9, i32 1, i32 1
  %18 = bitcast i64* %17 to i8**
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 2, i32 0
  store i64 0, i64* %19, align 8
  %20 = tail call i8* @_Znwm(i64 40) #13
  %21 = bitcast i8* %20 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* nonnull %21) #11
  %22 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 9
  %23 = bitcast %"class.v8::internal::VirtualMemory"* %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 2, i32 7
  %25 = bitcast %"struct.std::__1::atomic.15"* %24 to %"class.v8::internal::Bitmap"**
  store %"class.v8::internal::Bitmap"* null, %"class.v8::internal::Bitmap"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 2, i32 1
  store atomic i64 0, i64* %26 seq_cst, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  store atomic i64 0, i64* %27 seq_cst, align 8
  %28 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 2, i32 5
  %29 = bitcast i64* %28 to %"class.v8::internal::FreeListCategory"***
  store %"class.v8::internal::FreeListCategory"** null, %"class.v8::internal::FreeListCategory"*** %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 1, i32 3
  store atomic i64 0, i64* %30 monotonic, align 8
  %31 = icmp eq i32 %2, 1
  br i1 %31, label %32, label %59

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = or i64 %34, 1
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 40
  %37 = load i8, i8* %36, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 41
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %19, align 8
  br label %59

42:                                               ; preds = %32
  %43 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #11
  %44 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %43
  %50 = add i64 %49, %48
  %51 = sub nsw i64 0, %43
  %52 = and i64 %50, %51
  %53 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 0, i32 9
  %54 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !3
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, i32 3, i32 2
  %57 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %53, i64 %47, i64 %52, i32 %56) #11
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

59:                                               ; preds = %42, %39, %3
  %60 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 0, i32 8, i32 0
  %61 = bitcast %"struct.std::__1::__atomic_base.605"* %60 to i64*
  %62 = load atomic i64, i64* %61 seq_cst, align 8
  %63 = inttoptr i64 %62 to %"class.v8::internal::Space"*
  %64 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %63, i64 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = tail call i8* @_Znwm(i64 32) #13
  %69 = getelementptr inbounds i8, i8* %68, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 32, i1 false)
  store i8 1, i8* %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 2, i32 8
  %71 = bitcast %"struct.std::__1::atomic.604"* %70 to i8**
  store i8* %68, i8** %71, align 8
  br label %75

72:                                               ; preds = %59
  %73 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 2, i32 8
  %74 = bitcast %"struct.std::__1::atomic.604"* %73 to %"class.v8::internal::CodeObjectRegistry"**
  store %"class.v8::internal::CodeObjectRegistry"* null, %"class.v8::internal::CodeObjectRegistry"** %74, align 8
  br label %75

75:                                               ; preds = %72, %67
  %76 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 2, i32 9
  %77 = bitcast %"class.v8::internal::VirtualMemory"* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = tail call zeroext i1 @_ZN2v88internal4Heap8IsSharedEv(%"class.v8::internal::Heap"* %1) #11
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %0, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = or i64 %81, 8388608
  store i64 %82, i64* %80, align 8
  br label %83

83:                                               ; preds = %79, %75
  ret %"class.v8::internal::MemoryChunk"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare zeroext i1 @_ZN2v88internal4Heap8IsSharedEv(%"class.v8::internal::Heap"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11MemoryChunk23CommittedPhysicalMemoryEv(%"class.v8::internal::MemoryChunk"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2v84base2OS14HasLazyCommitsEv() #11
  br i1 %2, label %3, label %16

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 2097152
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 8, i32 0
  %10 = bitcast %"struct.std::__1::__atomic_base.605"* %9 to i64*
  %11 = load atomic i64, i64* %10 seq_cst, align 8
  %12 = inttoptr i64 %11 to %"class.v8::internal::Space"*
  %13 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %12, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 4
  br i1 %15, label %16, label %18

16:                                               ; preds = %8, %1
  %17 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  br label %21

18:                                               ; preds = %3, %8
  %19 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i64, i64* %19 seq_cst, align 8
  br label %21

21:                                               ; preds = %18, %16
  %22 = phi i64* [ %17, %16 ], [ %19, %18 ]
  %23 = load i64, i64* %22, align 8
  ret i64 %23
}

declare zeroext i1 @_ZN2v84base2OS14HasLazyCommitsEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262151
  %6 = or i64 %5, 4
  %7 = or i64 %4, 262150
  %8 = select i1 %1, i64 %7, i64 %6
  store i64 %8, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262151
  %6 = or i64 %5, 2
  %7 = or i64 %4, 262150
  %8 = select i1 %1, i64 %7, i64 %6
  store i64 %8, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk44ReleaseAllocatedMemoryNeededForWritableChunkEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 7
  %3 = load %"class.v8::base::Mutex"*, %"class.v8::base::Mutex"** %2, align 8
  %4 = icmp eq %"class.v8::base::Mutex"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* nonnull %3) #11
  %6 = bitcast %"class.v8::base::Mutex"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  store %"class.v8::base::Mutex"* null, %"class.v8::base::Mutex"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 9
  %9 = load %"class.v8::base::Mutex"*, %"class.v8::base::Mutex"** %8, align 8
  %10 = icmp eq %"class.v8::base::Mutex"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* nonnull %9) #11
  %12 = bitcast %"class.v8::base::Mutex"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  store %"class.v8::base::Mutex"* null, %"class.v8::base::Mutex"** %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 16
  %15 = load %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::CodeObjectRegistry"** %14, align 8
  %16 = icmp eq %"class.v8::internal::CodeObjectRegistry"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::CodeObjectRegistry", %"class.v8::internal::CodeObjectRegistry"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = ptrtoint i64* %19 to i64
  %23 = getelementptr inbounds %"class.v8::internal::CodeObjectRegistry", %"class.v8::internal::CodeObjectRegistry"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast i64** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast i64* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %17, %21
  %27 = bitcast %"class.v8::internal::CodeObjectRegistry"* %15 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  store %"class.v8::internal::CodeObjectRegistry"* null, %"class.v8::internal::CodeObjectRegistry"** %14, align 8
  br label %28

28:                                               ; preds = %13, %26
  %29 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 17, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = and i64 %30, -2
  %35 = inttoptr i64 %34 to i8*
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %35) #11
  br label %36

36:                                               ; preds = %28, %33
  store i64 0, i64* %29, align 8
  %37 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 1, i64 0
  %38 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %37, align 8
  %39 = icmp eq %"class.v8::internal::SlotSet"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 4095
  %44 = lshr i64 %43, 12
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.v8::internal::SlotSet"* %38 to %"class.v8::internal::SlotSet::Bucket"**
  br label %48

48:                                               ; preds = %56, %46
  %49 = phi i64 [ 0, %46 ], [ %57, %56 ]
  %50 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %47, i64 %49
  %51 = bitcast %"class.v8::internal::SlotSet::Bucket"** %50 to i64*
  %52 = load atomic i64, i64* %51 acquire, align 8
  store atomic volatile i64 0, i64* %51 release, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = inttoptr i64 %52 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %55) #11
  br label %56

56:                                               ; preds = %54, %48
  %57 = add nuw nsw i64 %49, 1
  %58 = icmp eq i64 %57, %44
  br i1 %58, label %59, label %48

59:                                               ; preds = %56, %40
  %60 = getelementptr inbounds %"class.v8::internal::SlotSet", %"class.v8::internal::SlotSet"* %38, i64 0, i32 0
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %60) #11
  store %"class.v8::internal::SlotSet"* null, %"class.v8::internal::SlotSet"** %37, align 8
  br label %61

61:                                               ; preds = %36, %59
  %62 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 4
  %63 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %62, align 8
  %64 = icmp eq %"class.v8::internal::SlotSet"* %63, null
  br i1 %64, label %86, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 4095
  %69 = lshr i64 %68, 12
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.v8::internal::SlotSet"* %63 to %"class.v8::internal::SlotSet::Bucket"**
  br label %73

73:                                               ; preds = %81, %71
  %74 = phi i64 [ 0, %71 ], [ %82, %81 ]
  %75 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %72, i64 %74
  %76 = bitcast %"class.v8::internal::SlotSet::Bucket"** %75 to i64*
  %77 = load atomic i64, i64* %76 acquire, align 8
  store atomic volatile i64 0, i64* %76 release, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  %80 = inttoptr i64 %77 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %80) #11
  br label %81

81:                                               ; preds = %79, %73
  %82 = add nuw nsw i64 %74, 1
  %83 = icmp eq i64 %82, %69
  br i1 %83, label %84, label %73

84:                                               ; preds = %81, %65
  %85 = getelementptr inbounds %"class.v8::internal::SlotSet", %"class.v8::internal::SlotSet"* %63, i64 0, i32 0
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %85) #11
  store %"class.v8::internal::SlotSet"* null, %"class.v8::internal::SlotSet"** %62, align 8
  br label %86

86:                                               ; preds = %61, %84
  %87 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 1, i64 1
  %88 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %87, align 8
  %89 = icmp eq %"class.v8::internal::SlotSet"* %88, null
  br i1 %89, label %111, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 4095
  %94 = lshr i64 %93, 12
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.v8::internal::SlotSet"* %88 to %"class.v8::internal::SlotSet::Bucket"**
  br label %98

98:                                               ; preds = %106, %96
  %99 = phi i64 [ 0, %96 ], [ %107, %106 ]
  %100 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %97, i64 %99
  %101 = bitcast %"class.v8::internal::SlotSet::Bucket"** %100 to i64*
  %102 = load atomic i64, i64* %101 acquire, align 8
  store atomic volatile i64 0, i64* %101 release, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %98
  %105 = inttoptr i64 %102 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %105) #11
  br label %106

106:                                              ; preds = %104, %98
  %107 = add nuw nsw i64 %99, 1
  %108 = icmp eq i64 %107, %94
  br i1 %108, label %109, label %98

109:                                              ; preds = %106, %90
  %110 = getelementptr inbounds %"class.v8::internal::SlotSet", %"class.v8::internal::SlotSet"* %88, i64 0, i32 0
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %110) #11
  store %"class.v8::internal::SlotSet"* null, %"class.v8::internal::SlotSet"** %87, align 8
  br label %111

111:                                              ; preds = %86, %109
  %112 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 5, i64 0
  %113 = load %"class.v8::internal::TypedSlotSet"*, %"class.v8::internal::TypedSlotSet"** %112, align 8
  %114 = icmp eq %"class.v8::internal::TypedSlotSet"* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  store %"class.v8::internal::TypedSlotSet"* null, %"class.v8::internal::TypedSlotSet"** %112, align 8
  %116 = bitcast %"class.v8::internal::TypedSlotSet"* %113 to void (%"class.v8::internal::TypedSlotSet"*)***
  %117 = load void (%"class.v8::internal::TypedSlotSet"*)**, void (%"class.v8::internal::TypedSlotSet"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %117, i64 1
  %119 = load void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %118, align 8
  tail call void %119(%"class.v8::internal::TypedSlotSet"* nonnull %113) #11
  br label %120

120:                                              ; preds = %111, %115
  %121 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 5, i64 1
  %122 = load %"class.v8::internal::TypedSlotSet"*, %"class.v8::internal::TypedSlotSet"** %121, align 8
  %123 = icmp eq %"class.v8::internal::TypedSlotSet"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  store %"class.v8::internal::TypedSlotSet"* null, %"class.v8::internal::TypedSlotSet"** %121, align 8
  %125 = bitcast %"class.v8::internal::TypedSlotSet"* %122 to void (%"class.v8::internal::TypedSlotSet"*)***
  %126 = load void (%"class.v8::internal::TypedSlotSet"*)**, void (%"class.v8::internal::TypedSlotSet"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %126, i64 1
  %128 = load void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %127, align 8
  tail call void %128(%"class.v8::internal::TypedSlotSet"* nonnull %122) #11
  br label %129

129:                                              ; preds = %120, %124
  %130 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 0
  %131 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %130, align 8
  %132 = icmp eq %"class.std::__1::set.615"* %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %131, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %131, i64 0, i32 0, i32 1, i32 0, i32 0
  %136 = bitcast %"class.std::__1::__tree_end_node"* %135 to %"class.std::__1::__tree_node"**
  %137 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %136, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.616"* %134, %"class.std::__1::__tree_node"* %137) #11
  %138 = bitcast %"class.std::__1::set.615"* %131 to i8*
  tail call void @_ZdlPv(i8* %138) #13
  store %"class.std::__1::set.615"* null, %"class.std::__1::set.615"** %130, align 8
  br label %139

139:                                              ; preds = %129, %133
  %140 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 1
  %141 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %140, align 8
  %142 = icmp eq %"class.std::__1::set.615"* %141, null
  br i1 %142, label %149, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %141, i64 0, i32 0
  %145 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %141, i64 0, i32 0, i32 1, i32 0, i32 0
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"class.std::__1::__tree_node"**
  %147 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %146, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.616"* %144, %"class.std::__1::__tree_node"* %147) #11
  %148 = bitcast %"class.std::__1::set.615"* %141 to i8*
  tail call void @_ZdlPv(i8* %148) #13
  store %"class.std::__1::set.615"* null, %"class.std::__1::set.615"** %140, align 8
  br label %149

149:                                              ; preds = %139, %143
  %150 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 15
  %151 = load %"class.v8::internal::Bitmap"*, %"class.v8::internal::Bitmap"** %150, align 8
  %152 = icmp eq %"class.v8::internal::Bitmap"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.v8::internal::Bitmap", %"class.v8::internal::Bitmap"* %151, i64 0, i32 0
  tail call void @free(i8* %154) #11
  store %"class.v8::internal::Bitmap"* null, %"class.v8::internal::Bitmap"** %150, align 8
  br label %155

155:                                              ; preds = %149, %153
  %156 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = and i64 %157, 32
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %155
  %161 = bitcast %"class.v8::internal::MemoryChunk"* %0 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page25ReleaseFreeListCategoriesEv(%"class.v8::internal::Page"* %161) #11
  br label %162

162:                                              ; preds = %155, %160
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk14ReleaseSlotSetILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 1, i64 0
  %3 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %2, align 8
  %4 = icmp eq %"class.v8::internal::SlotSet"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4095
  %9 = lshr i64 %8, 12
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.v8::internal::SlotSet"* %3 to %"class.v8::internal::SlotSet::Bucket"**
  br label %13

13:                                               ; preds = %21, %11
  %14 = phi i64 [ 0, %11 ], [ %22, %21 ]
  %15 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %12, i64 %14
  %16 = bitcast %"class.v8::internal::SlotSet::Bucket"** %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  store atomic volatile i64 0, i64* %16 release, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = inttoptr i64 %17 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %20) #11
  br label %21

21:                                               ; preds = %19, %13
  %22 = add nuw nsw i64 %14, 1
  %23 = icmp eq i64 %22, %9
  br i1 %23, label %24, label %13

24:                                               ; preds = %21, %5
  %25 = getelementptr inbounds %"class.v8::internal::SlotSet", %"class.v8::internal::SlotSet"* %3, i64 0, i32 0
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %25) #11
  store %"class.v8::internal::SlotSet"* null, %"class.v8::internal::SlotSet"** %2, align 8
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk22ReleaseSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %2, align 8
  %4 = icmp eq %"class.v8::internal::SlotSet"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4095
  %9 = lshr i64 %8, 12
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.v8::internal::SlotSet"* %3 to %"class.v8::internal::SlotSet::Bucket"**
  br label %13

13:                                               ; preds = %21, %11
  %14 = phi i64 [ 0, %11 ], [ %22, %21 ]
  %15 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %12, i64 %14
  %16 = bitcast %"class.v8::internal::SlotSet::Bucket"** %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  store atomic volatile i64 0, i64* %16 release, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = inttoptr i64 %17 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %20) #11
  br label %21

21:                                               ; preds = %19, %13
  %22 = add nuw nsw i64 %14, 1
  %23 = icmp eq i64 %22, %9
  br i1 %23, label %24, label %13

24:                                               ; preds = %21, %5
  %25 = getelementptr inbounds %"class.v8::internal::SlotSet", %"class.v8::internal::SlotSet"* %3, i64 0, i32 0
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %25) #11
  store %"class.v8::internal::SlotSet"* null, %"class.v8::internal::SlotSet"** %2, align 8
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk14ReleaseSlotSetILNS0_17RememberedSetTypeE1EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 1, i64 1
  %3 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %2, align 8
  %4 = icmp eq %"class.v8::internal::SlotSet"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4095
  %9 = lshr i64 %8, 12
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.v8::internal::SlotSet"* %3 to %"class.v8::internal::SlotSet::Bucket"**
  br label %13

13:                                               ; preds = %21, %11
  %14 = phi i64 [ 0, %11 ], [ %22, %21 ]
  %15 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %12, i64 %14
  %16 = bitcast %"class.v8::internal::SlotSet::Bucket"** %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  store atomic volatile i64 0, i64* %16 release, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = inttoptr i64 %17 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %20) #11
  br label %21

21:                                               ; preds = %19, %13
  %22 = add nuw nsw i64 %14, 1
  %23 = icmp eq i64 %22, %9
  br i1 %23, label %24, label %13

24:                                               ; preds = %21, %5
  %25 = getelementptr inbounds %"class.v8::internal::SlotSet", %"class.v8::internal::SlotSet"* %3, i64 0, i32 0
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %25) #11
  store %"class.v8::internal::SlotSet"* null, %"class.v8::internal::SlotSet"** %2, align 8
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk19ReleaseTypedSlotSetILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 5, i64 0
  %3 = load %"class.v8::internal::TypedSlotSet"*, %"class.v8::internal::TypedSlotSet"** %2, align 8
  %4 = icmp eq %"class.v8::internal::TypedSlotSet"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  store %"class.v8::internal::TypedSlotSet"* null, %"class.v8::internal::TypedSlotSet"** %2, align 8
  %6 = bitcast %"class.v8::internal::TypedSlotSet"* %3 to void (%"class.v8::internal::TypedSlotSet"*)***
  %7 = load void (%"class.v8::internal::TypedSlotSet"*)**, void (%"class.v8::internal::TypedSlotSet"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %7, i64 1
  %9 = load void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %8, align 8
  tail call void %9(%"class.v8::internal::TypedSlotSet"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk19ReleaseTypedSlotSetILNS0_17RememberedSetTypeE1EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 5, i64 1
  %3 = load %"class.v8::internal::TypedSlotSet"*, %"class.v8::internal::TypedSlotSet"** %2, align 8
  %4 = icmp eq %"class.v8::internal::TypedSlotSet"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  store %"class.v8::internal::TypedSlotSet"* null, %"class.v8::internal::TypedSlotSet"** %2, align 8
  %6 = bitcast %"class.v8::internal::TypedSlotSet"* %3 to void (%"class.v8::internal::TypedSlotSet"*)***
  %7 = load void (%"class.v8::internal::TypedSlotSet"*)**, void (%"class.v8::internal::TypedSlotSet"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %7, i64 1
  %9 = load void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %8, align 8
  tail call void %9(%"class.v8::internal::TypedSlotSet"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk23ReleaseInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 0
  %3 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %2, align 8
  %4 = icmp eq %"class.std::__1::set.615"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.616"* %6, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::set.615"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  store %"class.std::__1::set.615"* null, %"class.std::__1::set.615"** %2, align 8
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk23ReleaseInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 1
  %3 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %2, align 8
  %4 = icmp eq %"class.std::__1::set.615"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.616"* %6, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::set.615"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  store %"class.std::__1::set.615"* null, %"class.std::__1::set.615"** %2, align 8
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk28ReleaseYoungGenerationBitmapEv(%"class.v8::internal::MemoryChunk"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 15
  %3 = bitcast %"class.v8::internal::Bitmap"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  tail call void @free(i8* %4) #11
  store %"class.v8::internal::Bitmap"* null, %"class.v8::internal::Bitmap"** %2, align 8
  ret void
}

declare void @_ZN2v88internal4Page25ReleaseFreeListCategoriesEv(%"class.v8::internal::Page"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11MemoryChunk44ReleaseAllocatedMemoryNeededForWritableChunkEv(%"class.v8::internal::MemoryChunk"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 4095
  %6 = lshr i64 %5, 12
  %7 = shl nuw nsw i64 %6, 3
  %8 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %7, i64 8) #11
  %9 = bitcast i8* %8 to %"class.v8::internal::SlotSet"*
  %10 = icmp eq i64 %6, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 %7, i1 false) #11
  br label %12

12:                                               ; preds = %11, %1
  %13 = bitcast %"class.v8::internal::SlotSet"** %2 to i64*
  %14 = ptrtoint i8* %8 to i64
  %15 = cmpxchg volatile i64* %13, i64 0, i64 %14 acq_rel acquire
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = inttoptr i64 %16 to %"class.v8::internal::SlotSet"*
  %18 = extractvalue { i64, i1 } %15, 1
  br i1 %18, label %40, label %19

19:                                               ; preds = %12
  %20 = load i64, i64* %3, align 8
  %21 = add i64 %20, 4095
  %22 = lshr i64 %21, 12
  %23 = icmp eq i8* %8, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = icmp eq i64 %22, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = bitcast i8* %8 to %"class.v8::internal::SlotSet::Bucket"**
  br label %29

28:                                               ; preds = %37, %24
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %8) #11
  br label %40

29:                                               ; preds = %37, %26
  %30 = phi i64 [ 0, %26 ], [ %38, %37 ]
  %31 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %27, i64 %30
  %32 = bitcast %"class.v8::internal::SlotSet::Bucket"** %31 to i64*
  %33 = load atomic i64, i64* %32 acquire, align 8
  store atomic volatile i64 0, i64* %32 release, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = inttoptr i64 %33 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %36) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = add nuw nsw i64 %30, 1
  %39 = icmp eq i64 %38, %22
  br i1 %39, label %28, label %29

40:                                               ; preds = %12, %19, %28
  %41 = phi %"class.v8::internal::SlotSet"* [ %9, %12 ], [ %17, %19 ], [ %17, %28 ]
  ret %"class.v8::internal::SlotSet"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetEPPNS0_7SlotSetE(%"class.v8::internal::MemoryChunk"* nocapture readonly, %"class.v8::internal::SlotSet"**) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 4095
  %6 = lshr i64 %5, 12
  %7 = shl nuw nsw i64 %6, 3
  %8 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %7, i64 8) #11
  %9 = bitcast i8* %8 to %"class.v8::internal::SlotSet"*
  %10 = icmp eq i64 %6, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 %7, i1 false) #11
  br label %12

12:                                               ; preds = %2, %11
  %13 = bitcast %"class.v8::internal::SlotSet"** %1 to i64*
  %14 = ptrtoint i8* %8 to i64
  %15 = cmpxchg volatile i64* %13, i64 0, i64 %14 acq_rel acquire
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = inttoptr i64 %16 to %"class.v8::internal::SlotSet"*
  %18 = extractvalue { i64, i1 } %15, 1
  br i1 %18, label %40, label %19

19:                                               ; preds = %12
  %20 = load i64, i64* %3, align 8
  %21 = add i64 %20, 4095
  %22 = lshr i64 %21, 12
  %23 = icmp eq i8* %8, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = icmp eq i64 %22, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = bitcast i8* %8 to %"class.v8::internal::SlotSet::Bucket"**
  br label %29

28:                                               ; preds = %37, %24
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %8) #11
  br label %40

29:                                               ; preds = %37, %26
  %30 = phi i64 [ 0, %26 ], [ %38, %37 ]
  %31 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %27, i64 %30
  %32 = bitcast %"class.v8::internal::SlotSet::Bucket"** %31 to i64*
  %33 = load atomic i64, i64* %32 acquire, align 8
  store atomic volatile i64 0, i64* %32 release, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = inttoptr i64 %33 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %36) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = add nuw nsw i64 %30, 1
  %39 = icmp eq i64 %38, %22
  br i1 %39, label %28, label %29

40:                                               ; preds = %28, %19, %12
  %41 = phi %"class.v8::internal::SlotSet"* [ %9, %12 ], [ %17, %19 ], [ %17, %28 ]
  ret %"class.v8::internal::SlotSet"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk14ReleaseSlotSetEPPNS0_7SlotSetE(%"class.v8::internal::MemoryChunk"* nocapture readonly, %"class.v8::internal::SlotSet"** nocapture) local_unnamed_addr #0 align 2 {
  %3 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %1, align 8
  %4 = icmp eq %"class.v8::internal::SlotSet"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4095
  %9 = lshr i64 %8, 12
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.v8::internal::SlotSet"* %3 to %"class.v8::internal::SlotSet::Bucket"**
  br label %13

13:                                               ; preds = %21, %11
  %14 = phi i64 [ 0, %11 ], [ %22, %21 ]
  %15 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %12, i64 %14
  %16 = bitcast %"class.v8::internal::SlotSet::Bucket"** %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  store atomic volatile i64 0, i64* %16 release, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = inttoptr i64 %17 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %20) #11
  br label %21

21:                                               ; preds = %19, %13
  %22 = add nuw nsw i64 %14, 1
  %23 = icmp eq i64 %22, %9
  br i1 %23, label %24, label %13

24:                                               ; preds = %21, %5
  %25 = getelementptr inbounds %"class.v8::internal::SlotSet", %"class.v8::internal::SlotSet"* %3, i64 0, i32 0
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %25) #11
  store %"class.v8::internal::SlotSet"* null, %"class.v8::internal::SlotSet"** %1, align 8
  br label %26

26:                                               ; preds = %2, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk23InvalidateRecordedSlotsENS0_10HeapObjectE(%"class.v8::internal::MemoryChunk"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %4, i64 0, i32 86, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %6, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i8, i8* %7 seq_cst, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %6, i64 0, i32 12
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZN2v88internal11MemoryChunk34RegisterObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEvNS0_10HeapObjectE(%"class.v8::internal::MemoryChunk"* %0, i64 %1)
  br label %15

15:                                               ; preds = %10, %2, %14
  %16 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 1, i64 0
  %17 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %16, align 8
  %18 = icmp eq %"class.v8::internal::SlotSet"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZN2v88internal11MemoryChunk34RegisterObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEvNS0_10HeapObjectE(%"class.v8::internal::MemoryChunk"* %0, i64 %1)
  br label %20

20:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk34RegisterObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEvNS0_10HeapObjectE(%"class.v8::internal::MemoryChunk"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 88
  %6 = icmp ne i64 %5, 0
  %7 = trunc i64 %4 to i16
  %8 = icmp sgt i16 %7, -1
  %9 = and i1 %8, %6
  br i1 %9, label %88, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 1
  %12 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %11, align 8
  %13 = icmp eq %"class.std::__1::set.615"* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = tail call i8* @_Znwm(i64 24) #13
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  %17 = bitcast i8* %15 to i8**
  store i8* %16, i8** %17, align 8
  %18 = bitcast %"class.std::__1::set.615"** %11 to i8**
  store i8* %15, i8** %18, align 8
  %19 = bitcast i8* %15 to %"class.std::__1::set.615"*
  br label %20

20:                                               ; preds = %14, %10
  %21 = phi %"class.std::__1::set.615"* [ %19, %14 ], [ %12, %10 ]
  %22 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %56, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = trunc i64 %1 to i32
  br label %29

29:                                               ; preds = %52, %26
  %30 = phi %"class.std::__1::__tree_node_base"** [ %54, %52 ], [ %27, %26 ]
  %31 = phi %"class.std::__1::__tree_node"* [ %55, %52 ], [ %24, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp ult i32 %28, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %52

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0
  br label %58

42:                                               ; preds = %29
  %43 = icmp ult i32 %34, %28
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 1
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0
  br label %58

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0
  br label %58

52:                                               ; preds = %44, %36
  %53 = phi %"class.std::__1::__tree_node_base"* [ %38, %36 ], [ %46, %44 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %45, %44 ]
  %55 = bitcast %"class.std::__1::__tree_node_base"* %53 to %"class.std::__1::__tree_node"*
  br label %29

56:                                               ; preds = %20
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  br label %58

58:                                               ; preds = %56, %50, %48, %40
  %59 = phi %"class.std::__1::__tree_end_node"* [ %22, %56 ], [ %41, %40 ], [ %49, %48 ], [ %51, %50 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %37, %40 ], [ %45, %48 ], [ %30, %50 ]
  %61 = bitcast %"class.std::__1::__tree_node_base"** %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %64, label %88

64:                                               ; preds = %58
  %65 = tail call i8* @_Znwm(i64 40) #13, !noalias !4
  %66 = getelementptr inbounds i8, i8* %65, i64 32
  %67 = bitcast i8* %66 to i64*
  store i64 %1, i64* %67, align 8, !noalias !4
  %68 = bitcast i8* %65 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds i8, i8* %65, i64 16
  %70 = bitcast i8* %69 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %70, align 8
  %71 = bitcast %"class.std::__1::__tree_node_base"** %60 to i8**
  store i8* %65, i8** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %21, i64 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %64
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  %79 = bitcast %"class.std::__1::set.615"* %21 to i64*
  store i64 %78, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  br label %81

81:                                               ; preds = %77, %64
  %82 = phi %"class.std::__1::__tree_node_base"* [ %68, %64 ], [ %80, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %84, %"class.std::__1::__tree_node_base"* %82) #11
  %85 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  br label %88

88:                                               ; preds = %81, %58, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11MemoryChunk34RegisterObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEvNS0_10HeapObjectE(%"class.v8::internal::MemoryChunk"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 24
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %85

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 0
  %9 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %8, align 8
  %10 = icmp eq %"class.std::__1::set.615"* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = tail call i8* @_Znwm(i64 24) #13
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11
  %14 = bitcast i8* %12 to i8**
  store i8* %13, i8** %14, align 8
  %15 = bitcast %"class.std::__1::set.615"** %8 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast i8* %12 to %"class.std::__1::set.615"*
  br label %17

17:                                               ; preds = %11, %7
  %18 = phi %"class.std::__1::set.615"* [ %16, %11 ], [ %9, %7 ]
  %19 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %53, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = trunc i64 %1 to i32
  br label %26

26:                                               ; preds = %49, %23
  %27 = phi %"class.std::__1::__tree_node_base"** [ %51, %49 ], [ %24, %23 ]
  %28 = phi %"class.std::__1::__tree_node"* [ %52, %49 ], [ %21, %23 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = icmp ult i32 %25, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %49

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 0, i32 0
  br label %55

39:                                               ; preds = %26
  %40 = icmp ult i32 %31, %25
  br i1 %40, label %41, label %47

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 0, i32 1
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 0, i32 0
  br label %55

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 0, i32 0
  br label %55

49:                                               ; preds = %41, %33
  %50 = phi %"class.std::__1::__tree_node_base"* [ %35, %33 ], [ %43, %41 ]
  %51 = phi %"class.std::__1::__tree_node_base"** [ %34, %33 ], [ %42, %41 ]
  %52 = bitcast %"class.std::__1::__tree_node_base"* %50 to %"class.std::__1::__tree_node"*
  br label %26

53:                                               ; preds = %17
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  br label %55

55:                                               ; preds = %53, %47, %45, %37
  %56 = phi %"class.std::__1::__tree_end_node"* [ %19, %53 ], [ %38, %37 ], [ %46, %45 ], [ %48, %47 ]
  %57 = phi %"class.std::__1::__tree_node_base"** [ %54, %53 ], [ %34, %37 ], [ %42, %45 ], [ %27, %47 ]
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to %"class.std::__1::__tree_node"**
  %59 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node"* %59, null
  br i1 %60, label %61, label %85

61:                                               ; preds = %55
  %62 = tail call i8* @_Znwm(i64 40) #13, !noalias !7
  %63 = getelementptr inbounds i8, i8* %62, i64 32
  %64 = bitcast i8* %63 to i64*
  store i64 %1, i64* %64, align 8, !noalias !7
  %65 = bitcast i8* %62 to %"class.std::__1::__tree_node_base"*
  %66 = getelementptr inbounds i8, i8* %62, i64 16
  %67 = bitcast i8* %66 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %67, align 8
  %68 = bitcast %"class.std::__1::__tree_node_base"** %57 to i8**
  store i8* %62, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %18, i64 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %61
  %75 = ptrtoint %"class.std::__1::__tree_node_base"* %72 to i64
  %76 = bitcast %"class.std::__1::set.615"* %18 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  br label %78

78:                                               ; preds = %74, %61
  %79 = phi %"class.std::__1::__tree_node_base"* [ %65, %61 ], [ %77, %74 ]
  %80 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %81, %"class.std::__1::__tree_node_base"* %79) #11
  %82 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  br label %85

85:                                               ; preds = %78, %55, %2
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2v88internal11MemoryChunk29AllocateYoungGenerationBitmapEv(%"class.v8::internal::MemoryChunk"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %3 = tail call noalias i8* @calloc(i64 1, i64 %2) #11
  %4 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 15
  %5 = bitcast %"class.v8::internal::Bitmap"** %4 to i8**
  store i8* %3, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 1, i64 0
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 4095
  %6 = lshr i64 %5, 12
  %7 = shl nuw nsw i64 %6, 3
  %8 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %7, i64 8) #11
  %9 = bitcast i8* %8 to %"class.v8::internal::SlotSet"*
  %10 = icmp eq i64 %6, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 %7, i1 false) #11
  br label %12

12:                                               ; preds = %11, %1
  %13 = bitcast %"class.v8::internal::SlotSet"** %2 to i64*
  %14 = ptrtoint i8* %8 to i64
  %15 = cmpxchg volatile i64* %13, i64 0, i64 %14 acq_rel acquire
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = inttoptr i64 %16 to %"class.v8::internal::SlotSet"*
  %18 = extractvalue { i64, i1 } %15, 1
  br i1 %18, label %40, label %19

19:                                               ; preds = %12
  %20 = load i64, i64* %3, align 8
  %21 = add i64 %20, 4095
  %22 = lshr i64 %21, 12
  %23 = icmp eq i8* %8, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = icmp eq i64 %22, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = bitcast i8* %8 to %"class.v8::internal::SlotSet::Bucket"**
  br label %29

28:                                               ; preds = %37, %24
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %8) #11
  br label %40

29:                                               ; preds = %37, %26
  %30 = phi i64 [ 0, %26 ], [ %38, %37 ]
  %31 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %27, i64 %30
  %32 = bitcast %"class.v8::internal::SlotSet::Bucket"** %31 to i64*
  %33 = load atomic i64, i64* %32 acquire, align 8
  store atomic volatile i64 0, i64* %32 release, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = inttoptr i64 %33 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %36) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = add nuw nsw i64 %30, 1
  %39 = icmp eq i64 %38, %22
  br i1 %39, label %28, label %29

40:                                               ; preds = %12, %19, %28
  %41 = phi %"class.v8::internal::SlotSet"* [ %9, %12 ], [ %17, %19 ], [ %17, %28 ]
  ret %"class.v8::internal::SlotSet"* %41
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 1, i64 1
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 4095
  %6 = lshr i64 %5, 12
  %7 = shl nuw nsw i64 %6, 3
  %8 = tail call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %7, i64 8) #11
  %9 = bitcast i8* %8 to %"class.v8::internal::SlotSet"*
  %10 = icmp eq i64 %6, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 %7, i1 false) #11
  br label %12

12:                                               ; preds = %11, %1
  %13 = bitcast %"class.v8::internal::SlotSet"** %2 to i64*
  %14 = ptrtoint i8* %8 to i64
  %15 = cmpxchg volatile i64* %13, i64 0, i64 %14 acq_rel acquire
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = inttoptr i64 %16 to %"class.v8::internal::SlotSet"*
  %18 = extractvalue { i64, i1 } %15, 1
  br i1 %18, label %40, label %19

19:                                               ; preds = %12
  %20 = load i64, i64* %3, align 8
  %21 = add i64 %20, 4095
  %22 = lshr i64 %21, 12
  %23 = icmp eq i8* %8, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = icmp eq i64 %22, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = bitcast i8* %8 to %"class.v8::internal::SlotSet::Bucket"**
  br label %29

28:                                               ; preds = %37, %24
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* nonnull %8) #11
  br label %40

29:                                               ; preds = %37, %26
  %30 = phi i64 [ 0, %26 ], [ %38, %37 ]
  %31 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %27, i64 %30
  %32 = bitcast %"class.v8::internal::SlotSet::Bucket"** %31 to i64*
  %33 = load atomic i64, i64* %32 acquire, align 8
  store atomic volatile i64 0, i64* %32 release, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = inttoptr i64 %33 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %36) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = add nuw nsw i64 %30, 1
  %39 = icmp eq i64 %38, %22
  br i1 %39, label %28, label %29

40:                                               ; preds = %12, %19, %28
  %41 = phi %"class.v8::internal::SlotSet"* [ %9, %12 ], [ %17, %19 ], [ %17, %28 ]
  ret %"class.v8::internal::SlotSet"* %41
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::TypedSlotSet"* @_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_12TypedSlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #13
  %3 = bitcast i8* %2 to %"class.v8::internal::TypedSlotSet"*
  %4 = ptrtoint %"class.v8::internal::MemoryChunk"* %0 to i64
  %5 = bitcast i8* %2 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal12TypedSlotSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 24
  %8 = bitcast i8* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 5, i64 0
  %10 = bitcast %"class.v8::internal::TypedSlotSet"** %9 to i64*
  %11 = ptrtoint i8* %2 to i64
  %12 = cmpxchg volatile i64* %10, i64 0, i64 %11 release monotonic
  %13 = extractvalue { i64, i1 } %12, 1
  br i1 %13, label %21, label %14

14:                                               ; preds = %1
  %15 = extractvalue { i64, i1 } %12, 0
  %16 = inttoptr i64 %15 to %"class.v8::internal::TypedSlotSet"*
  %17 = bitcast i8* %2 to void (%"class.v8::internal::TypedSlotSet"*)***
  %18 = load void (%"class.v8::internal::TypedSlotSet"*)**, void (%"class.v8::internal::TypedSlotSet"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %18, i64 1
  %20 = load void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %19, align 8
  tail call void %20(%"class.v8::internal::TypedSlotSet"* nonnull %3) #11
  br label %21

21:                                               ; preds = %1, %14
  %22 = phi %"class.v8::internal::TypedSlotSet"* [ %16, %14 ], [ %3, %1 ]
  ret %"class.v8::internal::TypedSlotSet"* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::TypedSlotSet"* @_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_12TypedSlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #13
  %3 = bitcast i8* %2 to %"class.v8::internal::TypedSlotSet"*
  %4 = ptrtoint %"class.v8::internal::MemoryChunk"* %0 to i64
  %5 = bitcast i8* %2 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal12TypedSlotSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 24
  %8 = bitcast i8* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 5, i64 1
  %10 = bitcast %"class.v8::internal::TypedSlotSet"** %9 to i64*
  %11 = ptrtoint i8* %2 to i64
  %12 = cmpxchg volatile i64* %10, i64 0, i64 %11 release monotonic
  %13 = extractvalue { i64, i1 } %12, 1
  br i1 %13, label %21, label %14

14:                                               ; preds = %1
  %15 = extractvalue { i64, i1 } %12, 0
  %16 = inttoptr i64 %15 to %"class.v8::internal::TypedSlotSet"*
  %17 = bitcast i8* %2 to void (%"class.v8::internal::TypedSlotSet"*)***
  %18 = load void (%"class.v8::internal::TypedSlotSet"*)**, void (%"class.v8::internal::TypedSlotSet"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %18, i64 1
  %20 = load void (%"class.v8::internal::TypedSlotSet"*)*, void (%"class.v8::internal::TypedSlotSet"*)** %19, align 8
  tail call void %20(%"class.v8::internal::TypedSlotSet"* nonnull %3) #11
  br label %21

21:                                               ; preds = %1, %14
  %22 = phi %"class.v8::internal::TypedSlotSet"* [ %16, %14 ], [ %3, %1 ]
  ret %"class.v8::internal::TypedSlotSet"* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.std::__1::set.615"* @_ZN2v88internal11MemoryChunk24AllocateInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEPNSt3__13setINS0_10HeapObjectENS0_6Object8ComparerENS4_9allocatorIS6_EEEEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13
  %3 = bitcast i8* %2 to %"class.std::__1::set.615"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #11
  %5 = bitcast i8* %2 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 0
  %7 = bitcast %"class.std::__1::set.615"** %6 to i8**
  store i8* %2, i8** %7, align 8
  ret %"class.std::__1::set.615"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.std::__1::set.615"* @_ZN2v88internal11MemoryChunk24AllocateInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEPNSt3__13setINS0_10HeapObjectENS0_6Object8ComparerENS4_9allocatorIS6_EEEEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13
  %3 = bitcast i8* %2 to %"class.std::__1::set.615"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #11
  %5 = bitcast i8* %2 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 1
  %7 = bitcast %"class.std::__1::set.615"** %6 to i8**
  store i8* %2, i8** %7, align 8
  ret %"class.std::__1::set.615"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal11MemoryChunk36RegisteredObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEbNS0_10HeapObjectE(%"class.v8::internal::MemoryChunk"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 0
  %4 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %3, align 8
  %5 = icmp eq %"class.std::__1::set.615"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %36, label %11

11:                                               ; preds = %6
  %12 = trunc i64 %1 to i32
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %9, %11 ], [ %26, %13 ]
  %15 = phi %"class.std::__1::__tree_end_node"* [ %7, %11 ], [ %24, %13 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = icmp ult i32 %18, %12
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node"**
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node"**
  %24 = select i1 %19, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %22
  %25 = select i1 %19, %"class.std::__1::__tree_node"** %21, %"class.std::__1::__tree_node"** %23
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %28, label %13

28:                                               ; preds = %13
  %29 = icmp eq %"class.std::__1::__tree_end_node"* %24, %7
  br i1 %29, label %36, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp ult i32 %12, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %30, %28, %6
  br label %37

37:                                               ; preds = %30, %36
  %38 = phi %"class.std::__1::__tree_end_node"* [ %7, %36 ], [ %24, %30 ]
  %39 = icmp ne %"class.std::__1::__tree_end_node"* %38, %7
  br label %40

40:                                               ; preds = %2, %37
  %41 = phi i1 [ %39, %37 ], [ false, %2 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal11MemoryChunk36RegisteredObjectWithInvalidatedSlotsILNS0_17RememberedSetTypeE1EEEbNS0_10HeapObjectE(%"class.v8::internal::MemoryChunk"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %0, i64 0, i32 6, i64 1
  %4 = load %"class.std::__1::set.615"*, %"class.std::__1::set.615"** %3, align 8
  %5 = icmp eq %"class.std::__1::set.615"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::set.615", %"class.std::__1::set.615"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %36, label %11

11:                                               ; preds = %6
  %12 = trunc i64 %1 to i32
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %9, %11 ], [ %26, %13 ]
  %15 = phi %"class.std::__1::__tree_end_node"* [ %7, %11 ], [ %24, %13 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = icmp ult i32 %18, %12
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node"**
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node"**
  %24 = select i1 %19, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %22
  %25 = select i1 %19, %"class.std::__1::__tree_node"** %21, %"class.std::__1::__tree_node"** %23
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %28, label %13

28:                                               ; preds = %13
  %29 = icmp eq %"class.std::__1::__tree_end_node"* %24, %7
  br i1 %29, label %36, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp ult i32 %12, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %30, %28, %6
  br label %37

37:                                               ; preds = %30, %36
  %38 = phi %"class.std::__1::__tree_end_node"* [ %7, %36 ], [ %24, %30 ]
  %39 = icmp ne %"class.std::__1::__tree_end_node"* %38, %7
  br label %40

40:                                               ; preds = %2, %37
  %41 = phi i1 [ %39, %37 ], [ false, %2 ]
  ret i1 %41
}

declare void @_ZN2v88internal11AlignedFreeEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN2v88internal12AlignedAllocEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.616"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.616"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.616"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal10TypedSlotsD2Ev(%"class.v8::internal::TypedSlots"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12TypedSlotSetD0Ev(%"class.v8::internal::TypedSlotSet"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TypedSlotSet", %"class.v8::internal::TypedSlotSet"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal10TypedSlotsD2Ev(%"class.v8::internal::TypedSlots"* %2) #11
  %3 = bitcast %"class.v8::internal::TypedSlotSet"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
