; ModuleID = '../../third_party/blink/renderer/core/script/html_parser_script_runner.cc'
source_filename = "../../third_party/blink/renderer/core/script/html_parser_script_runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.367", i32, [4 x i8], %"class.std::__1::unique_ptr.505", %"class.std::__1::unique_ptr.505", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.511", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.522", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.540", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.547", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.382", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.485", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.403" = type { %"struct.std::__1::__atomic_base.404" }
%"struct.std::__1::__atomic_base.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__cxx_atomic_impl.406" }
%"struct.std::__1::__cxx_atomic_impl.406" = type { %"struct.std::__1::__cxx_atomic_base_impl.407" }
%"struct.std::__1::__cxx_atomic_base_impl.407" = type { i64 }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::Worklist.414"* }
%"class.blink::Worklist.414" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::Worklist.421"* }
%"class.blink::Worklist.421" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::Worklist.428"* }
%"class.blink::Worklist.428" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::Worklist.435"* }
%"class.blink::Worklist.435" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::Worklist.442"* }
%"class.blink::Worklist.442" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::Worklist.449"* }
%"class.blink::Worklist.449" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.blink::Worklist.456"* }
%"class.blink::Worklist.456" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.403" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.463", %"class.std::__1::__compressed_pair.471", %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.478", [4 x i8] }>
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465", %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i64 }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { float }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.488", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.497" }
%"class.WTF::Vector.497" = type { %"class.WTF::VectorBuffer.498" }
%"class.WTF::VectorBuffer.498" = type { %"class.WTF::VectorBufferBase.499" }
%"class.WTF::VectorBufferBase.499" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.511" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.528" }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.414"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.421"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.428"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.435"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.442"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.782" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.546 }
%class.scoped_refptr.546 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.547" = type { %"struct.std::__1::__atomic_base.548" }
%"struct.std::__1::__atomic_base.548" = type { %"struct.std::__1::__cxx_atomic_impl.549" }
%"struct.std::__1::__cxx_atomic_impl.549" = type { %"struct.std::__1::__cxx_atomic_base_impl.550" }
%"struct.std::__1::__cxx_atomic_base_impl.550" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.143" }
%"struct.std::__1::atomic.143" = type { %"struct.std::__1::__atomic_base.144" }
%"struct.std::__1::__atomic_base.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__cxx_atomic_impl.146" }
%"struct.std::__1::__cxx_atomic_impl.146" = type { %"struct.std::__1::__cxx_atomic_base_impl.147" }
%"struct.std::__1::__cxx_atomic_base_impl.147" = type { i32 }
%"class.blink::HTMLParserScriptRunner" = type { %"class.blink::PendingScriptClient", %"class.blink::NameClient", %"class.blink::Member", %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.6", %"class.blink::HeapDeque" }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLParserReentryPermit"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Document"* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::HTMLParserScriptRunnerHost"* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.10", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.13", %"class.blink::WeakMember", %"class.blink::WeakMember.15", i8, [7 x i8] }>
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.3" }
%"class.blink::WeakMember.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.70", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.78", %"class.blink::Member.80", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.89", %"class.blink::Member.230", %"class.blink::Member.232", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.27" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ %"class.blink::WeakMember.26"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.26" = type opaque
%"class.blink::Supplementable.27" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.28" }
%"class.blink::HeapHashMap.28" = type { %"class.WTF::HashMap.31" }
%"class.WTF::HashMap.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair.34"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.34" = type { i8*, %"class.blink::Member.817" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.819" }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.35, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60", %"class.blink::Member.66", i32, [4 x i8], %"class.WTF::HashSet.67", i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.36 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.36 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.49", %"class.std::__1::map.58"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.39 }
%union.anon.39 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::map.49" = type { %"class.std::__1::__tree.50" }
%"class.std::__1::__tree.50" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::map.58" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.16" }
%"class.WTF::HashSet.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.blink::Member.76"*, i32, i32 }
%"class.blink::Member.76" = type opaque
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.82", i32, i32 }
%"class.blink::HeapHashMap.82" = type { %"class.WTF::HashMap.85" }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.95" }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.mojo::StructPtr.98"*, i32, i32 }
%"class.mojo::StructPtr.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.102", %"class.WTF::HashMap.109", %"class.WTF::HashMap.114", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.119", i32, %"class.mojo::StructPtr.124", %"class.WTF::Vector.119" }
%"class.mojo::StructPtr.102" = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.109" = type { %"class.WTF::HashTable.110" }
%"class.WTF::HashTable.110" = type <{ %"struct.WTF::KeyValuePair.113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.113" = type opaque
%"class.WTF::HashMap.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.124" = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.119", i8, i8, [6 x i8] }>
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.221" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.139", i32 }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.148", %"class.absl::optional.153", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.174", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.196", %"class.std::__1::map.207", i64, %"class.base::OnceCallback.167", %"class.base::OnceCallback.216", i8, %class.scoped_refptr.158, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.217" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.143" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.167" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.158, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.161", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.162" }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.234", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.158, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.234" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.177", %class.scoped_refptr.178 }
%"class.base::RepeatingCallback.177" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.178 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.179", [4 x i8] }>
%"class.base::RefCountedThreadSafe.179" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.195" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.195" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.196" = type { %"class.std::__1::__tree.197" }
%"class.std::__1::__tree.197" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::map.207" = type { %"class.std::__1::__tree.208" }
%"class.std::__1::__tree.208" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.209", %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.base::OnceCallback.167" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.216" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.158 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.159" }>
%"class.base::RefCountedThreadSafe.159" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.167" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.217" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.6"*, i32, i32 }
%"class.blink::HTMLParserReentryPermit" = type <{ i32, i8, [3 x i8] }>
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.310", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.318", %"class.WTF::Vector.318", i8, i32, %"class.blink::Member.323", %"class.blink::Member.66", %"class.blink::Member.325", %"class.blink::Member.327", %"class.blink::Member.329", %"class.blink::Member.331", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.339", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.345", %"class.blink::Member.347", %"class.blink::Member.307", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.350", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.283", %"class.blink::Member.262", %"class.blink::Member.555", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::UserActionElementSet", %"class.blink::Member.564", double, double, i64, i64, %"class.blink::HeapHashSet.566", %"class.blink::HeapHashSet.573", i16, i8, %"class.blink::Member.580", %"class.blink::Member.582", %"class.blink::Member.584", %"class.blink::Member.586", %"class.blink::TextLinkColors", %"class.blink::Member.588", i8, [7 x i8], %"class.blink::HeapHashMap.590", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.262", %"class.WTF::Vector.597", %"class.blink::Member.602", %"class.blink::Member.604", i8, %"class.blink::Member.262", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.606", %"class.blink::HeapVector.618", %"class.std::__1::unique_ptr.625", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.631", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.644", %"class.WTF::Vector.646", i8, i8, %"class.std::__1::unique_ptr.651", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.283", %"class.blink::HeapVector.657", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.665", i8, i32, %"class.blink::Member.667", %"class.blink::Member.669", %"class.blink::Member.671", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.673", %"class.WTF::HashMap.675", %"class.blink::Member.680", %"class.blink::Member.682", %"class.blink::Member.684", %"class.blink::Member.686", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.688", i8, i32, %"class.blink::Member.695", %"class.blink::Member.697", i32, %"class.blink::Member.699", %"class.blink::Member.701", %"class.blink::Member.703", %"class.std::__1::unique_ptr.705", i64, %"class.std::__1::unique_ptr.711", i32, i32, %"class.blink::Member.717", %"class.blink::Member.719", %"class.blink::Member.721", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.723", %"class.WTF::Vector.725", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.730", %"class.blink::Member.737", %"class.std::__1::unique_ptr.739", %"class.blink::Member.745", i8, i8, %"class.WTF::String", %"class.blink::Member.747", i8, [7 x i8], %"class.blink::HeapHashMap.749", %"class.blink::HeapObserverSet.756", %"class.blink::Member.764", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.766", i32, i8, i8, %"class.blink::WeakMember.768", %"class.blink::Member.769" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.237", %"class.blink::Member.237" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.237", %"class.blink::Member.239", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.241" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.245", %"class.blink::Member.2", %"class.blink::Member.239", %"class.blink::Member.247", %"class.blink::Member.247", %"class.blink::Member.290", %"class.blink::Member.292", %"class.blink::Member.294", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.299", %"class.blink::HeapVector.301" }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.251" }
%"class.blink::HeapHashMap.251" = type { %"class.WTF::HashMap.254" }
%"class.WTF::HashMap.254" = type { %"class.WTF::HashTable.255" }
%"class.WTF::HashTable.255" = type <{ %"struct.WTF::KeyValuePair.257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.257" = type { %"class.WTF::AtomicString", %"class.blink::Member.258" }
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.262", i32, %"class.blink::HeapVector.283" }
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.296" }
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::HeapHashMap.298"* }
%"class.blink::HeapHashMap.298" = type opaque
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.301" = type { %"class.WTF::Vector.304" }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306" }
%"class.WTF::VectorBufferBase.306" = type { %"class.blink::Member.307"*, i32, i32 }
%"class.blink::Supplementable.310" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.311" }
%"class.blink::HeapHashMap.311" = type { %"class.WTF::HashMap.314" }
%"class.WTF::HashMap.314" = type { %"class.WTF::HashTable.315" }
%"class.WTF::HashTable.315" = type <{ %"struct.WTF::KeyValuePair.317"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.317" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.318" = type { %"class.WTF::VectorBuffer.319" }
%"class.WTF::VectorBuffer.319" = type { %"class.WTF::VectorBufferBase.320" }
%"class.WTF::VectorBufferBase.320" = type { %"class.base::OnceCallback.167"*, i32, i32 }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.333" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::KURL"* }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352" }
%"class.WTF::VectorBufferBase.352" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.353 }
%class.scoped_refptr.353 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.354", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.354" = type { %"class.base::RefCounted.355" }
%"class.base::RefCounted.355" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.358" }
%"class.blink::HeapHashMap.358" = type { %"class.WTF::HashMap.361" }
%"class.WTF::HashMap.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"struct.WTF::KeyValuePair.364"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.364" = type { %"class.blink::WeakMember.365", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.566" = type { %"class.WTF::HashSet.569" }
%"class.WTF::HashSet.569" = type { %"class.WTF::HashTable.570" }
%"class.WTF::HashTable.570" = type <{ %"class.blink::WeakMember.572"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.572" = type opaque
%"class.blink::HeapHashSet.573" = type { %"class.WTF::HashSet.576" }
%"class.WTF::HashSet.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"class.blink::WeakMember.579"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.579" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.590" = type { %"class.WTF::HashMap.593" }
%"class.WTF::HashMap.593" = type { %"class.WTF::HashTable.594" }
%"class.WTF::HashTable.594" = type <{ %"struct.WTF::KeyValuePair.596"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.596" = type opaque
%"class.WTF::Vector.597" = type { %"class.WTF::VectorBuffer.598" }
%"class.WTF::VectorBuffer.598" = type { %"class.WTF::VectorBufferBase.599" }
%"class.WTF::VectorBufferBase.599" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.267" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.264 }
%class.scoped_refptr.264 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.265", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.265" = type { %"class.base::RefCounted.266" }
%"class.base::RefCounted.266" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.271", %"class.blink::Member.273", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.271" = type { %"class.WTF::SingleThreadedBitField.272" }
%"class.WTF::SingleThreadedBitField.272" = type { i32 }
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.276", %"class.WTF::AtomicString", %"class.WTF::Vector.278" }
%"class.WTF::RefCounted.276" = type { %"class.base::RefCounted.277" }
%"class.base::RefCounted.277" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280", [32 x i8] }
%"class.WTF::VectorBufferBase.280" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.2", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.612", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.553, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.610" }
%"class.blink::WeakMember.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::HeapHashSet.612" = type { %"class.WTF::HashSet.615" }
%"class.WTF::HashSet.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"class.blink::Member.6"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.553 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::HeapVector.618" = type { %"class.WTF::Vector.621" }
%"class.WTF::Vector.621" = type { %"class.WTF::VectorBuffer.622" }
%"class.WTF::VectorBuffer.622" = type { %"class.WTF::VectorBufferBase.623" }
%"class.WTF::VectorBufferBase.623" = type { %"class.blink::Member.10"*, i32, i32 }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.631" = type { %"class.WTF::HashSet.634" }
%"class.WTF::HashSet.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ %"class.blink::WeakMember.637"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.637" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.638", i32, [4 x i8] }>
%"class.WTF::Vector.638" = type { %"class.WTF::VectorBuffer.639" }
%"class.WTF::VectorBuffer.639" = type { %"class.WTF::VectorBufferBase.640" }
%"class.WTF::VectorBufferBase.640" = type { %"struct.std::__1::pair.641"*, i32, i32 }
%"struct.std::__1::pair.641" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.646" = type { %"class.WTF::VectorBuffer.647" }
%"class.WTF::VectorBuffer.647" = type { %"class.WTF::VectorBufferBase.648" }
%"class.WTF::VectorBufferBase.648" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.283" = type { %"class.WTF::Vector.286" }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"class.blink::Member.262"*, i32, i32 }
%"class.blink::HeapVector.657" = type { %"class.WTF::Vector.660" }
%"class.WTF::Vector.660" = type { %"class.WTF::VectorBuffer.661" }
%"class.WTF::VectorBuffer.661" = type { %"class.WTF::VectorBufferBase.662" }
%"class.WTF::VectorBufferBase.662" = type { %"class.blink::Member.663"*, i32, i32 }
%"class.blink::Member.663" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.2" }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"struct.WTF::KeyValuePair.679"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.679" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.553, %"class.base::WeakPtrFactory.554" }
%"class.base::WeakPtrFactory.554" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.688" = type { %"class.WTF::HashSet.691" }
%"class.WTF::HashSet.691" = type { %"class.WTF::HashTable.692" }
%"class.WTF::HashTable.692" = type <{ %"class.blink::Member.694"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.694" = type opaque
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.725" = type { %"class.WTF::VectorBuffer.726" }
%"class.WTF::VectorBuffer.726" = type { %"class.WTF::VectorBufferBase.727" }
%"class.WTF::VectorBufferBase.727" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.730" = type { %"class.WTF::HashMap.733" }
%"class.WTF::HashMap.733" = type { %"class.WTF::HashTable.734" }
%"class.WTF::HashTable.734" = type <{ %"struct.WTF::KeyValuePair.736"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.736" = type opaque
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.749" = type { %"class.WTF::HashMap.752" }
%"class.WTF::HashMap.752" = type { %"class.WTF::HashTable.753" }
%"class.WTF::HashTable.753" = type <{ %"struct.WTF::KeyValuePair.755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.755" = type opaque
%"class.blink::HeapObserverSet.756" = type { i32, [4 x i8], %"class.blink::HeapHashSet.757" }
%"class.blink::HeapHashSet.757" = type { %"class.WTF::HashSet.760" }
%"class.WTF::HashSet.760" = type { %"class.WTF::HashTable.761" }
%"class.WTF::HashTable.761" = type <{ %"class.blink::WeakMember.763"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.763" = type opaque
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.2", %"class.blink::HeapHashSet.773", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.780", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.773" = type { %"class.WTF::HashSet.776" }
%"class.WTF::HashSet.776" = type { %"class.WTF::HashTable.777" }
%"class.WTF::HashTable.777" = type <{ %"class.blink::Member.779"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.779" = type opaque
%"class.blink::HeapTaskRunnerTimer.780" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.781", { i64, i64 } }
%"class.blink::WeakMember.781" = type { %"class.blink::MemberBase.767" }
%"class.blink::WeakMember.768" = type { %"class.blink::MemberBase.238" }
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HTMLParserScriptRunnerHost" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.864", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.872", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.899", %"class.blink::FrameLoader", %"class.blink::Member.920", %"class.blink::Member.262", %"class.blink::Member.922", %"class.blink::Member.924", %"class.blink::Member.926", %"class.blink::Member.928", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.930", %class.scoped_refptr.932, %"class.blink::Member.933", %"class.blink::Member.935", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.941", %"class.blink::Member.943", %"class.blink::Member.945", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1049", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1070", %"class.std::__1::unique_ptr.1071", %"class.absl::optional.852", i32, [4 x i8], %"class.std::__1::unique_ptr.1077", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1095", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1113", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1127", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.blink::Member.1139", %"class.blink::Member.1141", %"class.mojo::StructPtr.1144", %"class.blink::Member.1153", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1155", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.825", %"class.blink::Member.827", %"class.blink::Member.829", i8, i32, i8, i32, %"class.blink::Member.831", %"class.blink::Member.833", %"class.blink::FrameLifecycle", %"class.blink::Member.823", %"class.blink::Member.823", %"class.blink::Member.823", %"class.blink::Member.823", %"class.blink::Member.823", %"class.blink::Member.823", %"class.blink::Member.835", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.845", i8, %"class.base::UnguessableToken", %"class.absl::optional.847", %"class.absl::optional.852", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.823", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::Frame"* }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.823", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.837" }
%"class.std::__1::vector.837" = type { %"class.std::__1::__vector_base.838" }
%"class.std::__1::__vector_base.838" = type { %"struct.std::__1::pair.839"*, %"struct.std::__1::pair.839"*, %"class.std::__1::__compressed_pair.840" }
%"struct.std::__1::pair.839" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"struct.std::__1::pair.839"* }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.847" = type { %"class.absl::optional_internal::optional_data.848" }
%"class.absl::optional_internal::optional_data.848" = type { %"class.absl::optional_internal::optional_data_base.849" }
%"class.absl::optional_internal::optional_data_base.849" = type { %"class.absl::optional_internal::optional_data_dtor_base.850" }
%"class.absl::optional_internal::optional_data_dtor_base.850" = type { i8, %union.anon.851 }
%union.anon.851 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.857" }
%"class.blink::HeapHashSet.857" = type { %"class.WTF::HashSet.860" }
%"class.WTF::HashSet.860" = type { %"class.WTF::HashTable.861" }
%"class.WTF::HashTable.861" = type <{ %"class.blink::WeakMember.863"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.863" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.864" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.865" }
%"class.blink::HeapHashMap.865" = type { %"class.WTF::HashMap.868" }
%"class.WTF::HashMap.868" = type { %"class.WTF::HashTable.869" }
%"class.WTF::HashTable.869" = type <{ %"struct.WTF::KeyValuePair.871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.871" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.875", %"class.base::WeakPtrFactory.880" }
%"class.WTF::HashMap.875" = type { %"class.WTF::HashTable.876" }
%"class.WTF::HashTable.876" = type <{ %"struct.WTF::KeyValuePair.879"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.879" = type opaque
%"class.base::WeakPtrFactory.880" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.884" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.888", i64, %"class.std::__1::map.889", i8*, i64, %"class.base::WeakPtrFactory.898" }
%"class.base::RepeatingCallback.888" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.889" = type { %"class.std::__1::__tree.890" }
%"class.std::__1::__tree.890" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.891", %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.base::WeakPtrFactory.898" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.899" = type { %"class.WTF::HashSet.902" }
%"class.WTF::HashSet.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"class.blink::WeakMember.905"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.905" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.835", %"class.blink::Member.906", %"class.blink::Member.908", %"class.std::__1::unique_ptr.910", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.916" }
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1162", %"class.blink::Member.835", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1167", i8, i32, %"class.blink::Color", %"class.absl::optional.1169", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.1176", %"class.std::__1::unique_ptr.1179", i32, [4 x i8], %"class.WTF::HashSet.1182", %"class.blink::Member.1189", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1191", %"class.blink::HeapHashSet.1198", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1206", i8, %"class.blink::Member.1212", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1224", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1238", i8, %"class.std::__1::unique_ptr.1244", %"class.std::__1::unique_ptr.1361", %"class.WTF::Vector.1367", i32, %class.scoped_refptr.1372, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1373", %"class.blink::Member.1375", %"class.blink::Member.1377", %"class.blink::HeapHashSet.1379", %"class.blink::HeapHashSet.1386", %"class.std::__1::unique_ptr.1393", %"class.std::__1::unique_ptr.1400", %"class.WTF::Vector.318" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1162" = type { %"class.WTF::HashTable.1163" }
%"class.WTF::HashTable.1163" = type <{ %class.scoped_refptr.1166*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1166 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1167" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1168", { i64, i64 } }
%"class.blink::WeakMember.1168" = type { %"class.blink::MemberBase.921" }
%"class.absl::optional.1169" = type { %"class.absl::optional_internal::optional_data.1170" }
%"class.absl::optional_internal::optional_data.1170" = type { %"class.absl::optional_internal::optional_data_base.1171" }
%"class.absl::optional_internal::optional_data_base.1171" = type { %"class.absl::optional_internal::optional_data_dtor_base.1172" }
%"class.absl::optional_internal::optional_data_dtor_base.1172" = type { i8, %union.anon.1173 }
%union.anon.1173 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::HeapHashSet.1178"* }
%"class.blink::HeapHashSet.1178" = type opaque
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.WTF::HashSet.1182"* }
%"class.WTF::HashSet.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1191" = type { %"class.WTF::HashSet.1194" }
%"class.WTF::HashSet.1194" = type { %"class.WTF::HashTable.1195" }
%"class.WTF::HashTable.1195" = type <{ %"class.blink::Member.1197"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1197" = type opaque
%"class.blink::HeapHashSet.1198" = type { %"class.WTF::HashSet.1201" }
%"class.WTF::HashSet.1201" = type { %"class.WTF::HashTable.1202" }
%"class.WTF::HashTable.1202" = type <{ %"class.blink::Member.1204"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1216", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1216" = type { %"class.WTF::HashTable.1217" }
%"class.WTF::HashTable.1217" = type <{ %"struct.WTF::KeyValuePair.1219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1219" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1220", i32, i32 }
%"class.WTF::Vector.1220" = type { %"class.WTF::VectorBuffer.1221" }
%"class.WTF::VectorBuffer.1221" = type { %"class.WTF::VectorBufferBase.1222" }
%"class.WTF::VectorBufferBase.1222" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1224" = type { %"class.WTF::LinkedHashSet.1227" }
%"class.WTF::LinkedHashSet.1227" = type { %"class.WTF::HashMap.1228", %"class.WTF::VectorBackedLinkedList.1232" }
%"class.WTF::HashMap.1228" = type { %"class.WTF::HashTable.1229" }
%"class.WTF::HashTable.1229" = type <{ %"struct.WTF::KeyValuePair.1231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1231" = type opaque
%"class.WTF::VectorBackedLinkedList.1232" = type { %"class.WTF::Vector.1233", i32, i32 }
%"class.WTF::Vector.1233" = type { %"class.WTF::VectorBuffer.1234" }
%"class.WTF::VectorBuffer.1234" = type { %"class.WTF::VectorBufferBase.1235" }
%"class.WTF::VectorBufferBase.1235" = type { %"class.WTF::VectorBackedLinkedListNode.1236"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1236" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1244" = type { %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1247, %class.scoped_refptr.1247, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1338", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1343", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1247 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1248", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1255" }
%"class.WTF::RefCounted.1248" = type { %"class.base::RefCounted.1249" }
%"class.base::RefCounted.1249" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1250", i32, [4 x i8] }>
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1255" = type { %"class.WTF::VectorBuffer.1256" }
%"class.WTF::VectorBuffer.1256" = type { %"class.WTF::VectorBufferBase.1257" }
%"class.WTF::VectorBufferBase.1257" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1261", %"class.std::__1::unique_ptr.1310", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1258, %class.scoped_refptr.1259, %class.scoped_refptr.1260 }
%class.scoped_refptr.1258 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1274", i8, i8, %class.scoped_refptr.1258, i32, i32 }
%"class.WTF::RefCounted.1274" = type { %"class.base::RefCounted.1275" }
%"class.base::RefCounted.1275" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1259 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1429" }
%"class.blink::PaintPropertyNode.1429" = type { %"class.WTF::RefCounted.1430", i8, i8, %class.scoped_refptr.1259, i32, i32 }
%"class.WTF::RefCounted.1430" = type { %"class.base::RefCounted.1431" }
%"class.base::RefCounted.1431" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1260 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1426" }
%"class.blink::PaintPropertyNode.1426" = type { %"class.WTF::RefCounted.1427", i8, i8, %class.scoped_refptr.1260, i32, i32 }
%"class.WTF::RefCounted.1427" = type { %"class.base::RefCounted.1428" }
%"class.base::RefCounted.1428" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1264", %"class.WTF::Vector.1269", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1264" = type { %"class.WTF::VectorBuffer.1265" }
%"class.WTF::VectorBuffer.1265" = type { %"class.WTF::VectorBufferBase.1266" }
%"class.WTF::VectorBufferBase.1266" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1269" = type { %"class.WTF::VectorBuffer.1270" }
%"class.WTF::VectorBuffer.1270" = type { %"class.WTF::VectorBufferBase.1271" }
%"class.WTF::VectorBufferBase.1271" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1289" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1282, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1283", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1276" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1282 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1411", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1411" = type { %"class.WTF::RefCounted.1412", i8, i8, %class.scoped_refptr.1282, i32, i32 }
%"class.WTF::RefCounted.1412" = type { %"class.base::RefCounted.1413" }
%"class.base::RefCounted.1413" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1414" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1414" = type { %"class.absl::optional_internal::optional_data.1415" }
%"class.absl::optional_internal::optional_data.1415" = type { %"class.absl::optional_internal::optional_data_base.1416" }
%"class.absl::optional_internal::optional_data_base.1416" = type { %"class.absl::optional_internal::optional_data_dtor_base.1417" }
%"class.absl::optional_internal::optional_data_dtor_base.1417" = type { i8, %union.anon.1418 }
%union.anon.1418 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1419", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1419" = type { %"class.std::__1::__vector_base.1420" }
%"class.std::__1::__vector_base.1420" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1421" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1421" = type { %"struct.std::__1::__compressed_pair_elem.1422" }
%"struct.std::__1::__compressed_pair_elem.1422" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1292", %"class.std::__1::unique_ptr.1298", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1292" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1310" = type { %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1313", %"class.absl::optional.1313" }
%"class.absl::optional.1313" = type { %"class.absl::optional_internal::optional_data.1314" }
%"class.absl::optional_internal::optional_data.1314" = type { %"class.absl::optional_internal::optional_data_base.1315" }
%"class.absl::optional_internal::optional_data_base.1315" = type { %"class.absl::optional_internal::optional_data_dtor_base.1316" }
%"class.absl::optional_internal::optional_data_dtor_base.1316" = type { i8, [3 x i8], %union.anon.1317 }
%union.anon.1317 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1255"*, %"class.absl::optional.1323", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1323" = type { %"class.absl::optional_internal::optional_data.1324" }
%"class.absl::optional_internal::optional_data.1324" = type { %"class.absl::optional_internal::optional_data_base.1325" }
%"class.absl::optional_internal::optional_data_base.1325" = type { %"class.absl::optional_internal::optional_data_dtor_base.1326" }
%"class.absl::optional_internal::optional_data_dtor_base.1326" = type { i8, %union.anon.1327 }
%union.anon.1327 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1328", %"class.WTF::Vector.1333" }
%"class.WTF::Vector.1328" = type { %"class.WTF::VectorBuffer.1329" }
%"class.WTF::VectorBuffer.1329" = type { %"class.WTF::VectorBufferBase.1330", [128 x i8] }
%"class.WTF::VectorBufferBase.1330" = type { i32*, i32, i32 }
%"class.WTF::Vector.1333" = type { %"class.WTF::VectorBuffer.1334" }
%"class.WTF::VectorBuffer.1334" = type { %"class.WTF::VectorBufferBase.1335", [128 x i8] }
%"class.WTF::VectorBufferBase.1335" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase.1340" }
%"class.WTF::VectorBufferBase.1340" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"struct.WTF::KeyValuePair.1347"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1347" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1348", %"class.WTF::Vector.1353" }
%"class.WTF::HashMap.1348" = type { %"class.WTF::HashTable.1349" }
%"class.WTF::HashTable.1349" = type <{ %"struct.WTF::KeyValuePair.1352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1352" = type opaque
%"class.WTF::Vector.1353" = type { %"class.WTF::VectorBuffer.1354" }
%"class.WTF::VectorBuffer.1354" = type { %"class.WTF::VectorBufferBase.1355" }
%"class.WTF::VectorBufferBase.1355" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1361" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1367" = type { %"class.WTF::VectorBuffer.1368" }
%"class.WTF::VectorBuffer.1368" = type { %"class.WTF::VectorBufferBase.1369" }
%"class.WTF::VectorBufferBase.1369" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1372 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1379" = type { %"class.WTF::HashSet.1382" }
%"class.WTF::HashSet.1382" = type { %"class.WTF::HashTable.1383" }
%"class.WTF::HashTable.1383" = type <{ %"class.blink::WeakMember.1385"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1385" = type opaque
%"class.blink::HeapHashSet.1386" = type { %"class.WTF::HashSet.1389" }
%"class.WTF::HashSet.1389" = type { %"class.WTF::HashTable.1390" }
%"class.WTF::HashTable.1390" = type <{ %"class.blink::WeakMember.1392"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1392" = type opaque
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1396" }
%"class.base::time_internal::TimeBase.1396" = type { i64 }
%"class.std::__1::unique_ptr.1400" = type { %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1403", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1403" = type { %"class.absl::optional_internal::optional_data.1404" }
%"class.absl::optional_internal::optional_data.1404" = type { %"class.absl::optional_internal::optional_data_base.1405" }
%"class.absl::optional_internal::optional_data_base.1405" = type { %"class.absl::optional_internal::optional_data_dtor_base.1406" }
%"class.absl::optional_internal::optional_data_dtor_base.1406" = type { i8, %union.anon.1407 }
%union.anon.1407 = type { %"class.base::Time" }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.932 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.947" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1043" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.951, %"class.std::__1::unique_ptr.139", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.158, i32 }>
%class.scoped_refptr.951 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.158, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1009", %"class.absl::optional.1014", %"class.absl::optional.968", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1034", i8, [7 x i8], %class.scoped_refptr.158, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.179" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.167", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.158, %"class.std::__1::unique_ptr.952", %"class.absl::optional.962", %"struct.std::__1::atomic.547", i8, i8, i8, i8, i32, i32, %"class.absl::optional.968", %"class.std::__1::unique_ptr.973", i8, i64, %class.scoped_refptr.1006, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1008" }
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.158, i8, %"class.mojo::ScopedHandleBase.955", %class.scoped_refptr.956, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.957", i8*, %"class.base::WeakPtrFactory.958" }
%"class.mojo::ScopedHandleBase.955" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.956 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.957" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.958" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.962" = type { %"class.absl::optional_internal::optional_data.963" }
%"class.absl::optional_internal::optional_data.963" = type { %"class.absl::optional_internal::optional_data_base.964" }
%"class.absl::optional_internal::optional_data_base.964" = type { %"class.absl::optional_internal::optional_data_dtor_base.965" }
%"class.absl::optional_internal::optional_data_dtor_base.965" = type { i8, %union.anon.966 }
%union.anon.966 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.967", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.967" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.976", i8, i64, %class.scoped_refptr.977, %class.scoped_refptr.1002 }
%"class.base::RepeatingCallback.976" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.977 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.978", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.980", %"class.std::__1::map.991", i8, [7 x i8] }>
%"class.base::RefCounted.978" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.979 }
%class.scoped_refptr.979 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.980" = type { %"class.std::__1::__tree.981" }
%"class.std::__1::__tree.981" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::map.991" = type { %"class.std::__1::__tree.992" }
%"class.std::__1::__tree.992" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.993", %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%class.scoped_refptr.1002 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1006 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1007 }
%class.scoped_refptr.1007 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1008" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1009" = type { %"class.absl::optional_internal::optional_data.1010" }
%"class.absl::optional_internal::optional_data.1010" = type { %"class.absl::optional_internal::optional_data_base.1011" }
%"class.absl::optional_internal::optional_data_base.1011" = type { %"class.absl::optional_internal::optional_data_dtor_base.1012" }
%"class.absl::optional_internal::optional_data_dtor_base.1012" = type { i8, %union.anon.1013 }
%union.anon.1013 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1014" = type { %"class.absl::optional_internal::optional_data.1015" }
%"class.absl::optional_internal::optional_data.1015" = type { %"class.absl::optional_internal::optional_data_base.1016" }
%"class.absl::optional_internal::optional_data_base.1016" = type { %"class.absl::optional_internal::optional_data_dtor_base.1017" }
%"class.absl::optional_internal::optional_data_dtor_base.1017" = type { i8, [7 x i8], %union.anon.1018 }
%union.anon.1018 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.968" = type { %"class.absl::optional_internal::optional_data.969" }
%"class.absl::optional_internal::optional_data.969" = type { %"class.absl::optional_internal::optional_data_base.970" }
%"class.absl::optional_internal::optional_data_base.970" = type { %"class.absl::optional_internal::optional_data_dtor_base.971" }
%"class.absl::optional_internal::optional_data_dtor_base.971" = type { i8, %union.anon.972 }
%union.anon.972 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1019 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1019 = type { %"class.std::__1::map.1022" }
%"class.std::__1::map.1022" = type { %"class.std::__1::__tree.1023" }
%"class.std::__1::__tree.1023" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1024", %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1033"*, i64 }
%"class.std::__1::unique_ptr.1033" = type opaque
%"class.std::__1::map.1034" = type { %"class.std::__1::__tree.1035" }
%"class.std::__1::__tree.1035" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1036", %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1052, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1052 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1053", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1053" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1054" }
%"class.std::__1::vector.1054" = type { %"class.std::__1::__vector_base.1055" }
%"class.std::__1::__vector_base.1055" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1061, i8, [7 x i8] }>
%class.scoped_refptr.1061 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1062", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1062" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1063" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1070" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1071" = type { %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.852" = type { %"class.absl::optional_internal::optional_data.853" }
%"class.absl::optional_internal::optional_data.853" = type { %"class.absl::optional_internal::optional_data_base.854" }
%"class.absl::optional_internal::optional_data_base.854" = type { %"class.absl::optional_internal::optional_data_dtor_base.855" }
%"class.absl::optional_internal::optional_data_dtor_base.855" = type { i8, %union.anon.856 }
%union.anon.856 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1083" }
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1087" }
%"class.mojo::AssociatedRemote.1087" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1088" }
%"class.mojo::internal::AssociatedInterfacePtrState.1088" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1089" }
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1095" = type { %"class.blink::Member.1096" }
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1100" }
%"class.mojo::AssociatedRemote.1100" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1101" }
%"class.mojo::internal::AssociatedInterfacePtrState.1101" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1102" }
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1108" }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.835", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1112" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.139" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1112" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1113" = type { %"class.blink::Member.1114" }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1118", %"class.blink::Member.835", %"class.mojo::AssociatedReceiver.1119" }
%"class.blink::ThreadState::PrefinalizerRegistration.1118" = type { i8 }
%"class.mojo::AssociatedReceiver.1119" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1120" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1120" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1121" }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1125", %"class.blink::Member.835", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1125" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.951, %"class.std::__1::unique_ptr.139", %"class.base::WeakPtrFactory.1126" }
%"class.base::WeakPtrFactory.1126" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1127" = type { %"class.blink::Member.1128" }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1132", %"class.blink::Member.835", %"class.mojo::AssociatedReceiver.1133" }
%"class.blink::ThreadState::PrefinalizerRegistration.1132" = type { i8 }
%"class.mojo::AssociatedReceiver.1133" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1134" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1134" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::HeapHashMap.1143"* }
%"class.blink::HeapHashMap.1143" = type opaque
%"class.mojo::StructPtr.1144" = type { %"class.std::__1::unique_ptr.1145" }
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1148", %"class.mojo::InlinedStructPtr.1149" }
%"class.mojo::InlinedStructPtr.1148" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1149" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1155" = type { %"class.absl::optional_internal::optional_data.1156" }
%"class.absl::optional_internal::optional_data.1156" = type { %"class.absl::optional_internal::optional_data_base.1157" }
%"class.absl::optional_internal::optional_data_base.1157" = type { %"class.absl::optional_internal::optional_data_dtor_base.1158" }
%"class.absl::optional_internal::optional_data_dtor_base.1158" = type { i8, %union.anon.1159 }
%union.anon.1159 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::TracedValue"* }
%"class.blink::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.802" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.base::trace_event::TracedValue"* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.805" }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.blink::Persistent.787" = type { %"class.blink::PersistentBase.788" }
%"class.blink::PersistentBase.788" = type { %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::PersistentNodePtr" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.159", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.787" }
%"class.blink::InsertionPointRecord" = type { %"class.blink::HTMLInputStream"*, %"class.blink::SegmentedString", %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.blink::HTMLInputStream" = type { %"class.blink::SegmentedString", %"class.blink::SegmentedString"* }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque.790", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon.789, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon.789 = type { i8* }
%"class.WTF::Deque.790" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.793" }
%"class.WTF::VectorBuffer.793" = type { %"class.WTF::VectorBufferBase.794" }
%"class.WTF::VectorBufferBase.794" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ScriptLoader" = type { %"class.blink::PendingScriptClient", %"class.blink::NameClient", %"class.blink::Member.10", i8, %"class.blink::WeakMember", i8, i8, i8, i8, i32, i8, i8, i8, %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.797" }
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1436", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1436" = type { %"class.std::__1::__vector_base.1437" }
%"class.std::__1::__vector_base.1437" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1444" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.1445" }
%"struct.std::__1::__compressed_pair_elem.1445" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1438", i64, i64 }
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.1449" }
%"class.std::__1::list.1449" = type { %"class.std::__1::__list_imp.1450" }
%"class.std::__1::__list_imp.1450" = type { %"struct.std::__1::__list_node_base.1451", %"class.std::__1::__compressed_pair.1452" }
%"struct.std::__1::__list_node_base.1451" = type { %"struct.std::__1::__list_node_base.1451"*, %"struct.std::__1::__list_node_base.1451"* }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1464", %"class.blink::FreeList", %"class.WTF::Vector.1469" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.1464" = type { %"class.WTF::VectorBuffer.1465" }
%"class.WTF::VectorBuffer.1465" = type { %"class.WTF::VectorBufferBase.1466" }
%"class.WTF::VectorBufferBase.1466" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.1469" = type { %"class.WTF::VectorBuffer.1470" }
%"class.WTF::VectorBuffer.1470" = type { %"class.WTF::VectorBufferBase.1471" }
%"class.WTF::VectorBufferBase.1471" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZN5blink20InsertionPointRecordC2ERNS_15HTMLInputStreamE = comdat any

$_ZN5blink20InsertionPointRecordD2Ev = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZNK5blink22HTMLParserScriptRunner18NameInHeapSnapshotEv = comdat any

$_ZThn8_NK5blink22HTMLParserScriptRunner18NameInHeapSnapshotEv = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SegmentedSubstringEEEmm = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26HTMLParserScriptRunnerHostELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_26HTMLParserScriptRunnerHostELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13PendingScriptEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink22HTMLParserScriptRunnerE = hidden unnamed_addr constant { [7 x i8*], [3 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HTMLParserScriptRunner"*, %"class.blink::Visitor"*)* @_ZNK5blink22HTMLParserScriptRunner5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLParserScriptRunner"*)* @_ZN5blink22HTMLParserScriptRunnerD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLParserScriptRunner"*)* @_ZN5blink22HTMLParserScriptRunnerD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLParserScriptRunner"*, %"class.blink::PendingScript"*)* @_ZN5blink22HTMLParserScriptRunner21PendingScriptFinishedEPNS_13PendingScriptE to i8*), i8* bitcast (i8* (%"class.blink::HTMLParserScriptRunner"*)* @_ZNK5blink22HTMLParserScriptRunner18NameInHeapSnapshotEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i8* (%"class.blink::HTMLParserScriptRunner"*)* @_ZThn8_NK5blink22HTMLParserScriptRunner18NameInHeapSnapshotEv to i8*)] }, align 8
@.str = private unnamed_addr constant [22 x i8] c"PendingScriptFinished\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/core/script/html_parser_script_runner.cc\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [53 x i8] c"HTMLParserScriptRunner::executeScriptsWaitingForLoad\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"HTMLParserScriptRunner::executeScriptsWaitingForResources\00", align 1
@.str.4 = private unnamed_addr constant [56 x i8] c"HTMLParserScriptRunner::executeScriptsWaitingForParsing\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"!ParserBlockingScript()\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"HTMLParserScriptRunner::execute\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"!parser_blocking_script_\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"HTMLParserScriptRunner ExecuteScript\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"YieldParserForScriptLoadAndBlockingResources\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"YieldParserForScriptLoad\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"YieldParserForScriptBlockingResources\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SegmentedSubstringEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SegmentedSubstring]\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"frame\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"lineNumber\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"columnNumber\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"HTMLParserScriptRunner\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.21 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.23 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1

@_ZN5blink22HTMLParserScriptRunnerC1EPNS_23HTMLParserReentryPermitEPNS_8DocumentEPNS_26HTMLParserScriptRunnerHostE = hidden unnamed_addr alias void (%"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"*, %"class.blink::HTMLParserScriptRunnerHost"*), void (%"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"*, %"class.blink::HTMLParserScriptRunnerHost"*)* @_ZN5blink22HTMLParserScriptRunnerC2EPNS_23HTMLParserReentryPermitEPNS_8DocumentEPNS_26HTMLParserScriptRunnerHostE
@_ZN5blink22HTMLParserScriptRunnerD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLParserScriptRunner"*), void (%"class.blink::HTMLParserScriptRunner"*)* @_ZN5blink22HTMLParserScriptRunnerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunnerC2EPNS_23HTMLParserReentryPermitEPNS_8DocumentEPNS_26HTMLParserScriptRunnerHostE(%"class.blink::HTMLParserScriptRunner"* nocapture, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"*, %"class.blink::HTMLParserScriptRunnerHost"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::HTMLParserScriptRunner"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLParserScriptRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLParserScriptRunnerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::HTMLParserReentryPermit"* %1, %"class.blink::HTMLParserReentryPermit"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::Document"* %2, %"class.blink::Document"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::HTMLParserScriptRunnerHost"* %3, %"class.blink::HTMLParserScriptRunnerHost"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.blink::PendingScript"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunnerD2Ev(%"class.blink::HTMLParserScriptRunner"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunnerD0Ev(%"class.blink::HTMLParserScriptRunner"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner6DetachEv(%"class.blink::HTMLParserScriptRunner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = icmp eq %"class.blink::Document"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %8, align 8
  %10 = icmp eq %"class.blink::PendingScript"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"* nonnull %9) #11
  br label %12

12:                                               ; preds = %6, %11
  %13 = bitcast %"class.blink::Member.6"* %7 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %45, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %22

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %15, %19 ], [ %42, %22 ]
  %24 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %20, align 8, !noalias !2
  %25 = zext i32 %23 to i64
  %26 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %27, align 8, !noalias !2
  %29 = add i32 %23, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %24, i64 %30
  %32 = bitcast %"class.blink::Member.6"* %26 to i8*
  %33 = ptrtoint %"class.blink::Member.6"* %31 to i64
  %34 = ptrtoint %"class.blink::Member.6"* %26 to i64
  %35 = sub i64 %33, %34
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %32, i64 %35) #11, !noalias !2
  %36 = load i32, i32* %14, align 8, !noalias !2
  %37 = load i32, i32* %21, align 8, !noalias !2
  %38 = add i32 %37, -1
  %39 = icmp eq i32 %36, %38
  %40 = add i32 %36, 1
  %41 = select i1 %39, i32 0, i32 %40
  store i32 %41, i32* %14, align 8, !noalias !2
  tail call void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"* %28) #11
  %42 = load i32, i32* %14, align 8
  %43 = load i32, i32* %16, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %22

45:                                               ; preds = %22, %12
  %46 = bitcast %"class.blink::Member.2"* %2 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %1, %45
  ret void
}

declare void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22HTMLParserScriptRunner27IsParserBlockingScriptReadyEv(%"class.blink::HTMLParserScriptRunner"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::Document"*, %"class.blink::Document"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %3) #11
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %6, align 8
  %8 = bitcast %"class.blink::PendingScript"* %7 to i1 (%"class.blink::PendingScript"*)***
  %9 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %9, i64 7
  %11 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::PendingScript"* %7) #11
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi i1 [ %12, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner50ExecutePendingParserBlockingScriptAndDispatchEventEv(%"class.blink::HTMLParserScriptRunner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %4, align 8
  tail call void @_ZN5blink13PendingScript19StopWatchingForLoadEv(%"class.blink::PendingScript"* %5) #11
  %6 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #11
  tail call void @_ZN5blink9Microtask17PerformCheckpointEPN2v87IsolateE(%"class.v8::Isolate"* %12) #11
  %13 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %14) #11
  br i1 %15, label %16, label %59

16:                                               ; preds = %11
  %17 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %6, align 8
  br label %18

18:                                               ; preds = %16, %1
  %19 = phi %"class.blink::HTMLParserReentryPermit"* [ %17, %16 ], [ %7, %1 ]
  %20 = bitcast %"class.blink::Member.6"* %3 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %19, i64 0, i32 0
  %22 = load i32, i32* %21, align 4, !noalias !5
  %23 = add i32 %22, 1
  store i32 %23, i32* %21, align 4, !noalias !5
  %24 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = icmp eq %"class.blink::Document"* %25, null
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 72
  %28 = select i1 %26, i32* null, i32* %27
  br i1 %26, label %29, label %31

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #11
  br label %37

31:                                               ; preds = %18
  %32 = load i32, i32* %28, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %28, align 4
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %35 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %35) #11
  %36 = icmp eq %"class.blink::Document"* %34, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %29, %31
  %38 = phi i8* [ %30, %29 ], [ %35, %31 ]
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %2) #11
  br label %47

39:                                               ; preds = %31
  %40 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %34) #11
  %41 = icmp eq %"class.blink::LocalFrame"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %2) #11
  br label %47

43:                                               ; preds = %39
  %44 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %34) #11
  %45 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %44) #11
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 19
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %2, %"class.blink::KURL"* dereferenceable(112) %46) #11
  br label %47

47:                                               ; preds = %37, %42, %43
  %48 = phi i8* [ %38, %37 ], [ %35, %42 ], [ %35, %43 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_115DoExecuteScriptEPNS_13PendingScriptERKNS_4KURLE(%"class.blink::PendingScript"* %5, %"class.blink::KURL"* nonnull dereferenceable(112) %2)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %48) #11
  %49 = icmp eq i32* %28, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = load i32, i32* %28, align 4
  %52 = add i32 %51, -1
  store i32 %52, i32* %28, align 4
  br label %53

53:                                               ; preds = %47, %50
  %54 = load i32, i32* %21, align 4
  %55 = add i32 %54, -1
  store i32 %55, i32* %21, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %19, i64 0, i32 1
  store i8 0, i8* %58, align 4
  br label %59

59:                                               ; preds = %57, %53, %11
  ret void
}

declare void @_ZN5blink13PendingScript19StopWatchingForLoadEv(%"class.blink::PendingScript"*) local_unnamed_addr #2

declare void @_ZN5blink9Microtask17PerformCheckpointEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_115DoExecuteScriptEPNS_13PendingScriptERKNS_4KURLE(%"class.blink::PendingScript"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.std::__1::unique_ptr.799", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %40, label %9, !prof !8

9:                                                ; preds = %2
  %10 = tail call %"class.blink::ScriptElementBase"* @_ZNK5blink13PendingScript10GetElementEv(%"class.blink::PendingScript"* %0) #11
  %11 = ptrtoint %"class.blink::ScriptElementBase"* %10 to i64
  %12 = bitcast %"class.std::__1::unique_ptr.799"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = bitcast i64* %3 to %"class.WTF::TextPosition"*
  %14 = tail call %"class.blink::ScriptElementBase"* @_ZNK5blink13PendingScript10GetElementEv(%"class.blink::PendingScript"* %0) #11
  %15 = bitcast %"class.blink::ScriptElementBase"* %14 to %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)***
  %16 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %16, i64 22
  %18 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %17, align 8
  %19 = tail call dereferenceable(2848) %"class.blink::Document"* %18(%"class.blink::ScriptElementBase"* %14) #11
  %20 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %0, i64 0, i32 2
  %22 = bitcast %"class.WTF::TextPosition"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %3, align 8
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #11
  %25 = bitcast %"class.blink::PendingScript"* %0 to void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)***
  %26 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)**, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %26, i64 10
  %28 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %27, align 8
  call void %28(%"class.blink::KURL"* nonnull sret %4, %"class.blink::PendingScript"* %0) #11
  %29 = call fastcc %"class.blink::TracedValue"* @_ZN5blink12_GLOBAL__N_128GetTraceArgsForScriptElementERNS_8DocumentERKN3WTF12TextPositionERKNS_4KURLE(%"class.blink::Document"* dereferenceable(2848) %19, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %13, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.799", %"class.std::__1::unique_ptr.799"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::TracedValue"* %29, %"class.blink::TracedValue"** %30, align 8
  %31 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i32 2176, i64 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::unique_ptr.799"* nonnull dereferenceable(8) %5)
  %32 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %30, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %30, align 8
  %33 = icmp eq %"class.blink::TracedValue"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %9
  %35 = bitcast %"class.blink::TracedValue"* %32 to void (%"class.blink::TracedValue"*)***
  %36 = load void (%"class.blink::TracedValue"*)**, void (%"class.blink::TracedValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %36, i64 1
  %38 = load void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %37, align 8
  call void %38(%"class.blink::TracedValue"* nonnull %32) #11
  br label %39

39:                                               ; preds = %9, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %40

40:                                               ; preds = %2, %39
  %41 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %39 ]
  %42 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), %39 ]
  %43 = phi i64 [ -6148914691236517206, %2 ], [ %31, %39 ]
  %44 = bitcast %"class.blink::PendingScript"* %0 to void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)***
  %45 = load void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)**, void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)*, void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)** %45, i64 11
  %47 = load void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)*, void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)** %46, align 8
  call void %47(%"class.blink::PendingScript"* %0, %"class.blink::KURL"* dereferenceable(112) %1) #11
  %48 = icmp eq i8* %41, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %40
  %50 = load i8, i8* %41, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %41, i8* %42, i64 %43) #11
  br label %53

53:                                               ; preds = %40, %49, %52
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner44ExecutePendingDeferredScriptAndDispatchEventEPNS_13PendingScriptE(%"class.blink::HTMLParserScriptRunner"* nocapture readonly, %"class.blink::PendingScript"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  tail call void @_ZN5blink13PendingScript19StopWatchingForLoadEv(%"class.blink::PendingScript"* %1) #11
  %4 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #11
  tail call void @_ZN5blink9Microtask17PerformCheckpointEPN2v87IsolateE(%"class.v8::Isolate"* %10) #11
  %11 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4, !noalias !9
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i32 [ %7, %2 ], [ %13, %9 ]
  %16 = phi %"class.blink::HTMLParserReentryPermit"* [ %5, %2 ], [ %11, %9 ]
  %17 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %16, i64 0, i32 0
  %18 = add i32 %15, 1
  store i32 %18, i32* %17, align 4, !noalias !9
  %19 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = icmp eq %"class.blink::Document"* %20, null
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 72
  %23 = select i1 %21, i32* null, i32* %22
  br i1 %21, label %24, label %26

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #11
  br label %32

26:                                               ; preds = %14
  %27 = load i32, i32* %23, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %23, align 4
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %30 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #11
  %31 = icmp eq %"class.blink::Document"* %29, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %24, %26
  %33 = phi i8* [ %25, %24 ], [ %30, %26 ]
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #11
  br label %42

34:                                               ; preds = %26
  %35 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %29) #11
  %36 = icmp eq %"class.blink::LocalFrame"* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #11
  br label %42

38:                                               ; preds = %34
  %39 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %29) #11
  %40 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %39) #11
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 19
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %41) #11
  br label %42

42:                                               ; preds = %32, %37, %38
  %43 = phi i8* [ %33, %32 ], [ %30, %37 ], [ %30, %38 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_115DoExecuteScriptEPNS_13PendingScriptERKNS_4KURLE(%"class.blink::PendingScript"* %1, %"class.blink::KURL"* nonnull dereferenceable(112) %3)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %43) #11
  %44 = icmp eq i32* %23, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = load i32, i32* %23, align 4
  %47 = add i32 %46, -1
  store i32 %47, i32* %23, align 4
  br label %48

48:                                               ; preds = %42, %45
  %49 = load i32, i32* %17, align 4
  %50 = add i32 %49, -1
  store i32 %50, i32* %17, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %16, i64 0, i32 1
  store i8 0, i8* %53, align 4
  br label %54

54:                                               ; preds = %48, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner21PendingScriptFinishedEPNS_13PendingScriptE(%"class.blink::HTMLParserScriptRunner"* nocapture, %"class.blink::PendingScript"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.167", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.blink::Persistent.787", align 8
  %8 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::PendingScript"* %1 to i1 (%"class.blink::PendingScript"*)***
  %15 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %15, i64 9
  %17 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::PendingScript"* %1) #11
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  tail call void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"* %1) #11
  %20 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5
  %21 = bitcast %"class.blink::Member.6"* %20 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  br label %99

22:                                               ; preds = %2, %13
  %23 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %24, i8 zeroext 65) #11
  %26 = bitcast %"class.base::SingleThreadTaskRunner"* %25 to %"class.base::TaskRunner"*
  %27 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 303) #11
  %28 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  store <2 x i64> <i64 25, i64 0>, <2 x i64>* %5, align 16
  %29 = bitcast %"class.blink::Persistent.787"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4, i32 0, i32 0
  %31 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Persistent.787", %"class.blink::Persistent.787"* %7, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::Persistent.787", %"class.blink::Persistent.787"* %7, i64 0, i32 0, i32 0
  store %"class.blink::HTMLParserScriptRunnerHost"* %31, %"class.blink::HTMLParserScriptRunnerHost"** %33, align 8, !alias.scope !12
  %34 = getelementptr inbounds %"class.blink::Persistent.787", %"class.blink::Persistent.787"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %34, align 8, !alias.scope !12
  %35 = ptrtoint %"class.blink::HTMLParserScriptRunnerHost"* %31 to i64
  switch i64 %35, label %36 [
    i64 0, label %62
    i64 -1, label %62
  ]

36:                                               ; preds = %22
  %37 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !12
  %38 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %37, i64 0, i32 1
  %39 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %38) #11, !noalias !12
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43, !prof !15

41:                                               ; preds = %36
  %42 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* %42) #11
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8* [ %42, %41 ], [ %39, %36 ]
  %45 = bitcast i8* %44 to %"class.blink::ThreadState"**
  %46 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %45, align 8, !noalias !12
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %47, align 8, !noalias !12
  %49 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8, !noalias !12
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %55, !prof !15

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %53) #11
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  br label %55

55:                                               ; preds = %52, %43
  %56 = phi %"class.blink::PersistentNode"* [ %54, %52 ], [ %50, %43 ]
  %57 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !12
  %59 = bitcast %"class.blink::PersistentRegion"* %48 to i64*
  store i64 %58, i64* %59, align 8, !noalias !12
  %60 = bitcast %"class.blink::PersistentNode"* %56 to %"class.blink::PersistentBase.788"**
  store %"class.blink::PersistentBase.788"* %32, %"class.blink::PersistentBase.788"** %60, align 8, !noalias !12
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26HTMLParserScriptRunnerHostELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  store %"class.blink::PersistentNode"* %56, %"class.blink::PersistentNode"** %34, align 8, !alias.scope !12
  br label %62

62:                                               ; preds = %22, %22, %55
  %63 = call i8* @_Znwm(i64 64) #12, !noalias !16
  %64 = bitcast i8* %63 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %64, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %6, %"class.blink::Persistent.787"* nonnull dereferenceable(16) %7) #11, !noalias !16
  %65 = bitcast %"class.base::OnceCallback.167"* %4 to i8**
  store i8* %63, i8** %65, align 8, !alias.scope !16
  %66 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %26, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.167"* nonnull %4) #11
  %67 = getelementptr inbounds %"class.base::OnceCallback.167", %"class.base::OnceCallback.167"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #11
  %68 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  %69 = icmp eq %"class.blink::PersistentNode"* %68, null
  br i1 %69, label %89, label %70

70:                                               ; preds = %62
  %71 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %72 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %71, i64 0, i32 1
  %73 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %72) #11
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %77, !prof !15

75:                                               ; preds = %70
  %76 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %72, i8* %76) #11
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i8* [ %76, %75 ], [ %73, %70 ]
  %79 = bitcast i8* %78 to %"class.blink::ThreadState"**
  %80 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %81, align 8
  %83 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  %84 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %82, i64 0, i32 0, i32 0
  %85 = bitcast %"class.blink::PersistentRegion"* %82 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.blink::PersistentNode"* %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %83, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %88, align 8
  store %"class.blink::PersistentNode"* %83, %"class.blink::PersistentNode"** %84, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %34, align 8
  br label %89

89:                                               ; preds = %62, %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  %90 = icmp eq %"class.base::SingleThreadTaskRunner"* %25, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %25, i64 0, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.base::RefCountedThreadSafe.159", %"class.base::RefCountedThreadSafe.159"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw sub i32* %93, i32 1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.base::RefCountedThreadSafe.159", %"class.base::RefCountedThreadSafe.159"* %92, i64 -2
  %98 = bitcast %"class.base::RefCountedThreadSafe.159"* %97 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %98) #11
  br label %99

99:                                               ; preds = %96, %91, %89, %19
  ret void
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.167"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner20ProcessScriptElementEPNS_7ElementERKN3WTF12TextPositionE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::Element"*, %"class.WTF::TextPosition"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::InsertionPointRecord", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %5, align 8
  %7 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %6 to i1 (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %8 = load i1 (%"class.blink::HTMLParserScriptRunnerHost"*)**, i1 (%"class.blink::HTMLParserScriptRunnerHost"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::HTMLParserScriptRunnerHost"*)*, i1 (%"class.blink::HTMLParserScriptRunnerHost"*)** %8, i64 5
  %10 = load i1 (%"class.blink::HTMLParserScriptRunnerHost"*)*, i1 (%"class.blink::HTMLParserScriptRunnerHost"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::HTMLParserScriptRunnerHost"* %6) #11
  tail call void @_ZN5blink22HTMLParserScriptRunner28ProcessScriptElementInternalEPNS_7ElementERKN3WTF12TextPositionE(%"class.blink::HTMLParserScriptRunner"* %0, %"class.blink::Element"* %1, %"class.WTF::TextPosition"* dereferenceable(8) %2)
  %12 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %12, align 8
  %14 = icmp eq %"class.blink::PendingScript"* %13, null
  br i1 %14, label %64, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %64

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = tail call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %23) #11
  %25 = xor i1 %24, true
  tail call fastcc void @_ZN5blink12_GLOBAL__N_125TraceParserBlockingScriptEPKNS_13PendingScriptEb(%"class.blink::PendingScript"* nonnull %13, i1 zeroext %25)
  %26 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %12, align 8
  tail call void @_ZN5blink13PendingScript31MarkParserBlockingLoadStartTimeEv(%"class.blink::PendingScript"* %26) #11
  br i1 %11, label %40, label %27

27:                                               ; preds = %21
  %28 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %5, align 8
  %29 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %28 to i1 (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %30 = load i1 (%"class.blink::HTMLParserScriptRunnerHost"*)**, i1 (%"class.blink::HTMLParserScriptRunnerHost"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::HTMLParserScriptRunnerHost"*)*, i1 (%"class.blink::HTMLParserScriptRunnerHost"*)** %30, i64 5
  %32 = load i1 (%"class.blink::HTMLParserScriptRunnerHost"*)*, i1 (%"class.blink::HTMLParserScriptRunnerHost"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::HTMLParserScriptRunnerHost"* %28) #11
  br i1 %33, label %34, label %40

34:                                               ; preds = %27
  %35 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %5, align 8
  %36 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %35 to void (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %37 = load void (%"class.blink::HTMLParserScriptRunnerHost"*)**, void (%"class.blink::HTMLParserScriptRunnerHost"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::HTMLParserScriptRunnerHost"*)*, void (%"class.blink::HTMLParserScriptRunnerHost"*)** %37, i64 6
  %39 = load void (%"class.blink::HTMLParserScriptRunnerHost"*)*, void (%"class.blink::HTMLParserScriptRunnerHost"*)** %38, align 8
  tail call void %39(%"class.blink::HTMLParserScriptRunnerHost"* %35) #11
  br label %40

40:                                               ; preds = %34, %27, %21
  %41 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %12, align 8
  %42 = icmp eq %"class.blink::PendingScript"* %41, null
  br i1 %42, label %64, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.blink::InsertionPointRecord"* %4 to i8*
  br label %45

45:                                               ; preds = %55, %43
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %47 = call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %46) #11
  br i1 %47, label %48, label %64

48:                                               ; preds = %45
  %49 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %12, align 8
  %50 = bitcast %"class.blink::PendingScript"* %49 to i1 (%"class.blink::PendingScript"*)***
  %51 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %51, i64 7
  %53 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.blink::PendingScript"* %49) #11
  br i1 %54, label %55, label %64

55:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 104, i1 false) #11
  %56 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %5, align 8
  %57 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %56 to %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %58 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)**, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %58, i64 4
  %60 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %59, align 8
  %61 = call dereferenceable(96) %"class.blink::HTMLInputStream"* %60(%"class.blink::HTMLParserScriptRunnerHost"* %56) #11
  call void @_ZN5blink20InsertionPointRecordC2ERNS_15HTMLInputStreamE(%"class.blink::InsertionPointRecord"* nonnull %4, %"class.blink::HTMLInputStream"* dereferenceable(96) %61) #11
  call void @_ZN5blink22HTMLParserScriptRunner50ExecutePendingParserBlockingScriptAndDispatchEventEv(%"class.blink::HTMLParserScriptRunner"* %0) #11
  call void @_ZN5blink20InsertionPointRecordD2Ev(%"class.blink::InsertionPointRecord"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %44) #11
  %62 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %12, align 8
  %63 = icmp eq %"class.blink::PendingScript"* %62, null
  br i1 %63, label %64, label %45

64:                                               ; preds = %55, %48, %45, %15, %3, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner28ProcessScriptElementInternalEPNS_7ElementERKN3WTF12TextPositionE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::Element"*, %"class.WTF::TextPosition"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.799", align 8
  %5 = alloca %"class.blink::InsertionPointRecord", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = tail call %"class.blink::ScriptLoader"* @_ZN5blink23ScriptLoaderFromElementEPNS_7ElementE(%"class.blink::Element"* %1) #11
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %28, label %12, !prof !8

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::unique_ptr.799"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #11
  %17 = tail call fastcc %"class.blink::TracedValue"* @_ZN5blink12_GLOBAL__N_128GetTraceArgsForScriptElementERNS_8DocumentERKN3WTF12TextPositionERKNS_4KURLE(%"class.blink::Document"* dereferenceable(2848) %15, %"class.WTF::TextPosition"* dereferenceable(8) %2, %"class.blink::KURL"* dereferenceable(112) %16)
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.799", %"class.std::__1::unique_ptr.799"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::TracedValue"* %17, %"class.blink::TracedValue"** %18, align 8
  %19 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::unique_ptr.799"* nonnull dereferenceable(8) %4)
  %20 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %18, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %18, align 8
  %21 = icmp eq %"class.blink::TracedValue"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::TracedValue"* %20 to void (%"class.blink::TracedValue"*)***
  %24 = load void (%"class.blink::TracedValue"*)**, void (%"class.blink::TracedValue"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %24, i64 1
  %26 = load void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %25, align 8
  call void %26(%"class.blink::TracedValue"* nonnull %20) #11
  br label %27

27:                                               ; preds = %12, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %28

28:                                               ; preds = %3, %27
  %29 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), %27 ]
  %30 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %27 ]
  %31 = phi i64 [ -6148914691236517206, %3 ], [ %19, %27 ]
  %32 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #11
  call void @_ZN5blink9Microtask17PerformCheckpointEPN2v87IsolateE(%"class.v8::Isolate"* %38) #11
  br label %39

39:                                               ; preds = %28, %37
  %40 = bitcast %"class.blink::InsertionPointRecord"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 104, i1 false)
  %41 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4, i32 0, i32 0
  %42 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %41, align 8
  %43 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %42 to %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %44 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)**, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %44, i64 4
  %46 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %45, align 8
  %47 = call dereferenceable(96) %"class.blink::HTMLInputStream"* %46(%"class.blink::HTMLParserScriptRunnerHost"* %42) #11
  call void @_ZN5blink20InsertionPointRecordC2ERNS_15HTMLInputStreamE(%"class.blink::InsertionPointRecord"* nonnull %5, %"class.blink::HTMLInputStream"* dereferenceable(96) %47)
  %48 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %32, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !23
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 4, !noalias !23
  %52 = call zeroext i1 @_ZN5blink12ScriptLoader13PrepareScriptERKN3WTF12TextPositionENS0_17LegacyTypeSupportE(%"class.blink::ScriptLoader"* %8, %"class.WTF::TextPosition"* dereferenceable(8) %2, i32 0) #11
  %53 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %8, i64 0, i32 11
  %54 = load i8, i8* %53, align 1, !range !26
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %147, label %56

56:                                               ; preds = %39
  %57 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %8, i64 0, i32 12
  %58 = load i8, i8* %57, align 2, !range !26
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %101, label %60

60:                                               ; preds = %56
  %61 = call %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader17TakePendingScriptENS_20ScriptSchedulingTypeE(%"class.blink::ScriptLoader"* %8, i32 1) #11
  %62 = ptrtoint %"class.blink::PendingScript"* %61 to i64
  %63 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0
  %64 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %72, label %69

69:                                               ; preds = %60
  %70 = add i32 %68, 1
  %71 = icmp eq i32 %70, %65
  br i1 %71, label %81, label %83

72:                                               ; preds = %60
  %73 = icmp eq i32 %68, 0
  %74 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  br i1 %73, label %79, label %76

76:                                               ; preds = %72
  %77 = add i32 %75, -1
  %78 = icmp eq i32 %68, %77
  br i1 %78, label %81, label %83

79:                                               ; preds = %72
  %80 = icmp eq i32 %75, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %79, %76, %69
  call void @_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %63) #11
  %82 = load i32, i32* %67, align 4
  br label %83

83:                                               ; preds = %81, %79, %76, %69
  %84 = phi i32 [ %68, %69 ], [ %68, %76 ], [ 0, %79 ], [ %82, %81 ]
  %85 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %85, align 8
  %87 = zext i32 %84 to i64
  %88 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %86, i64 %87
  %89 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, -1
  %92 = icmp eq i32 %84, %91
  %93 = add i32 %84, 1
  %94 = select i1 %92, i32 0, i32 %93
  store i32 %94, i32* %67, align 4
  %95 = bitcast %"class.blink::Member.6"* %88 to i64*
  store atomic i64 %62, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %147, label %98

98:                                               ; preds = %83
  %99 = bitcast %"class.blink::PendingScript"* %61 to i8*
  %100 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #11
  br label %147

101:                                              ; preds = %56
  %102 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %8, i64 0, i32 8
  %103 = load i8, i8* %102, align 1, !range !26
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %146, label %105

105:                                              ; preds = %101
  %106 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %32, align 8
  %107 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 1
  %110 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5
  %111 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %111, align 8
  %113 = icmp ne %"class.blink::PendingScript"* %112, null
  br i1 %109, label %114, label %127

114:                                              ; preds = %105
  br i1 %113, label %115, label %118

115:                                              ; preds = %114
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 577, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #11
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  br label %118

118:                                              ; preds = %114, %115
  %119 = call %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader17TakePendingScriptENS_20ScriptSchedulingTypeE(%"class.blink::ScriptLoader"* %8, i32 3) #11
  %120 = ptrtoint %"class.blink::PendingScript"* %119 to i64
  %121 = bitcast %"class.blink::Member.6"* %110 to i64*
  store atomic i64 %120, i64* %121 monotonic, align 8
  %122 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %147, label %124

124:                                              ; preds = %118
  %125 = bitcast %"class.blink::PendingScript"* %119 to i8*
  %126 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %125) #11
  br label %147

127:                                              ; preds = %105
  br i1 %113, label %128, label %129

128:                                              ; preds = %127
  call void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"* nonnull %112) #11
  br label %129

129:                                              ; preds = %128, %127
  %130 = bitcast %"class.blink::Member.6"* %110 to i64*
  store atomic i64 0, i64* %130 monotonic, align 8
  %131 = call %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader17TakePendingScriptENS_20ScriptSchedulingTypeE(%"class.blink::ScriptLoader"* %8, i32 6) #11
  %132 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %132) #11
  %133 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::Document"*, %"class.blink::Document"** %133, align 8
  %135 = icmp eq %"class.blink::Document"* %134, null
  br i1 %135, label %136, label %137

136:                                              ; preds = %129
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #11
  br label %145

137:                                              ; preds = %129
  %138 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %134) #11
  %139 = icmp eq %"class.blink::LocalFrame"* %138, null
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #11
  br label %145

141:                                              ; preds = %137
  %142 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %134) #11
  %143 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %142) #11
  %144 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %143, i64 0, i32 19
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %7, %"class.blink::KURL"* dereferenceable(112) %144) #11
  br label %145

145:                                              ; preds = %136, %140, %141
  call fastcc void @_ZN5blink12_GLOBAL__N_115DoExecuteScriptEPNS_13PendingScriptERKNS_4KURLE(%"class.blink::PendingScript"* %131, %"class.blink::KURL"* nonnull dereferenceable(112) %7)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %132) #11
  br label %147

146:                                              ; preds = %101
  call void @_ZN5blink22HTMLParserScriptRunner28RequestParsingBlockingScriptEPNS_12ScriptLoaderE(%"class.blink::HTMLParserScriptRunner"* %0, %"class.blink::ScriptLoader"* %8)
  br label %147

147:                                              ; preds = %39, %124, %118, %98, %83, %145, %146
  %148 = load i32, i32* %49, align 4
  %149 = add i32 %148, -1
  store i32 %149, i32* %49, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %48, i64 0, i32 1
  store i8 0, i8* %152, align 4
  br label %153

153:                                              ; preds = %147, %151
  call void @_ZN5blink20InsertionPointRecordD2Ev(%"class.blink::InsertionPointRecord"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %40) #11
  %154 = icmp eq i8* %30, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %153
  %156 = load i8, i8* %30, align 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %159, label %158

158:                                              ; preds = %155
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %30, i8* %29, i64 %31) #11
  br label %159

159:                                              ; preds = %153, %155, %158
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %2, align 8
  %4 = icmp ne %"class.blink::PendingScript"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_125TraceParserBlockingScriptEPKNS_13PendingScriptEb(%"class.blink::PendingScript"*, i1 zeroext) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.std::__1::unique_ptr.799", align 8
  %10 = alloca %"class.std::__1::unique_ptr.799", align 8
  %11 = alloca %"class.std::__1::unique_ptr.799", align 8
  %12 = tail call %"class.blink::ScriptElementBase"* @_ZNK5blink13PendingScript10GetElementEv(%"class.blink::PendingScript"* %0) #11
  %13 = icmp eq %"class.blink::ScriptElementBase"* %12, null
  br i1 %13, label %130, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::PendingScript"* %0 to i1 (%"class.blink::PendingScript"*)***
  %16 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %16, i64 7
  %18 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::PendingScript"* %0) #11
  br i1 %19, label %92, label %20

20:                                               ; preds = %14
  %21 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %22 = and i8 %21, 25
  %23 = icmp eq i8 %22, 0
  br i1 %1, label %24, label %58

24:                                               ; preds = %20
  br i1 %23, label %130, label %25, !prof !8

25:                                               ; preds = %24
  %26 = ptrtoint %"class.blink::ScriptElementBase"* %12 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.799"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = bitcast i64* %5 to %"class.WTF::TextPosition"*
  %29 = tail call %"class.blink::ScriptElementBase"* @_ZNK5blink13PendingScript10GetElementEv(%"class.blink::PendingScript"* %0) #11
  %30 = bitcast %"class.blink::ScriptElementBase"* %29 to %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)***
  %31 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %31, i64 22
  %33 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %32, align 8
  %34 = tail call dereferenceable(2848) %"class.blink::Document"* %33(%"class.blink::ScriptElementBase"* %29) #11
  %35 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %0, i64 0, i32 2
  %37 = bitcast %"class.WTF::TextPosition"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %5, align 8
  %39 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %39) #11
  %40 = bitcast %"class.blink::PendingScript"* %0 to void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)***
  %41 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)**, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %41, i64 10
  %43 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %42, align 8
  call void %43(%"class.blink::KURL"* nonnull sret %6, %"class.blink::PendingScript"* %0) #11
  %44 = call fastcc %"class.blink::TracedValue"* @_ZN5blink12_GLOBAL__N_128GetTraceArgsForScriptElementERNS_8DocumentERKN3WTF12TextPositionERKNS_4KURLE(%"class.blink::Document"* dereferenceable(2848) %34, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %28, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.799", %"class.std::__1::unique_ptr.799"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::TracedValue"* %44, %"class.blink::TracedValue"** %45, align 8
  %46 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i32 2304, i64 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::unique_ptr.799"* nonnull dereferenceable(8) %9)
  %47 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %45, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %45, align 8
  %48 = icmp eq %"class.blink::TracedValue"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %25
  %50 = bitcast %"class.blink::TracedValue"* %47 to void (%"class.blink::TracedValue"*)***
  %51 = load void (%"class.blink::TracedValue"*)**, void (%"class.blink::TracedValue"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %51, i64 1
  %53 = load void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %52, align 8
  call void %53(%"class.blink::TracedValue"* nonnull %47) #11
  br label %54

54:                                               ; preds = %25, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %55 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %130, label %57

57:                                               ; preds = %54
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i64 %46) #11
  br label %130

58:                                               ; preds = %20
  br i1 %23, label %130, label %59, !prof !8

59:                                               ; preds = %58
  %60 = ptrtoint %"class.blink::ScriptElementBase"* %12 to i64
  %61 = bitcast %"class.std::__1::unique_ptr.799"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #11
  %62 = bitcast i64* %3 to %"class.WTF::TextPosition"*
  %63 = tail call %"class.blink::ScriptElementBase"* @_ZNK5blink13PendingScript10GetElementEv(%"class.blink::PendingScript"* %0) #11
  %64 = bitcast %"class.blink::ScriptElementBase"* %63 to %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)***
  %65 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %65, i64 22
  %67 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %66, align 8
  %68 = tail call dereferenceable(2848) %"class.blink::Document"* %67(%"class.blink::ScriptElementBase"* %63) #11
  %69 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  %70 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %0, i64 0, i32 2
  %71 = bitcast %"class.WTF::TextPosition"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %3, align 8
  %73 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %73) #11
  %74 = bitcast %"class.blink::PendingScript"* %0 to void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)***
  %75 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)**, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %75, i64 10
  %77 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %76, align 8
  call void %77(%"class.blink::KURL"* nonnull sret %4, %"class.blink::PendingScript"* %0) #11
  %78 = call fastcc %"class.blink::TracedValue"* @_ZN5blink12_GLOBAL__N_128GetTraceArgsForScriptElementERNS_8DocumentERKN3WTF12TextPositionERKNS_4KURLE(%"class.blink::Document"* dereferenceable(2848) %68, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %62, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.799", %"class.std::__1::unique_ptr.799"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::TracedValue"* %78, %"class.blink::TracedValue"** %79, align 8
  %80 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i8* null, i64 0, i32 2304, i64 %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::unique_ptr.799"* nonnull dereferenceable(8) %10)
  %81 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %79, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %79, align 8
  %82 = icmp eq %"class.blink::TracedValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %59
  %84 = bitcast %"class.blink::TracedValue"* %81 to void (%"class.blink::TracedValue"*)***
  %85 = load void (%"class.blink::TracedValue"*)**, void (%"class.blink::TracedValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %85, i64 1
  %87 = load void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %86, align 8
  call void %87(%"class.blink::TracedValue"* nonnull %81) #11
  br label %88

88:                                               ; preds = %59, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #11
  %89 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %130, label %91

91:                                               ; preds = %88
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i64 %80) #11
  br label %130

92:                                               ; preds = %14
  br i1 %1, label %93, label %130

93:                                               ; preds = %92
  %94 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %95 = and i8 %94, 25
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %130, label %97, !prof !8

97:                                               ; preds = %93
  %98 = ptrtoint %"class.blink::ScriptElementBase"* %12 to i64
  %99 = bitcast %"class.std::__1::unique_ptr.799"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #11
  %100 = bitcast i64* %7 to %"class.WTF::TextPosition"*
  %101 = tail call %"class.blink::ScriptElementBase"* @_ZNK5blink13PendingScript10GetElementEv(%"class.blink::PendingScript"* %0) #11
  %102 = bitcast %"class.blink::ScriptElementBase"* %101 to %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)***
  %103 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*** %102, align 8
  %104 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %103, i64 22
  %105 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %104, align 8
  %106 = tail call dereferenceable(2848) %"class.blink::Document"* %105(%"class.blink::ScriptElementBase"* %101) #11
  %107 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #11
  %108 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %0, i64 0, i32 2
  %109 = bitcast %"class.WTF::TextPosition"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %7, align 8
  %111 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %111) #11
  %112 = bitcast %"class.blink::PendingScript"* %0 to void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)***
  %113 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)**, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %113, i64 10
  %115 = load void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)*, void (%"class.blink::KURL"*, %"class.blink::PendingScript"*)** %114, align 8
  call void %115(%"class.blink::KURL"* nonnull sret %8, %"class.blink::PendingScript"* %0) #11
  %116 = call fastcc %"class.blink::TracedValue"* @_ZN5blink12_GLOBAL__N_128GetTraceArgsForScriptElementERNS_8DocumentERKN3WTF12TextPositionERKNS_4KURLE(%"class.blink::Document"* dereferenceable(2848) %106, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %100, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %111) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #11
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.799", %"class.std::__1::unique_ptr.799"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::TracedValue"* %116, %"class.blink::TracedValue"** %117, align 8
  %118 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i8* null, i64 0, i32 2304, i64 %98, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::unique_ptr.799"* nonnull dereferenceable(8) %11)
  %119 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %117, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %117, align 8
  %120 = icmp eq %"class.blink::TracedValue"* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %97
  %122 = bitcast %"class.blink::TracedValue"* %119 to void (%"class.blink::TracedValue"*)***
  %123 = load void (%"class.blink::TracedValue"*)**, void (%"class.blink::TracedValue"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %123, i64 1
  %125 = load void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %124, align 8
  call void %125(%"class.blink::TracedValue"* nonnull %119) #11
  br label %126

126:                                              ; preds = %97, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #11
  %127 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %126
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i64 %118) #11
  br label %130

130:                                              ; preds = %93, %58, %24, %129, %126, %91, %88, %57, %54, %92, %2
  ret void
}

declare void @_ZN5blink13PendingScript31MarkParserBlockingLoadStartTimeEv(%"class.blink::PendingScript"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner29ExecuteParsingBlockingScriptsEv(%"class.blink::HTMLParserScriptRunner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::InsertionPointRecord", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %3, align 8
  %5 = icmp eq %"class.blink::PendingScript"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast %"class.blink::InsertionPointRecord"* %2 to i8*
  %9 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4, i32 0, i32 0
  br label %10

10:                                               ; preds = %6, %20
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %12 = call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %11) #11
  br i1 %12, label %13, label %29

13:                                               ; preds = %10
  %14 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %3, align 8
  %15 = bitcast %"class.blink::PendingScript"* %14 to i1 (%"class.blink::PendingScript"*)***
  %16 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %16, i64 7
  %18 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blink::PendingScript"* %14) #11
  br i1 %19, label %20, label %29

20:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 104, i1 false)
  %21 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %9, align 8
  %22 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %21 to %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %23 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)**, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %23, i64 4
  %25 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %24, align 8
  %26 = call dereferenceable(96) %"class.blink::HTMLInputStream"* %25(%"class.blink::HTMLParserScriptRunnerHost"* %21) #11
  call void @_ZN5blink20InsertionPointRecordC2ERNS_15HTMLInputStreamE(%"class.blink::InsertionPointRecord"* nonnull %2, %"class.blink::HTMLInputStream"* dereferenceable(96) %26)
  call void @_ZN5blink22HTMLParserScriptRunner50ExecutePendingParserBlockingScriptAndDispatchEventEv(%"class.blink::HTMLParserScriptRunner"* %0)
  call void @_ZN5blink20InsertionPointRecordD2Ev(%"class.blink::InsertionPointRecord"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %8) #11
  %27 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %3, align 8
  %28 = icmp eq %"class.blink::PendingScript"* %27, null
  br i1 %28, label %29, label %10

29:                                               ; preds = %13, %10, %20, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20InsertionPointRecordC2ERNS_15HTMLInputStreamE(%"class.blink::InsertionPointRecord"*, %"class.blink::HTMLInputStream"* dereferenceable(96)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Deque.790", align 8
  %4 = alloca %"class.blink::SegmentedString", align 8
  %5 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 0
  store %"class.blink::HTMLInputStream"* %1, %"class.blink::HTMLInputStream"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 0, i32 3
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 0, i32 4
  %9 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  store i8 1, i8* %8, align 1
  %10 = bitcast %"class.blink::SegmentedString"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5
  %15 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 7
  %16 = bitcast %"class.WTF::Deque.790"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #11
  store i8 1, i8* %15, align 1
  %17 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %1, i64 0, i32 0
  %18 = tail call i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"* %17) #11
  %19 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 2, i32 0
  store i32 %18, i32* %19, align 8
  %20 = load %"class.blink::HTMLInputStream"*, %"class.blink::HTMLInputStream"** %5, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %20, i64 0, i32 0
  %22 = tail call i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"* %21) #11
  %23 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 3, i32 0
  store i32 %22, i32* %23, align 4
  %24 = load %"class.blink::HTMLInputStream"*, %"class.blink::HTMLInputStream"** %5, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0
  %26 = bitcast %"class.blink::HTMLInputStream"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %26, i64 26, i1 false) #11
  %27 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 0, i32 5
  %28 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #11
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !15

45:                                               ; preds = %36
  tail call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %2
  %49 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %50 = bitcast %"class.WTF::String"* %27 to i64*
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %49, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #11
  br label %67

67:                                               ; preds = %48, %63, %66
  %68 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 1
  %69 = bitcast i32* %11 to i8*
  %70 = bitcast i32* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 12, i1 false) #11
  %71 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 5
  %72 = bitcast %"class.WTF::Deque.790"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %76 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %3, i64 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false) #11
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Deque.790"* nonnull %3, %"class.WTF::Deque.790"* dereferenceable(24) %71) #11
  %78 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp ugt i32 %79, %81
  %83 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 1
  br i1 %82, label %86, label %84

84:                                               ; preds = %67
  %85 = load i32, i32* %83, align 4
  br label %88

86:                                               ; preds = %67
  %87 = load i32, i32* %83, align 8
  br label %88

88:                                               ; preds = %86, %84
  %89 = phi i32 [ %87, %86 ], [ %85, %84 ]
  %90 = phi i32 [ %87, %86 ], [ %81, %84 ]
  %91 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %76, align 8
  %93 = load i32, i32* %77, align 4
  %94 = icmp ugt i32 %92, %93
  %95 = load i32, i32* %74, align 8
  %96 = select i1 %94, i32 %95, i32 %93
  %97 = bitcast %"class.WTF::Deque.790"* %3 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.WTF::Deque.790"* %14 to i64*
  %100 = load i64, i64* %99, align 8
  store atomic i64 %100, i64* %97 monotonic, align 8
  store atomic i64 %98, i64* %99 monotonic, align 8
  store i32 %95, i32* %83, align 4
  store i32 %89, i32* %74, align 8
  store i32 %96, i32* %91, align 4
  store i32 %90, i32* %75, align 4
  store i32 %92, i32* %78, align 4
  store i32 %79, i32* %76, align 8
  store i32 %93, i32* %80, align 4
  store i32 %81, i32* %77, align 4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %88
  %103 = inttoptr i64 %100 to i8*
  %104 = icmp eq i32 %79, %81
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.790"* nonnull %3) #11
  %106 = bitcast %"class.WTF::Deque.790"* %3 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %105, %102
  %109 = phi i8* [ %107, %105 ], [ %103, %102 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %109) #11
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %73, align 8
  br label %110

110:                                              ; preds = %88, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  %111 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 6
  %112 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 6
  %113 = bitcast i8* %112 to i16*
  %114 = bitcast i8* %111 to i16*
  %115 = load i16, i16* %113, align 8
  store i16 %115, i16* %114, align 8
  %116 = bitcast %"class.blink::SegmentedString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 0, i32 3
  store i8 1, i8* %117, align 8
  %118 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 0, i32 4
  %119 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  store i8 1, i8* %118, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 0, i64 24, i1 false) #11
  %120 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 1
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 2
  store i32 0, i32* %121, align 4
  %122 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 3
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 5
  %124 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 7
  %125 = bitcast %"class.WTF::Deque.790"* %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 25, i1 false) #11
  store i8 1, i8* %124, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %116, i64 26, i1 false) #11
  %126 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 0, i32 5
  %127 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 0, i32 5
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = bitcast %"class.WTF::String"* %127 to i64*
  %130 = load i64, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %128, align 8
  %131 = bitcast %"class.WTF::String"* %126 to i64*
  %132 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  store i64 %130, i64* %131, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %110
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #11
  br label %148

148:                                              ; preds = %147, %144, %110
  %149 = bitcast i32* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %149, i64 12, i1 false) #11
  %150 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 5, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 5, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = icmp ugt i32 %151, %153
  br i1 %154, label %155, label %158

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %157 = load i32, i32* %156, align 8
  br label %158

158:                                              ; preds = %148, %155
  %159 = phi i32 [ %157, %155 ], [ %153, %148 ]
  %160 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 2
  store i32 %159, i32* %160, align 4
  %161 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 5, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 5, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = icmp ugt i32 %162, %164
  %166 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = select i1 %165, i32 %167, i32 %164
  %169 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  store i32 %168, i32* %169, align 4
  %170 = bitcast %"class.WTF::Deque.790"* %123 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast %"class.WTF::Deque.790"* %71 to i64*
  %173 = load i64, i64* %172, align 8
  store atomic i64 %173, i64* %170 monotonic, align 8
  store atomic i64 %171, i64* %172 monotonic, align 8
  %174 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* %166, align 8
  store i32 %176, i32* %174, align 4
  store i32 %175, i32* %166, align 8
  %177 = load i32, i32* %160, align 4
  %178 = load i32, i32* %169, align 4
  store i32 %178, i32* %160, align 4
  store i32 %177, i32* %169, align 4
  %179 = load i32, i32* %161, align 8
  store i32 %179, i32* %150, align 4
  store i32 %151, i32* %161, align 8
  %180 = load i32, i32* %163, align 4
  store i32 %180, i32* %152, align 4
  store i32 %153, i32* %163, align 4
  %181 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %4, i64 0, i32 6
  %182 = bitcast i8* %181 to i16*
  %183 = load i16, i16* %182, align 8
  store i16 %183, i16* %113, align 8
  %184 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %184, align 8
  %186 = icmp eq %"class.blink::SegmentedSubstring"* %185, null
  br i1 %186, label %195, label %187

187:                                              ; preds = %158
  %188 = bitcast %"class.blink::SegmentedSubstring"* %185 to i8*
  %189 = icmp eq i32 %151, %153
  br i1 %189, label %193, label %190

190:                                              ; preds = %187
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.790"* %123) #11
  %191 = bitcast %"class.WTF::Deque.790"* %123 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %190, %187
  %194 = phi i8* [ %192, %190 ], [ %188, %187 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %194) #11
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %184, align 8
  br label %195

195:                                              ; preds = %193, %158
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #11
  br label %211

211:                                              ; preds = %195, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %116) #11
  %212 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %24, i64 0, i32 1
  %213 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %212, align 8
  %214 = icmp eq %"class.blink::SegmentedString"* %213, %25
  br i1 %214, label %215, label %216

215:                                              ; preds = %211
  store %"class.blink::SegmentedString"* %6, %"class.blink::SegmentedString"** %212, align 8
  br label %216

216:                                              ; preds = %211, %215
  %217 = load %"class.blink::HTMLInputStream"*, %"class.blink::HTMLInputStream"** %5, align 8
  %218 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %217, i64 0, i32 0
  %219 = load i32, i32* %19, align 8
  %220 = load i32, i32* %23, align 4
  call void @_ZN5blink15SegmentedString18SetCurrentPositionEN3WTF13OrdinalNumberES2_i(%"class.blink::SegmentedString"* %218, i32 %219, i32 %220, i32 0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20InsertionPointRecordD2Ev(%"class.blink::InsertionPointRecord"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 0
  %3 = load %"class.blink::HTMLInputStream"*, %"class.blink::HTMLInputStream"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %3, i64 0, i32 0
  %5 = tail call i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"* %4) #11
  %6 = load %"class.blink::HTMLInputStream"*, %"class.blink::HTMLInputStream"** %2, align 8
  %7 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %6, i64 0, i32 0
  tail call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %8, %"class.blink::SegmentedString"* dereferenceable(88) %7) #11
  %9 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %6, i64 0, i32 1
  %10 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %9, align 8
  %11 = icmp eq %"class.blink::SegmentedString"* %10, %7
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  store %"class.blink::SegmentedString"* %8, %"class.blink::SegmentedString"** %9, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 6
  %15 = load i8, i8* %14, align 8, !range !26
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZN5blink15SegmentedString5CloseEv(%"class.blink::SegmentedString"* %8) #11
  br label %18

18:                                               ; preds = %13, %17
  %19 = load %"class.blink::HTMLInputStream"*, %"class.blink::HTMLInputStream"** %2, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 2, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 4
  tail call void @_ZN5blink15SegmentedString18SetCurrentPositionEN3WTF13OrdinalNumberES2_i(%"class.blink::SegmentedString"* %20, i32 %22, i32 %24, i32 %5) #11
  %25 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5
  %26 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %26, align 8
  %28 = icmp eq %"class.blink::SegmentedSubstring"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %18
  %30 = bitcast %"class.blink::SegmentedSubstring"* %27 to i8*
  %31 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 5, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  tail call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.790"* %25) #11
  %37 = bitcast %"class.WTF::Deque.790"* %25 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %29
  %40 = phi i8* [ %38, %36 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #11
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %26, align 8
  br label %41

41:                                               ; preds = %39, %18
  %42 = getelementptr inbounds %"class.blink::InsertionPointRecord", %"class.blink::InsertionPointRecord"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %58

58:                                               ; preds = %41, %54, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner28ExecuteScriptsWaitingForLoadEv(%"class.blink::HTMLParserScriptRunner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::InsertionPointRecord", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !8

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %17, align 8
  %19 = icmp eq %"class.blink::PendingScript"* %18, null
  br i1 %19, label %43, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = bitcast %"class.blink::InsertionPointRecord"* %2 to i8*
  %23 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4, i32 0, i32 0
  br label %24

24:                                               ; preds = %34, %20
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %26 = call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %25) #11
  br i1 %26, label %27, label %43

27:                                               ; preds = %24
  %28 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %17, align 8
  %29 = bitcast %"class.blink::PendingScript"* %28 to i1 (%"class.blink::PendingScript"*)***
  %30 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %30, i64 7
  %32 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::PendingScript"* %28) #11
  br i1 %33, label %34, label %43

34:                                               ; preds = %27
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 104, i1 false) #11
  %35 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %23, align 8
  %36 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %35 to %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %37 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)**, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %37, i64 4
  %39 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %38, align 8
  %40 = call dereferenceable(96) %"class.blink::HTMLInputStream"* %39(%"class.blink::HTMLParserScriptRunnerHost"* %35) #11
  call void @_ZN5blink20InsertionPointRecordC2ERNS_15HTMLInputStreamE(%"class.blink::InsertionPointRecord"* nonnull %2, %"class.blink::HTMLInputStream"* dereferenceable(96) %40) #11
  call void @_ZN5blink22HTMLParserScriptRunner50ExecutePendingParserBlockingScriptAndDispatchEventEv(%"class.blink::HTMLParserScriptRunner"* %0) #11
  call void @_ZN5blink20InsertionPointRecordD2Ev(%"class.blink::InsertionPointRecord"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %22) #11
  %41 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %17, align 8
  %42 = icmp eq %"class.blink::PendingScript"* %41, null
  br i1 %42, label %43, label %24

43:                                               ; preds = %24, %27, %34, %13
  %44 = icmp eq i8* %16, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = load i8, i8* %16, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #11
  br label %49

49:                                               ; preds = %43, %45, %48
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner33ExecuteScriptsWaitingForResourcesEv(%"class.blink::HTMLParserScriptRunner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::InsertionPointRecord", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !8

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %17, align 8
  %19 = icmp eq %"class.blink::PendingScript"* %18, null
  br i1 %19, label %43, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = bitcast %"class.blink::InsertionPointRecord"* %2 to i8*
  %23 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4, i32 0, i32 0
  br label %24

24:                                               ; preds = %34, %20
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %26 = call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %25) #11
  br i1 %26, label %27, label %43

27:                                               ; preds = %24
  %28 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %17, align 8
  %29 = bitcast %"class.blink::PendingScript"* %28 to i1 (%"class.blink::PendingScript"*)***
  %30 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %30, i64 7
  %32 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::PendingScript"* %28) #11
  br i1 %33, label %34, label %43

34:                                               ; preds = %27
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 104, i1 false) #11
  %35 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %23, align 8
  %36 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %35 to %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)***
  %37 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)**, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %37, i64 4
  %39 = load %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)*, %"class.blink::HTMLInputStream"* (%"class.blink::HTMLParserScriptRunnerHost"*)** %38, align 8
  %40 = call dereferenceable(96) %"class.blink::HTMLInputStream"* %39(%"class.blink::HTMLParserScriptRunnerHost"* %35) #11
  call void @_ZN5blink20InsertionPointRecordC2ERNS_15HTMLInputStreamE(%"class.blink::InsertionPointRecord"* nonnull %2, %"class.blink::HTMLInputStream"* dereferenceable(96) %40) #11
  call void @_ZN5blink22HTMLParserScriptRunner50ExecutePendingParserBlockingScriptAndDispatchEventEv(%"class.blink::HTMLParserScriptRunner"* %0) #11
  call void @_ZN5blink20InsertionPointRecordD2Ev(%"class.blink::InsertionPointRecord"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %22) #11
  %41 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %17, align 8
  %42 = icmp eq %"class.blink::PendingScript"* %41, null
  br i1 %42, label %43, label %24

43:                                               ; preds = %24, %27, %34, %13
  %44 = icmp eq i8* %16, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = load i8, i8* %16, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #11
  br label %49

49:                                               ; preds = %43, %45, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PendingScript"* @_ZN5blink22HTMLParserScriptRunner35TryTakeReadyScriptWaitingForParsingEPNS_9HeapDequeINS_6MemberINS_13PendingScriptEEEEE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::HeapDeque"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %4, i64 %7, i32 0, i32 0
  %9 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %8, align 8
  %10 = bitcast %"class.blink::PendingScript"* %9 to i1 (%"class.blink::PendingScript"*)***
  %11 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %11, i64 7
  %13 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::PendingScript"* %9) #11
  %15 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %3, align 8
  %16 = load i32, i32* %5, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %15, i64 %17
  %19 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %19, align 8
  br i1 %14, label %41, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 0
  %23 = bitcast %"class.blink::PendingScript"* %20 to void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)***
  %24 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)**, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %24, i64 3
  %26 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %25, align 8
  tail call void %26(%"class.blink::PendingScript"* %20, %"class.blink::PendingScriptClient"* %22) #11
  %27 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %3, align 8
  %28 = load i32, i32* %5, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %27, i64 %29, i32 0, i32 0
  %31 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = tail call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %33) #11
  %35 = xor i1 %34, true
  tail call fastcc void @_ZN5blink12_GLOBAL__N_125TraceParserBlockingScriptEPKNS_13PendingScriptEb(%"class.blink::PendingScript"* %31, i1 zeroext %35)
  %36 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %3, align 8
  %37 = load i32, i32* %5, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %36, i64 %38, i32 0, i32 0
  %40 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %39, align 8
  tail call void @_ZN5blink13PendingScript31MarkParserBlockingLoadStartTimeEv(%"class.blink::PendingScript"* %40) #11
  br label %56

41:                                               ; preds = %2
  %42 = add i32 %16, 1
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %15, i64 %43
  %45 = bitcast %"class.blink::Member.6"* %18 to i8*
  %46 = ptrtoint %"class.blink::Member.6"* %44 to i64
  %47 = ptrtoint %"class.blink::Member.6"* %18 to i64
  %48 = sub i64 %46, %47
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %45, i64 %48) #11, !noalias !27
  %49 = load i32, i32* %5, align 8, !noalias !27
  %50 = getelementptr inbounds %"class.blink::HeapDeque", %"class.blink::HeapDeque"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8, !noalias !27
  %52 = add i32 %51, -1
  %53 = icmp eq i32 %49, %52
  %54 = add i32 %49, 1
  %55 = select i1 %53, i32 0, i32 %54
  store i32 %55, i32* %5, align 8, !noalias !27
  br label %56

56:                                               ; preds = %41, %21
  %57 = phi %"class.blink::PendingScript"* [ %20, %41 ], [ null, %21 ]
  ret %"class.blink::PendingScript"* %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22HTMLParserScriptRunner31ExecuteScriptsWaitingForParsingEv(%"class.blink::HTMLParserScriptRunner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !8

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.4, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 2
  %19 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3, i32 0, i32 0
  br label %20

20:                                               ; preds = %27, %12
  %21 = load i32, i32* %17, align 8
  %22 = load i32, i32* %18, align 4
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = call %"class.blink::PendingScript"* @_ZN5blink22HTMLParserScriptRunner35TryTakeReadyScriptWaitingForParsingEPNS_9HeapDequeINS_6MemberINS_13PendingScriptEEEEE(%"class.blink::HTMLParserScriptRunner"* %0, %"class.blink::HeapDeque"* %16)
  %26 = icmp eq %"class.blink::PendingScript"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  call void @_ZN5blink22HTMLParserScriptRunner44ExecutePendingDeferredScriptAndDispatchEventEPNS_13PendingScriptE(%"class.blink::HTMLParserScriptRunner"* %0, %"class.blink::PendingScript"* nonnull %25)
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %29 = icmp eq %"class.blink::Document"* %28, null
  br i1 %29, label %30, label %20

30:                                               ; preds = %27, %24, %20
  %31 = phi i1 [ false, %27 ], [ true, %20 ], [ false, %24 ]
  %32 = icmp eq i8* %15, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %15, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #11
  br label %37

37:                                               ; preds = %30, %33, %36
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner28RequestParsingBlockingScriptEPNS_12ScriptLoaderE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::ScriptLoader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %4, align 8
  %6 = icmp eq %"class.blink::PendingScript"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 496, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #11
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %10

10:                                               ; preds = %2, %7
  %11 = call %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader17TakePendingScriptENS_20ScriptSchedulingTypeE(%"class.blink::ScriptLoader"* %1, i32 2) #11
  %12 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5
  %13 = ptrtoint %"class.blink::PendingScript"* %11 to i64
  %14 = bitcast %"class.blink::Member.6"* %12 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::PendingScript"* %11 to i8*
  %19 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #11
  %20 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %4, align 8
  br label %21

21:                                               ; preds = %10, %17
  %22 = phi %"class.blink::PendingScript"* [ %11, %10 ], [ %20, %17 ]
  %23 = icmp eq %"class.blink::PendingScript"* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::PendingScript"* %22 to i1 (%"class.blink::PendingScript"*)***
  %26 = load i1 (%"class.blink::PendingScript"*)**, i1 (%"class.blink::PendingScript"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %26, i64 7
  %28 = load i1 (%"class.blink::PendingScript"*)*, i1 (%"class.blink::PendingScript"*)** %27, align 8
  %29 = call zeroext i1 %28(%"class.blink::PendingScript"* nonnull %22) #11
  br i1 %29, label %38, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %12, i64 0, i32 0, i32 0
  %32 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 0
  %34 = bitcast %"class.blink::PendingScript"* %32 to void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)***
  %35 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)**, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %35, i64 3
  %37 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %36, align 8
  call void %37(%"class.blink::PendingScript"* %32, %"class.blink::PendingScriptClient"* %33) #11
  br label %38

38:                                               ; preds = %21, %30, %24
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader17TakePendingScriptENS_20ScriptSchedulingTypeE(%"class.blink::ScriptLoader"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLParserScriptRunner21RequestDeferredScriptEPNS_12ScriptLoaderE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::ScriptLoader"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader17TakePendingScriptENS_20ScriptSchedulingTypeE(%"class.blink::ScriptLoader"* %1, i32 1) #11
  %4 = ptrtoint %"class.blink::PendingScript"* %3 to i64
  %5 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  br i1 %8, label %14, label %11

11:                                               ; preds = %2
  %12 = add i32 %10, 1
  %13 = icmp eq i32 %12, %7
  br i1 %13, label %23, label %25

14:                                               ; preds = %2
  %15 = icmp eq i32 %10, 0
  %16 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %21, label %18

18:                                               ; preds = %14
  %19 = add i32 %17, -1
  %20 = icmp eq i32 %10, %19
  br i1 %20, label %23, label %25

21:                                               ; preds = %14
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %21, %18, %11
  tail call void @_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %5) #11
  %24 = load i32, i32* %9, align 4
  br label %25

25:                                               ; preds = %23, %21, %18, %11
  %26 = phi i32 [ %10, %11 ], [ %10, %18 ], [ 0, %21 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %27, align 8
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %28, i64 %29
  %31 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, -1
  %34 = icmp eq i32 %26, %33
  %35 = add i32 %26, 1
  %36 = select i1 %34, i32 0, i32 %35
  store i32 %36, i32* %9, align 4
  %37 = bitcast %"class.blink::Member.6"* %30 to i64*
  store atomic i64 %4, i64* %37 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %25
  %41 = bitcast %"class.blink::PendingScript"* %3 to i8*
  %42 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #11
  br label %43

43:                                               ; preds = %25, %40
  ret void
}

declare %"class.blink::ScriptLoader"* @_ZN5blink23ScriptLoaderFromElementEPNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::unique_ptr.799"* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 8, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.799", %"class.std::__1::unique_ptr.799"* %8, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %20, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TracedValue", %"class.blink::TracedValue"* %21, i64 0, i32 0
  %23 = bitcast %"union.base::trace_event::TraceValue"* %19 to %"class.base::trace_event::ConvertableToTraceFormat"**
  store %"class.base::trace_event::ConvertableToTraceFormat"* %22, %"class.base::trace_event::ConvertableToTraceFormat"** %23, align 8
  %24 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %25 = load i8, i8* %16, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %61, label %27

27:                                               ; preds = %9, %56
  %28 = phi i64 [ %57, %56 ], [ 0, %9 ]
  %29 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 8
  br i1 %31, label %32, label %43

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %28
  %34 = bitcast %"union.base::trace_event::TraceValue"* %33 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %35 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %34, align 8
  %36 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %35, null
  br i1 %36, label %56, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %35 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %39, i64 1
  %41 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %40, align 8
  call void %41(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %35) #11
  %42 = load i8, i8* %29, align 1
  br label %43

43:                                               ; preds = %37, %27
  %44 = phi i8 [ %30, %27 ], [ %42, %37 ]
  %45 = icmp eq i8 %44, 9
  br i1 %45, label %46, label %56

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %28
  %48 = bitcast %"union.base::trace_event::TraceValue"* %47 to %"class.protozero::HeapBuffered"**
  %49 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %48, align 8
  %50 = icmp eq %"class.protozero::HeapBuffered"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %52) #11
  %53 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %53) #11
  %54 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %54) #11
  %55 = bitcast %"class.protozero::HeapBuffered"* %49 to i8*
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %51, %46, %43, %32
  %57 = add nuw nsw i64 %28, 1
  %58 = load i8, i8* %16, align 8
  %59 = zext i8 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %27, label %61

61:                                               ; preds = %56, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::TracedValue"* @_ZN5blink12_GLOBAL__N_128GetTraceArgsForScriptElementERNS_8DocumentERKN3WTF12TextPositionERKNS_4KURLE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::TextPosition"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_Znwm(i64 16) #12
  %6 = bitcast i8* %5 to %"class.blink::TracedValue"*
  tail call void @_ZN5blink11TracedValueC1Ev(%"class.blink::TracedValue"* nonnull %6) #11
  %7 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %2) #11
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4
  tail call void @_ZN5blink11TracedValue9SetStringEPKcRKN3WTF6StringE(%"class.blink::TracedValue"* nonnull %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), %"class.WTF::String"* dereferenceable(8) %9) #11
  br label %10

10:                                               ; preds = %8, %3
  %11 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #11
  %12 = icmp eq %"class.blink::LocalFrame"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %10
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #11
  %16 = ptrtoint %"class.blink::LocalFrame"* %15 to i64
  %17 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 %16) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN5blink11TracedValue9SetStringEPKcRKN3WTF6StringE(%"class.blink::TracedValue"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #11
  br label %34

34:                                               ; preds = %13, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %35

35:                                               ; preds = %10, %34
  %36 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %1, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %1, i64 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %39, %35
  %44 = add nsw i32 %37, 1
  call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i32 %44) #11
  %45 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %1, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %46, 1
  call void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i32 %47) #11
  br label %48

48:                                               ; preds = %39, %43
  ret %"class.blink::TracedValue"* %6
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12ScriptLoader13PrepareScriptERKN3WTF12TextPositionENS0_17LegacyTypeSupportE(%"class.blink::ScriptLoader"*, %"class.WTF::TextPosition"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22HTMLParserScriptRunner5TraceEPNS_7VisitorE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.2"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.4"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = and i64 %27, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4138
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %32, i64 4160
  br label %76

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %32, i64 4096
  %40 = bitcast i8* %39 to %"class.blink::NormalPage"*
  %41 = getelementptr inbounds i8, i8* %32, i64 4400
  %42 = bitcast i8* %41 to i8**
  %43 = bitcast i8* %41 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = sub i64 %27, %44
  %46 = lshr i64 %45, 3
  %47 = lshr i64 %45, 6
  %48 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %40, i64 0, i32 2, i32 0, i32 1, i64 %47
  %49 = load atomic i8, i8* %48 acquire, align 1
  %50 = trunc i64 %46 to i32
  %51 = and i32 %50, 7
  %52 = shl i32 2, %51
  %53 = trunc i32 %52 to i8
  %54 = add i8 %53, -1
  %55 = and i8 %54, %49
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %38, %57
  %58 = phi i64 [ %59, %57 ], [ %47, %38 ]
  %59 = add i64 %58, -1
  %60 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %40, i64 0, i32 2, i32 0, i32 1, i64 %59
  %61 = load atomic i8, i8* %60 acquire, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %57, label %63

63:                                               ; preds = %57, %38
  %64 = phi i64 [ %47, %38 ], [ %59, %57 ]
  %65 = phi i8 [ %55, %38 ], [ %61, %57 ]
  %66 = zext i8 %65 to i32
  %67 = tail call i32 @llvm.ctlz.i32(i32 %66, i1 true) #11, !range !30
  %68 = add nsw i32 %67, -24
  %69 = shl i64 %64, 3
  %70 = or i64 %69, 7
  %71 = sext i32 %68 to i64
  %72 = sub i64 %70, %71
  %73 = shl i64 %72, 3
  %74 = load i8*, i8** %42, align 16
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  br label %76

76:                                               ; preds = %63, %36
  %77 = phi i8* [ %37, %36 ], [ %75, %63 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 8
  %79 = getelementptr inbounds i8, i8* %77, i64 4
  %80 = bitcast i8* %79 to i16*
  %81 = load atomic i16, i16* %80 acquire, align 2
  %82 = lshr i16 %81, 2
  %83 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %84 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %83, i64 0, i32 0
  %85 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %84, align 8
  %86 = zext i16 %82 to i64
  %87 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %85, i64 %86
  %88 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %87, align 8
  %89 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %88, i64 0, i32 0
  %90 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %89, align 8
  %91 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, i64 5
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* %78, void (%"class.blink::Visitor"*, i8*)* %90) #11
  br label %95

95:                                               ; preds = %24, %76
  %96 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 5
  %97 = bitcast %"class.blink::Member.6"* %96 to i64*
  %98 = load atomic i64, i64* %97 monotonic, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %98 to i8*
  %102 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, i64 5
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, align 8
  tail call void %105(%"class.blink::Visitor"* %1, i8* nonnull %101, i8* nonnull %101, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv) #11
  br label %106

106:                                              ; preds = %95, %100
  %107 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %0, i64 0, i32 6
  %108 = bitcast %"class.blink::HeapDeque"* %107 to i64*
  %109 = load atomic i64, i64* %108 monotonic, align 8
  %110 = bitcast %"class.blink::HeapDeque"* %107 to i8**
  %111 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %112 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %112, i64 11
  %114 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %113, align 8
  tail call void %114(%"class.blink::Visitor"* %1, i8** %110) #11
  %115 = icmp eq i64 %109, 0
  br i1 %115, label %122, label %116

116:                                              ; preds = %106
  %117 = inttoptr i64 %109 to i8*
  %118 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %119 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %119, i64 5
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %120, align 8
  tail call void %121(%"class.blink::Visitor"* %1, i8* nonnull %117, i8* nonnull %117, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %122

122:                                              ; preds = %106, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink22HTMLParserScriptRunner18NameInHeapSnapshotEv(%"class.blink::HTMLParserScriptRunner"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZThn8_NK5blink22HTMLParserScriptRunner18NameInHeapSnapshotEv(%"class.blink::HTMLParserScriptRunner"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0)
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::ScriptElementBase"* @_ZNK5blink13PendingScript10GetElementEv(%"class.blink::PendingScript"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"*) local_unnamed_addr #2

declare i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"*) local_unnamed_addr #2

declare void @_ZN5blink15SegmentedString18SetCurrentPositionEN3WTF13OrdinalNumberES2_i(%"class.blink::SegmentedString"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Deque.790"*, %"class.WTF::Deque.790"* dereferenceable(24)) unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SegmentedSubstringEEEmm(i64 %9) #11
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SegmentedSubstringEEEPKcv, i64 0, i64 0)) #11
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Deque.790"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = udiv i64 %10, 40
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"class.blink::SegmentedSubstring"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"class.blink::SegmentedSubstring"* [ null, %2 ], [ %16, %8 ]
  %19 = phi i32 [ 0, %2 ], [ %15, %8 ]
  %20 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %26, align 8
  %28 = icmp ugt i32 %22, %25
  br i1 %28, label %67, label %29

29:                                               ; preds = %17
  %30 = zext i32 %22 to i64
  %31 = zext i32 %25 to i64
  %32 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %31
  %33 = icmp eq i32 %22, %25
  br i1 %33, label %146, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %18, i64 %30
  %36 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %30
  br label %37

37:                                               ; preds = %34, %63
  %38 = phi %"class.blink::SegmentedSubstring"* [ %64, %63 ], [ %35, %34 ]
  %39 = phi %"class.blink::SegmentedSubstring"* [ %65, %63 ], [ %36, %34 ]
  %40 = bitcast %"class.blink::SegmentedSubstring"* %38 to i8*
  %41 = bitcast %"class.blink::SegmentedSubstring"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 26, i1 false) #11
  %42 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %39, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %38, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #11
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !15

60:                                               ; preds = %51
  tail call void @llvm.trap() #11
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %37
  %64 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %38, i64 1
  %65 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %39, i64 1
  %66 = icmp eq %"class.blink::SegmentedSubstring"* %65, %32
  br i1 %66, label %146, label %37

67:                                               ; preds = %17
  %68 = zext i32 %25 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %68
  %70 = icmp eq i32 %25, 0
  br i1 %70, label %105, label %71

71:                                               ; preds = %67, %97
  %72 = phi %"class.blink::SegmentedSubstring"* [ %98, %97 ], [ %18, %67 ]
  %73 = phi %"class.blink::SegmentedSubstring"* [ %99, %97 ], [ %27, %67 ]
  %74 = bitcast %"class.blink::SegmentedSubstring"* %72 to i8*
  %75 = bitcast %"class.blink::SegmentedSubstring"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 26, i1 false) #11
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %73, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %72, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #11
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !15

94:                                               ; preds = %85
  tail call void @llvm.trap() #11
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %95, %80, %71
  %98 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %72, i64 1
  %99 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %73, i64 1
  %100 = icmp eq %"class.blink::SegmentedSubstring"* %99, %69
  br i1 %100, label %101, label %71

101:                                              ; preds = %97
  %102 = load i32, i32* %20, align 8
  %103 = load i32, i32* %6, align 8
  %104 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %5, align 8
  br label %105

105:                                              ; preds = %101, %67
  %106 = phi %"class.blink::SegmentedSubstring"* [ %104, %101 ], [ %18, %67 ]
  %107 = phi i32 [ %103, %101 ], [ %19, %67 ]
  %108 = phi i32 [ %102, %101 ], [ %22, %67 ]
  %109 = zext i32 %108 to i64
  %110 = zext i32 %107 to i64
  %111 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %110
  %112 = icmp eq i32 %108, %107
  br i1 %112, label %146, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %106, i64 %109
  %115 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %27, i64 %109
  br label %116

116:                                              ; preds = %113, %142
  %117 = phi %"class.blink::SegmentedSubstring"* [ %143, %142 ], [ %114, %113 ]
  %118 = phi %"class.blink::SegmentedSubstring"* [ %144, %142 ], [ %115, %113 ]
  %119 = bitcast %"class.blink::SegmentedSubstring"* %117 to i8*
  %120 = bitcast %"class.blink::SegmentedSubstring"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 26, i1 false) #11
  %121 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %118, i64 0, i32 5, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %117, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #11
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !15

139:                                              ; preds = %130
  tail call void @llvm.trap() #11
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %140, %125, %116
  %143 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %117, i64 1
  %144 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %118, i64 1
  %145 = icmp eq %"class.blink::SegmentedSubstring"* %144, %111
  br i1 %145, label %146, label %116

146:                                              ; preds = %63, %142, %105, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SegmentedSubstringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.790"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #11
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #11
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque.790", %"class.WTF::Deque.790"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i32 @_ZNK5blink15SegmentedString6lengthEv(%"class.blink::SegmentedString"*) local_unnamed_addr #2

declare void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"*, %"class.blink::SegmentedString"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink15SegmentedString5CloseEv(%"class.blink::SegmentedString"*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink11TracedValue9SetStringEPKcRKN3WTF6StringE(%"class.blink::TracedValue"*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

declare void @_ZN5blink11TracedValue10SetIntegerEPKci(%"class.blink::TracedValue"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN5blink11TracedValueC1Ev(%"class.blink::TracedValue"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26HTMLParserScriptRunnerHostELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase.788"*
  tail call void @_ZNK5blink14PersistentBaseINS_26HTMLParserScriptRunnerHostELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.788"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_26HTMLParserScriptRunnerHostELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.788"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase.788", %"class.blink::PersistentBase.788"* %0, i64 0, i32 0
  %5 = load %"class.blink::HTMLParserScriptRunnerHost"*, %"class.blink::HTMLParserScriptRunnerHost"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::HTMLParserScriptRunnerHost"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HTMLParserScriptRunnerHost"* %5 to i8*
  %10 = ptrtoint %"class.blink::HTMLParserScriptRunnerHost"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #11, !range !30
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::HTMLParserScriptRunnerHost"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::HTMLParserScriptRunnerHost"*)**
  %21 = load void (%"class.blink::HTMLParserScriptRunnerHost"*)*, void (%"class.blink::HTMLParserScriptRunnerHost"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::HTMLParserScriptRunnerHost"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::HTMLParserScriptRunnerHost"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::HTMLParserScriptRunnerHost"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.787"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.787"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !15

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #11
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !15

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #11
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.788"**
  store %"class.blink::PersistentBase.788"* %11, %"class.blink::PersistentBase.788"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26HTMLParserScriptRunnerHostELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !15

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #11
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13PendingScriptEEEEEmm(i64 %11) #11
  %13 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %4, align 8
  %14 = icmp eq %"class.blink::Member.6"* %13, null
  br i1 %14, label %104, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::Member.6"* %13 to i8*
  %17 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %16, i64 %12) #11
  br i1 %17, label %18, label %104

18:                                               ; preds = %15
  %19 = lshr i64 %12, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %2, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  br i1 %25, label %26, label %245

26:                                               ; preds = %18
  %27 = sub i32 %22, %3
  %28 = add i32 %27, %20
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %29
  %31 = zext i32 %3 to i64
  %32 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %31
  %33 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %4, align 8
  %34 = zext i32 %28 to i64
  %35 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %33, i64 %34
  %36 = icmp ne %"class.blink::Member.6"* %35, null
  %37 = icmp ne %"class.blink::Member.6"* %30, null
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %92, !prof !8

39:                                               ; preds = %26
  %40 = icmp eq %"class.blink::Member.6"* %30, %35
  br i1 %40, label %72, label %41

41:                                               ; preds = %39
  %42 = icmp ult %"class.blink::Member.6"* %35, %30
  br i1 %42, label %43, label %54

43:                                               ; preds = %41
  %44 = icmp ult i32 %22, %3
  br i1 %44, label %45, label %72

45:                                               ; preds = %43, %45
  %46 = phi %"class.blink::Member.6"* [ %52, %45 ], [ %35, %43 ]
  %47 = phi %"class.blink::Member.6"* [ %51, %45 ], [ %30, %43 ]
  %48 = bitcast %"class.blink::Member.6"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.6"* %46 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %47, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %46, i64 1
  %53 = icmp ult %"class.blink::Member.6"* %51, %32
  br i1 %53, label %45, label %72

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %32, i64 -1
  %56 = icmp ult %"class.blink::Member.6"* %55, %30
  br i1 %56, label %72, label %57

57:                                               ; preds = %54
  %58 = ptrtoint %"class.blink::Member.6"* %55 to i64
  %59 = ptrtoint %"class.blink::Member.6"* %30 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %35, i64 %61
  br label %63

63:                                               ; preds = %63, %57
  %64 = phi %"class.blink::Member.6"* [ %70, %63 ], [ %62, %57 ]
  %65 = phi %"class.blink::Member.6"* [ %69, %63 ], [ %55, %57 ]
  %66 = bitcast %"class.blink::Member.6"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::Member.6"* %64 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %65, i64 -1
  %70 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %64, i64 -1
  %71 = icmp ult %"class.blink::Member.6"* %69, %30
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %45, %54, %43, %39
  %73 = ptrtoint %"class.blink::Member.6"* %32 to i64
  %74 = ptrtoint %"class.blink::Member.6"* %30 to i64
  %75 = sub i64 %73, %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = ashr exact i64 %75, 3
  br label %79

79:                                               ; preds = %89, %77
  %80 = phi i64 [ %82, %89 ], [ %78, %77 ]
  %81 = phi %"class.blink::Member.6"* [ %90, %89 ], [ %35, %77 ]
  %82 = add i64 %80, -1
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.blink::Member.6"* %81 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #11
  br label %89

89:                                               ; preds = %85, %79
  %90 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %81, i64 1
  %91 = icmp eq i64 %82, 0
  br i1 %91, label %92, label %79

92:                                               ; preds = %89, %26, %72
  %93 = load i32, i32* %21, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %94
  %96 = icmp ult i32 %28, %3
  %97 = select i1 %96, i32 %28, i32 %3
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %98
  %100 = bitcast %"class.blink::Member.6"* %95 to i8*
  %101 = ptrtoint %"class.blink::Member.6"* %99 to i64
  %102 = ptrtoint %"class.blink::Member.6"* %95 to i64
  %103 = sub i64 %101, %102
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %100, i64 %103) #11
  store i32 %28, i32* %21, align 8
  br label %245

104:                                              ; preds = %1, %15
  %105 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13PendingScriptEEEEEmm(i64 %11) #11
  %106 = lshr i64 %105, 3
  %107 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %106) #11
  %108 = ptrtoint %"class.blink::HeapVectorBacking"* %107 to i64
  %109 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = trunc i64 %106 to i32
  store i32 %110, i32* %2, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %107, i64 0, i32 0
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #11
  br label %116

116:                                              ; preds = %104, %113
  %117 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp ugt i32 %118, %120
  br i1 %121, label %166, label %122

122:                                              ; preds = %116
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %123
  %125 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %4, align 8
  %126 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %125, i64 %123
  %127 = icmp ne %"class.blink::Member.6"* %126, null
  %128 = icmp ne %"class.blink::Member.6"* %124, null
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %154, !prof !8

130:                                              ; preds = %122
  %131 = zext i32 %120 to i64
  %132 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %131
  %133 = bitcast %"class.blink::Member.6"* %124 to i8*
  %134 = ptrtoint %"class.blink::Member.6"* %132 to i64
  %135 = ptrtoint %"class.blink::Member.6"* %124 to i64
  %136 = sub i64 %134, %135
  %137 = bitcast %"class.blink::Member.6"* %126 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %137, i8* nonnull %133, i64 %136) #11
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %130
  %140 = ashr exact i64 %136, 3
  br label %141

141:                                              ; preds = %151, %139
  %142 = phi i64 [ %144, %151 ], [ %140, %139 ]
  %143 = phi %"class.blink::Member.6"* [ %152, %151 ], [ %126, %139 ]
  %144 = add i64 %142, -1
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = bitcast %"class.blink::Member.6"* %143 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #11
  br label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %143, i64 1
  %153 = icmp eq i64 %144, 0
  br i1 %153, label %154, label %141

154:                                              ; preds = %151, %122, %130
  %155 = load i32, i32* %117, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %156
  %158 = load i32, i32* %119, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %159
  %161 = bitcast %"class.blink::Member.6"* %157 to i8*
  %162 = ptrtoint %"class.blink::Member.6"* %160 to i64
  %163 = ptrtoint %"class.blink::Member.6"* %157 to i64
  %164 = sub i64 %162, %163
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %161, i64 %164) #11
  %165 = bitcast %"class.blink::Member.6"* %5 to i8*
  br label %243

166:                                              ; preds = %116
  %167 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %4, align 8
  %168 = icmp ne %"class.blink::Member.6"* %167, null
  %169 = icmp ne %"class.blink::Member.6"* %5, null
  %170 = and i1 %169, %168
  br i1 %170, label %173, label %171, !prof !8

171:                                              ; preds = %166
  %172 = bitcast %"class.blink::Member.6"* %5 to i8*
  br label %192

173:                                              ; preds = %166
  %174 = zext i32 %120 to i64
  %175 = bitcast %"class.blink::Member.6"* %5 to i8*
  %176 = shl nuw nsw i64 %174, 3
  %177 = bitcast %"class.blink::Member.6"* %167 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %177, i8* nonnull %175, i64 %176) #11
  %178 = icmp eq i32 %120, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %173, %189
  %180 = phi i64 [ %182, %189 ], [ %174, %173 ]
  %181 = phi %"class.blink::Member.6"* [ %190, %189 ], [ %167, %173 ]
  %182 = add nsw i64 %180, -1
  %183 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = bitcast %"class.blink::Member.6"* %181 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %187) #11
  br label %189

189:                                              ; preds = %185, %179
  %190 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %181, i64 1
  %191 = icmp eq i64 %182, 0
  br i1 %191, label %192, label %179

192:                                              ; preds = %189, %171, %173
  %193 = phi i8* [ %172, %171 ], [ %175, %173 ], [ %175, %189 ]
  %194 = load i32, i32* %119, align 4
  %195 = zext i32 %194 to i64
  %196 = shl nuw nsw i64 %195, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %193, i64 %196) #11
  %197 = load i32, i32* %2, align 8
  %198 = load i32, i32* %117, align 8
  %199 = sub i32 %198, %3
  %200 = add i32 %199, %197
  %201 = zext i32 %198 to i64
  %202 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %201
  %203 = zext i32 %3 to i64
  %204 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %203
  %205 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %4, align 8
  %206 = zext i32 %200 to i64
  %207 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %205, i64 %206
  %208 = icmp ne %"class.blink::Member.6"* %207, null
  %209 = icmp ne %"class.blink::Member.6"* %202, null
  %210 = and i1 %209, %208
  br i1 %210, label %213, label %211, !prof !8

211:                                              ; preds = %192
  %212 = ptrtoint %"class.blink::Member.6"* %204 to i64
  br label %235

213:                                              ; preds = %192
  %214 = bitcast %"class.blink::Member.6"* %202 to i8*
  %215 = ptrtoint %"class.blink::Member.6"* %204 to i64
  %216 = ptrtoint %"class.blink::Member.6"* %202 to i64
  %217 = sub i64 %215, %216
  %218 = bitcast %"class.blink::Member.6"* %207 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %218, i8* nonnull %214, i64 %217) #11
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %235, label %220

220:                                              ; preds = %213
  %221 = ashr exact i64 %217, 3
  br label %222

222:                                              ; preds = %232, %220
  %223 = phi i64 [ %225, %232 ], [ %221, %220 ]
  %224 = phi %"class.blink::Member.6"* [ %233, %232 ], [ %207, %220 ]
  %225 = add i64 %223, -1
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = bitcast %"class.blink::Member.6"* %224 to i8**
  %230 = load i8*, i8** %229, align 8
  %231 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #11
  br label %232

232:                                              ; preds = %228, %222
  %233 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %224, i64 1
  %234 = icmp eq i64 %225, 0
  br i1 %234, label %235, label %222

235:                                              ; preds = %232, %211, %213
  %236 = phi i64 [ %212, %211 ], [ %215, %213 ], [ %215, %232 ]
  %237 = load i32, i32* %117, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 %238
  %240 = bitcast %"class.blink::Member.6"* %239 to i8*
  %241 = ptrtoint %"class.blink::Member.6"* %239 to i64
  %242 = sub i64 %236, %241
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %240, i64 %242) #11
  store i32 %200, i32* %117, align 8
  br label %243

243:                                              ; preds = %235, %154
  %244 = phi i8* [ %193, %235 ], [ %165, %154 ]
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %244) #11
  br label %245

245:                                              ; preds = %92, %18, %243
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13PendingScriptEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !15

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #11
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %34, i8* %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !15

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #11
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.6"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !15

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.6"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13PendingScriptEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PendingScript"*
  %4 = bitcast i8* %1 to void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)**, void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PendingScript"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv: argument 0"}
!4 = distinct !{!4, !"_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink23HTMLParserReentryPermit27IncrementScriptNestingLevelEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink23HTMLParserReentryPermit27IncrementScriptNestingLevelEv"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink23HTMLParserReentryPermit27IncrementScriptNestingLevelEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink23HTMLParserReentryPermit27IncrementScriptNestingLevelEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink22WrapPersistentInternalINS_26HTMLParserScriptRunnerHostEEENS_10PersistentIT_EEPS3_: argument 0"}
!14 = distinct !{!14, !"_ZN5blink22WrapPersistentInternalINS_26HTMLParserScriptRunnerHostEEENS_10PersistentIT_EEPS3_"}
!15 = !{!"branch_weights", i32 1, i32 2000}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26HTMLParserScriptRunnerHostEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26HTMLParserScriptRunnerHostEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!21 = distinct !{!21, !22, !"_ZN3WTF4BindIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF4BindIMN5blink26HTMLParserScriptRunnerHostEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink23HTMLParserReentryPermit27IncrementScriptNestingLevelEv: argument 0"}
!25 = distinct !{!25, !"_ZN5blink23HTMLParserReentryPermit27IncrementScriptNestingLevelEv"}
!26 = !{i8 0, i8 2}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF5DequeIN5blink6MemberINS1_13PendingScriptEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv"}
!30 = !{i32 24, i32 33}
