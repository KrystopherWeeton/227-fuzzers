; ModuleID = '../../third_party/perfetto/src/trace_processor/util/gzip_utils.cc'
source_filename = "../../third_party/perfetto/src/trace_processor/util/gzip_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.perfetto::trace_processor::util::GzipDecompressor" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.z_stream_s* }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque

@.str = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1

@_ZN8perfetto15trace_processor4util16GzipDecompressorC1Ev = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::util::GzipDecompressor"*), void (%"class.perfetto::trace_processor::util::GzipDecompressor"*)* @_ZN8perfetto15trace_processor4util16GzipDecompressorC2Ev
@_ZN8perfetto15trace_processor4util16GzipDecompressorD1Ev = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::util::GzipDecompressor"*), void (%"class.perfetto::trace_processor::util::GzipDecompressor"*)* @_ZN8perfetto15trace_processor4util16GzipDecompressorD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8perfetto15trace_processor4util15IsGzipSupportedEv() local_unnamed_addr #0 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor4util16GzipDecompressorC2Ev(%"class.perfetto::trace_processor::util::GzipDecompressor"* nocapture) unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 112) #7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 112, i1 false)
  %3 = ptrtoint i8* %2 to i64
  %4 = bitcast %"class.perfetto::trace_processor::util::GzipDecompressor"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::util::GzipDecompressor", %"class.perfetto::trace_processor::util::GzipDecompressor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds i8, i8* %2, i64 64
  %7 = getelementptr inbounds i8, i8* %2, i64 80
  %8 = bitcast i8* %7 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store i8* null, i8** %8, align 8
  %9 = load %struct.z_stream_s*, %struct.z_stream_s** %5, align 8
  %10 = tail call i32 @Cr_z_inflateInit2_(%struct.z_stream_s* %9, i32 47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @Cr_z_inflateInit2_(%struct.z_stream_s*, i32, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor4util16GzipDecompressorD2Ev(%"class.perfetto::trace_processor::util::GzipDecompressor"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::util::GzipDecompressor", %"class.perfetto::trace_processor::util::GzipDecompressor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.z_stream_s*, %struct.z_stream_s** %2, align 8
  %4 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %3) #8
  %5 = load %struct.z_stream_s*, %struct.z_stream_s** %2, align 8
  store %struct.z_stream_s* null, %struct.z_stream_s** %2, align 8
  %6 = icmp eq %struct.z_stream_s* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %struct.z_stream_s* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor4util16GzipDecompressor5ResetEv(%"class.perfetto::trace_processor::util::GzipDecompressor"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::util::GzipDecompressor", %"class.perfetto::trace_processor::util::GzipDecompressor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.z_stream_s*, %struct.z_stream_s** %2, align 8
  %4 = tail call i32 @Cr_z_inflateReset(%struct.z_stream_s* %3) #8
  ret void
}

declare i32 @Cr_z_inflateReset(%struct.z_stream_s*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor4util16GzipDecompressor8SetInputEPKhm(%"class.perfetto::trace_processor::util::GzipDecompressor"* nocapture readonly, i8*, i64) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::util::GzipDecompressor", %"class.perfetto::trace_processor::util::GzipDecompressor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = trunc i64 %2 to i32
  %8 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %8, i64 0, i32 1
  store i32 %7, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i64 } @_ZN8perfetto15trace_processor4util16GzipDecompressor10DecompressEPhm(%"class.perfetto::trace_processor::util::GzipDecompressor"* nocapture readonly, i8*, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::util::GzipDecompressor", %"class.perfetto::trace_processor::util::GzipDecompressor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 3
  store i8* %1, i8** %10, align 8
  %11 = trunc i64 %2 to i32
  %12 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %12, i64 0, i32 4
  store i32 %11, i32* %13, align 8
  %14 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %15 = tail call i32 @Cr_z_inflate(%struct.z_stream_s* %14, i32 0) #8
  switch i32 %15, label %25 [
    i32 2, label %16
    i32 -3, label %16
    i32 -4, label %16
    i32 1, label %19
    i32 -5, label %31
  ]

16:                                               ; preds = %9, %9, %9
  %17 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %18 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %17) #8
  br label %31

19:                                               ; preds = %9
  %20 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %21 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %20, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = sub i64 %2, %23
  br label %31

25:                                               ; preds = %9
  %26 = load %struct.z_stream_s*, %struct.z_stream_s** %4, align 8
  %27 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = sub i64 %2, %29
  br label %31

31:                                               ; preds = %16, %19, %25, %9, %3
  %32 = phi i32 [ 4, %3 ], [ 0, %25 ], [ 1, %19 ], [ 2, %16 ], [ 3, %9 ]
  %33 = phi i64 [ 0, %3 ], [ %30, %25 ], [ %24, %19 ], [ 0, %16 ], [ 0, %9 ]
  %34 = insertvalue { i32, i64 } undef, i32 %32, 0
  %35 = insertvalue { i32, i64 } %34, i64 %33, 1
  ret { i32, i64 } %35
}

declare i32 @Cr_z_inflate(%struct.z_stream_s*, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
