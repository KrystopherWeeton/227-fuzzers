; ModuleID = '../../net/base/address_list.cc'
source_filename = "../../net/base/address_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.std::nothrow_t" = type { i8 }
%"class.net::AddressList" = type { %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.net::IPAddress"* }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.23" }
%"union.absl::variant_internal::DestructibleUnionImpl.23" = type { %"union.absl::variant_internal::DestructibleUnionImpl.24" }
%"union.absl::variant_internal::DestructibleUnionImpl.24" = type { %"union.absl::variant_internal::DestructibleUnionImpl.25" }
%"union.absl::variant_internal::DestructibleUnionImpl.25" = type { %"union.absl::variant_internal::DestructibleUnionImpl.26" }
%"union.absl::variant_internal::DestructibleUnionImpl.26" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"class.std::__1::__compressed_pair.55" }
%"struct.std::__1::pair.54" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::pair.54"* }
%"class.base::flat_map.61" = type { %"class.base::internal::flat_tree.62" }
%"class.base::internal::flat_tree.62" = type { %"class.std::__1::vector.52" }
%"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare" = type { i8 }
%"struct.std::__1::__temp_value" = type { %"struct.std::__1::aligned_storage<24, 4>::type", %"class.std::__1::allocator.58"* }
%"struct.std::__1::aligned_storage<24, 4>::type" = type { [24 x i8] }
%"class.std::__1::allocator.58" = type { i8 }
%"struct.std::__1::__split_buffer.78" = type { %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::allocator.58"* }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS6_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueESD_E4typeENSB_IPKS6_EESG_SG_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN4base8internal9flat_treeIN3net10IPEndPointENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_iEENS5_9allocatorISA_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPSA_EESH_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_PNS_15iterator_traitsISL_E10value_typeET_ = comdat any

$_ZNSt3__122__merge_move_constructIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EESK_EEvT0_SL_T1_SM_PNS_15iterator_traitsISL_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeE = comdat any

$_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPNS_4pairIN3net10IPEndPointEiEEEEEET_S8_S8_S8_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3net10IPEndPointEiEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRS3_iEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3net10IPEndPointEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3net10IPEndPointEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_ = comdat any

@_ZZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [13 x i8] c"address_list\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"canonical_name\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN3net11AddressListC1Ev = hidden unnamed_addr alias void (%"class.net::AddressList"*), void (%"class.net::AddressList"*)* @_ZN3net11AddressListC2Ev
@_ZN3net11AddressListC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::AddressList"*, %"class.net::AddressList"*), void (%"class.net::AddressList"*, %"class.net::AddressList"*)* @_ZN3net11AddressListC2ERKS0_
@_ZN3net11AddressListC1EOS0_ = hidden unnamed_addr alias void (%"class.net::AddressList"*, %"class.net::AddressList"*), void (%"class.net::AddressList"*, %"class.net::AddressList"*)* @_ZN3net11AddressListC2EOS0_
@_ZN3net11AddressListD1Ev = hidden unnamed_addr alias void (%"class.net::AddressList"*), void (%"class.net::AddressList"*)* @_ZN3net11AddressListD2Ev
@_ZN3net11AddressListC1ERKNS_10IPEndPointE = hidden unnamed_addr alias void (%"class.net::AddressList"*, %"class.net::IPEndPoint"*), void (%"class.net::AddressList"*, %"class.net::IPEndPoint"*)* @_ZN3net11AddressListC2ERKNS_10IPEndPointE
@_ZN3net11AddressListC1ERKNS_10IPEndPointENSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE = hidden unnamed_addr alias void (%"class.net::AddressList"*, %"class.net::IPEndPoint"*, %"class.std::__1::vector.1"*), void (%"class.net::AddressList"*, %"class.net::IPEndPoint"*, %"class.std::__1::vector.1"*)* @_ZN3net11AddressListC2ERKNS_10IPEndPointENSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressListC2Ev(%"class.net::AddressList"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::AddressList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressListC2ERKS0_(%"class.net::AddressList"*, %"class.net::AddressList"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::AddressList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.net::IPEndPoint"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.net::AddressList"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 20
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 922337203685477580
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.net::AddressList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #14
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #15
  %18 = bitcast i8* %17 to %"class.net::IPEndPoint"*
  %19 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.net::IPEndPoint"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.net::AddressList"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %18, i64 %10
  %23 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::IPEndPoint"* %22, %"class.net::IPEndPoint"** %23, align 8
  %24 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %24, align 8
  %26 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %4, align 8
  %27 = bitcast %"class.net::IPEndPoint"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.net::IPEndPoint"* %25, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"class.net::IPEndPoint"* [ %34, %30 ], [ %18, %16 ]
  %32 = phi %"class.net::IPEndPoint"* [ %33, %30 ], [ %25, %16 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %31, %"class.net::IPEndPoint"* dereferenceable(20) %32) #13
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %32, i64 1
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %31, i64 1
  %35 = icmp eq %"class.net::IPEndPoint"* %33, %26
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  br label %38

38:                                               ; preds = %36, %16
  %39 = phi i64 [ %28, %16 ], [ %37, %36 ]
  store i64 %39, i64* %27, align 8
  br label %40

40:                                               ; preds = %2, %38
  %41 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1
  %43 = bitcast %"class.std::__1::vector.1"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  %44 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.1"* %42 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = sdiv exact i64 %49, 24
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %93, label %52

52:                                               ; preds = %40
  %53 = icmp ugt i64 %50, 768614336404564650
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.1"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #14
  unreachable

56:                                               ; preds = %52
  %57 = tail call i8* @_Znwm(i64 %49) #15
  %58 = bitcast i8* %57 to %"class.std::__1::basic_string"*
  %59 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"** %59 to i8**
  store i8* %57, i8** %60, align 8
  %61 = bitcast %"class.std::__1::vector.1"* %41 to i8**
  store i8* %57, i8** %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %50
  %63 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %62, %"class.std::__1::basic_string"** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %42, i64 0, i32 0, i32 0
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %64, align 8
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %67 = bitcast %"class.std::__1::basic_string"** %59 to i64*
  %68 = ptrtoint i8* %57 to i64
  %69 = icmp eq %"class.std::__1::basic_string"* %65, %66
  br i1 %69, label %91, label %70

70:                                               ; preds = %56, %85
  %71 = phi %"class.std::__1::basic_string"* [ %87, %85 ], [ %58, %56 ]
  %72 = phi %"class.std::__1::basic_string"* [ %86, %85 ], [ %65, %56 ]
  %73 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %70
  %78 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #13
  br label %85

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %71, i8* %82, i64 %84) #13
  br label %85

85:                                               ; preds = %80, %77
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  %88 = icmp eq %"class.std::__1::basic_string"* %86, %66
  br i1 %88, label %89, label %70

89:                                               ; preds = %85
  %90 = ptrtoint %"class.std::__1::basic_string"* %87 to i64
  br label %91

91:                                               ; preds = %89, %56
  %92 = phi i64 [ %68, %56 ], [ %90, %89 ]
  store i64 %92, i64* %67, align 8
  br label %93

93:                                               ; preds = %40, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSERKS0_(%"class.net::AddressList"* returned, %"class.net::AddressList"* readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.net::AddressList"* %0, %1
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  %8 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"class.net::IPEndPoint"* %7, %"class.net::IPEndPoint"* %9) #13
  %10 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1"* %10, %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* %14) #13
  br label %15

15:                                               ; preds = %2, %4
  ret %"class.net::AddressList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressListC2EOS0_(%"class.net::AddressList"* nocapture, %"class.net::AddressList"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::AddressList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = bitcast %"class.net::AddressList"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::AddressList"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.net::IPEndPoint"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.net::IPEndPoint"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.net::AddressList"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  %18 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1
  %20 = bitcast %"class.std::__1::vector.1"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13
  %21 = bitcast %"class.std::__1::vector.1"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.1"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.std::__1::vector.1"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSEOS0_(%"class.net::AddressList"* returned, %"class.net::AddressList"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %5 = icmp eq %"class.net::IPEndPoint"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %9 = icmp eq %"class.net::IPEndPoint"* %8, %4
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.net::IPEndPoint"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %11, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %12) #13
  %13 = icmp eq %"class.net::IPEndPoint"* %12, %4
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  br label %16

16:                                               ; preds = %14, %6
  %17 = phi %"class.net::IPEndPoint"* [ %15, %14 ], [ %4, %6 ]
  store %"class.net::IPEndPoint"* %4, %"class.net::IPEndPoint"** %7, align 8
  %18 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %18) #15
  %19 = bitcast %"class.net::AddressList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #13
  br label %20

20:                                               ; preds = %2, %16
  %21 = bitcast %"class.net::AddressList"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.net::AddressList"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.net::IPEndPoint"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.net::IPEndPoint"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.net::IPEndPoint"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.net::IPEndPoint"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.net::AddressList"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #13
  %35 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %35, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %20
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %42 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %38
  br i1 %44, label %60, label %45

45:                                               ; preds = %40, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %38
  br i1 %56, label %57, label %45

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.1"* %35 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %40
  %61 = phi i8* [ %59, %57 ], [ %41, %40 ]
  store %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"** %42, align 8
  tail call void @_ZdlPv(i8* %61) #15
  %62 = bitcast %"class.std::__1::vector.1"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #13
  br label %63

63:                                               ; preds = %20, %60
  %64 = bitcast %"class.std::__1::vector.1"* %36 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::vector.1"* %35 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"class.std::__1::basic_string"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.std::__1::basic_string"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast %"class.std::__1::vector.1"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #13
  ret %"class.net::AddressList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressListD2Ev(%"class.net::AddressList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.1"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %29, align 8
  %31 = icmp eq %"class.net::IPEndPoint"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %34 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %33, align 8
  %35 = icmp eq %"class.net::IPEndPoint"* %34, %30
  br i1 %35, label %42, label %36

36:                                               ; preds = %32, %36
  %37 = phi %"class.net::IPEndPoint"* [ %38, %36 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %37, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %38) #13
  %39 = icmp eq %"class.net::IPEndPoint"* %38, %30
  br i1 %39, label %40, label %36

40:                                               ; preds = %36
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %29, align 8
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi %"class.net::IPEndPoint"* [ %41, %40 ], [ %30, %32 ]
  store %"class.net::IPEndPoint"* %30, %"class.net::IPEndPoint"** %33, align 8
  %44 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %28, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressListC2ERKNS_10IPEndPointE(%"class.net::AddressList"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::AddressList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  %4 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %4, %"class.net::IPEndPoint"* dereferenceable(20) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressListC2ERKNS_10IPEndPointENSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"class.net::AddressList"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.std::__1::vector.1"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1"* %2 to i64*
  %6 = bitcast %"class.net::AddressList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  %7 = load i64, i64* %5, align 8
  %8 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.std::__1::vector.1"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #13
  %20 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %20, align 8
  %22 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %22, align 8
  %24 = icmp eq %"class.net::IPEndPoint"* %21, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %3
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %21, %"class.net::IPEndPoint"* dereferenceable(20) %1) #13
  %26 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %21, i64 1
  %27 = ptrtoint %"class.net::IPEndPoint"* %26 to i64
  %28 = bitcast %"class.net::IPEndPoint"** %20 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %30, %"class.net::IPEndPoint"* dereferenceable(20) %1) #13
  br label %31

31:                                               ; preds = %25, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList19CreateFromIPAddressERKNS_9IPAddressEt(%"class.net::AddressList"* noalias sret, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #13
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPAddress"* dereferenceable(17) %1, i16 zeroext %2) #13
  %6 = bitcast %"class.net::AddressList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #13
  %7 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %7, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #13
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList23CreateFromIPAddressListERKNSt3__16vectorINS_9IPAddressENS1_9allocatorIS3_EEEENS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISD_EEEE(%"class.net::AddressList"* noalias sret, %"class.std::__1::vector.13"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.1"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = alloca %"class.std::__1::vector.1", align 16
  %6 = bitcast %"class.net::AddressList"* %0 to i8*
  %7 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #13
  %9 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %11, align 8
  %13 = icmp eq %"class.net::IPAddress"* %10, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %16 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %17 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0
  br label %50

18:                                               ; preds = %59, %3
  %19 = bitcast %"class.std::__1::vector.1"* %2 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::vector.1"* %5 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %22, align 16
  %23 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.std::__1::basic_string"** %26 to i64*
  store i64 %25, i64* %27, align 16
  %28 = bitcast %"class.std::__1::vector.1"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #13
  call void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* %0, %"class.std::__1::vector.1"* nonnull %5)
  %29 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 0
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 16
  %31 = icmp eq %"class.std::__1::basic_string"* %30, null
  %32 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  br i1 %31, label %49, label %33

33:                                               ; preds = %18
  %34 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %35 = icmp eq %"class.std::__1::basic_string"* %34, %30
  br i1 %35, label %48, label %36

36:                                               ; preds = %33, %46
  %37 = phi %"class.std::__1::basic_string"* [ %38, %46 ], [ %34, %33 ]
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 -1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %43, %36
  %47 = icmp eq %"class.std::__1::basic_string"* %38, %30
  br i1 %47, label %48, label %36

48:                                               ; preds = %46, %33
  store %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"** %21, align 8
  call void @_ZdlPv(i8* %32) #15
  br label %49

49:                                               ; preds = %18, %48
  ret void

50:                                               ; preds = %14, %59
  %51 = phi %"class.net::IPAddress"* [ %10, %14 ], [ %60, %59 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #13
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPAddress"* dereferenceable(17) %51, i16 zeroext 0) #13
  %52 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %54 = icmp eq %"class.net::IPEndPoint"* %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %52, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #13
  %56 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %52, i64 1
  %57 = ptrtoint %"class.net::IPEndPoint"* %56 to i64
  store i64 %57, i64* %16, align 8
  br label %59

58:                                               ; preds = %50
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %17, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #13
  br label %59

59:                                               ; preds = %55, %58
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #13
  %60 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %51, i64 1
  %61 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %11, align 8
  %62 = icmp eq %"class.net::IPAddress"* %60, %61
  br i1 %62, label %18, label %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* nocapture, %"class.std::__1::vector.1"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %4 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 0, i8* %6, align 1
  store i8 0, i8* %4, align 8
  %7 = tail call i8* @_Znwm(i64 24) #15
  %8 = bitcast i8* %7 to %"class.std::__1::basic_string"*
  %9 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %9, i64 24, i1 false) #13
  %10 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = sub i64 %12, %14
  %18 = icmp eq i64 %17, 24
  %19 = inttoptr i64 %14 to %"class.std::__1::basic_string"*
  %20 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %18, label %21, label %79

21:                                               ; preds = %2
  %22 = icmp eq %"class.std::__1::basic_string"* %19, %20
  br i1 %22, label %79, label %23

23:                                               ; preds = %21, %75
  %24 = phi %"class.std::__1::basic_string"* [ %77, %75 ], [ %8, %21 ]
  %25 = phi %"class.std::__1::basic_string"* [ %76, %75 ], [ %19, %21 ]
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp eq i64 %33, %41
  br i1 %42, label %43, label %79

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %47 = select i1 %29, i8* %45, i8* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %51 = select i1 %37, i8* %49, i8* %50
  %52 = icmp eq i64 %33, 0
  br i1 %29, label %59, label %53

53:                                               ; preds = %43
  br i1 %52, label %75, label %54

54:                                               ; preds = %53
  %55 = ptrtoint i8* %45 to i64
  %56 = trunc i64 %55 to i8
  %57 = load i8, i8* %51, align 1
  %58 = icmp eq i8 %57, %56
  br i1 %58, label %60, label %79

59:                                               ; preds = %43
  br i1 %52, label %75, label %72

60:                                               ; preds = %54, %67
  %61 = phi i64 [ %64, %67 ], [ %32, %54 ]
  %62 = phi i8* [ %65, %67 ], [ %46, %54 ]
  %63 = phi i8* [ %68, %67 ], [ %51, %54 ]
  %64 = add i64 %61, -1
  %65 = getelementptr inbounds i8, i8* %62, i64 1
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %63, i64 1
  %69 = load i8, i8* %65, align 1
  %70 = load i8, i8* %68, align 1
  %71 = icmp eq i8 %69, %70
  br i1 %71, label %60, label %79

72:                                               ; preds = %59
  %73 = call i32 @bcmp(i8* %47, i8* %51, i64 %33) #13
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %60, %72, %59, %53
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 1
  %78 = icmp eq %"class.std::__1::basic_string"* %76, %20
  br i1 %78, label %79, label %23

79:                                               ; preds = %21, %2, %67, %75, %72, %54, %23
  %80 = phi i1 [ false, %2 ], [ true, %21 ], [ false, %67 ], [ true, %75 ], [ false, %23 ], [ false, %72 ], [ false, %54 ]
  %81 = getelementptr inbounds i8, i8* %7, i64 23
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = bitcast i8* %7 to i8**
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %84, %79
  call void @_ZdlPv(i8* nonnull %7) #15
  %88 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 0
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %88, align 8
  %90 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  %91 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %92 = icmp eq %"class.std::__1::basic_string"* %89, null
  br i1 %80, label %93, label %118

93:                                               ; preds = %87
  br i1 %92, label %116, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %96 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %95, align 8
  %97 = icmp eq %"class.std::__1::basic_string"* %96, %89
  br i1 %97, label %113, label %98

98:                                               ; preds = %94, %108
  %99 = phi %"class.std::__1::basic_string"* [ %100, %108 ], [ %96, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 -1
  %101 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #15
  br label %108

108:                                              ; preds = %105, %98
  %109 = icmp eq %"class.std::__1::basic_string"* %100, %89
  br i1 %109, label %110, label %98

110:                                              ; preds = %108
  %111 = bitcast %"class.std::__1::vector.1"* %91 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %110, %94
  %114 = phi i8* [ %112, %110 ], [ %90, %94 ]
  store %"class.std::__1::basic_string"* %89, %"class.std::__1::basic_string"** %95, align 8
  call void @_ZdlPv(i8* %114) #15
  %115 = bitcast %"class.std::__1::vector.1"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #13
  br label %116

116:                                              ; preds = %93, %113
  %117 = bitcast %"class.std::__1::vector.1"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false)
  br label %154

118:                                              ; preds = %87
  br i1 %92, label %142, label %119

119:                                              ; preds = %118
  %120 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %121 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %122 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %121, align 8
  %123 = icmp eq %"class.std::__1::basic_string"* %122, %89
  br i1 %123, label %139, label %124

124:                                              ; preds = %119, %134
  %125 = phi %"class.std::__1::basic_string"* [ %126, %134 ], [ %122, %119 ]
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 -1
  %127 = bitcast %"class.std::__1::basic_string"* %126 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #15
  br label %134

134:                                              ; preds = %131, %124
  %135 = icmp eq %"class.std::__1::basic_string"* %126, %89
  br i1 %135, label %136, label %124

136:                                              ; preds = %134
  %137 = bitcast %"class.std::__1::vector.1"* %91 to i8**
  %138 = load i8*, i8** %137, align 8
  br label %139

139:                                              ; preds = %136, %119
  %140 = phi i8* [ %138, %136 ], [ %120, %119 ]
  store %"class.std::__1::basic_string"* %89, %"class.std::__1::basic_string"** %121, align 8
  call void @_ZdlPv(i8* %140) #15
  %141 = bitcast %"class.std::__1::vector.1"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #13
  br label %142

142:                                              ; preds = %118, %139
  %143 = load i64, i64* %13, align 8
  %144 = bitcast %"class.std::__1::vector.1"* %91 to i64*
  store i64 %143, i64* %144, align 8
  %145 = load i64, i64* %16, align 8
  %146 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %147 = bitcast %"class.std::__1::basic_string"** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %149 = bitcast %"class.std::__1::basic_string"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"class.std::__1::basic_string"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"class.std::__1::vector.1"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #13
  br label %154

154:                                              ; preds = %116, %142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList18CreateFromAddrinfoEPK8addrinfo(%"class.net::AddressList"* noalias sret, %struct.addrinfo* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %4 = alloca %"class.std::__1::vector.1", align 8
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = bitcast %"class.net::AddressList"* %0 to i8*
  %7 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #13
  %9 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %1, i64 0, i32 6
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %95, label %12

12:                                               ; preds = %2
  %13 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = tail call i64 @strlen(i8* nonnull %10) #13
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #14
  unreachable

18:                                               ; preds = %12
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  br label %33

28:                                               ; preds = %18
  %29 = trunc i64 %14 to i8
  %30 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %14, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %28, %20
  %34 = phi i8* [ %23, %20 ], [ %13, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %10, i64 %14, i1 false) #13
  br label %35

35:                                               ; preds = %28, %33
  %36 = phi i8* [ %13, %28 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %14
  store i8 0, i8* %37, align 1
  %38 = tail call i8* @_Znwm(i64 24) #15
  %39 = getelementptr inbounds i8, i8* %38, i64 24
  %40 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %35
  %45 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %45, i64 24, i1 false) #13
  %46 = getelementptr inbounds i8, i8* %38, i64 24
  %47 = ptrtoint i8* %38 to i64
  %48 = ptrtoint i8* %39 to i64
  br label %65

49:                                               ; preds = %35
  %50 = bitcast i8* %38 to %"class.std::__1::basic_string"*
  %51 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %50, i8* %52, i64 %54) #13
  %55 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %38, i64 24
  %59 = ptrtoint i8* %38 to i64
  %60 = ptrtoint i8* %39 to i64
  %61 = icmp slt i8 %57, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %49
  %63 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %44, %49, %62
  %66 = phi i64 [ %48, %44 ], [ %60, %49 ], [ %60, %62 ]
  %67 = phi i64 [ %47, %44 ], [ %59, %49 ], [ %59, %62 ]
  %68 = phi i8* [ %46, %44 ], [ %58, %49 ], [ %58, %62 ]
  %69 = ptrtoint i8* %68 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  %70 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  store i64 %67, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"** %71 to i64*
  store i64 %69, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.std::__1::basic_string"** %73 to i64*
  store i64 %66, i64* %74, align 8
  call void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* %0, %"class.std::__1::vector.1"* nonnull %4)
  %75 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %75, align 8
  %77 = icmp eq %"class.std::__1::basic_string"* %76, null
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  br i1 %77, label %95, label %79

79:                                               ; preds = %65
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %81 = icmp eq %"class.std::__1::basic_string"* %80, %76
  br i1 %81, label %94, label %82

82:                                               ; preds = %79, %92
  %83 = phi %"class.std::__1::basic_string"* [ %84, %92 ], [ %80, %79 ]
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 -1
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %89, %82
  %93 = icmp eq %"class.std::__1::basic_string"* %84, %76
  br i1 %93, label %94, label %82

94:                                               ; preds = %92, %79
  store %"class.std::__1::basic_string"* %76, %"class.std::__1::basic_string"** %71, align 8
  call void @_ZdlPv(i8* %78) #15
  br label %95

95:                                               ; preds = %65, %94, %2
  %96 = icmp eq %struct.addrinfo* %1, null
  br i1 %96, label %120, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %99 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %100 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0
  br label %101

101:                                              ; preds = %97, %116
  %102 = phi %struct.addrinfo* [ %1, %97 ], [ %118, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %98) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %98, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %5) #13
  %103 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %102, i64 0, i32 5
  %104 = load %struct.sockaddr*, %struct.sockaddr** %103, align 8
  %105 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %102, i64 0, i32 4
  %106 = load i32, i32* %105, align 8
  %107 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %5, %struct.sockaddr* %104, i32 %106) #13
  br i1 %107, label %108, label %116

108:                                              ; preds = %101
  %109 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %110 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %111 = icmp eq %"class.net::IPEndPoint"* %109, %110
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %109, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %5) #13
  %113 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %109, i64 1
  %114 = ptrtoint %"class.net::IPEndPoint"* %113 to i64
  store i64 %114, i64* %99, align 8
  br label %116

115:                                              ; preds = %108
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %100, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %5) #13
  br label %116

116:                                              ; preds = %115, %112, %101
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %98) #13
  %117 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %102, i64 0, i32 7
  %118 = load %struct.addrinfo*, %struct.addrinfo** %117, align 8
  %119 = icmp eq %struct.addrinfo* %118, null
  br i1 %119, label %120, label %101

120:                                              ; preds = %116, %95
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

declare zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"*, %struct.sockaddr*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList12CopyWithPortERKS0_t(%"class.net::AddressList"* noalias sret, %"class.net::AddressList"* nocapture readonly dereferenceable(48), i16 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.1", align 8
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = bitcast %"class.net::AddressList"* %0 to i8*
  %7 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #13
  %9 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #13
  %11 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 24
  %18 = icmp eq i64 %16, 0
  %19 = inttoptr i64 %15 to %"class.std::__1::basic_string"*
  %20 = inttoptr i64 %13 to %"class.std::__1::basic_string"*
  br i1 %18, label %59, label %21

21:                                               ; preds = %3
  %22 = icmp ugt i64 %17, 768614336404564650
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.1"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %24) #14
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %16) #15
  %27 = bitcast i8* %26 to %"class.std::__1::basic_string"*
  %28 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector.1"* %4 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %17
  %32 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %31, %"class.std::__1::basic_string"** %32, align 8
  %33 = bitcast %"class.std::__1::basic_string"** %28 to i64*
  %34 = ptrtoint i8* %26 to i64
  %35 = icmp eq %"class.std::__1::basic_string"* %19, %20
  br i1 %35, label %57, label %36

36:                                               ; preds = %25, %51
  %37 = phi %"class.std::__1::basic_string"* [ %53, %51 ], [ %27, %25 ]
  %38 = phi %"class.std::__1::basic_string"* [ %52, %51 ], [ %19, %25 ]
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #13
  br label %51

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %37, i8* %48, i64 %50) #13
  br label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %54 = icmp eq %"class.std::__1::basic_string"* %52, %20
  br i1 %54, label %55, label %36

55:                                               ; preds = %51
  %56 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %57

57:                                               ; preds = %55, %25
  %58 = phi i64 [ %34, %25 ], [ %56, %55 ]
  store i64 %58, i64* %33, align 8
  br label %59

59:                                               ; preds = %3, %57
  call void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* %0, %"class.std::__1::vector.1"* nonnull %4)
  %60 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %62 = icmp eq %"class.std::__1::basic_string"* %61, null
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  br i1 %62, label %81, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %65, align 8
  %67 = icmp eq %"class.std::__1::basic_string"* %66, %61
  br i1 %67, label %80, label %68

68:                                               ; preds = %64, %78
  %69 = phi %"class.std::__1::basic_string"* [ %70, %78 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 -1
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #15
  br label %78

78:                                               ; preds = %75, %68
  %79 = icmp eq %"class.std::__1::basic_string"* %70, %61
  br i1 %79, label %80, label %68

80:                                               ; preds = %78, %64
  store %"class.std::__1::basic_string"* %61, %"class.std::__1::basic_string"** %65, align 8
  tail call void @_ZdlPv(i8* %63) #15
  br label %81

81:                                               ; preds = %59, %80
  %82 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %82, align 8
  %84 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %85 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %84, align 8
  %86 = icmp eq %"class.net::IPEndPoint"* %83, %85
  br i1 %86, label %91, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %89 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %90 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0
  br label %92

91:                                               ; preds = %102, %81
  ret void

92:                                               ; preds = %87, %102
  %93 = phi %"class.net::IPEndPoint"* [ %83, %87 ], [ %103, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %88) #13
  %94 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %93, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %5, %"class.net::IPAddress"* dereferenceable(17) %94, i16 zeroext %2) #13
  %95 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %96 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %97 = icmp eq %"class.net::IPEndPoint"* %95, %96
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %95, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %5) #13
  %99 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %95, i64 1
  %100 = ptrtoint %"class.net::IPEndPoint"* %99 to i64
  store i64 %100, i64* %89, align 8
  br label %102

101:                                              ; preds = %92
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %90, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %5) #13
  br label %102

102:                                              ; preds = %98, %101
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %88) #13
  %103 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %93, i64 1
  %104 = icmp eq %"class.net::IPEndPoint"* %103, %85
  br i1 %104, label %91, label %92
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3net11AddressList16GetCanonicalNameEv(%"class.net::AddressList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #13
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 24, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result, i64 0, i32 0, i64 0))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result) #13
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  %17 = inttoptr i64 %15 to %"class.std::__1::basic_string"*
  %18 = select i1 %16, %"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* %17
  ret %"class.std::__1::basic_string"* %18
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList23SetDefaultCanonicalNameEv(%"class.net::AddressList"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1", align 8
  %3 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %4 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0
  %6 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  call void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::IPEndPoint"* %7) #13
  %8 = call i8* @_Znwm(i64 24) #15
  %9 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"** %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = bitcast %"class.std::__1::vector.1"* %2 to i8**
  store i8* %8, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 24
  %13 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %1
  %20 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %20, i64 24, i1 false) #13
  br label %27

21:                                               ; preds = %1
  %22 = bitcast i8* %8 to %"class.std::__1::basic_string"*
  %23 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %22, i8* %24, i64 %26) #13
  br label %27

27:                                               ; preds = %21, %19
  %28 = getelementptr inbounds i8, i8* %8, i64 24
  %29 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %30 = ptrtoint i8* %28 to i64
  store i64 %30, i64* %29, align 8
  call void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* %0, %"class.std::__1::vector.1"* nonnull %2)
  %31 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %32, null
  %34 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  br i1 %33, label %51, label %35

35:                                               ; preds = %27
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %37 = icmp eq %"class.std::__1::basic_string"* %36, %32
  br i1 %37, label %50, label %38

38:                                               ; preds = %35, %48
  %39 = phi %"class.std::__1::basic_string"* [ %40, %48 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 -1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #15
  br label %48

48:                                               ; preds = %45, %38
  %49 = icmp eq %"class.std::__1::basic_string"* %40, %32
  br i1 %49, label %50, label %38

50:                                               ; preds = %48, %35
  store %"class.std::__1::basic_string"* %32, %"class.std::__1::basic_string"** %9, align 8
  call void @_ZdlPv(i8* %34) #15
  br label %51

51:                                               ; preds = %27, %50
  %52 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #15
  br label %59

59:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

declare void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList16AppendDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"*, %"class.std::__1::vector.1"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS6_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueESD_E4typeENSB_IPKS6_EESG_SG_(%"class.std::__1::vector.1"* %3, %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"* %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS6_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueESD_E4typeENSB_IPKS6_EESG_SG_(%"class.std::__1::vector.1"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %8 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %207

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  br i1 %21, label %106, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %45

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %3
  br i1 %29, label %40, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"class.std::__1::basic_string"* [ %36, %30 ], [ %17, %27 ]
  %32 = phi %"class.std::__1::basic_string"* [ %35, %30 ], [ %28, %27 ]
  %33 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #13
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %37 = icmp eq %"class.std::__1::basic_string"* %35, %3
  br i1 %37, label %38, label %30

38:                                               ; preds = %30
  %39 = ptrtoint %"class.std::__1::basic_string"* %36 to i64
  br label %40

40:                                               ; preds = %38, %27
  %41 = phi i64 [ %18, %27 ], [ %39, %38 ]
  store i64 %41, i64* %22, align 8
  %42 = icmp sgt i64 %24, 0
  br i1 %42, label %43, label %207

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  br label %45

45:                                               ; preds = %43, %23
  %46 = phi i64 [ %41, %43 ], [ %18, %23 ]
  %47 = phi %"class.std::__1::basic_string"* [ %44, %43 ], [ %17, %23 ]
  %48 = phi %"class.std::__1::basic_string"* [ %28, %43 ], [ %3, %23 ]
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %10
  %50 = ptrtoint %"class.std::__1::basic_string"* %49 to i64
  %51 = sub i64 %46, %50
  %52 = sdiv exact i64 %51, 24
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %52
  %54 = icmp ult %"class.std::__1::basic_string"* %53, %17
  br i1 %54, label %78, label %57

55:                                               ; preds = %78
  %56 = ptrtoint %"class.std::__1::basic_string"* %84 to i64
  br label %57

57:                                               ; preds = %55, %45
  %58 = phi i64 [ %56, %55 ], [ %46, %45 ]
  store i64 %58, i64* %22, align 8
  %59 = icmp eq i64 %51, 0
  br i1 %59, label %86, label %60

60:                                               ; preds = %57, %72
  %61 = phi %"class.std::__1::basic_string"* [ %64, %72 ], [ %47, %57 ]
  %62 = phi %"class.std::__1::basic_string"* [ %63, %72 ], [ %53, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 -1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #15
  br label %72

72:                                               ; preds = %69, %60
  %73 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #13
  %75 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  store i8 0, i8* %76, align 1
  store i8 0, i8* %74, align 1
  %77 = icmp eq %"class.std::__1::basic_string"* %63, %1
  br i1 %77, label %86, label %60

78:                                               ; preds = %45, %78
  %79 = phi %"class.std::__1::basic_string"* [ %84, %78 ], [ %47, %45 ]
  %80 = phi %"class.std::__1::basic_string"* [ %83, %78 ], [ %53, %45 ]
  %81 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #13
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 1
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 1
  %85 = icmp ult %"class.std::__1::basic_string"* %83, %17
  br i1 %85, label %78, label %55

86:                                               ; preds = %72, %57
  %87 = icmp eq %"class.std::__1::basic_string"* %48, %2
  br i1 %87, label %207, label %88

88:                                               ; preds = %86, %98
  %89 = phi %"class.std::__1::basic_string"* [ %104, %98 ], [ %1, %86 ]
  %90 = phi %"class.std::__1::basic_string"* [ %103, %98 ], [ %2, %86 ]
  %91 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  tail call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %95, %88
  %99 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #13
  %101 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 0, i8* %102, align 1
  store i8 0, i8* %100, align 1
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 1
  %105 = icmp eq %"class.std::__1::basic_string"* %103, %48
  br i1 %105, label %207, label %88

106:                                              ; preds = %12
  %107 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %18, %108
  %110 = sdiv exact i64 %109, 24
  %111 = add nsw i64 %110, %10
  %112 = icmp ugt i64 %111, 768614336404564650
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #14
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %15, %108
  %117 = sdiv exact i64 %116, 24
  %118 = icmp ult i64 %117, 384307168202282325
  br i1 %118, label %122, label %119

119:                                              ; preds = %115
  %120 = sub i64 %5, %108
  %121 = sdiv exact i64 %120, 24
  br label %129

122:                                              ; preds = %115
  %123 = shl nsw i64 %117, 1
  %124 = icmp ult i64 %123, %111
  %125 = select i1 %124, i64 %111, i64 %123
  %126 = sub i64 %5, %108
  %127 = sdiv exact i64 %126, 24
  %128 = icmp eq i64 %125, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %122, %119
  %130 = phi i64 [ %121, %119 ], [ %127, %122 ]
  %131 = phi i64 [ 768614336404564650, %119 ], [ %125, %122 ]
  %132 = mul i64 %131, 24
  %133 = tail call i8* @_Znwm(i64 %132) #15
  %134 = bitcast i8* %133 to %"class.std::__1::basic_string"*
  br label %135

135:                                              ; preds = %129, %122
  %136 = phi i64 [ %130, %129 ], [ %127, %122 ]
  %137 = phi i64 [ %131, %129 ], [ 0, %122 ]
  %138 = phi %"class.std::__1::basic_string"* [ %134, %129 ], [ null, %122 ]
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 %136
  %140 = ptrtoint %"class.std::__1::basic_string"* %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 %137
  %142 = ptrtoint %"class.std::__1::basic_string"* %141 to i64
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 %10
  br label %144

144:                                              ; preds = %135, %144
  %145 = phi %"class.std::__1::basic_string"* [ %150, %144 ], [ %139, %135 ]
  %146 = phi i64 [ %151, %144 ], [ %140, %135 ]
  %147 = phi %"class.std::__1::basic_string"* [ %152, %144 ], [ %2, %135 ]
  %148 = inttoptr i64 %146 to i8*
  %149 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false) #13
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 1
  %151 = ptrtoint %"class.std::__1::basic_string"* %150 to i64
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i64 1
  %153 = icmp eq %"class.std::__1::basic_string"* %143, %150
  br i1 %153, label %154, label %144

154:                                              ; preds = %144
  %155 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %156 = icmp eq %"class.std::__1::basic_string"* %155, %1
  br i1 %156, label %167, label %157

157:                                              ; preds = %154, %157
  %158 = phi %"class.std::__1::basic_string"* [ %160, %157 ], [ %139, %154 ]
  %159 = phi %"class.std::__1::basic_string"* [ %161, %157 ], [ %1, %154 ]
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 -1
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 -1
  %162 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %163 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %163, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 24, i1 false) #13
  %164 = icmp eq %"class.std::__1::basic_string"* %161, %155
  br i1 %164, label %165, label %157

165:                                              ; preds = %157
  %166 = ptrtoint %"class.std::__1::basic_string"* %160 to i64
  br label %167

167:                                              ; preds = %165, %154
  %168 = phi i64 [ %140, %154 ], [ %166, %165 ]
  %169 = phi %"class.std::__1::basic_string"* [ %139, %154 ], [ %160, %165 ]
  %170 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %171 = icmp eq %"class.std::__1::basic_string"* %170, %1
  br i1 %171, label %172, label %174

172:                                              ; preds = %167
  %173 = ptrtoint %"class.std::__1::basic_string"* %169 to i64
  br label %184

174:                                              ; preds = %167, %174
  %175 = phi %"class.std::__1::basic_string"* [ %180, %174 ], [ %143, %167 ]
  %176 = phi %"class.std::__1::basic_string"* [ %179, %174 ], [ %1, %167 ]
  %177 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  %178 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #13
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 1
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 1
  %181 = icmp eq %"class.std::__1::basic_string"* %179, %170
  br i1 %181, label %182, label %174

182:                                              ; preds = %174
  %183 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %184

184:                                              ; preds = %182, %172
  %185 = phi %"class.std::__1::basic_string"* [ %1, %172 ], [ %183, %182 ]
  %186 = phi %"class.std::__1::basic_string"* [ %143, %172 ], [ %180, %182 ]
  %187 = phi i64 [ %173, %172 ], [ %168, %182 ]
  %188 = ptrtoint %"class.std::__1::basic_string"* %186 to i64
  %189 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  store i64 %187, i64* %107, align 8
  store i64 %188, i64* %22, align 8
  store i64 %142, i64* %14, align 8
  %190 = icmp eq %"class.std::__1::basic_string"* %185, %189
  br i1 %190, label %203, label %191

191:                                              ; preds = %184, %201
  %192 = phi %"class.std::__1::basic_string"* [ %193, %201 ], [ %185, %184 ]
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 -1
  %194 = bitcast %"class.std::__1::basic_string"* %193 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %191
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  tail call void @_ZdlPv(i8* %200) #15
  br label %201

201:                                              ; preds = %198, %191
  %202 = icmp eq %"class.std::__1::basic_string"* %193, %189
  br i1 %202, label %203, label %191

203:                                              ; preds = %201, %184
  %204 = icmp eq %"class.std::__1::basic_string"* %189, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %203
  %206 = bitcast %"class.std::__1::basic_string"* %189 to i8*
  tail call void @_ZdlPv(i8* %206) #15
  br label %207

207:                                              ; preds = %98, %205, %203, %40, %86, %4
  %208 = phi %"class.std::__1::basic_string"* [ %1, %4 ], [ %1, %86 ], [ %1, %40 ], [ %139, %203 ], [ %139, %205 ], [ %1, %98 ]
  ret %"class.std::__1::basic_string"* %208
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net11AddressList12NetLogParamsEv(%"class.base::Value"* noalias sret, %"class.net::AddressList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #13
  %6 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  %7 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %3, i8 zeroext 7) #13
  %8 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %10 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %10, align 8
  %12 = icmp eq %"class.net::IPEndPoint"* %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %50

18:                                               ; preds = %56, %2
  %19 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %3) #13
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27, !prof !2

22:                                               ; preds = %18
  %23 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #13
  %26 = call {}* @llvm.invariant.start.p0i8(i64 24, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result, i64 0, i32 0, i64 0)) #13
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result) #13
  br label %27

27:                                               ; preds = %18, %22, %25
  %28 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 1, i32 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.1"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  %35 = inttoptr i64 %33 to %"class.std::__1::basic_string"*
  %36 = select i1 %34, %"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZNK3net11AddressList16GetCanonicalNameEvE17nullstring_result to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* %35
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %44 = select i1 %40, i8* %42, i8* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %39 to i64
  %48 = select i1 %40, i64 %46, i64 %47
  %49 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14, i8* %44, i64 %48) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void

50:                                               ; preds = %13, %56
  %51 = phi %"class.net::IPEndPoint"* [ %9, %13 ], [ %57, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::IPEndPoint"* %51) #13
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #13
  %52 = load i8, i8* %16, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %50, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %57 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %51, i64 1
  %58 = icmp eq %"class.net::IPEndPoint"* %57, %11
  br i1 %58, label %18, label %50
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #2

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11AddressList11DeduplicateEv(%"class.net::AddressList"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector.52", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::flat_map.61", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.net::AddressList"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 20
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %15, label %216

15:                                               ; preds = %1
  %16 = bitcast %"class.std::__1::vector.52"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %3, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %3, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #13
  %20 = icmp ugt i64 %13, 768614336404564650
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::vector.52"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %15
  %24 = mul i64 %13, 24
  %25 = tail call i8* @_Znwm(i64 %24) #15
  %26 = bitcast i8* %25 to %"struct.std::__1::pair.54"*
  %27 = bitcast %"struct.std::__1::pair.54"** %18 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector.52"* %3 to i8**
  store i8* %25, i8** %28, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 %13
  store %"struct.std::__1::pair.54"* %29, %"struct.std::__1::pair.54"** %19, align 8
  %30 = ptrtoint i8* %25 to i64
  br label %31

31:                                               ; preds = %31, %23
  %32 = phi %"struct.std::__1::pair.54"* [ %35, %31 ], [ %26, %23 ]
  %33 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %32, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %33) #13
  %34 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %32, i64 0, i32 1
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %32, i64 1
  %36 = icmp eq %"struct.std::__1::pair.54"* %35, %29
  br i1 %36, label %37, label %31

37:                                               ; preds = %31
  %38 = bitcast %"struct.std::__1::pair.54"** %18 to i64*
  %39 = ptrtoint %"struct.std::__1::pair.54"* %29 to i64
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %40, align 8
  %42 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %43 = icmp eq %"class.net::IPEndPoint"* %41, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = bitcast i32* %4 to i8*
  br label %84

46:                                               ; preds = %96
  %47 = bitcast %"class.std::__1::vector.52"* %3 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %38, align 8
  br label %50

50:                                               ; preds = %37, %46
  %51 = phi i64 [ %49, %46 ], [ %39, %37 ]
  %52 = phi i64 [ %48, %46 ], [ %30, %37 ]
  %53 = bitcast %"class.base::flat_map.61"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %5, i64 0, i32 0
  %58 = bitcast %"class.base::flat_map.61"* %5 to i64*
  store i64 %52, i64* %58, align 8
  %59 = bitcast %"struct.std::__1::pair.54"** %55 to i64*
  store i64 %51, i64* %59, align 8
  %60 = bitcast %"struct.std::__1::pair.54"** %19 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"struct.std::__1::pair.54"** %56 to i64*
  store i64 %61, i64* %62, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #13
  %63 = inttoptr i64 %52 to %"struct.std::__1::pair.54"*
  %64 = inttoptr i64 %51 to %"struct.std::__1::pair.54"*
  call void @_ZN4base8internal9flat_treeIN3net10IPEndPointENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_iEENS5_9allocatorISA_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPSA_EESH_(%"class.base::internal::flat_tree.62"* nonnull %57, %"struct.std::__1::pair.54"* %63, %"struct.std::__1::pair.54"* %64) #13
  %65 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #13
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 24, i1 false) #13
  %69 = load i64, i64* %59, align 8
  %70 = load i64, i64* %58, align 8
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, 24
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"* nonnull %6, i64 %72)
  %73 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %40, align 8
  %74 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %75 = icmp eq %"class.net::IPEndPoint"* %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %50
  %77 = ptrtoint %"class.net::IPEndPoint"* %74 to i64
  %78 = ptrtoint %"class.net::IPEndPoint"* %73 to i64
  %79 = bitcast %"class.net::IPEndPoint"** %67 to i64*
  br label %104

80:                                               ; preds = %50
  %81 = bitcast i32* %2 to i8*
  %82 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %5, i64 0, i32 0, i32 0
  %83 = bitcast %"class.net::IPEndPoint"** %67 to i64*
  br label %163

84:                                               ; preds = %99, %44
  %85 = phi %"struct.std::__1::pair.54"* [ %29, %44 ], [ %100, %99 ]
  %86 = phi %"class.net::IPEndPoint"* [ %41, %44 ], [ %97, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #13
  store i32 0, i32* %4, align 4
  %87 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %19, align 8
  %88 = icmp ult %"struct.std::__1::pair.54"* %85, %87
  br i1 %88, label %89, label %95

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %85, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %90, %"class.net::IPEndPoint"* dereferenceable(20) %86) #13
  %91 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %85, i64 0, i32 1
  %92 = load i32, i32* %4, align 4
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %85, i64 1
  %94 = ptrtoint %"struct.std::__1::pair.54"* %93 to i64
  store i64 %94, i64* %38, align 8
  br label %96

95:                                               ; preds = %84
  call void @_ZNSt3__16vectorINS_4pairIN3net10IPEndPointEiEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRS3_iEEEvDpOT_(%"class.std::__1::vector.52"* nonnull %3, %"class.net::IPEndPoint"* dereferenceable(20) %86, i32* nonnull dereferenceable(4) %4) #13
  br label %96

96:                                               ; preds = %89, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #13
  %97 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %86, i64 1
  %98 = icmp eq %"class.net::IPEndPoint"* %97, %42
  br i1 %98, label %46, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %18, align 8
  br label %84

101:                                              ; preds = %213
  %102 = load i64, i64* %10, align 8
  %103 = load i64, i64* %8, align 8
  br label %104

104:                                              ; preds = %76, %101
  %105 = phi i64* [ %79, %76 ], [ %83, %101 ]
  %106 = phi i64 [ %77, %76 ], [ %103, %101 ]
  %107 = phi i64 [ %78, %76 ], [ %102, %101 ]
  %108 = bitcast %"class.std::__1::vector"* %6 to i64*
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %10, align 8
  store i64 %107, i64* %108, align 8
  %110 = load i64, i64* %105, align 8
  store i64 %110, i64* %8, align 8
  store i64 %106, i64* %105, align 8
  %111 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast %"class.net::IPEndPoint"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.net::IPEndPoint"** %68 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %112, align 8
  store i64 %113, i64* %114, align 8
  %116 = inttoptr i64 %107 to %"class.net::IPEndPoint"*
  %117 = icmp eq i64 %107, 0
  %118 = inttoptr i64 %106 to %"class.net::IPEndPoint"*
  br i1 %117, label %130, label %119

119:                                              ; preds = %104
  %120 = icmp eq %"class.net::IPEndPoint"* %118, %116
  br i1 %120, label %127, label %121

121:                                              ; preds = %119, %121
  %122 = phi %"class.net::IPEndPoint"* [ %123, %121 ], [ %118, %119 ]
  %123 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %122, i64 -1
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %123) #13
  %124 = icmp eq %"class.net::IPEndPoint"* %123, %116
  br i1 %124, label %125, label %121

125:                                              ; preds = %121
  %126 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %66, align 8
  br label %127

127:                                              ; preds = %125, %119
  %128 = phi %"class.net::IPEndPoint"* [ %126, %125 ], [ %116, %119 ]
  store %"class.net::IPEndPoint"* %116, %"class.net::IPEndPoint"** %67, align 8
  %129 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %129) #15
  br label %130

130:                                              ; preds = %104, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #13
  %131 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %54, align 8
  %132 = icmp eq %"struct.std::__1::pair.54"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %130
  %134 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %55, align 8
  %135 = icmp eq %"struct.std::__1::pair.54"* %134, %131
  br i1 %135, label %143, label %136

136:                                              ; preds = %133, %136
  %137 = phi %"struct.std::__1::pair.54"* [ %138, %136 ], [ %134, %133 ]
  %138 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %137, i64 -1
  %139 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %138, i64 0, i32 0
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %139) #13
  %140 = icmp eq %"struct.std::__1::pair.54"* %138, %131
  br i1 %140, label %141, label %136

141:                                              ; preds = %136
  %142 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %54, align 8
  br label %143

143:                                              ; preds = %141, %133
  %144 = phi %"struct.std::__1::pair.54"* [ %142, %141 ], [ %131, %133 ]
  store %"struct.std::__1::pair.54"* %131, %"struct.std::__1::pair.54"** %55, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %145) #15
  br label %146

146:                                              ; preds = %130, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  %147 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %17, align 8
  %148 = icmp eq %"struct.std::__1::pair.54"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %18, align 8
  %151 = icmp eq %"struct.std::__1::pair.54"* %150, %147
  br i1 %151, label %159, label %152

152:                                              ; preds = %149, %152
  %153 = phi %"struct.std::__1::pair.54"* [ %154, %152 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %153, i64 -1
  %155 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %154, i64 0, i32 0
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %155) #13
  %156 = icmp eq %"struct.std::__1::pair.54"* %154, %147
  br i1 %156, label %157, label %152

157:                                              ; preds = %152
  %158 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %17, align 8
  br label %159

159:                                              ; preds = %157, %149
  %160 = phi %"struct.std::__1::pair.54"* [ %158, %157 ], [ %147, %149 ]
  store %"struct.std::__1::pair.54"* %147, %"struct.std::__1::pair.54"** %18, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %161) #15
  br label %162

162:                                              ; preds = %146, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  br label %216

163:                                              ; preds = %80, %213
  %164 = phi %"class.net::IPEndPoint"* [ %73, %80 ], [ %214, %213 ]
  %165 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %54, align 8
  %166 = load i64, i64* %59, align 8
  %167 = ptrtoint %"struct.std::__1::pair.54"* %165 to i64
  %168 = sub i64 %166, %167
  %169 = icmp eq i64 %168, 0
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair.54"*
  br i1 %169, label %188, label %171

171:                                              ; preds = %163
  %172 = sdiv exact i64 %168, 24
  br label %173

173:                                              ; preds = %173, %171
  %174 = phi %"struct.std::__1::pair.54"* [ %184, %173 ], [ %165, %171 ]
  %175 = phi i64 [ %183, %173 ], [ %172, %171 ]
  %176 = lshr i64 %175, 1
  %177 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %174, i64 %176
  %178 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %177, i64 0, i32 0
  %179 = call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %178, %"class.net::IPEndPoint"* dereferenceable(20) %164) #13
  %180 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %177, i64 1
  %181 = xor i64 %176, -1
  %182 = add i64 %175, %181
  %183 = select i1 %179, i64 %182, i64 %176
  %184 = select i1 %179, %"struct.std::__1::pair.54"* %180, %"struct.std::__1::pair.54"* %174
  %185 = icmp eq i64 %183, 0
  br i1 %185, label %186, label %173

186:                                              ; preds = %173
  %187 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %55, align 8
  br label %188

188:                                              ; preds = %186, %163
  %189 = phi %"struct.std::__1::pair.54"* [ %170, %163 ], [ %187, %186 ]
  %190 = phi %"struct.std::__1::pair.54"* [ %165, %163 ], [ %184, %186 ]
  %191 = icmp eq %"struct.std::__1::pair.54"* %190, %189
  br i1 %191, label %195, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %190, i64 0, i32 0
  %194 = call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %164, %"class.net::IPEndPoint"* dereferenceable(20) %193) #13
  br i1 %194, label %195, label %197

195:                                              ; preds = %192, %188
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #13
  store i32 0, i32* %2, align 4
  %196 = call %"struct.std::__1::pair.54"* @_ZNSt3__16vectorINS_4pairIN3net10IPEndPointEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.52"* nonnull %82, %"struct.std::__1::pair.54"* %190, %"class.net::IPEndPoint"* dereferenceable(20) %164, i32* nonnull dereferenceable(4) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #13
  br label %197

197:                                              ; preds = %192, %195
  %198 = phi %"struct.std::__1::pair.54"* [ %196, %195 ], [ %190, %192 ]
  %199 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %198, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %213

202:                                              ; preds = %197
  %203 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %67, align 8
  %204 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %68, align 8
  %205 = icmp eq %"class.net::IPEndPoint"* %203, %204
  br i1 %205, label %209, label %206

206:                                              ; preds = %202
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %203, %"class.net::IPEndPoint"* dereferenceable(20) %164) #13
  %207 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %203, i64 1
  %208 = ptrtoint %"class.net::IPEndPoint"* %207 to i64
  store i64 %208, i64* %83, align 8
  br label %210

209:                                              ; preds = %202
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"class.net::IPEndPoint"* dereferenceable(20) %164) #13
  br label %210

210:                                              ; preds = %206, %209
  %211 = load i32, i32* %199, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %199, align 4
  br label %213

213:                                              ; preds = %197, %210
  %214 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %164, i64 1
  %215 = icmp eq %"class.net::IPEndPoint"* %214, %74
  br i1 %215, label %101, label %163

216:                                              ; preds = %162, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 20
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.net::IPEndPoint"*
  br i1 %10, label %12, label %52

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.net::IPEndPoint"** %13 to i64*
  %15 = icmp ugt i64 %1, 922337203685477580
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 20
  %21 = mul i64 %1, 20
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"class.net::IPEndPoint"*
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %23, i64 %20
  %25 = ptrtoint %"class.net::IPEndPoint"* %24 to i64
  %26 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %23, i64 %1
  %27 = ptrtoint %"class.net::IPEndPoint"* %26 to i64
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %29 = inttoptr i64 %18 to %"class.net::IPEndPoint"*
  %30 = icmp eq %"class.net::IPEndPoint"* %29, %11
  br i1 %30, label %31, label %32

31:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %47

32:                                               ; preds = %17, %32
  %33 = phi %"class.net::IPEndPoint"* [ %35, %32 ], [ %24, %17 ]
  %34 = phi %"class.net::IPEndPoint"* [ %36, %32 ], [ %29, %17 ]
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 -1
  %36 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 -1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %35, %"class.net::IPEndPoint"* dereferenceable(20) %36) #13
  %37 = icmp eq %"class.net::IPEndPoint"* %36, %11
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"class.net::IPEndPoint"* %35 to i64
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %28, align 8
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %13, align 8
  store i64 %39, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %42 = icmp eq %"class.net::IPEndPoint"* %41, %40
  br i1 %42, label %47, label %43

43:                                               ; preds = %38, %43
  %44 = phi %"class.net::IPEndPoint"* [ %45, %43 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %44, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %45) #13
  %46 = icmp eq %"class.net::IPEndPoint"* %45, %40
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %31, %38
  %48 = phi %"class.net::IPEndPoint"* [ %11, %31 ], [ %40, %38 ], [ %40, %43 ]
  %49 = icmp eq %"class.net::IPEndPoint"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %50, %47, %2
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN3net10IPEndPointENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_iEENS5_9allocatorISA_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPSA_EESH_(%"class.base::internal::flat_tree.62"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare", align 1
  %5 = ptrtoint %"struct.std::__1::pair.54"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare", %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"struct.std::__1::pair.54"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 384307168202282325
  %13 = select i1 %12, i64 %9, i64 384307168202282325
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 24
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #13
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"struct.std::__1::pair.54"* %1, %"struct.std::__1::pair.54"* %2, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.54"* null, i64 0) #13
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"struct.std::__1::pair.54"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"struct.std::__1::pair.54"* %1, %"struct.std::__1::pair.54"* %2, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.54"* nonnull %24, i64 %15) #13
  call void @_ZdlPv(i8* nonnull %17) #15
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"struct.std::__1::pair.54"* %1, %2
  br i1 %26, label %70, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.std::__1::pair.54"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %28, i64 1
  %30 = icmp eq %"struct.std::__1::pair.54"* %29, %2
  br i1 %30, label %70, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %28, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %29, i64 0, i32 0
  %34 = call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %32, %"class.net::IPEndPoint"* dereferenceable(20) %33) #13
  br i1 %34, label %27, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"struct.std::__1::pair.54"* %28 to i64
  %37 = icmp eq %"struct.std::__1::pair.54"* %28, %2
  br i1 %37, label %70, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %28, i64 2
  %40 = icmp eq %"struct.std::__1::pair.54"* %39, %2
  br i1 %40, label %66, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %28, i64 1
  br label %43

43:                                               ; preds = %59, %41
  %44 = phi %"struct.std::__1::pair.54"* [ %63, %59 ], [ %28, %41 ]
  %45 = phi %"struct.std::__1::pair.54"* [ %61, %59 ], [ %39, %41 ]
  %46 = phi %"struct.std::__1::pair.54"* [ %45, %59 ], [ %42, %41 ]
  %47 = phi i64 [ %60, %59 ], [ %36, %41 ]
  %48 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %44, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %45, i64 0, i32 0
  %50 = call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %48, %"class.net::IPEndPoint"* dereferenceable(20) %49) #13
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %44, i64 1
  %53 = ptrtoint %"struct.std::__1::pair.54"* %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 2 %55, i64 20, i1 false) #13
  %56 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %46, i64 1, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %44, i64 1, i32 1
  store i32 %57, i32* %58, align 4
  br label %59

59:                                               ; preds = %51, %43
  %60 = phi i64 [ %47, %43 ], [ %53, %51 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %45, i64 1
  %62 = icmp eq %"struct.std::__1::pair.54"* %61, %2
  %63 = inttoptr i64 %60 to %"struct.std::__1::pair.54"*
  br i1 %62, label %64, label %43

64:                                               ; preds = %59
  %65 = inttoptr i64 %60 to %"struct.std::__1::pair.54"*
  br label %66

66:                                               ; preds = %64, %38
  %67 = phi %"struct.std::__1::pair.54"* [ %28, %38 ], [ %65, %64 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %67, i64 1
  %69 = ptrtoint %"struct.std::__1::pair.54"* %68 to i64
  br label %70

70:                                               ; preds = %27, %25, %35, %66
  %71 = phi i64 [ %69, %66 ], [ %36, %35 ], [ %5, %25 ], [ %5, %27 ]
  %72 = inttoptr i64 %71 to %"struct.std::__1::pair.54"*
  %73 = icmp eq %"struct.std::__1::pair.54"* %72, %2
  br i1 %73, label %101, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.base::internal::flat_tree.62", %"class.base::internal::flat_tree.62"* %0, i64 0, i32 0, i32 0, i32 1
  %76 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %75, align 8
  %77 = icmp eq %"struct.std::__1::pair.54"* %76, %2
  br i1 %77, label %91, label %78

78:                                               ; preds = %74, %78
  %79 = phi %"struct.std::__1::pair.54"* [ %87, %78 ], [ %72, %74 ]
  %80 = phi %"struct.std::__1::pair.54"* [ %86, %78 ], [ %2, %74 ]
  %81 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %82 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 2 %82, i64 20, i1 false) #13
  %83 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %80, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %79, i64 0, i32 1
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %80, i64 1
  %87 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %79, i64 1
  %88 = icmp eq %"struct.std::__1::pair.54"* %86, %76
  br i1 %88, label %89, label %78

89:                                               ; preds = %78
  %90 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %75, align 8
  br label %91

91:                                               ; preds = %89, %74
  %92 = phi %"struct.std::__1::pair.54"* [ %2, %74 ], [ %90, %89 ]
  %93 = phi %"struct.std::__1::pair.54"* [ %72, %74 ], [ %87, %89 ]
  %94 = icmp eq %"struct.std::__1::pair.54"* %92, %93
  br i1 %94, label %100, label %95

95:                                               ; preds = %91, %95
  %96 = phi %"struct.std::__1::pair.54"* [ %97, %95 ], [ %92, %91 ]
  %97 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %96, i64 -1
  %98 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %97, i64 0, i32 0
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %98) #13
  %99 = icmp eq %"struct.std::__1::pair.54"* %97, %93
  br i1 %99, label %100, label %95

100:                                              ; preds = %95, %91
  store %"struct.std::__1::pair.54"* %93, %"struct.std::__1::pair.54"** %75, align 8
  br label %101

101:                                              ; preds = %70, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.54"*, i64) local_unnamed_addr #0 comdat {
  %7 = alloca %"struct.std::__1::pair.54", align 4
  %8 = alloca %"class.net::IPEndPoint", align 2
  switch i64 %3, label %22 [
    i64 0, label %131
    i64 1, label %131
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %11, %"class.net::IPEndPoint"* dereferenceable(20) %12) #13
  br i1 %13, label %14, label %131

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %15, i8 -86, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %8, %"class.net::IPEndPoint"* dereferenceable(20) %12) #13
  %16 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %16, i8* align 2 %17, i64 20, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %17, i8* nonnull align 2 %15, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #13
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 -1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  store i32 %21, i32* %18, align 4
  store i32 %20, i32* %19, align 4
  br label %131

22:                                               ; preds = %6
  %23 = icmp slt i64 %3, 1
  br i1 %23, label %24, label %59

24:                                               ; preds = %22
  %25 = icmp eq %"struct.std::__1::pair.54"* %0, %1
  br i1 %25, label %131, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 1
  %28 = icmp eq %"struct.std::__1::pair.54"* %27, %1
  br i1 %28, label %131, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %31 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %7, i64 0, i32 1
  br label %33

33:                                               ; preds = %45, %29
  %34 = phi %"struct.std::__1::pair.54"* [ %27, %29 ], [ %50, %45 ]
  %35 = phi %"struct.std::__1::pair.54"* [ %0, %29 ], [ %34, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 -86, i64 24, i1 false) #13
  %36 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %34, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %31, %"class.net::IPEndPoint"* dereferenceable(20) %36) #13
  %37 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %35, i64 1, i32 1
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %32, align 4
  %39 = icmp eq %"struct.std::__1::pair.54"* %34, %0
  br i1 %39, label %45, label %40

40:                                               ; preds = %33, %52
  %41 = phi %"struct.std::__1::pair.54"* [ %42, %52 ], [ %34, %33 ]
  %42 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %42, i64 0, i32 0
  %44 = call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* nonnull %31, %"class.net::IPEndPoint"* dereferenceable(20) %43) #13
  br i1 %44, label %52, label %45

45:                                               ; preds = %52, %40, %33
  %46 = phi %"struct.std::__1::pair.54"* [ %0, %33 ], [ %41, %40 ], [ %0, %52 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* nonnull align 4 %30, i64 20, i1 false) #13
  %48 = load i32, i32* %32, align 4
  %49 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %46, i64 0, i32 1
  store i32 %48, i32* %49, align 4
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  %50 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %34, i64 1
  %51 = icmp eq %"struct.std::__1::pair.54"* %50, %1
  br i1 %51, label %131, label %33

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %54 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 2 %54, i64 20, i1 false) #13
  %55 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %41, i64 -1, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %41, i64 0, i32 1
  store i32 %56, i32* %57, align 4
  %58 = icmp eq %"struct.std::__1::pair.54"* %42, %0
  br i1 %58, label %45, label %40

59:                                               ; preds = %22
  %60 = lshr i64 %3, 1
  %61 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 %60
  %62 = icmp sgt i64 %3, %5
  br i1 %62, label %129, label %63

63:                                               ; preds = %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"struct.std::__1::pair.54"* %0, %"struct.std::__1::pair.54"* %61, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2, i64 %60, %"struct.std::__1::pair.54"* %4)
  %64 = sub nsw i64 %3, %60
  %65 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 %60
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"struct.std::__1::pair.54"* %61, %"struct.std::__1::pair.54"* %1, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2, i64 %64, %"struct.std::__1::pair.54"* %65)
  %66 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 %3
  br label %69

67:                                               ; preds = %98
  %68 = icmp eq %"struct.std::__1::pair.54"* %100, %66
  br i1 %68, label %118, label %107

69:                                               ; preds = %63, %98
  %70 = phi %"struct.std::__1::pair.54"* [ %101, %98 ], [ %4, %63 ]
  %71 = phi %"struct.std::__1::pair.54"* [ %100, %98 ], [ %65, %63 ]
  %72 = phi %"struct.std::__1::pair.54"* [ %105, %98 ], [ %0, %63 ]
  %73 = icmp eq %"struct.std::__1::pair.54"* %71, %66
  br i1 %73, label %74, label %87

74:                                               ; preds = %69
  %75 = icmp eq %"struct.std::__1::pair.54"* %70, %65
  br i1 %75, label %118, label %76

76:                                               ; preds = %74, %76
  %77 = phi %"struct.std::__1::pair.54"* [ %84, %76 ], [ %70, %74 ]
  %78 = phi %"struct.std::__1::pair.54"* [ %85, %76 ], [ %72, %74 ]
  %79 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 2 %80, i64 20, i1 false) #13
  %81 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %77, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %78, i64 0, i32 1
  store i32 %82, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %77, i64 1
  %85 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %78, i64 1
  %86 = icmp eq %"struct.std::__1::pair.54"* %84, %65
  br i1 %86, label %118, label %76

87:                                               ; preds = %69
  %88 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %71, i64 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %70, i64 0, i32 0
  %90 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %88, %"class.net::IPEndPoint"* dereferenceable(20) %89) #13
  %91 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br i1 %90, label %92, label %95

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 2 %93, i64 20, i1 false) #13
  %94 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %71, i64 1
  br label %98

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 2 %96, i64 20, i1 false) #13
  %97 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %70, i64 1
  br label %98

98:                                               ; preds = %95, %92
  %99 = phi %"struct.std::__1::pair.54"* [ %71, %92 ], [ %70, %95 ]
  %100 = phi %"struct.std::__1::pair.54"* [ %94, %92 ], [ %71, %95 ]
  %101 = phi %"struct.std::__1::pair.54"* [ %70, %92 ], [ %97, %95 ]
  %102 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %72, i64 0, i32 1
  store i32 %103, i32* %104, align 4
  %105 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %72, i64 1
  %106 = icmp eq %"struct.std::__1::pair.54"* %101, %65
  br i1 %106, label %67, label %69

107:                                              ; preds = %67, %107
  %108 = phi %"struct.std::__1::pair.54"* [ %115, %107 ], [ %100, %67 ]
  %109 = phi %"struct.std::__1::pair.54"* [ %116, %107 ], [ %105, %67 ]
  %110 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %111 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 2 %111, i64 20, i1 false) #13
  %112 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %108, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %109, i64 0, i32 1
  store i32 %113, i32* %114, align 4
  %115 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %108, i64 1
  %116 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %109, i64 1
  %117 = icmp eq %"struct.std::__1::pair.54"* %115, %66
  br i1 %117, label %118, label %107

118:                                              ; preds = %107, %76, %67, %74
  %119 = icmp eq %"struct.std::__1::pair.54"* %4, null
  %120 = icmp eq i64 %3, 0
  %121 = or i1 %120, %119
  br i1 %121, label %131, label %122

122:                                              ; preds = %118, %122
  %123 = phi i64 [ %126, %122 ], [ 0, %118 ]
  %124 = phi %"struct.std::__1::pair.54"* [ %127, %122 ], [ %4, %118 ]
  %125 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %124, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %125) #13
  %126 = add nuw i64 %123, 1
  %127 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %124, i64 1
  %128 = icmp eq i64 %126, %3
  br i1 %128, label %131, label %122

129:                                              ; preds = %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"struct.std::__1::pair.54"* %0, %"struct.std::__1::pair.54"* %61, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2, i64 %60, %"struct.std::__1::pair.54"* %4, i64 %5)
  %130 = sub nsw i64 %3, %60
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"struct.std::__1::pair.54"* %61, %"struct.std::__1::pair.54"* %1, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2, i64 %130, %"struct.std::__1::pair.54"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"struct.std::__1::pair.54"* %0, %"struct.std::__1::pair.54"* %61, %"struct.std::__1::pair.54"* %1, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2, i64 %60, i64 %130, %"struct.std::__1::pair.54"* %4, i64 %5)
  br label %131

131:                                              ; preds = %122, %45, %118, %26, %24, %129, %9, %14, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.54"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %33 [
    i64 0, label %41
    i64 1, label %6
    i64 2, label %12
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %7, %"class.net::IPEndPoint"* dereferenceable(20) %8) #13
  %9 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  br label %41

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 -1, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %13, %"class.net::IPEndPoint"* dereferenceable(20) %14) #13
  %16 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 0, i32 0
  br i1 %15, label %17, label %25

17:                                               ; preds = %12
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %16, %"class.net::IPEndPoint"* dereferenceable(20) %13) #13
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 -1, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 1, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %21, %"class.net::IPEndPoint"* dereferenceable(20) %14) #13
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 1, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  br label %41

25:                                               ; preds = %12
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %16, %"class.net::IPEndPoint"* dereferenceable(20) %14) #13
  %26 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 1, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %29, %"class.net::IPEndPoint"* dereferenceable(20) %13) #13
  %30 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 1, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 -1, i32 1
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %30, align 4
  br label %41

33:                                               ; preds = %5
  %34 = icmp slt i64 %3, 9
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_PNS_15iterator_traitsISL_E10value_typeET_(%"struct.std::__1::pair.54"* %0, %"struct.std::__1::pair.54"* %1, %"struct.std::__1::pair.54"* %4, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2)
  br label %41

36:                                               ; preds = %33
  %37 = lshr i64 %3, 1
  %38 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 %37
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"struct.std::__1::pair.54"* %0, %"struct.std::__1::pair.54"* %38, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2, i64 %37, %"struct.std::__1::pair.54"* %4, i64 %37)
  %39 = sub nsw i64 %3, %37
  %40 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %4, i64 %37
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"struct.std::__1::pair.54"* %38, %"struct.std::__1::pair.54"* %1, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2, i64 %39, %"struct.std::__1::pair.54"* %40, i64 %39)
  tail call void @_ZNSt3__122__merge_move_constructIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EESK_EEvT0_SL_T1_SM_PNS_15iterator_traitsISL_E10value_typeET_(%"struct.std::__1::pair.54"* %0, %"struct.std::__1::pair.54"* %38, %"struct.std::__1::pair.54"* %38, %"struct.std::__1::pair.54"* %1, %"struct.std::__1::pair.54"* %4, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %2)
  br label %41

41:                                               ; preds = %25, %17, %5, %36, %35, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.54"*, i64) local_unnamed_addr #0 comdat {
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %141, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"struct.std::__1::pair.54"* %1 to i64
  %13 = ptrtoint %"struct.std::__1::pair.54"* %0 to i64
  br label %14

14:                                               ; preds = %11, %134
  %15 = phi %"struct.std::__1::pair.54"* [ %139, %134 ], [ %2, %11 ]
  %16 = phi i64 [ %138, %134 ], [ %4, %11 ]
  %17 = phi i64 [ %137, %134 ], [ %5, %11 ]
  %18 = phi i64 [ %136, %134 ], [ %12, %11 ]
  %19 = phi i64 [ %135, %134 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %141, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"struct.std::__1::pair.54"*
  %27 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 0, i32 0
  br label %31

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to %"struct.std::__1::pair.54"*
  %30 = inttoptr i64 %18 to %"struct.std::__1::pair.54"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeE(%"struct.std::__1::pair.54"* %29, %"struct.std::__1::pair.54"* %30, %"struct.std::__1::pair.54"* %15, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %3, i64 %16, i64 %17, %"struct.std::__1::pair.54"* %6)
  br label %141

31:                                               ; preds = %25, %37
  %32 = phi i64 [ %16, %25 ], [ %40, %37 ]
  %33 = phi i64 [ %19, %25 ], [ %39, %37 ]
  %34 = inttoptr i64 %33 to %"struct.std::__1::pair.54"*
  %35 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %34, i64 0, i32 0
  %36 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %27, %"class.net::IPEndPoint"* dereferenceable(20) %35) #13
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %34, i64 1
  %39 = ptrtoint %"struct.std::__1::pair.54"* %38 to i64
  %40 = add nsw i64 %32, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %141, label %31

42:                                               ; preds = %31
  %43 = inttoptr i64 %33 to %"struct.std::__1::pair.54"*
  %44 = icmp slt i64 %32, %17
  br i1 %44, label %45, label %72

45:                                               ; preds = %42
  %46 = sdiv i64 %17, 2
  %47 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 %46
  %48 = ptrtoint %"struct.std::__1::pair.54"* %47 to i64
  %49 = sub i64 %18, %33
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %45
  %52 = sdiv exact i64 %49, 24
  %53 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %47, i64 0, i32 0
  br label %54

54:                                               ; preds = %54, %51
  %55 = phi %"struct.std::__1::pair.54"* [ %43, %51 ], [ %65, %54 ]
  %56 = phi i64 [ %52, %51 ], [ %64, %54 ]
  %57 = lshr i64 %56, 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %55, i64 %57
  %59 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %58, i64 0, i32 0
  %60 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %53, %"class.net::IPEndPoint"* dereferenceable(20) %59) #13
  %61 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %58, i64 1
  %62 = xor i64 %57, -1
  %63 = add i64 %56, %62
  %64 = select i1 %60, i64 %57, i64 %63
  %65 = select i1 %60, %"struct.std::__1::pair.54"* %55, %"struct.std::__1::pair.54"* %61
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %67, label %54

67:                                               ; preds = %54, %45
  %68 = phi %"struct.std::__1::pair.54"* [ %43, %45 ], [ %65, %54 ]
  %69 = ptrtoint %"struct.std::__1::pair.54"* %68 to i64
  %70 = sub i64 %69, %33
  %71 = sdiv exact i64 %70, 24
  br label %112

72:                                               ; preds = %42
  %73 = icmp eq i64 %32, 1
  br i1 %73, label %74, label %84

74:                                               ; preds = %72
  %75 = inttoptr i64 %18 to %"struct.std::__1::pair.54"*
  %76 = inttoptr i64 %33 to %"struct.std::__1::pair.54"*
  %77 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %77) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %77, i8 -86, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %9, %"class.net::IPEndPoint"* dereferenceable(20) %35) #13
  %78 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %79 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %78, i8* align 2 %79, i64 20, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %79, i8* nonnull align 2 %77, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %77) #13
  %80 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %76, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %75, i64 0, i32 1
  %82 = load i32, i32* %80, align 4
  %83 = load i32, i32* %81, align 4
  store i32 %83, i32* %80, align 4
  store i32 %82, i32* %81, align 4
  br label %141

84:                                               ; preds = %72
  %85 = sdiv i64 %32, 2
  %86 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %43, i64 %85
  %87 = ptrtoint %"struct.std::__1::pair.54"* %86 to i64
  %88 = ptrtoint %"struct.std::__1::pair.54"* %15 to i64
  %89 = sub i64 %88, %18
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %107, label %91

91:                                               ; preds = %84
  %92 = sdiv exact i64 %89, 24
  %93 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %86, i64 0, i32 0
  br label %94

94:                                               ; preds = %94, %91
  %95 = phi %"struct.std::__1::pair.54"* [ %26, %91 ], [ %105, %94 ]
  %96 = phi i64 [ %92, %91 ], [ %104, %94 ]
  %97 = lshr i64 %96, 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %95, i64 %97
  %99 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %98, i64 0, i32 0
  %100 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %99, %"class.net::IPEndPoint"* dereferenceable(20) %93) #13
  %101 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %98, i64 1
  %102 = xor i64 %97, -1
  %103 = add i64 %96, %102
  %104 = select i1 %100, i64 %103, i64 %97
  %105 = select i1 %100, %"struct.std::__1::pair.54"* %101, %"struct.std::__1::pair.54"* %95
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %107, label %94

107:                                              ; preds = %94, %84
  %108 = phi %"struct.std::__1::pair.54"* [ %26, %84 ], [ %105, %94 ]
  %109 = ptrtoint %"struct.std::__1::pair.54"* %108 to i64
  %110 = sub i64 %109, %18
  %111 = sdiv exact i64 %110, 24
  br label %112

112:                                              ; preds = %107, %67
  %113 = phi i64 [ %69, %67 ], [ %87, %107 ]
  %114 = phi i64 [ %48, %67 ], [ %109, %107 ]
  %115 = phi i64 [ %46, %67 ], [ %111, %107 ]
  %116 = phi i64 [ %71, %67 ], [ %85, %107 ]
  %117 = sub nsw i64 %32, %116
  %118 = sub nsw i64 %17, %115
  %119 = inttoptr i64 %113 to %"struct.std::__1::pair.54"*
  %120 = inttoptr i64 %114 to %"struct.std::__1::pair.54"*
  %121 = icmp eq %"struct.std::__1::pair.54"* %119, %26
  br i1 %121, label %126, label %122

122:                                              ; preds = %112
  %123 = icmp eq %"struct.std::__1::pair.54"* %26, %120
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = tail call %"struct.std::__1::pair.54"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPNS_4pairIN3net10IPEndPointEiEEEEEET_S8_S8_S8_(%"struct.std::__1::pair.54"* %119, %"struct.std::__1::pair.54"* %26, %"struct.std::__1::pair.54"* %120) #13
  br label %126

126:                                              ; preds = %112, %122, %124
  %127 = phi %"struct.std::__1::pair.54"* [ %125, %124 ], [ %119, %122 ], [ %120, %112 ]
  %128 = add nsw i64 %116, %115
  %129 = add nsw i64 %117, %118
  %130 = icmp slt i64 %128, %129
  br i1 %130, label %131, label %133

131:                                              ; preds = %126
  %132 = ptrtoint %"struct.std::__1::pair.54"* %127 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"struct.std::__1::pair.54"* %43, %"struct.std::__1::pair.54"* %119, %"struct.std::__1::pair.54"* %127, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %3, i64 %116, i64 %115, %"struct.std::__1::pair.54"* %6, i64 %7)
  br label %134

133:                                              ; preds = %126
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"struct.std::__1::pair.54"* %127, %"struct.std::__1::pair.54"* %120, %"struct.std::__1::pair.54"* %15, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1) %3, i64 %117, i64 %118, %"struct.std::__1::pair.54"* %6, i64 %7)
  br label %134

134:                                              ; preds = %131, %133
  %135 = phi i64 [ %132, %131 ], [ %33, %133 ]
  %136 = phi i64 [ %114, %131 ], [ %113, %133 ]
  %137 = phi i64 [ %118, %131 ], [ %115, %133 ]
  %138 = phi i64 [ %117, %131 ], [ %116, %133 ]
  %139 = phi %"struct.std::__1::pair.54"* [ %15, %131 ], [ %127, %133 ]
  %140 = icmp eq i64 %137, 0
  br i1 %140, label %141, label %14

141:                                              ; preds = %134, %23, %37, %8, %74, %28
  ret void
}

declare zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #2

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_PNS_15iterator_traitsISL_E10value_typeET_(%"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.std::__1::pair.54"* %0, %1
  br i1 %5, label %54, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %7, %"class.net::IPEndPoint"* dereferenceable(20) %8) #13
  %9 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %2, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %0, i64 1
  %13 = icmp eq %"struct.std::__1::pair.54"* %12, %1
  br i1 %13, label %54, label %14

14:                                               ; preds = %6, %51
  %15 = phi %"struct.std::__1::pair.54"* [ %52, %51 ], [ %12, %6 ]
  %16 = phi %"struct.std::__1::pair.54"* [ %18, %51 ], [ %2, %6 ]
  %17 = phi %"struct.std::__1::pair.54"* [ %15, %51 ], [ %0, %6 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %15, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %19, %"class.net::IPEndPoint"* dereferenceable(20) %20) #13
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %18, i64 0, i32 0
  br i1 %21, label %23, label %47

23:                                               ; preds = %14
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %22, %"class.net::IPEndPoint"* dereferenceable(20) %20) #13
  %24 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 1, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %24, align 4
  %27 = icmp eq %"struct.std::__1::pair.54"* %16, %2
  br i1 %27, label %40, label %28

28:                                               ; preds = %23, %33
  %29 = phi %"struct.std::__1::pair.54"* [ %30, %33 ], [ %16, %23 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %29, i64 -1
  %31 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %30, i64 0, i32 0
  %32 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %19, %"class.net::IPEndPoint"* dereferenceable(20) %31) #13
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %35 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 2 %35, i64 20, i1 false) #13
  %36 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %29, i64 -1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %29, i64 0, i32 1
  store i32 %37, i32* %38, align 4
  %39 = icmp eq %"struct.std::__1::pair.54"* %30, %2
  br i1 %39, label %40, label %28

40:                                               ; preds = %28, %33, %23
  %41 = phi %"struct.std::__1::pair.54"* [ %2, %23 ], [ %2, %33 ], [ %29, %28 ]
  %42 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %43 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 2 %43, i64 20, i1 false) #13
  %44 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %41, i64 0, i32 1
  store i32 %45, i32* %46, align 4
  br label %51

47:                                               ; preds = %14
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %22, %"class.net::IPEndPoint"* dereferenceable(20) %19) #13
  %48 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 1, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %48, align 4
  br label %51

51:                                               ; preds = %47, %40
  %52 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %15, i64 1
  %53 = icmp eq %"struct.std::__1::pair.54"* %52, %1
  br i1 %53, label %54, label %14

54:                                               ; preds = %51, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__122__merge_move_constructIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EESK_EEvT0_SL_T1_SM_PNS_15iterator_traitsISL_E10value_typeET_(%"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"struct.std::__1::pair.54"* %0, %1
  br i1 %7, label %8, label %23

8:                                                ; preds = %50, %6
  %9 = phi %"struct.std::__1::pair.54"* [ %2, %6 ], [ %52, %50 ]
  %10 = phi %"struct.std::__1::pair.54"* [ %4, %6 ], [ %57, %50 ]
  %11 = icmp eq %"struct.std::__1::pair.54"* %9, %3
  br i1 %11, label %59, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.std::__1::pair.54"* [ %21, %12 ], [ %10, %8 ]
  %14 = phi %"struct.std::__1::pair.54"* [ %20, %12 ], [ %9, %8 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %13, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %14, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %15, %"class.net::IPEndPoint"* dereferenceable(20) %16) #13
  %17 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %13, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %14, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %14, i64 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %13, i64 1
  %22 = icmp eq %"struct.std::__1::pair.54"* %20, %3
  br i1 %22, label %59, label %12

23:                                               ; preds = %6, %50
  %24 = phi %"struct.std::__1::pair.54"* [ %57, %50 ], [ %4, %6 ]
  %25 = phi %"struct.std::__1::pair.54"* [ %53, %50 ], [ %0, %6 ]
  %26 = phi %"struct.std::__1::pair.54"* [ %52, %50 ], [ %2, %6 ]
  %27 = icmp eq %"struct.std::__1::pair.54"* %26, %3
  br i1 %27, label %28, label %41

28:                                               ; preds = %23
  %29 = icmp eq %"struct.std::__1::pair.54"* %25, %1
  br i1 %29, label %59, label %30

30:                                               ; preds = %28, %30
  %31 = phi %"struct.std::__1::pair.54"* [ %39, %30 ], [ %24, %28 ]
  %32 = phi %"struct.std::__1::pair.54"* [ %38, %30 ], [ %25, %28 ]
  %33 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %32, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %33, %"class.net::IPEndPoint"* dereferenceable(20) %34) #13
  %35 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %31, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %32, i64 1
  %39 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %31, i64 1
  %40 = icmp eq %"struct.std::__1::pair.54"* %38, %1
  br i1 %40, label %59, label %30

41:                                               ; preds = %23
  %42 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %25, i64 0, i32 0
  %44 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %42, %"class.net::IPEndPoint"* dereferenceable(20) %43) #13
  %45 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %24, i64 0, i32 0
  br i1 %44, label %46, label %48

46:                                               ; preds = %41
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %45, %"class.net::IPEndPoint"* dereferenceable(20) %42) #13
  %47 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 1
  br label %50

48:                                               ; preds = %41
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %45, %"class.net::IPEndPoint"* dereferenceable(20) %43) #13
  %49 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %25, i64 1
  br label %50

50:                                               ; preds = %46, %48
  %51 = phi %"struct.std::__1::pair.54"* [ %26, %46 ], [ %25, %48 ]
  %52 = phi %"struct.std::__1::pair.54"* [ %47, %46 ], [ %26, %48 ]
  %53 = phi %"struct.std::__1::pair.54"* [ %25, %46 ], [ %49, %48 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %24, i64 0, i32 1
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %24, i64 1
  %58 = icmp eq %"struct.std::__1::pair.54"* %53, %1
  br i1 %58, label %8, label %23

59:                                               ; preds = %30, %12, %28, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3net10IPEndPointENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS5_iEENS_9allocatorISB_EEEEE13value_compareENS_11__wrap_iterIPSB_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeE(%"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.base::internal::flat_tree<net::IPEndPoint, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<net::IPEndPoint, int>, std::__1::allocator<std::__1::pair<net::IPEndPoint, int> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.54"*) local_unnamed_addr #0 comdat {
  %8 = icmp sgt i64 %4, %5
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = icmp eq %"struct.std::__1::pair.54"* %0, %1
  br i1 %10, label %124, label %51

11:                                               ; preds = %7
  %12 = icmp eq %"struct.std::__1::pair.54"* %1, %2
  br i1 %12, label %124, label %99

13:                                               ; preds = %51
  %14 = icmp eq %"struct.std::__1::pair.54"* %62, %6
  br i1 %14, label %112, label %15

15:                                               ; preds = %13, %42
  %16 = phi %"struct.std::__1::pair.54"* [ %45, %42 ], [ %6, %13 ]
  %17 = phi %"struct.std::__1::pair.54"* [ %49, %42 ], [ %0, %13 ]
  %18 = phi %"struct.std::__1::pair.54"* [ %44, %42 ], [ %1, %13 ]
  %19 = icmp eq %"struct.std::__1::pair.54"* %18, %2
  br i1 %19, label %20, label %31

20:                                               ; preds = %15, %20
  %21 = phi %"struct.std::__1::pair.54"* [ %29, %20 ], [ %17, %15 ]
  %22 = phi %"struct.std::__1::pair.54"* [ %28, %20 ], [ %16, %15 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %24 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 2 %24, i64 20, i1 false) #13
  %25 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %21, i64 0, i32 1
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %22, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %21, i64 1
  %30 = icmp eq %"struct.std::__1::pair.54"* %22, %52
  br i1 %30, label %112, label %20

31:                                               ; preds = %15
  %32 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %18, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 0
  %34 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %32, %"class.net::IPEndPoint"* dereferenceable(20) %33) #13
  %35 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br i1 %34, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 2 %37, i64 20, i1 false) #13
  %38 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %18, i64 1
  br label %42

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 2 %40, i64 20, i1 false) #13
  %41 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 1
  br label %42

42:                                               ; preds = %39, %36
  %43 = phi %"struct.std::__1::pair.54"* [ %18, %36 ], [ %16, %39 ]
  %44 = phi %"struct.std::__1::pair.54"* [ %38, %36 ], [ %18, %39 ]
  %45 = phi %"struct.std::__1::pair.54"* [ %16, %36 ], [ %41, %39 ]
  %46 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 1
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1
  %50 = icmp eq %"struct.std::__1::pair.54"* %45, %62
  br i1 %50, label %112, label %15

51:                                               ; preds = %9, %51
  %52 = phi %"struct.std::__1::pair.54"* [ %62, %51 ], [ %6, %9 ]
  %53 = phi %"struct.std::__1::pair.54"* [ %61, %51 ], [ %0, %9 ]
  %54 = phi i64 [ %60, %51 ], [ 0, %9 ]
  %55 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %52, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %53, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %55, %"class.net::IPEndPoint"* dereferenceable(20) %56) #13
  %57 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %52, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %53, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %57, align 4
  %60 = add i64 %54, 1
  %61 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %53, i64 1
  %62 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %52, i64 1
  %63 = icmp eq %"struct.std::__1::pair.54"* %61, %1
  br i1 %63, label %13, label %51

64:                                               ; preds = %99
  %65 = icmp eq %"struct.std::__1::pair.54"* %110, %6
  br i1 %65, label %112, label %66

66:                                               ; preds = %64, %82
  %67 = phi %"struct.std::__1::pair.54"* [ %97, %82 ], [ %2, %64 ]
  %68 = phi %"struct.std::__1::pair.54"* [ %92, %82 ], [ %110, %64 ]
  %69 = phi %"struct.std::__1::pair.54"* [ %91, %82 ], [ %1, %64 ]
  %70 = icmp eq %"struct.std::__1::pair.54"* %69, %0
  br i1 %70, label %71, label %82

71:                                               ; preds = %66, %71
  %72 = phi %"struct.std::__1::pair.54"* [ %74, %71 ], [ %68, %66 ]
  %73 = phi %"struct.std::__1::pair.54"* [ %75, %71 ], [ %67, %66 ]
  %74 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %72, i64 -1
  %75 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %73, i64 -1
  %76 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %77 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 2 %77, i64 20, i1 false) #13
  %78 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %72, i64 -1, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %73, i64 -1, i32 1
  store i32 %79, i32* %80, align 4
  %81 = icmp eq %"struct.std::__1::pair.54"* %74, %6
  br i1 %81, label %112, label %71

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %69, i64 -1
  %84 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %68, i64 -1
  %85 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %83, i64 0, i32 0
  %87 = tail call zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"* %85, %"class.net::IPEndPoint"* dereferenceable(20) %86) #13
  %88 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %67, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %89 = select i1 %87, %"struct.std::__1::pair.54"* %83, %"struct.std::__1::pair.54"* %84
  %90 = select i1 %87, %"struct.std::__1::pair.54"* %69, %"struct.std::__1::pair.54"* %68
  %91 = select i1 %87, %"struct.std::__1::pair.54"* %83, %"struct.std::__1::pair.54"* %69
  %92 = select i1 %87, %"struct.std::__1::pair.54"* %68, %"struct.std::__1::pair.54"* %84
  %93 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 2 %93, i64 20, i1 false) #13
  %94 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %90, i64 -1, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %67, i64 -1, i32 1
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %67, i64 -1
  %98 = icmp eq %"struct.std::__1::pair.54"* %92, %6
  br i1 %98, label %112, label %66

99:                                               ; preds = %11, %99
  %100 = phi %"struct.std::__1::pair.54"* [ %110, %99 ], [ %6, %11 ]
  %101 = phi %"struct.std::__1::pair.54"* [ %109, %99 ], [ %1, %11 ]
  %102 = phi i64 [ %108, %99 ], [ 0, %11 ]
  %103 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %100, i64 0, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %101, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %103, %"class.net::IPEndPoint"* dereferenceable(20) %104) #13
  %105 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %100, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %101, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = add i64 %102, 1
  %109 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %101, i64 1
  %110 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %100, i64 1
  %111 = icmp eq %"struct.std::__1::pair.54"* %109, %2
  br i1 %111, label %64, label %99

112:                                              ; preds = %42, %20, %82, %71, %64, %13
  %113 = phi i64 [ %60, %13 ], [ %108, %64 ], [ %108, %71 ], [ %108, %82 ], [ %60, %20 ], [ %60, %42 ]
  %114 = icmp eq %"struct.std::__1::pair.54"* %6, null
  %115 = icmp eq i64 %113, 0
  %116 = or i1 %114, %115
  br i1 %116, label %124, label %117

117:                                              ; preds = %112, %117
  %118 = phi i64 [ %121, %117 ], [ 0, %112 ]
  %119 = phi %"struct.std::__1::pair.54"* [ %122, %117 ], [ %6, %112 ]
  %120 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %119, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %120) #13
  %121 = add nuw i64 %118, 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %119, i64 1
  %123 = icmp eq i64 %121, %113
  br i1 %123, label %124, label %117

124:                                              ; preds = %117, %11, %9, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.54"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPNS_4pairIN3net10IPEndPointEiEEEEEET_S8_S8_S8_(%"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = ptrtoint %"struct.std::__1::pair.54"* %1 to i64
  %7 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br label %8

8:                                                ; preds = %23, %3
  %9 = phi i64 [ %6, %3 ], [ %26, %23 ]
  %10 = phi %"struct.std::__1::pair.54"* [ %0, %3 ], [ %19, %23 ]
  %11 = phi %"struct.std::__1::pair.54"* [ %1, %3 ], [ %20, %23 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %7, i8 -86, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPEndPoint"* dereferenceable(20) %12) #13
  %13 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %13, i8* align 2 %14, i64 20, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %14, i8* nonnull align 2 %7, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #13
  %15 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %11, i64 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %15, align 4
  store i32 %17, i32* %16, align 4
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %11, i64 1
  %21 = icmp eq %"struct.std::__1::pair.54"* %20, %2
  %22 = inttoptr i64 %9 to %"struct.std::__1::pair.54"*
  br i1 %21, label %27, label %23

23:                                               ; preds = %8
  %24 = ptrtoint %"struct.std::__1::pair.54"* %20 to i64
  %25 = icmp eq %"struct.std::__1::pair.54"* %19, %22
  %26 = select i1 %25, i64 %24, i64 %9
  br label %8

27:                                               ; preds = %8
  %28 = inttoptr i64 %9 to %"struct.std::__1::pair.54"*
  %29 = icmp eq %"struct.std::__1::pair.54"* %19, %28
  br i1 %29, label %55, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br label %32

32:                                               ; preds = %52, %30
  %33 = phi i64 [ %54, %52 ], [ %9, %30 ]
  %34 = phi %"struct.std::__1::pair.54"* [ %47, %52 ], [ %19, %30 ]
  %35 = phi %"struct.std::__1::pair.54"* [ %48, %52 ], [ %28, %30 ]
  %36 = inttoptr i64 %33 to %"struct.std::__1::pair.54"*
  br label %37

37:                                               ; preds = %32, %51
  %38 = phi %"struct.std::__1::pair.54"* [ %47, %51 ], [ %34, %32 ]
  %39 = phi %"struct.std::__1::pair.54"* [ %36, %51 ], [ %35, %32 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %38, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %31, i8 -86, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %5, %"class.net::IPEndPoint"* dereferenceable(20) %40) #13
  %41 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %42 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %41, i8* align 2 %42, i64 20, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %42, i8* nonnull align 2 %31, i64 20, i1 false) #13
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %31) #13
  %43 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %38, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %39, i64 0, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %44, align 4
  store i32 %46, i32* %43, align 4
  store i32 %45, i32* %44, align 4
  %47 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %38, i64 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %39, i64 1
  %49 = icmp eq %"struct.std::__1::pair.54"* %48, %2
  %50 = icmp eq %"struct.std::__1::pair.54"* %47, %36
  br i1 %49, label %51, label %52

51:                                               ; preds = %37
  br i1 %50, label %55, label %37

52:                                               ; preds = %37
  %53 = ptrtoint %"struct.std::__1::pair.54"* %48 to i64
  %54 = select i1 %50, i64 %53, i64 %33
  br label %32

55:                                               ; preds = %51, %27
  ret %"struct.std::__1::pair.54"* %19
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 20
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 922337203685477580
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 20
  %20 = icmp ult i64 %19, 461168601842738790
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 922337203685477580, %14 ]
  %28 = mul i64 %27, 20
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.net::IPEndPoint"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::IPEndPoint"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %32
  %36 = ptrtoint %"class.net::IPEndPoint"* %35 to i64
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"* dereferenceable(20) %1) #13
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 1
  %38 = ptrtoint %"class.net::IPEndPoint"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %42 = icmp eq %"class.net::IPEndPoint"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"class.net::IPEndPoint"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.net::IPEndPoint"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %46, i64 -1
  %49 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %47, i64 -1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %48, %"class.net::IPEndPoint"* dereferenceable(20) %49) #13
  %50 = icmp eq %"class.net::IPEndPoint"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %54 = ptrtoint %"class.net::IPEndPoint"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"class.net::IPEndPoint"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.net::IPEndPoint"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %57, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %58) #13
  %59 = icmp eq %"class.net::IPEndPoint"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"class.net::IPEndPoint"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"class.net::IPEndPoint"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.net::IPEndPoint"* %2 to i64
  %5 = ptrtoint %"class.net::IPEndPoint"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 20
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.net::IPEndPoint"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 20
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.net::IPEndPoint"*
  br i1 %15, label %58, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.net::IPEndPoint"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 20
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 %22
  %25 = select i1 %23, %"class.net::IPEndPoint"* %24, %"class.net::IPEndPoint"* %2
  %26 = ptrtoint %"class.net::IPEndPoint"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 20
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %31, i8* align 2 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %16, i64 %28
  br i1 %23, label %35, label %50

35:                                               ; preds = %33
  %36 = load i64, i64* %19, align 8
  %37 = icmp eq %"class.net::IPEndPoint"* %25, %2
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"class.net::IPEndPoint"*
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"class.net::IPEndPoint"* [ %44, %40 ], [ %39, %38 ]
  %42 = phi %"class.net::IPEndPoint"* [ %43, %40 ], [ %24, %38 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %41, %"class.net::IPEndPoint"* dereferenceable(20) %42) #13
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %42, i64 1
  %44 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %41, i64 1
  %45 = icmp eq %"class.net::IPEndPoint"* %43, %2
  br i1 %45, label %46, label %40

46:                                               ; preds = %40
  %47 = ptrtoint %"class.net::IPEndPoint"* %44 to i64
  br label %48

48:                                               ; preds = %35, %46
  %49 = phi i64 [ %36, %35 ], [ %47, %46 ]
  store i64 %49, i64* %19, align 8
  br label %109

50:                                               ; preds = %33
  %51 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %52 = icmp eq %"class.net::IPEndPoint"* %51, %34
  br i1 %52, label %57, label %53

53:                                               ; preds = %50, %53
  %54 = phi %"class.net::IPEndPoint"* [ %55, %53 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %54, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %55) #13
  %56 = icmp eq %"class.net::IPEndPoint"* %55, %34
  br i1 %56, label %57, label %53

57:                                               ; preds = %53, %50
  store %"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"** %18, align 8
  br label %109

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %63 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %62, align 8
  %64 = icmp eq %"class.net::IPEndPoint"* %63, %16
  br i1 %64, label %71, label %65

65:                                               ; preds = %61, %65
  %66 = phi %"class.net::IPEndPoint"* [ %67, %65 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %66, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %67) #13
  %68 = icmp eq %"class.net::IPEndPoint"* %67, %16
  br i1 %68, label %69, label %65

69:                                               ; preds = %65
  %70 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %59, align 8
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi %"class.net::IPEndPoint"* [ %70, %69 ], [ %16, %61 ]
  store %"class.net::IPEndPoint"* %16, %"class.net::IPEndPoint"** %62, align 8
  %73 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %73) #15
  %74 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #13
  br label %75

75:                                               ; preds = %58, %71
  %76 = phi i64 [ %10, %58 ], [ 0, %71 ]
  %77 = icmp ugt i64 %7, 922337203685477580
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #14
  unreachable

80:                                               ; preds = %75
  %81 = sdiv exact i64 %76, 20
  %82 = icmp ult i64 %81, 461168601842738790
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = shl nsw i64 %81, 1
  %85 = icmp ult i64 %84, %7
  %86 = select i1 %85, i64 %7, i64 %84
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi i64 [ %86, %83 ], [ 922337203685477580, %80 ]
  %89 = mul i64 %88, 20
  %90 = tail call i8* @_Znwm(i64 %89) #15
  %91 = bitcast i8* %90 to %"class.net::IPEndPoint"*
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %93 = bitcast %"class.net::IPEndPoint"** %92 to i8**
  store i8* %90, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %90, i8** %94, align 8
  %95 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %91, i64 %88
  store %"class.net::IPEndPoint"* %95, %"class.net::IPEndPoint"** %8, align 8
  %96 = bitcast %"class.net::IPEndPoint"** %92 to i64*
  %97 = ptrtoint i8* %90 to i64
  %98 = icmp eq %"class.net::IPEndPoint"* %1, %2
  br i1 %98, label %107, label %99

99:                                               ; preds = %87, %99
  %100 = phi %"class.net::IPEndPoint"* [ %103, %99 ], [ %91, %87 ]
  %101 = phi %"class.net::IPEndPoint"* [ %102, %99 ], [ %1, %87 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %100, %"class.net::IPEndPoint"* dereferenceable(20) %101) #13
  %102 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %101, i64 1
  %103 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %100, i64 1
  %104 = icmp eq %"class.net::IPEndPoint"* %102, %2
  br i1 %104, label %105, label %99

105:                                              ; preds = %99
  %106 = ptrtoint %"class.net::IPEndPoint"* %103 to i64
  br label %107

107:                                              ; preds = %87, %105
  %108 = phi i64 [ %97, %87 ], [ %106, %105 ]
  store i64 %108, i64* %96, align 8
  br label %109

109:                                              ; preds = %48, %57, %107
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #13
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #13
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #13
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #13
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #13
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #15
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #15
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.1"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #15
  %134 = bitcast %"class.std::__1::vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #13
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #14
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #15
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.1"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #13
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #13
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN3net10IPEndPointEiEENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRS3_iEEEvDpOT_(%"class.std::__1::vector.52"*, %"class.net::IPEndPoint"* dereferenceable(20), i32* dereferenceable(4)) local_unnamed_addr #10 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair.54"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.52"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 768614336404564650
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.52"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #14
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair.54"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ult i64 %20, 384307168202282325
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 768614336404564650, %15 ]
  %29 = mul i64 %28, 24
  %30 = tail call i8* @_Znwm(i64 %29) #15
  %31 = bitcast i8* %30 to %"struct.std::__1::pair.54"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.std::__1::pair.54"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %34, i64 %33
  %37 = ptrtoint %"struct.std::__1::pair.54"* %36 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %35, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %38, %"class.net::IPEndPoint"* dereferenceable(20) %1) #13
  %39 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %34, i64 %10, i32 1
  %40 = load i32, i32* %2, align 4
  store i32 %40, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %35, i64 1
  %42 = ptrtoint %"struct.std::__1::pair.54"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 0
  %44 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %43, align 8
  %45 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %4, align 8
  %46 = icmp eq %"struct.std::__1::pair.54"* %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %32
  %48 = ptrtoint %"struct.std::__1::pair.54"* %35 to i64
  store i64 %48, i64* %7, align 8
  store i64 %42, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  br label %70

49:                                               ; preds = %32, %49
  %50 = phi %"struct.std::__1::pair.54"* [ %58, %49 ], [ %35, %32 ]
  %51 = phi %"struct.std::__1::pair.54"* [ %52, %49 ], [ %45, %32 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %50, i64 -1, i32 0
  %54 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %52, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %53, %"class.net::IPEndPoint"* dereferenceable(20) %54) #13
  %55 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %50, i64 -1, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %51, i64 -1, i32 1
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %55, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %50, i64 -1
  %59 = icmp eq %"struct.std::__1::pair.54"* %52, %44
  br i1 %59, label %60, label %49

60:                                               ; preds = %49
  %61 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %43, align 8
  %62 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %4, align 8
  %63 = ptrtoint %"struct.std::__1::pair.54"* %58 to i64
  store i64 %63, i64* %7, align 8
  store i64 %42, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %64 = icmp eq %"struct.std::__1::pair.54"* %62, %61
  br i1 %64, label %70, label %65

65:                                               ; preds = %60, %65
  %66 = phi %"struct.std::__1::pair.54"* [ %67, %65 ], [ %62, %60 ]
  %67 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %66, i64 -1
  %68 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %67, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %68) #13
  %69 = icmp eq %"struct.std::__1::pair.54"* %67, %61
  br i1 %69, label %70, label %65

70:                                               ; preds = %65, %47, %60
  %71 = phi %"struct.std::__1::pair.54"* [ %44, %47 ], [ %61, %60 ], [ %61, %65 ]
  %72 = icmp eq %"struct.std::__1::pair.54"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %70, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.54"* @_ZNSt3__16vectorINS_4pairIN3net10IPEndPointEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.52"*, %"struct.std::__1::pair.54"*, %"class.net::IPEndPoint"* dereferenceable(20), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__temp_value", align 8
  %6 = alloca %"struct.std::__1::__split_buffer.78", align 8
  %7 = ptrtoint %"struct.std::__1::pair.54"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair.54"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair.54"* %12 to i64
  br i1 %13, label %15, label %73

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.54"* %10, %1
  br i1 %16, label %17, label %24

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %18, %"class.net::IPEndPoint"* dereferenceable(20) %2) #13
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 0, i32 1
  %20 = load i32, i32* %3, align 4
  store i32 %20, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 1
  %22 = ptrtoint %"struct.std::__1::pair.54"* %21 to i64
  %23 = bitcast %"struct.std::__1::pair.54"** %9 to i64*
  store i64 %22, i64* %23, align 8
  br label %194

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 20
  %27 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2
  %29 = bitcast %"class.std::__1::allocator.58"** %27 to %"class.std::__1::__compressed_pair.55"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"class.std::__1::__compressed_pair.55"* %28, %"class.std::__1::__compressed_pair.55"** %29, align 8
  %30 = bitcast %"struct.std::__1::__temp_value"* %5 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %30, %"class.net::IPEndPoint"* dereferenceable(20) %2) #13
  %31 = bitcast i8* %26 to i32*
  %32 = load i32, i32* %3, align 4
  store i32 %32, i32* %31, align 4
  %33 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 1
  %35 = ptrtoint %"struct.std::__1::pair.54"* %33 to i64
  %36 = ptrtoint %"struct.std::__1::pair.54"* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 24
  %39 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 %38
  %40 = bitcast %"struct.std::__1::pair.54"** %9 to i64*
  %41 = icmp ult %"struct.std::__1::pair.54"* %39, %33
  br i1 %41, label %58, label %44

42:                                               ; preds = %58
  %43 = ptrtoint %"struct.std::__1::pair.54"* %67 to i64
  br label %44

44:                                               ; preds = %42, %24
  %45 = phi i64 [ %43, %42 ], [ %35, %24 ]
  store i64 %45, i64* %40, align 8
  %46 = icmp eq i64 %37, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %44, %47
  %48 = phi %"struct.std::__1::pair.54"* [ %51, %47 ], [ %33, %44 ]
  %49 = phi %"struct.std::__1::pair.54"* [ %50, %47 ], [ %39, %44 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %49, i64 -1
  %51 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %48, i64 -1
  %52 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 2 %53, i64 20, i1 false) #13
  %54 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %49, i64 -1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %48, i64 -1, i32 1
  store i32 %55, i32* %56, align 4
  %57 = icmp eq %"struct.std::__1::pair.54"* %50, %1
  br i1 %57, label %69, label %47

58:                                               ; preds = %24, %58
  %59 = phi %"struct.std::__1::pair.54"* [ %67, %58 ], [ %33, %24 ]
  %60 = phi %"struct.std::__1::pair.54"* [ %66, %58 ], [ %39, %24 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %59, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %60, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %61, %"class.net::IPEndPoint"* dereferenceable(20) %62) #13
  %63 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %59, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %60, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %63, align 4
  %66 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %60, i64 1
  %67 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %59, i64 1
  %68 = icmp ult %"struct.std::__1::pair.54"* %66, %33
  br i1 %68, label %58, label %42

69:                                               ; preds = %47, %44
  %70 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* nonnull align 8 %25, i64 20, i1 false) #13
  %71 = load i32, i32* %31, align 4
  %72 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %1, i64 0, i32 1
  store i32 %71, i32* %72, align 4
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #13
  br label %194

73:                                               ; preds = %4
  %74 = ptrtoint %"struct.std::__1::pair.54"* %10 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2
  %76 = bitcast %"struct.std::__1::__split_buffer.78"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 2
  %80 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 3, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 3, i32 1, i32 0
  %82 = bitcast %"struct.std::__1::pair.54"** %9 to i64*
  %83 = bitcast %"class.std::__1::vector.52"* %0 to i64*
  %84 = bitcast %"struct.std::__1::__split_buffer.78"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 40, i1 false)
  %85 = load i64, i64* %83, align 8
  %86 = sub i64 %74, %85
  %87 = sdiv exact i64 %86, 24
  %88 = add nsw i64 %87, 1
  %89 = icmp ugt i64 %88, 768614336404564650
  br i1 %89, label %90, label %92

90:                                               ; preds = %73
  %91 = bitcast %"class.std::__1::vector.52"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %91) #14
  unreachable

92:                                               ; preds = %73
  %93 = bitcast %"struct.std::__1::pair.54"** %11 to i64*
  %94 = sub i64 %14, %85
  %95 = sdiv exact i64 %94, 24
  %96 = icmp ult i64 %95, 384307168202282325
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = sub i64 %7, %85
  %99 = sdiv exact i64 %98, 24
  store %"struct.std::__1::pair.54"* null, %"struct.std::__1::pair.54"** %80, align 8
  %100 = bitcast %"class.std::__1::allocator.58"** %81 to %"class.std::__1::__compressed_pair.55"**
  store %"class.std::__1::__compressed_pair.55"* %75, %"class.std::__1::__compressed_pair.55"** %100, align 8
  br label %109

101:                                              ; preds = %92
  %102 = shl nsw i64 %95, 1
  %103 = icmp ult i64 %102, %88
  %104 = select i1 %103, i64 %88, i64 %102
  %105 = sub i64 %7, %85
  %106 = sdiv exact i64 %105, 24
  store %"struct.std::__1::pair.54"* null, %"struct.std::__1::pair.54"** %80, align 8
  %107 = bitcast %"class.std::__1::allocator.58"** %81 to %"class.std::__1::__compressed_pair.55"**
  store %"class.std::__1::__compressed_pair.55"* %75, %"class.std::__1::__compressed_pair.55"** %107, align 8
  %108 = icmp eq i64 %104, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %101, %97
  %110 = phi i64 [ %99, %97 ], [ %106, %101 ]
  %111 = phi i64 [ 768614336404564650, %97 ], [ %104, %101 ]
  %112 = mul i64 %111, 24
  %113 = tail call i8* @_Znwm(i64 %112) #15
  %114 = bitcast i8* %113 to %"struct.std::__1::pair.54"*
  br label %115

115:                                              ; preds = %101, %109
  %116 = phi i64 [ %110, %109 ], [ %106, %101 ]
  %117 = phi i64 [ %111, %109 ], [ 0, %101 ]
  %118 = phi %"struct.std::__1::pair.54"* [ %114, %109 ], [ null, %101 ]
  store %"struct.std::__1::pair.54"* %118, %"struct.std::__1::pair.54"** %77, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %118, i64 %116
  store %"struct.std::__1::pair.54"* %119, %"struct.std::__1::pair.54"** %79, align 8
  store %"struct.std::__1::pair.54"* %119, %"struct.std::__1::pair.54"** %78, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %118, i64 %117
  store %"struct.std::__1::pair.54"* %120, %"struct.std::__1::pair.54"** %80, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3net10IPEndPointEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer.78"* nonnull %6, %"class.net::IPEndPoint"* dereferenceable(20) %2, i32* dereferenceable(4) %3)
  %121 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %78, align 8
  %122 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %8, align 8
  %123 = icmp eq %"struct.std::__1::pair.54"* %122, %1
  br i1 %123, label %136, label %124

124:                                              ; preds = %115, %124
  %125 = phi %"struct.std::__1::pair.54"* [ %134, %124 ], [ %121, %115 ]
  %126 = phi %"struct.std::__1::pair.54"* [ %127, %124 ], [ %1, %115 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %126, i64 -1
  %128 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %125, i64 -1, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %127, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %128, %"class.net::IPEndPoint"* dereferenceable(20) %129) #13
  %130 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %125, i64 -1, i32 1
  %131 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %126, i64 -1, i32 1
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %130, align 4
  %133 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %78, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %133, i64 -1
  store %"struct.std::__1::pair.54"* %134, %"struct.std::__1::pair.54"** %78, align 8
  %135 = icmp eq %"struct.std::__1::pair.54"* %127, %122
  br i1 %135, label %136, label %124

136:                                              ; preds = %124, %115
  %137 = phi %"struct.std::__1::pair.54"* [ %121, %115 ], [ %134, %124 ]
  %138 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %139 = icmp eq %"struct.std::__1::pair.54"* %138, %1
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = ptrtoint %"struct.std::__1::pair.54"* %138 to i64
  %142 = ptrtoint %"struct.std::__1::pair.54"* %137 to i64
  %143 = bitcast %"struct.std::__1::pair.54"** %78 to i64*
  %144 = bitcast %"struct.std::__1::pair.54"** %79 to i64*
  %145 = load i64, i64* %144, align 8
  br label %166

146:                                              ; preds = %136
  %147 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %79, align 8
  br label %148

148:                                              ; preds = %148, %146
  %149 = phi %"struct.std::__1::pair.54"* [ %158, %148 ], [ %147, %146 ]
  %150 = phi %"struct.std::__1::pair.54"* [ %156, %148 ], [ %1, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %149, i64 0, i32 0
  %152 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %150, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %151, %"class.net::IPEndPoint"* dereferenceable(20) %152) #13
  %153 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %149, i64 0, i32 1
  %154 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %150, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %153, align 4
  %156 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %150, i64 1
  %157 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %79, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %157, i64 1
  store %"struct.std::__1::pair.54"* %158, %"struct.std::__1::pair.54"** %79, align 8
  %159 = icmp eq %"struct.std::__1::pair.54"* %156, %138
  br i1 %159, label %160, label %148

160:                                              ; preds = %148
  %161 = ptrtoint %"struct.std::__1::pair.54"* %158 to i64
  %162 = bitcast %"struct.std::__1::pair.54"** %78 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = load i64, i64* %82, align 8
  %165 = bitcast %"struct.std::__1::pair.54"** %79 to i64*
  br label %166

166:                                              ; preds = %140, %160
  %167 = phi i64* [ %144, %140 ], [ %165, %160 ]
  %168 = phi i64 [ %145, %140 ], [ %161, %160 ]
  %169 = phi i64 [ %141, %140 ], [ %164, %160 ]
  %170 = phi i64* [ %143, %140 ], [ %162, %160 ]
  %171 = phi i64 [ %142, %140 ], [ %163, %160 ]
  %172 = load i64, i64* %83, align 8
  store i64 %171, i64* %83, align 8
  store i64 %172, i64* %170, align 8
  store i64 %168, i64* %82, align 8
  store i64 %169, i64* %167, align 8
  %173 = load i64, i64* %93, align 8
  %174 = bitcast %"struct.std::__1::pair.54"** %80 to i64*
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %93, align 8
  store i64 %173, i64* %174, align 8
  %176 = bitcast %"struct.std::__1::__split_buffer.78"* %6 to i64*
  store i64 %172, i64* %176, align 8
  %177 = inttoptr i64 %172 to %"struct.std::__1::pair.54"*
  %178 = inttoptr i64 %169 to %"struct.std::__1::pair.54"*
  %179 = icmp eq %"struct.std::__1::pair.54"* %178, %177
  br i1 %179, label %188, label %180

180:                                              ; preds = %166, %180
  %181 = phi %"struct.std::__1::pair.54"* [ %184, %180 ], [ %178, %166 ]
  %182 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %181, i64 -1
  store %"struct.std::__1::pair.54"* %182, %"struct.std::__1::pair.54"** %79, align 8
  %183 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %182, i64 0, i32 0
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %183) #13
  %184 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %79, align 8
  %185 = icmp eq %"struct.std::__1::pair.54"* %184, %177
  br i1 %185, label %186, label %180

186:                                              ; preds = %180
  %187 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %77, align 8
  br label %188

188:                                              ; preds = %186, %166
  %189 = phi %"struct.std::__1::pair.54"* [ %187, %186 ], [ %177, %166 ]
  %190 = icmp eq %"struct.std::__1::pair.54"* %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %192) #15
  br label %193

193:                                              ; preds = %188, %191
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76) #13
  br label %194

194:                                              ; preds = %17, %69, %193
  %195 = phi %"struct.std::__1::pair.54"* [ %1, %17 ], [ %1, %69 ], [ %121, %193 ]
  ret %"struct.std::__1::pair.54"* %195
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3net10IPEndPointEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer.78"*, %"class.net::IPEndPoint"* dereferenceable(20), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.54"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.54"* %7 to i64
  br i1 %8, label %10, label %101

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.54"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.54"* %14 to i64
  br i1 %15, label %17, label %42

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.54"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = sdiv exact i64 %19, 24
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.54"* %12, %5
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair.54"* [ %34, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.54"* [ %33, %25 ], [ %12, %17 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %29 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 2 %29, i64 20, i1 false) #13
  %30 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 0, i32 1
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %27, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %26, i64 1
  %35 = icmp eq %"struct.std::__1::pair.54"* %33, %5
  br i1 %35, label %36, label %25

36:                                               ; preds = %25
  %37 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %11, align 8
  br label %38

38:                                               ; preds = %36, %17
  %39 = phi %"struct.std::__1::pair.54"* [ %5, %17 ], [ %37, %36 ]
  %40 = phi %"struct.std::__1::pair.54"* [ %23, %17 ], [ %34, %36 ]
  store %"struct.std::__1::pair.54"* %40, %"struct.std::__1::pair.54"** %4, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %39, i64 %22
  store %"struct.std::__1::pair.54"* %41, %"struct.std::__1::pair.54"** %11, align 8
  br label %101

42:                                               ; preds = %10
  %43 = bitcast %"struct.std::__1::pair.54"** %6 to i64*
  %44 = bitcast %"struct.std::__1::__split_buffer.78"* %0 to i64*
  %45 = sub i64 %9, %16
  %46 = sdiv exact i64 %45, 24
  %47 = shl nsw i64 %46, 1
  %48 = icmp eq i64 %45, 0
  %49 = select i1 %48, i64 1, i64 %47
  %50 = icmp ugt i64 %49, 768614336404564650
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  tail call void @abort() #14
  unreachable

52:                                               ; preds = %42
  %53 = lshr i64 %49, 2
  %54 = mul i64 %49, 24
  %55 = tail call i8* @_Znwm(i64 %54) #15
  %56 = bitcast i8* %55 to %"struct.std::__1::pair.54"*
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %56, i64 %53
  %59 = ptrtoint %"struct.std::__1::pair.54"* %58 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %56, i64 %49
  %61 = ptrtoint %"struct.std::__1::pair.54"* %60 to i64
  %62 = ptrtoint %"struct.std::__1::pair.54"* %12 to i64
  %63 = ptrtoint %"struct.std::__1::pair.54"* %5 to i64
  %64 = sub i64 %63, %62
  %65 = sdiv exact i64 %64, 24
  %66 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %58, i64 %65
  %67 = icmp eq i64 %64, 0
  br i1 %67, label %84, label %68

68:                                               ; preds = %52, %68
  %69 = phi %"struct.std::__1::pair.54"* [ %76, %68 ], [ %58, %52 ]
  %70 = phi %"struct.std::__1::pair.54"* [ %77, %68 ], [ %12, %52 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %69, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %70, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %71, %"class.net::IPEndPoint"* dereferenceable(20) %72) #13
  %73 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %69, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %70, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %69, i64 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %70, i64 1
  %78 = icmp eq %"struct.std::__1::pair.54"* %66, %76
  br i1 %78, label %79, label %68

79:                                               ; preds = %68
  %80 = ptrtoint %"struct.std::__1::pair.54"* %66 to i64
  %81 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %13, align 8
  %82 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %11, align 8
  %83 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %4, align 8
  br label %84

84:                                               ; preds = %52, %79
  %85 = phi %"struct.std::__1::pair.54"* [ %83, %79 ], [ %5, %52 ]
  %86 = phi %"struct.std::__1::pair.54"* [ %82, %79 ], [ %12, %52 ]
  %87 = phi %"struct.std::__1::pair.54"* [ %81, %79 ], [ %14, %52 ]
  %88 = phi i64 [ %80, %79 ], [ %59, %52 ]
  store i64 %57, i64* %44, align 8
  %89 = bitcast %"struct.std::__1::pair.54"** %11 to i64*
  store i64 %59, i64* %89, align 8
  %90 = bitcast %"struct.std::__1::pair.54"** %4 to i64*
  store i64 %88, i64* %90, align 8
  store i64 %61, i64* %43, align 8
  %91 = icmp eq %"struct.std::__1::pair.54"* %85, %86
  br i1 %91, label %97, label %92

92:                                               ; preds = %84, %92
  %93 = phi %"struct.std::__1::pair.54"* [ %94, %92 ], [ %85, %84 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %93, i64 -1
  %95 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %94, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %95) #13
  %96 = icmp eq %"struct.std::__1::pair.54"* %94, %86
  br i1 %96, label %97, label %92

97:                                               ; preds = %92, %84
  %98 = icmp eq %"struct.std::__1::pair.54"* %87, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %100) #15
  br label %101

101:                                              ; preds = %99, %97, %38, %3
  %102 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %4, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %102, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %103, %"class.net::IPEndPoint"* dereferenceable(20) %1) #13
  %104 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %102, i64 0, i32 1
  %105 = load i32, i32* %2, align 4
  store i32 %105, i32* %104, align 4
  %106 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %4, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %106, i64 1
  store %"struct.std::__1::pair.54"* %107, %"struct.std::__1::pair.54"** %4, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
