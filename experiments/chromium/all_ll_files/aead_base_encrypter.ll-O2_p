; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/aead_base_encrypter.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/aead_base_encrypter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::AeadBaseEncrypter" = type { %"class.quic::QuicEncrypter", %struct.evp_aead_st*, i64, i64, i64, i8, [32 x i8], [12 x i8], %"class.bssl::internal::StackAllocated" }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%struct.evp_aead_st = type opaque
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%struct.engine_st = type opaque
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::string_view" = type { i8*, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN4quic17AeadBaseEncrypterE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::AeadBaseEncrypter"*)* @_ZN4quic17AeadBaseEncrypterD2Ev to i8*), i8* bitcast (void (%"class.quic::AeadBaseEncrypter"*)* @_ZN4quic17AeadBaseEncrypterD0Ev to i8*), i8* bitcast (i1 (%"class.quic::AeadBaseEncrypter"*, i8*, i64)* @_ZN4quic17AeadBaseEncrypter6SetKeyEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::AeadBaseEncrypter"*, i8*, i64)* @_ZN4quic17AeadBaseEncrypter14SetNoncePrefixEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::AeadBaseEncrypter"*, i8*, i64)* @_ZN4quic17AeadBaseEncrypter5SetIVEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicCrypter"*, %"struct.quic::ParsedQuicVersion"*, i8*, i64)* @_ZN4quic11QuicCrypter18SetNoncePrefixOrIVERKNS_17ParsedQuicVersionEN4absl11string_viewE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.quic::AeadBaseEncrypter"*)* @_ZNK4quic17AeadBaseEncrypter10GetKeySizeEv to i8*), i8* bitcast (i64 (%"class.quic::AeadBaseEncrypter"*)* @_ZNK4quic17AeadBaseEncrypter9GetIVSizeEv to i8*), i8* bitcast (i64 (%"class.quic::AeadBaseEncrypter"*)* @_ZNK4quic17AeadBaseEncrypter18GetNoncePrefixSizeEv to i8*), i8* bitcast (i1 (%"class.quic::AeadBaseEncrypter"*, i64, i8*, i64, i8*, i64, i8*, i64*, i64)* @_ZN4quic17AeadBaseEncrypter13EncryptPacketEmN4absl11string_viewES2_PcPmm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.quic::AeadBaseEncrypter"*, i64)* @_ZNK4quic17AeadBaseEncrypter19GetMaxPlaintextSizeEm to i8*), i8* bitcast (i64 (%"class.quic::AeadBaseEncrypter"*, i64)* @_ZNK4quic17AeadBaseEncrypter17GetCiphertextSizeEm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i8*, i64 } (%"class.quic::AeadBaseEncrypter"*)* @_ZNK4quic17AeadBaseEncrypter6GetKeyEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.quic::AeadBaseEncrypter"*)* @_ZNK4quic17AeadBaseEncrypter14GetNoncePrefixEv to i8*)] }, align 8
@.str = private unnamed_addr constant [73 x i8] c"../../net/third_party/quiche/src/quic/core/crypto/aead_base_encrypter.cc\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"Attempted to set nonce prefix on IETF QUIC crypter\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"Attempted to set IV on Google QUIC crypter\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic17AeadBaseEncrypterD1Ev = hidden unnamed_addr alias void (%"class.quic::AeadBaseEncrypter"*), void (%"class.quic::AeadBaseEncrypter"*)* @_ZN4quic17AeadBaseEncrypterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic17AeadBaseEncrypterC2EPFPK11evp_aead_stvEmmmb(%"class.quic::AeadBaseEncrypter"*, %struct.evp_aead_st* ()* nocapture, i64, i64, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN4quic17AeadBaseEncrypterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 1
  tail call void @CRYPTO_library_init() #9
  %10 = tail call %struct.evp_aead_st* %1() #9
  store %struct.evp_aead_st* %10, %struct.evp_aead_st** %9, align 8
  %11 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 2
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 3
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 4
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 5
  store i8 %7, i8* %14, align 8
  %15 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 8, i32 0
  tail call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %15) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic17AeadBaseEncrypterD2Ev(%"class.quic::AeadBaseEncrypter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN4quic17AeadBaseEncrypterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 8, i32 0
  tail call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %3) #9
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4quic17AeadBaseEncrypterD0Ev(%"class.quic::AeadBaseEncrypter"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic17AeadBaseEncrypter6SetKeyEN4absl11string_viewE(%"class.quic::AeadBaseEncrypter"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %2
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 6, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %9 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 8, i32 0
  tail call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %9) #9
  %10 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 1
  %11 = load %struct.evp_aead_st*, %struct.evp_aead_st** %10, align 8
  %12 = load i64, i64* %4, align 8
  %13 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = tail call i32 @EVP_AEAD_CTX_init(%struct.evp_aead_ctx_st* %9, %struct.evp_aead_st* %11, i8* %8, i64 %12, i64 %14, %struct.engine_st* null) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %7, %17
  %18 = tail call i32 @ERR_get_error() #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %17

20:                                               ; preds = %17, %7, %3
  %21 = phi i1 [ false, %3 ], [ true, %7 ], [ false, %17 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st*) local_unnamed_addr #4

declare i32 @EVP_AEAD_CTX_init(%struct.evp_aead_ctx_st*, %struct.evp_aead_st*, i8*, i64, i64, %struct.engine_st*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic17AeadBaseEncrypter14SetNoncePrefixEN4absl11string_viewE(%"class.quic::AeadBaseEncrypter"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %9, label %10, label %22

10:                                               ; preds = %8
  %11 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 81, i32 2) #9
  %12 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i64 50) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #9
  br label %22

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -8
  %19 = icmp eq i64 %18, %2
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 7, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %1, i64 %2, i1 false)
  br label %22

22:                                               ; preds = %10, %8, %15, %20
  %23 = phi i1 [ true, %20 ], [ false, %15 ], [ false, %8 ], [ false, %10 ]
  ret i1 %23
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic17AeadBaseEncrypter5SetIVEN4absl11string_viewE(%"class.quic::AeadBaseEncrypter"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %9, label %10, label %21

10:                                               ; preds = %8
  %11 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 95, i32 2) #9
  %12 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i64 42) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #9
  br label %21

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %2
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 7, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %1, i64 %2, i1 false)
  br label %21

21:                                               ; preds = %10, %8, %15, %19
  %22 = phi i1 [ true, %19 ], [ false, %15 ], [ false, %8 ], [ false, %10 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic17AeadBaseEncrypter7EncryptEN4absl11string_viewES2_S2_Ph(%"class.quic::AeadBaseEncrypter"*, i8*, i64, i8*, i64, %"class.absl::string_view"* nocapture readonly byval(%"class.absl::string_view") align 8, i8*) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i64 -6148914691236517206, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 8, i32 0
  %11 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, %12
  %16 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 @EVP_AEAD_CTX_seal(%struct.evp_aead_ctx_st* %10, i8* %6, i64* nonnull %8, i64 %15, i8* %1, i64 %2, i8* %17, i64 %12, i8* %3, i64 %4) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %7, %20
  %21 = call i32 @ERR_get_error() #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %20

23:                                               ; preds = %20, %7
  %24 = phi i1 [ true, %7 ], [ false, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret i1 %24
}

declare i32 @EVP_AEAD_CTX_seal(%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic17AeadBaseEncrypter13EncryptPacketEmN4absl11string_viewES2_PcPmm(%"class.quic::AeadBaseEncrypter"*, i64, i8*, i64, i8*, i64, i8*, i64* nocapture, i64) unnamed_addr #0 align 2 {
  %10 = alloca i64, align 8
  %11 = alloca [12 x i8], align 4
  %12 = bitcast %"class.quic::AeadBaseEncrypter"* %0 to i64 (%"class.quic::AeadBaseEncrypter"*, i64)***
  %13 = load i64 (%"class.quic::AeadBaseEncrypter"*, i64)**, i64 (%"class.quic::AeadBaseEncrypter"*, i64)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.quic::AeadBaseEncrypter"*, i64)*, i64 (%"class.quic::AeadBaseEncrypter"*, i64)** %13, i64 13
  %15 = load i64 (%"class.quic::AeadBaseEncrypter"*, i64)*, i64 (%"class.quic::AeadBaseEncrypter"*, i64)** %14, align 8
  %16 = tail call i64 %15(%"class.quic::AeadBaseEncrypter"* %0, i64 %5) #9
  %17 = icmp ugt i64 %16, %8
  br i1 %17, label %99, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 7, i64 0
  %21 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, 11
  %24 = sub i64 12, %22
  %25 = select i1 %23, i64 0, i64 %24
  %26 = getelementptr [12 x i8], [12 x i8]* %11, i64 0, i64 %22
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 -86, i64 %25, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 1 %20, i64 %22, i1 false)
  %27 = add i64 %22, -8
  %28 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 5
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %78, label %31

31:                                               ; preds = %18
  %32 = lshr i64 %1, 56
  %33 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %27
  %34 = load i8, i8* %33, align 1
  %35 = trunc i64 %32 to i8
  %36 = xor i8 %34, %35
  store i8 %36, i8* %33, align 1
  %37 = lshr i64 %1, 48
  %38 = add i64 %22, -7
  %39 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i8
  %42 = xor i8 %40, %41
  store i8 %42, i8* %39, align 1
  %43 = lshr i64 %1, 40
  %44 = add i64 %22, -6
  %45 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = trunc i64 %43 to i8
  %48 = xor i8 %46, %47
  store i8 %48, i8* %45, align 1
  %49 = lshr i64 %1, 32
  %50 = add i64 %22, -5
  %51 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = trunc i64 %49 to i8
  %54 = xor i8 %52, %53
  store i8 %54, i8* %51, align 1
  %55 = lshr i64 %1, 24
  %56 = add i64 %22, -4
  %57 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = trunc i64 %55 to i8
  %60 = xor i8 %58, %59
  store i8 %60, i8* %57, align 1
  %61 = lshr i64 %1, 16
  %62 = add i64 %22, -3
  %63 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = trunc i64 %61 to i8
  %66 = xor i8 %64, %65
  store i8 %66, i8* %63, align 1
  %67 = lshr i64 %1, 8
  %68 = add i64 %22, -2
  %69 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = trunc i64 %67 to i8
  %72 = xor i8 %70, %71
  store i8 %72, i8* %69, align 1
  %73 = add i64 %22, -1
  %74 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = trunc i64 %1 to i8
  %77 = xor i8 %75, %76
  store i8 %77, i8* %74, align 1
  br label %81

78:                                               ; preds = %18
  %79 = getelementptr inbounds [12 x i8], [12 x i8]* %11, i64 0, i64 %27
  %80 = bitcast i8* %79 to i64*
  store i64 %1, i64* %80, align 1
  br label %81

81:                                               ; preds = %31, %78
  %82 = icmp sgt i64 %22, -1
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %81
  tail call void @llvm.trap() #9
  unreachable

84:                                               ; preds = %81
  %85 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #9
  store i64 -6148914691236517206, i64* %10, align 8
  %86 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 8, i32 0
  %87 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 3
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, %5
  %90 = call i32 @EVP_AEAD_CTX_seal(%struct.evp_aead_ctx_st* %86, i8* %6, i64* nonnull %10, i64 %89, i8* nonnull %19, i64 %22, i8* %4, i64 %5, i8* %2, i64 %3) #9
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %84, %92
  %93 = call i32 @ERR_get_error() #9
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %92

95:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #9
  br label %97

96:                                               ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #9
  store i64 %16, i64* %7, align 8
  br label %97

97:                                               ; preds = %95, %96
  %98 = phi i1 [ true, %96 ], [ false, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #9
  br label %99

99:                                               ; preds = %9, %97
  %100 = phi i1 [ %98, %97 ], [ false, %9 ]
  ret i1 %100
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic17AeadBaseEncrypter10GetKeySizeEv(%"class.quic::AeadBaseEncrypter"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic17AeadBaseEncrypter18GetNoncePrefixSizeEv(%"class.quic::AeadBaseEncrypter"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic17AeadBaseEncrypter9GetIVSizeEv(%"class.quic::AeadBaseEncrypter"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic17AeadBaseEncrypter19GetMaxPlaintextSizeEm(%"class.quic::AeadBaseEncrypter"* nocapture readonly, i64) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  %6 = select i1 %5, i64 %4, i64 %1
  %7 = sub i64 %1, %6
  ret i64 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic17AeadBaseEncrypter17GetCiphertextSizeEm(%"class.quic::AeadBaseEncrypter"* nocapture readonly, i64) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK4quic17AeadBaseEncrypter6GetKeyEv(%"class.quic::AeadBaseEncrypter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp sgt i64 %3, -1
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void @llvm.trap() #9
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 6, i64 0
  %8 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %3, 1
  ret { i8*, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK4quic17AeadBaseEncrypter14GetNoncePrefixEv(%"class.quic::AeadBaseEncrypter"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::AeadBaseEncrypter"* %0 to i64 (%"class.quic::AeadBaseEncrypter"*)***
  %3 = load i64 (%"class.quic::AeadBaseEncrypter"*)**, i64 (%"class.quic::AeadBaseEncrypter"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.quic::AeadBaseEncrypter"*)*, i64 (%"class.quic::AeadBaseEncrypter"*)** %3, i64 9
  %5 = load i64 (%"class.quic::AeadBaseEncrypter"*)*, i64 (%"class.quic::AeadBaseEncrypter"*)** %4, align 8
  %6 = tail call i64 %5(%"class.quic::AeadBaseEncrypter"* %0) #9
  %7 = icmp sgt i64 %6, -1
  br i1 %7, label %9, label %8, !prof !3

8:                                                ; preds = %1
  tail call void @llvm.trap() #9
  unreachable

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.quic::AeadBaseEncrypter", %"class.quic::AeadBaseEncrypter"* %0, i64 0, i32 7, i64 0
  %11 = insertvalue { i8*, i64 } undef, i8* %10, 0
  %12 = insertvalue { i8*, i64 } %11, i64 %6, 1
  ret { i8*, i64 } %12
}

declare zeroext i1 @_ZN4quic11QuicCrypter18SetNoncePrefixOrIVERKNS_17ParsedQuicVersionEN4absl11string_viewE(%"class.quic::QuicCrypter"*, %"struct.quic::ParsedQuicVersion"* dereferenceable(8), i8*, i64) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

declare void @CRYPTO_library_init() local_unnamed_addr #4

declare i32 @ERR_get_error() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

declare void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
