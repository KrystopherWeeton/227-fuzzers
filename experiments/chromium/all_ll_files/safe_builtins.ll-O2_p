; ModuleID = '../../extensions/renderer/safe_builtins.cc'
source_filename = "../../extensions/renderer/safe_builtins.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.extensions::SafeBuiltins" = type { %"class.extensions::ScriptContext"* }
%"class.extensions::ScriptContext" = type <{ i8, [7 x i8], %"class.v8::Global", %"class.blink::WebLocalFrame"*, %class.scoped_refptr, i32, [4 x i8], %class.scoped_refptr, i32, [4 x i8], %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.7", %"class.extensions::SafeBuiltins", %"class.extensions::APIPermissionSet", %"class.std::__1::vector.60", %"class.v8::Isolate"*, %class.GURL, %class.GURL, i64, %"class.base::ThreadChecker", [7 x i8] }>
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::WebLocalFrame" = type opaque
%class.scoped_refptr = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.extensions::ModuleSystem"* }
%"class.extensions::ModuleSystem" = type { %"class.extensions::ObjectBackedNativeHandler", %"class.extensions::ScriptContext"*, %"class.extensions::SourceMap"*, %"class.std::__1::map", i32, %"class.std::__1::unique_ptr.23", %"class.std::__1::set", %"class.std::__1::vector.36", %"class.v8::Eternal", %"class.base::RepeatingCallback", %"class.std::__1::set" }
%"class.extensions::ObjectBackedNativeHandler" = type { %"class.extensions::NativeHandler.base", i32, %"class.v8::PersistentValueVector", %"class.extensions::ScriptContext"*, %"class.v8::Global.13" }
%"class.extensions::NativeHandler.base" = type <{ i32 (...)**, i8 }>
%"class.v8::PersistentValueVector" = type { %"class.v8::Isolate"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64* }
%"class.v8::Global.13" = type { %"class.v8::PersistentBase.14" }
%"class.v8::PersistentBase.14" = type { %"class.v8::ObjectTemplate"* }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.extensions::SourceMap" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.extensions::ModuleSystem::ExceptionHandler"* }
%"class.extensions::ModuleSystem::ExceptionHandler" = type { i32 (...)**, %"class.extensions::ScriptContext"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.std::__1::unique_ptr.38"*, %"class.std::__1::unique_ptr.38"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::unique_ptr.38" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::unique_ptr.38"* }
%"class.v8::Eternal" = type { %"class.v8::FunctionTemplate"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.44 }
%class.scoped_refptr.44 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map.49" }
%"class.std::__1::map.49" = type { %"class.std::__1::__tree.50" }
%"class.std::__1::__tree.50" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.62" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::OnceCallback"* }
%"class.v8::Isolate" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.72" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.GURL* }
%"class.base::ThreadChecker" = type { i8 }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::Object" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Private" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.extensions::(anonymous namespace)::ExtensionImpl" = type { %"class.v8::Extension.base", [7 x i8] }
%"class.v8::Extension.base" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8 }>
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::Signature" = type { i8 }
%"class.v8::CFunction" = type opaque
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::Function" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::Local.79" = type { %"class.v8::Value"* }
%"class.v8::String::Utf8Value" = type <{ i8*, i32, [4 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v89ExtensionD2Ev = comdat any

$_ZN2v89ExtensionD0Ev = comdat any

$_ZN2v89Extension25GetNativeFunctionTemplateEPNS_7IsolateENS_5LocalINS_6StringEEE = comdat any

$_ZTVN2v89ExtensionE = comdat any

@.str = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"JSON\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Object\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"RegExp\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Promise\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"../../extensions/renderer/safe_builtins.cc\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"value->IsObject()\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"%s::%s\00", align 1
@_ZN10extensions12_GLOBAL__N_110kClassNameE = internal constant [25 x i8] c"extensions::SafeBuiltins\00", align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN10extensions12_GLOBAL__N_17kScriptE = internal constant [3205 x i8] c"(function() {\0A'use strict';\0Anative function Apply();\0Anative function Save();\0A\0A// Used in the callback implementation, could potentially be clobbered.\0Afunction makeCallable(obj, target, isStatic, propertyNames) {\0A  propertyNames.forEach(function(propertyName) {\0A    var property = obj[propertyName];\0A    target[propertyName] = function() {\0A      var recv = obj;\0A      var firstArgIndex = 0;\0A      if (!isStatic) {\0A        if (arguments.length == 0)\0A          throw 'There must be at least one argument, the receiver';\0A        recv = arguments[0];\0A        firstArgIndex = 1;\0A      }\0A      return Apply(\0A          property, recv, arguments, firstArgIndex, arguments.length);\0A    };\0A  });\0A}\0A\0Afunction saveBuiltin(builtin, protoPropertyNames, staticPropertyNames) {\0A  var safe = function() {\0A    throw 'Safe objects cannot be called nor constructed. ' +\0A          'Use $Foo.self() or new $Foo.self() instead.';\0A  };\0A  safe.self = builtin;\0A  makeCallable(builtin.prototype, safe, false, protoPropertyNames);\0A  if (staticPropertyNames)\0A    makeCallable(builtin, safe, true, staticPropertyNames);\0A  Save(builtin.name, safe);\0A}\0A\0A// Save only what is needed by the extension modules.\0AsaveBuiltin(Object,\0A            ['hasOwnProperty'],\0A            ['create', 'defineProperty', 'freeze',\0A             'getOwnPropertyDescriptor', 'getPrototypeOf', 'keys',\0A             'assign', 'setPrototypeOf']);\0AsaveBuiltin(Function,\0A            ['apply', 'bind', 'call']);\0AsaveBuiltin(Array,\0A            ['concat', 'forEach', 'indexOf', 'join', 'push', 'slice',\0A             'splice', 'map', 'filter', 'shift', 'unshift', 'pop',\0A             'reverse'],\0A            ['from', 'isArray']);\0AsaveBuiltin(String,\0A            ['indexOf', 'slice', 'split', 'substr', 'toLowerCase',\0A             'toUpperCase', 'replace']);\0A// Use exec rather than test to defend against clobbering in the\0A// presence of ES2015 semantics, which read RegExp.prototype.exec.\0AsaveBuiltin(RegExp,\0A            ['exec']);\0AsaveBuiltin(Error,\0A            [],\0A            ['captureStackTrace']);\0AsaveBuiltin(Promise,\0A            ['then', 'catch']);\0A\0A// JSON is trickier because extensions can override toJSON in\0A// incompatible ways, and we need to prevent that.\0Avar builtinTypes = [\0A  Object, Function, Array, String, Boolean, Number, Date, RegExp\0A];\0Avar builtinToJSONs = builtinTypes.map(function(t) {\0A  return t.toJSON;\0A});\0Avar builtinArray = Array;\0Avar builtinJSONStringify = JSON.stringify;\0ASave('JSON', {\0A  parse: JSON.parse,\0A  stringify: function(obj) {\0A    var savedToJSONs = new builtinArray(builtinTypes.length);\0A    try {\0A      for (var i = 0; i < builtinTypes.length; ++i) {\0A        try {\0A          if (builtinTypes[i].prototype.toJSON !==\0A              builtinToJSONs[i]) {\0A            savedToJSONs[i] = builtinTypes[i].prototype.toJSON;\0A            builtinTypes[i].prototype.toJSON = builtinToJSONs[i];\0A          }\0A        } catch (e) {}\0A      }\0A    } catch (e) {}\0A    try {\0A      return builtinJSONStringify(obj);\0A    } finally {\0A      for (var i = 0; i < builtinTypes.length; ++i) {\0A        try {\0A          if (i in savedToJSONs)\0A            builtinTypes[i].prototype.toJSON = savedToJSONs[i];\0A        } catch (e) {}\0A      }\0A    }\0A  }\0A});\0A\0A}());\0A\00", align 16
@_ZTVN10extensions12_GLOBAL__N_113ExtensionImplE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::Extension"*)* @_ZN2v89ExtensionD2Ev to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::ExtensionImpl"*)* @_ZN10extensions12_GLOBAL__N_113ExtensionImplD0Ev to i8*), i8* bitcast (%"class.v8::FunctionTemplate"* (%"class.extensions::(anonymous namespace)::ExtensionImpl"*, %"class.v8::Isolate"*, %"class.v8::String"*)* @_ZN10extensions12_GLOBAL__N_113ExtensionImpl25GetNativeFunctionTemplateEPN2v87IsolateENS2_5LocalINS2_6StringEEE to i8*)] }, align 8
@_ZTVN2v89ExtensionE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::Extension"*)* @_ZN2v89ExtensionD2Ev to i8*), i8* bitcast (void (%"class.v8::Extension"*)* @_ZN2v89ExtensionD0Ev to i8*), i8* bitcast (%"class.v8::FunctionTemplate"* (%"class.v8::Extension"*, %"class.v8::Isolate"*, %"class.v8::String"*)* @_ZN2v89Extension25GetNativeFunctionTemplateEPNS_7IsolateENS_5LocalINS_6StringEEE to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [6 x i8] c"Apply\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"Save\00", align 1
@.str.14 = private unnamed_addr constant [111 x i8] c"info.Length() == 5 && info[0]->IsFunction() && info[2]->IsObject() && info[3]->IsInt32() && info[4]->IsInt32()\00", align 1
@.str.15 = private unnamed_addr constant [57 x i8] c"The first argument is the receiver and must be an object\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"v8_helpers::IsTrue(args->Has(context, i + first_arg_index))\00", align 1
@.str.17 = private unnamed_addr constant [65 x i8] c"info.Length() == 2 && info[0]->IsString() && info[1]->IsObject()\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"!value.IsEmpty() && value->IsObject()\00", align 1

@_ZN10extensions12SafeBuiltinsC1EPNS_13ScriptContextE = hidden unnamed_addr alias void (%"class.extensions::SafeBuiltins"*, %"class.extensions::ScriptContext"*), void (%"class.extensions::SafeBuiltins"*, %"class.extensions::ScriptContext"*)* @_ZN10extensions12SafeBuiltinsC2EPNS_13ScriptContextE
@_ZN10extensions12SafeBuiltinsD1Ev = hidden unnamed_addr alias void (%"class.extensions::SafeBuiltins"*), void (%"class.extensions::SafeBuiltins"*)* @_ZN10extensions12SafeBuiltinsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Extension"* @_ZN10extensions12SafeBuiltins17CreateV8ExtensionEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 56) #11
  %2 = bitcast i8* %1 to %"class.v8::Extension"*
  tail call void @_ZN2v89ExtensionC2EPKcS2_iPS2_i(%"class.v8::Extension"* nonnull %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions12_GLOBAL__N_110kClassNameE, i64 0, i64 0), i8* getelementptr inbounds ([3205 x i8], [3205 x i8]* @_ZN10extensions12_GLOBAL__N_17kScriptE, i64 0, i64 0), i32 0, i8** null, i32 -1) #12
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_113ExtensionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret %"class.v8::Extension"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions12SafeBuiltinsC2EPNS_13ScriptContextE(%"class.extensions::SafeBuiltins"* nocapture, %"class.extensions::ScriptContext"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  store %"class.extensions::ScriptContext"* %1, %"class.extensions::ScriptContext"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions12SafeBuiltinsD2Ev(%"class.extensions::SafeBuiltins"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins8GetArrayEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8*, %"class.v8::Context"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %1) #12
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #12
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions12_GLOBAL__N_110kClassNameE, i64 0, i64 0), i8* %0) #12
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %7
  %15 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %6, i8* %14, i32 0, i32 -1) #12
  %16 = icmp eq %"class.v8::String"* %15, null
  br i1 %16, label %17, label %18, !prof !2

17:                                               ; preds = %2
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %18

18:                                               ; preds = %17, %2
  %19 = call %"class.v8::Private"* @_ZN2v87Private6ForApiEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"* %6, %"class.v8::String"* %15) #12
  %20 = load i8, i8* %9, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %18, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  %25 = call %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %1, %"class.v8::Private"* %19) #12
  %26 = icmp eq %"class.v8::Value"* %25, null
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %24
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %28

28:                                               ; preds = %24, %27
  %29 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %25) #12
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 153, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0)) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  %33 = call i64 @strlen(i8* %0) #12
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* %0, i64 %33) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %35

35:                                               ; preds = %28, %30
  %36 = bitcast %"class.v8::Value"* %25 to %"class.v8::Object"*
  ret %"class.v8::Object"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins11GetFunctionEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins7GetJSONEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins9GetObjektEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins9GetRegExpEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins9GetStringEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins8GetErrorEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZNK10extensions12SafeBuiltins10GetPromiseEv(%"class.extensions::SafeBuiltins"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SafeBuiltins", %"class.extensions::SafeBuiltins"* %0, i64 0, i32 0
  %3 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %3, i64 0, i32 15
  %9 = bitcast %"class.v8::Isolate"** %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #12
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi %"class.v8::Context"* [ %14, %7 ], [ null, %1 ]
  %17 = tail call fastcc %"class.v8::Object"* @_ZN10extensions12_GLOBAL__N_14LoadEPKcN2v85LocalINS3_7ContextEEE(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), %"class.v8::Context"* %16)
  ret %"class.v8::Object"* %17
}

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*) local_unnamed_addr #4

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare %"class.v8::Private"* @_ZN2v87Private6ForApiEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #4

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

declare %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #4

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

declare void @_ZN2v89ExtensionC2EPKcS2_iPS2_i(%"class.v8::Extension"*, i8*, i8*, i32, i8**, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v89ExtensionD2Ev(%"class.v8::Extension"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::Extension", %"class.v8::Extension"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v89ExtensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::Extension", %"class.v8::Extension"* %0, i64 0, i32 3
  %4 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %3, align 8
  %5 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %4 to void (%"class.v8::String::ExternalOneByteStringResource"*)***
  %8 = load void (%"class.v8::String::ExternalOneByteStringResource"*)**, void (%"class.v8::String::ExternalOneByteStringResource"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::String::ExternalOneByteStringResource"*)*, void (%"class.v8::String::ExternalOneByteStringResource"*)** %8, i64 1
  %10 = load void (%"class.v8::String::ExternalOneByteStringResource"*)*, void (%"class.v8::String::ExternalOneByteStringResource"*)** %9, align 8
  tail call void %10(%"class.v8::String::ExternalOneByteStringResource"* nonnull %4) #12
  br label %11

11:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_113ExtensionImplD0Ev(%"class.extensions::(anonymous namespace)::ExtensionImpl"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ExtensionImpl", %"class.extensions::(anonymous namespace)::ExtensionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v89ExtensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ExtensionImpl", %"class.extensions::(anonymous namespace)::ExtensionImpl"* %0, i64 0, i32 0, i32 3
  %4 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %3, align 8
  %5 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %4 to void (%"class.v8::String::ExternalOneByteStringResource"*)***
  %8 = load void (%"class.v8::String::ExternalOneByteStringResource"*)**, void (%"class.v8::String::ExternalOneByteStringResource"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::String::ExternalOneByteStringResource"*)*, void (%"class.v8::String::ExternalOneByteStringResource"*)** %8, i64 1
  %10 = load void (%"class.v8::String::ExternalOneByteStringResource"*)*, void (%"class.v8::String::ExternalOneByteStringResource"*)** %9, align 8
  tail call void %10(%"class.v8::String::ExternalOneByteStringResource"* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.extensions::(anonymous namespace)::ExtensionImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.v8::FunctionTemplate"* @_ZN10extensions12_GLOBAL__N_113ExtensionImpl25GetNativeFunctionTemplateEPN2v87IsolateENS2_5LocalINS2_6StringEEE(%"class.extensions::(anonymous namespace)::ExtensionImpl"* nocapture readnone, %"class.v8::Isolate"*, %"class.v8::String"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i32 0, i32 -1) #12
  %5 = icmp eq %"class.v8::String"* %4, null
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %3
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %7

7:                                                ; preds = %3, %6
  %8 = tail call zeroext i1 @_ZNK2v86String12StringEqualsENS_5LocalIS0_EE(%"class.v8::String"* %2, %"class.v8::String"* %4) #12
  br i1 %8, label %15, label %9

9:                                                ; preds = %7
  %10 = tail call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i32 0, i32 -1) #12
  %11 = icmp eq %"class.v8::String"* %10, null
  br i1 %11, label %12, label %13, !prof !2

12:                                               ; preds = %9
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %13

13:                                               ; preds = %9, %12
  %14 = tail call zeroext i1 @_ZNK2v86String12StringEqualsENS_5LocalIS0_EE(%"class.v8::String"* %2, %"class.v8::String"* %10) #12
  br i1 %14, label %15, label %18

15:                                               ; preds = %13, %7
  %16 = phi void (%"class.v8::FunctionCallbackInfo"*)* [ @_ZN10extensions12_GLOBAL__N_113ExtensionImpl5ApplyERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %7 ], [ @_ZN10extensions12_GLOBAL__N_113ExtensionImpl4SaveERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %13 ]
  %17 = tail call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %1, void (%"class.v8::FunctionCallbackInfo"*)* nonnull %16, %"class.v8::Value"* null, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #12
  br label %18

18:                                               ; preds = %15, %13
  %19 = phi %"class.v8::FunctionTemplate"* [ null, %13 ], [ %17, %15 ]
  ret %"class.v8::FunctionTemplate"* %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v89ExtensionD0Ev(%"class.v8::Extension"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::Extension", %"class.v8::Extension"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v89ExtensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::Extension", %"class.v8::Extension"* %0, i64 0, i32 3
  %4 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %3, align 8
  %5 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %4 to void (%"class.v8::String::ExternalOneByteStringResource"*)***
  %8 = load void (%"class.v8::String::ExternalOneByteStringResource"*)**, void (%"class.v8::String::ExternalOneByteStringResource"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::String::ExternalOneByteStringResource"*)*, void (%"class.v8::String::ExternalOneByteStringResource"*)** %8, i64 1
  %10 = load void (%"class.v8::String::ExternalOneByteStringResource"*)*, void (%"class.v8::String::ExternalOneByteStringResource"*)** %9, align 8
  tail call void %10(%"class.v8::String::ExternalOneByteStringResource"* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.v8::Extension"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::FunctionTemplate"* @_ZN2v89Extension25GetNativeFunctionTemplateEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Extension"*, %"class.v8::Isolate"*, %"class.v8::String"*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::FunctionTemplate"* null
}

declare zeroext i1 @_ZNK2v86String12StringEqualsENS_5LocalIS0_EE(%"class.v8::String"*, %"class.v8::String"*) local_unnamed_addr #4

declare %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, %"class.v8::Signature"*, i32, i32, i32, %"class.v8::CFunction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_113ExtensionImpl5ApplyERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.v8::MicrotasksScope", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 5
  br i1 %7, label %8, label %64

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %10 = bitcast i64** %9 to %"class.v8::Value"**
  %11 = load %"class.v8::Value"*, %"class.v8::Value"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %11) #12
  br i1 %12, label %13, label %64

13:                                               ; preds = %8
  %14 = load i32, i32* %5, align 8
  %15 = icmp sgt i32 %14, 2
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 160
  %22 = inttoptr i64 %21 to %"class.v8::Value"*
  br label %27

23:                                               ; preds = %13
  %24 = load i64*, i64** %9, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 2
  %26 = bitcast i64* %25 to %"class.v8::Value"*
  br label %27

27:                                               ; preds = %16, %23
  %28 = phi %"class.v8::Value"* [ %22, %16 ], [ %26, %23 ]
  %29 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %28) #12
  br i1 %29, label %30, label %64

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 8
  %32 = icmp sgt i32 %31, 3
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 160
  %39 = inttoptr i64 %38 to %"class.v8::Value"*
  br label %44

40:                                               ; preds = %30
  %41 = load i64*, i64** %9, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 3
  %43 = bitcast i64* %42 to %"class.v8::Value"*
  br label %44

44:                                               ; preds = %33, %40
  %45 = phi %"class.v8::Value"* [ %39, %33 ], [ %43, %40 ]
  %46 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %45) #12
  br i1 %46, label %47, label %64

47:                                               ; preds = %44
  %48 = load i32, i32* %5, align 8
  %49 = icmp sgt i32 %48, 4
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %61

57:                                               ; preds = %47
  %58 = load i64*, i64** %9, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 4
  %60 = bitcast i64* %59 to %"class.v8::Value"*
  br label %61

61:                                               ; preds = %50, %57
  %62 = phi %"class.v8::Value"* [ %56, %50 ], [ %60, %57 ]
  %63 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %62) #12
  br i1 %63, label %67, label %64

64:                                               ; preds = %61, %44, %27, %8, %1
  %65 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 178, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.14, i64 0, i64 0)) #12
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  br label %67

67:                                               ; preds = %61, %64
  %68 = bitcast %"class.v8::MicrotasksScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  %69 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %70 = bitcast %"class.v8::MicrotasksScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  %71 = load i64*, i64** %69, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 1
  %73 = bitcast i64* %72 to %"class.v8::Isolate"**
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %3, %"class.v8::Isolate"* %74, i32 1) #12
  %75 = load i32, i32* %5, align 8
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %67
  %78 = load i64*, i64** %69, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 160
  %82 = inttoptr i64 %81 to %"class.v8::Function"*
  br label %93

83:                                               ; preds = %67
  %84 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %85 = bitcast i64** %84 to %"class.v8::Function"**
  %86 = load %"class.v8::Function"*, %"class.v8::Function"** %85, align 8
  %87 = icmp eq i32 %75, 1
  br i1 %87, label %88, label %97

88:                                               ; preds = %83
  %89 = load i64*, i64** %69, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  br label %93

93:                                               ; preds = %88, %77
  %94 = phi i64 [ %92, %88 ], [ %81, %77 ]
  %95 = phi %"class.v8::Function"* [ %86, %88 ], [ %82, %77 ]
  %96 = inttoptr i64 %94 to %"class.v8::Value"*
  br label %100

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"class.v8::Function", %"class.v8::Function"* %86, i64 8
  %99 = bitcast %"class.v8::Function"* %98 to %"class.v8::Value"*
  br label %100

100:                                              ; preds = %93, %97
  %101 = phi %"class.v8::Function"* [ %95, %93 ], [ %86, %97 ]
  %102 = phi %"class.v8::Value"* [ %96, %93 ], [ %99, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %102) #12
  %104 = load i32, i32* %5, align 8
  %105 = icmp sgt i32 %104, 1
  br i1 %103, label %106, label %118

106:                                              ; preds = %100
  br i1 %105, label %113, label %107

107:                                              ; preds = %106
  %108 = load i64*, i64** %69, align 8
  %109 = getelementptr inbounds i64, i64* %108, i64 1
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 160
  %112 = inttoptr i64 %111 to %"class.v8::Value"*
  br label %181

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %115 = load i64*, i64** %114, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = bitcast i64* %116 to %"class.v8::Value"*
  br label %177

118:                                              ; preds = %100
  br i1 %105, label %125, label %119

119:                                              ; preds = %118
  %120 = load i64*, i64** %69, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, 160
  %124 = inttoptr i64 %123 to %"class.v8::Value"*
  br label %130

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %127 = load i64*, i64** %126, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = bitcast i64* %128 to %"class.v8::Value"*
  br label %130

130:                                              ; preds = %119, %125
  %131 = phi %"class.v8::Value"* [ %124, %119 ], [ %129, %125 ]
  %132 = bitcast %"class.v8::Value"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 3
  %135 = icmp eq i64 %134, 1
  br i1 %135, label %136, label %166

136:                                              ; preds = %130
  %137 = add i64 %133, -1
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i64 %133, -4294967296
  %141 = zext i32 %139 to i64
  %142 = or i64 %140, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load i16, i16* %144, align 2
  %146 = icmp ult i16 %145, 64
  br i1 %146, label %147, label %166

147:                                              ; preds = %136
  %148 = load i64*, i64** %69, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = bitcast i64* %149 to %"class.v8::Isolate"**
  %151 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %150, align 8
  br i1 %105, label %156, label %152

152:                                              ; preds = %147
  %153 = ptrtoint %"class.v8::Isolate"* %151 to i64
  %154 = add i64 %153, 160
  %155 = inttoptr i64 %154 to %"class.v8::Value"*
  br label %161

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %158 = load i64*, i64** %157, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 1
  %160 = bitcast i64* %159 to %"class.v8::Value"*
  br label %161

161:                                              ; preds = %152, %156
  %162 = phi %"class.v8::Value"* [ %155, %152 ], [ %160, %156 ]
  %163 = bitcast %"class.v8::Value"* %162 to %"class.v8::String"*
  %164 = call %"class.v8::Value"* @_ZN2v812StringObject3NewEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"* %151, %"class.v8::String"* %163) #12
  %165 = load i32, i32* %5, align 8
  br label %177

166:                                              ; preds = %130, %136
  %167 = load i64*, i64** %69, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 1
  %169 = bitcast i64* %168 to %"class.v8::Isolate"**
  %170 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %169, align 8
  %171 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %170, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.15, i64 0, i64 0), i32 0, i32 -1) #12
  %172 = icmp eq %"class.v8::String"* %171, null
  br i1 %172, label %173, label %174, !prof !2

173:                                              ; preds = %166
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %174

174:                                              ; preds = %166, %173
  %175 = call %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"* %171) #12
  %176 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %170, %"class.v8::Value"* %175) #12
  br label %285

177:                                              ; preds = %113, %161
  %178 = phi i32 [ %165, %161 ], [ %104, %113 ]
  %179 = phi %"class.v8::Value"* [ %164, %161 ], [ %117, %113 ]
  %180 = icmp sgt i32 %178, 2
  br i1 %180, label %188, label %181

181:                                              ; preds = %107, %177
  %182 = phi %"class.v8::Value"* [ %112, %107 ], [ %179, %177 ]
  %183 = load i64*, i64** %69, align 8
  %184 = getelementptr inbounds i64, i64* %183, i64 1
  %185 = load i64, i64* %184, align 8
  %186 = add i64 %185, 160
  %187 = inttoptr i64 %186 to %"class.v8::Object"*
  br label %199

188:                                              ; preds = %177
  %189 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %190 = load i64*, i64** %189, align 8
  %191 = getelementptr inbounds i64, i64* %190, i64 2
  %192 = bitcast i64* %191 to %"class.v8::Object"*
  %193 = icmp eq i32 %178, 3
  br i1 %193, label %194, label %204

194:                                              ; preds = %188
  %195 = load i64*, i64** %69, align 8
  %196 = getelementptr inbounds i64, i64* %195, i64 1
  %197 = load i64, i64* %196, align 8
  %198 = add i64 %197, 160
  br label %199

199:                                              ; preds = %194, %181
  %200 = phi %"class.v8::Value"* [ %179, %194 ], [ %182, %181 ]
  %201 = phi i64 [ %198, %194 ], [ %186, %181 ]
  %202 = phi %"class.v8::Object"* [ %192, %194 ], [ %187, %181 ]
  %203 = inttoptr i64 %201 to %"class.v8::Value"*
  br label %207

204:                                              ; preds = %188
  %205 = getelementptr inbounds i64, i64* %190, i64 3
  %206 = bitcast i64* %205 to %"class.v8::Value"*
  br label %207

207:                                              ; preds = %199, %204
  %208 = phi %"class.v8::Value"* [ %200, %199 ], [ %179, %204 ]
  %209 = phi %"class.v8::Object"* [ %202, %199 ], [ %192, %204 ]
  %210 = phi %"class.v8::Value"* [ %203, %199 ], [ %206, %204 ]
  %211 = bitcast %"class.v8::Value"* %210 to %"class.v8::Int32"*
  %212 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %211) #12
  %213 = load i32, i32* %5, align 8
  %214 = icmp sgt i32 %213, 4
  br i1 %214, label %221, label %215

215:                                              ; preds = %207
  %216 = load i64*, i64** %69, align 8
  %217 = getelementptr inbounds i64, i64* %216, i64 1
  %218 = load i64, i64* %217, align 8
  %219 = add i64 %218, 160
  %220 = inttoptr i64 %219 to %"class.v8::Value"*
  br label %226

221:                                              ; preds = %207
  %222 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %223 = load i64*, i64** %222, align 8
  %224 = getelementptr inbounds i64, i64* %223, i64 4
  %225 = bitcast i64* %224 to %"class.v8::Value"*
  br label %226

226:                                              ; preds = %215, %221
  %227 = phi %"class.v8::Value"* [ %220, %215 ], [ %225, %221 ]
  %228 = bitcast %"class.v8::Value"* %227 to %"class.v8::Int32"*
  %229 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %228) #12
  %230 = load i64*, i64** %69, align 8
  %231 = getelementptr inbounds i64, i64* %230, i64 1
  %232 = bitcast i64* %231 to %"class.v8::Isolate"**
  %233 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %232, align 8
  %234 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %233) #12
  %235 = sub i32 %229, %212
  %236 = sext i32 %235 to i64
  %237 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %236, i64 8)
  %238 = extractvalue { i64, i1 } %237, 1
  %239 = extractvalue { i64, i1 } %237, 0
  %240 = select i1 %238, i64 -1, i64 %239
  %241 = call i8* @_Znam(i64 %240) #11
  %242 = bitcast i8* %241 to %"class.v8::Local.79"*
  %243 = icmp eq i32 %235, 0
  br i1 %243, label %276, label %244

244:                                              ; preds = %226
  %245 = sext i32 %229 to i64
  %246 = shl nsw i64 %245, 3
  %247 = add nsw i64 %246, -8
  %248 = sext i32 %212 to i64
  %249 = shl nsw i64 %248, 3
  %250 = sub nsw i64 %247, %249
  %251 = add nsw i64 %250, 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %241, i8 0, i64 %251, i1 false)
  %252 = icmp sgt i32 %235, 0
  br i1 %252, label %253, label %276

253:                                              ; preds = %244
  %254 = bitcast %"class.logging::CheckError"* %4 to i8*
  %255 = zext i32 %235 to i64
  br label %258

256:                                              ; preds = %269
  %257 = icmp eq i64 %275, %255
  br i1 %257, label %276, label %258

258:                                              ; preds = %256, %253
  %259 = phi i64 [ 0, %253 ], [ %275, %256 ]
  %260 = trunc i64 %259 to i32
  %261 = add nsw i32 %212, %260
  %262 = call i16 @_ZN2v86Object3HasENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %209, %"class.v8::Context"* %234, i32 %261) #12
  %263 = trunc i16 %262 to i8
  %264 = icmp ne i8 %263, 0
  %265 = icmp ugt i16 %262, 255
  %266 = and i1 %265, %264
  br i1 %266, label %269, label %267

267:                                              ; preds = %258
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0)) #12
  %268 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #12
  br label %269

269:                                              ; preds = %258, %267
  %270 = getelementptr inbounds %"class.v8::Local.79", %"class.v8::Local.79"* %242, i64 %259
  %271 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %209, %"class.v8::Context"* %234, i32 %261) #12
  %272 = ptrtoint %"class.v8::Value"* %271 to i64
  %273 = bitcast %"class.v8::Local.79"* %270 to i64*
  store i64 %272, i64* %273, align 8
  %274 = icmp eq %"class.v8::Value"* %271, null
  %275 = add nuw nsw i64 %259, 1
  br i1 %274, label %284, label %256

276:                                              ; preds = %256, %226, %244
  %277 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* %101, %"class.v8::Context"* %234, %"class.v8::Value"* %208, i32 %235, %"class.v8::Local.79"* nonnull %242) #12
  %278 = icmp eq %"class.v8::Value"* %277, null
  br i1 %278, label %284, label %279

279:                                              ; preds = %276
  %280 = load i64*, i64** %69, align 8
  %281 = getelementptr inbounds i64, i64* %280, i64 3
  %282 = bitcast %"class.v8::Value"* %277 to i64*
  %283 = load i64, i64* %282, align 8
  store i64 %283, i64* %281, align 8
  br label %284

284:                                              ; preds = %269, %276, %279
  call void @_ZdaPv(i8* nonnull %241) #11
  br label %285

285:                                              ; preds = %284, %174
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_113ExtensionImpl4SaveERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.v8::String::Utf8Value", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 3
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %30

15:                                               ; preds = %9
  %16 = add i64 %12, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %12, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  %25 = icmp ult i16 %24, 64
  br i1 %25, label %26, label %30

26:                                               ; preds = %15
  %27 = getelementptr inbounds i64, i64* %11, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Value"*
  %29 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %28) #12
  br i1 %29, label %33, label %30

30:                                               ; preds = %9, %26, %15, %1
  %31 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 218, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.17, i64 0, i64 0)) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %26, %30
  %34 = bitcast %"class.v8::String::Utf8Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 1
  %38 = bitcast i64* %37 to %"class.v8::Isolate"**
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %40 = load i32, i32* %6, align 8
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %33
  %43 = ptrtoint %"class.v8::Isolate"* %39 to i64
  %44 = add i64 %43, 160
  %45 = inttoptr i64 %44 to %"class.v8::Value"*
  br label %50

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = bitcast i64** %47 to %"class.v8::Value"**
  %49 = load %"class.v8::Value"*, %"class.v8::Value"** %48, align 8
  br label %50

50:                                               ; preds = %42, %46
  %51 = phi %"class.v8::Value"* [ %45, %42 ], [ %49, %46 ]
  call void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"* nonnull %5, %"class.v8::Isolate"* %39, %"class.v8::Value"* %51) #12
  %52 = getelementptr inbounds %"class.v8::String::Utf8Value", %"class.v8::String::Utf8Value"* %5, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = load i32, i32* %6, align 8
  %55 = icmp sgt i32 %54, 1
  br i1 %55, label %62, label %56

56:                                               ; preds = %50
  %57 = load i64*, i64** %35, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 160
  %61 = inttoptr i64 %60 to %"class.v8::Value"*
  br label %68

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = bitcast i64* %65 to %"class.v8::Value"*
  %67 = load i64*, i64** %35, align 8
  br label %68

68:                                               ; preds = %56, %62
  %69 = phi i64* [ %57, %56 ], [ %67, %62 ]
  %70 = phi %"class.v8::Value"* [ %61, %56 ], [ %66, %62 ]
  %71 = getelementptr inbounds i64, i64* %69, i64 1
  %72 = bitcast i64* %71 to %"class.v8::Isolate"**
  %73 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %72, align 8
  %74 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %73) #12
  %75 = icmp eq %"class.v8::Value"* %70, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %68
  %77 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %70) #12
  br i1 %77, label %83, label %78

78:                                               ; preds = %76, %68
  %79 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #12
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  %81 = call i64 @strlen(i8* %53) #12
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %80, i8* %53, i64 %81) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  br label %83

83:                                               ; preds = %78, %76
  %84 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %74) #12
  %85 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %74) #12
  %86 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions12_GLOBAL__N_110kClassNameE, i64 0, i64 0), i8* %53) #12
  %87 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = select i1 %90, i8* %92, i8* %86
  %94 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %85, i8* %93, i32 0, i32 -1) #12
  %95 = icmp eq %"class.v8::String"* %94, null
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %97

97:                                               ; preds = %96, %83
  %98 = call %"class.v8::Private"* @_ZN2v87Private6ForApiEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"* %85, %"class.v8::String"* %94) #12
  %99 = load i8, i8* %88, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %101, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  %104 = call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* %84, %"class.v8::Context"* %74, %"class.v8::Private"* %98, %"class.v8::Value"* %70) #12
  %105 = trunc i16 %104 to i8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %103
  call void @_ZN2v82V817FromJustIsNothingEv() #12
  br label %108

108:                                              ; preds = %103, %107
  call void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  ret void
}

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #4

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v812StringObject3NewEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"*) local_unnamed_addr #4

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #4

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

declare i16 @_ZN2v86Object3HasENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"*, %"class.v8::Context"*, %"class.v8::Value"*, i32, %"class.v8::Local.79"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #5

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"*) unnamed_addr #5

declare i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*, %"class.v8::Value"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
