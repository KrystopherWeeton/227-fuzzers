; ModuleID = '../../components/omnibox/browser/url_index_private_data.cc'
source_filename = "../../components/omnibox/browser/url_index_private_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.google::protobuf::internal::ExplicitlyConstructed" = type { %"union.google::protobuf::internal::ExplicitlyConstructed<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::AlignedUnion" }
%"union.google::protobuf::internal::ExplicitlyConstructed<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::AlignedUnion" = type { i64, [16 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::nothrow_t" = type { i8 }
%class.UpdateRecentVisitsFromHistoryDBTask = type { %"class.history::HistoryDBTask", %class.URLIndexPrivateData*, i64, i8, %"class.std::__1::vector.83" }
%"class.history::HistoryDBTask" = type { i32 (...)** }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.history::VisitRow"*, %"class.history::VisitRow"*, %"class.std::__1::__compressed_pair.85" }
%"class.history::VisitRow" = type <{ i64, i64, %"class.base::Time", i64, i32, [4 x i8], i64, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.history::VisitRow"* }
%class.URLIndexPrivateData = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::map", i32, [4 x i8], %"class.base::Time", %"class.std::__1::vector", %"class.std::__1::stack", %"class.std::__1::map.15", %"class.std::__1::map.24", %"class.std::__1::map.35", %"class.std::__1::map.46", %"class.std::__1::unordered_map", %"class.std::__1::map.74", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { i64*, i64 }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::map.24" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { float }
%"class.std::__1::map.74" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.URLIndexPrivateData::SearchTermCacheItem" = type <{ %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.517", i8, [7 x i8] }>
%"class.base::internal::flat_tree.520" = type { %"class.std::__1::vector.420" }
%"class.std::__1::vector.420" = type { %"class.std::__1::__vector_base.421" }
%"class.std::__1::__vector_base.421" = type { i64*, i64*, %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { i64* }
%"class.base::internal::flat_tree.517" = type { %"class.std::__1::vector.428" }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { i64*, i64*, %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { i64* }
%"class.URLIndexPrivateData::HistoryItemFactorGreater" = type { %"class.std::__1::unordered_map"* }
%"class.history::HistoryBackend" = type opaque
%"class.history::HistoryDatabase" = type { %"class.history::DownloadDatabase.base", %"class.history::TypedURLSyncMetadataDatabase", %"class.history::URLDatabase.base", %"class.history::VisitDatabase", %"class.history::VisitAnnotationsDatabase", %"class.history::VisitSegmentDatabase", %"class.sql::Database", %"class.sql::MetaTable", %"class.base::Time" }
%"class.history::DownloadDatabase.base" = type <{ i32 (...)**, i8, [3 x i8], i32, i8, [3 x i8], i32, i32 }>
%"class.history::TypedURLSyncMetadataDatabase" = type { %"class.syncer::SyncMetadataStore" }
%"class.syncer::SyncMetadataStore" = type { i32 (...)** }
%"class.history::URLDatabase.base" = type <{ i32 (...)**, i8 }>
%"class.history::VisitDatabase" = type { i32 (...)** }
%"class.history::VisitAnnotationsDatabase" = type { i32 (...)** }
%"class.history::VisitSegmentDatabase" = type { i32 (...)** }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string.107", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr.121" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.90" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.92" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.106", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::basic_string.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.110 }
%union.anon.110 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.116", [4 x i8] }>
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i32 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.sql::MetaTable" = type { %"class.sql::Database"* }
%"struct.std::__1::pair.487" = type <{ %"class.base::Time", i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.395" = type { %"class.std::__1::__vector_base.396" }
%"class.std::__1::__vector_base.396" = type { %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %"class.std::__1::__compressed_pair.404" }
%struct.ScoredHistoryMatch = type { %"struct.history::HistoryMatch.base", i32, %"class.std::__1::vector.397", %"class.std::__1::vector.397" }
%"struct.history::HistoryMatch.base" = type <{ %"class.history::URLRow", i64, i8, i8, i8 }>
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string.107", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.141" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.GURL* }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %struct.TermMatch*, %struct.TermMatch*, %"class.std::__1::__compressed_pair.399" }
%struct.TermMatch = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %struct.TermMatch* }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %struct.ScoredHistoryMatch* }
%"class.bookmarks::BookmarkModel" = type { %"class.bookmarks::BookmarkUndoProvider", %class.KeyedService, %"class.std::__1::unique_ptr.125", i8, %"class.std::__1::unique_ptr.131", %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, i64, %"class.base::ObserverList", %"class.base::CancelableTaskTracker", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %class.scoped_refptr.207, i32, %"class.std::__1::unique_ptr.208", %"class.std::__1::set.214", %"class.bookmarks::BookmarkUndoDelegate"*, %"class.std::__1::unique_ptr.222", %class.scoped_refptr.228, %"class.base::WeakPtrFactory.229" }
%"class.bookmarks::BookmarkUndoProvider" = type { i32 (...)** }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.bookmarks::BookmarkClient"* }
%"class.bookmarks::BookmarkClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.bookmarks::BookmarkNode"* }
%"class.bookmarks::BookmarkNode" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.141", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.148", i8, [7 x i8] }>
%"class.ui::TreeNode" = type { %"class.ui::TreeModelNode", %"class.std::__1::basic_string", %"class.bookmarks::BookmarkNode"*, %"class.std::__1::vector.134" }
%"class.ui::TreeModelNode" = type { i32 (...)** }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"class.std::__1::unique_ptr.131"*, %"class.std::__1::unique_ptr.131"*, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::unique_ptr.131"* }
%"class.bookmarks::TitledUrlNode" = type { i32 (...)** }
%"class.base::GUID" = type { %"class.std::__1::basic_string.107" }
%"class.gfx::Image" = type { %class.scoped_refptr.147 }
%class.scoped_refptr.147 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::map.151"* }
%"class.std::__1::map.151" = type { %"class.std::__1::__tree.152" }
%"class.std::__1::__tree.152" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.bookmarks::BookmarkPermanentNode" = type { %"class.bookmarks::BookmarkNode.base", i8, [6 x i8] }
%"class.bookmarks::BookmarkNode.base" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.141", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.148", i8 }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.168", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.170" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.175 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.175 = type { [4 x %"struct.std::__1::pair.176"] }
%"struct.std::__1::pair.176" = type { i64, %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.188", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.188" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.189" }
%"struct.std::__1::atomic.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.194 }
%class.scoped_refptr.194 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.bookmarks::BookmarkStorage"* }
%"class.bookmarks::BookmarkStorage" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.bookmarks::TitledUrlIndex"* }
%"class.bookmarks::TitledUrlIndex" = type opaque
%class.scoped_refptr.207 = type { %"class.bookmarks::UrlIndex"* }
%"class.bookmarks::UrlIndex" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.bookmarks::BookmarkExpandedStateTracker"* }
%"class.bookmarks::BookmarkExpandedStateTracker" = type opaque
%"class.std::__1::set.214" = type { %"class.std::__1::__tree.215" }
%"class.std::__1::__tree.215" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.bookmarks::BookmarkUndoDelegate" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.bookmarks::BookmarkUndoDelegate"* }
%class.scoped_refptr.228 = type { %"class.bookmarks::ModelLoader"* }
%"class.bookmarks::ModelLoader" = type opaque
%"class.base::WeakPtrFactory.229" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.TemplateURLService = type { %class.WebDataServiceConsumer, %class.KeyedService, %"class.syncer::SyncableService", %class.PrefService*, %"class.std::__1::unique_ptr.230", %class.scoped_refptr.236, %"class.std::__1::unique_ptr.251", %"class.base::RepeatingCallback.250", %class.PrefChangeRegistrar, %"class.std::__1::multimap", %"class.std::__1::map.274", %"class.std::__1::vector.283", %"class.base::ObserverList.330", %"class.std::__1::unique_ptr.342", i8, i8, i8, i32, %"class.std::__1::vector.358", %class.TemplateURL*, %"class.std::__1::unique_ptr.285", i32, i64, %"class.std::__1::unique_ptr.365", i8, i8, i8, %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.377", %"class.std::__1::set.214", i32, %"class.base::OnceCallbackList", %"class.base::OnceCallback", %class.DefaultSearchManager, i32, i8, %"class.std::__1::basic_string.107", %"class.base::TimeTicks" }
%class.WebDataServiceConsumer = type { i32 (...)** }
%"class.syncer::SyncableService" = type { i32 (...)**, %"class.base::SupportsWeakPtr" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%class.PrefService = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.SearchTermsData* }
%class.SearchTermsData = type { i32 (...)** }
%class.scoped_refptr.236 = type { %class.KeywordWebDataService* }
%class.KeywordWebDataService = type { %class.WebDataServiceBase, i64, %"class.std::__1::vector.240", %"class.base::RetainingOneShotTimer" }
%class.WebDataServiceBase = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence", %class.scoped_refptr.239 }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.238" }>
%"class.base::RefCountedThreadSafe.238" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.239 = type { %class.WebDatabaseService* }
%class.WebDatabaseService = type opaque
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"struct.std::__1::pair.242"*, %"struct.std::__1::pair.242"*, %"class.std::__1::__compressed_pair.243" }
%"struct.std::__1::pair.242" = type opaque
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::pair.242"* }
%"class.base::RetainingOneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.250" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.237, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.249" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.249" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %class.TemplateURLServiceClient* }
%class.TemplateURLServiceClient = type opaque
%"class.base::RepeatingCallback.250" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.257", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.257" = type { %"class.std::__1::__tree.258" }
%"class.std::__1::__tree.258" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.266" }
%"class.std::__1::__tree.266" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::map.274" = type { %"class.std::__1::__tree.275" }
%"class.std::__1::__tree.275" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"class.std::__1::unique_ptr.285"*, %"class.std::__1::unique_ptr.285"*, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.std::__1::unique_ptr.285"* }
%"class.base::ObserverList.330" = type <{ %"class.std::__1::vector.331", %"class.base::LinkedList.339", i64, i32, [4 x i8] }>
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.334" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.333" }
%"class.base::WeakPtr.333" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.339" = type { %"class.base::LinkNode.340" }
%"class.base::LinkNode.340" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %class.SearchHostToURLsMap* }
%class.SearchHostToURLsMap = type <{ %"class.std::__1::map.345", %"class.std::__1::basic_string.107", i8, [7 x i8] }>
%"class.std::__1::map.345" = type { %"class.std::__1::__tree.346" }
%"class.std::__1::__tree.346" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"struct.TemplateURLService::URLVisitedDetails"*, %"struct.TemplateURLService::URLVisitedDetails"*, %"class.std::__1::__compressed_pair.360" }
%"struct.TemplateURLService::URLVisitedDetails" = type <{ %class.GURL, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.TemplateURLService::URLVisitedDetails"* }
%class.TemplateURL = type { %struct.TemplateURLData, %"class.std::__1::vector.295", %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %"class.std::__1::unique_ptr.316", i32, i32 }
%struct.TemplateURLData = type { %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %class.GURL, %class.GURL, %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.288", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string.107", %"class.std::__1::vector.288", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.107" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"*, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::basic_string.107"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %class.TemplateURLRef*, %class.TemplateURLRef*, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %class.TemplateURLRef* }
%class.TemplateURLRef = type <{ %class.TemplateURL*, i32, [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string.107", i8, [7 x i8], %"class.std::__1::vector.297", i8, [7 x i8], %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", i32, [4 x i8], %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::vector.304", i8, [7 x i8] }>
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"struct.TemplateURLRef::Replacement"*, %"struct.TemplateURLRef::Replacement"*, %"class.std::__1::__compressed_pair.299" }
%"struct.TemplateURLRef::Replacement" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.TemplateURLRef::Replacement"* }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.TemplateURLRef::PostParam"*, %"struct.TemplateURLRef::PostParam"*, %"class.std::__1::__compressed_pair.306" }
%"struct.TemplateURLRef::PostParam" = type { %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.TemplateURLRef::PostParam"* }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.TemplateURL::AssociatedExtensionInfo"* }
%"struct.TemplateURL::AssociatedExtensionInfo" = type <{ %"class.std::__1::basic_string.107", %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %class.TemplateURL* }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.base::Clock"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.syncer::SyncChangeProcessor"* }
%"class.syncer::SyncChangeProcessor" = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.syncer::SyncErrorFactory"* }
%"class.syncer::SyncErrorFactory" = type opaque
%"class.base::OnceCallbackList" = type { %"class.base::internal::CallbackListBase", %"class.std::__1::list" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback.250", %"class.base::WeakPtrFactory.387" }
%"class.base::WeakPtrFactory.387" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.383" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%class.DefaultSearchManager = type <{ %class.PrefService*, %"class.base::RepeatingCallback.388", %class.PrefChangeRegistrar, %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.389", i8, [7 x i8] }>
%"class.base::RepeatingCallback.388" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %struct.TemplateURLData* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.248" }
%"class.base::time_internal::TimeBase.248" = type { i64 }
%"struct.std::__1::pair.618" = type { %"class.std::__1::basic_string", %"struct.URLIndexPrivateData::SearchTermCacheItem" }
%"class.std::__1::set.409" = type { %"class.std::__1::__tree.410" }
%"class.std::__1::__tree.410" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.411", %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::set.436" = type { %"class.std::__1::__tree.437" }
%"class.std::__1::__tree.437" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.438", %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.521" }
%"struct.std::__1::pair.521" = type { %"class.std::__1::basic_string", %"struct.URLIndexPrivateData::SearchTermCacheItem" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.111 }
%struct.anon.111 = type { i8 }
%"class.std::__1::__tree_node.604" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::__tree_node.592" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::vector" }
%"class.std::__1::__tree_node.588" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.589" }
%"struct.std::__1::__value_type.589" = type { %"struct.std::__1::pair.540" }
%"struct.std::__1::pair.540" = type { i64, %struct.RowWordStarts }
%struct.RowWordStarts = type { %"class.std::__1::vector.420", %"class.std::__1::vector.420" }
%"class.std::__1::vector.485" = type { %"class.std::__1::__vector_base.486" }
%"class.std::__1::__vector_base.486" = type { %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"*, %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.std::__1::pair.487"* }
%"class.history::HistoryService" = type { %class.KeyedService, %class.scoped_refptr.237, %class.scoped_refptr.445, %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", i8, [7 x i8], %"class.base::ObserverList.464", %"class.base::RepeatingCallbackList", %"class.std::__1::unique_ptr.477", %"class.base::OnceCallback", %"class.base::WeakPtrFactory.483" }
%class.scoped_refptr.445 = type { %"class.history::HistoryBackend"* }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.history::InMemoryHistoryBackend"* }
%"class.history::InMemoryHistoryBackend" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.history::HistoryClient"* }
%"class.history::HistoryClient" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.history::VisitDelegate"* }
%"class.history::VisitDelegate" = type opaque
%"class.base::ObserverList.464" = type <{ %"class.std::__1::vector.168", %"class.base::LinkedList.465", i64, i32, [4 x i8] }>
%"class.base::LinkedList.465" = type { %"class.base::LinkNode.466" }
%"class.base::LinkNode.466" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase.468" }
%"class.base::internal::CallbackListBase.468" = type { %"class.std::__1::list.469", i8, %"class.base::RepeatingCallback.250", %"class.base::WeakPtrFactory.476" }
%"class.std::__1::list.469" = type { %"class.std::__1::__list_imp.470" }
%"class.std::__1::__list_imp.470" = type { %"struct.std::__1::__list_node_base.471", %"class.std::__1::__compressed_pair.472" }
%"struct.std::__1::__list_node_base.471" = type { %"struct.std::__1::__list_node_base.471"*, %"struct.std::__1::__list_node_base.471"* }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::WeakPtrFactory.476" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.history::DeleteDirectiveHandler"* }
%"class.history::DeleteDirectiveHandler" = type opaque
%"class.base::WeakPtrFactory.483" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::tuple.623" = type { %"struct.std::__1::__tuple_impl.624" }
%"struct.std::__1::__tuple_impl.624" = type { %"class.std::__1::__tuple_leaf.625" }
%"class.std::__1::__tuple_leaf.625" = type { i64* }
%"class.std::__1::tuple.626" = type { i8 }
%"class.std::__1::allocator.114" = type { i8 }
%"class.base::internal::flat_tree.522" = type { %"class.std::__1::vector.523" }
%"class.std::__1::vector.523" = type { %"class.std::__1::__vector_base.524" }
%"class.std::__1::__vector_base.524" = type { i16*, i16*, %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { i16* }
%"class.std::__1::__tree_node.585" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.586" }
%"struct.std::__1::__value_type.586" = type { %"struct.std::__1::pair.587" }
%"struct.std::__1::pair.587" = type { i64, %"class.base::internal::flat_tree.520" }
%"class.std::__1::__tree_node.583" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.584" }
%"struct.std::__1::__value_type.584" = type { %"struct.std::__1::pair.533" }
%"struct.std::__1::pair.533" = type { i64, %"class.base::internal::flat_tree.517" }
%"class.std::__1::__tree_node.581" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.582" }
%"struct.std::__1::__value_type.582" = type { %"struct.std::__1::pair.537" }
%"struct.std::__1::pair.537" = type { i16, %"class.base::internal::flat_tree.520" }
%"struct.std::__1::__less.594" = type { i8 }
%"class.base::internal::flat_tree.542" = type { %"class.std::__1::vector" }
%"class.std::__1::vector.541" = type opaque
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.484" }
%"struct.std::__1::pair.484" = type { i64, %struct.HistoryInfoMapValue }
%struct.HistoryInfoMapValue = type { %"class.history::URLRow", %"class.std::__1::vector.485" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.107" }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"*, i64, i32, i32 }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.501", %"struct.std::__1::atomic.501", %"struct.std::__1::atomic.505", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.505" = type { %"struct.std::__1::__atomic_base.506" }
%"struct.std::__1::__atomic_base.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__cxx_atomic_impl.508" }
%"struct.std::__1::__cxx_atomic_impl.508" = type { %"struct.std::__1::__cxx_atomic_base_impl.509" }
%"struct.std::__1::__cxx_atomic_base_impl.509" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.510", i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.510" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.511", i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.511" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.512", i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.512" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.513", i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.513" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.514", i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.514" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.107", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.history::URLDatabase::URLEnumerator" = type { %"class.history::URLDatabase::URLEnumeratorBase" }
%"class.history::URLDatabase::URLEnumeratorBase" = type { i32 (...)**, i8, [7 x i8], %"class.sql::Statement" }
%"class.sql::Statement" = type <{ %class.scoped_refptr.515, i8, i8, [6 x i8] }>
%class.scoped_refptr.515 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.history::URLDatabase" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::__tree_node.579" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.580" }
%"struct.std::__1::__value_type.580" = type { %"struct.std::__1::pair.549" }
%"struct.std::__1::pair.549" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::tuple.678" = type { %"struct.std::__1::__tuple_impl.679" }
%"struct.std::__1::__tuple_impl.679" = type { %"class.std::__1::__tuple_leaf.680" }
%"class.std::__1::__tuple_leaf.680" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::allocator.8" = type { i8 }
%class.TailoredWordBreakIterator = type { %"class.base::i18n::BreakIterator", i64, i64, %"class.base::BasicStringPiece" }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"struct.std::__1::pair.547" = type { %"class.std::__1::basic_string", i64 }
%"struct.google::protobuf::internal::InternalMetadata::ContainerBase" = type { %"class.google::protobuf::Arena"* }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i32, [4 x i8] }>
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string.107"* }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"struct.std::__1::atomic", i32, i32, [4 x i8] }>
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField.562", %"struct.std::__1::atomic", i32, i32, [4 x i8] }>
%"class.google::protobuf::RepeatedField.562" = type { i32, i32, i8* }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.563", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i32, i32, i64 }
%"class.google::protobuf::RepeatedPtrField.563" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i64, i64 }
%"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"struct.std::__1::atomic", %"class.google::protobuf::RepeatedField", %"struct.std::__1::atomic", i64 }
%"class.std::__1::tuple.749" = type { %"struct.std::__1::__tuple_impl.750" }
%"struct.std::__1::__tuple_impl.750" = type { %"class.std::__1::__tuple_leaf.751" }
%"class.std::__1::__tuple_leaf.751" = type { %"class.std::__1::basic_string"* }
%"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641", %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.std::__1::__tree_node.579"* }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.std::__1::__tree_node_destructor.643" }
%"class.std::__1::__tree_node_destructor.643" = type <{ %"class.std::__1::allocator.19"*, i8, [7 x i8] }>
%"class.std::__1::allocator.19" = type { i8 }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683", %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::__tree_node"* }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::__tree_node_destructor.685" }
%"class.std::__1::__tree_node_destructor.685" = type <{ %"class.std::__1::allocator"*, i8, [7 x i8] }>
%"class.std::__1::allocator" = type { i8 }
%"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare" = type { i8 }
%"struct.std::__1::__temp_value.718" = type { %"struct.std::__1::aligned_storage<24, 8>::type", %"class.std::__1::allocator.13"* }
%"struct.std::__1::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"class.std::__1::allocator.13" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.std::__1::allocator.13"* }
%"struct.std::__1::__split_buffer.710" = type { i64*, i64*, i64*, %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.423", %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.std::__1::allocator.425"* }
%"class.std::__1::allocator.425" = type { i8 }
%"struct.std::__1::__split_buffer.698" = type { i64*, i64*, i64*, %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.431", %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.std::__1::allocator.433"* }
%"class.std::__1::allocator.433" = type { i8 }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671", %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.67"*, i8, [7 x i8] }>
%"class.std::__1::allocator.67" = type { i8 }
%"class.std::__1::__tree_node.768" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string.107" }

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_ = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEE6insertINS_11__wrap_iterIPlEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKlEES9_S9_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZN4base14circular_dequeImED2Ev = comdat any

$_ZN4base8internal12VectorBufferImEixEm = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN6google8protobuf8internal20RepeatedPtrFieldBase3AddINS0_16RepeatedPtrFieldINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE11TypeHandlerELPv0EEEvONT_4TypeE = comdat any

$_ZN6google8protobuf8internal21arena_destruct_objectINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvPv = comdat any

$_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

$_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE4findIS9_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE15__insert_uniqueERKS9_ = comdat any

$_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__114__partial_sortIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_SA_T_ = comdat any

$_ZNSt3__111__sift_downIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_ = comdat any

$_ZNSt3__16vectorI18ScoredHistoryMatchNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE = comdat any

$_ZNSt3__16__sortIRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRK18ScoredHistoryMatchS3_EPS1_EEbT0_S8_T_ = comdat any

$_ZNSt3__14pairINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEC2IRNS0_IKS6_S8_EELb0EEEOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZN4base14circular_dequeImE6assignINS_8internal29circular_deque_const_iteratorImEEEENSt3__19enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZN4base14circular_dequeImE10MoveBufferERNS_8internal12VectorBufferImEEmmPS4_PmS7_ = comdat any

$_ZN4base8internal12VectorBufferImE9MoveRangeImLi0EEEvPmS4_S4_ = comdat any

$_ZN4base14circular_dequeImE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferImEixEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE14__assign_multiINS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEEEvT_SM_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE19__node_insert_multiEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__emplace_multiIJRKNS_4pairIKS7_mEEEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_4pairIKS7_mEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKDsSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKmSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKlSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEEEEvT_SM_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE19__node_insert_multiEPNS_11__hash_nodeIS3_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE27__node_insert_multi_prepareEmRS3_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SI_ = comdat any

$_ZNSt3__16__sortIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEbT0_SD_T_ = comdat any

$_ZNSt3__113__nth_elementIRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEvT0_S7_S7_T_ = comdat any

$_ZNSt3__17__sort3IRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEjT0_S7_S7_T_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZN4base8internal9flat_treeIDsNS_8identityENSt3__14lessIvEENS3_6vectorIDsNS3_9allocatorIDsEEEEE21emplace_hint_key_argsIDsJRKDsEEENS3_4pairINS3_11__wrap_iterIPDsEEbEENSF_IPSC_EERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIDsNS_9allocatorIDsEEE7emplaceIJRKDsEEENS_11__wrap_iterIPDsEENS7_IPS5_EEDpOT_ = comdat any

$_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEE15sort_and_uniqueEv = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

$_ZNSt3__16vectorI18ScoredHistoryMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__111__set_unionIRNS_6__lessINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_11__wrap_iterIPKS7_EESD_NS_15insert_iteratorIN4base8internal9flat_treeIS7_NSF_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEEEEEEET2_T0_SR_T1_SS_SQ_T_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERNS4_IS6_EEE12emplace_backIJRKS6_EEEvDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_mEEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJRKmEEENS_11__wrap_iterIPmEENS7_IPS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferImRNS_9allocatorImEEE12emplace_backIJRKmEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJRKlEEENS_11__wrap_iterIPlEENS7_IPS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJRKlEEEvDpOT_ = comdat any

$_ZN4base14circular_dequeImE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE14__erase_uniqueIlEEmRKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

$_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

@_ZTV35UpdateRecentVisitsFromHistoryDBTask = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.UpdateRecentVisitsFromHistoryDBTask*)* @_ZN35UpdateRecentVisitsFromHistoryDBTaskD2Ev to i8*), i8* bitcast (void (%class.UpdateRecentVisitsFromHistoryDBTask*)* @_ZN35UpdateRecentVisitsFromHistoryDBTaskD0Ev to i8*), i8* bitcast (i1 (%class.UpdateRecentVisitsFromHistoryDBTask*, %"class.history::HistoryBackend"*, %"class.history::HistoryDatabase"*)* @_ZN35UpdateRecentVisitsFromHistoryDBTask13RunOnDBThreadEPN7history14HistoryBackendEPNS0_15HistoryDatabaseE to i8*), i8* bitcast (void (%class.UpdateRecentVisitsFromHistoryDBTask*)* @_ZN35UpdateRecentVisitsFromHistoryDBTask19DoneRunOnMainThreadEv to i8*)] }, align 8
@_ZN19URLIndexPrivateData24kMaxVisitsToStoreInCacheE = hidden local_unnamed_addr constant i64 10, align 8
@.str = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2
@.str.1 = private unnamed_addr constant [27 x i8] c"ScheduleUpdateRecentVisits\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../components/omnibox/browser/url_index_private_data.cc\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"Failed to parse URLIndexPrivateData cache data read from \00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"History.InMemoryURLIndexRestoreCacheTime\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"History.InMemoryURLHistoryItems\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"History.InMemoryURLIndexingTime\00", align 1
@_ZN7omnibox18kHideVisitsFromCctE = external global %"struct.base::Feature", align 8
@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2
@_ZN13url_formatter30kFormatUrlOmitUsernamePasswordE = external local_unnamed_addr constant i32, align 4
@.str.7 = private unnamed_addr constant [48 x i8] c"Failed to serialize the InMemoryURLIndex cache.\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"Failed to write \00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"History.InMemoryURLIndexSaveCacheTime\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@_ZN6google8protobuf8internal26fixed_address_empty_stringE = external global %"class.google::protobuf::internal::ExplicitlyConstructed", align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZZN19URLIndexPrivateData15RestoreFromFileERKN4base8FilePathEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN19URLIndexPrivateData15RestoreFromFileERKN4base8FilePathEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN19URLIndexPrivateData18RebuildFromHistoryEPN7history15HistoryDatabaseERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN19URLIndexPrivateData18RebuildFromHistoryEPN7history15HistoryDatabaseERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN19URLIndexPrivateData10SaveToFileERKN4base8FilePathEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN35UpdateRecentVisitsFromHistoryDBTaskC1EP19URLIndexPrivateDatal = hidden unnamed_addr alias void (%class.UpdateRecentVisitsFromHistoryDBTask*, %class.URLIndexPrivateData*, i64), void (%class.UpdateRecentVisitsFromHistoryDBTask*, %class.URLIndexPrivateData*, i64)* @_ZN35UpdateRecentVisitsFromHistoryDBTaskC2EP19URLIndexPrivateDatal
@_ZN35UpdateRecentVisitsFromHistoryDBTaskD1Ev = hidden unnamed_addr alias void (%class.UpdateRecentVisitsFromHistoryDBTask*), void (%class.UpdateRecentVisitsFromHistoryDBTask*)* @_ZN35UpdateRecentVisitsFromHistoryDBTaskD2Ev
@_ZN19URLIndexPrivateDataC1Ev = hidden unnamed_addr alias void (%class.URLIndexPrivateData*), void (%class.URLIndexPrivateData*)* @_ZN19URLIndexPrivateDataC2Ev
@_ZN19URLIndexPrivateDataD1Ev = hidden unnamed_addr alias void (%class.URLIndexPrivateData*), void (%class.URLIndexPrivateData*)* @_ZN19URLIndexPrivateDataD2Ev
@_ZN19URLIndexPrivateData19SearchTermCacheItemC1ERKN4base8internal9flat_treeImNS1_8identityENSt3__14lessIvEENS5_6vectorImNS5_9allocatorImEEEEEERKNS3_IlS4_S7_NS8_IlNS9_IlEEEEEE = hidden unnamed_addr alias void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*, %"class.base::internal::flat_tree.520"*, %"class.base::internal::flat_tree.517"*), void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*, %"class.base::internal::flat_tree.520"*, %"class.base::internal::flat_tree.517"*)* @_ZN19URLIndexPrivateData19SearchTermCacheItemC2ERKN4base8internal9flat_treeImNS1_8identityENSt3__14lessIvEENS5_6vectorImNS5_9allocatorImEEEEEERKNS3_IlS4_S7_NS8_IlNS9_IlEEEEEE
@_ZN19URLIndexPrivateData19SearchTermCacheItemC1Ev = hidden unnamed_addr alias void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*), void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*)* @_ZN19URLIndexPrivateData19SearchTermCacheItemC2Ev
@_ZN19URLIndexPrivateData19SearchTermCacheItemC1ERKS0_ = hidden unnamed_addr alias void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*, %"struct.URLIndexPrivateData::SearchTermCacheItem"*), void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*, %"struct.URLIndexPrivateData::SearchTermCacheItem"*)* @_ZN19URLIndexPrivateData19SearchTermCacheItemC2ERKS0_
@_ZN19URLIndexPrivateData19SearchTermCacheItemD1Ev = hidden unnamed_addr alias void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*), void (%"struct.URLIndexPrivateData::SearchTermCacheItem"*)* @_ZN19URLIndexPrivateData19SearchTermCacheItemD2Ev
@_ZN19URLIndexPrivateData24HistoryItemFactorGreaterC1ERKNSt3__113unordered_mapIl19HistoryInfoMapValueNS1_4hashIlEENS1_8equal_toIlEENS1_9allocatorINS1_4pairIKlS3_EEEEEE = hidden unnamed_addr alias void (%"class.URLIndexPrivateData::HistoryItemFactorGreater"*, %"class.std::__1::unordered_map"*), void (%"class.URLIndexPrivateData::HistoryItemFactorGreater"*, %"class.std::__1::unordered_map"*)* @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterC2ERKNSt3__113unordered_mapIl19HistoryInfoMapValueNS1_4hashIlEENS1_8equal_toIlEENS1_9allocatorINS1_4pairIKlS3_EEEEEE
@_ZN19URLIndexPrivateData24HistoryItemFactorGreaterD1Ev = hidden unnamed_addr alias void (%"class.URLIndexPrivateData::HistoryItemFactorGreater"*), void (%"class.URLIndexPrivateData::HistoryItemFactorGreater"*)* @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN35UpdateRecentVisitsFromHistoryDBTaskC2EP19URLIndexPrivateDatal(%class.UpdateRecentVisitsFromHistoryDBTask* nocapture, %class.URLIndexPrivateData*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35UpdateRecentVisitsFromHistoryDBTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 1
  store %class.URLIndexPrivateData* %1, %class.URLIndexPrivateData** %5, align 8
  %6 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 3
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::vector.83"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN35UpdateRecentVisitsFromHistoryDBTask13RunOnDBThreadEPN7history14HistoryBackendEPNS0_15HistoryDatabaseE(%class.UpdateRecentVisitsFromHistoryDBTask*, %"class.history::HistoryBackend"* nocapture readnone, %"class.history::HistoryDatabase"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.history::HistoryDatabase", %"class.history::HistoryDatabase"* %2, i64 0, i32 3
  %5 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4
  %8 = tail call zeroext i1 @_ZN7history13VisitDatabase25GetMostRecentVisitsForURLEliPNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEE(%"class.history::VisitDatabase"* %4, i64 %6, i32 10, %"class.std::__1::vector.83"* %7) #19
  %9 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 3
  %10 = zext i1 %8 to i8
  store i8 %10, i8* %9, align 8
  br i1 %8, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %7, i64 0, i32 0, i32 0
  %13 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %12, align 8
  %14 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4, i32 0, i32 1
  %15 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %14, align 8
  %16 = icmp eq %"class.history::VisitRow"* %15, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %11, %17
  %18 = phi %"class.history::VisitRow"* [ %19, %17 ], [ %15, %11 ]
  %19 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %18, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %19) #19
  %20 = icmp eq %"class.history::VisitRow"* %19, %13
  br i1 %20, label %21, label %17

21:                                               ; preds = %17, %11
  store %"class.history::VisitRow"* %13, %"class.history::VisitRow"** %14, align 8
  br label %22

22:                                               ; preds = %21, %3
  ret i1 true
}

declare zeroext i1 @_ZN7history13VisitDatabase25GetMostRecentVisitsForURLEliPNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEE(%"class.history::VisitDatabase"*, i64, i32, %"class.std::__1::vector.83"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN35UpdateRecentVisitsFromHistoryDBTask19DoneRunOnMainThreadEv(%class.UpdateRecentVisitsFromHistoryDBTask* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 1
  %7 = load %class.URLIndexPrivateData*, %class.URLIndexPrivateData** %6, align 8
  %8 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4
  tail call void @_ZN19URLIndexPrivateData18UpdateRecentVisitsElRKNSt3__16vectorIN7history8VisitRowENS0_9allocatorIS3_EEEE(%class.URLIndexPrivateData* %7, i64 %9, %"class.std::__1::vector.83"* dereferenceable(24) %10)
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData18UpdateRecentVisitsElRKNSt3__16vectorIN7history8VisitRowENS0_9allocatorIS3_EEEE(%class.URLIndexPrivateData* nocapture readonly, i64, %"class.std::__1::vector.83"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %166, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #19, !range !3
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %1
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %1, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %1, %13 ]
  %19 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %166, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %166, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %1
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %166

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %166, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 26
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 27
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to %"struct.std::__1::pair.487"**
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  store i64 %58, i64* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %2, i64 0, i32 0, i32 1
  %63 = bitcast %"class.history::VisitRow"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::vector.83"* %2 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 6
  %69 = icmp ult i64 %68, 10
  %70 = select i1 %69, i64 %68, i64 10
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 28
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to %"struct.std::__1::pair.487"**
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %74, %58
  %76 = ashr exact i64 %75, 4
  %77 = icmp ult i64 %76, %70
  br i1 %77, label %78, label %88

78:                                               ; preds = %55
  %79 = shl nuw nsw i64 %70, 4
  %80 = tail call i8* @_Znwm(i64 %79) #20
  %81 = bitcast i8* %80 to %"struct.std::__1::pair.487"*
  %82 = ptrtoint i8* %80 to i64
  %83 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %81, i64 %70
  %84 = ptrtoint %"struct.std::__1::pair.487"* %83 to i64
  store i64 %82, i64* %57, align 8
  store i64 %82, i64* %61, align 8
  store i64 %84, i64* %73, align 8
  %85 = icmp eq i64 %58, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %78
  %87 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %87) #20
  br label %90

88:                                               ; preds = %55
  %89 = icmp eq i64 %70, 0
  br i1 %89, label %166, label %90

90:                                               ; preds = %86, %78, %88
  %91 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %2, i64 0, i32 0, i32 0
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"struct.std::__1::pair.487"**
  br label %93

93:                                               ; preds = %90, %163
  %94 = phi i64 [ 0, %90 ], [ %164, %163 ]
  %95 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %91, align 8
  %96 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %95, i64 %94, i32 4
  %97 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %95, i64 %94, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = load i32, i32* %96, align 4
  %100 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %60, align 8
  %101 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %72, align 8
  %102 = icmp ult %"struct.std::__1::pair.487"* %100, %101
  %103 = ptrtoint %"struct.std::__1::pair.487"* %101 to i64
  br i1 %102, label %104, label %109

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %100, i64 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %100, i64 0, i32 1
  store i32 %99, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %100, i64 1
  %108 = ptrtoint %"struct.std::__1::pair.487"* %107 to i64
  store i64 %108, i64* %61, align 8
  br label %163

109:                                              ; preds = %93
  %110 = ptrtoint %"struct.std::__1::pair.487"* %100 to i64
  %111 = load i64, i64* %57, align 8
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 4
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 1152921504606846975
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #21
  unreachable

118:                                              ; preds = %109
  %119 = sub i64 %103, %111
  %120 = ashr exact i64 %119, 4
  %121 = icmp ult i64 %120, 576460752303423487
  br i1 %121, label %122, label %130

122:                                              ; preds = %118
  %123 = ashr exact i64 %119, 3
  %124 = icmp ult i64 %123, %114
  %125 = select i1 %124, i64 %114, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %122
  %128 = icmp ugt i64 %125, 1152921504606846975
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  tail call void @abort() #21
  unreachable

130:                                              ; preds = %127, %118
  %131 = phi i64 [ %125, %127 ], [ 1152921504606846975, %118 ]
  %132 = shl i64 %131, 4
  %133 = tail call i8* @_Znwm(i64 %132) #20
  %134 = bitcast i8* %133 to %"struct.std::__1::pair.487"*
  br label %135

135:                                              ; preds = %130, %122
  %136 = phi i64 [ %131, %130 ], [ 0, %122 ]
  %137 = phi %"struct.std::__1::pair.487"* [ %134, %130 ], [ null, %122 ]
  %138 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %137, i64 %113
  %139 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %137, i64 %136
  %140 = ptrtoint %"struct.std::__1::pair.487"* %139 to i64
  %141 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %138, i64 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %137, i64 %113, i32 1
  store i32 %99, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %138, i64 1
  %144 = ptrtoint %"struct.std::__1::pair.487"* %143 to i64
  %145 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %92, align 8
  %146 = load i64, i64* %61, align 8
  %147 = ptrtoint %"struct.std::__1::pair.487"* %145 to i64
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 4
  %150 = sub nsw i64 0, %149
  %151 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %138, i64 %150
  %152 = ptrtoint %"struct.std::__1::pair.487"* %151 to i64
  %153 = icmp sgt i64 %148, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %135
  %155 = bitcast %"struct.std::__1::pair.487"* %151 to i8*
  %156 = bitcast %"struct.std::__1::pair.487"* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 %148, i1 false) #19
  %157 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %92, align 8
  br label %158

158:                                              ; preds = %154, %135
  %159 = phi %"struct.std::__1::pair.487"* [ %145, %135 ], [ %157, %154 ]
  store i64 %152, i64* %57, align 8
  store i64 %144, i64* %61, align 8
  store i64 %140, i64* %73, align 8
  %160 = icmp eq %"struct.std::__1::pair.487"* %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = bitcast %"struct.std::__1::pair.487"* %159 to i8*
  tail call void @_ZdlPv(i8* %162) #20
  br label %163

163:                                              ; preds = %104, %158, %161
  %164 = add nuw i64 %94, 1
  %165 = icmp ult i64 %164, %70
  br i1 %165, label %93, label %166

166:                                              ; preds = %51, %43, %163, %88, %24, %3, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN35UpdateRecentVisitsFromHistoryDBTaskD2Ev(%class.UpdateRecentVisitsFromHistoryDBTask* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35UpdateRecentVisitsFromHistoryDBTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %4, align 8
  %6 = icmp eq %"class.history::VisitRow"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.history::VisitRow"* %5 to i8*
  %9 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %9, align 8
  %11 = icmp eq %"class.history::VisitRow"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.history::VisitRow"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %13, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %14) #19
  %15 = icmp eq %"class.history::VisitRow"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.83"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.history::VisitRow"* %5, %"class.history::VisitRow"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN35UpdateRecentVisitsFromHistoryDBTaskD0Ev(%class.UpdateRecentVisitsFromHistoryDBTask*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35UpdateRecentVisitsFromHistoryDBTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %4, align 8
  %6 = icmp eq %"class.history::VisitRow"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.history::VisitRow"* %5 to i8*
  %9 = getelementptr inbounds %class.UpdateRecentVisitsFromHistoryDBTask, %class.UpdateRecentVisitsFromHistoryDBTask* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %9, align 8
  %11 = icmp eq %"class.history::VisitRow"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.history::VisitRow"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %13, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %14) #19
  %15 = icmp eq %"class.history::VisitRow"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.83"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.history::VisitRow"* %5, %"class.history::VisitRow"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %1, %19
  %22 = bitcast %class.UpdateRecentVisitsFromHistoryDBTask* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateDataC2Ev(%class.URLIndexPrivateData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 5, i32 0, i32 0
  %9 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #19
  %13 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 64, i1 false)
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %14 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node_base"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12
  %27 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 3
  %28 = bitcast %"class.std::__1::__compressed_pair.71"* %27 to i32*
  %29 = bitcast %"class.std::__1::unordered_map"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #19
  store i32 1065353216, i32* %28, align 4
  %30 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_node_base"** %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 14
  store i32 5, i32* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData20HistoryItemsForTermsENSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmmPN9bookmarks13BookmarkModelEP18TemplateURLService(%"class.std::__1::vector.395"* noalias sret, %class.URLIndexPrivateData*, %"class.std::__1::basic_string"*, i64, i64, %"class.bookmarks::BookmarkModel"*, %class.TemplateURLService*) local_unnamed_addr #0 align 2 {
  %8 = alloca i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, align 8
  %9 = alloca %"class.URLIndexPrivateData::HistoryItemFactorGreater", align 8
  %10 = alloca i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, align 8
  %11 = alloca %"struct.std::__1::pair.618", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::set.409", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string.107", align 8
  %18 = alloca %"class.std::__1::basic_string.107", align 8
  %19 = alloca %"class.std::__1::vector", align 8
  %20 = alloca %"class.std::__1::vector.428", align 8
  %21 = alloca %"class.std::__1::vector.428", align 8
  %22 = alloca %"class.std::__1::set.436", align 8
  %23 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #19
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #19
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  %27 = icmp eq i64 %3, -1
  br i1 %27, label %424, label %28

28:                                               ; preds = %7
  %29 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %38

36:                                               ; preds = %28
  %37 = zext i8 %31 to i64
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i64 [ %35, %33 ], [ %37, %36 ]
  %40 = icmp ugt i64 %39, %3
  %41 = icmp ne i64 %3, 0
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %424

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #19
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  br i1 %32, label %51, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %50, i64 24, i1 false) #19
  br label %224

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %77

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %65) #21
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  call void @abort() #21
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = call i8* @_Znwm(i64 %72) #20
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  store i64 %76, i64* %47, align 8
  store i64 %55, i64* %46, align 8
  br label %77

77:                                               ; preds = %71, %57
  %78 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %79 = add nuw nsw i64 %55, 1
  %80 = add i64 %55, 1
  %81 = icmp ult i64 %80, 16
  br i1 %81, label %171, label %82

82:                                               ; preds = %77
  %83 = add i64 %55, 1
  %84 = getelementptr i16, i16* %78, i64 %83
  %85 = getelementptr i16, i16* %53, i64 %83
  %86 = icmp ult i16* %78, %85
  %87 = icmp ult i16* %53, %84
  %88 = and i1 %86, %87
  br i1 %88, label %171, label %89

89:                                               ; preds = %82
  %90 = and i64 %80, -16
  %91 = sub i64 %79, %90
  %92 = getelementptr i16, i16* %53, i64 %90
  %93 = getelementptr i16, i16* %78, i64 %90
  %94 = add i64 %90, -16
  %95 = lshr exact i64 %94, 4
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 48
  br i1 %98, label %150, label %99

99:                                               ; preds = %89
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %147, %101 ]
  %103 = phi i64 [ %100, %99 ], [ %148, %101 ]
  %104 = getelementptr i16, i16* %53, i64 %102
  %105 = getelementptr i16, i16* %78, i64 %102
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !4
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !4
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !7, !noalias !4
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !7, !noalias !4
  %114 = or i64 %102, 16
  %115 = getelementptr i16, i16* %53, i64 %114
  %116 = getelementptr i16, i16* %78, i64 %114
  %117 = bitcast i16* %115 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !4
  %119 = getelementptr i16, i16* %115, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !4
  %122 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %122, align 2, !alias.scope !7, !noalias !4
  %123 = getelementptr i16, i16* %116, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %124, align 2, !alias.scope !7, !noalias !4
  %125 = or i64 %102, 32
  %126 = getelementptr i16, i16* %53, i64 %125
  %127 = getelementptr i16, i16* %78, i64 %125
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !4
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !4
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !7, !noalias !4
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !7, !noalias !4
  %136 = or i64 %102, 48
  %137 = getelementptr i16, i16* %53, i64 %136
  %138 = getelementptr i16, i16* %78, i64 %136
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !4
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !4
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !7, !noalias !4
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !7, !noalias !4
  %147 = add i64 %102, 64
  %148 = add i64 %103, -4
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %101, !llvm.loop !9

150:                                              ; preds = %101, %89
  %151 = phi i64 [ 0, %89 ], [ %147, %101 ]
  %152 = icmp eq i64 %97, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %150, %153
  %154 = phi i64 [ %166, %153 ], [ %151, %150 ]
  %155 = phi i64 [ %167, %153 ], [ %97, %150 ]
  %156 = getelementptr i16, i16* %53, i64 %154
  %157 = getelementptr i16, i16* %78, i64 %154
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !4
  %160 = getelementptr i16, i16* %156, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !4
  %163 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %163, align 2, !alias.scope !7, !noalias !4
  %164 = getelementptr i16, i16* %157, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %165, align 2, !alias.scope !7, !noalias !4
  %166 = add i64 %154, 16
  %167 = add i64 %155, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %153, !llvm.loop !11

169:                                              ; preds = %153, %150
  %170 = icmp eq i64 %80, %90
  br i1 %170, label %224, label %171

171:                                              ; preds = %169, %82, %77
  %172 = phi i64 [ %79, %82 ], [ %79, %77 ], [ %91, %169 ]
  %173 = phi i16* [ %53, %82 ], [ %53, %77 ], [ %92, %169 ]
  %174 = phi i16* [ %78, %82 ], [ %78, %77 ], [ %93, %169 ]
  %175 = add i64 %172, -1
  %176 = and i64 %172, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %171, %178
  %179 = phi i64 [ %184, %178 ], [ %172, %171 ]
  %180 = phi i16* [ %186, %178 ], [ %173, %171 ]
  %181 = phi i16* [ %185, %178 ], [ %174, %171 ]
  %182 = phi i64 [ %187, %178 ], [ %176, %171 ]
  %183 = load i16, i16* %180, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %179, -1
  %185 = getelementptr inbounds i16, i16* %181, i64 1
  %186 = getelementptr inbounds i16, i16* %180, i64 1
  %187 = add i64 %182, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !13

189:                                              ; preds = %178, %171
  %190 = phi i64 [ %172, %171 ], [ %184, %178 ]
  %191 = phi i16* [ %173, %171 ], [ %186, %178 ]
  %192 = phi i16* [ %174, %171 ], [ %185, %178 ]
  %193 = icmp ult i64 %175, 7
  br i1 %193, label %224, label %194

194:                                              ; preds = %189, %194
  %195 = phi i64 [ %220, %194 ], [ %190, %189 ]
  %196 = phi i16* [ %222, %194 ], [ %191, %189 ]
  %197 = phi i16* [ %221, %194 ], [ %192, %189 ]
  %198 = load i16, i16* %196, align 2
  store i16 %198, i16* %197, align 2
  %199 = getelementptr inbounds i16, i16* %197, i64 1
  %200 = getelementptr inbounds i16, i16* %196, i64 1
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %197, i64 2
  %203 = getelementptr inbounds i16, i16* %196, i64 2
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %197, i64 3
  %206 = getelementptr inbounds i16, i16* %196, i64 3
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %197, i64 4
  %209 = getelementptr inbounds i16, i16* %196, i64 4
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %197, i64 5
  %212 = getelementptr inbounds i16, i16* %196, i64 5
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %197, i64 6
  %215 = getelementptr inbounds i16, i16* %196, i64 6
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %197, i64 7
  %218 = getelementptr inbounds i16, i16* %196, i64 7
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = add i64 %195, -8
  %221 = getelementptr inbounds i16, i16* %197, i64 8
  %222 = getelementptr inbounds i16, i16* %196, i64 8
  %223 = icmp eq i64 %220, 0
  br i1 %223, label %224, label %194, !llvm.loop !14

224:                                              ; preds = %189, %194, %169, %49
  %225 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %13, i64 %3, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0), i64 1) #19
  %226 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %227 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %228 = icmp eq %"class.std::__1::basic_string"* %226, %227
  br i1 %228, label %413, label %229

229:                                              ; preds = %224
  %230 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %230, i64 0, i32 1, i32 1
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %229
  %235 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* nonnull align 8 %44, i64 24, i1 false) #19
  br label %409

236:                                              ; preds = %229
  %237 = load i16*, i16** %45, align 8
  %238 = load i64, i64* %46, align 8
  %239 = icmp ult i64 %238, 11
  br i1 %239, label %240, label %245

240:                                              ; preds = %236
  %241 = bitcast %"class.std::__1::basic_string"* %226 to i16*
  %242 = trunc i64 %238 to i8
  %243 = bitcast %"class.std::__1::basic_string"* %226 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %243, i64 0, i32 1, i32 1
  store i8 %242, i8* %244, align 1
  br label %262

245:                                              ; preds = %236
  %246 = icmp ugt i64 %238, 9223372036854775791
  br i1 %246, label %247, label %249

247:                                              ; preds = %245
  %248 = bitcast %"class.std::__1::basic_string"* %226 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %248) #21
  unreachable

249:                                              ; preds = %245
  %250 = add nuw nsw i64 %238, 8
  %251 = and i64 %250, -8
  %252 = icmp slt i64 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %249
  call void @abort() #21
  unreachable

254:                                              ; preds = %249
  %255 = shl i64 %251, 1
  %256 = call i8* @_Znwm(i64 %255) #20
  %257 = bitcast i8* %256 to i16*
  %258 = bitcast %"class.std::__1::basic_string"* %226 to i8**
  store i8* %256, i8** %258, align 8
  %259 = or i64 %251, -9223372036854775808
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %238, i64* %261, align 8
  br label %262

262:                                              ; preds = %254, %240
  %263 = phi i16* [ %241, %240 ], [ %257, %254 ]
  %264 = add nuw nsw i64 %238, 1
  %265 = add i64 %238, 1
  %266 = icmp ult i64 %265, 16
  br i1 %266, label %356, label %267

267:                                              ; preds = %262
  %268 = add i64 %238, 1
  %269 = getelementptr i16, i16* %263, i64 %268
  %270 = getelementptr i16, i16* %237, i64 %268
  %271 = icmp ult i16* %263, %270
  %272 = icmp ult i16* %237, %269
  %273 = and i1 %271, %272
  br i1 %273, label %356, label %274

274:                                              ; preds = %267
  %275 = and i64 %265, -16
  %276 = sub i64 %264, %275
  %277 = getelementptr i16, i16* %237, i64 %275
  %278 = getelementptr i16, i16* %263, i64 %275
  %279 = add i64 %275, -16
  %280 = lshr exact i64 %279, 4
  %281 = add nuw nsw i64 %280, 1
  %282 = and i64 %281, 3
  %283 = icmp ult i64 %279, 48
  br i1 %283, label %335, label %284

284:                                              ; preds = %274
  %285 = sub nsw i64 %281, %282
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi i64 [ 0, %284 ], [ %332, %286 ]
  %288 = phi i64 [ %285, %284 ], [ %333, %286 ]
  %289 = getelementptr i16, i16* %237, i64 %287
  %290 = getelementptr i16, i16* %263, i64 %287
  %291 = bitcast i16* %289 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !15
  %293 = getelementptr i16, i16* %289, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !15
  %296 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %296, align 2, !alias.scope !18, !noalias !15
  %297 = getelementptr i16, i16* %290, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %298, align 2, !alias.scope !18, !noalias !15
  %299 = or i64 %287, 16
  %300 = getelementptr i16, i16* %237, i64 %299
  %301 = getelementptr i16, i16* %263, i64 %299
  %302 = bitcast i16* %300 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !15
  %304 = getelementptr i16, i16* %300, i64 8
  %305 = bitcast i16* %304 to <8 x i16>*
  %306 = load <8 x i16>, <8 x i16>* %305, align 2, !alias.scope !15
  %307 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %307, align 2, !alias.scope !18, !noalias !15
  %308 = getelementptr i16, i16* %301, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %306, <8 x i16>* %309, align 2, !alias.scope !18, !noalias !15
  %310 = or i64 %287, 32
  %311 = getelementptr i16, i16* %237, i64 %310
  %312 = getelementptr i16, i16* %263, i64 %310
  %313 = bitcast i16* %311 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !15
  %315 = getelementptr i16, i16* %311, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !15
  %318 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %318, align 2, !alias.scope !18, !noalias !15
  %319 = getelementptr i16, i16* %312, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %320, align 2, !alias.scope !18, !noalias !15
  %321 = or i64 %287, 48
  %322 = getelementptr i16, i16* %237, i64 %321
  %323 = getelementptr i16, i16* %263, i64 %321
  %324 = bitcast i16* %322 to <8 x i16>*
  %325 = load <8 x i16>, <8 x i16>* %324, align 2, !alias.scope !15
  %326 = getelementptr i16, i16* %322, i64 8
  %327 = bitcast i16* %326 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 2, !alias.scope !15
  %329 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %325, <8 x i16>* %329, align 2, !alias.scope !18, !noalias !15
  %330 = getelementptr i16, i16* %323, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %328, <8 x i16>* %331, align 2, !alias.scope !18, !noalias !15
  %332 = add i64 %287, 64
  %333 = add i64 %288, -4
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %286, !llvm.loop !20

335:                                              ; preds = %286, %274
  %336 = phi i64 [ 0, %274 ], [ %332, %286 ]
  %337 = icmp eq i64 %282, 0
  br i1 %337, label %354, label %338

338:                                              ; preds = %335, %338
  %339 = phi i64 [ %351, %338 ], [ %336, %335 ]
  %340 = phi i64 [ %352, %338 ], [ %282, %335 ]
  %341 = getelementptr i16, i16* %237, i64 %339
  %342 = getelementptr i16, i16* %263, i64 %339
  %343 = bitcast i16* %341 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !15
  %345 = getelementptr i16, i16* %341, i64 8
  %346 = bitcast i16* %345 to <8 x i16>*
  %347 = load <8 x i16>, <8 x i16>* %346, align 2, !alias.scope !15
  %348 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %344, <8 x i16>* %348, align 2, !alias.scope !18, !noalias !15
  %349 = getelementptr i16, i16* %342, i64 8
  %350 = bitcast i16* %349 to <8 x i16>*
  store <8 x i16> %347, <8 x i16>* %350, align 2, !alias.scope !18, !noalias !15
  %351 = add i64 %339, 16
  %352 = add i64 %340, -1
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %354, label %338, !llvm.loop !21

354:                                              ; preds = %338, %335
  %355 = icmp eq i64 %265, %275
  br i1 %355, label %409, label %356

356:                                              ; preds = %354, %267, %262
  %357 = phi i64 [ %264, %267 ], [ %264, %262 ], [ %276, %354 ]
  %358 = phi i16* [ %237, %267 ], [ %237, %262 ], [ %277, %354 ]
  %359 = phi i16* [ %263, %267 ], [ %263, %262 ], [ %278, %354 ]
  %360 = add i64 %357, -1
  %361 = and i64 %357, 7
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %374, label %363

363:                                              ; preds = %356, %363
  %364 = phi i64 [ %369, %363 ], [ %357, %356 ]
  %365 = phi i16* [ %371, %363 ], [ %358, %356 ]
  %366 = phi i16* [ %370, %363 ], [ %359, %356 ]
  %367 = phi i64 [ %372, %363 ], [ %361, %356 ]
  %368 = load i16, i16* %365, align 2
  store i16 %368, i16* %366, align 2
  %369 = add i64 %364, -1
  %370 = getelementptr inbounds i16, i16* %366, i64 1
  %371 = getelementptr inbounds i16, i16* %365, i64 1
  %372 = add i64 %367, -1
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %363, !llvm.loop !22

374:                                              ; preds = %363, %356
  %375 = phi i64 [ %357, %356 ], [ %369, %363 ]
  %376 = phi i16* [ %358, %356 ], [ %371, %363 ]
  %377 = phi i16* [ %359, %356 ], [ %370, %363 ]
  %378 = icmp ult i64 %360, 7
  br i1 %378, label %409, label %379

379:                                              ; preds = %374, %379
  %380 = phi i64 [ %405, %379 ], [ %375, %374 ]
  %381 = phi i16* [ %407, %379 ], [ %376, %374 ]
  %382 = phi i16* [ %406, %379 ], [ %377, %374 ]
  %383 = load i16, i16* %381, align 2
  store i16 %383, i16* %382, align 2
  %384 = getelementptr inbounds i16, i16* %382, i64 1
  %385 = getelementptr inbounds i16, i16* %381, i64 1
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = getelementptr inbounds i16, i16* %382, i64 2
  %388 = getelementptr inbounds i16, i16* %381, i64 2
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = getelementptr inbounds i16, i16* %382, i64 3
  %391 = getelementptr inbounds i16, i16* %381, i64 3
  %392 = load i16, i16* %391, align 2
  store i16 %392, i16* %390, align 2
  %393 = getelementptr inbounds i16, i16* %382, i64 4
  %394 = getelementptr inbounds i16, i16* %381, i64 4
  %395 = load i16, i16* %394, align 2
  store i16 %395, i16* %393, align 2
  %396 = getelementptr inbounds i16, i16* %382, i64 5
  %397 = getelementptr inbounds i16, i16* %381, i64 5
  %398 = load i16, i16* %397, align 2
  store i16 %398, i16* %396, align 2
  %399 = getelementptr inbounds i16, i16* %382, i64 6
  %400 = getelementptr inbounds i16, i16* %381, i64 6
  %401 = load i16, i16* %400, align 2
  store i16 %401, i16* %399, align 2
  %402 = getelementptr inbounds i16, i16* %382, i64 7
  %403 = getelementptr inbounds i16, i16* %381, i64 7
  %404 = load i16, i16* %403, align 2
  store i16 %404, i16* %402, align 2
  %405 = add i64 %380, -8
  %406 = getelementptr inbounds i16, i16* %382, i64 8
  %407 = getelementptr inbounds i16, i16* %381, i64 8
  %408 = icmp eq i64 %405, 0
  br i1 %408, label %409, label %379, !llvm.loop !23

409:                                              ; preds = %374, %379, %354, %234
  %410 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 1
  %411 = ptrtoint %"class.std::__1::basic_string"* %410 to i64
  %412 = bitcast %"class.std::__1::basic_string"** %25 to i64*
  store i64 %411, i64* %412, align 8
  br label %415

413:                                              ; preds = %224
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #19
  %414 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %415

415:                                              ; preds = %409, %413
  %416 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %230, %409 ], [ %414, %413 ]
  %417 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %416, i64 0, i32 1, i32 1
  %418 = load i8, i8* %417, align 1
  %419 = icmp slt i8 %418, 0
  br i1 %419, label %420, label %423

420:                                              ; preds = %415
  %421 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %422 = load i8*, i8** %421, align 8
  call void @_ZdlPv(i8* %422) #20
  br label %423

423:                                              ; preds = %415, %420
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #19
  br label %424

424:                                              ; preds = %7, %423, %38
  %425 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 0
  %426 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 1
  %427 = bitcast %"class.std::__1::vector.395"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %427, i8 0, i64 24, i1 false) #19
  %428 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 6, i32 0, i32 0
  %429 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %428, align 8
  %430 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 6, i32 0, i32 1
  %431 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %430, align 8
  %432 = icmp eq %"class.std::__1::basic_string"* %429, %431
  br i1 %432, label %433, label %442

433:                                              ; preds = %424
  %434 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2
  %435 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %434, i64 0, i32 0
  %436 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %437 = bitcast %"class.std::__1::__tree_end_node"* %436 to %"class.std::__1::__tree_node"**
  %438 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %437, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %435, %"class.std::__1::__tree_node"* %438) #19
  %439 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %439, align 8
  %440 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %434, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %436, %"class.std::__1::__tree_end_node"** %440, align 8
  %441 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %436, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %441, align 8
  br label %1013

442:                                              ; preds = %424
  %443 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2, i32 0, i32 0
  %444 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %443, align 8
  %445 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %446 = icmp eq %"class.std::__1::__tree_end_node"* %444, %445
  br i1 %446, label %481, label %447

447:                                              ; preds = %442, %478
  %448 = phi %"class.std::__1::__tree_end_node"* [ %479, %478 ], [ %444, %442 ]
  %449 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %448, i64 13
  %450 = bitcast %"class.std::__1::__tree_end_node"* %449 to i8*
  store i8 0, i8* %450, align 8
  %451 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %448, i64 1, i32 0
  %452 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %451, align 8
  %453 = icmp eq %"class.std::__1::__tree_node_base"* %452, null
  br i1 %453, label %454, label %462

454:                                              ; preds = %447
  %455 = bitcast %"class.std::__1::__tree_end_node"* %448 to %"class.std::__1::__tree_node_base"*
  %456 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %448, i64 2
  %457 = bitcast %"class.std::__1::__tree_end_node"* %456 to %"class.std::__1::__tree_end_node"**
  %458 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %457, align 8
  %459 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %458, i64 0, i32 0
  %460 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %459, align 8
  %461 = icmp eq %"class.std::__1::__tree_node_base"* %460, %455
  br i1 %461, label %478, label %469

462:                                              ; preds = %447, %462
  %463 = phi %"class.std::__1::__tree_node_base"* [ %465, %462 ], [ %452, %447 ]
  %464 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %463, i64 0, i32 0, i32 0
  %465 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %464, align 8
  %466 = icmp eq %"class.std::__1::__tree_node_base"* %465, null
  br i1 %466, label %467, label %462

467:                                              ; preds = %462
  %468 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %463, i64 0, i32 0
  br label %478

469:                                              ; preds = %454, %469
  %470 = phi %"class.std::__1::__tree_end_node"** [ %473, %469 ], [ %457, %454 ]
  %471 = bitcast %"class.std::__1::__tree_end_node"** %470 to %"class.std::__1::__tree_node_base"**
  %472 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %471, align 8
  %473 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %472, i64 0, i32 2
  %474 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %473, align 8
  %475 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %474, i64 0, i32 0
  %476 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %475, align 8
  %477 = icmp eq %"class.std::__1::__tree_node_base"* %476, %472
  br i1 %477, label %478, label %469

478:                                              ; preds = %469, %467, %454
  %479 = phi %"class.std::__1::__tree_end_node"* [ %468, %467 ], [ %458, %454 ], [ %474, %469 ]
  %480 = icmp eq %"class.std::__1::__tree_end_node"* %479, %445
  br i1 %480, label %481, label %447

481:                                              ; preds = %478, %442
  %482 = bitcast %"class.std::__1::set.409"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #19
  %483 = getelementptr inbounds %"class.std::__1::set.409", %"class.std::__1::set.409"* %14, i64 0, i32 0, i32 0
  %484 = getelementptr inbounds %"class.std::__1::set.409", %"class.std::__1::set.409"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %485 = getelementptr inbounds %"class.std::__1::set.409", %"class.std::__1::set.409"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %486 = bitcast %"class.std::__1::__tree_node_base"** %484 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %486, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %485, %"class.std::__1::__tree_end_node"** %483, align 8
  %487 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %488 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %488
  br i1 %489, label %537, label %490

490:                                              ; preds = %481
  %491 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %492 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %494 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %495 = bitcast %"class.std::__1::basic_string.107"* %17 to i8*
  %496 = bitcast %"class.std::__1::basic_string.107"* %18 to i8*
  %497 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %498 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %497, i64 0, i32 1, i32 1
  %499 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %500 = bitcast %"class.std::__1::basic_string.107"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %501 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %500, i64 0, i32 1, i32 0
  %502 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %504 = bitcast %"class.std::__1::basic_string.107"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %505 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %504, i64 0, i32 1, i32 0
  %506 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %508 = bitcast %"class.std::__1::vector"* %19 to i8*
  %509 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %510 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 1
  %511 = getelementptr inbounds %"class.std::__1::set.409", %"class.std::__1::set.409"* %14, i64 0, i32 0
  %512 = bitcast %"class.std::__1::vector.428"* %20 to i8*
  %513 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %20, i64 0, i32 0, i32 1
  %514 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %515 = bitcast %"class.URLIndexPrivateData::HistoryItemFactorGreater"* %9 to i8*
  %516 = bitcast i64** %513 to i64*
  %517 = bitcast %"class.std::__1::vector.428"* %20 to i64*
  %518 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 12
  %519 = ptrtoint %"class.std::__1::unordered_map"* %518 to i64
  %520 = bitcast %"class.URLIndexPrivateData::HistoryItemFactorGreater"* %9 to i64*
  %521 = bitcast %"class.std::__1::vector.428"* %21 to i64*
  %522 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %21, i64 0, i32 0, i32 1
  %523 = bitcast i64** %522 to i64*
  %524 = bitcast i64** %514 to i64*
  %525 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  %526 = bitcast i64** %525 to i64*
  %527 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %21, i64 0, i32 0, i32 0
  %528 = bitcast %"class.std::__1::vector"* %19 to i8**
  %529 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %530 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %529, i64 0, i32 1, i32 1
  %531 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %532 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %533 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %534 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %535 = bitcast %"class.std::__1::vector"* %19 to i8*
  %536 = bitcast %"class.std::__1::vector.428"* %20 to i8*
  br label %548

537:                                              ; preds = %663, %481
  %538 = phi i8 [ 0, %481 ], [ %631, %663 ]
  %539 = bitcast %struct.ScoredHistoryMatch** %426 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = bitcast %"class.std::__1::vector.395"* %0 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = sub i64 %540, %542
  %544 = sdiv exact i64 %543, 248
  %545 = icmp ugt i64 %544, %4
  %546 = inttoptr i64 %542 to %struct.ScoredHistoryMatch*
  %547 = inttoptr i64 %540 to %struct.ScoredHistoryMatch*
  br i1 %545, label %666, label %923

548:                                              ; preds = %490, %663
  %549 = phi i8 [ 0, %490 ], [ %631, %663 ]
  %550 = phi %"class.std::__1::basic_string"* [ %487, %490 ], [ %664, %663 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %491) #19
  %551 = bitcast %"class.std::__1::basic_string"* %550 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %552 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %551, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %533, i8 -86, i64 24, i1 false)
  %553 = load i8, i8* %552, align 1
  %554 = icmp slt i8 %553, 0
  %555 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %550, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load i16*, i16** %555, align 8
  %557 = bitcast %"class.std::__1::basic_string"* %550 to i16*
  %558 = select i1 %554, i16* %556, i16* %557
  %559 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %550, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %560 = load i64, i64* %559, align 8
  %561 = zext i8 %553 to i64
  %562 = select i1 %554, i64 %560, i64 %561
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %15, i16* %558, i64 %562) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %494) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %534, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %495) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %496) #19
  %563 = load i8, i8* %498, align 1
  %564 = icmp slt i8 %563, 0
  %565 = load i16*, i16** %492, align 8
  %566 = select i1 %564, i16* %565, i16* %499
  %567 = load i64, i64* %493, align 8
  %568 = zext i8 %563 to i64
  %569 = select i1 %564, i64 %567, i64 %568
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.107"* nonnull sret %18, i16* %566, i64 %569) #19
  %570 = load i8, i8* %501, align 1
  %571 = icmp slt i8 %570, 0
  %572 = load i8*, i8** %502, align 8
  %573 = select i1 %571, i8* %572, i8* %496
  %574 = load i64, i64* %503, align 8
  %575 = zext i8 %570 to i64
  %576 = select i1 %571, i64 %574, i64 %575
  call void @_ZN3net20UnescapeURLComponentEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string.107"* nonnull sret %17, i8* %573, i64 %576, i32 14) #19
  %577 = load i8, i8* %505, align 1
  %578 = icmp slt i8 %577, 0
  %579 = load i8*, i8** %506, align 8
  %580 = select i1 %578, i8* %579, i8* %495
  %581 = load i64, i64* %507, align 8
  %582 = zext i8 %577 to i64
  %583 = select i1 %578, i64 %581, i64 %582
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %16, i8* %580, i64 %583) #19
  %584 = load i8, i8* %505, align 1
  %585 = icmp slt i8 %584, 0
  br i1 %585, label %586, label %588

586:                                              ; preds = %548
  %587 = load i8*, i8** %506, align 8
  call void @_ZdlPv(i8* %587) #20
  br label %588

588:                                              ; preds = %548, %586
  %589 = load i8, i8* %501, align 1
  %590 = icmp slt i8 %589, 0
  br i1 %590, label %591, label %593

591:                                              ; preds = %588
  %592 = load i8*, i8** %502, align 8
  call void @_ZdlPv(i8* %592) #20
  br label %593

593:                                              ; preds = %588, %591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %496) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %495) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %508) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %535, i8 -86, i64 24, i1 false)
  call void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector"* nonnull sret %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16, i1 zeroext false, %"class.std::__1::vector.420"* null) #19
  %594 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %509, align 8
  %595 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %510, align 8
  %596 = icmp eq %"class.std::__1::basic_string"* %594, %595
  br i1 %596, label %629, label %597

597:                                              ; preds = %593
  %598 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE4findIS9_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.410"* nonnull %511, %"class.std::__1::vector"* nonnull dereferenceable(24) %19) #19
  %599 = icmp eq %"class.std::__1::__tree_end_node"* %598, %485
  br i1 %599, label %600, label %626

600:                                              ; preds = %597
  %601 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE15__insert_uniqueERKS9_(%"class.std::__1::__tree.410"* nonnull %511, %"class.std::__1::vector"* nonnull dereferenceable(24) %19) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %512) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %536, i8 -86, i64 24, i1 false)
  call void @_ZN19URLIndexPrivateData19HistoryIDsFromWordsERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEE(%"class.std::__1::vector.428"* nonnull sret %20, %class.URLIndexPrivateData* %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %19)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %515)
  %602 = load i64, i64* %516, align 8
  %603 = load i64, i64* %517, align 8
  %604 = sub i64 %602, %603
  %605 = ashr exact i64 %604, 3
  %606 = icmp ult i64 %605, 501
  %607 = inttoptr i64 %603 to i64*
  %608 = inttoptr i64 %602 to i64*
  br i1 %606, label %614, label %609

609:                                              ; preds = %600
  %610 = getelementptr inbounds i64, i64* %607, i64 500
  store i64 %519, i64* %520, align 8
  call void @_ZNSt3__113__nth_elementIRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEvT0_S7_S7_T_(i64* %607, i64* %610, i64* %608, %"class.URLIndexPrivateData::HistoryItemFactorGreater"* nonnull dereferenceable(8) %9) #19
  %611 = icmp eq i64* %610, %608
  br i1 %611, label %614, label %612

612:                                              ; preds = %609
  store i64* %610, i64** %513, align 8
  %613 = ptrtoint i64* %610 to i64
  br label %614

614:                                              ; preds = %600, %609, %612
  %615 = phi i64 [ %602, %600 ], [ %602, %609 ], [ %613, %612 ]
  %616 = phi i8 [ 0, %600 ], [ 1, %609 ], [ 1, %612 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %515)
  %617 = and i8 %549, 1
  %618 = or i8 %616, %617
  store i64 %603, i64* %521, align 8
  store i64 %615, i64* %523, align 8
  %619 = load i64, i64* %524, align 8
  store i64 %619, i64* %526, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %512, i8 0, i64 24, i1 false) #19
  call void @_ZNK19URLIndexPrivateData25HistoryIdsToScoredMatchesENSt3__16vectorIlNS0_9allocatorIlEEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS2_IDsEEEEPK18TemplateURLServicePN9bookmarks13BookmarkModelEPNS1_I18ScoredHistoryMatchNS2_ISI_EEEE(%class.URLIndexPrivateData* %1, %"class.std::__1::vector.428"* nonnull %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, %class.TemplateURLService* %6, %"class.bookmarks::BookmarkModel"* %5, %"class.std::__1::vector.395"* %0)
  %620 = load i64*, i64** %527, align 8
  %621 = icmp eq i64* %620, null
  br i1 %621, label %625, label %622

622:                                              ; preds = %614
  %623 = ptrtoint i64* %620 to i64
  store i64 %623, i64* %523, align 8
  %624 = bitcast i64* %620 to i8*
  call void @_ZdlPv(i8* %624) #20
  br label %625

625:                                              ; preds = %622, %614
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %512) #19
  br label %626

626:                                              ; preds = %597, %625
  %627 = phi i8 [ %549, %597 ], [ %618, %625 ]
  %628 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %509, align 8
  br label %629

629:                                              ; preds = %626, %593
  %630 = phi %"class.std::__1::basic_string"* [ %628, %626 ], [ %594, %593 ]
  %631 = phi i8 [ %627, %626 ], [ %549, %593 ]
  %632 = icmp eq %"class.std::__1::basic_string"* %630, null
  br i1 %632, label %653, label %633

633:                                              ; preds = %629
  %634 = bitcast %"class.std::__1::basic_string"* %630 to i8*
  %635 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %510, align 8
  %636 = icmp eq %"class.std::__1::basic_string"* %635, %630
  br i1 %636, label %651, label %637

637:                                              ; preds = %633, %647
  %638 = phi %"class.std::__1::basic_string"* [ %639, %647 ], [ %635, %633 ]
  %639 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %638, i64 -1
  %640 = bitcast %"class.std::__1::basic_string"* %639 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %641 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %640, i64 0, i32 1, i32 1
  %642 = load i8, i8* %641, align 1
  %643 = icmp slt i8 %642, 0
  br i1 %643, label %644, label %647

644:                                              ; preds = %637
  %645 = bitcast %"class.std::__1::basic_string"* %639 to i8**
  %646 = load i8*, i8** %645, align 8
  call void @_ZdlPv(i8* %646) #20
  br label %647

647:                                              ; preds = %644, %637
  %648 = icmp eq %"class.std::__1::basic_string"* %639, %630
  br i1 %648, label %649, label %637

649:                                              ; preds = %647
  %650 = load i8*, i8** %528, align 8
  br label %651

651:                                              ; preds = %649, %633
  %652 = phi i8* [ %650, %649 ], [ %634, %633 ]
  store %"class.std::__1::basic_string"* %630, %"class.std::__1::basic_string"** %510, align 8
  call void @_ZdlPv(i8* %652) #20
  br label %653

653:                                              ; preds = %629, %651
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %508) #19
  %654 = load i8, i8* %530, align 1
  %655 = icmp slt i8 %654, 0
  br i1 %655, label %656, label %658

656:                                              ; preds = %653
  %657 = load i8*, i8** %531, align 8
  call void @_ZdlPv(i8* %657) #20
  br label %658

658:                                              ; preds = %653, %656
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %494) #19
  %659 = load i8, i8* %498, align 1
  %660 = icmp slt i8 %659, 0
  br i1 %660, label %661, label %663

661:                                              ; preds = %658
  %662 = load i8*, i8** %532, align 8
  call void @_ZdlPv(i8* %662) #20
  br label %663

663:                                              ; preds = %658, %661
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %491) #19
  %664 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %550, i64 1
  %665 = icmp eq %"class.std::__1::basic_string"* %664, %488
  br i1 %665, label %537, label %548

666:                                              ; preds = %537
  %667 = shl i64 %4, 1
  %668 = icmp ult i64 %667, %544
  %669 = select i1 %668, i64 %667, i64 %544
  %670 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %546, i64 %669
  %671 = bitcast i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %671)
  store i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)* @_ZN18ScoredHistoryMatch17MatchScoreGreaterERKS_S1_, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %8, align 8
  call void @_ZNSt3__114__partial_sortIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_SA_T_(%struct.ScoredHistoryMatch* %546, %struct.ScoredHistoryMatch* %670, %struct.ScoredHistoryMatch* %547, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** nonnull dereferenceable(8) %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %671)
  %672 = load i64, i64* %539, align 8
  %673 = load i64, i64* %541, align 8
  %674 = sub i64 %672, %673
  %675 = sdiv exact i64 %674, 248
  %676 = icmp ugt i64 %669, %675
  %677 = inttoptr i64 %673 to %struct.ScoredHistoryMatch*
  %678 = inttoptr i64 %672 to %struct.ScoredHistoryMatch*
  br i1 %676, label %679, label %682

679:                                              ; preds = %666
  %680 = sub i64 %669, %675
  call void @_ZNSt3__16vectorI18ScoredHistoryMatchNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.395"* %0, i64 %680) #19
  %681 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %426, align 8
  br label %692

682:                                              ; preds = %666
  %683 = icmp ult i64 %669, %675
  br i1 %683, label %684, label %692

684:                                              ; preds = %682
  %685 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %677, i64 %669
  %686 = icmp eq %struct.ScoredHistoryMatch* %685, %678
  br i1 %686, label %691, label %687

687:                                              ; preds = %684, %687
  %688 = phi %struct.ScoredHistoryMatch* [ %689, %687 ], [ %678, %684 ]
  %689 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %688, i64 -1
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* %689) #19
  %690 = icmp eq %struct.ScoredHistoryMatch* %689, %685
  br i1 %690, label %691, label %687

691:                                              ; preds = %687, %684
  store %struct.ScoredHistoryMatch* %685, %struct.ScoredHistoryMatch** %426, align 8
  br label %692

692:                                              ; preds = %679, %682, %691
  %693 = phi %struct.ScoredHistoryMatch* [ %681, %679 ], [ %678, %682 ], [ %685, %691 ]
  %694 = bitcast %"class.std::__1::set.436"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #19
  %695 = getelementptr inbounds %"class.std::__1::set.436", %"class.std::__1::set.436"* %22, i64 0, i32 0, i32 0
  %696 = getelementptr inbounds %"class.std::__1::set.436", %"class.std::__1::set.436"* %22, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %697 = getelementptr inbounds %"class.std::__1::set.436", %"class.std::__1::set.436"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %698 = getelementptr inbounds %"class.std::__1::set.436", %"class.std::__1::set.436"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %699 = bitcast %"class.std::__1::__tree_node_base"** %696 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %699, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %698, %"class.std::__1::__tree_end_node"** %695, align 8
  %700 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %425, align 8
  %701 = icmp eq %struct.ScoredHistoryMatch* %700, %693
  br i1 %701, label %702, label %704

702:                                              ; preds = %692
  %703 = ptrtoint %struct.ScoredHistoryMatch* %693 to i64
  br label %892

704:                                              ; preds = %692
  %705 = bitcast %"class.std::__1::__tree_end_node"* %698 to %"class.std::__1::__tree_node.604"**
  %706 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %698, i64 0, i32 0
  %707 = bitcast %"class.std::__1::set.436"* %22 to i64*
  br label %708

708:                                              ; preds = %789, %704
  %709 = phi %"class.std::__1::__tree_node.604"* [ %790, %789 ], [ null, %704 ]
  %710 = phi %struct.ScoredHistoryMatch* [ %787, %789 ], [ %700, %704 ]
  %711 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %710, i64 0, i32 0, i32 0, i32 1
  %712 = load i64, i64* %711, align 8
  %713 = icmp eq %"class.std::__1::__tree_node.604"* %709, null
  br i1 %713, label %758, label %714

714:                                              ; preds = %708, %726
  %715 = phi %"class.std::__1::__tree_node.604"* [ %728, %726 ], [ %709, %708 ]
  %716 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %715, i64 0, i32 1
  %717 = load i64, i64* %716, align 8
  %718 = icmp slt i64 %712, %717
  br i1 %718, label %719, label %721

719:                                              ; preds = %714
  %720 = bitcast %"class.std::__1::__tree_node.604"* %715 to %"class.std::__1::__tree_node.604"**
  br label %726

721:                                              ; preds = %714
  %722 = icmp slt i64 %717, %712
  br i1 %722, label %723, label %730

723:                                              ; preds = %721
  %724 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %715, i64 0, i32 0, i32 1
  %725 = bitcast %"class.std::__1::__tree_node_base"** %724 to %"class.std::__1::__tree_node.604"**
  br label %726

726:                                              ; preds = %723, %719
  %727 = phi %"class.std::__1::__tree_node.604"** [ %720, %719 ], [ %725, %723 ]
  %728 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %727, align 8
  %729 = icmp eq %"class.std::__1::__tree_node.604"* %728, null
  br i1 %729, label %730, label %714

730:                                              ; preds = %726, %721
  %731 = phi i1 [ true, %721 ], [ false, %726 ]
  br label %732

732:                                              ; preds = %754, %730
  %733 = phi %"class.std::__1::__tree_node.604"* [ %757, %754 ], [ %709, %730 ]
  %734 = phi %"class.std::__1::__tree_node_base"** [ %756, %754 ], [ %696, %730 ]
  %735 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %733, i64 0, i32 1
  %736 = load i64, i64* %735, align 8
  %737 = icmp slt i64 %712, %736
  br i1 %737, label %738, label %744

738:                                              ; preds = %732
  %739 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %733, i64 0, i32 0, i32 0, i32 0
  %740 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %739, align 8
  %741 = icmp eq %"class.std::__1::__tree_node_base"* %740, null
  br i1 %741, label %742, label %754

742:                                              ; preds = %738
  %743 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %733, i64 0, i32 0, i32 0
  br label %758

744:                                              ; preds = %732
  %745 = icmp slt i64 %736, %712
  br i1 %745, label %746, label %752

746:                                              ; preds = %744
  %747 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %733, i64 0, i32 0, i32 1
  %748 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %747, align 8
  %749 = icmp eq %"class.std::__1::__tree_node_base"* %748, null
  br i1 %749, label %750, label %754

750:                                              ; preds = %746
  %751 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %733, i64 0, i32 0, i32 0
  br label %758

752:                                              ; preds = %744
  %753 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %733, i64 0, i32 0, i32 0
  br label %758

754:                                              ; preds = %746, %738
  %755 = phi %"class.std::__1::__tree_node_base"* [ %740, %738 ], [ %748, %746 ]
  %756 = phi %"class.std::__1::__tree_node_base"** [ %739, %738 ], [ %747, %746 ]
  %757 = bitcast %"class.std::__1::__tree_node_base"* %755 to %"class.std::__1::__tree_node.604"*
  br label %732

758:                                              ; preds = %752, %750, %742, %708
  %759 = phi i1 [ %731, %742 ], [ %731, %750 ], [ %731, %752 ], [ false, %708 ]
  %760 = phi %"class.std::__1::__tree_end_node"* [ %743, %742 ], [ %751, %750 ], [ %753, %752 ], [ %698, %708 ]
  %761 = phi %"class.std::__1::__tree_node_base"** [ %739, %742 ], [ %747, %750 ], [ %734, %752 ], [ %706, %708 ]
  %762 = bitcast %"class.std::__1::__tree_node_base"** %761 to %"class.std::__1::__tree_node.604"**
  %763 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %762, align 8
  %764 = icmp eq %"class.std::__1::__tree_node.604"* %763, null
  br i1 %764, label %765, label %785

765:                                              ; preds = %758
  %766 = call i8* @_Znwm(i64 40) #20, !noalias !24
  %767 = getelementptr inbounds i8, i8* %766, i64 32
  %768 = bitcast i8* %767 to i64*
  store i64 %712, i64* %768, align 8, !noalias !24
  %769 = bitcast i8* %766 to %"class.std::__1::__tree_node_base"*
  %770 = getelementptr inbounds i8, i8* %766, i64 16
  %771 = bitcast i8* %770 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %766, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %760, %"class.std::__1::__tree_end_node"** %771, align 8
  %772 = bitcast %"class.std::__1::__tree_node_base"** %761 to i8**
  store i8* %766, i8** %772, align 8
  %773 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %695, align 8
  %774 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %773, i64 0, i32 0
  %775 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %774, align 8
  %776 = icmp eq %"class.std::__1::__tree_node_base"* %775, null
  br i1 %776, label %780, label %777

777:                                              ; preds = %765
  %778 = ptrtoint %"class.std::__1::__tree_node_base"* %775 to i64
  store i64 %778, i64* %707, align 8
  %779 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %761, align 8
  br label %780

780:                                              ; preds = %777, %765
  %781 = phi %"class.std::__1::__tree_node_base"* [ %769, %765 ], [ %779, %777 ]
  %782 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %696, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %782, %"class.std::__1::__tree_node_base"* %781) #19
  %783 = load i64, i64* %697, align 8
  %784 = add i64 %783, 1
  store i64 %784, i64* %697, align 8
  br label %785

785:                                              ; preds = %780, %758
  br i1 %759, label %793, label %786

786:                                              ; preds = %785
  %787 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %710, i64 1
  %788 = icmp eq %struct.ScoredHistoryMatch* %787, %693
  br i1 %788, label %791, label %789

789:                                              ; preds = %786
  %790 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %705, align 8
  br label %708

791:                                              ; preds = %786
  %792 = ptrtoint %struct.ScoredHistoryMatch* %693 to i64
  br label %892

793:                                              ; preds = %785
  %794 = ptrtoint %struct.ScoredHistoryMatch* %710 to i64
  %795 = icmp eq %struct.ScoredHistoryMatch* %710, %693
  br i1 %795, label %892, label %796

796:                                              ; preds = %793
  %797 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %710, i64 1
  %798 = icmp eq %struct.ScoredHistoryMatch* %797, %693
  br i1 %798, label %892, label %799

799:                                              ; preds = %796
  %800 = bitcast %"class.std::__1::__tree_end_node"* %698 to %"class.std::__1::__tree_node.604"**
  %801 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %698, i64 0, i32 0
  %802 = bitcast %"class.std::__1::set.436"* %22 to i64*
  br label %803

803:                                              ; preds = %888, %799
  %804 = phi %struct.ScoredHistoryMatch* [ %797, %799 ], [ %890, %888 ]
  %805 = phi %struct.ScoredHistoryMatch* [ %710, %799 ], [ %804, %888 ]
  %806 = phi i64 [ %794, %799 ], [ %889, %888 ]
  %807 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %805, i64 1, i32 0, i32 0, i32 1
  %808 = load i64, i64* %807, align 8
  %809 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %800, align 8
  %810 = icmp eq %"class.std::__1::__tree_node.604"* %809, null
  br i1 %810, label %855, label %811

811:                                              ; preds = %803, %823
  %812 = phi %"class.std::__1::__tree_node.604"* [ %825, %823 ], [ %809, %803 ]
  %813 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %812, i64 0, i32 1
  %814 = load i64, i64* %813, align 8
  %815 = icmp slt i64 %808, %814
  br i1 %815, label %816, label %818

816:                                              ; preds = %811
  %817 = bitcast %"class.std::__1::__tree_node.604"* %812 to %"class.std::__1::__tree_node.604"**
  br label %823

818:                                              ; preds = %811
  %819 = icmp slt i64 %814, %808
  br i1 %819, label %820, label %827

820:                                              ; preds = %818
  %821 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %812, i64 0, i32 0, i32 1
  %822 = bitcast %"class.std::__1::__tree_node_base"** %821 to %"class.std::__1::__tree_node.604"**
  br label %823

823:                                              ; preds = %820, %816
  %824 = phi %"class.std::__1::__tree_node.604"** [ %817, %816 ], [ %822, %820 ]
  %825 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %824, align 8
  %826 = icmp eq %"class.std::__1::__tree_node.604"* %825, null
  br i1 %826, label %827, label %811

827:                                              ; preds = %823, %818
  %828 = phi i1 [ true, %818 ], [ false, %823 ]
  br label %829

829:                                              ; preds = %851, %827
  %830 = phi %"class.std::__1::__tree_node.604"* [ %854, %851 ], [ %809, %827 ]
  %831 = phi %"class.std::__1::__tree_node_base"** [ %853, %851 ], [ %696, %827 ]
  %832 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %830, i64 0, i32 1
  %833 = load i64, i64* %832, align 8
  %834 = icmp slt i64 %808, %833
  br i1 %834, label %835, label %841

835:                                              ; preds = %829
  %836 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %830, i64 0, i32 0, i32 0, i32 0
  %837 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %836, align 8
  %838 = icmp eq %"class.std::__1::__tree_node_base"* %837, null
  br i1 %838, label %839, label %851

839:                                              ; preds = %835
  %840 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %830, i64 0, i32 0, i32 0
  br label %855

841:                                              ; preds = %829
  %842 = icmp slt i64 %833, %808
  br i1 %842, label %843, label %849

843:                                              ; preds = %841
  %844 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %830, i64 0, i32 0, i32 1
  %845 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %844, align 8
  %846 = icmp eq %"class.std::__1::__tree_node_base"* %845, null
  br i1 %846, label %847, label %851

847:                                              ; preds = %843
  %848 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %830, i64 0, i32 0, i32 0
  br label %855

849:                                              ; preds = %841
  %850 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %830, i64 0, i32 0, i32 0
  br label %855

851:                                              ; preds = %843, %835
  %852 = phi %"class.std::__1::__tree_node_base"* [ %837, %835 ], [ %845, %843 ]
  %853 = phi %"class.std::__1::__tree_node_base"** [ %836, %835 ], [ %844, %843 ]
  %854 = bitcast %"class.std::__1::__tree_node_base"* %852 to %"class.std::__1::__tree_node.604"*
  br label %829

855:                                              ; preds = %849, %847, %839, %803
  %856 = phi i1 [ %828, %839 ], [ %828, %847 ], [ %828, %849 ], [ false, %803 ]
  %857 = phi %"class.std::__1::__tree_end_node"* [ %840, %839 ], [ %848, %847 ], [ %850, %849 ], [ %698, %803 ]
  %858 = phi %"class.std::__1::__tree_node_base"** [ %836, %839 ], [ %844, %847 ], [ %831, %849 ], [ %801, %803 ]
  %859 = bitcast %"class.std::__1::__tree_node_base"** %858 to %"class.std::__1::__tree_node.604"**
  %860 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %859, align 8
  %861 = icmp eq %"class.std::__1::__tree_node.604"* %860, null
  br i1 %861, label %862, label %882

862:                                              ; preds = %855
  %863 = call i8* @_Znwm(i64 40) #20, !noalias !27
  %864 = getelementptr inbounds i8, i8* %863, i64 32
  %865 = bitcast i8* %864 to i64*
  store i64 %808, i64* %865, align 8, !noalias !27
  %866 = bitcast i8* %863 to %"class.std::__1::__tree_node_base"*
  %867 = getelementptr inbounds i8, i8* %863, i64 16
  %868 = bitcast i8* %867 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %863, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %857, %"class.std::__1::__tree_end_node"** %868, align 8
  %869 = bitcast %"class.std::__1::__tree_node_base"** %858 to i8**
  store i8* %863, i8** %869, align 8
  %870 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %695, align 8
  %871 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %870, i64 0, i32 0
  %872 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %871, align 8
  %873 = icmp eq %"class.std::__1::__tree_node_base"* %872, null
  br i1 %873, label %877, label %874

874:                                              ; preds = %862
  %875 = ptrtoint %"class.std::__1::__tree_node_base"* %872 to i64
  store i64 %875, i64* %802, align 8
  %876 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %858, align 8
  br label %877

877:                                              ; preds = %874, %862
  %878 = phi %"class.std::__1::__tree_node_base"* [ %866, %862 ], [ %876, %874 ]
  %879 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %696, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %879, %"class.std::__1::__tree_node_base"* %878) #19
  %880 = load i64, i64* %697, align 8
  %881 = add i64 %880, 1
  store i64 %881, i64* %697, align 8
  br label %882

882:                                              ; preds = %877, %855
  br i1 %856, label %888, label %883

883:                                              ; preds = %882
  %884 = inttoptr i64 %806 to %struct.ScoredHistoryMatch*
  %885 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %884, %struct.ScoredHistoryMatch* dereferenceable(248) %804) #19
  %886 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %884, i64 1
  %887 = ptrtoint %struct.ScoredHistoryMatch* %886 to i64
  br label %888

888:                                              ; preds = %883, %882
  %889 = phi i64 [ %806, %882 ], [ %887, %883 ]
  %890 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %804, i64 1
  %891 = icmp eq %struct.ScoredHistoryMatch* %890, %693
  br i1 %891, label %892, label %803

892:                                              ; preds = %888, %702, %796, %793, %791
  %893 = phi i64 [ %794, %793 ], [ %792, %791 ], [ %794, %796 ], [ %703, %702 ], [ %889, %888 ]
  %894 = inttoptr i64 %893 to %struct.ScoredHistoryMatch*
  %895 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %426, align 8
  %896 = icmp eq %struct.ScoredHistoryMatch* %895, %894
  %897 = ptrtoint %struct.ScoredHistoryMatch* %895 to i64
  br i1 %896, label %903, label %898

898:                                              ; preds = %892, %898
  %899 = phi %struct.ScoredHistoryMatch* [ %900, %898 ], [ %895, %892 ]
  %900 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %899, i64 -1
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* %900) #19
  %901 = icmp eq %struct.ScoredHistoryMatch* %900, %894
  br i1 %901, label %902, label %898

902:                                              ; preds = %898
  store %struct.ScoredHistoryMatch* %894, %struct.ScoredHistoryMatch** %426, align 8
  br label %903

903:                                              ; preds = %892, %902
  %904 = phi i64 [ %897, %892 ], [ %893, %902 ]
  %905 = load i64, i64* %541, align 8
  %906 = sub i64 %904, %905
  %907 = sdiv exact i64 %906, 248
  %908 = icmp ugt i64 %907, %4
  br i1 %908, label %909, label %919

909:                                              ; preds = %903
  %910 = inttoptr i64 %905 to %struct.ScoredHistoryMatch*
  %911 = inttoptr i64 %904 to %struct.ScoredHistoryMatch*
  %912 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %910, i64 %4
  %913 = icmp eq %struct.ScoredHistoryMatch* %912, %911
  br i1 %913, label %918, label %914

914:                                              ; preds = %909, %914
  %915 = phi %struct.ScoredHistoryMatch* [ %916, %914 ], [ %911, %909 ]
  %916 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %915, i64 -1
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* %916) #19
  %917 = icmp eq %struct.ScoredHistoryMatch* %916, %912
  br i1 %917, label %918, label %914

918:                                              ; preds = %914, %909
  store %struct.ScoredHistoryMatch* %912, %struct.ScoredHistoryMatch** %426, align 8
  br label %919

919:                                              ; preds = %918, %903
  %920 = getelementptr inbounds %"class.std::__1::set.436", %"class.std::__1::set.436"* %22, i64 0, i32 0
  %921 = bitcast %"class.std::__1::__tree_end_node"* %698 to %"class.std::__1::__tree_node.604"**
  %922 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %921, align 8
  call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.437"* nonnull %920, %"class.std::__1::__tree_node.604"* %922) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %694) #19
  br label %925

923:                                              ; preds = %537
  %924 = bitcast i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %924)
  store i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)* @_ZN18ScoredHistoryMatch17MatchScoreGreaterERKS_S1_, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %10, align 8
  call void @_ZNSt3__16__sortIRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_(%struct.ScoredHistoryMatch* %546, %struct.ScoredHistoryMatch* %547, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** nonnull dereferenceable(8) %10) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %924)
  br label %925

925:                                              ; preds = %923, %919
  %926 = and i8 %538, 1
  %927 = icmp eq i8 %926, 0
  %928 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2
  br i1 %927, label %936, label %929

929:                                              ; preds = %925
  %930 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %928, i64 0, i32 0
  %931 = bitcast %"class.std::__1::__tree_end_node"* %445 to %"class.std::__1::__tree_node"**
  %932 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %931, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %930, %"class.std::__1::__tree_node"* %932) #19
  %933 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %933, align 8
  %934 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %928, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %445, %"class.std::__1::__tree_end_node"** %934, align 8
  %935 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %445, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %935, align 8
  br label %1009

936:                                              ; preds = %925
  %937 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %928, i64 0, i32 0, i32 0
  %938 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %937, align 8
  %939 = icmp eq %"class.std::__1::__tree_end_node"* %938, %445
  br i1 %939, label %1009, label %940

940:                                              ; preds = %936
  %941 = bitcast %"struct.std::__1::pair.618"* %11 to i8*
  %942 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %11, i64 0, i32 1, i32 2
  %943 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %944 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %945 = bitcast i64** %944 to i64*
  %946 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %947 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %948 = bitcast i64** %947 to i64*
  %949 = bitcast %"struct.std::__1::pair.618"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %950 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %949, i64 0, i32 1, i32 1
  %951 = bitcast %"struct.std::__1::pair.618"* %11 to i8**
  %952 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %928, i64 0, i32 0
  br label %953

953:                                              ; preds = %1006, %940
  %954 = phi %"class.std::__1::__tree_end_node"* [ %938, %940 ], [ %1007, %1006 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %941) #19
  %955 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %954, i64 4
  %956 = bitcast %"class.std::__1::__tree_end_node"* %955 to %"struct.std::__1::pair.521"*
  call void @_ZNSt3__14pairINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEC2IRNS0_IKS6_S8_EELb0EEEOT_(%"struct.std::__1::pair.618"* nonnull %11, %"struct.std::__1::pair.521"* dereferenceable(80) %956) #19
  %957 = load i8, i8* %942, align 8, !range !2
  %958 = icmp eq i8 %957, 0
  %959 = load i64*, i64** %943, align 8
  %960 = icmp eq i64* %959, null
  br i1 %960, label %964, label %961

961:                                              ; preds = %953
  %962 = ptrtoint i64* %959 to i64
  store i64 %962, i64* %945, align 8
  %963 = bitcast i64* %959 to i8*
  call void @_ZdlPv(i8* %963) #20
  br label %964

964:                                              ; preds = %961, %953
  %965 = load i64*, i64** %946, align 8
  %966 = icmp eq i64* %965, null
  br i1 %966, label %970, label %967

967:                                              ; preds = %964
  %968 = ptrtoint i64* %965 to i64
  store i64 %968, i64* %948, align 8
  %969 = bitcast i64* %965 to i8*
  call void @_ZdlPv(i8* %969) #20
  br label %970

970:                                              ; preds = %967, %964
  %971 = load i8, i8* %950, align 1
  %972 = icmp slt i8 %971, 0
  br i1 %972, label %973, label %975

973:                                              ; preds = %970
  %974 = load i8*, i8** %951, align 8
  call void @_ZdlPv(i8* %974) #20
  br label %975

975:                                              ; preds = %973, %970
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %941) #19
  br i1 %958, label %976, label %978

976:                                              ; preds = %975
  %977 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree"* %952, %"class.std::__1::__tree_end_node"* %954) #19
  br label %1006

978:                                              ; preds = %975
  %979 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %954, i64 1, i32 0
  %980 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %979, align 8
  %981 = icmp eq %"class.std::__1::__tree_node_base"* %980, null
  br i1 %981, label %982, label %990

982:                                              ; preds = %978
  %983 = bitcast %"class.std::__1::__tree_end_node"* %954 to %"class.std::__1::__tree_node_base"*
  %984 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %954, i64 2
  %985 = bitcast %"class.std::__1::__tree_end_node"* %984 to %"class.std::__1::__tree_end_node"**
  %986 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %985, align 8
  %987 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %986, i64 0, i32 0
  %988 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %987, align 8
  %989 = icmp eq %"class.std::__1::__tree_node_base"* %988, %983
  br i1 %989, label %1006, label %997

990:                                              ; preds = %978, %990
  %991 = phi %"class.std::__1::__tree_node_base"* [ %993, %990 ], [ %980, %978 ]
  %992 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %991, i64 0, i32 0, i32 0
  %993 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %992, align 8
  %994 = icmp eq %"class.std::__1::__tree_node_base"* %993, null
  br i1 %994, label %995, label %990

995:                                              ; preds = %990
  %996 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %991, i64 0, i32 0
  br label %1006

997:                                              ; preds = %982, %997
  %998 = phi %"class.std::__1::__tree_end_node"** [ %1001, %997 ], [ %985, %982 ]
  %999 = bitcast %"class.std::__1::__tree_end_node"** %998 to %"class.std::__1::__tree_node_base"**
  %1000 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %999, align 8
  %1001 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1000, i64 0, i32 2
  %1002 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1001, align 8
  %1003 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1002, i64 0, i32 0
  %1004 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1003, align 8
  %1005 = icmp eq %"class.std::__1::__tree_node_base"* %1004, %1000
  br i1 %1005, label %1006, label %997

1006:                                             ; preds = %997, %995, %982, %976
  %1007 = phi %"class.std::__1::__tree_end_node"* [ %977, %976 ], [ %996, %995 ], [ %986, %982 ], [ %1002, %997 ]
  %1008 = icmp eq %"class.std::__1::__tree_end_node"* %1007, %445
  br i1 %1008, label %1009, label %953

1009:                                             ; preds = %1006, %936, %929
  %1010 = getelementptr inbounds %"class.std::__1::set.409", %"class.std::__1::set.409"* %14, i64 0, i32 0
  %1011 = bitcast %"class.std::__1::__tree_end_node"* %485 to %"class.std::__1::__tree_node.592"**
  %1012 = load %"class.std::__1::__tree_node.592"*, %"class.std::__1::__tree_node.592"** %1011, align 8
  call void @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.410"* nonnull %1010, %"class.std::__1::__tree_node.592"* %1012) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #19
  br label %1013

1013:                                             ; preds = %433, %1009
  %1014 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %1015 = icmp eq %"class.std::__1::basic_string"* %1014, null
  br i1 %1015, label %1037, label %1016

1016:                                             ; preds = %1013
  %1017 = bitcast %"class.std::__1::basic_string"* %1014 to i8*
  %1018 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %1019 = icmp eq %"class.std::__1::basic_string"* %1018, %1014
  br i1 %1019, label %1035, label %1020

1020:                                             ; preds = %1016, %1030
  %1021 = phi %"class.std::__1::basic_string"* [ %1022, %1030 ], [ %1018, %1016 ]
  %1022 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1021, i64 -1
  %1023 = bitcast %"class.std::__1::basic_string"* %1022 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1024 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1023, i64 0, i32 1, i32 1
  %1025 = load i8, i8* %1024, align 1
  %1026 = icmp slt i8 %1025, 0
  br i1 %1026, label %1027, label %1030

1027:                                             ; preds = %1020
  %1028 = bitcast %"class.std::__1::basic_string"* %1022 to i8**
  %1029 = load i8*, i8** %1028, align 8
  call void @_ZdlPv(i8* %1029) #20
  br label %1030

1030:                                             ; preds = %1027, %1020
  %1031 = icmp eq %"class.std::__1::basic_string"* %1022, %1014
  br i1 %1031, label %1032, label %1020

1032:                                             ; preds = %1030
  %1033 = bitcast %"class.std::__1::vector"* %12 to i8**
  %1034 = load i8*, i8** %1033, align 8
  br label %1035

1035:                                             ; preds = %1032, %1016
  %1036 = phi i8* [ %1034, %1032 ], [ %1017, %1016 ]
  store %"class.std::__1::basic_string"* %1014, %"class.std::__1::basic_string"** %25, align 8
  call void @_ZdlPv(i8* %1036) #20
  br label %1037

1037:                                             ; preds = %1013, %1035
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData20ResetSearchTermCacheEv(%class.URLIndexPrivateData*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %38, %1
  ret void

7:                                                ; preds = %1, %38
  %8 = phi %"class.std::__1::__tree_end_node"* [ %39, %38 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 13
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to i8*
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %7
  %15 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_end_node"**
  %18 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, %15
  br i1 %21, label %38, label %29

22:                                               ; preds = %7, %22
  %23 = phi %"class.std::__1::__tree_node_base"* [ %25, %22 ], [ %12, %7 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 0
  br label %38

29:                                               ; preds = %14, %29
  %30 = phi %"class.std::__1::__tree_end_node"** [ %33, %29 ], [ %17, %14 ]
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to %"class.std::__1::__tree_node_base"**
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 2
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, %32
  br i1 %37, label %38, label %29

38:                                               ; preds = %29, %14, %27
  %39 = phi %"class.std::__1::__tree_end_node"* [ %28, %27 ], [ %18, %14 ], [ %34, %29 ]
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %39, %4
  br i1 %40, label %6, label %7
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net20UnescapeURLComponentEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string.107"* sret, i8*, i64, i32) local_unnamed_addr #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.107"* sret, i16*, i64) local_unnamed_addr #1

declare void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector"* sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::vector.420"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData19HistoryIDsFromWordsERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEE(%"class.std::__1::vector.428"* noalias nocapture sret, %class.URLIndexPrivateData*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.base::internal::flat_tree.517", align 8
  %7 = alloca %"class.std::__1::vector.428", align 8
  %8 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #19
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector"* nonnull %5, %"class.std::__1::vector"* dereferenceable(24) %2)
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %14 = bitcast i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  store i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN12_GLOBAL__N_113LengthGreaterERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  call void @_ZNSt3__16__sortIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_(%"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* %13, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** nonnull dereferenceable(8) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::vector.428"* %0 to i8*
  br label %319

20:                                               ; preds = %3
  %21 = bitcast %"class.base::internal::flat_tree.517"* %6 to i8*
  %22 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %6, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %6, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::vector.428"* %7 to i8*
  %25 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %7, i64 0, i32 0, i32 1
  %26 = bitcast i64** %25 to i8**
  %27 = bitcast %"class.std::__1::vector.428"* %7 to i8**
  %28 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i64** %25 to i64*
  %30 = bitcast %"class.std::__1::vector.428"* %7 to i64*
  %31 = bitcast i64** %28 to i64*
  %32 = bitcast %"class.std::__1::vector.428"* %0 to i8*
  %33 = bitcast i64** %23 to i64*
  %34 = bitcast %"class.base::internal::flat_tree.517"* %6 to i8*
  br label %38

35:                                               ; preds = %316
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %37 = icmp eq %"class.std::__1::basic_string"* %318, %36
  br i1 %37, label %319, label %38

38:                                               ; preds = %20, %35
  %39 = phi i64 [ 0, %20 ], [ %310, %35 ]
  %40 = phi i64 [ 0, %20 ], [ %309, %35 ]
  %41 = phi i64 [ 0, %20 ], [ %308, %35 ]
  %42 = phi %"class.std::__1::basic_string"* [ %15, %20 ], [ %318, %35 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZN19URLIndexPrivateData17HistoryIDsForTermERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.base::internal::flat_tree.517"* nonnull sret %6, %class.URLIndexPrivateData* %1, %"class.std::__1::basic_string"* dereferenceable(24) %42)
  %43 = load i64*, i64** %22, align 8
  %44 = bitcast i64* %43 to i8*
  %45 = ptrtoint i64* %43 to i64
  %46 = load i64*, i64** %23, align 8
  %47 = icmp eq i64* %43, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #19
  br label %306

49:                                               ; preds = %38
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %51 = icmp eq %"class.std::__1::basic_string"* %42, %50
  br i1 %51, label %52, label %235

52:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #19
  %53 = ptrtoint i64* %46 to i64
  %54 = sub i64 %53, %45
  %55 = ashr exact i64 %54, 3
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %223, label %57

57:                                               ; preds = %52
  %58 = icmp ugt i64 %55, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.428"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %60) #21
  unreachable

61:                                               ; preds = %57
  %62 = call i8* @_Znwm(i64 %54) #20
  %63 = bitcast i8* %62 to i64*
  store i8* %62, i8** %26, align 8
  store i8* %62, i8** %27, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 %55
  store i64* %64, i64** %28, align 8
  %65 = ptrtoint i8* %62 to i64
  %66 = getelementptr i64, i64* %46, i64 -1
  %67 = ptrtoint i64* %66 to i64
  %68 = sub i64 %67, %45
  %69 = lshr i64 %68, 3
  %70 = add nuw nsw i64 %69, 1
  %71 = icmp ult i64 %70, 4
  br i1 %71, label %167, label %72

72:                                               ; preds = %61
  %73 = getelementptr i8, i8* %62, i64 8
  %74 = getelementptr i64, i64* %46, i64 -1
  %75 = ptrtoint i64* %74 to i64
  %76 = sub i64 %75, %45
  %77 = lshr i64 %76, 3
  %78 = and i64 %76, -8
  %79 = getelementptr i8, i8* %73, i64 %78
  %80 = getelementptr i64, i64* %43, i64 1
  %81 = getelementptr i64, i64* %80, i64 %77
  %82 = bitcast i64* %81 to i8*
  %83 = icmp ult i8* %62, %82
  %84 = icmp ugt i8* %79, %44
  %85 = and i1 %83, %84
  br i1 %85, label %167, label %86

86:                                               ; preds = %72
  %87 = and i64 %70, 4611686018427387900
  %88 = getelementptr i64, i64* %63, i64 %87
  %89 = getelementptr i64, i64* %43, i64 %87
  %90 = add nsw i64 %87, -4
  %91 = lshr exact i64 %90, 2
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp ult i64 %90, 12
  br i1 %94, label %146, label %95

95:                                               ; preds = %86
  %96 = sub nsw i64 %92, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %143, %97 ]
  %99 = phi i64 [ %96, %95 ], [ %144, %97 ]
  %100 = getelementptr i64, i64* %63, i64 %98
  %101 = getelementptr i64, i64* %43, i64 %98
  %102 = bitcast i64* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !30
  %104 = getelementptr i64, i64* %101, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !30
  %107 = bitcast i64* %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !33, !noalias !30
  %108 = getelementptr i64, i64* %100, i64 2
  %109 = bitcast i64* %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !33, !noalias !30
  %110 = or i64 %98, 4
  %111 = getelementptr i64, i64* %63, i64 %110
  %112 = getelementptr i64, i64* %43, i64 %110
  %113 = bitcast i64* %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8, !alias.scope !30
  %115 = getelementptr i64, i64* %112, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 8, !alias.scope !30
  %118 = bitcast i64* %111 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %118, align 8, !alias.scope !33, !noalias !30
  %119 = getelementptr i64, i64* %111, i64 2
  %120 = bitcast i64* %119 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %120, align 8, !alias.scope !33, !noalias !30
  %121 = or i64 %98, 8
  %122 = getelementptr i64, i64* %63, i64 %121
  %123 = getelementptr i64, i64* %43, i64 %121
  %124 = bitcast i64* %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !30
  %126 = getelementptr i64, i64* %123, i64 2
  %127 = bitcast i64* %126 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8, !alias.scope !30
  %129 = bitcast i64* %122 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %129, align 8, !alias.scope !33, !noalias !30
  %130 = getelementptr i64, i64* %122, i64 2
  %131 = bitcast i64* %130 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %131, align 8, !alias.scope !33, !noalias !30
  %132 = or i64 %98, 12
  %133 = getelementptr i64, i64* %63, i64 %132
  %134 = getelementptr i64, i64* %43, i64 %132
  %135 = bitcast i64* %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !30
  %137 = getelementptr i64, i64* %134, i64 2
  %138 = bitcast i64* %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 8, !alias.scope !30
  %140 = bitcast i64* %133 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %140, align 8, !alias.scope !33, !noalias !30
  %141 = getelementptr i64, i64* %133, i64 2
  %142 = bitcast i64* %141 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %142, align 8, !alias.scope !33, !noalias !30
  %143 = add i64 %98, 16
  %144 = add i64 %99, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %97, !llvm.loop !35

146:                                              ; preds = %97, %86
  %147 = phi i64 [ 0, %86 ], [ %143, %97 ]
  %148 = icmp eq i64 %93, 0
  br i1 %148, label %165, label %149

149:                                              ; preds = %146, %149
  %150 = phi i64 [ %162, %149 ], [ %147, %146 ]
  %151 = phi i64 [ %163, %149 ], [ %93, %146 ]
  %152 = getelementptr i64, i64* %63, i64 %150
  %153 = getelementptr i64, i64* %43, i64 %150
  %154 = bitcast i64* %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !30
  %156 = getelementptr i64, i64* %153, i64 2
  %157 = bitcast i64* %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8, !alias.scope !30
  %159 = bitcast i64* %152 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %159, align 8, !alias.scope !33, !noalias !30
  %160 = getelementptr i64, i64* %152, i64 2
  %161 = bitcast i64* %160 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %161, align 8, !alias.scope !33, !noalias !30
  %162 = add i64 %150, 4
  %163 = add i64 %151, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %149, !llvm.loop !36

165:                                              ; preds = %149, %146
  %166 = icmp eq i64 %70, %87
  br i1 %166, label %220, label %167

167:                                              ; preds = %165, %72, %61
  %168 = phi i64* [ %63, %72 ], [ %63, %61 ], [ %88, %165 ]
  %169 = phi i64* [ %43, %72 ], [ %43, %61 ], [ %89, %165 ]
  %170 = ptrtoint i64* %169 to i64
  %171 = getelementptr i64, i64* %46, i64 -1
  %172 = ptrtoint i64* %171 to i64
  %173 = sub i64 %172, %170
  %174 = lshr i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %167, %178
  %179 = phi i64* [ %184, %178 ], [ %168, %167 ]
  %180 = phi i64* [ %183, %178 ], [ %169, %167 ]
  %181 = phi i64 [ %185, %178 ], [ %176, %167 ]
  %182 = load i64, i64* %180, align 8
  store i64 %182, i64* %179, align 8
  %183 = getelementptr inbounds i64, i64* %180, i64 1
  %184 = getelementptr inbounds i64, i64* %179, i64 1
  %185 = add i64 %181, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %178, !llvm.loop !37

187:                                              ; preds = %178, %167
  %188 = phi i64* [ undef, %167 ], [ %184, %178 ]
  %189 = phi i64* [ %168, %167 ], [ %184, %178 ]
  %190 = phi i64* [ %169, %167 ], [ %183, %178 ]
  %191 = icmp ult i64 %173, 56
  br i1 %191, label %220, label %192

192:                                              ; preds = %187, %192
  %193 = phi i64* [ %218, %192 ], [ %189, %187 ]
  %194 = phi i64* [ %217, %192 ], [ %190, %187 ]
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %193, align 8
  %196 = getelementptr inbounds i64, i64* %194, i64 1
  %197 = getelementptr inbounds i64, i64* %193, i64 1
  %198 = load i64, i64* %196, align 8
  store i64 %198, i64* %197, align 8
  %199 = getelementptr inbounds i64, i64* %194, i64 2
  %200 = getelementptr inbounds i64, i64* %193, i64 2
  %201 = load i64, i64* %199, align 8
  store i64 %201, i64* %200, align 8
  %202 = getelementptr inbounds i64, i64* %194, i64 3
  %203 = getelementptr inbounds i64, i64* %193, i64 3
  %204 = load i64, i64* %202, align 8
  store i64 %204, i64* %203, align 8
  %205 = getelementptr inbounds i64, i64* %194, i64 4
  %206 = getelementptr inbounds i64, i64* %193, i64 4
  %207 = load i64, i64* %205, align 8
  store i64 %207, i64* %206, align 8
  %208 = getelementptr inbounds i64, i64* %194, i64 5
  %209 = getelementptr inbounds i64, i64* %193, i64 5
  %210 = load i64, i64* %208, align 8
  store i64 %210, i64* %209, align 8
  %211 = getelementptr inbounds i64, i64* %194, i64 6
  %212 = getelementptr inbounds i64, i64* %193, i64 6
  %213 = load i64, i64* %211, align 8
  store i64 %213, i64* %212, align 8
  %214 = getelementptr inbounds i64, i64* %194, i64 7
  %215 = getelementptr inbounds i64, i64* %193, i64 7
  %216 = load i64, i64* %214, align 8
  store i64 %216, i64* %215, align 8
  %217 = getelementptr inbounds i64, i64* %194, i64 8
  %218 = getelementptr inbounds i64, i64* %193, i64 8
  %219 = icmp eq i64* %217, %46
  br i1 %219, label %220, label %192, !llvm.loop !38

220:                                              ; preds = %187, %192, %165
  %221 = phi i64* [ %88, %165 ], [ %188, %187 ], [ %218, %192 ]
  %222 = ptrtoint i64* %221 to i64
  store i64 %222, i64* %29, align 8
  br label %223

223:                                              ; preds = %52, %220
  %224 = phi i64 [ 0, %52 ], [ %222, %220 ]
  %225 = phi i64 [ 0, %52 ], [ %65, %220 ]
  %226 = icmp eq i64 %39, 0
  br i1 %226, label %231, label %227

227:                                              ; preds = %223
  %228 = inttoptr i64 %39 to i8*
  call void @_ZdlPv(i8* %228) #20
  %229 = load i64, i64* %30, align 8
  %230 = load i64, i64* %29, align 8
  br label %231

231:                                              ; preds = %227, %223
  %232 = phi i64 [ %224, %223 ], [ %230, %227 ]
  %233 = phi i64 [ %225, %223 ], [ %229, %227 ]
  %234 = load i64, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #19
  br label %301

235:                                              ; preds = %49
  %236 = inttoptr i64 %39 to i64*
  %237 = inttoptr i64 %40 to i64*
  %238 = icmp eq i64* %236, %237
  br i1 %238, label %260, label %239

239:                                              ; preds = %235, %256
  %240 = phi i64* [ %257, %256 ], [ %43, %235 ]
  %241 = phi i64* [ %258, %256 ], [ %236, %235 ]
  %242 = icmp eq i64* %240, %46
  br i1 %242, label %260, label %243

243:                                              ; preds = %239
  %244 = load i64, i64* %241, align 8
  br label %245

245:                                              ; preds = %249, %243
  %246 = phi i64* [ %250, %249 ], [ %240, %243 ]
  %247 = load i64, i64* %246, align 8
  %248 = icmp slt i64 %247, %244
  br i1 %248, label %249, label %252

249:                                              ; preds = %245
  %250 = getelementptr inbounds i64, i64* %246, i64 1
  %251 = icmp eq i64* %250, %46
  br i1 %251, label %260, label %245

252:                                              ; preds = %245
  %253 = icmp ne i64* %246, %46
  %254 = icmp eq i64 %247, %244
  %255 = and i1 %253, %254
  br i1 %255, label %256, label %260

256:                                              ; preds = %252
  %257 = getelementptr inbounds i64, i64* %246, i64 1
  %258 = getelementptr inbounds i64, i64* %241, i64 1
  %259 = icmp eq i64* %258, %237
  br i1 %259, label %296, label %239

260:                                              ; preds = %252, %239, %249, %235
  %261 = phi i64* [ %43, %235 ], [ %46, %249 ], [ %246, %252 ], [ %46, %239 ]
  %262 = phi i64* [ %236, %235 ], [ %241, %249 ], [ %241, %239 ], [ %241, %252 ]
  %263 = ptrtoint i64* %262 to i64
  %264 = icmp eq i64* %262, %237
  br i1 %264, label %296, label %265

265:                                              ; preds = %260
  %266 = getelementptr inbounds i64, i64* %262, i64 1
  %267 = icmp eq i64* %266, %237
  br i1 %267, label %296, label %268

268:                                              ; preds = %265, %291
  %269 = phi i64* [ %294, %291 ], [ %266, %265 ]
  %270 = phi i64* [ %292, %291 ], [ %261, %265 ]
  %271 = phi i64 [ %293, %291 ], [ %263, %265 ]
  %272 = icmp eq i64* %270, %46
  br i1 %272, label %291, label %273

273:                                              ; preds = %268
  %274 = load i64, i64* %269, align 8
  br label %275

275:                                              ; preds = %279, %273
  %276 = phi i64* [ %280, %279 ], [ %270, %273 ]
  %277 = load i64, i64* %276, align 8
  %278 = icmp slt i64 %277, %274
  br i1 %278, label %279, label %282

279:                                              ; preds = %275
  %280 = getelementptr inbounds i64, i64* %276, i64 1
  %281 = icmp eq i64* %280, %46
  br i1 %281, label %291, label %275

282:                                              ; preds = %275
  %283 = icmp ne i64* %276, %46
  %284 = icmp eq i64 %277, %274
  %285 = and i1 %283, %284
  br i1 %285, label %286, label %291

286:                                              ; preds = %282
  %287 = getelementptr inbounds i64, i64* %276, i64 1
  %288 = inttoptr i64 %271 to i64*
  store i64 %274, i64* %288, align 8
  %289 = getelementptr inbounds i64, i64* %288, i64 1
  %290 = ptrtoint i64* %289 to i64
  br label %291

291:                                              ; preds = %279, %286, %282, %268
  %292 = phi i64* [ %287, %286 ], [ %276, %282 ], [ %46, %268 ], [ %46, %279 ]
  %293 = phi i64 [ %290, %286 ], [ %271, %282 ], [ %271, %268 ], [ %271, %279 ]
  %294 = getelementptr inbounds i64, i64* %269, i64 1
  %295 = icmp eq i64* %294, %237
  br i1 %295, label %296, label %268

296:                                              ; preds = %256, %291, %265, %260
  %297 = phi i64 [ %263, %260 ], [ %263, %265 ], [ %293, %291 ], [ %40, %256 ]
  %298 = inttoptr i64 %297 to i64*
  %299 = icmp eq i64* %237, %298
  %300 = select i1 %299, i64 %40, i64 %297
  br label %301

301:                                              ; preds = %231, %296
  %302 = phi i64 [ %41, %296 ], [ %234, %231 ]
  %303 = phi i64 [ %300, %296 ], [ %232, %231 ]
  %304 = phi i64 [ %39, %296 ], [ %233, %231 ]
  %305 = load i64*, i64** %22, align 8
  br label %306

306:                                              ; preds = %301, %48
  %307 = phi i64* [ %305, %301 ], [ %43, %48 ]
  %308 = phi i64 [ %302, %301 ], [ %41, %48 ]
  %309 = phi i64 [ %303, %301 ], [ %40, %48 ]
  %310 = phi i64 [ %304, %301 ], [ %39, %48 ]
  %311 = phi i32 [ 0, %301 ], [ 1, %48 ]
  %312 = icmp eq i64* %307, null
  br i1 %312, label %316, label %313

313:                                              ; preds = %306
  %314 = ptrtoint i64* %307 to i64
  store i64 %314, i64* %33, align 8
  %315 = bitcast i64* %307 to i8*
  call void @_ZdlPv(i8* %315) #20
  br label %316

316:                                              ; preds = %306, %313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #19
  %317 = icmp eq i32 %311, 0
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  br i1 %317, label %35, label %329

319:                                              ; preds = %35, %18
  %320 = phi i8* [ %19, %18 ], [ %32, %35 ]
  %321 = phi i64 [ 0, %18 ], [ %308, %35 ]
  %322 = phi i64 [ 0, %18 ], [ %309, %35 ]
  %323 = phi i64 [ 0, %18 ], [ %310, %35 ]
  call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 24, i1 false) #19
  %324 = bitcast %"class.std::__1::vector.428"* %0 to i64*
  store i64 %323, i64* %324, align 8
  %325 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 1
  %326 = bitcast i64** %325 to i64*
  store i64 %322, i64* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %328 = bitcast i64** %327 to i64*
  store i64 %321, i64* %328, align 8
  br label %329

329:                                              ; preds = %316, %319
  %330 = phi i64 [ 0, %319 ], [ %310, %316 ]
  %331 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %332 = icmp eq %"class.std::__1::basic_string"* %331, null
  br i1 %332, label %354, label %333

333:                                              ; preds = %329
  %334 = bitcast %"class.std::__1::basic_string"* %331 to i8*
  %335 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %336 = icmp eq %"class.std::__1::basic_string"* %335, %331
  br i1 %336, label %352, label %337

337:                                              ; preds = %333, %347
  %338 = phi %"class.std::__1::basic_string"* [ %339, %347 ], [ %335, %333 ]
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %338, i64 -1
  %340 = bitcast %"class.std::__1::basic_string"* %339 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %341 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %340, i64 0, i32 1, i32 1
  %342 = load i8, i8* %341, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %347

344:                                              ; preds = %337
  %345 = bitcast %"class.std::__1::basic_string"* %339 to i8**
  %346 = load i8*, i8** %345, align 8
  call void @_ZdlPv(i8* %346) #20
  br label %347

347:                                              ; preds = %344, %337
  %348 = icmp eq %"class.std::__1::basic_string"* %339, %331
  br i1 %348, label %349, label %337

349:                                              ; preds = %347
  %350 = bitcast %"class.std::__1::vector"* %5 to i8**
  %351 = load i8*, i8** %350, align 8
  br label %352

352:                                              ; preds = %349, %333
  %353 = phi i8* [ %351, %349 ], [ %334, %333 ]
  store %"class.std::__1::basic_string"* %331, %"class.std::__1::basic_string"** %10, align 8
  call void @_ZdlPv(i8* %353) #20
  br label %354

354:                                              ; preds = %329, %352
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #19
  %355 = icmp eq i64 %330, 0
  br i1 %355, label %358, label %356

356:                                              ; preds = %354
  %357 = inttoptr i64 %330 to i8*
  call void @_ZdlPv(i8* %357) #20
  br label %358

358:                                              ; preds = %354, %356
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19URLIndexPrivateData18TrimHistoryIdsPoolEPNSt3__16vectorIlNS0_9allocatorIlEEEE(%class.URLIndexPrivateData*, %"class.std::__1::vector.428"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.URLIndexPrivateData::HistoryItemFactorGreater", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %1, i64 0, i32 0, i32 1
  %5 = bitcast i64** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.428"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, 501
  %12 = inttoptr i64 %8 to i64*
  br i1 %11, label %22, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i64*
  %15 = getelementptr inbounds i64, i64* %12, i64 500
  %16 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12
  %17 = ptrtoint %"class.std::__1::unordered_map"* %16 to i64
  %18 = bitcast %"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3 to i64*
  store i64 %17, i64* %18, align 8
  call void @_ZNSt3__113__nth_elementIRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEvT0_S7_S7_T_(i64* %12, i64* %15, i64* %14, %"class.URLIndexPrivateData::HistoryItemFactorGreater"* nonnull dereferenceable(8) %3) #19
  %19 = load i64*, i64** %4, align 8
  %20 = icmp eq i64* %15, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  store i64* %15, i64** %4, align 8
  br label %22

22:                                               ; preds = %21, %13, %2
  %23 = phi i1 [ false, %2 ], [ true, %13 ], [ true, %21 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData25HistoryIdsToScoredMatchesENSt3__16vectorIlNS0_9allocatorIlEEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS2_IDsEEEEPK18TemplateURLServicePN9bookmarks13BookmarkModelEPNS1_I18ScoredHistoryMatchNS2_ISI_EEEE(%class.URLIndexPrivateData*, %"class.std::__1::vector.428"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24), %class.TemplateURLService*, %"class.bookmarks::BookmarkModel"*, %"class.std::__1::vector.395"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector.420", align 8
  %9 = alloca %struct.ScoredHistoryMatch, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %1, i64 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %1, i64 0, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %11, %13
  br i1 %14, label %250, label %15

15:                                               ; preds = %6
  %16 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load i8, i8* %20, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %27 = select i1 %23, i16* %25, i16* %26
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  %32 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %37, %34 ], [ 0, %15 ]
  %36 = phi i16* [ %38, %34 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %15 ]
  %37 = add i64 %35, 1
  %38 = getelementptr inbounds i16, i16* %36, i64 1
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %41, label %34

41:                                               ; preds = %34, %15
  %42 = phi i64 [ 0, %15 ], [ %37, %34 ]
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %7, i16* %27, i64 %31, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), i64 %42, i32 0, i32 1) #19
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %45 = icmp eq %"class.std::__1::basic_string"* %43, %44
  br i1 %45, label %225, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::vector.420"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #19
  %48 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %8, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #19
  call void @_ZN19URLIndexPrivateData26CalculateWordStartsOffsetsERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.420"* nonnull %8)
  %50 = load i64*, i64** %10, align 8
  %51 = load i64*, i64** %12, align 8
  %52 = icmp eq i64* %50, %51
  br i1 %52, label %60, label %53

53:                                               ; preds = %46, %57
  %54 = phi i64* [ %58, %57 ], [ %50, %46 ]
  %55 = load i64, i64* %54, align 8
  %56 = call zeroext i1 @_ZNK19URLIndexPrivateData12ShouldFilterElPK18TemplateURLService(%class.URLIndexPrivateData* %0, i64 %55, %class.TemplateURLService* %3) #19
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds i64, i64* %54, i64 1
  %59 = icmp eq i64* %58, %51
  br i1 %59, label %84, label %53

60:                                               ; preds = %53, %46
  %61 = phi i64* [ %50, %46 ], [ %54, %53 ]
  %62 = icmp eq i64* %61, %51
  br i1 %62, label %84, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds i64, i64* %61, i64 1
  %65 = icmp eq i64* %64, %51
  br i1 %65, label %84, label %66

66:                                               ; preds = %63
  %67 = ptrtoint i64* %61 to i64
  br label %68

68:                                               ; preds = %78, %66
  %69 = phi i64* [ %80, %78 ], [ %64, %66 ]
  %70 = phi i64 [ %79, %78 ], [ %67, %66 ]
  %71 = load i64, i64* %69, align 8
  %72 = call zeroext i1 @_ZNK19URLIndexPrivateData12ShouldFilterElPK18TemplateURLService(%class.URLIndexPrivateData* %0, i64 %71, %class.TemplateURLService* %3) #19
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = load i64, i64* %69, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 1
  %77 = ptrtoint i64* %76 to i64
  br label %78

78:                                               ; preds = %73, %68
  %79 = phi i64 [ %70, %68 ], [ %77, %73 ]
  %80 = getelementptr inbounds i64, i64* %69, i64 1
  %81 = icmp eq i64* %80, %51
  br i1 %81, label %82, label %68

82:                                               ; preds = %78
  %83 = inttoptr i64 %79 to i64*
  br label %84

84:                                               ; preds = %57, %82, %63, %60
  %85 = phi i64* [ %51, %60 ], [ %61, %63 ], [ %83, %82 ], [ %51, %57 ]
  %86 = load i64*, i64** %12, align 8
  %87 = icmp eq i64* %85, %86
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  store i64* %85, i64** %12, align 8
  br label %89

89:                                               ; preds = %84, %88
  %90 = phi i64* [ %86, %84 ], [ %85, %88 ]
  %91 = ptrtoint i64* %90 to i64
  %92 = bitcast %"class.std::__1::vector.428"* %1 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 3
  %96 = call i64 @_ZN4base4Time3NowEv() #19
  %97 = load i64*, i64** %10, align 8
  %98 = load i64*, i64** %12, align 8
  %99 = icmp eq i64* %97, %98
  br i1 %99, label %111, label %100

100:                                              ; preds = %89
  %101 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to %"class.std::__1::__tree_node.588"**
  %105 = bitcast %struct.ScoredHistoryMatch* %9 to i8*
  %106 = icmp eq %"class.bookmarks::BookmarkModel"* %4, null
  %107 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %9, i64 0, i32 1
  %108 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %5, i64 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast %struct.ScoredHistoryMatch** %108 to i64*
  br label %120

111:                                              ; preds = %222, %89
  %112 = load i64*, i64** %48, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = ptrtoint i64* %112 to i64
  %116 = bitcast i64** %49 to i64*
  store i64 %115, i64* %116, align 8
  %117 = bitcast i64* %112 to i8*
  call void @_ZdlPv(i8* %117) #20
  br label %118

118:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #19
  %119 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  br label %225

120:                                              ; preds = %100, %222
  %121 = phi i64* [ %97, %100 ], [ %223, %222 ]
  %122 = load i64, i64* %121, align 8
  %123 = load i64, i64* %101, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %172, label %125

125:                                              ; preds = %120
  %126 = call i64 @llvm.ctpop.i64(i64 %123) #19, !range !3
  %127 = icmp ugt i64 %126, 1
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = add i64 %123, -1
  %130 = and i64 %129, %122
  br label %135

131:                                              ; preds = %125
  %132 = icmp ult i64 %122, %123
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = urem i64 %122, %123
  br label %135

135:                                              ; preds = %133, %131, %128
  %136 = phi i64 [ %130, %128 ], [ %134, %133 ], [ %122, %131 ]
  %137 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %137, i64 %136
  %139 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base"* %139, null
  br i1 %140, label %172, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %139, i64 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %172, label %145

145:                                              ; preds = %141
  %146 = add i64 %123, -1
  br label %147

147:                                              ; preds = %168, %145
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %145 ], [ %170, %168 ]
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %148, i64 1
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %122, %151
  br i1 %152, label %163, label %153

153:                                              ; preds = %147
  br i1 %127, label %156, label %154

154:                                              ; preds = %153
  %155 = and i64 %151, %146
  br label %160

156:                                              ; preds = %153
  %157 = icmp ult i64 %151, %123
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %151, %123
  br label %160

160:                                              ; preds = %158, %156, %154
  %161 = phi i64 [ %155, %154 ], [ %159, %158 ], [ %151, %156 ]
  %162 = icmp eq i64 %161, %136
  br i1 %162, label %168, label %172

163:                                              ; preds = %147
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %148, i64 2
  %165 = bitcast %"struct.std::__1::__hash_node_base"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %122
  br i1 %167, label %172, label %168

168:                                              ; preds = %163, %160
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %148, i64 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base"* %170, null
  br i1 %171, label %172, label %147

172:                                              ; preds = %160, %163, %168, %120, %135, %141
  %173 = phi %"struct.std::__1::__hash_node_base"* [ null, %135 ], [ null, %120 ], [ null, %141 ], [ %148, %163 ], [ null, %168 ], [ null, %160 ]
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %173, i64 3
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to %"class.history::URLRow"*
  %176 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %104, align 8
  %177 = icmp eq %"class.std::__1::__tree_node.588"* %176, null
  br i1 %177, label %199, label %178

178:                                              ; preds = %172, %178
  %179 = phi %"class.std::__1::__tree_end_node"* [ %189, %178 ], [ %103, %172 ]
  %180 = phi %"class.std::__1::__tree_node.588"* [ %190, %178 ], [ %176, %172 ]
  %181 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %180, i64 0, i32 1, i32 0, i32 0
  %182 = load i64, i64* %181, align 8
  %183 = icmp slt i64 %182, %122
  %184 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %180, i64 0, i32 0, i32 1
  %185 = bitcast %"class.std::__1::__tree_node_base"** %184 to %"class.std::__1::__tree_node.588"**
  %186 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %180, i64 0, i32 0, i32 0
  %187 = bitcast %"class.std::__1::__tree_node.588"* %180 to %"class.std::__1::__tree_node.588"**
  %188 = select i1 %183, %"class.std::__1::__tree_node.588"** %185, %"class.std::__1::__tree_node.588"** %187
  %189 = select i1 %183, %"class.std::__1::__tree_end_node"* %179, %"class.std::__1::__tree_end_node"* %186
  %190 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %188, align 8
  %191 = icmp eq %"class.std::__1::__tree_node.588"* %190, null
  br i1 %191, label %192, label %178

192:                                              ; preds = %178
  %193 = icmp eq %"class.std::__1::__tree_end_node"* %189, %103
  br i1 %193, label %199, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %189, i64 4
  %196 = bitcast %"class.std::__1::__tree_end_node"* %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = icmp slt i64 %122, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %194, %192, %172
  br label %200

200:                                              ; preds = %194, %199
  %201 = phi %"class.std::__1::__tree_end_node"* [ %103, %199 ], [ %189, %194 ]
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %105) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 248, i1 false)
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %173, i64 26
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %202 to %"class.std::__1::vector.485"*
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 5
  %205 = bitcast %"class.std::__1::__tree_end_node"* %204 to %struct.RowWordStarts*
  br i1 %106, label %210, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %173, i64 5
  %208 = bitcast %"struct.std::__1::__hash_node_base"* %207 to %class.GURL*
  %209 = call zeroext i1 @_ZN9bookmarks13BookmarkModel12IsBookmarkedERK4GURL(%"class.bookmarks::BookmarkModel"* nonnull %4, %class.GURL* dereferenceable(120) %208) #19
  br label %210

210:                                              ; preds = %200, %206
  %211 = phi i1 [ false, %200 ], [ %209, %206 ]
  call void @_ZN18ScoredHistoryMatchC1ERKN7history6URLRowERKNSt3__16vectorINS4_4pairIN4base4TimeEN2ui14PageTransitionEEENS4_9allocatorISB_EEEERKNS4_12basic_stringIDsNS4_11char_traitsIDsEENSC_IDsEEEERKNS5_ISL_NSC_ISL_EEEERKNS5_ImNSC_ImEEEERK13RowWordStartsbmS8_(%struct.ScoredHistoryMatch* nonnull %9, %"class.history::URLRow"* dereferenceable(184) %175, %"class.std::__1::vector.485"* dereferenceable(24) %203, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::vector"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.420"* nonnull dereferenceable(24) %8, %struct.RowWordStarts* dereferenceable(48) %205, i1 zeroext %211, i64 %95, i64 %96) #19
  %212 = load i32, i32* %107, align 4
  %213 = icmp sgt i32 %212, 0
  br i1 %213, label %214, label %222

214:                                              ; preds = %210
  %215 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %108, align 8
  %216 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %109, align 8
  %217 = icmp ult %struct.ScoredHistoryMatch* %215, %216
  br i1 %217, label %218, label %221

218:                                              ; preds = %214
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* %215, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %9) #19
  %219 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %215, i64 1
  %220 = ptrtoint %struct.ScoredHistoryMatch* %219 to i64
  store i64 %220, i64* %110, align 8
  br label %222

221:                                              ; preds = %214
  call void @_ZNSt3__16vectorI18ScoredHistoryMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.395"* %5, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %9) #19
  br label %222

222:                                              ; preds = %221, %218, %210
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %105) #19
  %223 = getelementptr inbounds i64, i64* %121, i64 1
  %224 = icmp eq i64* %223, %98
  br i1 %224, label %111, label %120

225:                                              ; preds = %41, %118
  %226 = phi %"class.std::__1::basic_string"* [ %43, %41 ], [ %119, %118 ]
  %227 = icmp eq %"class.std::__1::basic_string"* %226, null
  br i1 %227, label %249, label %228

228:                                              ; preds = %225
  %229 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  %230 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %231 = icmp eq %"class.std::__1::basic_string"* %230, %226
  br i1 %231, label %247, label %232

232:                                              ; preds = %228, %242
  %233 = phi %"class.std::__1::basic_string"* [ %234, %242 ], [ %230, %228 ]
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 -1
  %235 = bitcast %"class.std::__1::basic_string"* %234 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %235, i64 0, i32 1, i32 1
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %232
  %240 = bitcast %"class.std::__1::basic_string"* %234 to i8**
  %241 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %241) #20
  br label %242

242:                                              ; preds = %239, %232
  %243 = icmp eq %"class.std::__1::basic_string"* %234, %226
  br i1 %243, label %244, label %232

244:                                              ; preds = %242
  %245 = bitcast %"class.std::__1::vector"* %7 to i8**
  %246 = load i8*, i8** %245, align 8
  br label %247

247:                                              ; preds = %244, %228
  %248 = phi i8* [ %246, %244 ], [ %229, %228 ]
  store %"class.std::__1::basic_string"* %226, %"class.std::__1::basic_string"** %18, align 8
  call void @_ZdlPv(i8* %248) #20
  br label %249

249:                                              ; preds = %225, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #19
  br label %250

250:                                              ; preds = %6, %249
  ret void
}

declare zeroext i1 @_ZN18ScoredHistoryMatch17MatchScoreGreaterERKS_S1_(%struct.ScoredHistoryMatch* dereferenceable(248), %struct.ScoredHistoryMatch* dereferenceable(248)) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData9UpdateURLEPN7history14HistoryServiceERKNS0_6URLRowERKNSt3__13setINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_4lessISD_EENSB_ISD_EEEEPN4base21CancelableTaskTrackerE(%class.URLIndexPrivateData*, %"class.history::HistoryService"*, %"class.history::URLRow"* dereferenceable(184), %"class.std::__1::set.214"* dereferenceable(24), %"class.base::CancelableTaskTracker"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.std::__1::tuple.623", align 8
  %9 = alloca %"class.std::__1::tuple.626", align 1
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.history::URLRow", align 8
  %13 = alloca %"class.base::Time", align 8
  %14 = alloca %"class.base::Time", align 8
  %15 = alloca %struct.RowWordStarts, align 8
  %16 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %11, align 8
  %19 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %70, label %22

22:                                               ; preds = %5
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #19, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %18
  br i1 %65, label %79, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %58, %66, %32, %5, %39
  %71 = bitcast %"class.history::URLRow"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %71) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 184, i1 false)
  call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* nonnull %12, %"class.history::URLRow"* dereferenceable(184) %2) #19
  %72 = load i64, i64* %11, align 8
  %73 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %12, i64 0, i32 1
  store i64 %72, i64* %73, align 8
  %74 = bitcast %"class.base::Time"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #19
  %75 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %13, i64 0, i32 0, i32 0
  store i64 0, i64* %75, align 8
  %76 = call zeroext i1 @_ZN7history25RowQualifiesAsSignificantERKNS_6URLRowERKN4base4TimeE(%"class.history::URLRow"* nonnull dereferenceable(184) %12, %"class.base::Time"* nonnull dereferenceable(8) %13) #19
  br i1 %76, label %77, label %258

77:                                               ; preds = %70
  %78 = call zeroext i1 @_ZN19URLIndexPrivateData8IndexRowEPN7history15HistoryDatabaseEPNS0_14HistoryServiceERKNS0_6URLRowERKNSt3__13setINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS8_4lessISF_EENSD_ISF_EEEEPN4base21CancelableTaskTrackerE(%class.URLIndexPrivateData* %0, %"class.history::HistoryDatabase"* null, %"class.history::HistoryService"* %1, %"class.history::URLRow"* nonnull dereferenceable(184) %12, %"class.std::__1::set.214"* dereferenceable(24) %3, %"class.base::CancelableTaskTracker"* %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #19
  call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %71) #19
  br i1 %78, label %249, label %259

79:                                               ; preds = %61
  %80 = bitcast %"class.base::Time"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #19
  %81 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %14, i64 0, i32 0, i32 0
  store i64 0, i64* %81, align 8
  %82 = call zeroext i1 @_ZN7history25RowQualifiesAsSignificantERKNS_6URLRowERKN4base4TimeE(%"class.history::URLRow"* dereferenceable(184) %2, %"class.base::Time"* nonnull dereferenceable(8) %14) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #19
  br i1 %82, label %83, label %242

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %84 to %"class.history::URLRow"*
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 20
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to %"class.std::__1::basic_string"*
  %88 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 3
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %86 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 21
  %94 = bitcast %"struct.std::__1::__hash_node_base"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = zext i8 %91 to i64
  %97 = select i1 %92, i64 %95, i64 %96
  %98 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = zext i8 %100 to i64
  %105 = select i1 %101, i64 %103, i64 %104
  %106 = icmp eq i64 %97, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %83
  %108 = icmp eq i64 %97, 0
  br i1 %108, label %130, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i16*, i16** %110, align 8
  %112 = bitcast %"class.std::__1::basic_string"* %88 to i16*
  %113 = select i1 %101, i16* %111, i16* %112
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i16**
  %115 = load i16*, i16** %114, align 8
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i16*
  %117 = select i1 %92, i16* %115, i16* %116
  br label %118

118:                                              ; preds = %125, %109
  %119 = phi i64 [ %126, %125 ], [ %97, %109 ]
  %120 = phi i16* [ %128, %125 ], [ %113, %109 ]
  %121 = phi i16* [ %127, %125 ], [ %117, %109 ]
  %122 = load i16, i16* %121, align 2
  %123 = load i16, i16* %120, align 2
  %124 = icmp eq i16 %123, %122
  br i1 %124, label %125, label %130

125:                                              ; preds = %118
  %126 = add i64 %119, -1
  %127 = getelementptr inbounds i16, i16* %121, i64 1
  %128 = getelementptr inbounds i16, i16* %120, i64 1
  %129 = icmp eq i64 %126, 0
  br i1 %129, label %130, label %118

130:                                              ; preds = %118, %125, %83, %107
  %131 = phi i1 [ true, %83 ], [ false, %107 ], [ true, %118 ], [ false, %125 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 23
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 4
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %138, label %152

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %85, i64 0, i32 5
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 5
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %144, label %152

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 24
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 6, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %147, %149
  br i1 %150, label %151, label %152

151:                                              ; preds = %144
  br i1 %131, label %175, label %259

152:                                              ; preds = %144, %130, %138
  store i32 %136, i32* %133, align 8
  %153 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 5
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %85, i64 0, i32 5
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 6, i32 0, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 24
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %158 to i64*
  store i64 %157, i64* %159, align 8
  %160 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #19
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 359) #19
  %161 = call i8* @_Znwm(i64 56) #20
  %162 = bitcast i8* %161 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35UpdateRecentVisitsFromHistoryDBTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds i8, i8* %161, i64 8
  %164 = bitcast i8* %163 to %class.URLIndexPrivateData**
  store %class.URLIndexPrivateData* %0, %class.URLIndexPrivateData** %164, align 8
  %165 = getelementptr inbounds i8, i8* %161, i64 16
  %166 = bitcast i8* %165 to i64*
  store i64 %18, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %161, i64 24
  store i8 0, i8* %167, align 8
  %168 = getelementptr inbounds i8, i8* %161, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #19
  %169 = bitcast i8* %161 to %"class.history::HistoryDBTask"*
  %170 = bitcast %"class.history::HistoryService"* %1 to i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)***
  %171 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)**, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*** %170, align 8
  %172 = getelementptr inbounds i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %171, i64 4
  %173 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %172, align 8
  %174 = call i64 %173(%"class.history::HistoryService"* %1, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.history::HistoryDBTask"* nonnull %169, %"class.base::CancelableTaskTracker"* %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #19
  br i1 %131, label %193, label %249

175:                                              ; preds = %151
  %176 = load i32, i32* %141, align 4
  store i32 %176, i32* %139, align 4
  %177 = load i64, i64* %148, align 8
  store i64 %177, i64* %146, align 8
  %178 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %178) #19
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 359) #19
  %179 = call i8* @_Znwm(i64 56) #20
  %180 = bitcast i8* %179 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35UpdateRecentVisitsFromHistoryDBTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %181 = getelementptr inbounds i8, i8* %179, i64 8
  %182 = bitcast i8* %181 to %class.URLIndexPrivateData**
  store %class.URLIndexPrivateData* %0, %class.URLIndexPrivateData** %182, align 8
  %183 = getelementptr inbounds i8, i8* %179, i64 16
  %184 = bitcast i8* %183 to i64*
  store i64 %18, i64* %184, align 8
  %185 = getelementptr inbounds i8, i8* %179, i64 24
  store i8 0, i8* %185, align 8
  %186 = getelementptr inbounds i8, i8* %179, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 24, i1 false) #19
  %187 = bitcast i8* %179 to %"class.history::HistoryDBTask"*
  %188 = bitcast %"class.history::HistoryService"* %1 to i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)***
  %189 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)**, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*** %188, align 8
  %190 = getelementptr inbounds i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %189, i64 4
  %191 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %190, align 8
  %192 = call i64 %191(%"class.history::HistoryService"* %1, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.history::HistoryDBTask"* nonnull %187, %"class.base::CancelableTaskTracker"* %4) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %178) #19
  br label %193

193:                                              ; preds = %175, %152
  call void @_ZN19URLIndexPrivateData23RemoveRowWordsFromIndexERKN7history6URLRowE(%class.URLIndexPrivateData* %0, %"class.history::URLRow"* dereferenceable(184) %85)
  %194 = load i8, i8* %99, align 1
  %195 = icmp slt i8 %194, 0
  %196 = load i64, i64* %102, align 8
  %197 = zext i8 %194 to i64
  %198 = select i1 %195, i64 %196, i64 %197
  %199 = load i8, i8* %90, align 1
  %200 = icmp slt i8 %199, 0
  %201 = load i64, i64* %94, align 8
  %202 = zext i8 %199 to i64
  %203 = select i1 %200, i64 %201, i64 %202
  %204 = icmp eq i64 %198, %203
  br i1 %204, label %205, label %228

205:                                              ; preds = %193
  %206 = icmp eq i64 %198, 0
  br i1 %206, label %230, label %207

207:                                              ; preds = %205
  %208 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i16**
  %209 = load i16*, i16** %208, align 8
  %210 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i16*
  %211 = select i1 %200, i16* %209, i16* %210
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i16*, i16** %212, align 8
  %214 = bitcast %"class.std::__1::basic_string"* %88 to i16*
  %215 = select i1 %195, i16* %213, i16* %214
  br label %216

216:                                              ; preds = %223, %207
  %217 = phi i64 [ %224, %223 ], [ %198, %207 ]
  %218 = phi i16* [ %226, %223 ], [ %211, %207 ]
  %219 = phi i16* [ %225, %223 ], [ %215, %207 ]
  %220 = load i16, i16* %219, align 2
  %221 = load i16, i16* %218, align 2
  %222 = icmp eq i16 %221, %220
  br i1 %222, label %223, label %228

223:                                              ; preds = %216
  %224 = add i64 %217, -1
  %225 = getelementptr inbounds i16, i16* %219, i64 1
  %226 = getelementptr inbounds i16, i16* %218, i64 1
  %227 = icmp eq i64 %224, 0
  br i1 %227, label %230, label %216

228:                                              ; preds = %216, %193
  %229 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %87, %"class.std::__1::basic_string"* dereferenceable(24) %88) #19
  br label %230

230:                                              ; preds = %223, %205, %228
  %231 = bitcast %struct.RowWordStarts* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %231) #19
  %232 = bitcast %struct.RowWordStarts* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 48, i1 false)
  call void @_ZN13RowWordStartsC1Ev(%struct.RowWordStarts* nonnull %15) #19
  call void @_ZN19URLIndexPrivateData18AddRowWordsToIndexERKN7history6URLRowEP13RowWordStarts(%class.URLIndexPrivateData* %0, %"class.history::URLRow"* dereferenceable(184) %85, %struct.RowWordStarts* nonnull %15)
  %233 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %234 = bitcast %"class.std::__1::tuple.623"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #19
  %235 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %8, i64 0, i32 0, i32 0, i32 0
  store i64* %11, i64** %235, align 8
  %236 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %236) #19
  %237 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.75"* %233, i64* nonnull dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.623"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %9) #19
  %238 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %237, 0
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 5
  %240 = bitcast %"class.std::__1::__tree_end_node"* %239 to %struct.RowWordStarts*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %236) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #19
  %241 = call dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSEOS_(%struct.RowWordStarts* %240, %struct.RowWordStarts* nonnull dereferenceable(48) %15) #19
  call void @_ZN13RowWordStartsD1Ev(%struct.RowWordStarts* nonnull %15) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %231) #19
  br label %249

242:                                              ; preds = %79
  call void @_ZN19URLIndexPrivateData23RemoveRowWordsFromIndexERKN7history6URLRowE(%class.URLIndexPrivateData* %0, %"class.history::URLRow"* dereferenceable(184) %2) #19
  %243 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #19
  %244 = load i64, i64* %17, align 8
  store i64 %244, i64* %10, align 8
  %245 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0
  %246 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__hash_table"* %245, i64* nonnull dereferenceable(8) %10) #19
  %247 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %248 = call i64 @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree.75"* %247, i64* nonnull dereferenceable(8) %10) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #19
  br label %249

249:                                              ; preds = %152, %230, %242, %77
  %250 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2
  %251 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %250, i64 0, i32 0
  %252 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %253 = bitcast %"class.std::__1::__tree_end_node"* %252 to %"class.std::__1::__tree_node"**
  %254 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %253, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %251, %"class.std::__1::__tree_node"* %254) #19
  %255 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %255, align 8
  %256 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %250, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %252, %"class.std::__1::__tree_end_node"** %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %252, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %257, align 8
  br label %259

258:                                              ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #19
  call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %71) #19
  br label %259

259:                                              ; preds = %258, %151, %249, %77
  %260 = phi i1 [ true, %249 ], [ false, %77 ], [ false, %151 ], [ false, %258 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  ret i1 %260
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #1

declare zeroext i1 @_ZN7history25RowQualifiesAsSignificantERKNS_6URLRowERKN4base4TimeE(%"class.history::URLRow"* dereferenceable(184), %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData8IndexRowEPN7history15HistoryDatabaseEPNS0_14HistoryServiceERKNS0_6URLRowERKNSt3__13setINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS8_4lessISF_EENSD_ISF_EEEEPN4base21CancelableTaskTrackerE(%class.URLIndexPrivateData*, %"class.history::HistoryDatabase"*, %"class.history::HistoryService"*, %"class.history::URLRow"* dereferenceable(184), %"class.std::__1::set.214"* dereferenceable(24), %"class.base::CancelableTaskTracker"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::tuple.623", align 8
  %8 = alloca %"class.std::__1::tuple.626", align 1
  %9 = alloca %"class.std::__1::tuple.623", align 8
  %10 = alloca %"class.std::__1::tuple.626", align 1
  %11 = alloca %"class.base::Location", align 8
  %12 = alloca %"class.std::__1::allocator.114", align 1
  %13 = alloca %"class.std::__1::basic_string.107", align 8
  %14 = alloca %"class.std::__1::vector.83", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.history::URLRow", align 8
  %18 = alloca %class.GURL, align 8
  %19 = alloca %struct.RowWordStarts, align 8
  %20 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string.107"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #19
  %22 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 2, i32 2, i32 0, i32 1
  %23 = load i32, i32* %22, align 4, !noalias !39
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %26

25:                                               ; preds = %6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #19, !alias.scope !39
  br label %33

26:                                               ; preds = %6
  %27 = getelementptr inbounds %class.GURL, %class.GURL* %20, i64 0, i32 0
  %28 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 2, i32 2, i32 0, i32 0
  %29 = load i32, i32* %28, align 4, !noalias !39
  %30 = sext i32 %29 to i64
  %31 = sext i32 %23 to i64
  %32 = getelementptr inbounds %"class.std::__1::allocator.114", %"class.std::__1::allocator.114"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #19, !noalias !39
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.107"* nonnull %13, %"class.std::__1::basic_string.107"* dereferenceable(24) %27, i64 %30, i64 %31, %"class.std::__1::allocator.114"* nonnull dereferenceable(1) %12) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #19, !noalias !39
  br label %33

33:                                               ; preds = %26, %25
  %34 = getelementptr inbounds %"class.std::__1::set.214", %"class.std::__1::set.214"* %4, i64 0, i32 0
  %35 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.215"* %34, %"class.std::__1::basic_string.107"* nonnull dereferenceable(24) %13) #19
  %36 = getelementptr inbounds %"class.std::__1::set.214", %"class.std::__1::set.214"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = icmp eq %"class.std::__1::__tree_end_node"* %35, %36
  %38 = bitcast %"class.std::__1::basic_string.107"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #20
  br label %45

45:                                               ; preds = %33, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #19
  br i1 %37, label %218, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.83"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #19
  %50 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %14, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %14, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #19
  %52 = icmp eq %"class.history::HistoryDatabase"* %1, null
  br i1 %52, label %77, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.history::HistoryDatabase", %"class.history::HistoryDatabase"* %1, i64 0, i32 3
  %55 = call zeroext i1 @_ZN7history13VisitDatabase25GetMostRecentVisitsForURLEliPNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEE(%"class.history::VisitDatabase"* %54, i64 %48, i32 10, %"class.std::__1::vector.83"* nonnull %14) #19
  br i1 %55, label %56, label %77

56:                                               ; preds = %53
  %57 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %50, align 8
  %58 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %51, align 8
  %59 = icmp eq %"class.history::VisitRow"* %57, %58
  br i1 %59, label %77, label %60

60:                                               ; preds = %56
  %61 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7omnibox18kHideVisitsFromCctE) #19
  br i1 %61, label %62, label %77

62:                                               ; preds = %60
  %63 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %50, align 8
  %64 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %51, align 8
  %65 = icmp eq %"class.history::VisitRow"* %63, %64
  br i1 %65, label %200, label %68

66:                                               ; preds = %68
  %67 = icmp eq %"class.history::VisitRow"* %76, %64
  br i1 %67, label %197, label %68

68:                                               ; preds = %62, %66
  %69 = phi %"class.history::VisitRow"* [ %76, %66 ], [ %63, %62 ]
  %70 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %69, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = call i32 @_ZN2ui26PageTransitionGetQualifierENS_14PageTransitionE(i32 %71) #19
  %73 = and i32 %72, 4194304
  %74 = call i32 @_ZN2ui26PageTransitionGetQualifierENS_14PageTransitionE(i32 4194304) #19
  %75 = icmp eq i32 %73, %74
  %76 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %69, i64 1
  br i1 %75, label %66, label %77

77:                                               ; preds = %68, %60, %56, %46, %53
  %78 = phi i1 [ false, %53 ], [ false, %46 ], [ true, %56 ], [ true, %60 ], [ true, %68 ]
  %79 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #19
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  %83 = load i32, i32* @_ZN13url_formatter30kFormatUrlOmitUsernamePasswordE, align 4
  call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* nonnull sret %15, %class.GURL* dereferenceable(120) %20, i32 %83, i32 0, %"struct.url::Parsed"* null, i64* null, i64* null) #19
  %84 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #19
  store i64 %48, i64* %16, align 8
  %85 = bitcast %"class.history::URLRow"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %85) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 184, i1 false)
  %86 = bitcast %class.GURL* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %86) #19
  %87 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i16*, i16** %80, align 8
  %92 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %93 = select i1 %90, i16* %91, i16* %92
  %94 = load i64, i64* %81, align 8
  %95 = zext i8 %89 to i64
  %96 = select i1 %90, i64 %94, i64 %95
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %18, i16* %93, i64 %96) #19
  call void @_ZN7history6URLRowC1ERK4GURLl(%"class.history::URLRow"* nonnull %17, %class.GURL* nonnull dereferenceable(120) %18, i64 %48) #19
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %86) #19
  %97 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 4
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %17, i64 0, i32 4
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 5
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %17, i64 0, i32 5
  store i32 %101, i32* %102, align 4
  %103 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 6, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %17, i64 0, i32 6, i32 0, i32 0
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 3
  %107 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %17, i64 0, i32 3
  %108 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = zext i8 %110 to i64
  %115 = select i1 %111, i64 %113, i64 %114
  %116 = bitcast %"class.std::__1::basic_string"* %107 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %17, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = zext i8 %118 to i64
  %123 = select i1 %119, i64 %121, i64 %122
  %124 = icmp eq i64 %115, %123
  br i1 %124, label %125, label %148

125:                                              ; preds = %77
  %126 = icmp eq i64 %115, 0
  br i1 %126, label %150, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i16*, i16** %128, align 8
  %130 = bitcast %"class.std::__1::basic_string"* %107 to i16*
  %131 = select i1 %119, i16* %129, i16* %130
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i16*, i16** %132, align 8
  %134 = bitcast %"class.std::__1::basic_string"* %106 to i16*
  %135 = select i1 %111, i16* %133, i16* %134
  br label %136

136:                                              ; preds = %143, %127
  %137 = phi i64 [ %144, %143 ], [ %115, %127 ]
  %138 = phi i16* [ %146, %143 ], [ %131, %127 ]
  %139 = phi i16* [ %145, %143 ], [ %135, %127 ]
  %140 = load i16, i16* %139, align 2
  %141 = load i16, i16* %138, align 2
  %142 = icmp eq i16 %141, %140
  br i1 %142, label %143, label %148

143:                                              ; preds = %136
  %144 = add i64 %137, -1
  %145 = getelementptr inbounds i16, i16* %139, i64 1
  %146 = getelementptr inbounds i16, i16* %138, i64 1
  %147 = icmp eq i64 %144, 0
  br i1 %147, label %150, label %136

148:                                              ; preds = %136, %77
  %149 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %107, %"class.std::__1::basic_string"* dereferenceable(24) %106) #19
  br label %150

150:                                              ; preds = %143, %125, %148
  %151 = bitcast %struct.RowWordStarts* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %151) #19
  %152 = bitcast %struct.RowWordStarts* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 48, i1 false)
  call void @_ZN13RowWordStartsC1Ev(%struct.RowWordStarts* nonnull %19) #19
  call void @_ZN19URLIndexPrivateData18AddRowWordsToIndexERKN7history6URLRowEP13RowWordStarts(%class.URLIndexPrivateData* %0, %"class.history::URLRow"* nonnull dereferenceable(184) %17, %struct.RowWordStarts* nonnull %19)
  %153 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %154 = bitcast %"class.std::__1::tuple.623"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #19
  %155 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* %16, i64** %155, align 8
  %156 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %156) #19
  %157 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.75"* %153, i64* nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.623"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %8) #19
  %158 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %157, 0
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 5
  %160 = bitcast %"class.std::__1::__tree_end_node"* %159 to %struct.RowWordStarts*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %156) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #19
  %161 = call dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSEOS_(%struct.RowWordStarts* %160, %struct.RowWordStarts* nonnull dereferenceable(48) %19) #19
  %162 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0
  %163 = bitcast %"class.std::__1::tuple.623"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #19
  %164 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %9, i64 0, i32 0, i32 0, i32 0
  store i64* %16, i64** %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %165) #19
  %166 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %162, i64* nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.623"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %10) #19
  %167 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %166, 0
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %167, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %165) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #19
  %169 = bitcast %"struct.std::__1::__hash_node_base"* %168 to %"class.history::URLRow"*
  %170 = call dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"* %169, %"class.history::URLRow"* nonnull dereferenceable(184) %17) #19
  br i1 %78, label %171, label %172

171:                                              ; preds = %150
  call void @_ZN19URLIndexPrivateData18UpdateRecentVisitsElRKNSt3__16vectorIN7history8VisitRowENS0_9allocatorIS3_EEEE(%class.URLIndexPrivateData* %0, i64 %48, %"class.std::__1::vector.83"* nonnull dereferenceable(24) %14)
  br label %190

172:                                              ; preds = %150
  %173 = icmp eq %"class.history::HistoryService"* %2, null
  br i1 %173, label %190, label %174

174:                                              ; preds = %172
  %175 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %175) #19
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 359) #19
  %176 = call i8* @_Znwm(i64 56) #20
  %177 = bitcast i8* %176 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35UpdateRecentVisitsFromHistoryDBTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %177, align 8
  %178 = getelementptr inbounds i8, i8* %176, i64 8
  %179 = bitcast i8* %178 to %class.URLIndexPrivateData**
  store %class.URLIndexPrivateData* %0, %class.URLIndexPrivateData** %179, align 8
  %180 = getelementptr inbounds i8, i8* %176, i64 16
  %181 = bitcast i8* %180 to i64*
  store i64 %48, i64* %181, align 8
  %182 = getelementptr inbounds i8, i8* %176, i64 24
  store i8 0, i8* %182, align 8
  %183 = getelementptr inbounds i8, i8* %176, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 24, i1 false) #19
  %184 = bitcast i8* %176 to %"class.history::HistoryDBTask"*
  %185 = bitcast %"class.history::HistoryService"* %2 to i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)***
  %186 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)**, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*** %185, align 8
  %187 = getelementptr inbounds i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %186, i64 4
  %188 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %187, align 8
  %189 = call i64 %188(%"class.history::HistoryService"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %11, %"class.history::HistoryDBTask"* nonnull %184, %"class.base::CancelableTaskTracker"* %5) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %175) #19
  br label %190

190:                                              ; preds = %172, %174, %171
  call void @_ZN13RowWordStartsD1Ev(%struct.RowWordStarts* nonnull %19) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %151) #19
  call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* nonnull %17) #19
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %85) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #19
  %191 = load i8, i8* %88, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %190
  %194 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #20
  br label %196

196:                                              ; preds = %190, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #19
  br label %197

197:                                              ; preds = %66, %196
  %198 = phi i1 [ true, %196 ], [ false, %66 ]
  %199 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %50, align 8
  br label %200

200:                                              ; preds = %197, %62
  %201 = phi %"class.history::VisitRow"* [ %199, %197 ], [ %63, %62 ]
  %202 = phi i1 [ %198, %197 ], [ false, %62 ]
  %203 = icmp eq %"class.history::VisitRow"* %201, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %200
  %205 = bitcast %"class.history::VisitRow"* %201 to i8*
  %206 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %51, align 8
  %207 = icmp eq %"class.history::VisitRow"* %206, %201
  br i1 %207, label %215, label %208

208:                                              ; preds = %204, %208
  %209 = phi %"class.history::VisitRow"* [ %210, %208 ], [ %206, %204 ]
  %210 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %209, i64 -1
  call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %210) #19
  %211 = icmp eq %"class.history::VisitRow"* %210, %201
  br i1 %211, label %212, label %208

212:                                              ; preds = %208
  %213 = bitcast %"class.std::__1::vector.83"* %14 to i8**
  %214 = load i8*, i8** %213, align 8
  br label %215

215:                                              ; preds = %212, %204
  %216 = phi i8* [ %214, %212 ], [ %205, %204 ]
  store %"class.history::VisitRow"* %201, %"class.history::VisitRow"** %51, align 8
  call void @_ZdlPv(i8* %216) #20
  br label %217

217:                                              ; preds = %200, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #19
  br label %218

218:                                              ; preds = %45, %217
  %219 = phi i1 [ %202, %217 ], [ false, %45 ]
  ret i1 %219
}

; Function Attrs: nounwind
declare void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData26ScheduleUpdateRecentVisitsEPN7history14HistoryServiceElPN4base21CancelableTaskTrackerE(%class.URLIndexPrivateData*, %"class.history::HistoryService"*, i64, %"class.base::CancelableTaskTracker"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #19
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 359) #19
  %7 = call i8* @_Znwm(i64 56) #20
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35UpdateRecentVisitsFromHistoryDBTask, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to %class.URLIndexPrivateData**
  store %class.URLIndexPrivateData* %0, %class.URLIndexPrivateData** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #19
  %15 = bitcast i8* %7 to %"class.history::HistoryDBTask"*
  %16 = bitcast %"class.history::HistoryService"* %1 to i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)***
  %17 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)**, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %17, i64 4
  %19 = load i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.history::HistoryService"*, %"class.base::Location"*, %"class.history::HistoryDBTask"*, %"class.base::CancelableTaskTracker"*)** %18, align 8
  %20 = call i64 %19(%"class.history::HistoryService"* %1, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.history::HistoryDBTask"* nonnull %15, %"class.base::CancelableTaskTracker"* %3) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData23RemoveRowWordsFromIndexERKN7history6URLRowE(%class.URLIndexPrivateData*, %"class.history::URLRow"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.base::internal::flat_tree.520", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::internal::flat_tree.522", align 8
  %7 = alloca [15 x i8], align 8
  %8 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  %9 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %3, align 8
  %11 = bitcast %"class.base::internal::flat_tree.520"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11
  %16 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.585"**
  %18 = bitcast %"class.base::internal::flat_tree.520"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.585"* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %45, %21
  %24 = phi %"class.std::__1::__tree_node.585"* [ %48, %45 ], [ %19, %21 ]
  %25 = phi %"class.std::__1::__tree_node_base"** [ %47, %45 ], [ %22, %21 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %24, i64 0, i32 1, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %10, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %24, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %24, i64 0, i32 0, i32 0
  br label %51

35:                                               ; preds = %23
  %36 = icmp slt i64 %27, %10
  br i1 %36, label %37, label %43

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %24, i64 0, i32 0, i32 1
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %24, i64 0, i32 0, i32 0
  br label %51

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %24, i64 0, i32 0, i32 0
  br label %51

45:                                               ; preds = %37, %29
  %46 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %39, %37 ]
  %47 = phi %"class.std::__1::__tree_node_base"** [ %30, %29 ], [ %38, %37 ]
  %48 = bitcast %"class.std::__1::__tree_node_base"* %46 to %"class.std::__1::__tree_node.585"*
  br label %23

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  br label %51

51:                                               ; preds = %49, %43, %41, %33
  %52 = phi %"class.std::__1::__tree_end_node"* [ %16, %49 ], [ %34, %33 ], [ %42, %41 ], [ %44, %43 ]
  %53 = phi %"class.std::__1::__tree_node_base"** [ %50, %49 ], [ %30, %33 ], [ %38, %41 ], [ %25, %43 ]
  %54 = bitcast %"class.std::__1::__tree_node_base"** %53 to %"class.std::__1::__tree_node.585"**
  %55 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.585"* %55, null
  br i1 %56, label %57, label %83

57:                                               ; preds = %51
  %58 = tail call i8* @_Znwm(i64 64) #20, !noalias !44
  %59 = getelementptr inbounds i8, i8* %58, i64 32
  %60 = bitcast i8* %59 to i64*
  store i64 %10, i64* %60, align 8, !noalias !44
  %61 = getelementptr inbounds i8, i8* %58, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #19, !noalias !44
  %62 = bitcast i8* %58 to %"class.std::__1::__tree_node.585"*
  %63 = bitcast i8* %58 to %"class.std::__1::__tree_node_base"*
  %64 = getelementptr inbounds i8, i8* %58, i64 16
  %65 = bitcast i8* %64 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"** %65, align 8
  %66 = bitcast %"class.std::__1::__tree_node_base"** %53 to i8**
  store i8* %58, i8** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::map.46", %"class.std::__1::map.46"* %15, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %57
  %73 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  %74 = bitcast %"class.std::__1::map.46"* %15 to i64*
  store i64 %73, i64* %74, align 8
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %76

76:                                               ; preds = %72, %57
  %77 = phi %"class.std::__1::__tree_node_base"* [ %63, %57 ], [ %75, %72 ]
  %78 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %79, %"class.std::__1::__tree_node_base"* %77) #19
  %80 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  br label %83

83:                                               ; preds = %51, %76
  %84 = phi %"class.std::__1::__tree_node.585"* [ %62, %76 ], [ %55, %51 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %84, i64 0, i32 1, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #19
  %86 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %84, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %87 = bitcast i64** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.base::internal::flat_tree.520"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 3
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %119, label %94

94:                                               ; preds = %83
  %95 = icmp ugt i64 %92, 2305843009213693951
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = bitcast %"class.base::internal::flat_tree.520"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %97) #21
  unreachable

98:                                               ; preds = %94
  %99 = tail call i8* @_Znwm(i64 %91) #20
  %100 = bitcast i8* %99 to i64*
  %101 = bitcast i64** %13 to i8**
  store i8* %99, i8** %101, align 8
  %102 = bitcast %"class.base::internal::flat_tree.520"* %4 to i8**
  store i8* %99, i8** %102, align 8
  %103 = getelementptr inbounds i64, i64* %100, i64 %92
  store i64* %103, i64** %14, align 8
  %104 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %85, i64 0, i32 0, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = load i64, i64* %87, align 8
  %107 = bitcast i64** %13 to i64*
  %108 = ptrtoint i8* %99 to i64
  %109 = ptrtoint i64* %105 to i64
  %110 = sub i64 %106, %109
  %111 = icmp sgt i64 %110, 0
  br i1 %111, label %112, label %117

112:                                              ; preds = %98
  %113 = lshr exact i64 %110, 3
  %114 = bitcast i64* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 8 %114, i64 %110, i1 false) #19
  %115 = getelementptr inbounds i64, i64* %100, i64 %113
  %116 = ptrtoint i64* %115 to i64
  br label %117

117:                                              ; preds = %112, %98
  %118 = phi i64 [ %116, %112 ], [ %108, %98 ]
  store i64 %118, i64* %107, align 8
  br label %119

119:                                              ; preds = %83, %117
  %120 = getelementptr inbounds %"class.std::__1::map.46", %"class.std::__1::map.46"* %15, i64 0, i32 0
  %121 = call i64 @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree.47"* %120, i64* nonnull dereferenceable(8) %3) #19
  %122 = load i64*, i64** %12, align 8
  %123 = load i64*, i64** %13, align 8
  %124 = icmp eq i64* %122, %123
  br i1 %124, label %168, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10
  %127 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %128 = bitcast %"class.std::__1::__tree_end_node"* %127 to %"class.std::__1::__tree_node.583"**
  %129 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %132 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 0
  %133 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %134 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %135 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = bitcast %"class.base::internal::flat_tree.522"* %6 to i8*
  %138 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %6, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %6, i64 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9
  %141 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to %"class.std::__1::__tree_node.581"**
  %143 = getelementptr inbounds %"class.std::__1::map.24", %"class.std::__1::map.24"* %140, i64 0, i32 0, i32 0
  %144 = bitcast %"class.std::__1::map.24"* %140 to i64*
  %145 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %146 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %147 = bitcast i16** %139 to i64*
  %148 = getelementptr inbounds %"class.std::__1::map.35", %"class.std::__1::map.35"* %126, i64 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::map.35"* %126 to i64*
  %150 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %151 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8
  %153 = getelementptr inbounds %"class.std::__1::map.15", %"class.std::__1::map.15"* %152, i64 0, i32 0
  %154 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %155 = getelementptr inbounds %"class.std::__1::map.15", %"class.std::__1::map.15"* %152, i64 0, i32 0, i32 0
  %156 = bitcast %"class.std::__1::map.15"* %152 to i64*
  %157 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %158 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  %160 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7
  %161 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %160, i64 0, i32 0
  %162 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %160, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 2
  %164 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %165 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %176

166:                                              ; preds = %721
  %167 = load i64*, i64** %12, align 8
  br label %168

168:                                              ; preds = %166, %119
  %169 = phi i64* [ %167, %166 ], [ %122, %119 ]
  %170 = icmp eq i64* %169, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %168
  %172 = ptrtoint i64* %169 to i64
  %173 = bitcast i64** %13 to i64*
  store i64 %172, i64* %173, align 8
  %174 = bitcast i64* %169 to i8*
  call void @_ZdlPv(i8* %174) #20
  br label %175

175:                                              ; preds = %168, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  ret void

176:                                              ; preds = %125, %721
  %177 = phi i64* [ %122, %125 ], [ %722, %721 ]
  %178 = load i64, i64* %177, align 8
  %179 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %128, align 8
  %180 = icmp eq %"class.std::__1::__tree_node.583"* %179, null
  br i1 %180, label %202, label %181

181:                                              ; preds = %176, %181
  %182 = phi %"class.std::__1::__tree_end_node"* [ %192, %181 ], [ %127, %176 ]
  %183 = phi %"class.std::__1::__tree_node.583"* [ %193, %181 ], [ %179, %176 ]
  %184 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %183, i64 0, i32 1, i32 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp ult i64 %185, %178
  %187 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %183, i64 0, i32 0, i32 1
  %188 = bitcast %"class.std::__1::__tree_node_base"** %187 to %"class.std::__1::__tree_node.583"**
  %189 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %183, i64 0, i32 0, i32 0
  %190 = bitcast %"class.std::__1::__tree_node.583"* %183 to %"class.std::__1::__tree_node.583"**
  %191 = select i1 %186, %"class.std::__1::__tree_node.583"** %188, %"class.std::__1::__tree_node.583"** %190
  %192 = select i1 %186, %"class.std::__1::__tree_end_node"* %182, %"class.std::__1::__tree_end_node"* %189
  %193 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %191, align 8
  %194 = icmp eq %"class.std::__1::__tree_node.583"* %193, null
  br i1 %194, label %195, label %181

195:                                              ; preds = %181
  %196 = icmp eq %"class.std::__1::__tree_end_node"* %192, %127
  br i1 %196, label %202, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 4
  %199 = bitcast %"class.std::__1::__tree_end_node"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = icmp ult i64 %178, %200
  br i1 %201, label %202, label %203

202:                                              ; preds = %197, %195, %176
  br label %203

203:                                              ; preds = %197, %202
  %204 = phi %"class.std::__1::__tree_end_node"* [ %127, %202 ], [ %192, %197 ]
  %205 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %204, i64 5
  %206 = bitcast %"class.std::__1::__tree_end_node"* %205 to i64**
  %207 = load i64*, i64** %206, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %204, i64 6
  %209 = bitcast %"class.std::__1::__tree_end_node"* %208 to i64**
  %210 = bitcast %"class.std::__1::__tree_end_node"* %208 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = ptrtoint i64* %207 to i64
  %213 = sub i64 %211, %212
  %214 = icmp eq i64 %213, 0
  %215 = inttoptr i64 %211 to i64*
  br i1 %214, label %234, label %216

216:                                              ; preds = %203
  %217 = ashr exact i64 %213, 3
  %218 = load i64, i64* %3, align 8
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64* [ %207, %216 ], [ %230, %219 ]
  %221 = phi i64 [ %217, %216 ], [ %229, %219 ]
  %222 = lshr i64 %221, 1
  %223 = getelementptr inbounds i64, i64* %220, i64 %222
  %224 = load i64, i64* %223, align 8
  %225 = icmp slt i64 %224, %218
  %226 = getelementptr inbounds i64, i64* %223, i64 1
  %227 = xor i64 %222, -1
  %228 = add i64 %221, %227
  %229 = select i1 %225, i64 %228, i64 %222
  %230 = select i1 %225, i64* %226, i64* %220
  %231 = icmp eq i64 %229, 0
  br i1 %231, label %232, label %219

232:                                              ; preds = %219
  %233 = ptrtoint i64* %230 to i64
  br label %234

234:                                              ; preds = %232, %203
  %235 = phi i64 [ %233, %232 ], [ %212, %203 ]
  %236 = phi i64* [ %230, %232 ], [ %207, %203 ]
  %237 = icmp eq i64* %236, %215
  br i1 %237, label %245, label %238

238:                                              ; preds = %234
  %239 = load i64, i64* %3, align 8
  %240 = load i64, i64* %236, align 8
  %241 = icmp slt i64 %239, %240
  br i1 %241, label %245, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds i64, i64* %236, i64 1
  %244 = ptrtoint i64* %243 to i64
  br label %245

245:                                              ; preds = %242, %238, %234
  %246 = phi i64 [ %244, %242 ], [ %235, %234 ], [ %235, %238 ]
  %247 = inttoptr i64 %246 to i64*
  %248 = icmp eq i64* %236, %247
  br i1 %248, label %260, label %249

249:                                              ; preds = %245
  %250 = sub i64 %211, %246
  %251 = ashr exact i64 %250, 3
  %252 = icmp eq i64 %250, 0
  br i1 %252, label %257, label %253

253:                                              ; preds = %249
  %254 = bitcast i64* %236 to i8*
  %255 = inttoptr i64 %246 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %254, i8* align 8 %255, i64 %250, i1 false) #19
  %256 = load i64*, i64** %206, align 8
  br label %257

257:                                              ; preds = %253, %249
  %258 = phi i64* [ %256, %253 ], [ %207, %249 ]
  %259 = getelementptr inbounds i64, i64* %236, i64 %251
  store i64* %259, i64** %209, align 8
  br label %260

260:                                              ; preds = %245, %257
  %261 = phi i64* [ %215, %245 ], [ %259, %257 ]
  %262 = phi i64* [ %207, %245 ], [ %258, %257 ]
  %263 = icmp eq i64* %262, %261
  br i1 %263, label %264, label %721

264:                                              ; preds = %260
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 -86, i64 24, i1 false)
  %265 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %265, i64 %178
  %267 = bitcast %"class.std::__1::basic_string"* %266 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %267, i64 0, i32 1, i32 1
  %269 = load i8, i8* %268, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %273, label %271

271:                                              ; preds = %264
  %272 = bitcast %"class.std::__1::basic_string"* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* align 8 %272, i64 24, i1 false) #19
  br label %443

273:                                              ; preds = %264
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i16*, i16** %274, align 8
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %265, i64 %178, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %277 = load i64, i64* %276, align 8
  %278 = icmp ult i64 %277, 11
  br i1 %278, label %279, label %281

279:                                              ; preds = %273
  %280 = trunc i64 %277 to i8
  store i8 %280, i8* %136, align 1
  br label %295

281:                                              ; preds = %273
  %282 = icmp ugt i64 %277, 9223372036854775791
  br i1 %282, label %283, label %285

283:                                              ; preds = %281
  %284 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %284) #21
  unreachable

285:                                              ; preds = %281
  %286 = add nuw nsw i64 %277, 8
  %287 = and i64 %286, -8
  %288 = icmp slt i64 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %285
  call void @abort() #21
  unreachable

290:                                              ; preds = %285
  %291 = shl i64 %287, 1
  %292 = call i8* @_Znwm(i64 %291) #20
  %293 = bitcast i8* %292 to i16*
  store i8* %292, i8** %133, align 8
  %294 = or i64 %287, -9223372036854775808
  store i64 %294, i64* %131, align 8
  store i64 %277, i64* %130, align 8
  br label %295

295:                                              ; preds = %290, %279
  %296 = phi i16* [ %134, %279 ], [ %293, %290 ]
  %297 = add nuw nsw i64 %277, 1
  %298 = add i64 %277, 1
  %299 = icmp ult i64 %298, 16
  br i1 %299, label %390, label %300

300:                                              ; preds = %295
  %301 = getelementptr i16, i16* %296, i64 1
  %302 = getelementptr i16, i16* %301, i64 %277
  %303 = getelementptr i16, i16* %275, i64 1
  %304 = getelementptr i16, i16* %303, i64 %277
  %305 = icmp ult i16* %296, %304
  %306 = icmp ult i16* %275, %302
  %307 = and i1 %305, %306
  br i1 %307, label %390, label %308

308:                                              ; preds = %300
  %309 = and i64 %298, -16
  %310 = sub i64 %297, %309
  %311 = getelementptr i16, i16* %275, i64 %309
  %312 = getelementptr i16, i16* %296, i64 %309
  %313 = add i64 %309, -16
  %314 = lshr exact i64 %313, 4
  %315 = add nuw nsw i64 %314, 1
  %316 = and i64 %315, 3
  %317 = icmp ult i64 %313, 48
  br i1 %317, label %369, label %318

318:                                              ; preds = %308
  %319 = sub nsw i64 %315, %316
  br label %320

320:                                              ; preds = %320, %318
  %321 = phi i64 [ 0, %318 ], [ %366, %320 ]
  %322 = phi i64 [ %319, %318 ], [ %367, %320 ]
  %323 = getelementptr i16, i16* %275, i64 %321
  %324 = getelementptr i16, i16* %296, i64 %321
  %325 = bitcast i16* %323 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !47
  %327 = getelementptr i16, i16* %323, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !47
  %330 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !50, !noalias !47
  %331 = getelementptr i16, i16* %324, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !50, !noalias !47
  %333 = or i64 %321, 16
  %334 = getelementptr i16, i16* %275, i64 %333
  %335 = getelementptr i16, i16* %296, i64 %333
  %336 = bitcast i16* %334 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !alias.scope !47
  %338 = getelementptr i16, i16* %334, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !47
  %341 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %337, <8 x i16>* %341, align 2, !alias.scope !50, !noalias !47
  %342 = getelementptr i16, i16* %335, i64 8
  %343 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %343, align 2, !alias.scope !50, !noalias !47
  %344 = or i64 %321, 32
  %345 = getelementptr i16, i16* %275, i64 %344
  %346 = getelementptr i16, i16* %296, i64 %344
  %347 = bitcast i16* %345 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !47
  %349 = getelementptr i16, i16* %345, i64 8
  %350 = bitcast i16* %349 to <8 x i16>*
  %351 = load <8 x i16>, <8 x i16>* %350, align 2, !alias.scope !47
  %352 = bitcast i16* %346 to <8 x i16>*
  store <8 x i16> %348, <8 x i16>* %352, align 2, !alias.scope !50, !noalias !47
  %353 = getelementptr i16, i16* %346, i64 8
  %354 = bitcast i16* %353 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %354, align 2, !alias.scope !50, !noalias !47
  %355 = or i64 %321, 48
  %356 = getelementptr i16, i16* %275, i64 %355
  %357 = getelementptr i16, i16* %296, i64 %355
  %358 = bitcast i16* %356 to <8 x i16>*
  %359 = load <8 x i16>, <8 x i16>* %358, align 2, !alias.scope !47
  %360 = getelementptr i16, i16* %356, i64 8
  %361 = bitcast i16* %360 to <8 x i16>*
  %362 = load <8 x i16>, <8 x i16>* %361, align 2, !alias.scope !47
  %363 = bitcast i16* %357 to <8 x i16>*
  store <8 x i16> %359, <8 x i16>* %363, align 2, !alias.scope !50, !noalias !47
  %364 = getelementptr i16, i16* %357, i64 8
  %365 = bitcast i16* %364 to <8 x i16>*
  store <8 x i16> %362, <8 x i16>* %365, align 2, !alias.scope !50, !noalias !47
  %366 = add i64 %321, 64
  %367 = add i64 %322, -4
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %369, label %320, !llvm.loop !52

369:                                              ; preds = %320, %308
  %370 = phi i64 [ 0, %308 ], [ %366, %320 ]
  %371 = icmp eq i64 %316, 0
  br i1 %371, label %388, label %372

372:                                              ; preds = %369, %372
  %373 = phi i64 [ %385, %372 ], [ %370, %369 ]
  %374 = phi i64 [ %386, %372 ], [ %316, %369 ]
  %375 = getelementptr i16, i16* %275, i64 %373
  %376 = getelementptr i16, i16* %296, i64 %373
  %377 = bitcast i16* %375 to <8 x i16>*
  %378 = load <8 x i16>, <8 x i16>* %377, align 2, !alias.scope !47
  %379 = getelementptr i16, i16* %375, i64 8
  %380 = bitcast i16* %379 to <8 x i16>*
  %381 = load <8 x i16>, <8 x i16>* %380, align 2, !alias.scope !47
  %382 = bitcast i16* %376 to <8 x i16>*
  store <8 x i16> %378, <8 x i16>* %382, align 2, !alias.scope !50, !noalias !47
  %383 = getelementptr i16, i16* %376, i64 8
  %384 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %381, <8 x i16>* %384, align 2, !alias.scope !50, !noalias !47
  %385 = add i64 %373, 16
  %386 = add i64 %374, -1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %372, !llvm.loop !53

388:                                              ; preds = %372, %369
  %389 = icmp eq i64 %298, %309
  br i1 %389, label %443, label %390

390:                                              ; preds = %388, %300, %295
  %391 = phi i64 [ %297, %300 ], [ %297, %295 ], [ %310, %388 ]
  %392 = phi i16* [ %275, %300 ], [ %275, %295 ], [ %311, %388 ]
  %393 = phi i16* [ %296, %300 ], [ %296, %295 ], [ %312, %388 ]
  %394 = add i64 %391, -1
  %395 = and i64 %391, 7
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %408, label %397

397:                                              ; preds = %390, %397
  %398 = phi i64 [ %403, %397 ], [ %391, %390 ]
  %399 = phi i16* [ %405, %397 ], [ %392, %390 ]
  %400 = phi i16* [ %404, %397 ], [ %393, %390 ]
  %401 = phi i64 [ %406, %397 ], [ %395, %390 ]
  %402 = load i16, i16* %399, align 2
  store i16 %402, i16* %400, align 2
  %403 = add i64 %398, -1
  %404 = getelementptr inbounds i16, i16* %400, i64 1
  %405 = getelementptr inbounds i16, i16* %399, i64 1
  %406 = add i64 %401, -1
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %408, label %397, !llvm.loop !54

408:                                              ; preds = %397, %390
  %409 = phi i64 [ %391, %390 ], [ %403, %397 ]
  %410 = phi i16* [ %392, %390 ], [ %405, %397 ]
  %411 = phi i16* [ %393, %390 ], [ %404, %397 ]
  %412 = icmp ult i64 %394, 7
  br i1 %412, label %443, label %413

413:                                              ; preds = %408, %413
  %414 = phi i64 [ %439, %413 ], [ %409, %408 ]
  %415 = phi i16* [ %441, %413 ], [ %410, %408 ]
  %416 = phi i16* [ %440, %413 ], [ %411, %408 ]
  %417 = load i16, i16* %415, align 2
  store i16 %417, i16* %416, align 2
  %418 = getelementptr inbounds i16, i16* %416, i64 1
  %419 = getelementptr inbounds i16, i16* %415, i64 1
  %420 = load i16, i16* %419, align 2
  store i16 %420, i16* %418, align 2
  %421 = getelementptr inbounds i16, i16* %416, i64 2
  %422 = getelementptr inbounds i16, i16* %415, i64 2
  %423 = load i16, i16* %422, align 2
  store i16 %423, i16* %421, align 2
  %424 = getelementptr inbounds i16, i16* %416, i64 3
  %425 = getelementptr inbounds i16, i16* %415, i64 3
  %426 = load i16, i16* %425, align 2
  store i16 %426, i16* %424, align 2
  %427 = getelementptr inbounds i16, i16* %416, i64 4
  %428 = getelementptr inbounds i16, i16* %415, i64 4
  %429 = load i16, i16* %428, align 2
  store i16 %429, i16* %427, align 2
  %430 = getelementptr inbounds i16, i16* %416, i64 5
  %431 = getelementptr inbounds i16, i16* %415, i64 5
  %432 = load i16, i16* %431, align 2
  store i16 %432, i16* %430, align 2
  %433 = getelementptr inbounds i16, i16* %416, i64 6
  %434 = getelementptr inbounds i16, i16* %415, i64 6
  %435 = load i16, i16* %434, align 2
  store i16 %435, i16* %433, align 2
  %436 = getelementptr inbounds i16, i16* %416, i64 7
  %437 = getelementptr inbounds i16, i16* %415, i64 7
  %438 = load i16, i16* %437, align 2
  store i16 %438, i16* %436, align 2
  %439 = add i64 %414, -8
  %440 = getelementptr inbounds i16, i16* %416, i64 8
  %441 = getelementptr inbounds i16, i16* %415, i64 8
  %442 = icmp eq i64 %439, 0
  br i1 %442, label %443, label %413, !llvm.loop !55

443:                                              ; preds = %408, %413, %388, %271
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #19
  call void @_Z21Char16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEE(%"class.base::internal::flat_tree.522"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #19
  %444 = load i16*, i16** %138, align 8
  %445 = load i16*, i16** %139, align 8
  %446 = icmp eq i16* %444, %445
  br i1 %446, label %449, label %586

447:                                              ; preds = %718
  %448 = load i16*, i16** %138, align 8
  br label %449

449:                                              ; preds = %447, %443
  %450 = phi i16* [ %448, %447 ], [ %444, %443 ]
  %451 = icmp eq i16* %450, null
  br i1 %451, label %455, label %452

452:                                              ; preds = %449
  %453 = ptrtoint i16* %450 to i64
  store i64 %453, i64* %147, align 8
  %454 = bitcast i16* %450 to i8*
  call void @_ZdlPv(i8* %454) #20
  br label %455

455:                                              ; preds = %449, %452
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #19
  %456 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %204, i64 1, i32 0
  %457 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %456, align 8
  %458 = icmp eq %"class.std::__1::__tree_node_base"* %457, null
  br i1 %458, label %459, label %467

459:                                              ; preds = %455
  %460 = bitcast %"class.std::__1::__tree_end_node"* %204 to %"class.std::__1::__tree_node_base"*
  %461 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %204, i64 2
  %462 = bitcast %"class.std::__1::__tree_end_node"* %461 to %"class.std::__1::__tree_end_node"**
  %463 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %462, align 8
  %464 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %463, i64 0, i32 0
  %465 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %464, align 8
  %466 = icmp eq %"class.std::__1::__tree_node_base"* %465, %460
  br i1 %466, label %483, label %474

467:                                              ; preds = %455, %467
  %468 = phi %"class.std::__1::__tree_node_base"* [ %470, %467 ], [ %457, %455 ]
  %469 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %468, i64 0, i32 0, i32 0
  %470 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %469, align 8
  %471 = icmp eq %"class.std::__1::__tree_node_base"* %470, null
  br i1 %471, label %472, label %467

472:                                              ; preds = %467
  %473 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %468, i64 0, i32 0
  br label %483

474:                                              ; preds = %459, %474
  %475 = phi %"class.std::__1::__tree_end_node"** [ %478, %474 ], [ %462, %459 ]
  %476 = bitcast %"class.std::__1::__tree_end_node"** %475 to %"class.std::__1::__tree_node_base"**
  %477 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %476, align 8
  %478 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %477, i64 0, i32 2
  %479 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %478, align 8
  %480 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %479, i64 0, i32 0
  %481 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %480, align 8
  %482 = icmp eq %"class.std::__1::__tree_node_base"* %481, %477
  br i1 %482, label %483, label %474

483:                                              ; preds = %474, %472, %459
  %484 = phi %"class.std::__1::__tree_end_node"* [ %473, %472 ], [ %463, %459 ], [ %479, %474 ]
  %485 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %486 = icmp eq %"class.std::__1::__tree_end_node"* %485, %204
  br i1 %486, label %487, label %489

487:                                              ; preds = %483
  %488 = ptrtoint %"class.std::__1::__tree_end_node"* %484 to i64
  store i64 %488, i64* %149, align 8
  br label %489

489:                                              ; preds = %487, %483
  %490 = load i64, i64* %150, align 8
  %491 = add i64 %490, -1
  store i64 %491, i64* %150, align 8
  %492 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %493 = bitcast %"class.std::__1::__tree_end_node"* %204 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %492, %"class.std::__1::__tree_node_base"* %493) #19
  %494 = load i64*, i64** %206, align 8
  %495 = icmp eq i64* %494, null
  br i1 %495, label %499, label %496

496:                                              ; preds = %489
  %497 = ptrtoint i64* %494 to i64
  store i64 %497, i64* %210, align 8
  %498 = bitcast i64* %494 to i8*
  call void @_ZdlPv(i8* %498) #20
  br label %499

499:                                              ; preds = %489, %496
  %500 = bitcast %"class.std::__1::__tree_end_node"* %204 to i8*
  call void @_ZdlPv(i8* %500) #20
  %501 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.16"* %153, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #19
  %502 = icmp eq %"class.std::__1::__tree_end_node"* %501, %154
  br i1 %502, label %552, label %503

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %501, i64 1, i32 0
  %505 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %504, align 8
  %506 = icmp eq %"class.std::__1::__tree_node_base"* %505, null
  br i1 %506, label %507, label %515

507:                                              ; preds = %503
  %508 = bitcast %"class.std::__1::__tree_end_node"* %501 to %"class.std::__1::__tree_node_base"*
  %509 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %501, i64 2
  %510 = bitcast %"class.std::__1::__tree_end_node"* %509 to %"class.std::__1::__tree_end_node"**
  %511 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %510, align 8
  %512 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %511, i64 0, i32 0
  %513 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %512, align 8
  %514 = icmp eq %"class.std::__1::__tree_node_base"* %513, %508
  br i1 %514, label %531, label %522

515:                                              ; preds = %503, %515
  %516 = phi %"class.std::__1::__tree_node_base"* [ %518, %515 ], [ %505, %503 ]
  %517 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %516, i64 0, i32 0, i32 0
  %518 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %517, align 8
  %519 = icmp eq %"class.std::__1::__tree_node_base"* %518, null
  br i1 %519, label %520, label %515

520:                                              ; preds = %515
  %521 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %516, i64 0, i32 0
  br label %531

522:                                              ; preds = %507, %522
  %523 = phi %"class.std::__1::__tree_end_node"** [ %526, %522 ], [ %510, %507 ]
  %524 = bitcast %"class.std::__1::__tree_end_node"** %523 to %"class.std::__1::__tree_node_base"**
  %525 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %524, align 8
  %526 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %525, i64 0, i32 2
  %527 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %526, align 8
  %528 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %527, i64 0, i32 0
  %529 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %528, align 8
  %530 = icmp eq %"class.std::__1::__tree_node_base"* %529, %525
  br i1 %530, label %531, label %522

531:                                              ; preds = %522, %520, %507
  %532 = phi %"class.std::__1::__tree_end_node"* [ %521, %520 ], [ %511, %507 ], [ %527, %522 ]
  %533 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %155, align 8
  %534 = icmp eq %"class.std::__1::__tree_end_node"* %533, %501
  br i1 %534, label %535, label %537

535:                                              ; preds = %531
  %536 = ptrtoint %"class.std::__1::__tree_end_node"* %532 to i64
  store i64 %536, i64* %156, align 8
  br label %537

537:                                              ; preds = %535, %531
  %538 = load i64, i64* %157, align 8
  %539 = add i64 %538, -1
  store i64 %539, i64* %157, align 8
  %540 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  %541 = bitcast %"class.std::__1::__tree_end_node"* %501 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %540, %"class.std::__1::__tree_node_base"* %541) #19
  %542 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %501, i64 4
  %543 = bitcast %"class.std::__1::__tree_end_node"* %542 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %544 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %543, i64 0, i32 1, i32 1
  %545 = load i8, i8* %544, align 1
  %546 = icmp slt i8 %545, 0
  br i1 %546, label %547, label %550

547:                                              ; preds = %537
  %548 = bitcast %"class.std::__1::__tree_end_node"* %542 to i8**
  %549 = load i8*, i8** %548, align 8
  call void @_ZdlPv(i8* %549) #20
  br label %550

550:                                              ; preds = %537, %547
  %551 = bitcast %"class.std::__1::__tree_end_node"* %501 to i8*
  call void @_ZdlPv(i8* %551) #20
  br label %552

552:                                              ; preds = %499, %550
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %159)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 15, i1 false)
  %553 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %554 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %553, i64 %178
  %555 = bitcast %"class.std::__1::basic_string"* %554 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %555, i64 0, i32 1, i32 1
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  %559 = bitcast %"class.std::__1::basic_string"* %554 to i8**
  br i1 %558, label %560, label %562

560:                                              ; preds = %552
  %561 = load i8*, i8** %559, align 8
  call void @_ZdlPv(i8* %561) #20
  br label %562

562:                                              ; preds = %552, %560
  store i8* null, i8** %559, align 8
  %563 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %553, i64 %178, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %564 = bitcast i64* %563 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %564, i8* nonnull align 8 %159, i64 15, i1 false)
  %565 = bitcast %"class.std::__1::basic_string"* %554 to i8*
  %566 = getelementptr inbounds i8, i8* %565, i64 23
  store i8 0, i8* %566, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %159)
  call void @_ZN4base14circular_dequeImE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %161, i64 1) #19
  %567 = load i64, i64* %163, align 8
  %568 = call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %162, i64 %567) #19
  store i64 %178, i64* %568, align 8
  %569 = load i64, i64* %163, align 8
  %570 = load i64, i64* %164, align 8
  %571 = add i64 %570, -1
  %572 = icmp eq i64 %569, %571
  br i1 %572, label %573, label %574

573:                                              ; preds = %562
  store i64 0, i64* %163, align 8
  br label %577

574:                                              ; preds = %562
  %575 = add i64 %569, 1
  store i64 %575, i64* %163, align 8
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %577, label %578

577:                                              ; preds = %574, %573
  br label %578

578:                                              ; preds = %574, %577
  %579 = phi i64 [ %571, %577 ], [ %569, %574 ]
  %580 = call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %162, i64 %579) #19
  %581 = load i8, i8* %136, align 1
  %582 = icmp slt i8 %581, 0
  br i1 %582, label %583, label %585

583:                                              ; preds = %578
  %584 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %584) #20
  br label %585

585:                                              ; preds = %578, %583
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #19
  br label %721

586:                                              ; preds = %443, %718
  %587 = phi i16* [ %719, %718 ], [ %444, %443 ]
  %588 = load i16, i16* %587, align 2
  %589 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %142, align 8
  %590 = icmp eq %"class.std::__1::__tree_node.581"* %589, null
  br i1 %590, label %612, label %591

591:                                              ; preds = %586, %591
  %592 = phi %"class.std::__1::__tree_end_node"* [ %602, %591 ], [ %141, %586 ]
  %593 = phi %"class.std::__1::__tree_node.581"* [ %603, %591 ], [ %589, %586 ]
  %594 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %593, i64 0, i32 1, i32 0, i32 0
  %595 = load i16, i16* %594, align 2
  %596 = icmp ult i16 %595, %588
  %597 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %593, i64 0, i32 0, i32 1
  %598 = bitcast %"class.std::__1::__tree_node_base"** %597 to %"class.std::__1::__tree_node.581"**
  %599 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %593, i64 0, i32 0, i32 0
  %600 = bitcast %"class.std::__1::__tree_node.581"* %593 to %"class.std::__1::__tree_node.581"**
  %601 = select i1 %596, %"class.std::__1::__tree_node.581"** %598, %"class.std::__1::__tree_node.581"** %600
  %602 = select i1 %596, %"class.std::__1::__tree_end_node"* %592, %"class.std::__1::__tree_end_node"* %599
  %603 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %601, align 8
  %604 = icmp eq %"class.std::__1::__tree_node.581"* %603, null
  br i1 %604, label %605, label %591

605:                                              ; preds = %591
  %606 = icmp eq %"class.std::__1::__tree_end_node"* %602, %141
  br i1 %606, label %612, label %607

607:                                              ; preds = %605
  %608 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %602, i64 4
  %609 = bitcast %"class.std::__1::__tree_end_node"* %608 to i16*
  %610 = load i16, i16* %609, align 2
  %611 = icmp ult i16 %588, %610
  br i1 %611, label %612, label %613

612:                                              ; preds = %607, %605, %586
  br label %613

613:                                              ; preds = %607, %612
  %614 = phi %"class.std::__1::__tree_end_node"* [ %141, %612 ], [ %602, %607 ]
  %615 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %614, i64 5
  %616 = bitcast %"class.std::__1::__tree_end_node"* %615 to i64**
  %617 = load i64*, i64** %616, align 8
  %618 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %614, i64 6
  %619 = bitcast %"class.std::__1::__tree_end_node"* %618 to i64**
  %620 = bitcast %"class.std::__1::__tree_end_node"* %618 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = ptrtoint i64* %617 to i64
  %623 = sub i64 %621, %622
  %624 = icmp eq i64 %623, 0
  %625 = inttoptr i64 %621 to i64*
  br i1 %624, label %643, label %626

626:                                              ; preds = %613
  %627 = ashr exact i64 %623, 3
  br label %628

628:                                              ; preds = %628, %626
  %629 = phi i64* [ %617, %626 ], [ %639, %628 ]
  %630 = phi i64 [ %627, %626 ], [ %638, %628 ]
  %631 = lshr i64 %630, 1
  %632 = getelementptr inbounds i64, i64* %629, i64 %631
  %633 = load i64, i64* %632, align 8
  %634 = icmp ult i64 %633, %178
  %635 = getelementptr inbounds i64, i64* %632, i64 1
  %636 = xor i64 %631, -1
  %637 = add i64 %630, %636
  %638 = select i1 %634, i64 %637, i64 %631
  %639 = select i1 %634, i64* %635, i64* %629
  %640 = icmp eq i64 %638, 0
  br i1 %640, label %641, label %628

641:                                              ; preds = %628
  %642 = ptrtoint i64* %639 to i64
  br label %643

643:                                              ; preds = %641, %613
  %644 = phi i64 [ %642, %641 ], [ %622, %613 ]
  %645 = phi i64* [ %639, %641 ], [ %617, %613 ]
  %646 = icmp eq i64* %645, %625
  br i1 %646, label %653, label %647

647:                                              ; preds = %643
  %648 = load i64, i64* %645, align 8
  %649 = icmp ult i64 %178, %648
  br i1 %649, label %653, label %650

650:                                              ; preds = %647
  %651 = getelementptr inbounds i64, i64* %645, i64 1
  %652 = ptrtoint i64* %651 to i64
  br label %653

653:                                              ; preds = %650, %647, %643
  %654 = phi i64 [ %652, %650 ], [ %644, %643 ], [ %644, %647 ]
  %655 = inttoptr i64 %654 to i64*
  %656 = icmp eq i64* %645, %655
  br i1 %656, label %668, label %657

657:                                              ; preds = %653
  %658 = sub i64 %621, %654
  %659 = ashr exact i64 %658, 3
  %660 = icmp eq i64 %658, 0
  br i1 %660, label %665, label %661

661:                                              ; preds = %657
  %662 = bitcast i64* %645 to i8*
  %663 = inttoptr i64 %654 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %662, i8* align 8 %663, i64 %658, i1 false) #19
  %664 = load i64*, i64** %616, align 8
  br label %665

665:                                              ; preds = %661, %657
  %666 = phi i64* [ %664, %661 ], [ %617, %657 ]
  %667 = getelementptr inbounds i64, i64* %645, i64 %659
  store i64* %667, i64** %619, align 8
  br label %668

668:                                              ; preds = %653, %665
  %669 = phi i64* [ %625, %653 ], [ %667, %665 ]
  %670 = phi i64* [ %617, %653 ], [ %666, %665 ]
  %671 = icmp eq i64* %670, %669
  br i1 %671, label %672, label %718

672:                                              ; preds = %668
  %673 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %614, i64 1, i32 0
  %674 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %673, align 8
  %675 = icmp eq %"class.std::__1::__tree_node_base"* %674, null
  br i1 %675, label %676, label %684

676:                                              ; preds = %672
  %677 = bitcast %"class.std::__1::__tree_end_node"* %614 to %"class.std::__1::__tree_node_base"*
  %678 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %614, i64 2
  %679 = bitcast %"class.std::__1::__tree_end_node"* %678 to %"class.std::__1::__tree_end_node"**
  %680 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %679, align 8
  %681 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %680, i64 0, i32 0
  %682 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %681, align 8
  %683 = icmp eq %"class.std::__1::__tree_node_base"* %682, %677
  br i1 %683, label %700, label %691

684:                                              ; preds = %672, %684
  %685 = phi %"class.std::__1::__tree_node_base"* [ %687, %684 ], [ %674, %672 ]
  %686 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %685, i64 0, i32 0, i32 0
  %687 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %686, align 8
  %688 = icmp eq %"class.std::__1::__tree_node_base"* %687, null
  br i1 %688, label %689, label %684

689:                                              ; preds = %684
  %690 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %685, i64 0, i32 0
  br label %700

691:                                              ; preds = %676, %691
  %692 = phi %"class.std::__1::__tree_end_node"** [ %695, %691 ], [ %679, %676 ]
  %693 = bitcast %"class.std::__1::__tree_end_node"** %692 to %"class.std::__1::__tree_node_base"**
  %694 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %693, align 8
  %695 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %694, i64 0, i32 2
  %696 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %695, align 8
  %697 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %696, i64 0, i32 0
  %698 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %697, align 8
  %699 = icmp eq %"class.std::__1::__tree_node_base"* %698, %694
  br i1 %699, label %700, label %691

700:                                              ; preds = %691, %689, %676
  %701 = phi %"class.std::__1::__tree_end_node"* [ %690, %689 ], [ %680, %676 ], [ %696, %691 ]
  %702 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %703 = icmp eq %"class.std::__1::__tree_end_node"* %702, %614
  br i1 %703, label %704, label %706

704:                                              ; preds = %700
  %705 = ptrtoint %"class.std::__1::__tree_end_node"* %701 to i64
  store i64 %705, i64* %144, align 8
  br label %706

706:                                              ; preds = %704, %700
  %707 = load i64, i64* %145, align 8
  %708 = add i64 %707, -1
  store i64 %708, i64* %145, align 8
  %709 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %710 = bitcast %"class.std::__1::__tree_end_node"* %614 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %709, %"class.std::__1::__tree_node_base"* %710) #19
  %711 = load i64*, i64** %616, align 8
  %712 = icmp eq i64* %711, null
  br i1 %712, label %716, label %713

713:                                              ; preds = %706
  %714 = ptrtoint i64* %711 to i64
  store i64 %714, i64* %620, align 8
  %715 = bitcast i64* %711 to i8*
  call void @_ZdlPv(i8* %715) #20
  br label %716

716:                                              ; preds = %706, %713
  %717 = bitcast %"class.std::__1::__tree_end_node"* %614 to i8*
  call void @_ZdlPv(i8* %717) #20
  br label %718

718:                                              ; preds = %716, %668
  %719 = getelementptr inbounds i16, i16* %587, i64 1
  %720 = icmp eq i16* %719, %445
  br i1 %720, label %447, label %586

721:                                              ; preds = %260, %585
  %722 = getelementptr inbounds i64, i64* %177, i64 1
  %723 = icmp eq i64* %722, %123
  br i1 %723, label %166, label %176
}

declare void @_ZN13RowWordStartsC1Ev(%struct.RowWordStarts*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData18AddRowWordsToIndexERKN7history6URLRowEP13RowWordStarts(%class.URLIndexPrivateData*, %"class.history::URLRow"* dereferenceable(184), %struct.RowWordStarts*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less.594", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::internal::flat_tree.542", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::internal::flat_tree.542", align 8
  %9 = alloca %"class.base::internal::flat_tree.542", align 8
  %10 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #19
  call void @_ZN9bookmarks21CleanUpUrlForMatchingERK4GURLPNSt3__16vectorIN4base14OffsetAdjuster10AdjustmentENS3_9allocatorIS7_EEEE(%"class.std::__1::basic_string"* nonnull sret %5, %class.GURL* dereferenceable(120) %12, %"class.std::__1::vector.541"* null) #19
  %14 = bitcast %"class.base::internal::flat_tree.542"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #19
  %15 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %6, i64 0, i32 0, i32 0, i32 1
  %17 = icmp eq %struct.RowWordStarts* %2, null
  %18 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %2, i64 0, i32 0
  %19 = bitcast %"class.base::internal::flat_tree.542"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_Z23String16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEPNS_6vectorImNS3_ImEEEE(%"class.base::internal::flat_tree.542"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::vector.420"* %18) #19
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #19
  %21 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  call void @_ZN9bookmarks23CleanUpTitleForMatchingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* dereferenceable(24) %21) #19
  %22 = bitcast %"class.base::internal::flat_tree.542"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #19
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %8, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %8, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %2, i64 0, i32 1
  %26 = select i1 %17, %"class.std::__1::vector.420"* null, %"class.std::__1::vector.420"* %25
  %27 = bitcast %"class.base::internal::flat_tree.542"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  call void @_Z23String16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEPNS_6vectorImNS3_ImEEEE(%"class.base::internal::flat_tree.542"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.420"* %26) #19
  %28 = bitcast %"class.base::internal::flat_tree.542"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #19, !alias.scope !56
  %29 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8, !noalias !56
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8, !noalias !56
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8, !noalias !56
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8, !noalias !56
  %33 = getelementptr inbounds %"struct.std::__1::__less.594", %"struct.std::__1::__less.594"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #19, !noalias !56
  %34 = call { %"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"* } @_ZNSt3__111__set_unionIRNS_6__lessINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_11__wrap_iterIPKS7_EESD_NS_15insert_iteratorIN4base8internal9flat_treeIS7_NSF_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEEEEEEET2_T0_SR_T1_SS_SQ_T_(%"class.std::__1::basic_string"* %29, %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %31, %"class.std::__1::basic_string"* %32, %"class.base::internal::flat_tree.542"* nonnull %9, %"class.std::__1::basic_string"* null, %"struct.std::__1::__less.594"* nonnull dereferenceable(1) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #19, !noalias !56
  %35 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %9, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  %37 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %9, i64 0, i32 0, i32 0, i32 1
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %36, %38
  br i1 %39, label %42, label %139

40:                                               ; preds = %139
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  br label %42

42:                                               ; preds = %40, %3
  %43 = phi %"class.std::__1::basic_string"* [ %41, %40 ], [ %36, %3 ]
  %44 = icmp eq %"class.std::__1::basic_string"* %43, null
  br i1 %44, label %66, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %48, label %64, label %49

49:                                               ; preds = %45, %59
  %50 = phi %"class.std::__1::basic_string"* [ %51, %59 ], [ %47, %45 ]
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::basic_string"* %51 to i8**
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #20
  br label %59

59:                                               ; preds = %56, %49
  %60 = icmp eq %"class.std::__1::basic_string"* %51, %43
  br i1 %60, label %61, label %49

61:                                               ; preds = %59
  %62 = bitcast %"class.base::internal::flat_tree.542"* %9 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %45
  %65 = phi i8* [ %63, %61 ], [ %46, %45 ]
  store %"class.std::__1::basic_string"* %43, %"class.std::__1::basic_string"** %37, align 8
  call void @_ZdlPv(i8* %65) #20
  br label %66

66:                                               ; preds = %42, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #19
  %67 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2
  %68 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node"**
  %71 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %70, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %68, %"class.std::__1::__tree_node"* %71) #19
  %72 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %67, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %74, align 8
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %76 = icmp eq %"class.std::__1::basic_string"* %75, null
  br i1 %76, label %98, label %77

77:                                               ; preds = %66
  %78 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %79 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %80 = icmp eq %"class.std::__1::basic_string"* %79, %75
  br i1 %80, label %96, label %81

81:                                               ; preds = %77, %91
  %82 = phi %"class.std::__1::basic_string"* [ %83, %91 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 -1
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %81
  %89 = bitcast %"class.std::__1::basic_string"* %83 to i8**
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #20
  br label %91

91:                                               ; preds = %88, %81
  %92 = icmp eq %"class.std::__1::basic_string"* %83, %75
  br i1 %92, label %93, label %81

93:                                               ; preds = %91
  %94 = bitcast %"class.base::internal::flat_tree.542"* %8 to i8**
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %93, %77
  %97 = phi i8* [ %95, %93 ], [ %78, %77 ]
  store %"class.std::__1::basic_string"* %75, %"class.std::__1::basic_string"** %24, align 8
  call void @_ZdlPv(i8* %97) #20
  br label %98

98:                                               ; preds = %66, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #19
  %99 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #20
  br label %106

106:                                              ; preds = %98, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #19
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %108 = icmp eq %"class.std::__1::basic_string"* %107, null
  br i1 %108, label %130, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.std::__1::basic_string"* %107 to i8*
  %111 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %112 = icmp eq %"class.std::__1::basic_string"* %111, %107
  br i1 %112, label %128, label %113

113:                                              ; preds = %109, %123
  %114 = phi %"class.std::__1::basic_string"* [ %115, %123 ], [ %111, %109 ]
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 -1
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %113
  %121 = bitcast %"class.std::__1::basic_string"* %115 to i8**
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #20
  br label %123

123:                                              ; preds = %120, %113
  %124 = icmp eq %"class.std::__1::basic_string"* %115, %107
  br i1 %124, label %125, label %113

125:                                              ; preds = %123
  %126 = bitcast %"class.base::internal::flat_tree.542"* %6 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %109
  %129 = phi i8* [ %127, %125 ], [ %110, %109 ]
  store %"class.std::__1::basic_string"* %107, %"class.std::__1::basic_string"** %16, align 8
  call void @_ZdlPv(i8* %129) #20
  br label %130

130:                                              ; preds = %106, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #19
  %131 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %131, i64 0, i32 1, i32 1
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #20
  br label %138

138:                                              ; preds = %130, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #19
  ret void

139:                                              ; preds = %3, %139
  %140 = phi %"class.std::__1::basic_string"* [ %141, %139 ], [ %36, %3 ]
  call void @_ZN19URLIndexPrivateData14AddWordToIndexERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEl(%class.URLIndexPrivateData* %0, %"class.std::__1::basic_string"* dereferenceable(24) %140, i64 %11)
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 1
  %142 = icmp eq %"class.std::__1::basic_string"* %141, %38
  br i1 %142, label %40, label %139
}

declare dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSEOS_(%struct.RowWordStarts*, %struct.RowWordStarts* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13RowWordStartsD1Ev(%struct.RowWordStarts*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData18RemoveRowFromIndexERKN7history6URLRowE(%class.URLIndexPrivateData*, %"class.history::URLRow"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  tail call void @_ZN19URLIndexPrivateData23RemoveRowWordsFromIndexERKN7history6URLRowE(%class.URLIndexPrivateData* %0, %"class.history::URLRow"* dereferenceable(184) %1)
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  %5 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  %7 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0
  %8 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__hash_table"* %7, i64* nonnull dereferenceable(8) %3) #19
  %9 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %10 = call i64 @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree.75"* %9, i64* nonnull dereferenceable(8) %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData9DeleteURLERK4GURL(%class.URLIndexPrivateData*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 5
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %class.GURL*
  %10 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %9, %class.GURL* dereferenceable(120) %1) #19
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = ptrtoint %"struct.std::__1::__hash_node_base"* %5 to i64
  br label %17

13:                                               ; preds = %17
  %14 = inttoptr i64 %20 to %"struct.std::__1::__hash_node"*
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %14, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %16 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %15, %class.GURL* dereferenceable(120) %1) #19
  br i1 %16, label %22, label %17

17:                                               ; preds = %11, %13
  %18 = phi i64 [ %20, %13 ], [ %12, %11 ]
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %44, label %13

22:                                               ; preds = %13
  %23 = inttoptr i64 %20 to %"struct.std::__1::__hash_node_base"*
  br label %24

24:                                               ; preds = %22, %7
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %5, %7 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 3
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %26 to %"class.history::URLRow"*
  tail call void @_ZN19URLIndexPrivateData23RemoveRowWordsFromIndexERKN7history6URLRowE(%class.URLIndexPrivateData* %0, %"class.history::URLRow"* dereferenceable(184) %27) #19
  %28 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %3, align 8
  %32 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0
  %33 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__hash_table"* %32, i64* nonnull dereferenceable(8) %3) #19
  %34 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %35 = call i64 @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree.75"* %34, i64* nonnull dereferenceable(8) %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  %36 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %36, i64 0, i32 0
  %38 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %39, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %37, %"class.std::__1::__tree_node"* %40) #19
  %41 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %36, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %44

44:                                               ; preds = %17, %2, %24
  %45 = phi i1 [ true, %24 ], [ false, %2 ], [ false, %17 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.URLIndexPrivateData* @_ZN19URLIndexPrivateData15RestoreFromFileERKN4base8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string.107", align 8
  %3 = alloca %"class.in_memory_url_index::InMemoryURLIndexCacheItem", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #19
  %7 = tail call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %0) #19
  br i1 %7, label %8, label %137

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string.107"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #19
  %11 = call zeroext i1 @_ZN4base27ReadFileToStringWithMaxSizeERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEm(%"class.base::FilePath"* dereferenceable(24) %0, %"class.std::__1::basic_string.107"* nonnull %2, i64 50000000) #19
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string.107"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %128

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = call i8* @_Znwm(i64 272) #20
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %16, i64 16
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #19
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %16, i64 32
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 40
  %24 = getelementptr inbounds i8, i8* %16, i64 112
  %25 = getelementptr inbounds i8, i8* %16, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 64, i1 false) #19
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %16, i64 136
  %28 = getelementptr inbounds i8, i8* %16, i64 128
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #19
  %29 = bitcast i8* %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %16, i64 160
  %31 = getelementptr inbounds i8, i8* %16, i64 152
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #19
  %32 = bitcast i8* %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %16, i64 184
  %34 = getelementptr inbounds i8, i8* %16, i64 176
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #19
  %35 = bitcast i8* %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %16, i64 200
  %37 = getelementptr inbounds i8, i8* %16, i64 232
  %38 = bitcast i8* %37 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #19
  store i32 1065353216, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %16, i64 248
  %40 = getelementptr inbounds i8, i8* %16, i64 240
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #19
  %41 = bitcast i8* %40 to i8**
  store i8* %39, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %16, i64 264
  %43 = bitcast i8* %42 to i32*
  store i32 5, i32* %43, align 8
  %44 = ptrtoint i8* %16 to i64
  %45 = atomicrmw add i32* %17, i32 1 monotonic
  %46 = bitcast %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %46) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 88, i1 false)
  call void @_ZN19in_memory_url_index25InMemoryURLIndexCacheItemC2EPN6google8protobuf5ArenaE(%"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3, %"class.google::protobuf::Arena"* null) #19
  %47 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3, i64 0, i32 0
  %48 = bitcast %"class.std::__1::basic_string.107"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %10, align 8
  %53 = load i64, i64* %15, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i8* %52, i8* %9
  %56 = select i1 %51, i64 %53, i64 %54
  %57 = trunc i64 %56 to i32
  %58 = call zeroext i1 @_ZN6google8protobuf11MessageLite14ParseFromArrayEPKvi(%"class.google::protobuf::MessageLite"* nonnull %47, i8* %55, i32 %57) #19
  br i1 %58, label %79, label %59

59:                                               ; preds = %14
  %60 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #19
  br i1 %60, label %61, label %117

61:                                               ; preds = %59
  %62 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %62) #19
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 411, i32 1) #19
  %63 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %64 = bitcast %"class.std::__1::basic_ostringstream"* %63 to %"class.std::__1::basic_ostream"*
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i64 57) #19
  %66 = bitcast %"class.base::FilePath"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.base::FilePath"* %0 to i8*
  %75 = zext i8 %68 to i64
  %76 = select i1 %69, i8* %71, i8* %74
  %77 = select i1 %69, i64 %73, i64 %75
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %65, i8* %76, i64 %77) #19
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %62) #19
  br label %117

79:                                               ; preds = %14
  %80 = bitcast i8* %16 to %class.URLIndexPrivateData*
  %81 = call zeroext i1 @_ZN19URLIndexPrivateData18RestorePrivateDataERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* nonnull %80, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull dereferenceable(88) %3)
  br i1 %81, label %82, label %117

82:                                               ; preds = %79
  %83 = load atomic i64, i64* @_ZZN19URLIndexPrivateData15RestoreFromFileERKN4base8FilePathEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %84 = inttoptr i64 %83 to %"class.base::HistogramBase"*
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %82
  %87 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #19
  %88 = ptrtoint %"class.base::HistogramBase"* %87 to i64
  store atomic i64 %88, i64* @_ZZN19URLIndexPrivateData15RestoreFromFileERKN4base8FilePathEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %89

89:                                               ; preds = %82, %86
  %90 = phi %"class.base::HistogramBase"* [ %84, %82 ], [ %87, %86 ]
  %91 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #19
  %92 = call i64 @_ZN4base9TimeTicks3NowEv() #19
  %93 = sub nsw i64 %92, %6
  %94 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %93, i64* %94, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %90, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #19
  %95 = load atomic i64, i64* @_ZZN19URLIndexPrivateData15RestoreFromFileERKN4base8FilePathEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %96 = inttoptr i64 %95 to %"class.base::HistogramBase"*
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %89
  %99 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #19
  %100 = ptrtoint %"class.base::HistogramBase"* %99 to i64
  store atomic i64 %100, i64* @_ZZN19URLIndexPrivateData15RestoreFromFileERKN4base8FilePathEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %101

101:                                              ; preds = %89, %98
  %102 = phi %"class.base::HistogramBase"* [ %96, %89 ], [ %99, %98 ]
  %103 = getelementptr inbounds i8, i8* %16, i64 192
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %105 to i32
  %107 = bitcast %"class.base::HistogramBase"* %102 to void (%"class.base::HistogramBase"*, i32)***
  %108 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %108, i64 6
  %110 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %109, align 8
  call void %110(%"class.base::HistogramBase"* %102, i32 %106) #19
  %111 = getelementptr inbounds i8, i8* %16, i64 224
  %112 = bitcast i8* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, 0
  %115 = select i1 %114, i64 %44, i64 0
  %116 = select i1 %114, i64 0, i64 %44
  br label %117

117:                                              ; preds = %101, %79, %61, %59
  %118 = phi i64 [ 0, %59 ], [ 0, %61 ], [ %44, %79 ], [ %115, %101 ]
  %119 = phi i64 [ %44, %59 ], [ %44, %61 ], [ 0, %79 ], [ %116, %101 ]
  call void @_ZN19in_memory_url_index25InMemoryURLIndexCacheItemD1Ev(%"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %46) #19
  %120 = inttoptr i64 %118 to %class.URLIndexPrivateData*
  %121 = icmp eq i64 %118, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  call void @_ZN19URLIndexPrivateDataD2Ev(%class.URLIndexPrivateData* nonnull %120) #19
  %127 = inttoptr i64 %118 to i8*
  call void @_ZdlPv(i8* %127) #20
  br label %128

128:                                              ; preds = %12, %126, %122, %117
  %129 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %13, %12 ], [ %48, %126 ], [ %48, %122 ], [ %48, %117 ]
  %130 = phi i64 [ 0, %12 ], [ %119, %126 ], [ %119, %122 ], [ %119, %117 ]
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %135) #20
  br label %136

136:                                              ; preds = %128, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #19
  br label %137

137:                                              ; preds = %1, %136
  %138 = phi i64 [ %130, %136 ], [ 0, %1 ]
  %139 = inttoptr i64 %138 to %class.URLIndexPrivateData*
  ret %class.URLIndexPrivateData* %139
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base27ReadFileToStringWithMaxSizeERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEm(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string.107"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN6google8protobuf11MessageLite14ParseFromArrayEPKvi(%"class.google::protobuf::MessageLite"*, i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData18RestorePrivateDataERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 9
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = tail call i64 @_ZN4base4Time3NowEv() #19
  %7 = load i64, i64* %5, align 8
  %8 = add i64 %6, 86400000000
  %9 = sub i64 %8, %7
  %10 = icmp ugt i64 %9, 691200000000
  br i1 %10, label %34, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 10
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, 5
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 3
  store i32 %18, i32* %21, align 8
  br label %22

22:                                               ; preds = %20, %11
  %23 = tail call zeroext i1 @_ZN19URLIndexPrivateData15RestoreWordListERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* dereferenceable(88) %1)
  br i1 %23, label %24, label %34

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZN19URLIndexPrivateData14RestoreWordMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* dereferenceable(88) %1)
  br i1 %25, label %26, label %34

26:                                               ; preds = %24
  %27 = tail call zeroext i1 @_ZN19URLIndexPrivateData18RestoreCharWordMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* dereferenceable(88) %1)
  br i1 %27, label %28, label %34

28:                                               ; preds = %26
  %29 = tail call zeroext i1 @_ZN19URLIndexPrivateData23RestoreWordIDHistoryMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* dereferenceable(88) %1)
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = tail call zeroext i1 @_ZN19URLIndexPrivateData21RestoreHistoryInfoMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* dereferenceable(88) %1)
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = tail call zeroext i1 @_ZN19URLIndexPrivateData20RestoreWordStartsMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* dereferenceable(88) %1)
  br label %34

34:                                               ; preds = %22, %24, %26, %28, %30, %32, %16, %2
  %35 = phi i1 [ false, %2 ], [ false, %16 ], [ false, %30 ], [ false, %28 ], [ false, %26 ], [ false, %24 ], [ false, %22 ], [ %33, %32 ]
  ret i1 %35
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK19URLIndexPrivateData5EmptyEv(%class.URLIndexPrivateData* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind
declare void @_ZN19in_memory_url_index25InMemoryURLIndexCacheItemD1Ev(%"class.in_memory_url_index::InMemoryURLIndexCacheItem"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.URLIndexPrivateData* @_ZN19URLIndexPrivateData18RebuildFromHistoryEPN7history15HistoryDatabaseERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE(%"class.history::HistoryDatabase"*, %"class.std::__1::set.214"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.history::URLDatabase::URLEnumerator", align 8
  %4 = alloca %"class.history::URLRow", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = icmp eq %"class.history::HistoryDatabase"* %0, null
  br i1 %6, label %101, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #19
  %9 = tail call i8* @_Znwm(i64 272) #20
  %10 = bitcast i8* %9 to %class.URLIndexPrivateData*
  %11 = bitcast i8* %9 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %9, i64 16
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #19
  %14 = bitcast i8* %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 32
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 40
  %18 = getelementptr inbounds i8, i8* %9, i64 112
  %19 = getelementptr inbounds i8, i8* %9, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 64, i1 false) #19
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %9, i64 136
  %22 = getelementptr inbounds i8, i8* %9, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #19
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %9, i64 160
  %25 = getelementptr inbounds i8, i8* %9, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #19
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 184
  %28 = getelementptr inbounds i8, i8* %9, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #19
  %29 = bitcast i8* %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %9, i64 200
  %31 = getelementptr inbounds i8, i8* %9, i64 232
  %32 = bitcast i8* %31 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #19
  store i32 1065353216, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %9, i64 248
  %34 = getelementptr inbounds i8, i8* %9, i64 240
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #19
  %35 = bitcast i8* %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %9, i64 264
  %37 = bitcast i8* %36 to i32*
  store i32 5, i32* %37, align 8
  %38 = ptrtoint i8* %9 to i64
  %39 = atomicrmw add i32* %11, i32 1 monotonic
  %40 = bitcast %"class.history::URLDatabase::URLEnumerator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #19
  %41 = bitcast %"class.history::URLDatabase::URLEnumerator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  call void @_ZN7history11URLDatabase13URLEnumeratorC1Ev(%"class.history::URLDatabase::URLEnumerator"* nonnull %3) #19
  %42 = getelementptr inbounds %"class.history::HistoryDatabase", %"class.history::HistoryDatabase"* %0, i64 0, i32 2
  %43 = bitcast %"class.history::URLDatabase.base"* %42 to %"class.history::URLDatabase"*
  %44 = call zeroext i1 @_ZN7history11URLDatabase31InitURLEnumeratorForSignificantEPNS0_13URLEnumeratorE(%"class.history::URLDatabase"* %43, %"class.history::URLDatabase::URLEnumerator"* nonnull %3) #19
  br i1 %44, label %45, label %89

45:                                               ; preds = %7
  %46 = bitcast i8* %17 to i64*
  %47 = call i64 @_ZN4base4Time3NowEv() #19
  store i64 %47, i64* %46, align 8
  %48 = call i32 @_ZN17OmniboxFieldTrial29MaxNumHQPUrlsIndexedAtStartupEv() #19
  %49 = bitcast %"class.history::URLRow"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %49) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 184, i1 false)
  call void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"* nonnull %4) #19
  %50 = call zeroext i1 @_ZN7history11URLDatabase13URLEnumerator10GetNextURLEPNS_6URLRowE(%"class.history::URLDatabase::URLEnumerator"* nonnull %3, %"class.history::URLRow"* nonnull %4) #19
  br i1 %50, label %51, label %60

51:                                               ; preds = %45, %57
  %52 = phi i32 [ %58, %57 ], [ 0, %45 ]
  %53 = call zeroext i1 @_ZN19URLIndexPrivateData8IndexRowEPN7history15HistoryDatabaseEPNS0_14HistoryServiceERKNS0_6URLRowERKNSt3__13setINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS8_4lessISF_EENSD_ISF_EEEEPN4base21CancelableTaskTrackerE(%class.URLIndexPrivateData* nonnull %10, %"class.history::HistoryDatabase"* nonnull %0, %"class.history::HistoryService"* null, %"class.history::URLRow"* nonnull dereferenceable(184) %4, %"class.std::__1::set.214"* dereferenceable(24) %1, %"class.base::CancelableTaskTracker"* null)
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = add nsw i32 %52, 1
  %56 = icmp eq i32 %52, %48
  br i1 %56, label %60, label %57

57:                                               ; preds = %54, %51
  %58 = phi i32 [ %55, %54 ], [ %52, %51 ]
  %59 = call zeroext i1 @_ZN7history11URLDatabase13URLEnumerator10GetNextURLEPNS_6URLRowE(%"class.history::URLDatabase::URLEnumerator"* nonnull %3, %"class.history::URLRow"* nonnull %4) #19
  br i1 %59, label %51, label %60

60:                                               ; preds = %57, %54, %45
  call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %49) #19
  %61 = load atomic i64, i64* @_ZZN19URLIndexPrivateData18RebuildFromHistoryEPN7history15HistoryDatabaseERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %62 = inttoptr i64 %61 to %"class.base::HistogramBase"*
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #19
  %66 = ptrtoint %"class.base::HistogramBase"* %65 to i64
  store atomic i64 %66, i64* @_ZZN19URLIndexPrivateData18RebuildFromHistoryEPN7history15HistoryDatabaseERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %67

67:                                               ; preds = %60, %64
  %68 = phi %"class.base::HistogramBase"* [ %62, %60 ], [ %65, %64 ]
  %69 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #19
  %70 = call i64 @_ZN4base9TimeTicks3NowEv() #19
  %71 = sub nsw i64 %70, %8
  %72 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %71, i64* %72, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %68, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #19
  %73 = load atomic i64, i64* @_ZZN19URLIndexPrivateData18RebuildFromHistoryEPN7history15HistoryDatabaseERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %74 = inttoptr i64 %73 to %"class.base::HistogramBase"*
  %75 = icmp eq i64 %73, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %67
  %77 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #19
  %78 = ptrtoint %"class.base::HistogramBase"* %77 to i64
  store atomic i64 %78, i64* @_ZZN19URLIndexPrivateData18RebuildFromHistoryEPN7history15HistoryDatabaseERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi %"class.base::HistogramBase"* [ %74, %67 ], [ %77, %76 ]
  %81 = getelementptr inbounds i8, i8* %9, i64 192
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  %85 = bitcast %"class.base::HistogramBase"* %80 to void (%"class.base::HistogramBase"*, i32)***
  %86 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %86, i64 6
  %88 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %87, align 8
  call void %88(%"class.base::HistogramBase"* %80, i32 %84) #19
  br label %89

89:                                               ; preds = %7, %79
  %90 = phi i64 [ 0, %79 ], [ %38, %7 ]
  %91 = phi i64 [ %38, %79 ], [ 0, %7 ]
  %92 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %3, i64 0, i32 0
  call void @_ZN7history11URLDatabase17URLEnumeratorBaseD2Ev(%"class.history::URLDatabase::URLEnumeratorBase"* nonnull %92) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #19
  %93 = inttoptr i64 %90 to %class.URLIndexPrivateData*
  %94 = icmp eq i64 %90, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw sub i32* %96, i32 1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  call void @_ZN19URLIndexPrivateDataD2Ev(%class.URLIndexPrivateData* nonnull %93) #19
  %100 = inttoptr i64 %90 to i8*
  call void @_ZdlPv(i8* %100) #20
  br label %101

101:                                              ; preds = %99, %95, %89, %2
  %102 = phi i64 [ 0, %2 ], [ %91, %89 ], [ %91, %95 ], [ %91, %99 ]
  %103 = inttoptr i64 %102 to %class.URLIndexPrivateData*
  ret %class.URLIndexPrivateData* %103
}

declare void @_ZN7history11URLDatabase13URLEnumeratorC1Ev(%"class.history::URLDatabase::URLEnumerator"*) unnamed_addr #1

declare zeroext i1 @_ZN7history11URLDatabase31InitURLEnumeratorForSignificantEPNS0_13URLEnumeratorE(%"class.history::URLDatabase"*, %"class.history::URLDatabase::URLEnumerator"*) local_unnamed_addr #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare i32 @_ZN17OmniboxFieldTrial29MaxNumHQPUrlsIndexedAtStartupEv() local_unnamed_addr #1

declare void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"*) unnamed_addr #1

declare zeroext i1 @_ZN7history11URLDatabase13URLEnumerator10GetNextURLEPNS_6URLRowE(%"class.history::URLDatabase::URLEnumerator"*, %"class.history::URLRow"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7history11URLDatabase17URLEnumeratorBaseD2Ev(%"class.history::URLDatabase::URLEnumeratorBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData31WritePrivateDataToCacheFileTaskE13scoped_refptrIS_ERKN4base8FilePathE(%class.URLIndexPrivateData*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN19URLIndexPrivateData10SaveToFileERKN4base8FilePathE(%class.URLIndexPrivateData* %0, %"class.base::FilePath"* dereferenceable(24) %1)
  %4 = icmp eq %class.URLIndexPrivateData* %0, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN19URLIndexPrivateDataD2Ev(%class.URLIndexPrivateData* nonnull %0) #19
  %10 = bitcast %class.URLIndexPrivateData* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %2, %5, %9
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData10SaveToFileERKN4base8FilePathE(%class.URLIndexPrivateData*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.in_memory_url_index::InMemoryURLIndexCacheItem", align 8
  %4 = alloca %"class.std::__1::basic_string.107", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #19
  %9 = bitcast %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 88, i1 false)
  call void @_ZN19in_memory_url_index25InMemoryURLIndexCacheItemC2EPN6google8protobuf5ArenaE(%"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3, %"class.google::protobuf::Arena"* null) #19
  %10 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3, i64 0, i32 1, i32 0, i64 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3, i64 0, i32 9
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 14
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3, i64 0, i32 10
  store i32 %16, i32* %17, align 8
  %18 = or i32 %13, 448
  store i32 %18, i32* %12, align 8
  %19 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3, i64 0, i32 11
  store i32 0, i32* %19, align 4
  call void @_ZNK19URLIndexPrivateData12SaveWordListEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  call void @_ZNK19URLIndexPrivateData11SaveWordMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  call void @_ZNK19URLIndexPrivateData15SaveCharWordMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  call void @_ZNK19URLIndexPrivateData20SaveWordIDHistoryMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  call void @_ZNK19URLIndexPrivateData18SaveHistoryInfoMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  call void @_ZNK19URLIndexPrivateData17SaveWordStartsMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  %20 = bitcast %"class.std::__1::basic_string.107"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #19
  %21 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #19
  %22 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %3, i64 0, i32 0
  %23 = call zeroext i1 @_ZNK6google8protobuf11MessageLite17SerializeToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"* nonnull %22, %"class.std::__1::basic_string.107"* nonnull %4) #19
  br i1 %23, label %31, label %24

24:                                               ; preds = %2
  %25 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #19
  br i1 %25, label %26, label %78

26:                                               ; preds = %24
  %27 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %27) #19
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 981, i32 1) #19
  %28 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %29 = bitcast %"class.std::__1::basic_ostringstream"* %28 to %"class.std::__1::basic_ostream"*
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i64 47) #19
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %27) #19
  br label %78

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string.107"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i64, i64* %32, align 8
  %38 = trunc i64 %37 to i32
  %39 = load i8*, i8** %21, align 8
  %40 = zext i8 %35 to i32
  %41 = select i1 %36, i32 %38, i32 %40
  %42 = select i1 %36, i8* %39, i8* %20
  %43 = call i32 @_ZN4base9WriteFileERKNS_8FilePathEPKci(%"class.base::FilePath"* dereferenceable(24) %1, i8* %42, i32 %41) #19
  %44 = icmp eq i32 %43, %41
  br i1 %44, label %65, label %45

45:                                               ; preds = %31
  %46 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #19
  br i1 %46, label %47, label %78

47:                                               ; preds = %45
  %48 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %48) #19
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 987, i32 1) #19
  %49 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %50 = bitcast %"class.std::__1::basic_ostringstream"* %49 to %"class.std::__1::basic_ostream"*
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i64 16) #19
  %52 = bitcast %"class.base::FilePath"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.base::FilePath"* %1 to i8*
  %61 = zext i8 %54 to i64
  %62 = select i1 %55, i8* %57, i8* %60
  %63 = select i1 %55, i64 %59, i64 %61
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* %62, i64 %63) #19
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %48) #19
  br label %78

65:                                               ; preds = %31
  %66 = load atomic i64, i64* @_ZZN19URLIndexPrivateData10SaveToFileERKN4base8FilePathEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %67 = inttoptr i64 %66 to %"class.base::HistogramBase"*
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #19
  %71 = ptrtoint %"class.base::HistogramBase"* %70 to i64
  store atomic i64 %71, i64* @_ZZN19URLIndexPrivateData10SaveToFileERKN4base8FilePathEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %72

72:                                               ; preds = %65, %69
  %73 = phi %"class.base::HistogramBase"* [ %67, %65 ], [ %70, %69 ]
  %74 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #19
  %75 = call i64 @_ZN4base9TimeTicks3NowEv() #19
  %76 = sub nsw i64 %75, %8
  %77 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %76, i64* %77, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %73, %"class.base::TimeDelta"* nonnull dereferenceable(8) %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #19
  br label %78

78:                                               ; preds = %47, %45, %26, %24, %72
  %79 = phi i1 [ true, %72 ], [ false, %24 ], [ false, %26 ], [ false, %45 ], [ false, %47 ]
  %80 = bitcast %"class.std::__1::basic_string.107"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %85) #20
  br label %86

86:                                               ; preds = %78, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #19
  call void @_ZN19in_memory_url_index25InMemoryURLIndexCacheItemD1Ev(%"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #19
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.URLIndexPrivateData* @_ZNK19URLIndexPrivateData9DuplicateEv(%class.URLIndexPrivateData*) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = tail call i8* @_Znwm(i64 272) #20
  %5 = bitcast i8* %4 to %class.URLIndexPrivateData*
  %6 = bitcast i8* %4 to i32*
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %4, i64 16
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #19
  %9 = bitcast i8* %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 32
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 40
  %13 = bitcast i8* %12 to i64*
  %14 = getelementptr inbounds i8, i8* %4, i64 112
  %15 = getelementptr inbounds i8, i8* %4, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #19
  %16 = getelementptr inbounds i8, i8* %4, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #19
  %17 = bitcast i8* %15 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 136
  %19 = getelementptr inbounds i8, i8* %4, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #19
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %4, i64 160
  %22 = getelementptr inbounds i8, i8* %4, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #19
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %4, i64 184
  %25 = getelementptr inbounds i8, i8* %4, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #19
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %4, i64 200
  %28 = bitcast i8* %27 to %"class.std::__1::unordered_map"*
  %29 = getelementptr inbounds i8, i8* %4, i64 232
  %30 = bitcast i8* %29 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #19
  store i32 1065353216, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %4, i64 248
  %32 = getelementptr inbounds i8, i8* %4, i64 240
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #19
  %33 = bitcast i8* %32 to i8**
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %4, i64 264
  %35 = bitcast i8* %34 to i32*
  store i32 5, i32* %35, align 8
  %36 = atomicrmw add i32* %6, i32 1 monotonic
  %37 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 5, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %13, align 8
  %39 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6
  %40 = getelementptr inbounds i8, i8* %4, i64 48
  %41 = bitcast i8* %40 to %"class.std::__1::vector"*
  %42 = icmp eq %"class.std::__1::vector"* %39, %41
  br i1 %42, label %48, label %43

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %39, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %46 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 1
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %41, %"class.std::__1::basic_string"* %45, %"class.std::__1::basic_string"* %47) #19
  br label %48

48:                                               ; preds = %1, %43
  %49 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7
  %50 = getelementptr inbounds i8, i8* %4, i64 72
  %51 = bitcast i8* %50 to %"class.std::__1::stack"*
  %52 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %49, i64 0, i32 0
  %53 = bitcast i8* %50 to %"class.base::circular_deque"*
  %54 = icmp eq %"class.std::__1::stack"* %49, %51
  br i1 %54, label %104, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, %57
  br i1 %60, label %63, label %61

61:                                               ; preds = %55
  %62 = sub i64 %59, %57
  br label %68

63:                                               ; preds = %55
  %64 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %59, %57
  %67 = add i64 %66, %65
  br label %68

68:                                               ; preds = %63, %61
  %69 = phi i64 [ %62, %61 ], [ %67, %63 ]
  %70 = getelementptr inbounds i8, i8* %4, i64 80
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  %74 = add i64 %72, -1
  %75 = select i1 %73, i64 0, i64 %74
  %76 = icmp ult i64 %75, %69
  br i1 %76, label %77, label %101

77:                                               ; preds = %68
  %78 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #19
  %79 = add i64 %69, 1
  %80 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %79, i64 8) #19
  %81 = extractvalue { i64, i1 } %80, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 -86, i64 16, i1 false) #19
  br i1 %81, label %82, label %83, !prof !59

82:                                               ; preds = %77
  tail call void @llvm.trap() #19
  unreachable

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %85 = extractvalue { i64, i1 } %80, 0
  %86 = tail call noalias i8* @malloc(i64 %85) #19
  %87 = bitcast <2 x i64>* %2 to i8**
  store i8* %86, i8** %87, align 16
  store i64 %79, i64* %84, align 8
  %88 = bitcast i8* %50 to %"class.base::internal::VectorBuffer"*
  %89 = getelementptr inbounds i8, i8* %4, i64 88
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds i8, i8* %4, i64 96
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %93, align 8
  call void @_ZN4base14circular_dequeImE10MoveBufferERNS_8internal12VectorBufferImEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %88, i64 %91, i64 %94, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %90, i64* %93) #19
  %95 = bitcast i8* %50 to i8**
  %96 = load i8*, i8** %95, align 8
  call void @free(i8* %96) #19
  %97 = load <2 x i64>, <2 x i64>* %2, align 16
  %98 = bitcast i8* %50 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #19
  %99 = load i64, i64* %56, align 8
  %100 = load i64, i64* %58, align 8
  br label %101

101:                                              ; preds = %68, %83
  %102 = phi i64 [ %59, %68 ], [ %100, %83 ]
  %103 = phi i64 [ %57, %68 ], [ %99, %83 ]
  call void @_ZN4base14circular_dequeImE6assignINS_8internal29circular_deque_const_iteratorImEEEENSt3__19enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.base::circular_deque"* %53, %"class.base::circular_deque"* %52, i64 %103, %"class.base::circular_deque"* %52, i64 %102) #19
  br label %104

104:                                              ; preds = %48, %101
  %105 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8
  %106 = bitcast i8* %15 to %"class.std::__1::map.15"*
  %107 = icmp eq %"class.std::__1::map.15"* %105, %106
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = bitcast i8* %15 to %"class.std::__1::__tree.16"*
  %110 = getelementptr inbounds %"class.std::__1::map.15", %"class.std::__1::map.15"* %105, i64 0, i32 0, i32 0
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %110, align 8
  %112 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE14__assign_multiINS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEEEvT_SM_(%"class.std::__1::__tree.16"* %109, %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"* %112) #19
  br label %113

113:                                              ; preds = %104, %108
  %114 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9
  %115 = bitcast i8* %19 to %"class.std::__1::map.24"*
  %116 = icmp eq %"class.std::__1::map.24"* %114, %115
  br i1 %116, label %122, label %117

117:                                              ; preds = %113
  %118 = bitcast i8* %19 to %"class.std::__1::__tree.25"*
  %119 = getelementptr inbounds %"class.std::__1::map.24", %"class.std::__1::map.24"* %114, i64 0, i32 0, i32 0
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_(%"class.std::__1::__tree.25"* %118, %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"* %121) #19
  br label %122

122:                                              ; preds = %113, %117
  %123 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10
  %124 = bitcast i8* %22 to %"class.std::__1::map.35"*
  %125 = icmp eq %"class.std::__1::map.35"* %123, %124
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast i8* %22 to %"class.std::__1::__tree.36"*
  %128 = getelementptr inbounds %"class.std::__1::map.35", %"class.std::__1::map.35"* %123, i64 0, i32 0, i32 0
  %129 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %128, align 8
  %130 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_(%"class.std::__1::__tree.36"* %127, %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"* %130) #19
  br label %131

131:                                              ; preds = %122, %126
  %132 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11
  %133 = bitcast i8* %25 to %"class.std::__1::map.46"*
  %134 = icmp eq %"class.std::__1::map.46"* %132, %133
  br i1 %134, label %140, label %135

135:                                              ; preds = %131
  %136 = bitcast i8* %25 to %"class.std::__1::__tree.47"*
  %137 = getelementptr inbounds %"class.std::__1::map.46", %"class.std::__1::map.46"* %132, i64 0, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %139 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_(%"class.std::__1::__tree.47"* %136, %"class.std::__1::__tree_end_node"* %138, %"class.std::__1::__tree_end_node"* %139) #19
  br label %140

140:                                              ; preds = %131, %135
  %141 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12
  %142 = icmp eq %"class.std::__1::unordered_map"* %141, %28
  br i1 %142, label %150, label %143

143:                                              ; preds = %140
  %144 = bitcast i8* %27 to %"class.std::__1::__hash_table"*
  %145 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 3, i32 0, i32 0
  %146 = bitcast float* %145 to i32*
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %30, align 4
  %148 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEEEEvT_SM_(%"class.std::__1::__hash_table"* %144, %"struct.std::__1::__hash_node_base"* %149, %"struct.std::__1::__hash_node_base"* null) #19
  br label %150

150:                                              ; preds = %140, %143
  %151 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13
  %152 = bitcast i8* %32 to %"class.std::__1::map.74"*
  %153 = icmp eq %"class.std::__1::map.74"* %151, %152
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = bitcast i8* %32 to %"class.std::__1::__tree.75"*
  %156 = getelementptr inbounds %"class.std::__1::map.74", %"class.std::__1::map.74"* %151, i64 0, i32 0, i32 0
  %157 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %156, align 8
  %158 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SI_(%"class.std::__1::__tree.75"* %155, %"class.std::__1::__tree_end_node"* %157, %"class.std::__1::__tree_end_node"* %158) #19
  br label %159

159:                                              ; preds = %150, %154
  ret %class.URLIndexPrivateData* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData5ClearEv(%class.URLIndexPrivateData*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::stack", align 16
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %5
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %19
  %10 = phi %"class.std::__1::basic_string"* [ %11, %19 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 -1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #20
  br label %19

19:                                               ; preds = %16, %9
  %20 = icmp eq %"class.std::__1::basic_string"* %11, %5
  br i1 %20, label %21, label %9

21:                                               ; preds = %19, %1
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %6, align 8
  %22 = bitcast %"class.std::__1::stack"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 32, i1 false) #19
  %23 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7
  %24 = icmp eq %"class.std::__1::stack"* %2, %23
  br i1 %24, label %54, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, %27
  br i1 %30, label %42, label %31

31:                                               ; preds = %25
  %32 = icmp ugt i64 %29, %27
  %33 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %23, i64 0, i32 0, i32 0
  %34 = call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %27) #19
  br i1 %32, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %37) #19
  %39 = call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %33, i64 0) #19
  br label %40

40:                                               ; preds = %31, %35
  %41 = call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %29) #19
  br label %42

42:                                               ; preds = %40, %25
  %43 = bitcast i64* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #19
  %44 = bitcast %"class.std::__1::stack"* %23 to i8**
  %45 = load i8*, i8** %44, align 8
  call void @free(i8* %45) #19
  %46 = bitcast %"class.std::__1::stack"* %2 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 16
  %48 = bitcast %"class.std::__1::stack"* %23 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 16, i1 false) #19
  %49 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 1
  %50 = bitcast i64* %49 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 16
  %52 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %52, align 8
  %53 = bitcast i64* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %53, i8 0, i64 16, i1 false) #19
  br label %54

54:                                               ; preds = %21, %42
  %55 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0
  call void @_ZN4base14circular_dequeImED2Ev(%"class.base::circular_deque"* nonnull %55) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #19
  %56 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8
  %57 = getelementptr inbounds %"class.std::__1::map.15", %"class.std::__1::map.15"* %56, i64 0, i32 0
  %58 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node.579"**
  %60 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %59, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %57, %"class.std::__1::__tree_node.579"* %60) #19
  %61 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::map.15", %"class.std::__1::map.15"* %56, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %63, align 8
  %64 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9
  %65 = getelementptr inbounds %"class.std::__1::map.24", %"class.std::__1::map.24"* %64, i64 0, i32 0
  %66 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_node.581"**
  %68 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %67, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"* %65, %"class.std::__1::__tree_node.581"* %68) #19
  %69 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::map.24", %"class.std::__1::map.24"* %64, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %71, align 8
  %72 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10
  %73 = getelementptr inbounds %"class.std::__1::map.35", %"class.std::__1::map.35"* %72, i64 0, i32 0
  %74 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node.583"**
  %76 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %75, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"* %73, %"class.std::__1::__tree_node.583"* %76) #19
  %77 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::map.35", %"class.std::__1::map.35"* %72, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %79, align 8
  %80 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11
  %81 = getelementptr inbounds %"class.std::__1::map.46", %"class.std::__1::map.46"* %80, i64 0, i32 0
  %82 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_node.585"**
  %84 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %83, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"* %81, %"class.std::__1::__tree_node.585"* %84) #19
  %85 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::map.46", %"class.std::__1::map.46"* %80, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %82, %"class.std::__1::__tree_end_node"** %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %87, align 8
  %88 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %143, label %91

91:                                               ; preds = %54
  %92 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base"* %93, null
  br i1 %94, label %103, label %95

95:                                               ; preds = %91, %95
  %96 = phi %"struct.std::__1::__hash_node_base"* [ %98, %95 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 3
  %100 = bitcast %"struct.std::__1::__hash_node_base"* %99 to %struct.HistoryInfoMapValue*
  call void @_ZN19HistoryInfoMapValueD1Ev(%struct.HistoryInfoMapValue* %100) #19
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %96 to i8*
  call void @_ZdlPv(i8* %101) #20
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %102, label %103, label %95

103:                                              ; preds = %95, %91
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %92, align 8
  %104 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %125, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = add i64 %105, -1
  %110 = and i64 %105, 3
  %111 = icmp ult i64 %109, 3
  br i1 %111, label %114, label %112

112:                                              ; preds = %107
  %113 = sub i64 %105, %110
  br label %126

114:                                              ; preds = %126, %107
  %115 = phi i64 [ 0, %107 ], [ %140, %126 ]
  %116 = icmp eq i64 %110, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %122, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %123, %117 ], [ %110, %114 ]
  %120 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %108, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, i64 %118
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %121, align 8
  %122 = add nuw i64 %118, 1
  %123 = add i64 %119, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %117, !llvm.loop !60

125:                                              ; preds = %114, %117, %103
  store i64 0, i64* %88, align 8
  br label %143

126:                                              ; preds = %126, %112
  %127 = phi i64 [ 0, %112 ], [ %140, %126 ]
  %128 = phi i64 [ %113, %112 ], [ %141, %126 ]
  %129 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %108, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %129, i64 %127
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %130, align 8
  %131 = or i64 %127, 1
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %108, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %133, align 8
  %134 = or i64 %127, 2
  %135 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %108, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, i64 %134
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %136, align 8
  %137 = or i64 %127, 3
  %138 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %108, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, i64 %137
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %139, align 8
  %140 = add nuw i64 %127, 4
  %141 = add i64 %128, -4
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %114, label %126

143:                                              ; preds = %54, %125
  %144 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13
  %145 = getelementptr inbounds %"class.std::__1::map.74", %"class.std::__1::map.74"* %144, i64 0, i32 0
  %146 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %147 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"class.std::__1::__tree_node.588"**
  %148 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %147, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"* %145, %"class.std::__1::__tree_node.588"* %148) #19
  %149 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::map.74", %"class.std::__1::map.74"* %144, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %146, %"class.std::__1::__tree_end_node"** %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %151, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK19URLIndexPrivateData19EstimateMemoryUsageEv(%class.URLIndexPrivateData*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = mul i64 %3, 112
  %5 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %62, label %9

9:                                                ; preds = %1, %59
  %10 = phi i64 [ %31, %59 ], [ 0, %1 ]
  %11 = phi %"class.std::__1::__tree_end_node"* [ %60, %59 ], [ %6, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 4
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::basic_string"*
  %14 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %13) #19
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 7
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 9
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 10
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 12
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::__tree_end_node"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %14, %10
  %28 = add i64 %27, %18
  %29 = sub i64 %28, %20
  %30 = add i64 %29, %24
  %31 = sub i64 %30, %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %9
  %36 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_end_node"**
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %36
  br i1 %42, label %59, label %50

43:                                               ; preds = %9, %43
  %44 = phi %"class.std::__1::__tree_node_base"* [ %46, %43 ], [ %33, %9 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %43

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0
  br label %59

50:                                               ; preds = %35, %50
  %51 = phi %"class.std::__1::__tree_end_node"** [ %54, %50 ], [ %38, %35 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"** %51 to %"class.std::__1::__tree_node_base"**
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %53
  br i1 %58, label %59, label %50

59:                                               ; preds = %50, %48, %35
  %60 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %39, %35 ], [ %55, %50 ]
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %60, %7
  br i1 %61, label %62, label %9

62:                                               ; preds = %59, %1
  %63 = phi i64 [ 0, %1 ], [ %31, %59 ]
  %64 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6
  %65 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = inttoptr i64 %69 to %"class.std::__1::basic_string"*
  %71 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 1
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %72, %70
  br i1 %73, label %81, label %74

74:                                               ; preds = %62, %74
  %75 = phi i64 [ %78, %74 ], [ 0, %62 ]
  %76 = phi %"class.std::__1::basic_string"* [ %79, %74 ], [ %70, %62 ]
  %77 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %76) #19
  %78 = add i64 %77, %75
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %80 = icmp eq %"class.std::__1::basic_string"* %79, %72
  br i1 %80, label %81, label %74

81:                                               ; preds = %74, %62
  %82 = phi i64 [ 0, %62 ], [ %78, %74 ]
  %83 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 0
  %86 = shl i64 %84, 3
  %87 = add i64 %86, -8
  %88 = select i1 %85, i64 0, i64 %87
  %89 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %90, %92
  br i1 %93, label %104, label %94

94:                                               ; preds = %81
  %95 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 0
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ %90, %94 ], [ %102, %96 ]
  %98 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %95, i64 %97) #19
  %99 = add i64 %97, 1
  %100 = load i64, i64* %83, align 8
  %101 = icmp eq i64 %99, %100
  %102 = select i1 %101, i64 0, i64 %99
  %103 = icmp eq i64 %102, %92
  br i1 %103, label %104, label %96

104:                                              ; preds = %96, %81
  %105 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 0
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %110 = icmp eq %"class.std::__1::__tree_end_node"* %108, %109
  br i1 %110, label %148, label %111

111:                                              ; preds = %104, %145
  %112 = phi i64 [ %117, %145 ], [ 0, %104 ]
  %113 = phi %"class.std::__1::__tree_end_node"* [ %146, %145 ], [ %108, %104 ]
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 4
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.std::__1::basic_string"*
  %116 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %115) #19
  %117 = add i64 %116, %112
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %121, label %129

121:                                              ; preds = %111
  %122 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::__tree_node_base"*
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 2
  %124 = bitcast %"class.std::__1::__tree_end_node"* %123 to %"class.std::__1::__tree_end_node"**
  %125 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, %122
  br i1 %128, label %145, label %136

129:                                              ; preds = %111, %129
  %130 = phi %"class.std::__1::__tree_node_base"* [ %132, %129 ], [ %119, %111 ]
  %131 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node_base"* %132, null
  br i1 %133, label %134, label %129

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %130, i64 0, i32 0
  br label %145

136:                                              ; preds = %121, %136
  %137 = phi %"class.std::__1::__tree_end_node"** [ %140, %136 ], [ %124, %121 ]
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to %"class.std::__1::__tree_node_base"**
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %139, i64 0, i32 2
  %141 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 0, i32 0
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_node_base"* %143, %139
  br i1 %144, label %145, label %136

145:                                              ; preds = %136, %134, %121
  %146 = phi %"class.std::__1::__tree_end_node"* [ %135, %134 ], [ %125, %121 ], [ %141, %136 ]
  %147 = icmp eq %"class.std::__1::__tree_end_node"* %146, %109
  br i1 %147, label %148, label %111

148:                                              ; preds = %145, %104
  %149 = phi i64 [ 0, %104 ], [ %117, %145 ]
  %150 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %152, align 8
  %154 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %155 = icmp eq %"class.std::__1::__tree_end_node"* %153, %154
  br i1 %155, label %197, label %156

156:                                              ; preds = %148, %194
  %157 = phi i64 [ %166, %194 ], [ 0, %148 ]
  %158 = phi %"class.std::__1::__tree_end_node"* [ %195, %194 ], [ %153, %148 ]
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 5
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 7
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.std::__1::__tree_end_node"* %159 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %162, %157
  %166 = sub i64 %165, %164
  %167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 1, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, null
  br i1 %169, label %170, label %178

170:                                              ; preds = %156
  %171 = bitcast %"class.std::__1::__tree_end_node"* %158 to %"class.std::__1::__tree_node_base"*
  %172 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 2
  %173 = bitcast %"class.std::__1::__tree_end_node"* %172 to %"class.std::__1::__tree_end_node"**
  %174 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, %171
  br i1 %177, label %194, label %185

178:                                              ; preds = %156, %178
  %179 = phi %"class.std::__1::__tree_node_base"* [ %181, %178 ], [ %168, %156 ]
  %180 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %179, i64 0, i32 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %183, label %178

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %179, i64 0, i32 0
  br label %194

185:                                              ; preds = %170, %185
  %186 = phi %"class.std::__1::__tree_end_node"** [ %189, %185 ], [ %173, %170 ]
  %187 = bitcast %"class.std::__1::__tree_end_node"** %186 to %"class.std::__1::__tree_node_base"**
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %188, i64 0, i32 2
  %190 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %189, align 8
  %191 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %190, i64 0, i32 0
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, %188
  br i1 %193, label %194, label %185

194:                                              ; preds = %185, %183, %170
  %195 = phi %"class.std::__1::__tree_end_node"* [ %184, %183 ], [ %174, %170 ], [ %190, %185 ]
  %196 = icmp eq %"class.std::__1::__tree_end_node"* %195, %154
  br i1 %196, label %197, label %156

197:                                              ; preds = %194, %148
  %198 = phi i64 [ 0, %148 ], [ %166, %194 ]
  %199 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 0
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %201, align 8
  %203 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %204 = icmp eq %"class.std::__1::__tree_end_node"* %202, %203
  br i1 %204, label %246, label %205

205:                                              ; preds = %197, %243
  %206 = phi i64 [ %215, %243 ], [ 0, %197 ]
  %207 = phi %"class.std::__1::__tree_end_node"* [ %244, %243 ], [ %202, %197 ]
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %207, i64 5
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %207, i64 7
  %210 = bitcast %"class.std::__1::__tree_end_node"* %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.std::__1::__tree_end_node"* %208 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = add i64 %211, %206
  %215 = sub i64 %214, %213
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %207, i64 1, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, null
  br i1 %218, label %219, label %227

219:                                              ; preds = %205
  %220 = bitcast %"class.std::__1::__tree_end_node"* %207 to %"class.std::__1::__tree_node_base"*
  %221 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %207, i64 2
  %222 = bitcast %"class.std::__1::__tree_end_node"* %221 to %"class.std::__1::__tree_end_node"**
  %223 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %223, i64 0, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node_base"* %225, %220
  br i1 %226, label %243, label %234

227:                                              ; preds = %205, %227
  %228 = phi %"class.std::__1::__tree_node_base"* [ %230, %227 ], [ %217, %205 ]
  %229 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %228, i64 0, i32 0, i32 0
  %230 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %229, align 8
  %231 = icmp eq %"class.std::__1::__tree_node_base"* %230, null
  br i1 %231, label %232, label %227

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %228, i64 0, i32 0
  br label %243

234:                                              ; preds = %219, %234
  %235 = phi %"class.std::__1::__tree_end_node"** [ %238, %234 ], [ %222, %219 ]
  %236 = bitcast %"class.std::__1::__tree_end_node"** %235 to %"class.std::__1::__tree_node_base"**
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %237, i64 0, i32 2
  %239 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %238, align 8
  %240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 0, i32 0
  %241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %240, align 8
  %242 = icmp eq %"class.std::__1::__tree_node_base"* %241, %237
  br i1 %242, label %243, label %234

243:                                              ; preds = %234, %232, %219
  %244 = phi %"class.std::__1::__tree_end_node"* [ %233, %232 ], [ %223, %219 ], [ %239, %234 ]
  %245 = icmp eq %"class.std::__1::__tree_end_node"* %244, %203
  br i1 %245, label %246, label %205

246:                                              ; preds = %243, %197
  %247 = phi i64 [ 0, %197 ], [ %215, %243 ]
  %248 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 0
  %251 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %250, align 8
  %252 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %253 = icmp eq %"class.std::__1::__tree_end_node"* %251, %252
  br i1 %253, label %295, label %254

254:                                              ; preds = %246, %292
  %255 = phi i64 [ %264, %292 ], [ 0, %246 ]
  %256 = phi %"class.std::__1::__tree_end_node"* [ %293, %292 ], [ %251, %246 ]
  %257 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %256, i64 5
  %258 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %256, i64 7
  %259 = bitcast %"class.std::__1::__tree_end_node"* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.std::__1::__tree_end_node"* %257 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = add i64 %260, %255
  %264 = sub i64 %263, %262
  %265 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %256, i64 1, i32 0
  %266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %265, align 8
  %267 = icmp eq %"class.std::__1::__tree_node_base"* %266, null
  br i1 %267, label %268, label %276

268:                                              ; preds = %254
  %269 = bitcast %"class.std::__1::__tree_end_node"* %256 to %"class.std::__1::__tree_node_base"*
  %270 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %256, i64 2
  %271 = bitcast %"class.std::__1::__tree_end_node"* %270 to %"class.std::__1::__tree_end_node"**
  %272 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %271, align 8
  %273 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, %269
  br i1 %275, label %292, label %283

276:                                              ; preds = %254, %276
  %277 = phi %"class.std::__1::__tree_node_base"* [ %279, %276 ], [ %266, %254 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %281, label %276

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  br label %292

283:                                              ; preds = %268, %283
  %284 = phi %"class.std::__1::__tree_end_node"** [ %287, %283 ], [ %271, %268 ]
  %285 = bitcast %"class.std::__1::__tree_end_node"** %284 to %"class.std::__1::__tree_node_base"**
  %286 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %285, align 8
  %287 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %286, i64 0, i32 2
  %288 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %287, align 8
  %289 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %288, i64 0, i32 0
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %289, align 8
  %291 = icmp eq %"class.std::__1::__tree_node_base"* %290, %286
  br i1 %291, label %292, label %283

292:                                              ; preds = %283, %281, %268
  %293 = phi %"class.std::__1::__tree_end_node"* [ %282, %281 ], [ %272, %268 ], [ %288, %283 ]
  %294 = icmp eq %"class.std::__1::__tree_end_node"* %293, %252
  br i1 %294, label %295, label %254

295:                                              ; preds = %292, %246
  %296 = phi i64 [ 0, %246 ], [ %264, %292 ]
  %297 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %298 = load i64, i64* %297, align 8
  %299 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %300 = load i64, i64* %299, align 8
  %301 = shl i64 %298, 3
  %302 = mul i64 %300, 232
  %303 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %304 = bitcast %"struct.std::__1::__hash_node_base"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %317, label %307

307:                                              ; preds = %295, %307
  %308 = phi i64 [ %315, %307 ], [ %305, %295 ]
  %309 = phi i64 [ %313, %307 ], [ 0, %295 ]
  %310 = inttoptr i64 %308 to %"struct.std::__1::__hash_node"*
  %311 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %310, i64 0, i32 2, i32 0, i32 1
  %312 = tail call i64 @_ZNK19HistoryInfoMapValue19EstimateMemoryUsageEv(%struct.HistoryInfoMapValue* %311) #19
  %313 = add i64 %312, %309
  %314 = inttoptr i64 %308 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %307

317:                                              ; preds = %307, %295
  %318 = phi i64 [ 0, %295 ], [ %313, %307 ]
  %319 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %320 = load i64, i64* %319, align 8
  %321 = mul i64 %320, 88
  %322 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 0
  %323 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %322, align 8
  %324 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %325 = icmp eq %"class.std::__1::__tree_end_node"* %323, %324
  br i1 %325, label %363, label %326

326:                                              ; preds = %317, %360
  %327 = phi i64 [ %332, %360 ], [ 0, %317 ]
  %328 = phi %"class.std::__1::__tree_end_node"* [ %361, %360 ], [ %323, %317 ]
  %329 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %328, i64 5
  %330 = bitcast %"class.std::__1::__tree_end_node"* %329 to %struct.RowWordStarts*
  %331 = tail call i64 @_ZNK13RowWordStarts19EstimateMemoryUsageEv(%struct.RowWordStarts* %330) #19
  %332 = add i64 %331, %327
  %333 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %328, i64 1, i32 0
  %334 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %333, align 8
  %335 = icmp eq %"class.std::__1::__tree_node_base"* %334, null
  br i1 %335, label %336, label %344

336:                                              ; preds = %326
  %337 = bitcast %"class.std::__1::__tree_end_node"* %328 to %"class.std::__1::__tree_node_base"*
  %338 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %328, i64 2
  %339 = bitcast %"class.std::__1::__tree_end_node"* %338 to %"class.std::__1::__tree_end_node"**
  %340 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %339, align 8
  %341 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %340, i64 0, i32 0
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = icmp eq %"class.std::__1::__tree_node_base"* %342, %337
  br i1 %343, label %360, label %351

344:                                              ; preds = %326, %344
  %345 = phi %"class.std::__1::__tree_node_base"* [ %347, %344 ], [ %334, %326 ]
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %345, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = icmp eq %"class.std::__1::__tree_node_base"* %347, null
  br i1 %348, label %349, label %344

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %345, i64 0, i32 0
  br label %360

351:                                              ; preds = %336, %351
  %352 = phi %"class.std::__1::__tree_end_node"** [ %355, %351 ], [ %339, %336 ]
  %353 = bitcast %"class.std::__1::__tree_end_node"** %352 to %"class.std::__1::__tree_node_base"**
  %354 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %353, align 8
  %355 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %354, i64 0, i32 2
  %356 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %356, i64 0, i32 0
  %358 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %357, align 8
  %359 = icmp eq %"class.std::__1::__tree_node_base"* %358, %354
  br i1 %359, label %360, label %351

360:                                              ; preds = %351, %349, %336
  %361 = phi %"class.std::__1::__tree_end_node"* [ %350, %349 ], [ %340, %336 ], [ %356, %351 ]
  %362 = icmp eq %"class.std::__1::__tree_end_node"* %361, %324
  br i1 %362, label %363, label %326

363:                                              ; preds = %360, %317
  %364 = phi i64 [ 0, %317 ], [ %332, %360 ]
  %365 = add i64 %151, %106
  %366 = add i64 %365, %200
  %367 = add i64 %366, %249
  %368 = shl i64 %367, 6
  %369 = add i64 %63, %4
  %370 = add i64 %369, %67
  %371 = sub i64 %370, %69
  %372 = add i64 %371, %82
  %373 = add i64 %372, %88
  %374 = add i64 %373, %149
  %375 = add i64 %374, %198
  %376 = add i64 %375, %247
  %377 = add i64 %376, %368
  %378 = add i64 %377, %296
  %379 = add i64 %378, %301
  %380 = add i64 %379, %302
  %381 = add i64 %380, %318
  %382 = add i64 %381, %321
  %383 = add i64 %382, %364
  ret i64 %383
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK19URLIndexPrivateData15IsUrlRowIndexedERKN7history6URLRowE(%class.URLIndexPrivateData* nocapture readonly, %"class.history::URLRow"* nocapture readonly dereferenceable(184)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %56, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #19, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %56, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %4, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %56

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %4
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %56, label %31

56:                                               ; preds = %44, %47, %52, %2, %18, %25
  %57 = phi %"struct.std::__1::__hash_node_base"* [ null, %18 ], [ null, %2 ], [ null, %25 ], [ null, %44 ], [ null, %52 ], [ %32, %47 ]
  %58 = icmp ne %"struct.std::__1::__hash_node_base"* %57, null
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData35ShouldExcludeBecauseOfCctTransitionEN2ui14PageTransitionE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2ui26PageTransitionGetQualifierENS_14PageTransitionE(i32 %0) #19
  %3 = and i32 %2, 4194304
  %4 = tail call i32 @_ZN2ui26PageTransitionGetQualifierENS_14PageTransitionE(i32 4194304) #19
  %5 = icmp eq i32 %3, %4
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7omnibox18kHideVisitsFromCctE) #19
  br label %8

8:                                                ; preds = %6, %1
  %9 = phi i1 [ false, %1 ], [ %7, %6 ]
  ret i1 %9
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData31ShouldExcludeBecauseOfCctVisitsERKNSt3__16vectorIN7history8VisitRowENS0_9allocatorIS3_EEEE(%"class.std::__1::vector.83"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %4, align 8
  %6 = icmp eq %"class.history::VisitRow"* %3, %5
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7omnibox18kHideVisitsFromCctE) #19
  br i1 %8, label %9, label %24

9:                                                ; preds = %7
  %10 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %2, align 8
  %11 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %4, align 8
  %12 = icmp eq %"class.history::VisitRow"* %10, %11
  br i1 %12, label %24, label %15

13:                                               ; preds = %15
  %14 = icmp eq %"class.history::VisitRow"* %23, %11
  br i1 %14, label %24, label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.history::VisitRow"* [ %23, %13 ], [ %10, %9 ]
  %17 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %16, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = tail call i32 @_ZN2ui26PageTransitionGetQualifierENS_14PageTransitionE(i32 %18) #19
  %20 = and i32 %19, 4194304
  %21 = tail call i32 @_ZN2ui26PageTransitionGetQualifierENS_14PageTransitionE(i32 4194304) #19
  %22 = icmp eq i32 %20, %21
  %23 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %16, i64 1
  br i1 %22, label %13, label %24

24:                                               ; preds = %15, %13, %9, %7, %1
  %25 = phi i1 [ false, %1 ], [ false, %7 ], [ true, %9 ], [ false, %15 ], [ true, %13 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateDataD2Ev(%class.URLIndexPrivateData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.588"**
  %5 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"* %2, %"class.std::__1::__tree_node.588"* %5) #19
  %6 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"struct.std::__1::__hash_node_base"* [ %12, %9 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 3
  %14 = bitcast %"struct.std::__1::__hash_node_base"* %13 to %struct.HistoryInfoMapValue*
  tail call void @_ZN19HistoryInfoMapValueD1Ev(%struct.HistoryInfoMapValue* %14) #19
  %15 = bitcast %"struct.std::__1::__hash_node_base"* %10 to i8*
  tail call void @_ZdlPv(i8* %15) #20
  %16 = icmp eq %"struct.std::__1::__hash_node_base"* %12, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %1
  %18 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %18, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base"** %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"struct.std::__1::__hash_node_base"** %19 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0
  %25 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node.585"**
  %27 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %26, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"* %24, %"class.std::__1::__tree_node.585"* %27) #19
  %28 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0
  %29 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node.583"**
  %31 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %30, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"* %28, %"class.std::__1::__tree_node.583"* %31) #19
  %32 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0
  %33 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node.581"**
  %35 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %34, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"* %32, %"class.std::__1::__tree_node.581"* %35) #19
  %36 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0
  %37 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node.579"**
  %39 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %38, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %36, %"class.std::__1::__tree_node.579"* %39) #19
  %40 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base14circular_dequeImED2Ev(%"class.base::circular_deque"* %40) #19
  %41 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, null
  br i1 %44, label %67, label %45

45:                                               ; preds = %23
  %46 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %47 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 1
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %49 = icmp eq %"class.std::__1::basic_string"* %48, %43
  br i1 %49, label %65, label %50

50:                                               ; preds = %45, %60
  %51 = phi %"class.std::__1::basic_string"* [ %52, %60 ], [ %48, %45 ]
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 -1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %52 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #20
  br label %60

60:                                               ; preds = %57, %50
  %61 = icmp eq %"class.std::__1::basic_string"* %52, %43
  br i1 %61, label %62, label %50

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector"* %41 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %45
  %66 = phi i8* [ %64, %62 ], [ %46, %45 ]
  store %"class.std::__1::basic_string"* %43, %"class.std::__1::basic_string"** %47, align 8
  tail call void @_ZdlPv(i8* %66) #20
  br label %67

67:                                               ; preds = %23, %65
  %68 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0
  %69 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node"**
  %71 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %70, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %68, %"class.std::__1::__tree_node"* %71) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #19
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %226, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #21
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #20
  %18 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %27 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.std::__1::basic_string"* %25, %26
  br i1 %29, label %224, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  br label %32

32:                                               ; preds = %218, %30
  %33 = phi %"class.std::__1::basic_string"* [ %220, %218 ], [ %31, %30 ]
  %34 = phi %"class.std::__1::basic_string"* [ %219, %218 ], [ %25, %30 ]
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #19
  br label %218

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, 11
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = bitcast %"class.std::__1::basic_string"* %33 to i16*
  %50 = trunc i64 %46 to i8
  %51 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  store i8 %50, i8* %52, align 1
  br label %70

53:                                               ; preds = %42
  %54 = icmp ugt i64 %46, 9223372036854775791
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::basic_string"* %33 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %56) #21
  unreachable

57:                                               ; preds = %53
  %58 = add nuw nsw i64 %46, 8
  %59 = and i64 %58, -8
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  tail call void @abort() #21
  unreachable

62:                                               ; preds = %57
  %63 = shl i64 %59, 1
  %64 = tail call i8* @_Znwm(i64 %63) #20
  %65 = bitcast i8* %64 to i16*
  %66 = bitcast %"class.std::__1::basic_string"* %33 to i8**
  store i8* %64, i8** %66, align 8
  %67 = or i64 %59, -9223372036854775808
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %69, align 8
  br label %70

70:                                               ; preds = %62, %48
  %71 = phi i16* [ %49, %48 ], [ %65, %62 ]
  %72 = add nuw nsw i64 %46, 1
  %73 = add i64 %46, 1
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %165, label %75

75:                                               ; preds = %70
  %76 = getelementptr i16, i16* %71, i64 1
  %77 = getelementptr i16, i16* %76, i64 %46
  %78 = getelementptr i16, i16* %44, i64 1
  %79 = getelementptr i16, i16* %78, i64 %46
  %80 = icmp ult i16* %71, %79
  %81 = icmp ult i16* %44, %77
  %82 = and i1 %80, %81
  br i1 %82, label %165, label %83

83:                                               ; preds = %75
  %84 = and i64 %73, -16
  %85 = sub i64 %72, %84
  %86 = getelementptr i16, i16* %44, i64 %84
  %87 = getelementptr i16, i16* %71, i64 %84
  %88 = add i64 %84, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %83
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %44, i64 %96
  %99 = getelementptr i16, i16* %71, i64 %96
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !61
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !61
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !64, !noalias !61
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !64, !noalias !61
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %44, i64 %108
  %110 = getelementptr i16, i16* %71, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !61
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !61
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !64, !noalias !61
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !64, !noalias !61
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %44, i64 %119
  %121 = getelementptr i16, i16* %71, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !61
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !61
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !64, !noalias !61
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !64, !noalias !61
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %44, i64 %130
  %132 = getelementptr i16, i16* %71, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !61
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !61
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !64, !noalias !61
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !64, !noalias !61
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !66

144:                                              ; preds = %95, %83
  %145 = phi i64 [ 0, %83 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %44, i64 %148
  %151 = getelementptr i16, i16* %71, i64 %148
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !61
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !61
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !64, !noalias !61
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !64, !noalias !61
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !67

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %73, %84
  br i1 %164, label %218, label %165

165:                                              ; preds = %163, %75, %70
  %166 = phi i64 [ %72, %75 ], [ %72, %70 ], [ %85, %163 ]
  %167 = phi i16* [ %44, %75 ], [ %44, %70 ], [ %86, %163 ]
  %168 = phi i16* [ %71, %75 ], [ %71, %70 ], [ %87, %163 ]
  %169 = add i64 %166, -1
  %170 = and i64 %166, 7
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %165, %172
  %173 = phi i64 [ %178, %172 ], [ %166, %165 ]
  %174 = phi i16* [ %180, %172 ], [ %167, %165 ]
  %175 = phi i16* [ %179, %172 ], [ %168, %165 ]
  %176 = phi i64 [ %181, %172 ], [ %170, %165 ]
  %177 = load i16, i16* %174, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %173, -1
  %179 = getelementptr inbounds i16, i16* %175, i64 1
  %180 = getelementptr inbounds i16, i16* %174, i64 1
  %181 = add i64 %176, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !68

183:                                              ; preds = %172, %165
  %184 = phi i64 [ %166, %165 ], [ %178, %172 ]
  %185 = phi i16* [ %167, %165 ], [ %180, %172 ]
  %186 = phi i16* [ %168, %165 ], [ %179, %172 ]
  %187 = icmp ult i64 %169, 7
  br i1 %187, label %218, label %188

188:                                              ; preds = %183, %188
  %189 = phi i64 [ %214, %188 ], [ %184, %183 ]
  %190 = phi i16* [ %216, %188 ], [ %185, %183 ]
  %191 = phi i16* [ %215, %188 ], [ %186, %183 ]
  %192 = load i16, i16* %190, align 2
  store i16 %192, i16* %191, align 2
  %193 = getelementptr inbounds i16, i16* %191, i64 1
  %194 = getelementptr inbounds i16, i16* %190, i64 1
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %191, i64 2
  %197 = getelementptr inbounds i16, i16* %190, i64 2
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %191, i64 3
  %200 = getelementptr inbounds i16, i16* %190, i64 3
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %191, i64 4
  %203 = getelementptr inbounds i16, i16* %190, i64 4
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %191, i64 5
  %206 = getelementptr inbounds i16, i16* %190, i64 5
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %191, i64 6
  %209 = getelementptr inbounds i16, i16* %190, i64 6
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %191, i64 7
  %212 = getelementptr inbounds i16, i16* %190, i64 7
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %189, -8
  %215 = getelementptr inbounds i16, i16* %191, i64 8
  %216 = getelementptr inbounds i16, i16* %190, i64 8
  %217 = icmp eq i64 %214, 0
  br i1 %217, label %218, label %188, !llvm.loop !69

218:                                              ; preds = %183, %188, %163, %39
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %221 = icmp eq %"class.std::__1::basic_string"* %219, %26
  br i1 %221, label %222, label %32

222:                                              ; preds = %218
  %223 = ptrtoint %"class.std::__1::basic_string"* %220 to i64
  br label %224

224:                                              ; preds = %16, %222
  %225 = phi i64 [ %28, %16 ], [ %223, %222 ]
  store i64 %225, i64* %27, align 8
  br label %226

226:                                              ; preds = %2, %224
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_113LengthGreaterERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) #6 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp ugt i64 %10, %18
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData17HistoryIDsForTermERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.base::internal::flat_tree.517"* noalias sret, %class.URLIndexPrivateData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.678", align 8
  %5 = alloca %"class.std::__1::tuple.626", align 1
  %6 = alloca %"class.std::__1::tuple.678", align 8
  %7 = alloca %"class.std::__1::tuple.626", align 1
  %8 = alloca %"class.std::__1::tuple.678", align 8
  %9 = alloca %"class.std::__1::tuple.626", align 1
  %10 = alloca %"class.base::internal::flat_tree.520", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.base::internal::flat_tree.522", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.base::internal::flat_tree.522", align 8
  %17 = alloca %"class.base::internal::flat_tree.522", align 8
  %18 = alloca %"class.base::internal::flat_tree.520", align 8
  %19 = alloca %"class.base::internal::flat_tree.520", align 8
  %20 = alloca %"class.base::internal::flat_tree.522", align 8
  %21 = alloca %"class.std::__1::vector.428", align 8
  %22 = alloca %"class.base::internal::flat_tree.517", align 16
  %23 = alloca %"struct.URLIndexPrivateData::SearchTermCacheItem", align 8
  %24 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %3
  %34 = bitcast %"class.base::internal::flat_tree.517"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false)
  br label %1209

35:                                               ; preds = %3
  %36 = bitcast %"class.base::internal::flat_tree.520"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #19
  %37 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %10, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %10, i64 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #19
  %40 = icmp ne i64 %31, 1
  br i1 %40, label %41, label %870

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #19
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  %47 = load i16*, i16** %45, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %49 = select i1 %27, i16* %47, i16* %48
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %11, i16* %49, i64 %31) #19
  %50 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2
  %51 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %52 = ptrtoint %"class.std::__1::__tree_end_node"* %51 to i64
  %53 = bitcast %"class.std::__1::map"* %50 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = inttoptr i64 %54 to %"class.std::__1::__tree_end_node"*
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %51, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %61 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  br label %252

68:                                               ; preds = %356, %41
  %69 = phi i64 [ %52, %41 ], [ %329, %356 ]
  %70 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #19
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %73 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  %74 = load i8, i8* %25, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %68
  %77 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 %77, i64 24, i1 false) #19
  br label %249

78:                                               ; preds = %68
  %79 = load i16*, i16** %45, align 8
  %80 = load i64, i64* %28, align 8
  %81 = icmp ult i64 %80, 11
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %84 = trunc i64 %80 to i8
  %85 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %85, i64 0, i32 1, i32 1
  store i8 %84, i8* %86, align 1
  br label %102

87:                                               ; preds = %78
  %88 = icmp ugt i64 %80, 9223372036854775791
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %90) #21
  unreachable

91:                                               ; preds = %87
  %92 = add nuw nsw i64 %80, 8
  %93 = and i64 %92, -8
  %94 = icmp slt i64 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  call void @abort() #21
  unreachable

96:                                               ; preds = %91
  %97 = shl i64 %93, 1
  %98 = call i8* @_Znwm(i64 %97) #20
  %99 = bitcast i8* %98 to i16*
  %100 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  store i8* %98, i8** %100, align 8
  %101 = or i64 %93, -9223372036854775808
  store i64 %101, i64* %72, align 8
  store i64 %80, i64* %71, align 8
  br label %102

102:                                              ; preds = %96, %82
  %103 = phi i16* [ %83, %82 ], [ %99, %96 ]
  %104 = add nuw nsw i64 %80, 1
  %105 = add i64 %80, 1
  %106 = icmp ult i64 %105, 16
  br i1 %106, label %196, label %107

107:                                              ; preds = %102
  %108 = add i64 %80, 1
  %109 = getelementptr i16, i16* %103, i64 %108
  %110 = getelementptr i16, i16* %79, i64 %108
  %111 = icmp ult i16* %103, %110
  %112 = icmp ult i16* %79, %109
  %113 = and i1 %111, %112
  br i1 %113, label %196, label %114

114:                                              ; preds = %107
  %115 = and i64 %105, -16
  %116 = sub i64 %104, %115
  %117 = getelementptr i16, i16* %79, i64 %115
  %118 = getelementptr i16, i16* %103, i64 %115
  %119 = add i64 %115, -16
  %120 = lshr exact i64 %119, 4
  %121 = add nuw nsw i64 %120, 1
  %122 = and i64 %121, 3
  %123 = icmp ult i64 %119, 48
  br i1 %123, label %175, label %124

124:                                              ; preds = %114
  %125 = sub nsw i64 %121, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %172, %126 ]
  %128 = phi i64 [ %125, %124 ], [ %173, %126 ]
  %129 = getelementptr i16, i16* %79, i64 %127
  %130 = getelementptr i16, i16* %103, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !70
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !70
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !73, !noalias !70
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !73, !noalias !70
  %139 = or i64 %127, 16
  %140 = getelementptr i16, i16* %79, i64 %139
  %141 = getelementptr i16, i16* %103, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !70
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !70
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !73, !noalias !70
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !73, !noalias !70
  %150 = or i64 %127, 32
  %151 = getelementptr i16, i16* %79, i64 %150
  %152 = getelementptr i16, i16* %103, i64 %150
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !70
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !70
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !73, !noalias !70
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !73, !noalias !70
  %161 = or i64 %127, 48
  %162 = getelementptr i16, i16* %79, i64 %161
  %163 = getelementptr i16, i16* %103, i64 %161
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !70
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !70
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !73, !noalias !70
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !73, !noalias !70
  %172 = add i64 %127, 64
  %173 = add i64 %128, -4
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %126, !llvm.loop !75

175:                                              ; preds = %126, %114
  %176 = phi i64 [ 0, %114 ], [ %172, %126 ]
  %177 = icmp eq i64 %122, 0
  br i1 %177, label %194, label %178

178:                                              ; preds = %175, %178
  %179 = phi i64 [ %191, %178 ], [ %176, %175 ]
  %180 = phi i64 [ %192, %178 ], [ %122, %175 ]
  %181 = getelementptr i16, i16* %79, i64 %179
  %182 = getelementptr i16, i16* %103, i64 %179
  %183 = bitcast i16* %181 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !70
  %185 = getelementptr i16, i16* %181, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 2, !alias.scope !70
  %188 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %188, align 2, !alias.scope !73, !noalias !70
  %189 = getelementptr i16, i16* %182, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %187, <8 x i16>* %190, align 2, !alias.scope !73, !noalias !70
  %191 = add i64 %179, 16
  %192 = add i64 %180, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %178, !llvm.loop !76

194:                                              ; preds = %178, %175
  %195 = icmp eq i64 %105, %115
  br i1 %195, label %249, label %196

196:                                              ; preds = %194, %107, %102
  %197 = phi i64 [ %104, %107 ], [ %104, %102 ], [ %116, %194 ]
  %198 = phi i16* [ %79, %107 ], [ %79, %102 ], [ %117, %194 ]
  %199 = phi i16* [ %103, %107 ], [ %103, %102 ], [ %118, %194 ]
  %200 = add i64 %197, -1
  %201 = and i64 %197, 7
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %214, label %203

203:                                              ; preds = %196, %203
  %204 = phi i64 [ %209, %203 ], [ %197, %196 ]
  %205 = phi i16* [ %211, %203 ], [ %198, %196 ]
  %206 = phi i16* [ %210, %203 ], [ %199, %196 ]
  %207 = phi i64 [ %212, %203 ], [ %201, %196 ]
  %208 = load i16, i16* %205, align 2
  store i16 %208, i16* %206, align 2
  %209 = add i64 %204, -1
  %210 = getelementptr inbounds i16, i16* %206, i64 1
  %211 = getelementptr inbounds i16, i16* %205, i64 1
  %212 = add i64 %207, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %203, !llvm.loop !77

214:                                              ; preds = %203, %196
  %215 = phi i64 [ %197, %196 ], [ %209, %203 ]
  %216 = phi i16* [ %198, %196 ], [ %211, %203 ]
  %217 = phi i16* [ %199, %196 ], [ %210, %203 ]
  %218 = icmp ult i64 %200, 7
  br i1 %218, label %249, label %219

219:                                              ; preds = %214, %219
  %220 = phi i64 [ %245, %219 ], [ %215, %214 ]
  %221 = phi i16* [ %247, %219 ], [ %216, %214 ]
  %222 = phi i16* [ %246, %219 ], [ %217, %214 ]
  %223 = load i16, i16* %221, align 2
  store i16 %223, i16* %222, align 2
  %224 = getelementptr inbounds i16, i16* %222, i64 1
  %225 = getelementptr inbounds i16, i16* %221, i64 1
  %226 = load i16, i16* %225, align 2
  store i16 %226, i16* %224, align 2
  %227 = getelementptr inbounds i16, i16* %222, i64 2
  %228 = getelementptr inbounds i16, i16* %221, i64 2
  %229 = load i16, i16* %228, align 2
  store i16 %229, i16* %227, align 2
  %230 = getelementptr inbounds i16, i16* %222, i64 3
  %231 = getelementptr inbounds i16, i16* %221, i64 3
  %232 = load i16, i16* %231, align 2
  store i16 %232, i16* %230, align 2
  %233 = getelementptr inbounds i16, i16* %222, i64 4
  %234 = getelementptr inbounds i16, i16* %221, i64 4
  %235 = load i16, i16* %234, align 2
  store i16 %235, i16* %233, align 2
  %236 = getelementptr inbounds i16, i16* %222, i64 5
  %237 = getelementptr inbounds i16, i16* %221, i64 5
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %236, align 2
  %239 = getelementptr inbounds i16, i16* %222, i64 6
  %240 = getelementptr inbounds i16, i16* %221, i64 6
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = getelementptr inbounds i16, i16* %222, i64 7
  %243 = getelementptr inbounds i16, i16* %221, i64 7
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = add i64 %220, -8
  %246 = getelementptr inbounds i16, i16* %222, i64 8
  %247 = getelementptr inbounds i16, i16* %221, i64 8
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %249, label %219, !llvm.loop !78

249:                                              ; preds = %214, %219, %194, %76
  %250 = inttoptr i64 %69 to %"class.std::__1::__tree_end_node"*
  %251 = icmp eq %"class.std::__1::__tree_end_node"* %51, %250
  br i1 %251, label %461, label %360

252:                                              ; preds = %57, %356
  %253 = phi i64 [ %52, %57 ], [ %329, %356 ]
  %254 = phi i64 [ %54, %57 ], [ %358, %356 ]
  %255 = load i8, i8* %59, align 1
  %256 = icmp slt i8 %255, 0
  %257 = load i16*, i16** %43, align 8
  %258 = select i1 %256, i16* %257, i16* %60
  %259 = load i64, i64* %44, align 8
  %260 = zext i8 %255 to i64
  %261 = select i1 %256, i64 %259, i64 %260
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #19
  %262 = inttoptr i64 %254 to %"class.std::__1::__tree_node"*
  %263 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 1, i32 0, i32 0
  %264 = bitcast %"class.std::__1::basic_string"* %263 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %264, i64 0, i32 1, i32 1
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load i16*, i16** %268, align 8
  %270 = bitcast %"class.std::__1::basic_string"* %263 to i16*
  %271 = select i1 %267, i16* %269, i16* %270
  %272 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %273 = load i64, i64* %272, align 8
  %274 = zext i8 %266 to i64
  %275 = select i1 %267, i64 %273, i64 %274
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %12, i16* %271, i64 %275) #19
  %276 = load i8, i8* %63, align 1
  %277 = icmp slt i8 %276, 0
  %278 = load i16*, i16** %64, align 8
  %279 = select i1 %277, i16* %278, i16* %65
  %280 = load i64, i64* %66, align 8
  %281 = zext i8 %276 to i64
  %282 = select i1 %277, i64 %280, i64 %281
  %283 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %258, i64 %261, i16* %279, i64 %282, i32 0) #19
  br i1 %283, label %284, label %322

284:                                              ; preds = %252
  %285 = inttoptr i64 %253 to %"class.std::__1::__tree_end_node"*
  %286 = icmp eq %"class.std::__1::__tree_end_node"* %51, %285
  br i1 %286, label %315, label %287

287:                                              ; preds = %284
  %288 = load i8, i8* %265, align 1
  %289 = icmp slt i8 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %287
  %291 = load i64, i64* %272, align 8
  br label %294

292:                                              ; preds = %287
  %293 = zext i8 %288 to i64
  br label %294

294:                                              ; preds = %290, %292
  %295 = phi i64 [ %291, %290 ], [ %293, %292 ]
  %296 = inttoptr i64 %253 to %"class.std::__1::__tree_node"*
  %297 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %296, i64 0, i32 1, i32 0, i32 0
  %298 = bitcast %"class.std::__1::basic_string"* %297 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %298, i64 0, i32 1, i32 1
  %300 = load i8, i8* %299, align 1
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %294
  %303 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %296, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %304 = load i64, i64* %303, align 8
  br label %307

305:                                              ; preds = %294
  %306 = zext i8 %300 to i64
  br label %307

307:                                              ; preds = %302, %305
  %308 = phi i64 [ %304, %302 ], [ %306, %305 ]
  %309 = icmp ugt i64 %295, %308
  %310 = load i8, i8* %63, align 1
  %311 = icmp slt i8 %310, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %307
  %313 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %313) #20
  br label %314

314:                                              ; preds = %307, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #19
  br i1 %309, label %321, label %328

315:                                              ; preds = %284
  %316 = load i8, i8* %63, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %315
  %319 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %319) #20
  br label %320

320:                                              ; preds = %315, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #19
  br label %321

321:                                              ; preds = %320, %314
  br label %328

322:                                              ; preds = %252
  %323 = load i8, i8* %63, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %322
  %326 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %326) #20
  br label %327

327:                                              ; preds = %322, %325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #19
  br label %328

328:                                              ; preds = %314, %321, %327
  %329 = phi i64 [ %254, %321 ], [ %253, %314 ], [ %253, %327 ]
  %330 = inttoptr i64 %254 to %"class.std::__1::__tree_node_base"*
  %331 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %330, i64 0, i32 1
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, null
  br i1 %333, label %334, label %340

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %330, i64 0, i32 2
  %336 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %335, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %336, i64 0, i32 0
  %338 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %337, align 8
  %339 = icmp eq %"class.std::__1::__tree_node_base"* %338, %330
  br i1 %339, label %356, label %347

340:                                              ; preds = %328, %340
  %341 = phi %"class.std::__1::__tree_node_base"* [ %343, %340 ], [ %332, %328 ]
  %342 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %341, i64 0, i32 0, i32 0
  %343 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %342, align 8
  %344 = icmp eq %"class.std::__1::__tree_node_base"* %343, null
  br i1 %344, label %345, label %340

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %341, i64 0, i32 0
  br label %356

347:                                              ; preds = %334, %347
  %348 = phi %"class.std::__1::__tree_end_node"** [ %351, %347 ], [ %335, %334 ]
  %349 = bitcast %"class.std::__1::__tree_end_node"** %348 to %"class.std::__1::__tree_node_base"**
  %350 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %349, align 8
  %351 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %350, i64 0, i32 2
  %352 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %351, align 8
  %353 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %352, i64 0, i32 0
  %354 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %353, align 8
  %355 = icmp eq %"class.std::__1::__tree_node_base"* %354, %350
  br i1 %355, label %356, label %347

356:                                              ; preds = %347, %334, %345
  %357 = phi %"class.std::__1::__tree_end_node"* [ %346, %345 ], [ %336, %334 ], [ %352, %347 ]
  %358 = ptrtoint %"class.std::__1::__tree_end_node"* %357 to i64
  %359 = icmp eq %"class.std::__1::__tree_end_node"* %51, %357
  br i1 %359, label %68, label %252

360:                                              ; preds = %249
  %361 = inttoptr i64 %69 to %"class.std::__1::__tree_node"*
  %362 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0
  %363 = getelementptr inbounds %"struct.std::__1::pair.521", %"struct.std::__1::pair.521"* %362, i64 0, i32 0
  %364 = bitcast %"struct.std::__1::pair.521"* %362 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %365 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %364, i64 0, i32 1, i32 1
  %366 = load i8, i8* %365, align 1
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %371

368:                                              ; preds = %360
  %369 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %370 = load i64, i64* %369, align 8
  br label %373

371:                                              ; preds = %360
  %372 = zext i8 %366 to i64
  br label %373

373:                                              ; preds = %368, %371
  %374 = phi i64 [ %370, %368 ], [ %372, %371 ]
  %375 = icmp eq i64 %374, %31
  br i1 %375, label %376, label %415

376:                                              ; preds = %373
  %377 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 1, i32 2
  store i8 1, i8* %377, align 8
  %378 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 1, i32 1
  %379 = bitcast %"class.base::internal::flat_tree.517"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %379, i8 0, i64 24, i1 false) #19
  %380 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %381 = bitcast i64** %380 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"class.base::internal::flat_tree.517"* %378 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = sub i64 %382, %384
  %386 = ashr exact i64 %385, 3
  %387 = icmp eq i64 %385, 0
  br i1 %387, label %846, label %388

388:                                              ; preds = %376
  %389 = icmp ugt i64 %386, 2305843009213693951
  br i1 %389, label %390, label %392

390:                                              ; preds = %388
  %391 = bitcast %"class.base::internal::flat_tree.517"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %391) #21
  unreachable

392:                                              ; preds = %388
  %393 = call i8* @_Znwm(i64 %385) #20
  %394 = bitcast i8* %393 to i64*
  %395 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %0, i64 0, i32 0, i32 0, i32 1
  %396 = bitcast i64** %395 to i8**
  store i8* %393, i8** %396, align 8
  %397 = bitcast %"class.base::internal::flat_tree.517"* %0 to i8**
  store i8* %393, i8** %397, align 8
  %398 = getelementptr inbounds i64, i64* %394, i64 %386
  %399 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %398, i64** %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %378, i64 0, i32 0, i32 0, i32 0
  %401 = load i64*, i64** %400, align 8
  %402 = load i64, i64* %381, align 8
  %403 = bitcast i64** %395 to i64*
  %404 = ptrtoint i8* %393 to i64
  %405 = ptrtoint i64* %401 to i64
  %406 = sub i64 %402, %405
  %407 = icmp sgt i64 %406, 0
  br i1 %407, label %408, label %413

408:                                              ; preds = %392
  %409 = lshr exact i64 %406, 3
  %410 = bitcast i64* %401 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %393, i8* align 8 %410, i64 %406, i1 false) #19
  %411 = getelementptr inbounds i64, i64* %394, i64 %409
  %412 = ptrtoint i64* %411 to i64
  br label %413

413:                                              ; preds = %408, %392
  %414 = phi i64 [ %412, %408 ], [ %404, %392 ]
  store i64 %414, i64* %403, align 8
  br label %846

415:                                              ; preds = %373
  %416 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %417, %419
  br i1 %420, label %421, label %435

421:                                              ; preds = %415
  %422 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %50, i64 0, i32 0
  %423 = bitcast %"class.std::__1::tuple.678"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #19
  %424 = getelementptr inbounds %"class.std::__1::tuple.678", %"class.std::__1::tuple.678"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %424, align 8
  %425 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %425) #19
  %426 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %422, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.678"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %7) #19
  %427 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %426, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %425) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #19
  %428 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 7
  %429 = bitcast %"class.std::__1::__tree_end_node"* %428 to %"class.std::__1::vector.420"*
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"* %429, i64* null, i64* null) #19
  %430 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 10
  %431 = bitcast %"class.std::__1::__tree_end_node"* %430 to %"class.std::__1::vector.428"*
  call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.428"* %431, i64* null, i64* null) #19
  %432 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 13
  %433 = bitcast %"class.std::__1::__tree_end_node"* %432 to i8*
  store i8 1, i8* %433, align 8
  %434 = bitcast %"class.base::internal::flat_tree.517"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %434, i8 0, i64 24, i1 false)
  br label %846

435:                                              ; preds = %415
  %436 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 1, i32 0
  %437 = icmp eq %"class.base::internal::flat_tree.520"* %10, %436
  br i1 %437, label %444, label %438

438:                                              ; preds = %435
  %439 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %10, i64 0, i32 0
  %440 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %436, i64 0, i32 0, i32 0, i32 0
  %441 = load i64*, i64** %440, align 8
  %442 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %443 = load i64*, i64** %442, align 8
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"* nonnull %439, i64* %441, i64* %443) #19
  br label %444

444:                                              ; preds = %435, %438
  %445 = bitcast %"class.base::internal::flat_tree.522"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #19
  call void @_Z21Char16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEE(%"class.base::internal::flat_tree.522"* nonnull sret %14, %"class.std::__1::basic_string"* dereferenceable(24) %363) #19
  %446 = bitcast %"class.base::internal::flat_tree.522"* %14 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %14, i64 0, i32 0, i32 0, i32 1
  %449 = bitcast i16** %448 to i64*
  %450 = load i64, i64* %449, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #19
  %451 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #19
  %452 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator.8"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %15, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %374, i64 -1, %"class.std::__1::allocator.8"* dereferenceable(1) %452) #19
  %453 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %453, i64 0, i32 1, i32 1
  %455 = load i8, i8* %454, align 1
  %456 = icmp slt i8 %455, 0
  br i1 %456, label %457, label %460

457:                                              ; preds = %444
  %458 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %459 = load i8*, i8** %458, align 8
  call void @_ZdlPv(i8* %459) #20
  br label %460

460:                                              ; preds = %444, %457
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %451, i64 24, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #19
  br label %461

461:                                              ; preds = %249, %460
  %462 = phi i64 [ %450, %460 ], [ 0, %249 ]
  %463 = phi i64 [ %447, %460 ], [ 0, %249 ]
  %464 = bitcast %"class.base::internal::flat_tree.522"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %464) #19
  %465 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %16, i64 0, i32 0, i32 0, i32 0
  %466 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %16, i64 0, i32 0, i32 0, i32 1
  %467 = bitcast %"class.base::internal::flat_tree.522"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %467, i8 -86, i64 24, i1 false)
  call void @_Z21Char16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEE(%"class.base::internal::flat_tree.522"* nonnull sret %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #19
  %468 = bitcast %"class.base::internal::flat_tree.522"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %468) #19
  %469 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %17, i64 0, i32 0, i32 0, i32 0
  %470 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %17, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %468, i8 0, i64 24, i1 false) #19, !alias.scope !79
  %471 = load i16*, i16** %465, align 8, !noalias !79
  %472 = load i16*, i16** %466, align 8, !noalias !79
  %473 = inttoptr i64 %462 to i16*
  %474 = icmp eq i16* %471, %472
  br i1 %474, label %509, label %475

475:                                              ; preds = %461
  %476 = inttoptr i64 %463 to i16*
  br label %477

477:                                              ; preds = %504, %475
  %478 = phi i16* [ %507, %504 ], [ %471, %475 ]
  %479 = phi i16* [ %506, %504 ], [ null, %475 ]
  %480 = phi i16* [ %505, %504 ], [ %476, %475 ]
  %481 = icmp eq i16* %480, %473
  br i1 %481, label %482, label %490

482:                                              ; preds = %477, %482
  %483 = phi i16* [ %488, %482 ], [ %478, %477 ]
  %484 = phi i16* [ %487, %482 ], [ %479, %477 ]
  %485 = call { i16*, i8 } @_ZN4base8internal9flat_treeIDsNS_8identityENSt3__14lessIvEENS3_6vectorIDsNS3_9allocatorIDsEEEEE21emplace_hint_key_argsIDsJRKDsEEENS3_4pairINS3_11__wrap_iterIPDsEEbEENSF_IPSC_EERKT_DpOT0_(%"class.base::internal::flat_tree.522"* nonnull %17, i16* %484, i16* dereferenceable(2) %483, i16* dereferenceable(2) %483) #19
  %486 = extractvalue { i16*, i8 } %485, 0
  %487 = getelementptr inbounds i16, i16* %486, i64 1
  %488 = getelementptr inbounds i16, i16* %483, i64 1
  %489 = icmp eq i16* %488, %472
  br i1 %489, label %509, label %482

490:                                              ; preds = %477
  %491 = load i16, i16* %478, align 2
  %492 = load i16, i16* %480, align 2
  %493 = icmp ult i16 %491, %492
  br i1 %493, label %494, label %499

494:                                              ; preds = %490
  %495 = call { i16*, i8 } @_ZN4base8internal9flat_treeIDsNS_8identityENSt3__14lessIvEENS3_6vectorIDsNS3_9allocatorIDsEEEEE21emplace_hint_key_argsIDsJRKDsEEENS3_4pairINS3_11__wrap_iterIPDsEEbEENSF_IPSC_EERKT_DpOT0_(%"class.base::internal::flat_tree.522"* nonnull %17, i16* %479, i16* dereferenceable(2) %478, i16* dereferenceable(2) %478) #19
  %496 = extractvalue { i16*, i8 } %495, 0
  %497 = getelementptr inbounds i16, i16* %496, i64 1
  %498 = getelementptr inbounds i16, i16* %478, i64 1
  br label %504

499:                                              ; preds = %490
  %500 = icmp ult i16 %492, %491
  %501 = getelementptr inbounds i16, i16* %478, i64 1
  %502 = select i1 %500, i16* %478, i16* %501
  %503 = getelementptr inbounds i16, i16* %480, i64 1
  br label %504

504:                                              ; preds = %499, %494
  %505 = phi i16* [ %480, %494 ], [ %503, %499 ]
  %506 = phi i16* [ %497, %494 ], [ %479, %499 ]
  %507 = phi i16* [ %498, %494 ], [ %502, %499 ]
  %508 = icmp eq i16* %507, %472
  br i1 %508, label %509, label %477

509:                                              ; preds = %504, %482, %461
  %510 = load i16*, i16** %469, align 8
  %511 = load i16*, i16** %470, align 8
  %512 = icmp eq i16* %510, %511
  br i1 %512, label %635, label %513

513:                                              ; preds = %509
  %514 = bitcast %"class.base::internal::flat_tree.520"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #19
  %515 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %18, i64 0, i32 0, i32 0, i32 0
  %516 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %18, i64 0, i32 0, i32 0, i32 1
  %517 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %18, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %518 = bitcast %"class.base::internal::flat_tree.520"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %518, i8 -86, i64 24, i1 false)
  call void @_ZN19URLIndexPrivateData21WordIDSetForTermCharsERKN4base8internal9flat_treeIDsNS0_8identityENSt3__14lessIvEENS4_6vectorIDsNS4_9allocatorIDsEEEEEE(%"class.base::internal::flat_tree.520"* nonnull sret %18, %class.URLIndexPrivateData* %1, %"class.base::internal::flat_tree.522"* nonnull dereferenceable(24) %17)
  %519 = load i64*, i64** %515, align 8
  %520 = load i64*, i64** %516, align 8
  %521 = icmp eq i64* %519, %520
  %522 = ptrtoint i64* %519 to i64
  %523 = ptrtoint i64* %520 to i64
  br i1 %521, label %524, label %538

524:                                              ; preds = %513
  %525 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %50, i64 0, i32 0
  %526 = bitcast %"class.std::__1::tuple.678"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %526) #19
  %527 = getelementptr inbounds %"class.std::__1::tuple.678", %"class.std::__1::tuple.678"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %527, align 8
  %528 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %528) #19
  %529 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %525, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.678"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %5) #19
  %530 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %529, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %528) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %526) #19
  %531 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %530, i64 7
  %532 = bitcast %"class.std::__1::__tree_end_node"* %531 to %"class.std::__1::vector.420"*
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"* %532, i64* null, i64* null) #19
  %533 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %530, i64 10
  %534 = bitcast %"class.std::__1::__tree_end_node"* %533 to %"class.std::__1::vector.428"*
  call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.428"* %534, i64* null, i64* null) #19
  %535 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %530, i64 13
  %536 = bitcast %"class.std::__1::__tree_end_node"* %535 to i8*
  store i8 1, i8* %536, align 8
  %537 = bitcast %"class.base::internal::flat_tree.517"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %537, i8 0, i64 24, i1 false)
  br label %625

538:                                              ; preds = %513
  %539 = inttoptr i64 %463 to i16*
  %540 = icmp eq i16* %539, %473
  %541 = load i64*, i64** %37, align 8
  br i1 %540, label %542, label %556

542:                                              ; preds = %538
  %543 = icmp eq i64* %541, null
  br i1 %543, label %544, label %546

544:                                              ; preds = %542
  %545 = bitcast i64** %38 to i64*
  br label %550

546:                                              ; preds = %542
  %547 = ptrtoint i64* %541 to i64
  %548 = bitcast i64** %38 to i64*
  store i64 %547, i64* %548, align 8
  %549 = bitcast i64* %541 to i8*
  call void @_ZdlPv(i8* %549) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #19
  br label %550

550:                                              ; preds = %544, %546
  %551 = phi i64* [ %545, %544 ], [ %548, %546 ]
  %552 = bitcast %"class.base::internal::flat_tree.520"* %10 to i64*
  store i64 %522, i64* %552, align 8
  store i64 %523, i64* %551, align 8
  %553 = bitcast i64** %517 to i64*
  %554 = load i64, i64* %553, align 8
  %555 = bitcast i64** %39 to i64*
  store i64 %554, i64* %555, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %514, i8 0, i64 24, i1 false) #19
  br label %625

556:                                              ; preds = %538
  %557 = load i64*, i64** %38, align 8
  %558 = icmp eq i64* %541, %557
  %559 = ptrtoint i64* %557 to i64
  br i1 %558, label %581, label %560

560:                                              ; preds = %556, %577
  %561 = phi i64* [ %578, %577 ], [ %519, %556 ]
  %562 = phi i64* [ %579, %577 ], [ %541, %556 ]
  %563 = icmp eq i64* %561, %520
  br i1 %563, label %581, label %564

564:                                              ; preds = %560
  %565 = load i64, i64* %562, align 8
  br label %566

566:                                              ; preds = %570, %564
  %567 = phi i64* [ %561, %564 ], [ %571, %570 ]
  %568 = load i64, i64* %567, align 8
  %569 = icmp ult i64 %568, %565
  br i1 %569, label %570, label %573

570:                                              ; preds = %566
  %571 = getelementptr inbounds i64, i64* %567, i64 1
  %572 = icmp eq i64* %571, %520
  br i1 %572, label %581, label %566

573:                                              ; preds = %566
  %574 = icmp ne i64* %567, %520
  %575 = icmp eq i64 %568, %565
  %576 = and i1 %574, %575
  br i1 %576, label %577, label %581

577:                                              ; preds = %573
  %578 = getelementptr inbounds i64, i64* %567, i64 1
  %579 = getelementptr inbounds i64, i64* %562, i64 1
  %580 = icmp eq i64* %579, %557
  br i1 %580, label %619, label %560

581:                                              ; preds = %573, %560, %570, %556
  %582 = phi i64* [ %519, %556 ], [ %520, %570 ], [ %567, %573 ], [ %520, %560 ]
  %583 = phi i64* [ %541, %556 ], [ %562, %570 ], [ %562, %560 ], [ %562, %573 ]
  %584 = ptrtoint i64* %583 to i64
  %585 = icmp eq i64* %583, %557
  br i1 %585, label %619, label %586

586:                                              ; preds = %581
  %587 = getelementptr inbounds i64, i64* %583, i64 1
  %588 = icmp eq i64* %587, %557
  br i1 %588, label %619, label %589

589:                                              ; preds = %586, %612
  %590 = phi i64* [ %613, %612 ], [ %582, %586 ]
  %591 = phi i64* [ %615, %612 ], [ %587, %586 ]
  %592 = phi i64 [ %614, %612 ], [ %584, %586 ]
  %593 = icmp eq i64* %590, %520
  br i1 %593, label %612, label %594

594:                                              ; preds = %589
  %595 = load i64, i64* %591, align 8
  br label %596

596:                                              ; preds = %600, %594
  %597 = phi i64* [ %601, %600 ], [ %590, %594 ]
  %598 = load i64, i64* %597, align 8
  %599 = icmp ult i64 %598, %595
  br i1 %599, label %600, label %603

600:                                              ; preds = %596
  %601 = getelementptr inbounds i64, i64* %597, i64 1
  %602 = icmp eq i64* %601, %520
  br i1 %602, label %612, label %596

603:                                              ; preds = %596
  %604 = icmp ne i64* %597, %520
  %605 = icmp eq i64 %598, %595
  %606 = and i1 %604, %605
  br i1 %606, label %607, label %612

607:                                              ; preds = %603
  %608 = getelementptr inbounds i64, i64* %597, i64 1
  %609 = inttoptr i64 %592 to i64*
  store i64 %595, i64* %609, align 8
  %610 = getelementptr inbounds i64, i64* %609, i64 1
  %611 = ptrtoint i64* %610 to i64
  br label %612

612:                                              ; preds = %600, %607, %603, %589
  %613 = phi i64* [ %520, %589 ], [ %608, %607 ], [ %597, %603 ], [ %520, %600 ]
  %614 = phi i64 [ %592, %589 ], [ %611, %607 ], [ %592, %603 ], [ %592, %600 ]
  %615 = getelementptr inbounds i64, i64* %591, i64 1
  %616 = icmp eq i64* %615, %557
  br i1 %616, label %617, label %589

617:                                              ; preds = %612
  %618 = load i64*, i64** %38, align 8
  br label %619

619:                                              ; preds = %577, %617, %586, %581
  %620 = phi i64* [ %618, %617 ], [ %557, %581 ], [ %557, %586 ], [ %557, %577 ]
  %621 = phi i64 [ %614, %617 ], [ %584, %581 ], [ %584, %586 ], [ %559, %577 ]
  %622 = inttoptr i64 %621 to i64*
  %623 = icmp eq i64* %620, %622
  br i1 %623, label %625, label %624

624:                                              ; preds = %619
  store i64* %622, i64** %38, align 8
  br label %625

625:                                              ; preds = %624, %619, %550, %524
  %626 = phi i32 [ 1, %524 ], [ 0, %550 ], [ 0, %619 ], [ 0, %624 ]
  %627 = load i64*, i64** %515, align 8
  %628 = icmp eq i64* %627, null
  br i1 %628, label %633, label %629

629:                                              ; preds = %625
  %630 = ptrtoint i64* %627 to i64
  %631 = bitcast i64** %516 to i64*
  store i64 %630, i64* %631, align 8
  %632 = bitcast i64* %627 to i8*
  call void @_ZdlPv(i8* %632) #20
  br label %633

633:                                              ; preds = %625, %629
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #19
  %634 = icmp eq i32 %626, 0
  br i1 %634, label %635, label %830

635:                                              ; preds = %633, %509
  %636 = load i64*, i64** %37, align 8
  %637 = load i64*, i64** %38, align 8
  %638 = icmp eq i64* %636, %637
  br i1 %638, label %724, label %639

639:                                              ; preds = %635
  %640 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 6, i32 0, i32 0
  %641 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %640, align 8
  %642 = load i8, i8* %25, align 1
  %643 = icmp slt i8 %642, 0
  %644 = load i16*, i16** %45, align 8
  %645 = load i64, i64* %28, align 8
  %646 = zext i8 %642 to i64
  %647 = select i1 %643, i16* %644, i16* %48
  %648 = select i1 %643, i64 %645, i64 %646
  %649 = icmp eq i64 %648, 0
  %650 = shl nuw i64 %648, 1
  %651 = ashr exact i64 %650, 1
  br label %652

652:                                              ; preds = %721, %639
  %653 = phi i64* [ %636, %639 ], [ %722, %721 ]
  %654 = load i64, i64* %653, align 8
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %641, i64 %654
  %656 = bitcast %"class.std::__1::basic_string"* %655 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %657 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %656, i64 0, i32 1, i32 1
  %658 = load i8, i8* %657, align 1
  %659 = icmp slt i8 %658, 0
  br i1 %659, label %660, label %665

660:                                              ; preds = %652
  %661 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %655, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %662 = load i16*, i16** %661, align 8
  %663 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %641, i64 %654, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %664 = load i64, i64* %663, align 8
  br label %668

665:                                              ; preds = %652
  %666 = bitcast %"class.std::__1::basic_string"* %655 to i16*
  %667 = zext i8 %658 to i64
  br label %668

668:                                              ; preds = %665, %660
  %669 = phi i16* [ %662, %660 ], [ %666, %665 ]
  %670 = phi i64 [ %664, %660 ], [ %667, %665 ]
  br i1 %649, label %721, label %671

671:                                              ; preds = %668
  %672 = getelementptr inbounds i16, i16* %669, i64 %670
  %673 = ptrtoint i16* %672 to i64
  %674 = ptrtoint i16* %669 to i64
  %675 = shl nuw i64 %670, 1
  %676 = ashr exact i64 %675, 1
  %677 = icmp slt i64 %676, %651
  br i1 %677, label %724, label %678

678:                                              ; preds = %671
  %679 = load i16, i16* %647, align 2
  br label %680

680:                                              ; preds = %709, %678
  %681 = phi i64 [ %676, %678 ], [ %713, %709 ]
  %682 = phi i16* [ %669, %678 ], [ %710, %709 ]
  %683 = sub nsw i64 %681, %651
  %684 = add nsw i64 %683, 1
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %724, label %686

686:                                              ; preds = %680, %691
  %687 = phi i64 [ %693, %691 ], [ %684, %680 ]
  %688 = phi i16* [ %692, %691 ], [ %682, %680 ]
  %689 = load i16, i16* %688, align 2
  %690 = icmp eq i16 %689, %679
  br i1 %690, label %695, label %691

691:                                              ; preds = %686
  %692 = getelementptr inbounds i16, i16* %688, i64 1
  %693 = add i64 %687, -1
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %724, label %686

695:                                              ; preds = %686
  %696 = icmp eq i16* %688, null
  br i1 %696, label %724, label %697

697:                                              ; preds = %695, %704
  %698 = phi i16* [ %702, %704 ], [ %688, %695 ]
  %699 = phi i16* [ %705, %704 ], [ %647, %695 ]
  %700 = phi i64 [ %701, %704 ], [ %651, %695 ]
  %701 = add i64 %700, -1
  %702 = getelementptr inbounds i16, i16* %698, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %715, label %704

704:                                              ; preds = %697
  %705 = getelementptr inbounds i16, i16* %699, i64 1
  %706 = load i16, i16* %702, align 2
  %707 = load i16, i16* %705, align 2
  %708 = icmp eq i16 %707, %706
  br i1 %708, label %697, label %709

709:                                              ; preds = %704
  %710 = getelementptr inbounds i16, i16* %688, i64 1
  %711 = ptrtoint i16* %710 to i64
  %712 = sub i64 %673, %711
  %713 = ashr exact i64 %712, 1
  %714 = icmp slt i64 %713, %651
  br i1 %714, label %724, label %680

715:                                              ; preds = %697
  %716 = ptrtoint i16* %688 to i64
  %717 = icmp eq i16* %688, %672
  %718 = sub i64 %716, %674
  %719 = icmp eq i64 %718, -2
  %720 = or i1 %717, %719
  br i1 %720, label %724, label %721

721:                                              ; preds = %715, %668
  %722 = getelementptr inbounds i64, i64* %653, i64 1
  %723 = icmp eq i64* %722, %637
  br i1 %723, label %830, label %652

724:                                              ; preds = %715, %671, %709, %695, %680, %691, %635
  %725 = phi i64* [ %636, %635 ], [ %653, %691 ], [ %653, %680 ], [ %653, %695 ], [ %653, %709 ], [ %653, %671 ], [ %653, %715 ]
  %726 = ptrtoint i64* %725 to i64
  %727 = icmp eq i64* %725, %637
  br i1 %727, label %830, label %728

728:                                              ; preds = %724
  %729 = getelementptr inbounds i64, i64* %725, i64 1
  %730 = icmp eq i64* %729, %637
  br i1 %730, label %825, label %731

731:                                              ; preds = %728
  %732 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 6, i32 0, i32 0
  br label %733

733:                                              ; preds = %818, %731
  %734 = phi i64* [ %820, %818 ], [ %729, %731 ]
  %735 = phi i64 [ %819, %818 ], [ %726, %731 ]
  %736 = load i64, i64* %734, align 8
  %737 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %732, align 8
  %738 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %737, i64 %736
  %739 = bitcast %"class.std::__1::basic_string"* %738 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %740 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %739, i64 0, i32 1, i32 1
  %741 = load i8, i8* %740, align 1
  %742 = icmp slt i8 %741, 0
  br i1 %742, label %743, label %748

743:                                              ; preds = %733
  %744 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %738, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load i16*, i16** %744, align 8
  %746 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %737, i64 %736, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %747 = load i64, i64* %746, align 8
  br label %751

748:                                              ; preds = %733
  %749 = bitcast %"class.std::__1::basic_string"* %738 to i16*
  %750 = zext i8 %741 to i64
  br label %751

751:                                              ; preds = %748, %743
  %752 = phi i16* [ %745, %743 ], [ %749, %748 ]
  %753 = phi i64 [ %747, %743 ], [ %750, %748 ]
  %754 = load i8, i8* %25, align 1
  %755 = icmp slt i8 %754, 0
  %756 = load i16*, i16** %45, align 8
  %757 = load i64, i64* %28, align 8
  %758 = zext i8 %754 to i64
  %759 = select i1 %755, i16* %756, i16* %48
  %760 = select i1 %755, i64 %757, i64 %758
  %761 = icmp eq i64 %760, 0
  br i1 %761, label %814, label %762

762:                                              ; preds = %751
  %763 = getelementptr inbounds i16, i16* %752, i64 %753
  %764 = shl nuw i64 %760, 1
  %765 = ashr exact i64 %764, 1
  %766 = ptrtoint i16* %763 to i64
  %767 = ptrtoint i16* %752 to i64
  %768 = shl nuw i64 %753, 1
  %769 = ashr exact i64 %768, 1
  %770 = icmp slt i64 %769, %765
  br i1 %770, label %818, label %771

771:                                              ; preds = %762
  %772 = load i16, i16* %759, align 2
  br label %773

773:                                              ; preds = %802, %771
  %774 = phi i64 [ %769, %771 ], [ %806, %802 ]
  %775 = phi i16* [ %752, %771 ], [ %803, %802 ]
  %776 = sub nsw i64 %774, %765
  %777 = add nsw i64 %776, 1
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %818, label %779

779:                                              ; preds = %773, %784
  %780 = phi i64 [ %786, %784 ], [ %777, %773 ]
  %781 = phi i16* [ %785, %784 ], [ %775, %773 ]
  %782 = load i16, i16* %781, align 2
  %783 = icmp eq i16 %782, %772
  br i1 %783, label %788, label %784

784:                                              ; preds = %779
  %785 = getelementptr inbounds i16, i16* %781, i64 1
  %786 = add i64 %780, -1
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %818, label %779

788:                                              ; preds = %779
  %789 = icmp eq i16* %781, null
  br i1 %789, label %818, label %790

790:                                              ; preds = %788, %797
  %791 = phi i16* [ %795, %797 ], [ %781, %788 ]
  %792 = phi i16* [ %798, %797 ], [ %759, %788 ]
  %793 = phi i64 [ %794, %797 ], [ %765, %788 ]
  %794 = add i64 %793, -1
  %795 = getelementptr inbounds i16, i16* %791, i64 1
  %796 = icmp eq i64 %794, 0
  br i1 %796, label %808, label %797

797:                                              ; preds = %790
  %798 = getelementptr inbounds i16, i16* %792, i64 1
  %799 = load i16, i16* %795, align 2
  %800 = load i16, i16* %798, align 2
  %801 = icmp eq i16 %800, %799
  br i1 %801, label %790, label %802

802:                                              ; preds = %797
  %803 = getelementptr inbounds i16, i16* %781, i64 1
  %804 = ptrtoint i16* %803 to i64
  %805 = sub i64 %766, %804
  %806 = ashr exact i64 %805, 1
  %807 = icmp slt i64 %806, %765
  br i1 %807, label %818, label %773

808:                                              ; preds = %790
  %809 = ptrtoint i16* %781 to i64
  %810 = icmp eq i16* %781, %763
  %811 = sub i64 %809, %767
  %812 = icmp eq i64 %811, -2
  %813 = or i1 %810, %812
  br i1 %813, label %818, label %814

814:                                              ; preds = %808, %751
  %815 = inttoptr i64 %735 to i64*
  store i64 %736, i64* %815, align 8
  %816 = getelementptr inbounds i64, i64* %815, i64 1
  %817 = ptrtoint i64* %816 to i64
  br label %818

818:                                              ; preds = %802, %788, %773, %784, %814, %808, %762
  %819 = phi i64 [ %735, %808 ], [ %817, %814 ], [ %735, %762 ], [ %735, %784 ], [ %735, %773 ], [ %735, %788 ], [ %735, %802 ]
  %820 = getelementptr inbounds i64, i64* %734, i64 1
  %821 = icmp eq i64* %820, %637
  br i1 %821, label %822, label %733

822:                                              ; preds = %818
  %823 = inttoptr i64 %819 to i64*
  %824 = load i64*, i64** %38, align 8
  br label %825

825:                                              ; preds = %822, %728
  %826 = phi i64* [ %637, %728 ], [ %824, %822 ]
  %827 = phi i64* [ %725, %728 ], [ %823, %822 ]
  %828 = icmp eq i64* %827, %826
  br i1 %828, label %830, label %829

829:                                              ; preds = %825
  store i64* %827, i64** %38, align 8
  br label %830

830:                                              ; preds = %721, %829, %825, %724, %633
  %831 = phi i32 [ 1, %633 ], [ 0, %724 ], [ 0, %825 ], [ 0, %829 ], [ 0, %721 ]
  %832 = load i16*, i16** %469, align 8
  %833 = icmp eq i16* %832, null
  br i1 %833, label %838, label %834

834:                                              ; preds = %830
  %835 = ptrtoint i16* %832 to i64
  %836 = bitcast i16** %470 to i64*
  store i64 %835, i64* %836, align 8
  %837 = bitcast i16* %832 to i8*
  call void @_ZdlPv(i8* %837) #20
  br label %838

838:                                              ; preds = %830, %834
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %468) #19
  %839 = load i16*, i16** %465, align 8
  %840 = icmp eq i16* %839, null
  br i1 %840, label %845, label %841

841:                                              ; preds = %838
  %842 = ptrtoint i16* %839 to i64
  %843 = bitcast i16** %466 to i64*
  store i64 %842, i64* %843, align 8
  %844 = bitcast i16* %839 to i8*
  call void @_ZdlPv(i8* %844) #20
  br label %845

845:                                              ; preds = %838, %841
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %464) #19
  br label %846

846:                                              ; preds = %413, %376, %421, %845
  %847 = phi i64 [ %463, %845 ], [ 0, %421 ], [ 0, %376 ], [ 0, %413 ]
  %848 = phi i32 [ %831, %845 ], [ 1, %421 ], [ 1, %376 ], [ 1, %413 ]
  %849 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %850 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %849, i64 0, i32 1, i32 1
  %851 = load i8, i8* %850, align 1
  %852 = icmp slt i8 %851, 0
  br i1 %852, label %853, label %856

853:                                              ; preds = %846
  %854 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %855 = load i8*, i8** %854, align 8
  call void @_ZdlPv(i8* %855) #20
  br label %856

856:                                              ; preds = %846, %853
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #19
  %857 = icmp eq i64 %847, 0
  br i1 %857, label %860, label %858

858:                                              ; preds = %856
  %859 = inttoptr i64 %847 to i8*
  call void @_ZdlPv(i8* %859) #20
  br label %860

860:                                              ; preds = %856, %858
  %861 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %862 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %861, i64 0, i32 1, i32 1
  %863 = load i8, i8* %862, align 1
  %864 = icmp slt i8 %863, 0
  br i1 %864, label %865, label %868

865:                                              ; preds = %860
  %866 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %867 = load i8*, i8** %866, align 8
  call void @_ZdlPv(i8* %867) #20
  br label %868

868:                                              ; preds = %860, %865
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #19
  %869 = icmp eq i32 %848, 0
  br i1 %869, label %902, label %1201

870:                                              ; preds = %35
  %871 = bitcast %"class.base::internal::flat_tree.520"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %871) #19
  %872 = bitcast %"class.base::internal::flat_tree.522"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %872) #19
  call void @_Z21Char16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEE(%"class.base::internal::flat_tree.522"* nonnull sret %20, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  call void @_ZN19URLIndexPrivateData21WordIDSetForTermCharsERKN4base8internal9flat_treeIDsNS0_8identityENSt3__14lessIvEENS4_6vectorIDsNS4_9allocatorIDsEEEEEE(%"class.base::internal::flat_tree.520"* nonnull sret %19, %class.URLIndexPrivateData* %1, %"class.base::internal::flat_tree.522"* nonnull dereferenceable(24) %20)
  %873 = load i64*, i64** %37, align 8
  %874 = icmp eq i64* %873, null
  br i1 %874, label %875, label %877

875:                                              ; preds = %870
  %876 = bitcast i64** %38 to i64*
  br label %881

877:                                              ; preds = %870
  %878 = ptrtoint i64* %873 to i64
  %879 = bitcast i64** %38 to i64*
  store i64 %878, i64* %879, align 8
  %880 = bitcast i64* %873 to i8*
  call void @_ZdlPv(i8* %880) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #19
  br label %881

881:                                              ; preds = %875, %877
  %882 = phi i64* [ %876, %875 ], [ %879, %877 ]
  %883 = bitcast %"class.base::internal::flat_tree.520"* %19 to i64*
  %884 = load i64, i64* %883, align 8
  %885 = bitcast %"class.base::internal::flat_tree.520"* %10 to i64*
  store i64 %884, i64* %885, align 8
  %886 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %19, i64 0, i32 0, i32 0, i32 1
  %887 = bitcast i64** %886 to i64*
  %888 = load i64, i64* %887, align 8
  store i64 %888, i64* %882, align 8
  %889 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %19, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %890 = bitcast i64** %889 to i64*
  %891 = load i64, i64* %890, align 8
  %892 = bitcast i64** %39 to i64*
  store i64 %891, i64* %892, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %871, i8 0, i64 24, i1 false) #19
  %893 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %20, i64 0, i32 0, i32 0, i32 0
  %894 = load i16*, i16** %893, align 8
  %895 = icmp eq i16* %894, null
  br i1 %895, label %901, label %896

896:                                              ; preds = %881
  %897 = bitcast i16* %894 to i8*
  %898 = ptrtoint i16* %894 to i64
  %899 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %20, i64 0, i32 0, i32 0, i32 1
  %900 = bitcast i16** %899 to i64*
  store i64 %898, i64* %900, align 8
  call void @_ZdlPv(i8* %897) #20
  br label %901

901:                                              ; preds = %881, %896
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %872) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %871) #19
  br label %902

902:                                              ; preds = %868, %901
  %903 = bitcast %"class.std::__1::vector.428"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %903) #19
  %904 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %21, i64 0, i32 0, i32 0
  %905 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %21, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %903, i8 0, i64 24, i1 false) #19
  %906 = load i64*, i64** %37, align 8
  %907 = load i64*, i64** %38, align 8
  %908 = icmp eq i64* %906, %907
  br i1 %908, label %916, label %909

909:                                              ; preds = %902
  %910 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %911 = bitcast %"class.std::__1::__tree_end_node"* %910 to %"class.std::__1::__tree_node.583"**
  br label %1102

912:                                              ; preds = %1137
  %913 = load i64*, i64** %904, align 8
  %914 = bitcast i64* %913 to i8*
  %915 = load i64*, i64** %905, align 8
  br label %916

916:                                              ; preds = %912, %902
  %917 = phi i64* [ %915, %912 ], [ null, %902 ]
  %918 = phi i8* [ %914, %912 ], [ null, %902 ]
  %919 = phi i64* [ %913, %912 ], [ null, %902 ]
  %920 = ptrtoint i64* %919 to i64
  %921 = bitcast %"class.base::internal::flat_tree.517"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %921) #19
  %922 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %22, i64 0, i32 0, i32 0, i32 1
  %923 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %22, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %921, i8 0, i64 24, i1 false) #19
  %924 = ptrtoint i64* %917 to i64
  %925 = sub i64 %924, %920
  %926 = ashr exact i64 %925, 3
  %927 = icmp eq i64 %925, 0
  br i1 %927, label %1101, label %928

928:                                              ; preds = %916
  %929 = icmp ugt i64 %926, 2305843009213693951
  br i1 %929, label %930, label %932

930:                                              ; preds = %928
  %931 = bitcast %"class.base::internal::flat_tree.517"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %931) #21
  unreachable

932:                                              ; preds = %928
  %933 = call i8* @_Znwm(i64 %925) #20
  %934 = bitcast i8* %933 to i64*
  %935 = bitcast i64** %922 to i8**
  store i8* %933, i8** %935, align 8
  %936 = bitcast %"class.base::internal::flat_tree.517"* %22 to i8**
  store i8* %933, i8** %936, align 16
  %937 = getelementptr inbounds i64, i64* %934, i64 %926
  store i64* %937, i64** %923, align 16
  %938 = bitcast i64** %922 to i64*
  %939 = ptrtoint i8* %933 to i64
  %940 = icmp eq i64* %919, %917
  br i1 %940, label %1099, label %941

941:                                              ; preds = %932
  %942 = getelementptr i64, i64* %917, i64 -1
  %943 = ptrtoint i64* %942 to i64
  %944 = sub i64 %943, %920
  %945 = lshr i64 %944, 3
  %946 = add nuw nsw i64 %945, 1
  %947 = icmp ult i64 %946, 4
  br i1 %947, label %1043, label %948

948:                                              ; preds = %941
  %949 = getelementptr i64, i64* %917, i64 -1
  %950 = ptrtoint i64* %949 to i64
  %951 = sub i64 %950, %920
  %952 = lshr i64 %951, 3
  %953 = add i64 %951, 8
  %954 = and i64 %953, -8
  %955 = getelementptr i8, i8* %933, i64 %954
  %956 = add nuw nsw i64 %952, 1
  %957 = getelementptr i64, i64* %919, i64 %956
  %958 = bitcast i64* %957 to i8*
  %959 = icmp ult i8* %933, %958
  %960 = icmp ult i8* %918, %955
  %961 = and i1 %959, %960
  br i1 %961, label %1043, label %962

962:                                              ; preds = %948
  %963 = and i64 %946, 4611686018427387900
  %964 = getelementptr i64, i64* %934, i64 %963
  %965 = getelementptr i64, i64* %919, i64 %963
  %966 = add nsw i64 %963, -4
  %967 = lshr exact i64 %966, 2
  %968 = add nuw nsw i64 %967, 1
  %969 = and i64 %968, 3
  %970 = icmp ult i64 %966, 12
  br i1 %970, label %1022, label %971

971:                                              ; preds = %962
  %972 = sub nsw i64 %968, %969
  br label %973

973:                                              ; preds = %973, %971
  %974 = phi i64 [ 0, %971 ], [ %1019, %973 ]
  %975 = phi i64 [ %972, %971 ], [ %1020, %973 ]
  %976 = getelementptr i64, i64* %934, i64 %974
  %977 = getelementptr i64, i64* %919, i64 %974
  %978 = bitcast i64* %977 to <2 x i64>*
  %979 = load <2 x i64>, <2 x i64>* %978, align 8, !alias.scope !82
  %980 = getelementptr i64, i64* %977, i64 2
  %981 = bitcast i64* %980 to <2 x i64>*
  %982 = load <2 x i64>, <2 x i64>* %981, align 8, !alias.scope !82
  %983 = bitcast i64* %976 to <2 x i64>*
  store <2 x i64> %979, <2 x i64>* %983, align 8, !alias.scope !85, !noalias !82
  %984 = getelementptr i64, i64* %976, i64 2
  %985 = bitcast i64* %984 to <2 x i64>*
  store <2 x i64> %982, <2 x i64>* %985, align 8, !alias.scope !85, !noalias !82
  %986 = or i64 %974, 4
  %987 = getelementptr i64, i64* %934, i64 %986
  %988 = getelementptr i64, i64* %919, i64 %986
  %989 = bitcast i64* %988 to <2 x i64>*
  %990 = load <2 x i64>, <2 x i64>* %989, align 8, !alias.scope !82
  %991 = getelementptr i64, i64* %988, i64 2
  %992 = bitcast i64* %991 to <2 x i64>*
  %993 = load <2 x i64>, <2 x i64>* %992, align 8, !alias.scope !82
  %994 = bitcast i64* %987 to <2 x i64>*
  store <2 x i64> %990, <2 x i64>* %994, align 8, !alias.scope !85, !noalias !82
  %995 = getelementptr i64, i64* %987, i64 2
  %996 = bitcast i64* %995 to <2 x i64>*
  store <2 x i64> %993, <2 x i64>* %996, align 8, !alias.scope !85, !noalias !82
  %997 = or i64 %974, 8
  %998 = getelementptr i64, i64* %934, i64 %997
  %999 = getelementptr i64, i64* %919, i64 %997
  %1000 = bitcast i64* %999 to <2 x i64>*
  %1001 = load <2 x i64>, <2 x i64>* %1000, align 8, !alias.scope !82
  %1002 = getelementptr i64, i64* %999, i64 2
  %1003 = bitcast i64* %1002 to <2 x i64>*
  %1004 = load <2 x i64>, <2 x i64>* %1003, align 8, !alias.scope !82
  %1005 = bitcast i64* %998 to <2 x i64>*
  store <2 x i64> %1001, <2 x i64>* %1005, align 8, !alias.scope !85, !noalias !82
  %1006 = getelementptr i64, i64* %998, i64 2
  %1007 = bitcast i64* %1006 to <2 x i64>*
  store <2 x i64> %1004, <2 x i64>* %1007, align 8, !alias.scope !85, !noalias !82
  %1008 = or i64 %974, 12
  %1009 = getelementptr i64, i64* %934, i64 %1008
  %1010 = getelementptr i64, i64* %919, i64 %1008
  %1011 = bitcast i64* %1010 to <2 x i64>*
  %1012 = load <2 x i64>, <2 x i64>* %1011, align 8, !alias.scope !82
  %1013 = getelementptr i64, i64* %1010, i64 2
  %1014 = bitcast i64* %1013 to <2 x i64>*
  %1015 = load <2 x i64>, <2 x i64>* %1014, align 8, !alias.scope !82
  %1016 = bitcast i64* %1009 to <2 x i64>*
  store <2 x i64> %1012, <2 x i64>* %1016, align 8, !alias.scope !85, !noalias !82
  %1017 = getelementptr i64, i64* %1009, i64 2
  %1018 = bitcast i64* %1017 to <2 x i64>*
  store <2 x i64> %1015, <2 x i64>* %1018, align 8, !alias.scope !85, !noalias !82
  %1019 = add i64 %974, 16
  %1020 = add i64 %975, -4
  %1021 = icmp eq i64 %1020, 0
  br i1 %1021, label %1022, label %973, !llvm.loop !87

1022:                                             ; preds = %973, %962
  %1023 = phi i64 [ 0, %962 ], [ %1019, %973 ]
  %1024 = icmp eq i64 %969, 0
  br i1 %1024, label %1041, label %1025

1025:                                             ; preds = %1022, %1025
  %1026 = phi i64 [ %1038, %1025 ], [ %1023, %1022 ]
  %1027 = phi i64 [ %1039, %1025 ], [ %969, %1022 ]
  %1028 = getelementptr i64, i64* %934, i64 %1026
  %1029 = getelementptr i64, i64* %919, i64 %1026
  %1030 = bitcast i64* %1029 to <2 x i64>*
  %1031 = load <2 x i64>, <2 x i64>* %1030, align 8, !alias.scope !82
  %1032 = getelementptr i64, i64* %1029, i64 2
  %1033 = bitcast i64* %1032 to <2 x i64>*
  %1034 = load <2 x i64>, <2 x i64>* %1033, align 8, !alias.scope !82
  %1035 = bitcast i64* %1028 to <2 x i64>*
  store <2 x i64> %1031, <2 x i64>* %1035, align 8, !alias.scope !85, !noalias !82
  %1036 = getelementptr i64, i64* %1028, i64 2
  %1037 = bitcast i64* %1036 to <2 x i64>*
  store <2 x i64> %1034, <2 x i64>* %1037, align 8, !alias.scope !85, !noalias !82
  %1038 = add i64 %1026, 4
  %1039 = add i64 %1027, -1
  %1040 = icmp eq i64 %1039, 0
  br i1 %1040, label %1041, label %1025, !llvm.loop !88

1041:                                             ; preds = %1025, %1022
  %1042 = icmp eq i64 %946, %963
  br i1 %1042, label %1096, label %1043

1043:                                             ; preds = %1041, %948, %941
  %1044 = phi i64* [ %934, %948 ], [ %934, %941 ], [ %964, %1041 ]
  %1045 = phi i64* [ %919, %948 ], [ %919, %941 ], [ %965, %1041 ]
  %1046 = ptrtoint i64* %1045 to i64
  %1047 = getelementptr i64, i64* %917, i64 -1
  %1048 = ptrtoint i64* %1047 to i64
  %1049 = sub i64 %1048, %1046
  %1050 = lshr i64 %1049, 3
  %1051 = add nuw nsw i64 %1050, 1
  %1052 = and i64 %1051, 7
  %1053 = icmp eq i64 %1052, 0
  br i1 %1053, label %1063, label %1054

1054:                                             ; preds = %1043, %1054
  %1055 = phi i64* [ %1060, %1054 ], [ %1044, %1043 ]
  %1056 = phi i64* [ %1059, %1054 ], [ %1045, %1043 ]
  %1057 = phi i64 [ %1061, %1054 ], [ %1052, %1043 ]
  %1058 = load i64, i64* %1056, align 8
  store i64 %1058, i64* %1055, align 8
  %1059 = getelementptr inbounds i64, i64* %1056, i64 1
  %1060 = getelementptr inbounds i64, i64* %1055, i64 1
  %1061 = add i64 %1057, -1
  %1062 = icmp eq i64 %1061, 0
  br i1 %1062, label %1063, label %1054, !llvm.loop !89

1063:                                             ; preds = %1054, %1043
  %1064 = phi i64* [ undef, %1043 ], [ %1060, %1054 ]
  %1065 = phi i64* [ %1044, %1043 ], [ %1060, %1054 ]
  %1066 = phi i64* [ %1045, %1043 ], [ %1059, %1054 ]
  %1067 = icmp ult i64 %1049, 56
  br i1 %1067, label %1096, label %1068

1068:                                             ; preds = %1063, %1068
  %1069 = phi i64* [ %1094, %1068 ], [ %1065, %1063 ]
  %1070 = phi i64* [ %1093, %1068 ], [ %1066, %1063 ]
  %1071 = load i64, i64* %1070, align 8
  store i64 %1071, i64* %1069, align 8
  %1072 = getelementptr inbounds i64, i64* %1070, i64 1
  %1073 = getelementptr inbounds i64, i64* %1069, i64 1
  %1074 = load i64, i64* %1072, align 8
  store i64 %1074, i64* %1073, align 8
  %1075 = getelementptr inbounds i64, i64* %1070, i64 2
  %1076 = getelementptr inbounds i64, i64* %1069, i64 2
  %1077 = load i64, i64* %1075, align 8
  store i64 %1077, i64* %1076, align 8
  %1078 = getelementptr inbounds i64, i64* %1070, i64 3
  %1079 = getelementptr inbounds i64, i64* %1069, i64 3
  %1080 = load i64, i64* %1078, align 8
  store i64 %1080, i64* %1079, align 8
  %1081 = getelementptr inbounds i64, i64* %1070, i64 4
  %1082 = getelementptr inbounds i64, i64* %1069, i64 4
  %1083 = load i64, i64* %1081, align 8
  store i64 %1083, i64* %1082, align 8
  %1084 = getelementptr inbounds i64, i64* %1070, i64 5
  %1085 = getelementptr inbounds i64, i64* %1069, i64 5
  %1086 = load i64, i64* %1084, align 8
  store i64 %1086, i64* %1085, align 8
  %1087 = getelementptr inbounds i64, i64* %1070, i64 6
  %1088 = getelementptr inbounds i64, i64* %1069, i64 6
  %1089 = load i64, i64* %1087, align 8
  store i64 %1089, i64* %1088, align 8
  %1090 = getelementptr inbounds i64, i64* %1070, i64 7
  %1091 = getelementptr inbounds i64, i64* %1069, i64 7
  %1092 = load i64, i64* %1090, align 8
  store i64 %1092, i64* %1091, align 8
  %1093 = getelementptr inbounds i64, i64* %1070, i64 8
  %1094 = getelementptr inbounds i64, i64* %1069, i64 8
  %1095 = icmp eq i64* %1093, %917
  br i1 %1095, label %1096, label %1068, !llvm.loop !90

1096:                                             ; preds = %1063, %1068, %1041
  %1097 = phi i64* [ %964, %1041 ], [ %1064, %1063 ], [ %1094, %1068 ]
  %1098 = ptrtoint i64* %1097 to i64
  br label %1099

1099:                                             ; preds = %1096, %932
  %1100 = phi i64 [ %939, %932 ], [ %1098, %1096 ]
  store i64 %1100, i64* %938, align 8
  br label %1101

1101:                                             ; preds = %916, %1099
  call void @_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEE15sort_and_uniqueEv(%"class.base::internal::flat_tree.517"* nonnull %22) #19
  br i1 %40, label %1140, label %1186

1102:                                             ; preds = %909, %1137
  %1103 = phi i64* [ %906, %909 ], [ %1138, %1137 ]
  %1104 = load i64, i64* %1103, align 8
  %1105 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %911, align 8
  %1106 = icmp eq %"class.std::__1::__tree_node.583"* %1105, null
  br i1 %1106, label %1137, label %1107

1107:                                             ; preds = %1102, %1107
  %1108 = phi %"class.std::__1::__tree_end_node"* [ %1118, %1107 ], [ %910, %1102 ]
  %1109 = phi %"class.std::__1::__tree_node.583"* [ %1119, %1107 ], [ %1105, %1102 ]
  %1110 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %1109, i64 0, i32 1, i32 0, i32 0
  %1111 = load i64, i64* %1110, align 8
  %1112 = icmp ult i64 %1111, %1104
  %1113 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %1109, i64 0, i32 0, i32 1
  %1114 = bitcast %"class.std::__1::__tree_node_base"** %1113 to %"class.std::__1::__tree_node.583"**
  %1115 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %1109, i64 0, i32 0, i32 0
  %1116 = bitcast %"class.std::__1::__tree_node.583"* %1109 to %"class.std::__1::__tree_node.583"**
  %1117 = select i1 %1112, %"class.std::__1::__tree_node.583"** %1114, %"class.std::__1::__tree_node.583"** %1116
  %1118 = select i1 %1112, %"class.std::__1::__tree_end_node"* %1108, %"class.std::__1::__tree_end_node"* %1115
  %1119 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %1117, align 8
  %1120 = icmp eq %"class.std::__1::__tree_node.583"* %1119, null
  br i1 %1120, label %1121, label %1107

1121:                                             ; preds = %1107
  %1122 = icmp eq %"class.std::__1::__tree_end_node"* %1118, %910
  br i1 %1122, label %1137, label %1123

1123:                                             ; preds = %1121
  %1124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1118, i64 4
  %1125 = bitcast %"class.std::__1::__tree_end_node"* %1124 to i64*
  %1126 = load i64, i64* %1125, align 8
  %1127 = icmp ult i64 %1104, %1126
  br i1 %1127, label %1137, label %1128

1128:                                             ; preds = %1123
  %1129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1118, i64 5
  %1130 = load i64*, i64** %905, align 8
  %1131 = bitcast %"class.std::__1::__tree_end_node"* %1129 to i64**
  %1132 = load i64*, i64** %1131, align 8
  %1133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1118, i64 6
  %1134 = bitcast %"class.std::__1::__tree_end_node"* %1133 to i64**
  %1135 = load i64*, i64** %1134, align 8
  %1136 = call i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE6insertINS_11__wrap_iterIPlEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKlEES9_S9_(%"class.std::__1::vector.428"* nonnull %21, i64* %1130, i64* %1132, i64* %1135)
  br label %1137

1137:                                             ; preds = %1123, %1121, %1102, %1128
  %1138 = getelementptr inbounds i64, i64* %1103, i64 1
  %1139 = icmp eq i64* %1138, %907
  br i1 %1139, label %912, label %1102

1140:                                             ; preds = %1101
  %1141 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1141) #19
  call void @_ZN19URLIndexPrivateData19SearchTermCacheItemC2ERKN4base8internal9flat_treeImNS1_8identityENSt3__14lessIvEENS5_6vectorImNS5_9allocatorImEEEEEERKNS3_IlS4_S7_NS8_IlNS9_IlEEEEEE(%"struct.URLIndexPrivateData::SearchTermCacheItem"* nonnull %23, %"class.base::internal::flat_tree.520"* nonnull dereferenceable(24) %10, %"class.base::internal::flat_tree.517"* nonnull dereferenceable(24) %22)
  %1142 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 2, i32 0
  %1143 = bitcast %"class.std::__1::tuple.678"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1143) #19
  %1144 = getelementptr inbounds %"class.std::__1::tuple.678", %"class.std::__1::tuple.678"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %1144, align 8
  %1145 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1145) #19
  %1146 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %1142, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.678"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %9) #19
  %1147 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %1146, 0
  %1148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1147, i64 7
  %1149 = bitcast %"class.std::__1::__tree_end_node"* %1148 to %"struct.URLIndexPrivateData::SearchTermCacheItem"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1145) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1143) #19
  %1150 = icmp eq %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, %1149
  br i1 %1150, label %1163, label %1151

1151:                                             ; preds = %1140
  %1152 = bitcast %"class.std::__1::__tree_end_node"* %1148 to %"class.std::__1::vector.420"*
  %1153 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %1154 = load i64*, i64** %1153, align 8
  %1155 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 0, i32 0, i32 0, i32 1
  %1156 = load i64*, i64** %1155, align 8
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"* %1152, i64* %1154, i64* %1156) #19
  %1157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1147, i64 10
  %1158 = bitcast %"class.std::__1::__tree_end_node"* %1157 to %"class.std::__1::vector.428"*
  %1159 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %1160 = load i64*, i64** %1159, align 8
  %1161 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 1, i32 0, i32 0, i32 1
  %1162 = load i64*, i64** %1161, align 8
  call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.428"* %1158, i64* %1160, i64* %1162) #19
  br label %1163

1163:                                             ; preds = %1140, %1151
  %1164 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 2
  %1165 = load i8, i8* %1164, align 8, !range !2
  %1166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1147, i64 13
  %1167 = bitcast %"class.std::__1::__tree_end_node"* %1166 to i8*
  store i8 %1165, i8* %1167, align 8
  %1168 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %1169 = load i64*, i64** %1168, align 8
  %1170 = icmp eq i64* %1169, null
  br i1 %1170, label %1176, label %1171

1171:                                             ; preds = %1163
  %1172 = ptrtoint i64* %1169 to i64
  %1173 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 1, i32 0, i32 0, i32 1
  %1174 = bitcast i64** %1173 to i64*
  store i64 %1172, i64* %1174, align 8
  %1175 = bitcast i64* %1169 to i8*
  call void @_ZdlPv(i8* %1175) #20
  br label %1176

1176:                                             ; preds = %1171, %1163
  %1177 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %1178 = load i64*, i64** %1177, align 8
  %1179 = icmp eq i64* %1178, null
  br i1 %1179, label %1185, label %1180

1180:                                             ; preds = %1176
  %1181 = ptrtoint i64* %1178 to i64
  %1182 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %23, i64 0, i32 0, i32 0, i32 0, i32 1
  %1183 = bitcast i64** %1182 to i64*
  store i64 %1181, i64* %1183, align 8
  %1184 = bitcast i64* %1178 to i8*
  call void @_ZdlPv(i8* %1184) #20
  br label %1185

1185:                                             ; preds = %1176, %1180
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1141) #19
  br label %1186

1186:                                             ; preds = %1185, %1101
  %1187 = bitcast %"class.base::internal::flat_tree.517"* %22 to <2 x i64>*
  %1188 = load <2 x i64>, <2 x i64>* %1187, align 16
  %1189 = bitcast %"class.base::internal::flat_tree.517"* %0 to <2 x i64>*
  store <2 x i64> %1188, <2 x i64>* %1189, align 8
  %1190 = bitcast i64** %923 to i64*
  %1191 = load i64, i64* %1190, align 16
  %1192 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1193 = bitcast i64** %1192 to i64*
  store i64 %1191, i64* %1193, align 8
  %1194 = load i64*, i64** %904, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %921) #19
  %1195 = icmp eq i64* %1194, null
  br i1 %1195, label %1200, label %1196

1196:                                             ; preds = %1186
  %1197 = bitcast i64* %1194 to i8*
  %1198 = ptrtoint i64* %1194 to i64
  %1199 = bitcast i64** %905 to i64*
  store i64 %1198, i64* %1199, align 8
  call void @_ZdlPv(i8* %1197) #20
  br label %1200

1200:                                             ; preds = %1186, %1196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %903) #19
  br label %1201

1201:                                             ; preds = %868, %1200
  %1202 = load i64*, i64** %37, align 8
  %1203 = icmp eq i64* %1202, null
  br i1 %1203, label %1208, label %1204

1204:                                             ; preds = %1201
  %1205 = ptrtoint i64* %1202 to i64
  %1206 = bitcast i64** %38 to i64*
  store i64 %1205, i64* %1206, align 8
  %1207 = bitcast i64* %1202 to i8*
  call void @_ZdlPv(i8* %1207) #20
  br label %1208

1208:                                             ; preds = %1201, %1204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #19
  br label %1209

1209:                                             ; preds = %1208, %33
  ret void
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #1

declare void @_Z21Char16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEE(%"class.base::internal::flat_tree.522"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData21WordIDSetForTermCharsERKN4base8internal9flat_treeIDsNS0_8identityENSt3__14lessIvEENS4_6vectorIDsNS4_9allocatorIDsEEEEEE(%"class.base::internal::flat_tree.520"* noalias nocapture sret, %class.URLIndexPrivateData*, %"class.base::internal::flat_tree.522"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::flat_tree.520", align 16
  %5 = bitcast %"class.base::internal::flat_tree.520"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #19
  %9 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %2, i64 0, i32 0, i32 0, i32 1
  %12 = load i16*, i16** %11, align 8
  %13 = icmp eq i16* %10, %12
  br i1 %13, label %143, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %1, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.581"**
  %17 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0
  br label %18

18:                                               ; preds = %14, %134
  %19 = phi i16* [ %10, %14 ], [ %135, %134 ]
  %20 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %16, align 8
  %21 = icmp eq %"class.std::__1::__tree_node.581"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %18
  %23 = load i16, i16* %19, align 2
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"class.std::__1::__tree_end_node"* [ %15, %22 ], [ %35, %24 ]
  %26 = phi %"class.std::__1::__tree_node.581"* [ %20, %22 ], [ %36, %24 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %26, i64 0, i32 1, i32 0, i32 0
  %28 = load i16, i16* %27, align 2
  %29 = icmp ult i16 %28, %23
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %26, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::__tree_node_base"** %30 to %"class.std::__1::__tree_node.581"**
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %26, i64 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_node.581"* %26 to %"class.std::__1::__tree_node.581"**
  %34 = select i1 %29, %"class.std::__1::__tree_node.581"** %31, %"class.std::__1::__tree_node.581"** %33
  %35 = select i1 %29, %"class.std::__1::__tree_end_node"* %25, %"class.std::__1::__tree_end_node"* %32
  %36 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %34, align 8
  %37 = icmp eq %"class.std::__1::__tree_node.581"* %36, null
  br i1 %37, label %38, label %24

38:                                               ; preds = %24
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %35, %15
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 4
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to i16*
  %43 = load i16, i16* %42, align 2
  %44 = icmp ult i16 %23, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %40, %38, %18
  %46 = bitcast %"class.base::internal::flat_tree.520"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false)
  br label %149

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 5
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.base::internal::flat_tree.520"*
  %50 = bitcast %"class.std::__1::__tree_end_node"* %48 to i64**
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 6
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to i64**
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %51, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %47
  %57 = bitcast %"class.base::internal::flat_tree.520"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false)
  br label %149

58:                                               ; preds = %47
  %59 = load i16*, i16** %9, align 8
  %60 = icmp eq i16* %19, %59
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = icmp eq %"class.base::internal::flat_tree.520"* %4, %49
  br i1 %62, label %134, label %63

63:                                               ; preds = %61
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"* nonnull %17, i64* %51, i64* %54) #19
  br label %134

64:                                               ; preds = %58
  %65 = load i64*, i64** %6, align 16
  %66 = load i64*, i64** %7, align 8
  %67 = icmp eq i64* %65, %66
  %68 = ptrtoint i64* %66 to i64
  br i1 %67, label %90, label %69

69:                                               ; preds = %64, %86
  %70 = phi i64* [ %87, %86 ], [ %51, %64 ]
  %71 = phi i64* [ %88, %86 ], [ %65, %64 ]
  %72 = icmp eq i64* %70, %54
  br i1 %72, label %90, label %73

73:                                               ; preds = %69
  %74 = load i64, i64* %71, align 8
  br label %75

75:                                               ; preds = %79, %73
  %76 = phi i64* [ %70, %73 ], [ %80, %79 ]
  %77 = load i64, i64* %76, align 8
  %78 = icmp ult i64 %77, %74
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = getelementptr inbounds i64, i64* %76, i64 1
  %81 = icmp eq i64* %80, %54
  br i1 %81, label %90, label %75

82:                                               ; preds = %75
  %83 = icmp ne i64* %76, %54
  %84 = icmp eq i64 %77, %74
  %85 = and i1 %83, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds i64, i64* %76, i64 1
  %88 = getelementptr inbounds i64, i64* %71, i64 1
  %89 = icmp eq i64* %88, %66
  br i1 %89, label %128, label %69

90:                                               ; preds = %82, %69, %79, %64
  %91 = phi i64* [ %51, %64 ], [ %54, %79 ], [ %76, %82 ], [ %54, %69 ]
  %92 = phi i64* [ %65, %64 ], [ %71, %79 ], [ %71, %69 ], [ %71, %82 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = icmp eq i64* %92, %66
  br i1 %94, label %128, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i64, i64* %92, i64 1
  %97 = icmp eq i64* %96, %66
  br i1 %97, label %128, label %98

98:                                               ; preds = %95, %121
  %99 = phi i64* [ %122, %121 ], [ %91, %95 ]
  %100 = phi i64* [ %124, %121 ], [ %96, %95 ]
  %101 = phi i64 [ %123, %121 ], [ %93, %95 ]
  %102 = icmp eq i64* %99, %54
  br i1 %102, label %121, label %103

103:                                              ; preds = %98
  %104 = load i64, i64* %100, align 8
  br label %105

105:                                              ; preds = %109, %103
  %106 = phi i64* [ %110, %109 ], [ %99, %103 ]
  %107 = load i64, i64* %106, align 8
  %108 = icmp ult i64 %107, %104
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  %110 = getelementptr inbounds i64, i64* %106, i64 1
  %111 = icmp eq i64* %110, %54
  br i1 %111, label %121, label %105

112:                                              ; preds = %105
  %113 = icmp ne i64* %106, %54
  %114 = icmp eq i64 %107, %104
  %115 = and i1 %113, %114
  br i1 %115, label %116, label %121

116:                                              ; preds = %112
  %117 = getelementptr inbounds i64, i64* %106, i64 1
  %118 = inttoptr i64 %101 to i64*
  store i64 %104, i64* %118, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = ptrtoint i64* %119 to i64
  br label %121

121:                                              ; preds = %109, %116, %112, %98
  %122 = phi i64* [ %54, %98 ], [ %117, %116 ], [ %106, %112 ], [ %54, %109 ]
  %123 = phi i64 [ %101, %98 ], [ %120, %116 ], [ %101, %112 ], [ %101, %109 ]
  %124 = getelementptr inbounds i64, i64* %100, i64 1
  %125 = icmp eq i64* %124, %66
  br i1 %125, label %126, label %98

126:                                              ; preds = %121
  %127 = load i64*, i64** %7, align 8
  br label %128

128:                                              ; preds = %86, %126, %95, %90
  %129 = phi i64* [ %127, %126 ], [ %66, %90 ], [ %66, %95 ], [ %66, %86 ]
  %130 = phi i64 [ %123, %126 ], [ %93, %90 ], [ %93, %95 ], [ %68, %86 ]
  %131 = inttoptr i64 %130 to i64*
  %132 = icmp eq i64* %129, %131
  br i1 %132, label %134, label %133

133:                                              ; preds = %128
  store i64* %131, i64** %7, align 8
  br label %134

134:                                              ; preds = %61, %63, %128, %133
  %135 = getelementptr inbounds i16, i16* %19, i64 1
  %136 = load i16*, i16** %11, align 8
  %137 = icmp eq i16* %135, %136
  br i1 %137, label %138, label %18

138:                                              ; preds = %134
  %139 = bitcast %"class.base::internal::flat_tree.520"* %4 to <2 x i64>*
  %140 = load <2 x i64>, <2 x i64>* %139, align 16
  %141 = bitcast i64** %8 to i64*
  %142 = load i64, i64* %141, align 16
  br label %143

143:                                              ; preds = %3, %138
  %144 = phi i64 [ %142, %138 ], [ 0, %3 ]
  %145 = phi <2 x i64> [ %140, %138 ], [ zeroinitializer, %3 ]
  %146 = bitcast %"class.base::internal::flat_tree.520"* %0 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %146, align 8
  %147 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %148 = bitcast i64** %147 to i64*
  store i64 %144, i64* %148, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #19
  br label %149

149:                                              ; preds = %56, %45, %143
  %150 = load i64*, i64** %6, align 16
  %151 = icmp eq i64* %150, null
  br i1 %151, label %156, label %152

152:                                              ; preds = %149
  %153 = ptrtoint i64* %150 to i64
  %154 = bitcast i64** %7 to i64*
  store i64 %153, i64* %154, align 8
  %155 = bitcast i64* %150 to i8*
  call void @_ZdlPv(i8* %155) #20
  br label %156

156:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE6insertINS_11__wrap_iterIPlEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKlEES9_S9_(%"class.std::__1::vector.428"*, i64*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i64* %2 to i8*
  %6 = bitcast i64* %1 to i8*
  %7 = ptrtoint i64* %1 to i64
  %8 = ptrtoint i64* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint i64* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %706

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i64** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = ptrtoint i64* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i64** %18 to i64*
  br i1 %23, label %339, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %196

29:                                               ; preds = %25
  %30 = getelementptr inbounds i64, i64* %2, i64 %27
  %31 = icmp eq i64* %30, %3
  br i1 %31, label %191, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr i64, i64* %3, i64 %33
  %35 = ptrtoint i64* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr i64, i64* %3, i64 %41
  %43 = ptrtoint i64* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr i64, i64* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr i64, i64* %2, i64 %49
  %51 = icmp ult i64* %19, %50
  %52 = icmp ult i64* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr i64, i64* %19, i64 %55
  %57 = getelementptr i64, i64* %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i64, i64* %19, i64 %66
  %69 = getelementptr i64, i64* %30, i64 %66
  %70 = bitcast i64* %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !91
  %72 = getelementptr i64, i64* %69, i64 2
  %73 = bitcast i64* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !91
  %75 = bitcast i64* %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !94, !noalias !91
  %76 = getelementptr i64, i64* %68, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !94, !noalias !91
  %78 = or i64 %66, 4
  %79 = getelementptr i64, i64* %19, i64 %78
  %80 = getelementptr i64, i64* %30, i64 %78
  %81 = bitcast i64* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !91
  %83 = getelementptr i64, i64* %80, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !91
  %86 = bitcast i64* %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !94, !noalias !91
  %87 = getelementptr i64, i64* %79, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !94, !noalias !91
  %89 = or i64 %66, 8
  %90 = getelementptr i64, i64* %19, i64 %89
  %91 = getelementptr i64, i64* %30, i64 %89
  %92 = bitcast i64* %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !91
  %94 = getelementptr i64, i64* %91, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !91
  %97 = bitcast i64* %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !94, !noalias !91
  %98 = getelementptr i64, i64* %90, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !94, !noalias !91
  %100 = or i64 %66, 12
  %101 = getelementptr i64, i64* %19, i64 %100
  %102 = getelementptr i64, i64* %30, i64 %100
  %103 = bitcast i64* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !91
  %105 = getelementptr i64, i64* %102, i64 2
  %106 = bitcast i64* %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !91
  %108 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !94, !noalias !91
  %109 = getelementptr i64, i64* %101, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !94, !noalias !91
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !96

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i64, i64* %19, i64 %118
  %121 = getelementptr i64, i64* %30, i64 %118
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !91
  %124 = getelementptr i64, i64* %121, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !91
  %127 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !94, !noalias !91
  %128 = getelementptr i64, i64* %120, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !94, !noalias !91
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !97

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi i64* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi i64* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint i64* %137 to i64
  %139 = getelementptr i64, i64* %3, i64 -1
  %140 = ptrtoint i64* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %135, %146
  %147 = phi i64* [ %152, %146 ], [ %136, %135 ]
  %148 = phi i64* [ %151, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %153, %146 ], [ %144, %135 ]
  %150 = load i64, i64* %148, align 8
  store i64 %150, i64* %147, align 8
  %151 = getelementptr inbounds i64, i64* %148, i64 1
  %152 = getelementptr inbounds i64, i64* %147, i64 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !98

155:                                              ; preds = %146, %135
  %156 = phi i64* [ undef, %135 ], [ %152, %146 ]
  %157 = phi i64* [ %136, %135 ], [ %152, %146 ]
  %158 = phi i64* [ %137, %135 ], [ %151, %146 ]
  %159 = icmp ult i64 %141, 56
  br i1 %159, label %188, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64* [ %186, %160 ], [ %157, %155 ]
  %162 = phi i64* [ %185, %160 ], [ %158, %155 ]
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %161, align 8
  %164 = getelementptr inbounds i64, i64* %162, i64 1
  %165 = getelementptr inbounds i64, i64* %161, i64 1
  %166 = load i64, i64* %164, align 8
  store i64 %166, i64* %165, align 8
  %167 = getelementptr inbounds i64, i64* %162, i64 2
  %168 = getelementptr inbounds i64, i64* %161, i64 2
  %169 = load i64, i64* %167, align 8
  store i64 %169, i64* %168, align 8
  %170 = getelementptr inbounds i64, i64* %162, i64 3
  %171 = getelementptr inbounds i64, i64* %161, i64 3
  %172 = load i64, i64* %170, align 8
  store i64 %172, i64* %171, align 8
  %173 = getelementptr inbounds i64, i64* %162, i64 4
  %174 = getelementptr inbounds i64, i64* %161, i64 4
  %175 = load i64, i64* %173, align 8
  store i64 %175, i64* %174, align 8
  %176 = getelementptr inbounds i64, i64* %162, i64 5
  %177 = getelementptr inbounds i64, i64* %161, i64 5
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %177, align 8
  %179 = getelementptr inbounds i64, i64* %162, i64 6
  %180 = getelementptr inbounds i64, i64* %161, i64 6
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds i64, i64* %162, i64 7
  %183 = getelementptr inbounds i64, i64* %161, i64 7
  %184 = load i64, i64* %182, align 8
  store i64 %184, i64* %183, align 8
  %185 = getelementptr inbounds i64, i64* %162, i64 8
  %186 = getelementptr inbounds i64, i64* %161, i64 8
  %187 = icmp eq i64* %185, %3
  br i1 %187, label %188, label %160, !llvm.loop !99

188:                                              ; preds = %155, %160, %133
  %189 = phi i64* [ %56, %133 ], [ %156, %155 ], [ %186, %160 ]
  %190 = ptrtoint i64* %189 to i64
  br label %191

191:                                              ; preds = %188, %29
  %192 = phi i64 [ %20, %29 ], [ %190, %188 ]
  store i64 %192, i64* %24, align 8
  %193 = icmp sgt i64 %26, 0
  br i1 %193, label %194, label %706

194:                                              ; preds = %191
  %195 = inttoptr i64 %192 to i64*
  br label %196

196:                                              ; preds = %194, %25
  %197 = phi i64 [ %192, %194 ], [ %20, %25 ]
  %198 = phi i64* [ %195, %194 ], [ %19, %25 ]
  %199 = phi i64* [ %30, %194 ], [ %3, %25 ]
  %200 = getelementptr inbounds i64, i64* %1, i64 %12
  %201 = ptrtoint i64* %200 to i64
  %202 = sub i64 %197, %201
  %203 = ashr exact i64 %202, 3
  %204 = getelementptr inbounds i64, i64* %1, i64 %203
  %205 = icmp ult i64* %204, %19
  br i1 %205, label %206, label %319

206:                                              ; preds = %196
  %207 = sub nsw i64 0, %203
  %208 = getelementptr i64, i64* %19, i64 %207
  %209 = bitcast i64* %208 to i8*
  %210 = xor i64 %7, -1
  %211 = getelementptr i8, i8* %209, i64 %210
  %212 = ptrtoint i8* %211 to i64
  %213 = lshr i64 %212, 3
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 4
  br i1 %215, label %216, label %219

216:                                              ; preds = %314, %219, %206
  %217 = phi i64* [ %198, %219 ], [ %198, %206 ], [ %237, %314 ]
  %218 = phi i64* [ %204, %219 ], [ %204, %206 ], [ %238, %314 ]
  br label %327

219:                                              ; preds = %206
  %220 = sub nsw i64 0, %203
  %221 = getelementptr i64, i64* %19, i64 %220
  %222 = bitcast i64* %221 to i8*
  %223 = xor i64 %7, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = getelementptr i64, i64* %198, i64 %227
  %229 = add nsw i64 %203, %226
  %230 = add nsw i64 %229, 1
  %231 = getelementptr i64, i64* %1, i64 %230
  %232 = icmp ult i64* %198, %231
  %233 = icmp ult i64* %204, %228
  %234 = and i1 %232, %233
  br i1 %234, label %216, label %235

235:                                              ; preds = %219
  %236 = and i64 %214, 4611686018427387900
  %237 = getelementptr i64, i64* %198, i64 %236
  %238 = getelementptr i64, i64* %204, i64 %236
  %239 = add nsw i64 %236, -4
  %240 = lshr exact i64 %239, 2
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 12
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i64, i64* %198, i64 %247
  %250 = getelementptr i64, i64* %204, i64 %247
  %251 = bitcast i64* %250 to <2 x i64>*
  %252 = load <2 x i64>, <2 x i64>* %251, align 8, !alias.scope !100
  %253 = getelementptr i64, i64* %250, i64 2
  %254 = bitcast i64* %253 to <2 x i64>*
  %255 = load <2 x i64>, <2 x i64>* %254, align 8, !alias.scope !100
  %256 = bitcast i64* %249 to <2 x i64>*
  store <2 x i64> %252, <2 x i64>* %256, align 8, !alias.scope !103, !noalias !100
  %257 = getelementptr i64, i64* %249, i64 2
  %258 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %255, <2 x i64>* %258, align 8, !alias.scope !103, !noalias !100
  %259 = or i64 %247, 4
  %260 = getelementptr i64, i64* %198, i64 %259
  %261 = getelementptr i64, i64* %204, i64 %259
  %262 = bitcast i64* %261 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !100
  %264 = getelementptr i64, i64* %261, i64 2
  %265 = bitcast i64* %264 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8, !alias.scope !100
  %267 = bitcast i64* %260 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %267, align 8, !alias.scope !103, !noalias !100
  %268 = getelementptr i64, i64* %260, i64 2
  %269 = bitcast i64* %268 to <2 x i64>*
  store <2 x i64> %266, <2 x i64>* %269, align 8, !alias.scope !103, !noalias !100
  %270 = or i64 %247, 8
  %271 = getelementptr i64, i64* %198, i64 %270
  %272 = getelementptr i64, i64* %204, i64 %270
  %273 = bitcast i64* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !100
  %275 = getelementptr i64, i64* %272, i64 2
  %276 = bitcast i64* %275 to <2 x i64>*
  %277 = load <2 x i64>, <2 x i64>* %276, align 8, !alias.scope !100
  %278 = bitcast i64* %271 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %278, align 8, !alias.scope !103, !noalias !100
  %279 = getelementptr i64, i64* %271, i64 2
  %280 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %277, <2 x i64>* %280, align 8, !alias.scope !103, !noalias !100
  %281 = or i64 %247, 12
  %282 = getelementptr i64, i64* %198, i64 %281
  %283 = getelementptr i64, i64* %204, i64 %281
  %284 = bitcast i64* %283 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !100
  %286 = getelementptr i64, i64* %283, i64 2
  %287 = bitcast i64* %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !100
  %289 = bitcast i64* %282 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %289, align 8, !alias.scope !103, !noalias !100
  %290 = getelementptr i64, i64* %282, i64 2
  %291 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %291, align 8, !alias.scope !103, !noalias !100
  %292 = add i64 %247, 16
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !105

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i64, i64* %198, i64 %299
  %302 = getelementptr i64, i64* %204, i64 %299
  %303 = bitcast i64* %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !100
  %305 = getelementptr i64, i64* %302, i64 2
  %306 = bitcast i64* %305 to <2 x i64>*
  %307 = load <2 x i64>, <2 x i64>* %306, align 8, !alias.scope !100
  %308 = bitcast i64* %301 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %308, align 8, !alias.scope !103, !noalias !100
  %309 = getelementptr i64, i64* %301, i64 2
  %310 = bitcast i64* %309 to <2 x i64>*
  store <2 x i64> %307, <2 x i64>* %310, align 8, !alias.scope !103, !noalias !100
  %311 = add i64 %299, 4
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !106

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %214, %236
  br i1 %315, label %316, label %216

316:                                              ; preds = %327, %314
  %317 = phi i64* [ %237, %314 ], [ %332, %327 ]
  %318 = ptrtoint i64* %317 to i64
  br label %319

319:                                              ; preds = %316, %196
  %320 = phi i64 [ %318, %316 ], [ %197, %196 ]
  store i64 %320, i64* %24, align 8
  %321 = icmp eq i64 %202, 0
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = sub nsw i64 0, %203
  %324 = getelementptr inbounds i64, i64* %198, i64 %323
  %325 = bitcast i64* %324 to i8*
  %326 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %325, i8* align 8 %326, i64 %202, i1 false) #19
  br label %334

327:                                              ; preds = %216, %327
  %328 = phi i64* [ %332, %327 ], [ %217, %216 ]
  %329 = phi i64* [ %331, %327 ], [ %218, %216 ]
  %330 = load i64, i64* %329, align 8
  store i64 %330, i64* %328, align 8
  %331 = getelementptr inbounds i64, i64* %329, i64 1
  %332 = getelementptr inbounds i64, i64* %328, i64 1
  %333 = icmp ult i64* %331, %19
  br i1 %333, label %327, label %316, !llvm.loop !107

334:                                              ; preds = %319, %322
  %335 = ptrtoint i64* %199 to i64
  %336 = sub i64 %335, %8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %706, label %338

338:                                              ; preds = %334
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %336, i1 false) #19
  br label %706

339:                                              ; preds = %14
  %340 = bitcast %"class.std::__1::vector.428"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %20, %341
  %343 = ashr exact i64 %342, 3
  %344 = add nsw i64 %343, %12
  %345 = icmp ugt i64 %344, 2305843009213693951
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector.428"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %347) #21
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %17, %341
  %350 = ashr exact i64 %349, 3
  %351 = icmp ult i64 %350, 1152921504606846975
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = sub i64 %7, %341
  %354 = ashr exact i64 %353, 3
  br label %365

355:                                              ; preds = %348
  %356 = ashr exact i64 %349, 2
  %357 = icmp ult i64 %356, %344
  %358 = select i1 %357, i64 %344, i64 %356
  %359 = sub i64 %7, %341
  %360 = ashr exact i64 %359, 3
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %355
  %363 = icmp ugt i64 %358, 2305843009213693951
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  tail call void @abort() #21
  unreachable

365:                                              ; preds = %352, %362
  %366 = phi i64 [ 2305843009213693951, %352 ], [ %358, %362 ]
  %367 = phi i64 [ %354, %352 ], [ %360, %362 ]
  %368 = shl i64 %366, 3
  %369 = tail call i8* @_Znwm(i64 %368) #20
  %370 = bitcast i8* %369 to i64*
  br label %371

371:                                              ; preds = %365, %355
  %372 = phi i64 [ %367, %365 ], [ %360, %355 ]
  %373 = phi i64 [ %366, %365 ], [ 0, %355 ]
  %374 = phi i64* [ %370, %365 ], [ null, %355 ]
  %375 = getelementptr inbounds i64, i64* %374, i64 %372
  %376 = getelementptr inbounds i64, i64* %374, i64 %373
  %377 = ptrtoint i64* %376 to i64
  %378 = getelementptr inbounds i64, i64* %375, i64 %12
  %379 = add i64 %11, -8
  %380 = lshr i64 %379, 3
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 4
  br i1 %382, label %475, label %383

383:                                              ; preds = %371
  %384 = add i64 %11, -8
  %385 = lshr i64 %384, 3
  %386 = add nsw i64 %372, %385
  %387 = add nsw i64 %386, 1
  %388 = getelementptr i64, i64* %374, i64 %387
  %389 = add nuw nsw i64 %385, 1
  %390 = getelementptr i64, i64* %2, i64 %389
  %391 = icmp ult i64* %375, %390
  %392 = icmp ugt i64* %388, %2
  %393 = and i1 %391, %392
  br i1 %393, label %475, label %394

394:                                              ; preds = %383
  %395 = and i64 %381, 4611686018427387900
  %396 = getelementptr i64, i64* %375, i64 %395
  %397 = getelementptr i64, i64* %2, i64 %395
  %398 = add nsw i64 %395, -4
  %399 = lshr exact i64 %398, 2
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 12
  br i1 %402, label %454, label %403

403:                                              ; preds = %394
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %451, %405 ]
  %407 = phi i64 [ %404, %403 ], [ %452, %405 ]
  %408 = getelementptr i64, i64* %375, i64 %406
  %409 = getelementptr i64, i64* %2, i64 %406
  %410 = bitcast i64* %409 to <2 x i64>*
  %411 = load <2 x i64>, <2 x i64>* %410, align 8, !alias.scope !108
  %412 = getelementptr i64, i64* %409, i64 2
  %413 = bitcast i64* %412 to <2 x i64>*
  %414 = load <2 x i64>, <2 x i64>* %413, align 8, !alias.scope !108
  %415 = bitcast i64* %408 to <2 x i64>*
  store <2 x i64> %411, <2 x i64>* %415, align 8, !alias.scope !111, !noalias !108
  %416 = getelementptr i64, i64* %408, i64 2
  %417 = bitcast i64* %416 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %417, align 8, !alias.scope !111, !noalias !108
  %418 = or i64 %406, 4
  %419 = getelementptr i64, i64* %375, i64 %418
  %420 = getelementptr i64, i64* %2, i64 %418
  %421 = bitcast i64* %420 to <2 x i64>*
  %422 = load <2 x i64>, <2 x i64>* %421, align 8, !alias.scope !108
  %423 = getelementptr i64, i64* %420, i64 2
  %424 = bitcast i64* %423 to <2 x i64>*
  %425 = load <2 x i64>, <2 x i64>* %424, align 8, !alias.scope !108
  %426 = bitcast i64* %419 to <2 x i64>*
  store <2 x i64> %422, <2 x i64>* %426, align 8, !alias.scope !111, !noalias !108
  %427 = getelementptr i64, i64* %419, i64 2
  %428 = bitcast i64* %427 to <2 x i64>*
  store <2 x i64> %425, <2 x i64>* %428, align 8, !alias.scope !111, !noalias !108
  %429 = or i64 %406, 8
  %430 = getelementptr i64, i64* %375, i64 %429
  %431 = getelementptr i64, i64* %2, i64 %429
  %432 = bitcast i64* %431 to <2 x i64>*
  %433 = load <2 x i64>, <2 x i64>* %432, align 8, !alias.scope !108
  %434 = getelementptr i64, i64* %431, i64 2
  %435 = bitcast i64* %434 to <2 x i64>*
  %436 = load <2 x i64>, <2 x i64>* %435, align 8, !alias.scope !108
  %437 = bitcast i64* %430 to <2 x i64>*
  store <2 x i64> %433, <2 x i64>* %437, align 8, !alias.scope !111, !noalias !108
  %438 = getelementptr i64, i64* %430, i64 2
  %439 = bitcast i64* %438 to <2 x i64>*
  store <2 x i64> %436, <2 x i64>* %439, align 8, !alias.scope !111, !noalias !108
  %440 = or i64 %406, 12
  %441 = getelementptr i64, i64* %375, i64 %440
  %442 = getelementptr i64, i64* %2, i64 %440
  %443 = bitcast i64* %442 to <2 x i64>*
  %444 = load <2 x i64>, <2 x i64>* %443, align 8, !alias.scope !108
  %445 = getelementptr i64, i64* %442, i64 2
  %446 = bitcast i64* %445 to <2 x i64>*
  %447 = load <2 x i64>, <2 x i64>* %446, align 8, !alias.scope !108
  %448 = bitcast i64* %441 to <2 x i64>*
  store <2 x i64> %444, <2 x i64>* %448, align 8, !alias.scope !111, !noalias !108
  %449 = getelementptr i64, i64* %441, i64 2
  %450 = bitcast i64* %449 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %450, align 8, !alias.scope !111, !noalias !108
  %451 = add i64 %406, 16
  %452 = add i64 %407, -4
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %405, !llvm.loop !113

454:                                              ; preds = %405, %394
  %455 = phi i64 [ 0, %394 ], [ %451, %405 ]
  %456 = icmp eq i64 %401, 0
  br i1 %456, label %473, label %457

457:                                              ; preds = %454, %457
  %458 = phi i64 [ %470, %457 ], [ %455, %454 ]
  %459 = phi i64 [ %471, %457 ], [ %401, %454 ]
  %460 = getelementptr i64, i64* %375, i64 %458
  %461 = getelementptr i64, i64* %2, i64 %458
  %462 = bitcast i64* %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 8, !alias.scope !108
  %464 = getelementptr i64, i64* %461, i64 2
  %465 = bitcast i64* %464 to <2 x i64>*
  %466 = load <2 x i64>, <2 x i64>* %465, align 8, !alias.scope !108
  %467 = bitcast i64* %460 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %467, align 8, !alias.scope !111, !noalias !108
  %468 = getelementptr i64, i64* %460, i64 2
  %469 = bitcast i64* %468 to <2 x i64>*
  store <2 x i64> %466, <2 x i64>* %469, align 8, !alias.scope !111, !noalias !108
  %470 = add i64 %458, 4
  %471 = add i64 %459, -1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %457, !llvm.loop !114

473:                                              ; preds = %457, %454
  %474 = icmp eq i64 %381, %395
  br i1 %474, label %529, label %475

475:                                              ; preds = %473, %383, %371
  %476 = phi i64* [ %375, %383 ], [ %375, %371 ], [ %396, %473 ]
  %477 = phi i64* [ %2, %383 ], [ %2, %371 ], [ %397, %473 ]
  %478 = ptrtoint i64* %476 to i64
  %479 = add nsw i64 %372, %12
  %480 = add nsw i64 %479, -1
  %481 = getelementptr i64, i64* %374, i64 %480
  %482 = ptrtoint i64* %481 to i64
  %483 = sub i64 %482, %478
  %484 = lshr i64 %483, 3
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %475, %488
  %489 = phi i64* [ %493, %488 ], [ %476, %475 ]
  %490 = phi i64* [ %494, %488 ], [ %477, %475 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %475 ]
  %492 = load i64, i64* %490, align 8
  store i64 %492, i64* %489, align 8
  %493 = getelementptr inbounds i64, i64* %489, i64 1
  %494 = getelementptr inbounds i64, i64* %490, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !115

497:                                              ; preds = %488, %475
  %498 = phi i64* [ %476, %475 ], [ %493, %488 ]
  %499 = phi i64* [ %477, %475 ], [ %494, %488 ]
  %500 = icmp ult i64 %483, 56
  br i1 %500, label %529, label %501

501:                                              ; preds = %497, %501
  %502 = phi i64* [ %526, %501 ], [ %498, %497 ]
  %503 = phi i64* [ %527, %501 ], [ %499, %497 ]
  %504 = load i64, i64* %503, align 8
  store i64 %504, i64* %502, align 8
  %505 = getelementptr inbounds i64, i64* %502, i64 1
  %506 = getelementptr inbounds i64, i64* %503, i64 1
  %507 = load i64, i64* %506, align 8
  store i64 %507, i64* %505, align 8
  %508 = getelementptr inbounds i64, i64* %502, i64 2
  %509 = getelementptr inbounds i64, i64* %503, i64 2
  %510 = load i64, i64* %509, align 8
  store i64 %510, i64* %508, align 8
  %511 = getelementptr inbounds i64, i64* %502, i64 3
  %512 = getelementptr inbounds i64, i64* %503, i64 3
  %513 = load i64, i64* %512, align 8
  store i64 %513, i64* %511, align 8
  %514 = getelementptr inbounds i64, i64* %502, i64 4
  %515 = getelementptr inbounds i64, i64* %503, i64 4
  %516 = load i64, i64* %515, align 8
  store i64 %516, i64* %514, align 8
  %517 = getelementptr inbounds i64, i64* %502, i64 5
  %518 = getelementptr inbounds i64, i64* %503, i64 5
  %519 = load i64, i64* %518, align 8
  store i64 %519, i64* %517, align 8
  %520 = getelementptr inbounds i64, i64* %502, i64 6
  %521 = getelementptr inbounds i64, i64* %503, i64 6
  %522 = load i64, i64* %521, align 8
  store i64 %522, i64* %520, align 8
  %523 = getelementptr inbounds i64, i64* %502, i64 7
  %524 = getelementptr inbounds i64, i64* %503, i64 7
  %525 = load i64, i64* %524, align 8
  store i64 %525, i64* %523, align 8
  %526 = getelementptr inbounds i64, i64* %502, i64 8
  %527 = getelementptr inbounds i64, i64* %503, i64 8
  %528 = icmp eq i64* %378, %526
  br i1 %528, label %529, label %501, !llvm.loop !116

529:                                              ; preds = %497, %501, %473
  %530 = load i64*, i64** %9, align 8
  %531 = ptrtoint i64* %530 to i64
  %532 = sub i64 %7, %531
  %533 = ashr exact i64 %532, 3
  %534 = sub nsw i64 0, %533
  %535 = getelementptr inbounds i64, i64* %375, i64 %534
  %536 = ptrtoint i64* %535 to i64
  %537 = icmp sgt i64 %532, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = bitcast i64* %535 to i8*
  %540 = bitcast i64* %530 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %539, i8* align 8 %540, i64 %532, i1 false) #19
  br label %541

541:                                              ; preds = %538, %529
  %542 = load i64*, i64** %18, align 8
  %543 = icmp eq i64* %542, %1
  br i1 %543, label %699, label %544

544:                                              ; preds = %541
  %545 = getelementptr i64, i64* %542, i64 -1
  %546 = ptrtoint i64* %545 to i64
  %547 = sub i64 %546, %7
  %548 = lshr i64 %547, 3
  %549 = add nuw nsw i64 %548, 1
  %550 = icmp ult i64 %549, 4
  br i1 %550, label %646, label %551

551:                                              ; preds = %544
  %552 = add nsw i64 %372, %12
  %553 = getelementptr i64, i64* %542, i64 -1
  %554 = ptrtoint i64* %553 to i64
  %555 = sub i64 %554, %7
  %556 = lshr i64 %555, 3
  %557 = add nsw i64 %552, %556
  %558 = add nsw i64 %557, 1
  %559 = getelementptr i64, i64* %374, i64 %558
  %560 = add nuw nsw i64 %556, 1
  %561 = getelementptr i64, i64* %1, i64 %560
  %562 = icmp ult i64* %378, %561
  %563 = icmp ugt i64* %559, %1
  %564 = and i1 %562, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %551
  %566 = and i64 %549, 4611686018427387900
  %567 = getelementptr i64, i64* %378, i64 %566
  %568 = getelementptr i64, i64* %1, i64 %566
  %569 = add nsw i64 %566, -4
  %570 = lshr exact i64 %569, 2
  %571 = add nuw nsw i64 %570, 1
  %572 = and i64 %571, 3
  %573 = icmp ult i64 %569, 12
  br i1 %573, label %625, label %574

574:                                              ; preds = %565
  %575 = sub nsw i64 %571, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %622, %576 ]
  %578 = phi i64 [ %575, %574 ], [ %623, %576 ]
  %579 = getelementptr i64, i64* %378, i64 %577
  %580 = getelementptr i64, i64* %1, i64 %577
  %581 = bitcast i64* %580 to <2 x i64>*
  %582 = load <2 x i64>, <2 x i64>* %581, align 8, !alias.scope !117
  %583 = getelementptr i64, i64* %580, i64 2
  %584 = bitcast i64* %583 to <2 x i64>*
  %585 = load <2 x i64>, <2 x i64>* %584, align 8, !alias.scope !117
  %586 = bitcast i64* %579 to <2 x i64>*
  store <2 x i64> %582, <2 x i64>* %586, align 8, !alias.scope !120, !noalias !117
  %587 = getelementptr i64, i64* %579, i64 2
  %588 = bitcast i64* %587 to <2 x i64>*
  store <2 x i64> %585, <2 x i64>* %588, align 8, !alias.scope !120, !noalias !117
  %589 = or i64 %577, 4
  %590 = getelementptr i64, i64* %378, i64 %589
  %591 = getelementptr i64, i64* %1, i64 %589
  %592 = bitcast i64* %591 to <2 x i64>*
  %593 = load <2 x i64>, <2 x i64>* %592, align 8, !alias.scope !117
  %594 = getelementptr i64, i64* %591, i64 2
  %595 = bitcast i64* %594 to <2 x i64>*
  %596 = load <2 x i64>, <2 x i64>* %595, align 8, !alias.scope !117
  %597 = bitcast i64* %590 to <2 x i64>*
  store <2 x i64> %593, <2 x i64>* %597, align 8, !alias.scope !120, !noalias !117
  %598 = getelementptr i64, i64* %590, i64 2
  %599 = bitcast i64* %598 to <2 x i64>*
  store <2 x i64> %596, <2 x i64>* %599, align 8, !alias.scope !120, !noalias !117
  %600 = or i64 %577, 8
  %601 = getelementptr i64, i64* %378, i64 %600
  %602 = getelementptr i64, i64* %1, i64 %600
  %603 = bitcast i64* %602 to <2 x i64>*
  %604 = load <2 x i64>, <2 x i64>* %603, align 8, !alias.scope !117
  %605 = getelementptr i64, i64* %602, i64 2
  %606 = bitcast i64* %605 to <2 x i64>*
  %607 = load <2 x i64>, <2 x i64>* %606, align 8, !alias.scope !117
  %608 = bitcast i64* %601 to <2 x i64>*
  store <2 x i64> %604, <2 x i64>* %608, align 8, !alias.scope !120, !noalias !117
  %609 = getelementptr i64, i64* %601, i64 2
  %610 = bitcast i64* %609 to <2 x i64>*
  store <2 x i64> %607, <2 x i64>* %610, align 8, !alias.scope !120, !noalias !117
  %611 = or i64 %577, 12
  %612 = getelementptr i64, i64* %378, i64 %611
  %613 = getelementptr i64, i64* %1, i64 %611
  %614 = bitcast i64* %613 to <2 x i64>*
  %615 = load <2 x i64>, <2 x i64>* %614, align 8, !alias.scope !117
  %616 = getelementptr i64, i64* %613, i64 2
  %617 = bitcast i64* %616 to <2 x i64>*
  %618 = load <2 x i64>, <2 x i64>* %617, align 8, !alias.scope !117
  %619 = bitcast i64* %612 to <2 x i64>*
  store <2 x i64> %615, <2 x i64>* %619, align 8, !alias.scope !120, !noalias !117
  %620 = getelementptr i64, i64* %612, i64 2
  %621 = bitcast i64* %620 to <2 x i64>*
  store <2 x i64> %618, <2 x i64>* %621, align 8, !alias.scope !120, !noalias !117
  %622 = add i64 %577, 16
  %623 = add i64 %578, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %576, !llvm.loop !122

625:                                              ; preds = %576, %565
  %626 = phi i64 [ 0, %565 ], [ %622, %576 ]
  %627 = icmp eq i64 %572, 0
  br i1 %627, label %644, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %641, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %642, %628 ], [ %572, %625 ]
  %631 = getelementptr i64, i64* %378, i64 %629
  %632 = getelementptr i64, i64* %1, i64 %629
  %633 = bitcast i64* %632 to <2 x i64>*
  %634 = load <2 x i64>, <2 x i64>* %633, align 8, !alias.scope !117
  %635 = getelementptr i64, i64* %632, i64 2
  %636 = bitcast i64* %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !117
  %638 = bitcast i64* %631 to <2 x i64>*
  store <2 x i64> %634, <2 x i64>* %638, align 8, !alias.scope !120, !noalias !117
  %639 = getelementptr i64, i64* %631, i64 2
  %640 = bitcast i64* %639 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %640, align 8, !alias.scope !120, !noalias !117
  %641 = add i64 %629, 4
  %642 = add i64 %630, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %628, !llvm.loop !123

644:                                              ; preds = %628, %625
  %645 = icmp eq i64 %549, %566
  br i1 %645, label %699, label %646

646:                                              ; preds = %644, %551, %544
  %647 = phi i64* [ %378, %551 ], [ %378, %544 ], [ %567, %644 ]
  %648 = phi i64* [ %1, %551 ], [ %1, %544 ], [ %568, %644 ]
  %649 = ptrtoint i64* %648 to i64
  %650 = getelementptr i64, i64* %542, i64 -1
  %651 = ptrtoint i64* %650 to i64
  %652 = sub i64 %651, %649
  %653 = lshr i64 %652, 3
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %646, %657
  %658 = phi i64* [ %663, %657 ], [ %647, %646 ]
  %659 = phi i64* [ %662, %657 ], [ %648, %646 ]
  %660 = phi i64 [ %664, %657 ], [ %655, %646 ]
  %661 = load i64, i64* %659, align 8
  store i64 %661, i64* %658, align 8
  %662 = getelementptr inbounds i64, i64* %659, i64 1
  %663 = getelementptr inbounds i64, i64* %658, i64 1
  %664 = add i64 %660, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %657, !llvm.loop !124

666:                                              ; preds = %657, %646
  %667 = phi i64* [ undef, %646 ], [ %663, %657 ]
  %668 = phi i64* [ %647, %646 ], [ %663, %657 ]
  %669 = phi i64* [ %648, %646 ], [ %662, %657 ]
  %670 = icmp ult i64 %652, 56
  br i1 %670, label %699, label %671

671:                                              ; preds = %666, %671
  %672 = phi i64* [ %697, %671 ], [ %668, %666 ]
  %673 = phi i64* [ %696, %671 ], [ %669, %666 ]
  %674 = load i64, i64* %673, align 8
  store i64 %674, i64* %672, align 8
  %675 = getelementptr inbounds i64, i64* %673, i64 1
  %676 = getelementptr inbounds i64, i64* %672, i64 1
  %677 = load i64, i64* %675, align 8
  store i64 %677, i64* %676, align 8
  %678 = getelementptr inbounds i64, i64* %673, i64 2
  %679 = getelementptr inbounds i64, i64* %672, i64 2
  %680 = load i64, i64* %678, align 8
  store i64 %680, i64* %679, align 8
  %681 = getelementptr inbounds i64, i64* %673, i64 3
  %682 = getelementptr inbounds i64, i64* %672, i64 3
  %683 = load i64, i64* %681, align 8
  store i64 %683, i64* %682, align 8
  %684 = getelementptr inbounds i64, i64* %673, i64 4
  %685 = getelementptr inbounds i64, i64* %672, i64 4
  %686 = load i64, i64* %684, align 8
  store i64 %686, i64* %685, align 8
  %687 = getelementptr inbounds i64, i64* %673, i64 5
  %688 = getelementptr inbounds i64, i64* %672, i64 5
  %689 = load i64, i64* %687, align 8
  store i64 %689, i64* %688, align 8
  %690 = getelementptr inbounds i64, i64* %673, i64 6
  %691 = getelementptr inbounds i64, i64* %672, i64 6
  %692 = load i64, i64* %690, align 8
  store i64 %692, i64* %691, align 8
  %693 = getelementptr inbounds i64, i64* %673, i64 7
  %694 = getelementptr inbounds i64, i64* %672, i64 7
  %695 = load i64, i64* %693, align 8
  store i64 %695, i64* %694, align 8
  %696 = getelementptr inbounds i64, i64* %673, i64 8
  %697 = getelementptr inbounds i64, i64* %672, i64 8
  %698 = icmp eq i64* %696, %542
  br i1 %698, label %699, label %671, !llvm.loop !125

699:                                              ; preds = %666, %671, %644, %541
  %700 = phi i64* [ %378, %541 ], [ %567, %644 ], [ %667, %666 ], [ %697, %671 ]
  %701 = ptrtoint i64* %700 to i64
  %702 = load i64*, i64** %9, align 8
  store i64 %536, i64* %340, align 8
  store i64 %701, i64* %24, align 8
  store i64 %377, i64* %16, align 8
  %703 = icmp eq i64* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = bitcast i64* %702 to i8*
  tail call void @_ZdlPv(i8* %705) #20
  br label %706

706:                                              ; preds = %704, %699, %191, %334, %338, %4
  %707 = phi i64* [ %1, %4 ], [ %1, %338 ], [ %1, %334 ], [ %1, %191 ], [ %375, %699 ], [ %375, %704 ]
  ret i64* %707
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData26CalculateWordStartsOffsetsERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.420"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %class.TailoredWordBreakIterator, align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  store i64 0, i64* %3, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %1, i64 0, i32 0, i32 1
  %15 = bitcast i64** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.420"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %12, %20
  %22 = inttoptr i64 %18 to i64*
  br i1 %21, label %23, label %25

23:                                               ; preds = %2
  %24 = sub nsw i64 %12, %20
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.420"* %1, i64 %24, i64* nonnull dereferenceable(8) %3) #19
  br label %29

25:                                               ; preds = %2
  %26 = icmp ult i64 %12, %20
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = getelementptr inbounds i64, i64* %22, i64 %12
  store i64* %28, i64** %14, align 8
  br label %29

29:                                               ; preds = %23, %25, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  %30 = load i64, i64* %7, align 8
  %31 = load i64, i64* %9, align 8
  %32 = icmp eq i64 %30, %31
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  %34 = bitcast %class.TailoredWordBreakIterator* %4 to i8*
  %35 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %38 = getelementptr inbounds %class.TailoredWordBreakIterator, %class.TailoredWordBreakIterator* %4, i64 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %1, i64 0, i32 0, i32 0
  br label %41

40:                                               ; preds = %69, %29
  ret void

41:                                               ; preds = %33, %69
  %42 = phi i64 [ %31, %33 ], [ %72, %69 ]
  %43 = phi i64 [ 0, %33 ], [ %70, %69 ]
  %44 = inttoptr i64 %42 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %34) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 104, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #19
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 %43
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %45 to i16*
  %53 = select i1 %49, i16* %51, i16* %52
  store i16* %53, i16** %36, align 8
  %54 = load i8, i8* %47, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 %43, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %54 to i64
  %59 = select i1 %55, i64 %57, i64 %58
  store i64 %59, i64* %37, align 8
  call void @_ZN25TailoredWordBreakIteratorC1ERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_4i18n13BreakIterator9BreakTypeE(%class.TailoredWordBreakIterator* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #19
  %60 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %38) #19
  br i1 %60, label %61, label %69

61:                                               ; preds = %41, %63
  %62 = call zeroext i1 @_ZN25TailoredWordBreakIterator7AdvanceEv(%class.TailoredWordBreakIterator* nonnull %4) #19
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = call zeroext i1 @_ZNK25TailoredWordBreakIterator6IsWordEv(%class.TailoredWordBreakIterator* nonnull %4) #19
  br i1 %64, label %65, label %61

65:                                               ; preds = %63, %61
  %66 = call i64 @_ZNK25TailoredWordBreakIterator4prevEv(%class.TailoredWordBreakIterator* nonnull %4) #19
  %67 = load i64*, i64** %39, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 %43
  store i64 %66, i64* %68, align 8
  br label %69

69:                                               ; preds = %41, %65
  call void @_ZN25TailoredWordBreakIteratorD1Ev(%class.TailoredWordBreakIterator* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %34) #19
  %70 = add nuw i64 %43, 1
  %71 = load i64, i64* %7, align 8
  %72 = load i64, i64* %9, align 8
  %73 = sub i64 %71, %72
  %74 = sdiv exact i64 %73, 24
  %75 = icmp ult i64 %70, %74
  br i1 %75, label %41, label %40
}

declare zeroext i1 @_ZN9bookmarks13BookmarkModel12IsBookmarkedERK4GURL(%"class.bookmarks::BookmarkModel"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN18ScoredHistoryMatchC1ERKN7history6URLRowERKNSt3__16vectorINS4_4pairIN4base4TimeEN2ui14PageTransitionEEENS4_9allocatorISB_EEEERKNS4_12basic_stringIDsNS4_11char_traitsIDsEENSC_IDsEEEERKNS5_ISL_NSC_ISL_EEEERKNS5_ImNSC_ImEEEERK13RowWordStartsbmS8_(%struct.ScoredHistoryMatch*, %"class.history::URLRow"* dereferenceable(184), %"class.std::__1::vector.485"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.420"* dereferenceable(24), %struct.RowWordStarts* dereferenceable(48), i1 zeroext, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch*) unnamed_addr #4

declare void @_ZN25TailoredWordBreakIteratorC1ERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_4i18n13BreakIterator9BreakTypeE(%class.TailoredWordBreakIterator*, %"class.base::BasicStringPiece"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #1

declare zeroext i1 @_ZN25TailoredWordBreakIterator7AdvanceEv(%class.TailoredWordBreakIterator*) local_unnamed_addr #1

declare zeroext i1 @_ZNK25TailoredWordBreakIterator6IsWordEv(%class.TailoredWordBreakIterator*) local_unnamed_addr #1

declare i64 @_ZNK25TailoredWordBreakIterator4prevEv(%class.TailoredWordBreakIterator*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN25TailoredWordBreakIteratorD1Ev(%class.TailoredWordBreakIterator*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData22URLSchemeIsAllowlistedERK4GURLRKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE(%class.GURL* dereferenceable(120), %"class.std::__1::set.214"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator.114", align 1
  %4 = alloca %"class.std::__1::basic_string.107", align 8
  %5 = bitcast %"class.std::__1::basic_string.107"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #19
  %6 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load i32, i32* %6, align 4, !noalias !126
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #19, !alias.scope !126
  br label %17

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load i32, i32* %12, align 4, !noalias !126
  %14 = sext i32 %13 to i64
  %15 = sext i32 %7 to i64
  %16 = getelementptr inbounds %"class.std::__1::allocator.114", %"class.std::__1::allocator.114"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #19, !noalias !126
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.107"* nonnull %4, %"class.std::__1::basic_string.107"* dereferenceable(24) %11, i64 %14, i64 %15, %"class.std::__1::allocator.114"* nonnull dereferenceable(1) %3) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #19, !noalias !126
  br label %17

17:                                               ; preds = %9, %10
  %18 = getelementptr inbounds %"class.std::__1::set.214", %"class.std::__1::set.214"* %1, i64 0, i32 0
  %19 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.215"* %18, %"class.std::__1::basic_string.107"* nonnull dereferenceable(24) %4) #19
  %20 = getelementptr inbounds %"class.std::__1::set.214", %"class.std::__1::set.214"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = icmp ne %"class.std::__1::__tree_end_node"* %19, %20
  %22 = bitcast %"class.std::__1::basic_string.107"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %17, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #19
  ret i1 %21
}

declare void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), i32, i32, %"struct.url::Parsed"*, i64*, i64*) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL*, i16*, i64) unnamed_addr #1

declare void @_ZN7history6URLRowC1ERK4GURLl(%"class.history::URLRow"*, %class.GURL* dereferenceable(120), i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #4

declare void @_ZN9bookmarks21CleanUpUrlForMatchingERK4GURLPNSt3__16vectorIN4base14OffsetAdjuster10AdjustmentENS3_9allocatorIS7_EEEE(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), %"class.std::__1::vector.541"*) local_unnamed_addr #1

declare void @_Z23String16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEPNS_6vectorImNS3_ImEEEE(%"class.base::internal::flat_tree.542"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.420"*) local_unnamed_addr #1

declare void @_ZN9bookmarks23CleanUpTitleForMatchingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData14AddWordToIndexERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEl(%class.URLIndexPrivateData*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"struct.std::__1::pair.547", align 8
  %6 = alloca %"class.base::internal::flat_tree.522", align 8
  store i64 %2, i64* %4, align 8
  %7 = bitcast %"struct.std::__1::pair.547"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #19
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1, !noalias !131
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %13, i64 24, i1 false) #19
  br label %189

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8, !noalias !131
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !131
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"struct.std::__1::pair.547"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"struct.std::__1::pair.547"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1, !alias.scope !131
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"struct.std::__1::pair.547"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #21
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #21
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #20
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"struct.std::__1::pair.547"* %5 to i8**
  store i8* %36, i8** %38, align 8, !alias.scope !131
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"struct.std::__1::pair.547", %"struct.std::__1::pair.547"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8, !alias.scope !131
  %41 = getelementptr inbounds %"struct.std::__1::pair.547", %"struct.std::__1::pair.547"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8, !alias.scope !131
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !134
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !134
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !137, !noalias !134
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !137, !noalias !134
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !134
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !134
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !137, !noalias !134
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !137, !noalias !134
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !134
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !134
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !137, !noalias !134
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !137, !noalias !134
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !134
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !134
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !137, !noalias !134
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !137, !noalias !134
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !139

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !134
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !134
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !137, !noalias !134
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !137, !noalias !134
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !140

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !141

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !142

189:                                              ; preds = %154, %159, %134, %12
  %190 = getelementptr inbounds %"struct.std::__1::pair.547", %"struct.std::__1::pair.547"* %5, i64 0, i32 1
  store i64 0, i64* %190, align 8, !alias.scope !131
  %191 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0
  %192 = getelementptr inbounds %"struct.std::__1::pair.547", %"struct.std::__1::pair.547"* %5, i64 0, i32 0
  %193 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_mEEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.16"* %191, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %192, %"struct.std::__1::pair.547"* nonnull dereferenceable(32) %5) #19
  %194 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %193, 0
  %195 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %193, 1
  %196 = bitcast %"struct.std::__1::pair.547"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %189
  %201 = bitcast %"struct.std::__1::pair.547"* %5 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #20
  br label %203

203:                                              ; preds = %189, %200
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #19
  %204 = icmp eq i8 %195, 0
  br i1 %204, label %334, label %205

205:                                              ; preds = %203
  %206 = call i64 @_ZN19URLIndexPrivateData20AddNewWordToWordListERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.URLIndexPrivateData* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %194, i64 7
  %208 = bitcast %"class.std::__1::__tree_end_node"* %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = bitcast %"class.base::internal::flat_tree.522"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %209) #19
  call void @_Z21Char16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEE(%"class.base::internal::flat_tree.522"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  %210 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %6, i64 0, i32 0, i32 0, i32 0
  %211 = load i16*, i16** %210, align 8
  %212 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %6, i64 0, i32 0, i32 0, i32 1
  %213 = load i16*, i16** %212, align 8
  %214 = icmp eq i16* %211, %213
  br i1 %214, label %226, label %215

215:                                              ; preds = %205
  %216 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9
  %217 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %218 = bitcast %"class.std::__1::__tree_end_node"* %217 to %"class.std::__1::__tree_node.581"**
  %219 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %220 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %217, i64 0, i32 0
  %221 = getelementptr inbounds %"class.std::__1::map.24", %"class.std::__1::map.24"* %216, i64 0, i32 0, i32 0
  %222 = bitcast %"class.std::__1::map.24"* %216 to i64*
  %223 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  br label %234

224:                                              ; preds = %331
  %225 = load i16*, i16** %210, align 8
  br label %226

226:                                              ; preds = %224, %205
  %227 = phi i16* [ %225, %224 ], [ %211, %205 ]
  %228 = icmp eq i16* %227, null
  br i1 %228, label %233, label %229

229:                                              ; preds = %226
  %230 = ptrtoint i16* %227 to i64
  %231 = bitcast i16** %212 to i64*
  store i64 %230, i64* %231, align 8
  %232 = bitcast i16* %227 to i8*
  call void @_ZdlPv(i8* %232) #20
  br label %233

233:                                              ; preds = %226, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %209) #19
  br label %334

234:                                              ; preds = %215, %331
  %235 = phi i16* [ %211, %215 ], [ %332, %331 ]
  %236 = load i16, i16* %235, align 2
  %237 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %218, align 8
  %238 = icmp eq %"class.std::__1::__tree_node.581"* %237, null
  br i1 %238, label %265, label %239

239:                                              ; preds = %234, %261
  %240 = phi %"class.std::__1::__tree_node.581"* [ %264, %261 ], [ %237, %234 ]
  %241 = phi %"class.std::__1::__tree_node_base"** [ %263, %261 ], [ %219, %234 ]
  %242 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %240, i64 0, i32 1, i32 0, i32 0
  %243 = load i16, i16* %242, align 2
  %244 = icmp ult i16 %236, %243
  br i1 %244, label %245, label %251

245:                                              ; preds = %239
  %246 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %240, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node_base"* %247, null
  br i1 %248, label %249, label %261

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %240, i64 0, i32 0, i32 0
  br label %265

251:                                              ; preds = %239
  %252 = icmp ult i16 %243, %236
  br i1 %252, label %253, label %259

253:                                              ; preds = %251
  %254 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %240, i64 0, i32 0, i32 1
  %255 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %254, align 8
  %256 = icmp eq %"class.std::__1::__tree_node_base"* %255, null
  br i1 %256, label %257, label %261

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %240, i64 0, i32 0, i32 0
  br label %265

259:                                              ; preds = %251
  %260 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %240, i64 0, i32 0, i32 0
  br label %265

261:                                              ; preds = %253, %245
  %262 = phi %"class.std::__1::__tree_node_base"* [ %247, %245 ], [ %255, %253 ]
  %263 = phi %"class.std::__1::__tree_node_base"** [ %246, %245 ], [ %254, %253 ]
  %264 = bitcast %"class.std::__1::__tree_node_base"* %262 to %"class.std::__1::__tree_node.581"*
  br label %239

265:                                              ; preds = %234, %259, %257, %249
  %266 = phi %"class.std::__1::__tree_end_node"* [ %250, %249 ], [ %258, %257 ], [ %260, %259 ], [ %217, %234 ]
  %267 = phi %"class.std::__1::__tree_node_base"** [ %246, %249 ], [ %254, %257 ], [ %241, %259 ], [ %220, %234 ]
  %268 = bitcast %"class.std::__1::__tree_node_base"** %267 to %"class.std::__1::__tree_node.581"**
  %269 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %268, align 8
  %270 = icmp eq %"class.std::__1::__tree_node.581"* %269, null
  br i1 %270, label %271, label %293

271:                                              ; preds = %265
  %272 = call i8* @_Znwm(i64 64) #20, !noalias !143
  %273 = getelementptr inbounds i8, i8* %272, i64 32
  %274 = bitcast i8* %273 to i16*
  store i16 %236, i16* %274, align 8, !noalias !143
  %275 = getelementptr inbounds i8, i8* %272, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #19, !noalias !143
  %276 = bitcast i8* %272 to %"class.std::__1::__tree_node.581"*
  %277 = bitcast i8* %272 to %"class.std::__1::__tree_node_base"*
  %278 = getelementptr inbounds i8, i8* %272, i64 16
  %279 = bitcast i8* %278 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %272, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %266, %"class.std::__1::__tree_end_node"** %279, align 8
  %280 = bitcast %"class.std::__1::__tree_node_base"** %267 to i8**
  store i8* %272, i8** %280, align 8
  %281 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %221, align 8
  %282 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %281, i64 0, i32 0
  %283 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %282, align 8
  %284 = icmp eq %"class.std::__1::__tree_node_base"* %283, null
  br i1 %284, label %288, label %285

285:                                              ; preds = %271
  %286 = ptrtoint %"class.std::__1::__tree_node_base"* %283 to i64
  store i64 %286, i64* %222, align 8
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %267, align 8
  br label %288

288:                                              ; preds = %285, %271
  %289 = phi %"class.std::__1::__tree_node_base"* [ %277, %271 ], [ %287, %285 ]
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %219, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %290, %"class.std::__1::__tree_node_base"* %289) #19
  %291 = load i64, i64* %223, align 8
  %292 = add i64 %291, 1
  store i64 %292, i64* %223, align 8
  br label %293

293:                                              ; preds = %265, %288
  %294 = phi %"class.std::__1::__tree_node.581"* [ %276, %288 ], [ %269, %265 ]
  %295 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %294, i64 0, i32 1, i32 0, i32 1
  %296 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %295, i64 0, i32 0, i32 0, i32 0
  %297 = load i64*, i64** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %294, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %299 = bitcast i64** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = ptrtoint i64* %297 to i64
  %302 = sub i64 %300, %301
  %303 = icmp eq i64 %302, 0
  %304 = inttoptr i64 %300 to i64*
  br i1 %303, label %321, label %305

305:                                              ; preds = %293
  %306 = ashr exact i64 %302, 3
  %307 = load i64, i64* %208, align 8
  br label %308

308:                                              ; preds = %308, %305
  %309 = phi i64* [ %297, %305 ], [ %319, %308 ]
  %310 = phi i64 [ %306, %305 ], [ %318, %308 ]
  %311 = lshr i64 %310, 1
  %312 = getelementptr inbounds i64, i64* %309, i64 %311
  %313 = load i64, i64* %312, align 8
  %314 = icmp ult i64 %313, %307
  %315 = getelementptr inbounds i64, i64* %312, i64 1
  %316 = xor i64 %311, -1
  %317 = add i64 %310, %316
  %318 = select i1 %314, i64 %317, i64 %311
  %319 = select i1 %314, i64* %315, i64* %309
  %320 = icmp eq i64 %318, 0
  br i1 %320, label %321, label %308

321:                                              ; preds = %308, %293
  %322 = phi i64* [ %297, %293 ], [ %319, %308 ]
  %323 = icmp eq i64* %322, %304
  br i1 %323, label %328, label %324

324:                                              ; preds = %321
  %325 = load i64, i64* %208, align 8
  %326 = load i64, i64* %322, align 8
  %327 = icmp ult i64 %325, %326
  br i1 %327, label %328, label %331

328:                                              ; preds = %324, %321
  %329 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %295, i64 0, i32 0
  %330 = call i64* @_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJRKmEEENS_11__wrap_iterIPmEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.420"* %329, i64* %322, i64* dereferenceable(8) %208) #19
  br label %331

331:                                              ; preds = %324, %328
  %332 = getelementptr inbounds i16, i16* %235, i64 1
  %333 = icmp eq i16* %332, %213
  br i1 %333, label %224, label %234

334:                                              ; preds = %203, %233
  %335 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10
  %336 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %194, i64 7
  %337 = bitcast %"class.std::__1::__tree_end_node"* %336 to i64*
  %338 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %339 = bitcast %"class.std::__1::__tree_end_node"* %338 to %"class.std::__1::__tree_node.583"**
  %340 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %339, align 8
  %341 = icmp eq %"class.std::__1::__tree_node.583"* %340, null
  br i1 %341, label %371, label %342

342:                                              ; preds = %334
  %343 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %344 = load i64, i64* %337, align 8
  br label %345

345:                                              ; preds = %367, %342
  %346 = phi %"class.std::__1::__tree_node.583"* [ %370, %367 ], [ %340, %342 ]
  %347 = phi %"class.std::__1::__tree_node_base"** [ %369, %367 ], [ %343, %342 ]
  %348 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %346, i64 0, i32 1, i32 0, i32 0
  %349 = load i64, i64* %348, align 8
  %350 = icmp ult i64 %344, %349
  br i1 %350, label %351, label %357

351:                                              ; preds = %345
  %352 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %346, i64 0, i32 0, i32 0, i32 0
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %355, label %367

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %346, i64 0, i32 0, i32 0
  br label %373

357:                                              ; preds = %345
  %358 = icmp ult i64 %349, %344
  br i1 %358, label %359, label %365

359:                                              ; preds = %357
  %360 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %346, i64 0, i32 0, i32 1
  %361 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %360, align 8
  %362 = icmp eq %"class.std::__1::__tree_node_base"* %361, null
  br i1 %362, label %363, label %367

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %346, i64 0, i32 0, i32 0
  br label %373

365:                                              ; preds = %357
  %366 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %346, i64 0, i32 0, i32 0
  br label %373

367:                                              ; preds = %359, %351
  %368 = phi %"class.std::__1::__tree_node_base"* [ %353, %351 ], [ %361, %359 ]
  %369 = phi %"class.std::__1::__tree_node_base"** [ %352, %351 ], [ %360, %359 ]
  %370 = bitcast %"class.std::__1::__tree_node_base"* %368 to %"class.std::__1::__tree_node.583"*
  br label %345

371:                                              ; preds = %334
  %372 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %338, i64 0, i32 0
  br label %373

373:                                              ; preds = %371, %365, %363, %355
  %374 = phi %"class.std::__1::__tree_end_node"* [ %338, %371 ], [ %356, %355 ], [ %364, %363 ], [ %366, %365 ]
  %375 = phi %"class.std::__1::__tree_node_base"** [ %372, %371 ], [ %352, %355 ], [ %360, %363 ], [ %347, %365 ]
  %376 = bitcast %"class.std::__1::__tree_node_base"** %375 to %"class.std::__1::__tree_node.583"**
  %377 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node.583"* %377, null
  br i1 %378, label %379, label %406

379:                                              ; preds = %373
  %380 = call i8* @_Znwm(i64 64) #20, !noalias !146
  %381 = getelementptr inbounds i8, i8* %380, i64 32
  %382 = bitcast i8* %381 to i64*
  %383 = load i64, i64* %337, align 8, !noalias !146
  store i64 %383, i64* %382, align 8, !noalias !146
  %384 = getelementptr inbounds i8, i8* %380, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %384, i8 0, i64 24, i1 false) #19, !noalias !146
  %385 = bitcast i8* %380 to %"class.std::__1::__tree_node.583"*
  %386 = bitcast i8* %380 to %"class.std::__1::__tree_node_base"*
  %387 = getelementptr inbounds i8, i8* %380, i64 16
  %388 = bitcast i8* %387 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %380, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %374, %"class.std::__1::__tree_end_node"** %388, align 8
  %389 = bitcast %"class.std::__1::__tree_node_base"** %375 to i8**
  store i8* %380, i8** %389, align 8
  %390 = getelementptr inbounds %"class.std::__1::map.35", %"class.std::__1::map.35"* %335, i64 0, i32 0, i32 0
  %391 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %391, i64 0, i32 0
  %393 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %392, align 8
  %394 = icmp eq %"class.std::__1::__tree_node_base"* %393, null
  br i1 %394, label %399, label %395

395:                                              ; preds = %379
  %396 = ptrtoint %"class.std::__1::__tree_node_base"* %393 to i64
  %397 = bitcast %"class.std::__1::map.35"* %335 to i64*
  store i64 %396, i64* %397, align 8
  %398 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %375, align 8
  br label %399

399:                                              ; preds = %395, %379
  %400 = phi %"class.std::__1::__tree_node_base"* [ %386, %379 ], [ %398, %395 ]
  %401 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %402 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %401, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %402, %"class.std::__1::__tree_node_base"* %400) #19
  %403 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %404 = load i64, i64* %403, align 8
  %405 = add i64 %404, 1
  store i64 %405, i64* %403, align 8
  br label %406

406:                                              ; preds = %373, %399
  %407 = phi %"class.std::__1::__tree_node.583"* [ %385, %399 ], [ %377, %373 ]
  %408 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %407, i64 0, i32 1, i32 0, i32 1
  %409 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %408, i64 0, i32 0, i32 0, i32 0
  %410 = load i64*, i64** %409, align 8
  %411 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %407, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %412 = bitcast i64** %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = ptrtoint i64* %410 to i64
  %415 = sub i64 %413, %414
  %416 = icmp eq i64 %415, 0
  %417 = inttoptr i64 %413 to i64*
  br i1 %416, label %434, label %418

418:                                              ; preds = %406
  %419 = ashr exact i64 %415, 3
  %420 = load i64, i64* %4, align 8
  br label %421

421:                                              ; preds = %421, %418
  %422 = phi i64* [ %410, %418 ], [ %432, %421 ]
  %423 = phi i64 [ %419, %418 ], [ %431, %421 ]
  %424 = lshr i64 %423, 1
  %425 = getelementptr inbounds i64, i64* %422, i64 %424
  %426 = load i64, i64* %425, align 8
  %427 = icmp slt i64 %426, %420
  %428 = getelementptr inbounds i64, i64* %425, i64 1
  %429 = xor i64 %424, -1
  %430 = add i64 %423, %429
  %431 = select i1 %427, i64 %430, i64 %424
  %432 = select i1 %427, i64* %428, i64* %422
  %433 = icmp eq i64 %431, 0
  br i1 %433, label %434, label %421

434:                                              ; preds = %421, %406
  %435 = phi i64* [ %410, %406 ], [ %432, %421 ]
  %436 = icmp eq i64* %435, %417
  br i1 %436, label %441, label %437

437:                                              ; preds = %434
  %438 = load i64, i64* %4, align 8
  %439 = load i64, i64* %435, align 8
  %440 = icmp slt i64 %438, %439
  br i1 %440, label %441, label %444

441:                                              ; preds = %437, %434
  %442 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %408, i64 0, i32 0
  %443 = call i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJRKlEEENS_11__wrap_iterIPlEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.428"* %442, i64* %435, i64* nonnull dereferenceable(8) %4) #19
  br label %444

444:                                              ; preds = %437, %441
  %445 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11
  %446 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %447 = bitcast %"class.std::__1::__tree_end_node"* %446 to %"class.std::__1::__tree_node.585"**
  %448 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %447, align 8
  %449 = icmp eq %"class.std::__1::__tree_node.585"* %448, null
  br i1 %449, label %479, label %450

450:                                              ; preds = %444
  %451 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %452 = load i64, i64* %4, align 8
  br label %453

453:                                              ; preds = %475, %450
  %454 = phi %"class.std::__1::__tree_node.585"* [ %478, %475 ], [ %448, %450 ]
  %455 = phi %"class.std::__1::__tree_node_base"** [ %477, %475 ], [ %451, %450 ]
  %456 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %454, i64 0, i32 1, i32 0, i32 0
  %457 = load i64, i64* %456, align 8
  %458 = icmp slt i64 %452, %457
  br i1 %458, label %459, label %465

459:                                              ; preds = %453
  %460 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %454, i64 0, i32 0, i32 0, i32 0
  %461 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %460, align 8
  %462 = icmp eq %"class.std::__1::__tree_node_base"* %461, null
  br i1 %462, label %463, label %475

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %454, i64 0, i32 0, i32 0
  br label %481

465:                                              ; preds = %453
  %466 = icmp slt i64 %457, %452
  br i1 %466, label %467, label %473

467:                                              ; preds = %465
  %468 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %454, i64 0, i32 0, i32 1
  %469 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %468, align 8
  %470 = icmp eq %"class.std::__1::__tree_node_base"* %469, null
  br i1 %470, label %471, label %475

471:                                              ; preds = %467
  %472 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %454, i64 0, i32 0, i32 0
  br label %481

473:                                              ; preds = %465
  %474 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %454, i64 0, i32 0, i32 0
  br label %481

475:                                              ; preds = %467, %459
  %476 = phi %"class.std::__1::__tree_node_base"* [ %461, %459 ], [ %469, %467 ]
  %477 = phi %"class.std::__1::__tree_node_base"** [ %460, %459 ], [ %468, %467 ]
  %478 = bitcast %"class.std::__1::__tree_node_base"* %476 to %"class.std::__1::__tree_node.585"*
  br label %453

479:                                              ; preds = %444
  %480 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %446, i64 0, i32 0
  br label %481

481:                                              ; preds = %479, %473, %471, %463
  %482 = phi %"class.std::__1::__tree_end_node"* [ %446, %479 ], [ %464, %463 ], [ %472, %471 ], [ %474, %473 ]
  %483 = phi %"class.std::__1::__tree_node_base"** [ %480, %479 ], [ %460, %463 ], [ %468, %471 ], [ %455, %473 ]
  %484 = bitcast %"class.std::__1::__tree_node_base"** %483 to %"class.std::__1::__tree_node.585"**
  %485 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %484, align 8
  %486 = icmp eq %"class.std::__1::__tree_node.585"* %485, null
  br i1 %486, label %487, label %514

487:                                              ; preds = %481
  %488 = call i8* @_Znwm(i64 64) #20, !noalias !149
  %489 = getelementptr inbounds i8, i8* %488, i64 32
  %490 = bitcast i8* %489 to i64*
  %491 = load i64, i64* %4, align 8, !noalias !149
  store i64 %491, i64* %490, align 8, !noalias !149
  %492 = getelementptr inbounds i8, i8* %488, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %492, i8 0, i64 24, i1 false) #19, !noalias !149
  %493 = bitcast i8* %488 to %"class.std::__1::__tree_node.585"*
  %494 = bitcast i8* %488 to %"class.std::__1::__tree_node_base"*
  %495 = getelementptr inbounds i8, i8* %488, i64 16
  %496 = bitcast i8* %495 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %482, %"class.std::__1::__tree_end_node"** %496, align 8
  %497 = bitcast %"class.std::__1::__tree_node_base"** %483 to i8**
  store i8* %488, i8** %497, align 8
  %498 = getelementptr inbounds %"class.std::__1::map.46", %"class.std::__1::map.46"* %445, i64 0, i32 0, i32 0
  %499 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %498, align 8
  %500 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %499, i64 0, i32 0
  %501 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %500, align 8
  %502 = icmp eq %"class.std::__1::__tree_node_base"* %501, null
  br i1 %502, label %507, label %503

503:                                              ; preds = %487
  %504 = ptrtoint %"class.std::__1::__tree_node_base"* %501 to i64
  %505 = bitcast %"class.std::__1::map.46"* %445 to i64*
  store i64 %504, i64* %505, align 8
  %506 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %483, align 8
  br label %507

507:                                              ; preds = %503, %487
  %508 = phi %"class.std::__1::__tree_node_base"* [ %494, %487 ], [ %506, %503 ]
  %509 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %510 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %509, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %510, %"class.std::__1::__tree_node_base"* %508) #19
  %511 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %512 = load i64, i64* %511, align 8
  %513 = add i64 %512, 1
  store i64 %513, i64* %511, align 8
  br label %514

514:                                              ; preds = %481, %507
  %515 = phi %"class.std::__1::__tree_node.585"* [ %493, %507 ], [ %485, %481 ]
  %516 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %515, i64 0, i32 1, i32 0, i32 1
  %517 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %516, i64 0, i32 0, i32 0, i32 0
  %518 = load i64*, i64** %517, align 8
  %519 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %515, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %520 = bitcast i64** %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = ptrtoint i64* %518 to i64
  %523 = sub i64 %521, %522
  %524 = icmp eq i64 %523, 0
  %525 = inttoptr i64 %521 to i64*
  br i1 %524, label %542, label %526

526:                                              ; preds = %514
  %527 = ashr exact i64 %523, 3
  %528 = load i64, i64* %337, align 8
  br label %529

529:                                              ; preds = %529, %526
  %530 = phi i64* [ %518, %526 ], [ %540, %529 ]
  %531 = phi i64 [ %527, %526 ], [ %539, %529 ]
  %532 = lshr i64 %531, 1
  %533 = getelementptr inbounds i64, i64* %530, i64 %532
  %534 = load i64, i64* %533, align 8
  %535 = icmp ult i64 %534, %528
  %536 = getelementptr inbounds i64, i64* %533, i64 1
  %537 = xor i64 %532, -1
  %538 = add i64 %531, %537
  %539 = select i1 %535, i64 %538, i64 %532
  %540 = select i1 %535, i64* %536, i64* %530
  %541 = icmp eq i64 %539, 0
  br i1 %541, label %542, label %529

542:                                              ; preds = %529, %514
  %543 = phi i64* [ %518, %514 ], [ %540, %529 ]
  %544 = icmp eq i64* %543, %525
  br i1 %544, label %549, label %545

545:                                              ; preds = %542
  %546 = load i64, i64* %337, align 8
  %547 = load i64, i64* %543, align 8
  %548 = icmp ult i64 %546, %547
  br i1 %548, label %549, label %552

549:                                              ; preds = %545, %542
  %550 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %516, i64 0, i32 0
  %551 = call i64* @_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJRKmEEENS_11__wrap_iterIPmEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.420"* %550, i64* %543, i64* dereferenceable(8) %337) #19
  br label %552

552:                                              ; preds = %545, %549
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN19URLIndexPrivateData20AddNewWordToWordListERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.URLIndexPrivateData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7
  %12 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  %17 = inttoptr i64 %6 to %"class.std::__1::basic_string"*
  br i1 %16, label %18, label %209

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %20, %17
  br i1 %21, label %208, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = inttoptr i64 %6 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #19
  br label %205

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, 11
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = inttoptr i64 %6 to i16*
  %38 = trunc i64 %34 to i8
  %39 = inttoptr i64 %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  br label %58

41:                                               ; preds = %30
  %42 = icmp ugt i64 %34, 9223372036854775791
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = inttoptr i64 %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %44) #21
  unreachable

45:                                               ; preds = %41
  %46 = add nuw nsw i64 %34, 8
  %47 = and i64 %46, -8
  %48 = icmp slt i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  tail call void @abort() #21
  unreachable

50:                                               ; preds = %45
  %51 = shl i64 %47, 1
  %52 = tail call i8* @_Znwm(i64 %51) #20
  %53 = bitcast i8* %52 to i16*
  %54 = inttoptr i64 %6 to i8**
  store i8* %52, i8** %54, align 8
  %55 = or i64 %47, -9223372036854775808
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %57, align 8
  br label %58

58:                                               ; preds = %50, %36
  %59 = phi i16* [ %37, %36 ], [ %53, %50 ]
  %60 = add nuw nsw i64 %34, 1
  %61 = add i64 %34, 1
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %152, label %63

63:                                               ; preds = %58
  %64 = add i64 %34, 1
  %65 = getelementptr i16, i16* %59, i64 %64
  %66 = getelementptr i16, i16* %32, i64 %64
  %67 = icmp ult i16* %59, %66
  %68 = icmp ult i16* %32, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %63
  %71 = and i64 %61, -16
  %72 = sub i64 %60, %71
  %73 = getelementptr i16, i16* %32, i64 %71
  %74 = getelementptr i16, i16* %59, i64 %71
  %75 = add i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %32, i64 %83
  %86 = getelementptr i16, i16* %59, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !152
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !152
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !155, !noalias !152
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !155, !noalias !152
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %32, i64 %95
  %97 = getelementptr i16, i16* %59, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !152
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !152
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !155, !noalias !152
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !155, !noalias !152
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %32, i64 %106
  %108 = getelementptr i16, i16* %59, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !152
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !152
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !155, !noalias !152
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !155, !noalias !152
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %32, i64 %117
  %119 = getelementptr i16, i16* %59, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !152
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !152
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !155, !noalias !152
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !155, !noalias !152
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !157

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %32, i64 %135
  %138 = getelementptr i16, i16* %59, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !152
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !152
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !155, !noalias !152
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !155, !noalias !152
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !158

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %61, %71
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %63, %58
  %153 = phi i64 [ %60, %63 ], [ %60, %58 ], [ %72, %150 ]
  %154 = phi i16* [ %32, %63 ], [ %32, %58 ], [ %73, %150 ]
  %155 = phi i16* [ %59, %63 ], [ %59, %58 ], [ %74, %150 ]
  %156 = add i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !159

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !160

205:                                              ; preds = %170, %175, %150, %27
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 1
  %207 = ptrtoint %"class.std::__1::basic_string"* %206 to i64
  store i64 %207, i64* %5, align 8
  br label %237

208:                                              ; preds = %18
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  br label %237

209:                                              ; preds = %2
  %210 = icmp eq i64 %15, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %209
  %212 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  br label %214

214:                                              ; preds = %209, %211
  %215 = phi i64 [ %213, %211 ], [ %15, %209 ]
  %216 = add i64 %215, -1
  %217 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0
  %218 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %217, i64 %216) #19
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0
  %221 = load i64, i64* %14, align 8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %214
  %224 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  br label %226

226:                                              ; preds = %214, %223
  %227 = phi i64 [ %225, %223 ], [ %221, %214 ]
  %228 = add i64 %227, -1
  store i64 %228, i64* %14, align 8
  %229 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %217, i64 %228) #19
  %230 = load i64, i64* %14, align 8
  %231 = add i64 %230, 1
  %232 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %217, i64 %231) #19
  tail call void @_ZN4base14circular_dequeImE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %220) #19
  %233 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %234 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %233, align 8
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 %219
  %236 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %235, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  br label %237

237:                                              ; preds = %208, %205, %226
  %238 = phi i64 [ %219, %226 ], [ %10, %205 ], [ %10, %208 ]
  ret i64 %238
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !161
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !161
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !164, !noalias !161
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !164, !noalias !161
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !161
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !161
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !164, !noalias !161
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !164, !noalias !161
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !161
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !161
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !164, !noalias !161
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !164, !noalias !161
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !161
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !161
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !164, !noalias !161
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !164, !noalias !161
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !166

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !161
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !161
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !164, !noalias !161
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !164, !noalias !161
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !167

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !168

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !169

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #21
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #21
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #20
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !170
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !170
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !173, !noalias !170
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !173, !noalias !170
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !170
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !170
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !173, !noalias !170
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !173, !noalias !170
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !170
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !170
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !173, !noalias !170
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !173, !noalias !170
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !170
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !170
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !173, !noalias !170
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !173, !noalias !170
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !175

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !170
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !170
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !173, !noalias !170
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !173, !noalias !170
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !176

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !177

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !178

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !179
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !179
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !182, !noalias !179
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !182, !noalias !179
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !179
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !179
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !182, !noalias !179
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !182, !noalias !179
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !179
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !179
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !182, !noalias !179
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !182, !noalias !179
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !179
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !179
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !182, !noalias !179
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !182, !noalias !179
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !184

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !179
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !179
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !182, !noalias !179
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !182, !noalias !179
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !185

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !186

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !187

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #19
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData15SavePrivateDataEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = or i32 %6, 64
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 9
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 14
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 10
  store i32 %10, i32* %11, align 8
  %12 = or i32 %6, 448
  store i32 %12, i32* %5, align 4
  %13 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 11
  store i32 0, i32* %13, align 4
  tail call void @_ZNK19URLIndexPrivateData12SaveWordListEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1)
  tail call void @_ZNK19URLIndexPrivateData11SaveWordMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1)
  tail call void @_ZNK19URLIndexPrivateData15SaveCharWordMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1)
  tail call void @_ZNK19URLIndexPrivateData20SaveWordIDHistoryMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1)
  tail call void @_ZNK19URLIndexPrivateData18SaveHistoryInfoMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1)
  tail call void @_ZNK19URLIndexPrivateData17SaveWordStartsMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* %0, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1)
  ret void
}

declare zeroext i1 @_ZNK6google8protobuf11MessageLite17SerializeToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"*, %"class.std::__1::basic_string.107"*) local_unnamed_addr #1

declare i32 @_ZN4base9WriteFileERKNS_8FilePathEPKci(%"class.base::FilePath"* dereferenceable(24), i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData12SaveWordListEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* nocapture readonly, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.107", align 8
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 1
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %6, %8
  br i1 %9, label %76, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 1
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 3
  %15 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"** %14, align 8
  %16 = icmp eq %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %15, null
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  %23 = and i64 %20, -2
  br i1 %22, label %28, label %24, !prof !188

24:                                               ; preds = %17
  %25 = inttoptr i64 %23 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %26 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %25, i64 0, i32 0
  %27 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %26, align 8
  br label %30

28:                                               ; preds = %17
  %29 = inttoptr i64 %23 to %"class.google::protobuf::Arena"*
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.google::protobuf::Arena"* [ %27, %24 ], [ %29, %28 ]
  %32 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index38InMemoryURLIndexCacheItem_WordListItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %31) #19
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %32, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"** %14, align 8
  br label %33

33:                                               ; preds = %10, %30
  %34 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* [ %32, %30 ], [ %15, %10 ]
  %35 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector"* %4 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = sdiv exact i64 %39, 24
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %34, i64 0, i32 1, i32 0, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = or i32 %43, 1
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %34, i64 0, i32 4
  store i32 %41, i32* %45, align 8
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %46, %47
  br i1 %48, label %76, label %49

49:                                               ; preds = %33
  %50 = bitcast %"class.std::__1::basic_string.107"* %3 to i8*
  %51 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %34, i64 0, i32 3, i32 0
  %52 = bitcast %"class.std::__1::basic_string.107"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %49, %73
  %56 = phi %"class.std::__1::basic_string"* [ %46, %49 ], [ %74, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #19
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %56 to i16*
  %64 = select i1 %60, i16* %62, i16* %63
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %59 to i64
  %68 = select i1 %60, i64 %66, i64 %67
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.107"* nonnull sret %3, i16* %64, i64 %68) #19
  call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase3AddINS0_16RepeatedPtrFieldINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE11TypeHandlerELPv0EEEvONT_4TypeE(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %51, %"class.std::__1::basic_string.107"* nonnull dereferenceable(24) %3) #19
  %69 = load i8, i8* %53, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %55
  %72 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %72) #20
  br label %73

73:                                               ; preds = %55, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #19
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 1
  %75 = icmp eq %"class.std::__1::basic_string"* %74, %47
  br i1 %75, label %76, label %55

76:                                               ; preds = %73, %33, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData11SaveWordMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.107", align 8
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %197, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 2
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 4
  %12 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"** %11, align 8
  %13 = icmp eq %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %12, null
  br i1 %13, label %14, label %30

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 0, i32 1
  %16 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  %20 = and i64 %17, -2
  br i1 %19, label %25, label %21, !prof !188

21:                                               ; preds = %14
  %22 = inttoptr i64 %20 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %23 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %22, i64 0, i32 0
  %24 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %23, align 8
  br label %27

25:                                               ; preds = %14
  %26 = inttoptr i64 %20 to %"class.google::protobuf::Arena"*
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi %"class.google::protobuf::Arena"* [ %24, %21 ], [ %26, %25 ]
  %29 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index37InMemoryURLIndexCacheItem_WordMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %28) #19
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %29, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"** %11, align 8
  br label %30

30:                                               ; preds = %7, %27
  %31 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* [ %29, %27 ], [ %12, %7 ]
  %32 = load i64, i64* %4, align 8
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %31, i64 0, i32 1, i32 0, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, 1
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %31, i64 0, i32 4
  store i32 %33, i32* %37, align 8
  %38 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %39, %40
  br i1 %41, label %197, label %42

42:                                               ; preds = %30
  %43 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %31, i64 0, i32 3
  %44 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.510", %"class.google::protobuf::RepeatedPtrField.510"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %31, i64 0, i32 3, i32 0, i32 3
  %46 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %31, i64 0, i32 3, i32 0, i32 1
  %47 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %31, i64 0, i32 3, i32 0, i32 2
  %48 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.510", %"class.google::protobuf::RepeatedPtrField.510"* %43, i64 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string.107"* %3 to i8*
  %50 = bitcast %"class.std::__1::basic_string.107"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %54

54:                                               ; preds = %42, %194
  %55 = phi %"class.std::__1::__tree_end_node"* [ %39, %42 ], [ %195, %194 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 4
  %57 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %45, align 8
  %58 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = load i32, i32* %47, align 4
  br label %75

61:                                               ; preds = %54
  %62 = load i32, i32* %46, align 8
  %63 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp slt i32 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = add nsw i32 %62, 1
  store i32 %67, i32* %46, align 8
  %68 = sext i32 %62 to i64
  %69 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, i64 0, i32 1, i64 %68
  %70 = bitcast i8** %69 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"**
  %71 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"** %70, align 8
  br label %94

72:                                               ; preds = %61
  %73 = load i32, i32* %47, align 4
  %74 = icmp eq i32 %64, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %72, %59
  %76 = phi i32 [ %60, %59 ], [ %64, %72 ]
  %77 = add nsw i32 %76, 1
  call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %44, i32 %77) #19
  %78 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %45, align 8
  %79 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  br label %81

81:                                               ; preds = %75, %72
  %82 = phi i32 [ %80, %75 ], [ %64, %72 ]
  %83 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %78, %75 ], [ %57, %72 ]
  %84 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %83, i64 0, i32 0
  %85 = add nsw i32 %82, 1
  store i32 %85, i32* %84, align 8
  %86 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %48, align 8
  %87 = call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index50InMemoryURLIndexCacheItem_WordMapItem_WordMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %86) #19
  %88 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %45, align 8
  %89 = load i32, i32* %46, align 8
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %46, align 8
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %88, i64 0, i32 1, i64 %91
  %93 = bitcast i8** %92 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"**
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* %87, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"** %93, align 8
  br label %94

94:                                               ; preds = %66, %81
  %95 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* [ %71, %66 ], [ %87, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #19
  %96 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = bitcast %"class.std::__1::__tree_end_node"* %56 to i16**
  %101 = load i16*, i16** %100, align 8
  %102 = bitcast %"class.std::__1::__tree_end_node"* %56 to i16*
  %103 = select i1 %99, i16* %101, i16* %102
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 5
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %98 to i64
  %108 = select i1 %99, i64 %106, i64 %107
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.107"* nonnull sret %3, i16* %103, i64 %108) #19
  %109 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* %95, i64 0, i32 1, i32 0, i64 0
  %110 = load i32, i32* %109, align 4
  %111 = or i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* %95, i64 0, i32 3
  %113 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* %95, i64 0, i32 0, i32 1
  %114 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 1
  %117 = icmp eq i64 %116, 0
  %118 = and i64 %115, -2
  br i1 %117, label %123, label %119, !prof !188

119:                                              ; preds = %94
  %120 = inttoptr i64 %118 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %121 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %120, i64 0, i32 0
  %122 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %121, align 8
  br label %125

123:                                              ; preds = %94
  %124 = inttoptr i64 %118 to %"class.google::protobuf::Arena"*
  br label %125

125:                                              ; preds = %123, %119
  %126 = phi %"class.google::protobuf::Arena"* [ %122, %119 ], [ %124, %123 ]
  %127 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %112, i64 0, i32 0
  %128 = load %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"** %127, align 8
  %129 = icmp eq %"class.std::__1::basic_string.107"* %128, bitcast (%"class.google::protobuf::internal::ExplicitlyConstructed"* @_ZN6google8protobuf8internal26fixed_address_empty_stringE to %"class.std::__1::basic_string.107"*)
  br i1 %129, label %130, label %131

130:                                              ; preds = %125
  call void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"* %112, %"class.google::protobuf::Arena"* %126, %"class.std::__1::basic_string.107"* nonnull %3) #19
  br label %154

131:                                              ; preds = %125
  %132 = icmp eq %"class.std::__1::basic_string.107"* %128, %3
  br i1 %132, label %154, label %133

133:                                              ; preds = %131
  %134 = bitcast %"class.std::__1::basic_string.107"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = load i8, i8* %51, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %137, label %147, label %140

140:                                              ; preds = %133
  br i1 %139, label %143, label %141

141:                                              ; preds = %140
  %142 = bitcast %"class.std::__1::basic_string.107"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* nonnull align 8 %49, i64 24, i1 false) #19
  br label %154

143:                                              ; preds = %140
  %144 = load i8*, i8** %52, align 8
  %145 = load i64, i64* %53, align 8
  %146 = call dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.107"* %128, i8* %144, i64 %145) #19
  br label %154

147:                                              ; preds = %133
  %148 = load i8*, i8** %52, align 8
  %149 = load i64, i64* %53, align 8
  %150 = zext i8 %138 to i64
  %151 = select i1 %139, i8* %148, i8* %49
  %152 = select i1 %139, i64 %149, i64 %150
  %153 = call dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.107"* %128, i8* %151, i64 %152) #19
  br label %154

154:                                              ; preds = %130, %131, %141, %143, %147
  %155 = load i8, i8* %51, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %154
  %158 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %158) #20
  br label %159

159:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #19
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 7
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = trunc i64 %162 to i32
  %164 = load i32, i32* %109, align 4
  %165 = or i32 %164, 2
  store i32 %165, i32* %109, align 4
  %166 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* %95, i64 0, i32 4
  store i32 %163, i32* %166, align 8
  %167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 1, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, null
  br i1 %169, label %170, label %178

170:                                              ; preds = %159
  %171 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node_base"*
  %172 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 2
  %173 = bitcast %"class.std::__1::__tree_end_node"* %172 to %"class.std::__1::__tree_end_node"**
  %174 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, %171
  br i1 %177, label %194, label %185

178:                                              ; preds = %159, %178
  %179 = phi %"class.std::__1::__tree_node_base"* [ %181, %178 ], [ %168, %159 ]
  %180 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %179, i64 0, i32 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %183, label %178

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %179, i64 0, i32 0
  br label %194

185:                                              ; preds = %170, %185
  %186 = phi %"class.std::__1::__tree_end_node"** [ %189, %185 ], [ %173, %170 ]
  %187 = bitcast %"class.std::__1::__tree_end_node"** %186 to %"class.std::__1::__tree_node_base"**
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %188, i64 0, i32 2
  %190 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %189, align 8
  %191 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %190, i64 0, i32 0
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, %188
  br i1 %193, label %194, label %185

194:                                              ; preds = %185, %170, %183
  %195 = phi %"class.std::__1::__tree_end_node"* [ %184, %183 ], [ %174, %170 ], [ %190, %185 ]
  %196 = icmp eq %"class.std::__1::__tree_end_node"* %195, %40
  br i1 %196, label %197, label %54

197:                                              ; preds = %194, %30, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData15SaveCharWordMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %172, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = or i32 %8, 4
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 5
  %11 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"** %10, align 8
  %12 = icmp eq %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %11, null
  br i1 %12, label %13, label %29

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  %19 = and i64 %16, -2
  br i1 %18, label %24, label %20, !prof !188

20:                                               ; preds = %13
  %21 = inttoptr i64 %19 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %22 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %21, i64 0, i32 0
  %23 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %22, align 8
  br label %26

24:                                               ; preds = %13
  %25 = inttoptr i64 %19 to %"class.google::protobuf::Arena"*
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi %"class.google::protobuf::Arena"* [ %23, %20 ], [ %25, %24 ]
  %28 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index41InMemoryURLIndexCacheItem_CharWordMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %27) #19
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %28, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"** %10, align 8
  br label %29

29:                                               ; preds = %6, %26
  %30 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* [ %28, %26 ], [ %11, %6 ]
  %31 = load i64, i64* %3, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %30, i64 0, i32 1, i32 0, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = or i32 %34, 1
  store i32 %35, i32* %33, align 4
  %36 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %30, i64 0, i32 4
  store i32 %32, i32* %36, align 8
  %37 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %38, %39
  br i1 %40, label %172, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %30, i64 0, i32 3
  %43 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.511", %"class.google::protobuf::RepeatedPtrField.511"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %30, i64 0, i32 3, i32 0, i32 3
  %45 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %30, i64 0, i32 3, i32 0, i32 1
  %46 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %30, i64 0, i32 3, i32 0, i32 2
  %47 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.511", %"class.google::protobuf::RepeatedPtrField.511"* %42, i64 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %41, %148
  %49 = phi %"class.std::__1::__tree_end_node"* [ %38, %41 ], [ %149, %148 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 4
  %51 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %44, align 8
  %52 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load i32, i32* %46, align 4
  br label %69

55:                                               ; preds = %48
  %56 = load i32, i32* %45, align 8
  %57 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %51, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %56, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %55
  %61 = add nsw i32 %56, 1
  store i32 %61, i32* %45, align 8
  %62 = sext i32 %56 to i64
  %63 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %51, i64 0, i32 1, i64 %62
  %64 = bitcast i8** %63 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"**
  %65 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"** %64, align 8
  br label %88

66:                                               ; preds = %55
  %67 = load i32, i32* %46, align 4
  %68 = icmp eq i32 %58, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %66, %53
  %70 = phi i32 [ %54, %53 ], [ %58, %66 ]
  %71 = add nsw i32 %70, 1
  tail call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %43, i32 %71) #19
  %72 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %44, align 8
  %73 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  br label %75

75:                                               ; preds = %69, %66
  %76 = phi i32 [ %74, %69 ], [ %58, %66 ]
  %77 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %72, %69 ], [ %51, %66 ]
  %78 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %77, i64 0, i32 0
  %79 = add nsw i32 %76, 1
  store i32 %79, i32* %78, align 8
  %80 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %47, align 8
  %81 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index58InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %80) #19
  %82 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %44, align 8
  %83 = load i32, i32* %45, align 8
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %45, align 8
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %82, i64 0, i32 1, i64 %85
  %87 = bitcast i8** %86 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"**
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %81, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"** %87, align 8
  br label %88

88:                                               ; preds = %60, %75
  %89 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* [ %65, %60 ], [ %81, %75 ]
  %90 = bitcast %"class.std::__1::__tree_end_node"* %50 to i16*
  %91 = load i16, i16* %90, align 8
  %92 = zext i16 %91 to i32
  %93 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %89, i64 0, i32 1, i32 0, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = or i32 %94, 2
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %89, i64 0, i32 6
  store i32 %92, i32* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 5
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 6
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to i64**
  %100 = bitcast %"class.std::__1::__tree_end_node"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::__tree_end_node"* %97 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = lshr exact i64 %104, 3
  %106 = trunc i64 %105 to i32
  %107 = or i32 %94, 3
  store i32 %107, i32* %93, align 4
  %108 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %89, i64 0, i32 5
  store i32 %106, i32* %108, align 4
  %109 = bitcast %"class.std::__1::__tree_end_node"* %97 to i64**
  %110 = load i64*, i64** %109, align 8
  %111 = load i64*, i64** %99, align 8
  %112 = icmp eq i64* %110, %111
  br i1 %112, label %120, label %113

113:                                              ; preds = %88
  %114 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %89, i64 0, i32 3
  %115 = getelementptr inbounds %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField"* %114, i64 0, i32 0
  %116 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %89, i64 0, i32 3, i32 1
  %117 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %89, i64 0, i32 3, i32 2
  %118 = bitcast i8** %117 to i32**
  %119 = load i32, i32* %115, align 8
  br label %151

120:                                              ; preds = %168, %88
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 1, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_node_base"*
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 2
  %127 = bitcast %"class.std::__1::__tree_end_node"* %126 to %"class.std::__1::__tree_end_node"**
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %125
  br i1 %131, label %148, label %139

132:                                              ; preds = %120, %132
  %133 = phi %"class.std::__1::__tree_node_base"* [ %135, %132 ], [ %122, %120 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %137, label %132

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0
  br label %148

139:                                              ; preds = %124, %139
  %140 = phi %"class.std::__1::__tree_end_node"** [ %143, %139 ], [ %127, %124 ]
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to %"class.std::__1::__tree_node_base"**
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %142
  br i1 %147, label %148, label %139

148:                                              ; preds = %139, %124, %137
  %149 = phi %"class.std::__1::__tree_end_node"* [ %138, %137 ], [ %128, %124 ], [ %144, %139 ]
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %149, %39
  br i1 %150, label %172, label %48

151:                                              ; preds = %113, %168
  %152 = phi i32 [ %119, %113 ], [ %169, %168 ]
  %153 = phi i64* [ %110, %113 ], [ %170, %168 ]
  %154 = load i64, i64* %153, align 8
  %155 = trunc i64 %154 to i32
  %156 = load i32, i32* %116, align 4
  %157 = icmp eq i32 %152, %156
  br i1 %157, label %158, label %163

158:                                              ; preds = %151
  %159 = add i32 %152, 1
  tail call void @_ZN6google8protobuf13RepeatedFieldIiE7ReserveEi(%"class.google::protobuf::RepeatedField"* %114, i32 %159) #19
  %160 = load i32*, i32** %118, align 8
  %161 = zext i32 %152 to i64
  %162 = getelementptr inbounds i32, i32* %160, i64 %161
  store i32 %155, i32* %162, align 4
  br label %168

163:                                              ; preds = %151
  %164 = load i32*, i32** %118, align 8
  %165 = zext i32 %152 to i64
  %166 = getelementptr inbounds i32, i32* %164, i64 %165
  store i32 %155, i32* %166, align 4
  %167 = add i32 %152, 1
  br label %168

168:                                              ; preds = %158, %163
  %169 = phi i32 [ %167, %163 ], [ %159, %158 ]
  store i32 %169, i32* %115, align 8
  %170 = getelementptr inbounds i64, i64* %153, i64 1
  %171 = icmp eq i64* %170, %111
  br i1 %171, label %120, label %151

172:                                              ; preds = %148, %29, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData20SaveWordIDHistoryMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %171, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = or i32 %8, 8
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 6
  %11 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"** %10, align 8
  %12 = icmp eq %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %11, null
  br i1 %12, label %13, label %29

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  %19 = and i64 %16, -2
  br i1 %18, label %24, label %20, !prof !188

20:                                               ; preds = %13
  %21 = inttoptr i64 %19 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %22 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %21, i64 0, i32 0
  %23 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %22, align 8
  br label %26

24:                                               ; preds = %13
  %25 = inttoptr i64 %19 to %"class.google::protobuf::Arena"*
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi %"class.google::protobuf::Arena"* [ %23, %20 ], [ %25, %24 ]
  %28 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index46InMemoryURLIndexCacheItem_WordIDHistoryMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %27) #19
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %28, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"** %10, align 8
  br label %29

29:                                               ; preds = %6, %26
  %30 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* [ %28, %26 ], [ %11, %6 ]
  %31 = load i64, i64* %3, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %30, i64 0, i32 1, i32 0, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = or i32 %34, 1
  store i32 %35, i32* %33, align 4
  %36 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %30, i64 0, i32 4
  store i32 %32, i32* %36, align 8
  %37 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %38, %39
  br i1 %40, label %171, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %30, i64 0, i32 3
  %43 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.512", %"class.google::protobuf::RepeatedPtrField.512"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %30, i64 0, i32 3, i32 0, i32 3
  %45 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %30, i64 0, i32 3, i32 0, i32 1
  %46 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %30, i64 0, i32 3, i32 0, i32 2
  %47 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.512", %"class.google::protobuf::RepeatedPtrField.512"* %42, i64 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %41, %148
  %49 = phi %"class.std::__1::__tree_end_node"* [ %38, %41 ], [ %149, %148 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 4
  %51 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %44, align 8
  %52 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load i32, i32* %46, align 4
  br label %69

55:                                               ; preds = %48
  %56 = load i32, i32* %45, align 8
  %57 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %51, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %56, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %55
  %61 = add nsw i32 %56, 1
  store i32 %61, i32* %45, align 8
  %62 = sext i32 %56 to i64
  %63 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %51, i64 0, i32 1, i64 %62
  %64 = bitcast i8** %63 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"**
  %65 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"** %64, align 8
  br label %88

66:                                               ; preds = %55
  %67 = load i32, i32* %46, align 4
  %68 = icmp eq i32 %58, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %66, %53
  %70 = phi i32 [ %54, %53 ], [ %58, %66 ]
  %71 = add nsw i32 %70, 1
  tail call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %43, i32 %71) #19
  %72 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %44, align 8
  %73 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  br label %75

75:                                               ; preds = %69, %66
  %76 = phi i32 [ %74, %69 ], [ %58, %66 ]
  %77 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %72, %69 ], [ %51, %66 ]
  %78 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %77, i64 0, i32 0
  %79 = add nsw i32 %76, 1
  store i32 %79, i32* %78, align 8
  %80 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %47, align 8
  %81 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index68InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %80) #19
  %82 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %44, align 8
  %83 = load i32, i32* %45, align 8
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %45, align 8
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %82, i64 0, i32 1, i64 %85
  %87 = bitcast i8** %86 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"**
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %81, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"** %87, align 8
  br label %88

88:                                               ; preds = %60, %75
  %89 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* [ %65, %60 ], [ %81, %75 ]
  %90 = bitcast %"class.std::__1::__tree_end_node"* %50 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %89, i64 0, i32 1, i32 0, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = or i32 %94, 2
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %89, i64 0, i32 6
  store i32 %92, i32* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 5
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 6
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to i64**
  %100 = bitcast %"class.std::__1::__tree_end_node"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::__tree_end_node"* %97 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = lshr exact i64 %104, 3
  %106 = trunc i64 %105 to i32
  %107 = or i32 %94, 3
  store i32 %107, i32* %93, align 4
  %108 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %89, i64 0, i32 5
  store i32 %106, i32* %108, align 4
  %109 = bitcast %"class.std::__1::__tree_end_node"* %97 to i64**
  %110 = load i64*, i64** %109, align 8
  %111 = load i64*, i64** %99, align 8
  %112 = icmp eq i64* %110, %111
  br i1 %112, label %120, label %113

113:                                              ; preds = %88
  %114 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %89, i64 0, i32 3
  %115 = getelementptr inbounds %"class.google::protobuf::RepeatedField.562", %"class.google::protobuf::RepeatedField.562"* %114, i64 0, i32 0
  %116 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %89, i64 0, i32 3, i32 1
  %117 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %89, i64 0, i32 3, i32 2
  %118 = bitcast i8** %117 to i64**
  %119 = load i32, i32* %115, align 8
  br label %151

120:                                              ; preds = %167, %88
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 1, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_node_base"*
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 2
  %127 = bitcast %"class.std::__1::__tree_end_node"* %126 to %"class.std::__1::__tree_end_node"**
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %125
  br i1 %131, label %148, label %139

132:                                              ; preds = %120, %132
  %133 = phi %"class.std::__1::__tree_node_base"* [ %135, %132 ], [ %122, %120 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %137, label %132

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0
  br label %148

139:                                              ; preds = %124, %139
  %140 = phi %"class.std::__1::__tree_end_node"** [ %143, %139 ], [ %127, %124 ]
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to %"class.std::__1::__tree_node_base"**
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %142
  br i1 %147, label %148, label %139

148:                                              ; preds = %139, %124, %137
  %149 = phi %"class.std::__1::__tree_end_node"* [ %138, %137 ], [ %128, %124 ], [ %144, %139 ]
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %149, %39
  br i1 %150, label %171, label %48

151:                                              ; preds = %113, %167
  %152 = phi i32 [ %119, %113 ], [ %168, %167 ]
  %153 = phi i64* [ %110, %113 ], [ %169, %167 ]
  %154 = load i64, i64* %153, align 8
  %155 = load i32, i32* %116, align 4
  %156 = icmp eq i32 %152, %155
  br i1 %156, label %157, label %162

157:                                              ; preds = %151
  %158 = add i32 %152, 1
  tail call void @_ZN6google8protobuf13RepeatedFieldIlE7ReserveEi(%"class.google::protobuf::RepeatedField.562"* %114, i32 %158) #19
  %159 = load i64*, i64** %118, align 8
  %160 = zext i32 %152 to i64
  %161 = getelementptr inbounds i64, i64* %159, i64 %160
  store i64 %154, i64* %161, align 8
  br label %167

162:                                              ; preds = %151
  %163 = load i64*, i64** %118, align 8
  %164 = zext i32 %152 to i64
  %165 = getelementptr inbounds i64, i64* %163, i64 %164
  store i64 %154, i64* %165, align 8
  %166 = add i32 %152, 1
  br label %167

167:                                              ; preds = %157, %162
  %168 = phi i32 [ %166, %162 ], [ %158, %157 ]
  store i32 %168, i32* %115, align 8
  %169 = getelementptr inbounds i64, i64* %153, i64 1
  %170 = icmp eq i64* %169, %111
  br i1 %170, label %120, label %151

171:                                              ; preds = %148, %29, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData18SaveHistoryInfoMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData* nocapture readonly, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.107", align 8
  %4 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %300, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 16
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 7
  %12 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"** %11, align 8
  %13 = icmp eq %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %12, null
  br i1 %13, label %14, label %30

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 0, i32 1
  %16 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  %20 = and i64 %17, -2
  br i1 %19, label %25, label %21, !prof !188

21:                                               ; preds = %14
  %22 = inttoptr i64 %20 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %23 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %22, i64 0, i32 0
  %24 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %23, align 8
  br label %27

25:                                               ; preds = %14
  %26 = inttoptr i64 %20 to %"class.google::protobuf::Arena"*
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi %"class.google::protobuf::Arena"* [ %24, %21 ], [ %26, %25 ]
  %29 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index44InMemoryURLIndexCacheItem_HistoryInfoMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %28) #19
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %29, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"** %11, align 8
  br label %30

30:                                               ; preds = %7, %27
  %31 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* [ %29, %27 ], [ %12, %7 ]
  %32 = load i64, i64* %4, align 8
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %31, i64 0, i32 1, i32 0, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, 1
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %31, i64 0, i32 4
  store i32 %33, i32* %37, align 8
  %38 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::__hash_node_base"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %300, label %42

42:                                               ; preds = %30
  %43 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %31, i64 0, i32 3
  %44 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.513", %"class.google::protobuf::RepeatedPtrField.513"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %31, i64 0, i32 3, i32 0, i32 3
  %46 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %31, i64 0, i32 3, i32 0, i32 1
  %47 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %31, i64 0, i32 3, i32 0, i32 2
  %48 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.513", %"class.google::protobuf::RepeatedPtrField.513"* %43, i64 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string.107"* %3 to i8*
  %50 = bitcast %"class.std::__1::basic_string.107"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %54

54:                                               ; preds = %42, %242
  %55 = phi i64 [ %40, %42 ], [ %244, %242 ]
  %56 = inttoptr i64 %55 to %"struct.std::__1::__hash_node"*
  %57 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %45, align 8
  %58 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = load i32, i32* %47, align 4
  br label %75

61:                                               ; preds = %54
  %62 = load i32, i32* %46, align 8
  %63 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp slt i32 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = add nsw i32 %62, 1
  store i32 %67, i32* %46, align 8
  %68 = sext i32 %62 to i64
  %69 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, i64 0, i32 1, i64 %68
  %70 = bitcast i8** %69 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"**
  %71 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"** %70, align 8
  br label %94

72:                                               ; preds = %61
  %73 = load i32, i32* %47, align 4
  %74 = icmp eq i32 %64, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %72, %59
  %76 = phi i32 [ %60, %59 ], [ %64, %72 ]
  %77 = add nsw i32 %76, 1
  call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %44, i32 %77) #19
  %78 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %45, align 8
  %79 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  br label %81

81:                                               ; preds = %75, %72
  %82 = phi i32 [ %80, %75 ], [ %64, %72 ]
  %83 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %78, %75 ], [ %57, %72 ]
  %84 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %83, i64 0, i32 0
  %85 = add nsw i32 %82, 1
  store i32 %85, i32* %84, align 8
  %86 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %48, align 8
  %87 = call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index64InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %86) #19
  %88 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %45, align 8
  %89 = load i32, i32* %46, align 8
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %46, align 8
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %88, i64 0, i32 1, i64 %91
  %93 = bitcast i8** %92 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"**
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %87, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"** %93, align 8
  br label %94

94:                                               ; preds = %66, %81
  %95 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* [ %71, %66 ], [ %87, %81 ]
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 1, i32 0, i64 0
  %99 = load i32, i32* %98, align 4
  %100 = or i32 %99, 4
  store i32 %100, i32* %98, align 4
  %101 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 6
  store i64 %97, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = or i32 %99, 12
  store i32 %104, i32* %98, align 4
  %105 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 7
  store i32 %103, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 0, i32 5
  %107 = load i32, i32* %106, align 4
  %108 = or i32 %99, 28
  store i32 %108, i32* %98, align 4
  %109 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 8
  store i32 %107, i32* %109, align 4
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 0, i32 6, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = or i32 %99, 60
  store i32 %112, i32* %98, align 4
  %113 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 9
  store i64 %111, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %115 = call dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNK4GURL4specEv(%class.GURL* %114) #19
  %116 = load i32, i32* %98, align 4
  %117 = or i32 %116, 1
  store i32 %117, i32* %98, align 4
  %118 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 4
  %119 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 0, i32 1
  %120 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  %124 = and i64 %121, -2
  br i1 %123, label %129, label %125, !prof !188

125:                                              ; preds = %94
  %126 = inttoptr i64 %124 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %127 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %126, i64 0, i32 0
  %128 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %127, align 8
  br label %131

129:                                              ; preds = %94
  %130 = inttoptr i64 %124 to %"class.google::protobuf::Arena"*
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi %"class.google::protobuf::Arena"* [ %128, %125 ], [ %130, %129 ]
  %133 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %118, i64 0, i32 0
  %134 = load %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"** %133, align 8
  %135 = icmp eq %"class.std::__1::basic_string.107"* %134, bitcast (%"class.google::protobuf::internal::ExplicitlyConstructed"* @_ZN6google8protobuf8internal26fixed_address_empty_stringE to %"class.std::__1::basic_string.107"*)
  br i1 %135, label %136, label %137

136:                                              ; preds = %131
  call void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"* %118, %"class.google::protobuf::Arena"* %132, %"class.std::__1::basic_string.107"* %115) #19
  br label %168

137:                                              ; preds = %131
  %138 = icmp eq %"class.std::__1::basic_string.107"* %134, %115
  br i1 %138, label %168, label %139

139:                                              ; preds = %137
  %140 = bitcast %"class.std::__1::basic_string.107"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  %144 = bitcast %"class.std::__1::basic_string.107"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %143, label %158, label %148

148:                                              ; preds = %139
  br i1 %147, label %152, label %149

149:                                              ; preds = %148
  %150 = bitcast %"class.std::__1::basic_string.107"* %134 to i8*
  %151 = bitcast %"class.std::__1::basic_string.107"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 24, i1 false) #19
  br label %168

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = call dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.107"* %134, i8* %154, i64 %156) #19
  br label %168

158:                                              ; preds = %139
  %159 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.std::__1::basic_string.107"* %115 to i8*
  %164 = zext i8 %146 to i64
  %165 = select i1 %147, i8* %160, i8* %163
  %166 = select i1 %147, i64 %162, i64 %164
  %167 = call dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.107"* %134, i8* %165, i64 %166) #19
  br label %168

168:                                              ; preds = %136, %137, %149, %152, %158
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #19
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 0, i32 3
  %170 = bitcast %"class.std::__1::basic_string"* %169 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %170, i64 0, i32 1, i32 1
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i16*, i16** %174, align 8
  %176 = bitcast %"class.std::__1::basic_string"* %169 to i16*
  %177 = select i1 %173, i16* %175, i16* %176
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = zext i8 %172 to i64
  %181 = select i1 %173, i64 %179, i64 %180
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.107"* nonnull sret %3, i16* %177, i64 %181) #19
  %182 = load i32, i32* %98, align 4
  %183 = or i32 %182, 2
  store i32 %183, i32* %98, align 4
  %184 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 5
  %185 = load i64, i64* %120, align 8
  %186 = and i64 %185, 1
  %187 = icmp eq i64 %186, 0
  %188 = and i64 %185, -2
  br i1 %187, label %193, label %189, !prof !188

189:                                              ; preds = %168
  %190 = inttoptr i64 %188 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %191 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %190, i64 0, i32 0
  %192 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %191, align 8
  br label %195

193:                                              ; preds = %168
  %194 = inttoptr i64 %188 to %"class.google::protobuf::Arena"*
  br label %195

195:                                              ; preds = %193, %189
  %196 = phi %"class.google::protobuf::Arena"* [ %192, %189 ], [ %194, %193 ]
  %197 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %184, i64 0, i32 0
  %198 = load %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"** %197, align 8
  %199 = icmp eq %"class.std::__1::basic_string.107"* %198, bitcast (%"class.google::protobuf::internal::ExplicitlyConstructed"* @_ZN6google8protobuf8internal26fixed_address_empty_stringE to %"class.std::__1::basic_string.107"*)
  br i1 %199, label %200, label %201

200:                                              ; preds = %195
  call void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"* %184, %"class.google::protobuf::Arena"* %196, %"class.std::__1::basic_string.107"* nonnull %3) #19
  br label %224

201:                                              ; preds = %195
  %202 = icmp eq %"class.std::__1::basic_string.107"* %198, %3
  br i1 %202, label %224, label %203

203:                                              ; preds = %201
  %204 = bitcast %"class.std::__1::basic_string.107"* %198 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  %208 = load i8, i8* %51, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %207, label %217, label %210

210:                                              ; preds = %203
  br i1 %209, label %213, label %211

211:                                              ; preds = %210
  %212 = bitcast %"class.std::__1::basic_string.107"* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* nonnull align 8 %49, i64 24, i1 false) #19
  br label %224

213:                                              ; preds = %210
  %214 = load i8*, i8** %52, align 8
  %215 = load i64, i64* %53, align 8
  %216 = call dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.107"* %198, i8* %214, i64 %215) #19
  br label %224

217:                                              ; preds = %203
  %218 = load i8*, i8** %52, align 8
  %219 = load i64, i64* %53, align 8
  %220 = zext i8 %208 to i64
  %221 = select i1 %209, i8* %218, i8* %49
  %222 = select i1 %209, i64 %219, i64 %220
  %223 = call dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.107"* %198, i8* %221, i64 %222) #19
  br label %224

224:                                              ; preds = %200, %201, %211, %213, %217
  %225 = load i8, i8* %51, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %224
  %228 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %228) #20
  br label %229

229:                                              ; preds = %224, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #19
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 0
  %231 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %230, align 8
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %56, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 1
  %233 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %232, align 8
  %234 = icmp eq %"struct.std::__1::pair.487"* %231, %233
  br i1 %234, label %242, label %235

235:                                              ; preds = %229
  %236 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 3
  %237 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.563", %"class.google::protobuf::RepeatedPtrField.563"* %236, i64 0, i32 0
  %238 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 3, i32 0, i32 3
  %239 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 3, i32 0, i32 1
  %240 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %95, i64 0, i32 3, i32 0, i32 2
  %241 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.563", %"class.google::protobuf::RepeatedPtrField.563"* %236, i64 0, i32 0, i32 0
  br label %246

242:                                              ; preds = %285, %229
  %243 = inttoptr i64 %55 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %300, label %54

246:                                              ; preds = %235, %285
  %247 = phi %"struct.std::__1::pair.487"* [ %231, %235 ], [ %298, %285 ]
  %248 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %238, align 8
  %249 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %248, null
  br i1 %249, label %250, label %252

250:                                              ; preds = %246
  %251 = load i32, i32* %240, align 4
  br label %266

252:                                              ; preds = %246
  %253 = load i32, i32* %239, align 8
  %254 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %248, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp slt i32 %253, %255
  br i1 %256, label %257, label %263

257:                                              ; preds = %252
  %258 = add nsw i32 %253, 1
  store i32 %258, i32* %239, align 8
  %259 = sext i32 %253 to i64
  %260 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %248, i64 0, i32 1, i64 %259
  %261 = bitcast i8** %260 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"**
  %262 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"** %261, align 8
  br label %285

263:                                              ; preds = %252
  %264 = load i32, i32* %240, align 4
  %265 = icmp eq i32 %255, %264
  br i1 %265, label %266, label %272

266:                                              ; preds = %263, %250
  %267 = phi i32 [ %251, %250 ], [ %255, %263 ]
  %268 = add nsw i32 %267, 1
  call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %237, i32 %268) #19
  %269 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %238, align 8
  %270 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %269, i64 0, i32 0
  %271 = load i32, i32* %270, align 8
  br label %272

272:                                              ; preds = %266, %263
  %273 = phi i32 [ %271, %266 ], [ %255, %263 ]
  %274 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %269, %266 ], [ %248, %263 ]
  %275 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %274, i64 0, i32 0
  %276 = add nsw i32 %273, 1
  store i32 %276, i32* %275, align 8
  %277 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %241, align 8
  %278 = call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index74InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfoEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %277) #19
  %279 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %238, align 8
  %280 = load i32, i32* %239, align 8
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %239, align 8
  %282 = sext i32 %280 to i64
  %283 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %279, i64 0, i32 1, i64 %282
  %284 = bitcast i8** %283 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"**
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* %278, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"** %284, align 8
  br label %285

285:                                              ; preds = %257, %272
  %286 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* [ %262, %257 ], [ %278, %272 ]
  %287 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %247, i64 0, i32 0, i32 0, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* %286, i64 0, i32 1, i32 0, i64 0
  %290 = load i32, i32* %289, align 4
  %291 = or i32 %290, 1
  store i32 %291, i32* %289, align 4
  %292 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* %286, i64 0, i32 3
  store i64 %288, i64* %292, align 8
  %293 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %247, i64 0, i32 1
  %294 = load i32, i32* %293, align 8
  %295 = zext i32 %294 to i64
  %296 = or i32 %290, 3
  store i32 %296, i32* %289, align 4
  %297 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* %286, i64 0, i32 4
  store i64 %295, i64* %297, align 8
  %298 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %247, i64 1
  %299 = icmp eq %"struct.std::__1::pair.487"* %298, %233
  br i1 %299, label %242, label %246

300:                                              ; preds = %242, %30, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19URLIndexPrivateData17SaveWordStartsMapEPN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %202, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 14
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %202, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 32
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 8
  %15 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"** %14, align 8
  %16 = icmp eq %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %15, null
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  %23 = and i64 %20, -2
  br i1 %22, label %28, label %24, !prof !188

24:                                               ; preds = %17
  %25 = inttoptr i64 %23 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %26 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %25, i64 0, i32 0
  %27 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %26, align 8
  br label %30

28:                                               ; preds = %17
  %29 = inttoptr i64 %23 to %"class.google::protobuf::Arena"*
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.google::protobuf::Arena"* [ %27, %24 ], [ %29, %28 ]
  %32 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index43InMemoryURLIndexCacheItem_WordStartsMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %31) #19
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %32, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"** %14, align 8
  br label %33

33:                                               ; preds = %10, %30
  %34 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* [ %32, %30 ], [ %15, %10 ]
  %35 = load i64, i64* %3, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %34, i64 0, i32 1, i32 0, i64 0
  %38 = load i32, i32* %37, align 4
  %39 = or i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %34, i64 0, i32 4
  store i32 %36, i32* %40, align 8
  %41 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %44 = icmp eq %"class.std::__1::__tree_end_node"* %42, %43
  br i1 %44, label %202, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %34, i64 0, i32 3
  %47 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.514", %"class.google::protobuf::RepeatedPtrField.514"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %34, i64 0, i32 3, i32 0, i32 3
  %49 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %34, i64 0, i32 3, i32 0, i32 1
  %50 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %34, i64 0, i32 3, i32 0, i32 2
  %51 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.514", %"class.google::protobuf::RepeatedPtrField.514"* %46, i64 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %45, %178
  %53 = phi %"class.std::__1::__tree_end_node"* [ %42, %45 ], [ %179, %178 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 4
  %55 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %48, align 8
  %56 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = load i32, i32* %50, align 4
  br label %73

59:                                               ; preds = %52
  %60 = load i32, i32* %49, align 8
  %61 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %55, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp slt i32 %60, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = add nsw i32 %60, 1
  store i32 %65, i32* %49, align 8
  %66 = sext i32 %60 to i64
  %67 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %55, i64 0, i32 1, i64 %66
  %68 = bitcast i8** %67 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"**
  %69 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"** %68, align 8
  br label %92

70:                                               ; preds = %59
  %71 = load i32, i32* %50, align 4
  %72 = icmp eq i32 %62, %71
  br i1 %72, label %73, label %79

73:                                               ; preds = %70, %57
  %74 = phi i32 [ %58, %57 ], [ %62, %70 ]
  %75 = add nsw i32 %74, 1
  tail call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %47, i32 %75) #19
  %76 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %48, align 8
  %77 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  br label %79

79:                                               ; preds = %73, %70
  %80 = phi i32 [ %78, %73 ], [ %62, %70 ]
  %81 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %76, %73 ], [ %55, %70 ]
  %82 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %81, i64 0, i32 0
  %83 = add nsw i32 %80, 1
  store i32 %83, i32* %82, align 8
  %84 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %51, align 8
  %85 = tail call %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index62InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %84) #19
  %86 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %48, align 8
  %87 = load i32, i32* %49, align 8
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %49, align 8
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %86, i64 0, i32 1, i64 %89
  %91 = bitcast i8** %90 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"**
  store %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %85, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"** %91, align 8
  br label %92

92:                                               ; preds = %64, %79
  %93 = phi %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* [ %69, %64 ], [ %85, %79 ]
  %94 = bitcast %"class.std::__1::__tree_end_node"* %54 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 1, i32 0, i64 0
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 7
  store i64 %95, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 5
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to i64**
  %102 = load i64*, i64** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 6
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to i64**
  %105 = load i64*, i64** %104, align 8
  %106 = icmp eq i64* %102, %105
  br i1 %106, label %114, label %107

107:                                              ; preds = %92
  %108 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 3
  %109 = getelementptr inbounds %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField"* %108, i64 0, i32 0
  %110 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 3, i32 1
  %111 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 3, i32 2
  %112 = bitcast i8** %111 to i32**
  %113 = load i32, i32* %109, align 8
  br label %129

114:                                              ; preds = %146, %92
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 8
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 9
  %119 = bitcast %"class.std::__1::__tree_end_node"* %118 to i64**
  %120 = load i64*, i64** %119, align 8
  %121 = icmp eq i64* %117, %120
  br i1 %121, label %150, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 5
  %124 = getelementptr inbounds %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField"* %123, i64 0, i32 0
  %125 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 5, i32 1
  %126 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %93, i64 0, i32 5, i32 2
  %127 = bitcast i8** %126 to i32**
  %128 = load i32, i32* %124, align 8
  br label %181

129:                                              ; preds = %107, %146
  %130 = phi i32 [ %113, %107 ], [ %147, %146 ]
  %131 = phi i64* [ %102, %107 ], [ %148, %146 ]
  %132 = load i64, i64* %131, align 8
  %133 = trunc i64 %132 to i32
  %134 = load i32, i32* %110, align 4
  %135 = icmp eq i32 %130, %134
  br i1 %135, label %136, label %141

136:                                              ; preds = %129
  %137 = add i32 %130, 1
  tail call void @_ZN6google8protobuf13RepeatedFieldIiE7ReserveEi(%"class.google::protobuf::RepeatedField"* %108, i32 %137) #19
  %138 = load i32*, i32** %112, align 8
  %139 = zext i32 %130 to i64
  %140 = getelementptr inbounds i32, i32* %138, i64 %139
  store i32 %133, i32* %140, align 4
  br label %146

141:                                              ; preds = %129
  %142 = load i32*, i32** %112, align 8
  %143 = zext i32 %130 to i64
  %144 = getelementptr inbounds i32, i32* %142, i64 %143
  store i32 %133, i32* %144, align 4
  %145 = add i32 %130, 1
  br label %146

146:                                              ; preds = %136, %141
  %147 = phi i32 [ %145, %141 ], [ %137, %136 ]
  store i32 %147, i32* %109, align 8
  %148 = getelementptr inbounds i64, i64* %131, i64 1
  %149 = icmp eq i64* %148, %105
  br i1 %149, label %114, label %129

150:                                              ; preds = %198, %114
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 1, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node_base"*
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 2
  %157 = bitcast %"class.std::__1::__tree_end_node"* %156 to %"class.std::__1::__tree_end_node"**
  %158 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, %155
  br i1 %161, label %178, label %169

162:                                              ; preds = %150, %162
  %163 = phi %"class.std::__1::__tree_node_base"* [ %165, %162 ], [ %152, %150 ]
  %164 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %167, label %162

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 0
  br label %178

169:                                              ; preds = %154, %169
  %170 = phi %"class.std::__1::__tree_end_node"** [ %173, %169 ], [ %157, %154 ]
  %171 = bitcast %"class.std::__1::__tree_end_node"** %170 to %"class.std::__1::__tree_node_base"**
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %172, i64 0, i32 2
  %174 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, %172
  br i1 %177, label %178, label %169

178:                                              ; preds = %169, %154, %167
  %179 = phi %"class.std::__1::__tree_end_node"* [ %168, %167 ], [ %158, %154 ], [ %174, %169 ]
  %180 = icmp eq %"class.std::__1::__tree_end_node"* %179, %43
  br i1 %180, label %202, label %52

181:                                              ; preds = %122, %198
  %182 = phi i32 [ %128, %122 ], [ %199, %198 ]
  %183 = phi i64* [ %117, %122 ], [ %200, %198 ]
  %184 = load i64, i64* %183, align 8
  %185 = trunc i64 %184 to i32
  %186 = load i32, i32* %125, align 4
  %187 = icmp eq i32 %182, %186
  br i1 %187, label %188, label %193

188:                                              ; preds = %181
  %189 = add i32 %182, 1
  tail call void @_ZN6google8protobuf13RepeatedFieldIiE7ReserveEi(%"class.google::protobuf::RepeatedField"* %123, i32 %189) #19
  %190 = load i32*, i32** %127, align 8
  %191 = zext i32 %182 to i64
  %192 = getelementptr inbounds i32, i32* %190, i64 %191
  store i32 %185, i32* %192, align 4
  br label %198

193:                                              ; preds = %181
  %194 = load i32*, i32** %127, align 8
  %195 = zext i32 %182 to i64
  %196 = getelementptr inbounds i32, i32* %194, i64 %195
  store i32 %185, i32* %196, align 4
  %197 = add i32 %182, 1
  br label %198

198:                                              ; preds = %188, %193
  %199 = phi i32 [ %197, %193 ], [ %189, %188 ]
  store i32 %199, i32* %124, align 8
  %200 = getelementptr inbounds i64, i64* %183, i64 1
  %201 = icmp eq i64* %200, %120
  br i1 %201, label %150, label %181

202:                                              ; preds = %178, %33, %6, %2
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData15RestoreWordListERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %69, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 3
  %10 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"** %9, align 8, !nonnull !189
  %11 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %10, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %10, i64 0, i32 3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  %16 = icmp eq i32 %14, %12
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %69

18:                                               ; preds = %8
  %19 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6
  %20 = sext i32 %12 to i64
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"* %19, i64 %20)
  %21 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* %10, i64 0, i32 3, i32 0, i32 3
  %22 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %21, align 8
  %23 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %22, null
  %24 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %22, i64 0, i32 1, i64 0
  %25 = select i1 %23, i8** null, i8** %24
  %26 = load i32, i32* %13, align 8
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8*, i8** %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %69, label %30

30:                                               ; preds = %18
  %31 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %32 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 1
  %33 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.std::__1::basic_string"** %32 to i64*
  %35 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  br label %38

38:                                               ; preds = %66, %30
  %39 = phi i8** [ %25, %30 ], [ %67, %66 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #19
  %40 = bitcast i8** %39 to %"class.std::__1::basic_string.107"**
  %41 = load %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string.107"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1, !noalias !190
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8, !noalias !190
  %48 = bitcast %"class.std::__1::basic_string.107"* %41 to i8*
  %49 = select i1 %45, i8* %47, i8* %48
  %50 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8, !noalias !190
  %52 = zext i8 %44 to i64
  %53 = select i1 %45, i64 %51, i64 %52
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i8* %49, i64 %53) #19
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %56 = icmp ult %"class.std::__1::basic_string"* %54, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %38
  %58 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* nonnull align 8 %31, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #19
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 1
  %60 = ptrtoint %"class.std::__1::basic_string"* %59 to i64
  store i64 %60, i64* %34, align 8
  br label %66

61:                                               ; preds = %38
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #19
  %62 = load i8, i8* %36, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %65) #20
  br label %66

66:                                               ; preds = %64, %61, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #19
  %67 = getelementptr inbounds i8*, i8** %39, i64 1
  %68 = icmp eq i8** %67, %28
  br i1 %68, label %69, label %38

69:                                               ; preds = %66, %2, %18, %8
  %70 = phi i1 [ false, %8 ], [ true, %18 ], [ false, %2 ], [ true, %66 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData14RestoreWordMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.749", align 8
  %4 = alloca %"class.std::__1::tuple.626", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %68, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 4
  %12 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"** %11, align 8, !nonnull !189
  %13 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %12, i64 0, i32 3, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  %18 = icmp eq i32 %16, %14
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %68

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* %12, i64 0, i32 3, i32 0, i32 3
  %22 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %21, align 8
  %23 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %22, null
  %24 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %22, i64 0, i32 1, i64 0
  %25 = select i1 %23, i8** null, i8** %24
  %26 = sext i32 %14 to i64
  %27 = getelementptr inbounds i8*, i8** %25, i64 %26
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %29 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 8, i32 0
  %30 = bitcast %"class.std::__1::tuple.749"* %3 to i8*
  %31 = getelementptr inbounds %"class.std::__1::tuple.749", %"class.std::__1::tuple.749"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %4, i64 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  br label %36

36:                                               ; preds = %20, %65
  %37 = phi i8** [ %25, %20 ], [ %66, %65 ]
  %38 = bitcast i8** %37 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"**
  %39 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"** %38, align 8
  %40 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* %39, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #19
  %43 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* %39, i64 0, i32 3, i32 0
  %44 = load %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string.107"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.std::__1::basic_string.107"* %44 to i8*
  %52 = select i1 %48, i8* %50, i8* %51
  %53 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %47 to i64
  %56 = select i1 %48, i64 %54, i64 %55
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %52, i64 %56) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #19
  %57 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.16"* %29, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.749"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %4) #19
  %58 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %57, 0
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 7
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  store i64 %42, i64* %60, align 8
  %61 = load i8, i8* %34, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %36
  %64 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %64) #20
  br label %65

65:                                               ; preds = %36, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #19
  %66 = getelementptr inbounds i8*, i8** %37, i64 1
  %67 = icmp eq i8** %66, %27
  br i1 %67, label %68, label %36

68:                                               ; preds = %65, %2, %10
  %69 = phi i1 [ false, %10 ], [ false, %2 ], [ true, %65 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData18RestoreCharWordMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare", align 1
  %4 = alloca %"class.base::internal::flat_tree.520", align 16
  %5 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %369, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 5
  %11 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"** %10, align 8, !nonnull !189
  %12 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %11, i64 0, i32 3, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 0
  %17 = icmp eq i32 %15, %13
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %369

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* %11, i64 0, i32 3, i32 0, i32 3
  %21 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %20, align 8
  %22 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %21, null
  %23 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %21, i64 0, i32 1, i64 0
  %24 = select i1 %22, i8** null, i8** %23
  %25 = sext i32 %13 to i64
  %26 = getelementptr inbounds i8*, i8** %24, i64 %25
  %27 = bitcast %"class.base::internal::flat_tree.520"* %4 to i8*
  %28 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast i64** %28 to i8**
  %30 = bitcast %"class.base::internal::flat_tree.520"* %4 to i8**
  %31 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast i64** %28 to i64*
  %33 = getelementptr inbounds %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare", %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* %3, i64 0, i32 0
  %34 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9
  %35 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node.581"**
  %37 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::map.24", %"class.std::__1::map.24"* %34, i64 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::map.24"* %34 to i64*
  %41 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i64** %31 to i64*
  %43 = bitcast %"class.base::internal::flat_tree.520"* %4 to <2 x i64>*
  br label %44

44:                                               ; preds = %19, %361
  %45 = phi i8** [ %24, %19 ], [ %367, %361 ]
  %46 = bitcast i8** %45 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"**
  %47 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"** %46, align 8
  %48 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %47, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %47, i64 0, i32 3, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp ne i32 %51, 0
  %53 = icmp eq i32 %51, %49
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %369

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %47, i64 0, i32 6
  %57 = load i32, i32* %56, align 8
  %58 = trunc i32 %57 to i16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #19
  %59 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* %47, i64 0, i32 3, i32 2
  %60 = bitcast i8** %59 to i32**
  %61 = load i32*, i32** %60, align 8
  %62 = bitcast i32* %61 to i8*
  %63 = sext i32 %49 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 0, i64 24, i1 false) #19
  %65 = icmp slt i32 %49, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %55
  %67 = bitcast %"class.base::internal::flat_tree.520"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %67) #21
  unreachable

68:                                               ; preds = %55
  %69 = shl nsw i64 %63, 3
  %70 = call i8* @_Znwm(i64 %69) #20
  %71 = bitcast i8* %70 to i64*
  store i8* %70, i8** %29, align 8
  store i8* %70, i8** %30, align 16
  %72 = getelementptr inbounds i64, i64* %71, i64 %63
  store i64* %72, i64** %31, align 16
  %73 = shl nsw i64 %63, 2
  %74 = add nsw i64 %73, -4
  %75 = lshr exact i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = icmp ult i64 %76, 4
  br i1 %77, label %153, label %78

78:                                               ; preds = %68
  %79 = getelementptr i8, i8* %70, i64 8
  %80 = shl nsw i64 %63, 2
  %81 = add nsw i64 %80, -4
  %82 = lshr exact i64 %81, 2
  %83 = shl nsw i64 %81, 1
  %84 = getelementptr i8, i8* %79, i64 %83
  %85 = getelementptr i32, i32* %61, i64 1
  %86 = getelementptr i32, i32* %85, i64 %82
  %87 = bitcast i32* %86 to i8*
  %88 = icmp ult i8* %70, %87
  %89 = icmp ugt i8* %84, %62
  %90 = and i1 %88, %89
  br i1 %90, label %153, label %91

91:                                               ; preds = %78
  %92 = and i64 %76, 9223372036854775804
  %93 = getelementptr i64, i64* %71, i64 %92
  %94 = getelementptr i32, i32* %61, i64 %92
  %95 = add nsw i64 %92, -4
  %96 = lshr exact i64 %95, 2
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %133, label %100

100:                                              ; preds = %91
  %101 = sub nuw nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %130, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %131, %102 ]
  %105 = getelementptr i64, i64* %71, i64 %103
  %106 = getelementptr i32, i32* %61, i64 %103
  %107 = bitcast i32* %106 to <2 x i32>*
  %108 = load <2 x i32>, <2 x i32>* %107, align 4, !alias.scope !193
  %109 = getelementptr i32, i32* %106, i64 2
  %110 = bitcast i32* %109 to <2 x i32>*
  %111 = load <2 x i32>, <2 x i32>* %110, align 4, !alias.scope !193
  %112 = sext <2 x i32> %108 to <2 x i64>
  %113 = sext <2 x i32> %111 to <2 x i64>
  %114 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %114, align 8, !alias.scope !196, !noalias !193
  %115 = getelementptr i64, i64* %105, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !196, !noalias !193
  %117 = or i64 %103, 4
  %118 = getelementptr i64, i64* %71, i64 %117
  %119 = getelementptr i32, i32* %61, i64 %117
  %120 = bitcast i32* %119 to <2 x i32>*
  %121 = load <2 x i32>, <2 x i32>* %120, align 4, !alias.scope !193
  %122 = getelementptr i32, i32* %119, i64 2
  %123 = bitcast i32* %122 to <2 x i32>*
  %124 = load <2 x i32>, <2 x i32>* %123, align 4, !alias.scope !193
  %125 = sext <2 x i32> %121 to <2 x i64>
  %126 = sext <2 x i32> %124 to <2 x i64>
  %127 = bitcast i64* %118 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %127, align 8, !alias.scope !196, !noalias !193
  %128 = getelementptr i64, i64* %118, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !196, !noalias !193
  %130 = add i64 %103, 8
  %131 = add i64 %104, -2
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %102, !llvm.loop !198

133:                                              ; preds = %102, %91
  %134 = phi i64 [ 0, %91 ], [ %130, %102 ]
  %135 = icmp eq i64 %98, 0
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr i64, i64* %71, i64 %134
  %138 = getelementptr i32, i32* %61, i64 %134
  %139 = bitcast i32* %138 to <2 x i32>*
  %140 = load <2 x i32>, <2 x i32>* %139, align 4, !alias.scope !193
  %141 = getelementptr i32, i32* %138, i64 2
  %142 = bitcast i32* %141 to <2 x i32>*
  %143 = load <2 x i32>, <2 x i32>* %142, align 4, !alias.scope !193
  %144 = sext <2 x i32> %140 to <2 x i64>
  %145 = sext <2 x i32> %143 to <2 x i64>
  %146 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %146, align 8, !alias.scope !196, !noalias !193
  %147 = getelementptr i64, i64* %137, i64 2
  %148 = bitcast i64* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 8, !alias.scope !196, !noalias !193
  br label %149

149:                                              ; preds = %133, %136
  %150 = icmp eq i64 %76, %92
  %151 = add nsw i64 %92, -1
  %152 = getelementptr i64, i64* %71, i64 %151
  br i1 %150, label %219, label %153

153:                                              ; preds = %149, %78, %68
  %154 = phi i64* [ %71, %78 ], [ %71, %68 ], [ %93, %149 ]
  %155 = phi i32* [ %61, %78 ], [ %61, %68 ], [ %94, %149 ]
  %156 = ptrtoint i32* %155 to i64
  %157 = getelementptr i32, i32* %61, i64 -1
  %158 = getelementptr i32, i32* %157, i64 %63
  %159 = ptrtoint i32* %158 to i64
  %160 = sub i64 %159, %156
  %161 = lshr i64 %160, 2
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %175, label %165

165:                                              ; preds = %153, %165
  %166 = phi i64* [ %172, %165 ], [ %154, %153 ]
  %167 = phi i32* [ %171, %165 ], [ %155, %153 ]
  %168 = phi i64 [ %173, %165 ], [ %163, %153 ]
  %169 = load i32, i32* %167, align 4
  %170 = sext i32 %169 to i64
  store i64 %170, i64* %166, align 8
  %171 = getelementptr inbounds i32, i32* %167, i64 1
  %172 = getelementptr inbounds i64, i64* %166, i64 1
  %173 = add i64 %168, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %165, !llvm.loop !199

175:                                              ; preds = %165, %153
  %176 = phi i64* [ undef, %153 ], [ %166, %165 ]
  %177 = phi i64* [ undef, %153 ], [ %172, %165 ]
  %178 = phi i64* [ %154, %153 ], [ %172, %165 ]
  %179 = phi i32* [ %155, %153 ], [ %171, %165 ]
  %180 = icmp ult i64 %160, 28
  br i1 %180, label %219, label %181

181:                                              ; preds = %175, %181
  %182 = phi i64* [ %215, %181 ], [ %178, %175 ]
  %183 = phi i32* [ %214, %181 ], [ %179, %175 ]
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  store i64 %185, i64* %182, align 8
  %186 = getelementptr inbounds i32, i32* %183, i64 1
  %187 = getelementptr inbounds i64, i64* %182, i64 1
  %188 = load i32, i32* %186, align 4
  %189 = sext i32 %188 to i64
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds i32, i32* %183, i64 2
  %191 = getelementptr inbounds i64, i64* %182, i64 2
  %192 = load i32, i32* %190, align 4
  %193 = sext i32 %192 to i64
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds i32, i32* %183, i64 3
  %195 = getelementptr inbounds i64, i64* %182, i64 3
  %196 = load i32, i32* %194, align 4
  %197 = sext i32 %196 to i64
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds i32, i32* %183, i64 4
  %199 = getelementptr inbounds i64, i64* %182, i64 4
  %200 = load i32, i32* %198, align 4
  %201 = sext i32 %200 to i64
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds i32, i32* %183, i64 5
  %203 = getelementptr inbounds i64, i64* %182, i64 5
  %204 = load i32, i32* %202, align 4
  %205 = sext i32 %204 to i64
  store i64 %205, i64* %203, align 8
  %206 = getelementptr inbounds i32, i32* %183, i64 6
  %207 = getelementptr inbounds i64, i64* %182, i64 6
  %208 = load i32, i32* %206, align 4
  %209 = sext i32 %208 to i64
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds i32, i32* %183, i64 7
  %211 = getelementptr inbounds i64, i64* %182, i64 7
  %212 = load i32, i32* %210, align 4
  %213 = sext i32 %212 to i64
  store i64 %213, i64* %211, align 8
  %214 = getelementptr inbounds i32, i32* %183, i64 8
  %215 = getelementptr inbounds i64, i64* %182, i64 8
  %216 = icmp eq i32* %214, %64
  br i1 %216, label %217, label %181, !llvm.loop !200

217:                                              ; preds = %181
  %218 = getelementptr inbounds i64, i64* %182, i64 7
  br label %219

219:                                              ; preds = %217, %175, %149
  %220 = phi i64* [ %152, %149 ], [ %176, %175 ], [ %218, %217 ]
  %221 = phi i64* [ %93, %149 ], [ %177, %175 ], [ %215, %217 ]
  %222 = ptrtoint i64* %221 to i64
  store i64 %222, i64* %32, align 8
  %223 = ptrtoint i64* %221 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33)
  %224 = ptrtoint i8* %70 to i64
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 3
  %227 = icmp sgt i64 %225, 1024
  br i1 %227, label %228, label %239

228:                                              ; preds = %219
  %229 = icmp slt i64 %226, 1152921504606846975
  %230 = select i1 %229, i64 %226, i64 1152921504606846975
  br label %231

231:                                              ; preds = %236, %228
  %232 = phi i64 [ %237, %236 ], [ %230, %228 ]
  %233 = shl i64 %232, 3
  %234 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %233, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #19
  %235 = icmp eq i8* %234, null
  br i1 %235, label %236, label %240

236:                                              ; preds = %231
  %237 = lshr i64 %232, 1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %231

239:                                              ; preds = %236, %219
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* nonnull %71, i64* %221, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* nonnull dereferenceable(1) %3, i64 %226, i64* null, i64 0) #19
  br label %242

240:                                              ; preds = %231
  %241 = bitcast i8* %234 to i64*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* nonnull %71, i64* %221, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* nonnull dereferenceable(1) %3, i64 %226, i64* nonnull %241, i64 %232) #19
  call void @_ZdlPv(i8* nonnull %234) #20
  br label %242

242:                                              ; preds = %239, %240
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33)
  %243 = icmp eq i64* %221, %71
  br i1 %243, label %292, label %244

244:                                              ; preds = %242, %248
  %245 = phi i64* [ %246, %248 ], [ %71, %242 ]
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = icmp eq i64* %245, %220
  br i1 %247, label %292, label %248

248:                                              ; preds = %244
  %249 = load i64, i64* %245, align 8
  %250 = load i64, i64* %246, align 8
  %251 = icmp ult i64 %249, %250
  br i1 %251, label %244, label %252

252:                                              ; preds = %248
  %253 = icmp eq i64* %245, %221
  br i1 %253, label %292, label %254

254:                                              ; preds = %252
  %255 = getelementptr inbounds i64, i64* %245, i64 2
  %256 = icmp eq i64* %255, %221
  br i1 %256, label %278, label %257

257:                                              ; preds = %254
  %258 = ptrtoint i64* %245 to i64
  br label %259

259:                                              ; preds = %273, %257
  %260 = phi i64 [ %275, %273 ], [ %249, %257 ]
  %261 = phi i64* [ %272, %273 ], [ %245, %257 ]
  %262 = phi i64* [ %274, %273 ], [ %255, %257 ]
  %263 = phi i64 [ %270, %273 ], [ %258, %257 ]
  %264 = load i64, i64* %262, align 8
  %265 = icmp ult i64 %260, %264
  br i1 %265, label %266, label %269

266:                                              ; preds = %259
  %267 = getelementptr inbounds i64, i64* %261, i64 1
  %268 = ptrtoint i64* %267 to i64
  store i64 %264, i64* %267, align 8
  br label %269

269:                                              ; preds = %266, %259
  %270 = phi i64 [ %263, %259 ], [ %268, %266 ]
  %271 = icmp eq i64* %262, %220
  %272 = inttoptr i64 %270 to i64*
  br i1 %271, label %276, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds i64, i64* %262, i64 1
  %275 = load i64, i64* %272, align 8
  br label %259

276:                                              ; preds = %269
  %277 = inttoptr i64 %270 to i64*
  br label %278

278:                                              ; preds = %276, %254
  %279 = phi i64* [ %245, %254 ], [ %277, %276 ]
  %280 = getelementptr inbounds i64, i64* %279, i64 1
  %281 = icmp eq i64* %279, %220
  br i1 %281, label %292, label %282

282:                                              ; preds = %278
  %283 = load i64, i64* %32, align 8
  %284 = sub i64 %283, %223
  %285 = ashr exact i64 %284, 3
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %290, label %287

287:                                              ; preds = %282
  %288 = bitcast i64* %280 to i8*
  %289 = bitcast i64* %221 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %288, i8* align 8 %289, i64 %284, i1 false) #19
  br label %290

290:                                              ; preds = %287, %282
  %291 = getelementptr inbounds i64, i64* %280, i64 %285
  store i64* %291, i64** %28, align 8
  br label %292

292:                                              ; preds = %244, %242, %252, %278, %290
  %293 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %36, align 8
  %294 = icmp eq %"class.std::__1::__tree_node.581"* %293, null
  br i1 %294, label %321, label %295

295:                                              ; preds = %292, %317
  %296 = phi %"class.std::__1::__tree_node.581"* [ %320, %317 ], [ %293, %292 ]
  %297 = phi %"class.std::__1::__tree_node_base"** [ %319, %317 ], [ %37, %292 ]
  %298 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %296, i64 0, i32 1, i32 0, i32 0
  %299 = load i16, i16* %298, align 2
  %300 = icmp ugt i16 %299, %58
  br i1 %300, label %301, label %307

301:                                              ; preds = %295
  %302 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %296, i64 0, i32 0, i32 0, i32 0
  %303 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %302, align 8
  %304 = icmp eq %"class.std::__1::__tree_node_base"* %303, null
  br i1 %304, label %305, label %317

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %296, i64 0, i32 0, i32 0
  br label %321

307:                                              ; preds = %295
  %308 = icmp ult i16 %299, %58
  br i1 %308, label %309, label %315

309:                                              ; preds = %307
  %310 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %296, i64 0, i32 0, i32 1
  %311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %310, align 8
  %312 = icmp eq %"class.std::__1::__tree_node_base"* %311, null
  br i1 %312, label %313, label %317

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %296, i64 0, i32 0, i32 0
  br label %321

315:                                              ; preds = %307
  %316 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %296, i64 0, i32 0, i32 0
  br label %321

317:                                              ; preds = %309, %301
  %318 = phi %"class.std::__1::__tree_node_base"* [ %303, %301 ], [ %311, %309 ]
  %319 = phi %"class.std::__1::__tree_node_base"** [ %302, %301 ], [ %310, %309 ]
  %320 = bitcast %"class.std::__1::__tree_node_base"* %318 to %"class.std::__1::__tree_node.581"*
  br label %295

321:                                              ; preds = %292, %315, %313, %305
  %322 = phi %"class.std::__1::__tree_end_node"* [ %306, %305 ], [ %314, %313 ], [ %316, %315 ], [ %35, %292 ]
  %323 = phi %"class.std::__1::__tree_node_base"** [ %302, %305 ], [ %310, %313 ], [ %297, %315 ], [ %38, %292 ]
  %324 = bitcast %"class.std::__1::__tree_node_base"** %323 to %"class.std::__1::__tree_node.581"**
  %325 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node.581"* %325, null
  br i1 %326, label %327, label %349

327:                                              ; preds = %321
  %328 = call i8* @_Znwm(i64 64) #20, !noalias !201
  %329 = getelementptr inbounds i8, i8* %328, i64 32
  %330 = bitcast i8* %329 to i16*
  store i16 %58, i16* %330, align 8, !noalias !201
  %331 = getelementptr inbounds i8, i8* %328, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 24, i1 false) #19, !noalias !201
  %332 = bitcast i8* %328 to %"class.std::__1::__tree_node.581"*
  %333 = bitcast i8* %328 to %"class.std::__1::__tree_node_base"*
  %334 = getelementptr inbounds i8, i8* %328, i64 16
  %335 = bitcast i8* %334 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %328, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %322, %"class.std::__1::__tree_end_node"** %335, align 8
  %336 = bitcast %"class.std::__1::__tree_node_base"** %323 to i8**
  store i8* %328, i8** %336, align 8
  %337 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %338 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %337, i64 0, i32 0
  %339 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %338, align 8
  %340 = icmp eq %"class.std::__1::__tree_node_base"* %339, null
  br i1 %340, label %344, label %341

341:                                              ; preds = %327
  %342 = ptrtoint %"class.std::__1::__tree_node_base"* %339 to i64
  store i64 %342, i64* %40, align 8
  %343 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  br label %344

344:                                              ; preds = %341, %327
  %345 = phi %"class.std::__1::__tree_node_base"* [ %333, %327 ], [ %343, %341 ]
  %346 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %346, %"class.std::__1::__tree_node_base"* %345) #19
  %347 = load i64, i64* %41, align 8
  %348 = add i64 %347, 1
  store i64 %348, i64* %41, align 8
  br label %349

349:                                              ; preds = %321, %344
  %350 = phi %"class.std::__1::__tree_node.581"* [ %332, %344 ], [ %325, %321 ]
  %351 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %350, i64 0, i32 1, i32 0, i32 1
  %352 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %351, i64 0, i32 0, i32 0, i32 0
  %353 = load i64*, i64** %352, align 8
  %354 = icmp eq i64* %353, null
  br i1 %354, label %361, label %355

355:                                              ; preds = %349
  %356 = ptrtoint i64* %353 to i64
  %357 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %350, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %358 = bitcast i64** %357 to i64*
  store i64 %356, i64* %358, align 8
  %359 = bitcast i64* %353 to i8*
  call void @_ZdlPv(i8* %359) #20
  %360 = bitcast %"class.base::internal::flat_tree.520"* %351 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %360, i8 0, i64 24, i1 false) #19
  br label %361

361:                                              ; preds = %355, %349
  %362 = load <2 x i64>, <2 x i64>* %43, align 16
  %363 = bitcast %"class.base::internal::flat_tree.520"* %351 to <2 x i64>*
  store <2 x i64> %362, <2 x i64>* %363, align 8
  %364 = load i64, i64* %42, align 16
  %365 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %350, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %366 = bitcast i64** %365 to i64*
  store i64 %364, i64* %366, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #19
  %367 = getelementptr inbounds i8*, i8** %45, i64 1
  %368 = icmp eq i8** %367, %26
  br i1 %368, label %369, label %44

369:                                              ; preds = %44, %361, %2, %9
  %370 = phi i1 [ false, %9 ], [ false, %2 ], [ false, %44 ], [ true, %361 ]
  ret i1 %370
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData23RestoreWordIDHistoryMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.base::internal::flat_tree.517", align 16
  %5 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %265, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 6
  %11 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"** %10, align 8, !nonnull !189
  %12 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %11, i64 0, i32 3, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 0
  %17 = icmp eq i32 %15, %13
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %265

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* %11, i64 0, i32 3, i32 0, i32 3
  %21 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %20, align 8
  %22 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %21, null
  %23 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %21, i64 0, i32 1, i64 0
  %24 = select i1 %22, i8** null, i8** %23
  %25 = sext i32 %13 to i64
  %26 = getelementptr inbounds i8*, i8** %24, i64 %25
  %27 = bitcast i64* %3 to i8*
  %28 = bitcast %"class.base::internal::flat_tree.517"* %4 to i8*
  %29 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %4, i64 0, i32 0, i32 0, i32 1
  %30 = bitcast i64** %29 to i8**
  %31 = bitcast %"class.base::internal::flat_tree.517"* %4 to i8**
  %32 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i64** %29 to i64*
  %34 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10
  %35 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node.583"**
  %37 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::map.35", %"class.std::__1::map.35"* %34, i64 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::map.35"* %34 to i64*
  %41 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i64** %32 to i64*
  %43 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11
  %44 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node.585"**
  %46 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::map.46", %"class.std::__1::map.46"* %43, i64 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::map.46"* %43 to i64*
  %50 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"class.base::internal::flat_tree.517"* %4 to <2 x i64>*
  br label %52

52:                                               ; preds = %19, %262
  %53 = phi i8** [ %24, %19 ], [ %263, %262 ]
  %54 = bitcast i8** %53 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"**
  %55 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"** %54, align 8
  %56 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %55, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %55, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp ne i32 %59, 0
  %61 = icmp eq i32 %59, %57
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %265

63:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #19
  %64 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %55, i64 0, i32 6
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  store i64 %66, i64* %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #19
  %67 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* %55, i64 0, i32 3, i32 2
  %68 = bitcast i8** %67 to i64**
  %69 = load i8*, i8** %67, align 8
  %70 = sext i32 %57 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 0, i64 24, i1 false) #19
  %71 = shl nuw nsw i64 %70, 3
  %72 = icmp slt i32 %57, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  %74 = bitcast %"class.base::internal::flat_tree.517"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %74) #21
  unreachable

75:                                               ; preds = %63
  %76 = call i8* @_Znwm(i64 %71) #20
  %77 = bitcast i8* %76 to i64*
  store i8* %76, i8** %30, align 8
  store i8* %76, i8** %31, align 16
  %78 = getelementptr inbounds i64, i64* %77, i64 %70
  store i64* %78, i64** %32, align 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 %69, i64 %71, i1 false) #19
  %79 = ptrtoint i64* %78 to i64
  store i64 %79, i64* %33, align 8
  call void @_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEE15sort_and_uniqueEv(%"class.base::internal::flat_tree.517"* nonnull %4) #19
  %80 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %36, align 8
  %81 = icmp eq %"class.std::__1::__tree_node.583"* %80, null
  br i1 %81, label %110, label %82

82:                                               ; preds = %75
  %83 = load i64, i64* %3, align 8
  br label %84

84:                                               ; preds = %106, %82
  %85 = phi %"class.std::__1::__tree_node.583"* [ %109, %106 ], [ %80, %82 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %108, %106 ], [ %37, %82 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %85, i64 0, i32 1, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %83, %88
  br i1 %89, label %90, label %96

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %85, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %106

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %85, i64 0, i32 0, i32 0
  br label %110

96:                                               ; preds = %84
  %97 = icmp ult i64 %88, %83
  br i1 %97, label %98, label %104

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %85, i64 0, i32 0, i32 1
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %106

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %85, i64 0, i32 0, i32 0
  br label %110

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %85, i64 0, i32 0, i32 0
  br label %110

106:                                              ; preds = %98, %90
  %107 = phi %"class.std::__1::__tree_node_base"* [ %92, %90 ], [ %100, %98 ]
  %108 = phi %"class.std::__1::__tree_node_base"** [ %91, %90 ], [ %99, %98 ]
  %109 = bitcast %"class.std::__1::__tree_node_base"* %107 to %"class.std::__1::__tree_node.583"*
  br label %84

110:                                              ; preds = %75, %104, %102, %94
  %111 = phi %"class.std::__1::__tree_end_node"* [ %95, %94 ], [ %103, %102 ], [ %105, %104 ], [ %35, %75 ]
  %112 = phi %"class.std::__1::__tree_node_base"** [ %91, %94 ], [ %99, %102 ], [ %86, %104 ], [ %38, %75 ]
  %113 = bitcast %"class.std::__1::__tree_node_base"** %112 to %"class.std::__1::__tree_node.583"**
  %114 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node.583"* %114, null
  br i1 %115, label %116, label %139

116:                                              ; preds = %110
  %117 = call i8* @_Znwm(i64 64) #20, !noalias !204
  %118 = getelementptr inbounds i8, i8* %117, i64 32
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %3, align 8, !noalias !204
  store i64 %120, i64* %119, align 8, !noalias !204
  %121 = getelementptr inbounds i8, i8* %117, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #19, !noalias !204
  %122 = bitcast i8* %117 to %"class.std::__1::__tree_node.583"*
  %123 = bitcast i8* %117 to %"class.std::__1::__tree_node_base"*
  %124 = getelementptr inbounds i8, i8* %117, i64 16
  %125 = bitcast i8* %124 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"** %125, align 8
  %126 = bitcast %"class.std::__1::__tree_node_base"** %112 to i8**
  store i8* %117, i8** %126, align 8
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %116
  %132 = ptrtoint %"class.std::__1::__tree_node_base"* %129 to i64
  store i64 %132, i64* %40, align 8
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  br label %134

134:                                              ; preds = %131, %116
  %135 = phi %"class.std::__1::__tree_node_base"* [ %123, %116 ], [ %133, %131 ]
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %136, %"class.std::__1::__tree_node_base"* %135) #19
  %137 = load i64, i64* %41, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %41, align 8
  br label %139

139:                                              ; preds = %110, %134
  %140 = phi %"class.std::__1::__tree_node.583"* [ %122, %134 ], [ %114, %110 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %140, i64 0, i32 1, i32 0, i32 1
  %142 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load i64*, i64** %142, align 8
  %144 = icmp eq i64* %143, null
  br i1 %144, label %151, label %145

145:                                              ; preds = %139
  %146 = ptrtoint i64* %143 to i64
  %147 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %140, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %148 = bitcast i64** %147 to i64*
  store i64 %146, i64* %148, align 8
  %149 = bitcast i64* %143 to i8*
  call void @_ZdlPv(i8* %149) #20
  %150 = bitcast %"class.base::internal::flat_tree.517"* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #19
  br label %151

151:                                              ; preds = %139, %145
  %152 = load <2 x i64>, <2 x i64>* %51, align 16
  %153 = bitcast %"class.base::internal::flat_tree.517"* %141 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %153, align 8
  %154 = load i64, i64* %42, align 16
  %155 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %140, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %156 = bitcast i64** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = load i64*, i64** %68, align 8
  %158 = load i32, i32* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #19
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i64, i64* %157, i64 %159
  %161 = icmp eq i32 %158, 0
  br i1 %161, label %262, label %162

162:                                              ; preds = %151, %259
  %163 = phi i64* [ %260, %259 ], [ %157, %151 ]
  %164 = load i64, i64* %163, align 8
  %165 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %45, align 8
  %166 = icmp eq %"class.std::__1::__tree_node.585"* %165, null
  br i1 %166, label %193, label %167

167:                                              ; preds = %162, %189
  %168 = phi %"class.std::__1::__tree_node.585"* [ %192, %189 ], [ %165, %162 ]
  %169 = phi %"class.std::__1::__tree_node_base"** [ %191, %189 ], [ %46, %162 ]
  %170 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %168, i64 0, i32 1, i32 0, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = icmp slt i64 %164, %171
  br i1 %172, label %173, label %179

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %168, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %189

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %168, i64 0, i32 0, i32 0
  br label %193

179:                                              ; preds = %167
  %180 = icmp slt i64 %171, %164
  br i1 %180, label %181, label %187

181:                                              ; preds = %179
  %182 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %168, i64 0, i32 0, i32 1
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %182, align 8
  %184 = icmp eq %"class.std::__1::__tree_node_base"* %183, null
  br i1 %184, label %185, label %189

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %168, i64 0, i32 0, i32 0
  br label %193

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %168, i64 0, i32 0, i32 0
  br label %193

189:                                              ; preds = %181, %173
  %190 = phi %"class.std::__1::__tree_node_base"* [ %175, %173 ], [ %183, %181 ]
  %191 = phi %"class.std::__1::__tree_node_base"** [ %174, %173 ], [ %182, %181 ]
  %192 = bitcast %"class.std::__1::__tree_node_base"* %190 to %"class.std::__1::__tree_node.585"*
  br label %167

193:                                              ; preds = %162, %187, %185, %177
  %194 = phi %"class.std::__1::__tree_end_node"* [ %178, %177 ], [ %186, %185 ], [ %188, %187 ], [ %44, %162 ]
  %195 = phi %"class.std::__1::__tree_node_base"** [ %174, %177 ], [ %182, %185 ], [ %169, %187 ], [ %47, %162 ]
  %196 = bitcast %"class.std::__1::__tree_node_base"** %195 to %"class.std::__1::__tree_node.585"**
  %197 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node.585"* %197, null
  br i1 %198, label %199, label %221

199:                                              ; preds = %193
  %200 = call i8* @_Znwm(i64 64) #20, !noalias !207
  %201 = getelementptr inbounds i8, i8* %200, i64 32
  %202 = bitcast i8* %201 to i64*
  store i64 %164, i64* %202, align 8, !noalias !207
  %203 = getelementptr inbounds i8, i8* %200, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 24, i1 false) #19, !noalias !207
  %204 = bitcast i8* %200 to %"class.std::__1::__tree_node.585"*
  %205 = bitcast i8* %200 to %"class.std::__1::__tree_node_base"*
  %206 = getelementptr inbounds i8, i8* %200, i64 16
  %207 = bitcast i8* %206 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %207, align 8
  %208 = bitcast %"class.std::__1::__tree_node_base"** %195 to i8**
  store i8* %200, i8** %208, align 8
  %209 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %210 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %209, i64 0, i32 0
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, null
  br i1 %212, label %216, label %213

213:                                              ; preds = %199
  %214 = ptrtoint %"class.std::__1::__tree_node_base"* %211 to i64
  store i64 %214, i64* %49, align 8
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  br label %216

216:                                              ; preds = %213, %199
  %217 = phi %"class.std::__1::__tree_node_base"* [ %205, %199 ], [ %215, %213 ]
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %218, %"class.std::__1::__tree_node_base"* %217) #19
  %219 = load i64, i64* %50, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %50, align 8
  br label %221

221:                                              ; preds = %193, %216
  %222 = phi %"class.std::__1::__tree_node.585"* [ %204, %216 ], [ %197, %193 ]
  %223 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %222, i64 0, i32 1, i32 0, i32 1
  %224 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %223, i64 0, i32 0, i32 0, i32 0
  %225 = load i64*, i64** %224, align 8
  %226 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %222, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %227 = bitcast i64** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = ptrtoint i64* %225 to i64
  %230 = sub i64 %228, %229
  %231 = icmp eq i64 %230, 0
  %232 = inttoptr i64 %228 to i64*
  br i1 %231, label %249, label %233

233:                                              ; preds = %221
  %234 = ashr exact i64 %230, 3
  %235 = load i64, i64* %3, align 8
  br label %236

236:                                              ; preds = %236, %233
  %237 = phi i64* [ %225, %233 ], [ %247, %236 ]
  %238 = phi i64 [ %234, %233 ], [ %246, %236 ]
  %239 = lshr i64 %238, 1
  %240 = getelementptr inbounds i64, i64* %237, i64 %239
  %241 = load i64, i64* %240, align 8
  %242 = icmp ult i64 %241, %235
  %243 = getelementptr inbounds i64, i64* %240, i64 1
  %244 = xor i64 %239, -1
  %245 = add i64 %238, %244
  %246 = select i1 %242, i64 %245, i64 %239
  %247 = select i1 %242, i64* %243, i64* %237
  %248 = icmp eq i64 %246, 0
  br i1 %248, label %249, label %236

249:                                              ; preds = %236, %221
  %250 = phi i64* [ %225, %221 ], [ %247, %236 ]
  %251 = icmp eq i64* %250, %232
  br i1 %251, label %256, label %252

252:                                              ; preds = %249
  %253 = load i64, i64* %3, align 8
  %254 = load i64, i64* %250, align 8
  %255 = icmp ult i64 %253, %254
  br i1 %255, label %256, label %259

256:                                              ; preds = %252, %249
  %257 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %223, i64 0, i32 0
  %258 = call i64* @_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJRKmEEENS_11__wrap_iterIPmEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.420"* %257, i64* %250, i64* nonnull dereferenceable(8) %3) #19
  br label %259

259:                                              ; preds = %252, %256
  %260 = getelementptr inbounds i64, i64* %163, i64 1
  %261 = icmp eq i64* %260, %160
  br i1 %261, label %262, label %162

262:                                              ; preds = %259, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #19
  %263 = getelementptr inbounds i8*, i8** %53, i64 1
  %264 = icmp eq i8** %263, %26
  br i1 %264, label %265, label %52

265:                                              ; preds = %52, %262, %2, %9
  %266 = phi i1 [ false, %9 ], [ false, %2 ], [ false, %52 ], [ true, %262 ]
  ret i1 %266
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData21RestoreHistoryInfoMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.623", align 8
  %4 = alloca %"class.std::__1::tuple.626", align 1
  %5 = alloca %"class.std::__1::tuple.623", align 8
  %6 = alloca %"class.std::__1::tuple.626", align 1
  %7 = alloca i64, align 8
  %8 = alloca %"class.history::URLRow", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::vector.485", align 16
  %12 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %281, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 7
  %18 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"** %17, align 8, !nonnull !189
  %19 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %18, i64 0, i32 3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 0
  %24 = icmp eq i32 %22, %20
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %281

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* %18, i64 0, i32 3, i32 0, i32 3
  %28 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %27, align 8
  %29 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %28, null
  %30 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %28, i64 0, i32 1, i64 0
  %31 = select i1 %29, i8** null, i8** %30
  %32 = sext i32 %20 to i64
  %33 = getelementptr inbounds i8*, i8** %31, i64 %32
  %34 = bitcast i64* %7 to i8*
  %35 = bitcast %"class.history::URLRow"* %8 to i8*
  %36 = bitcast %class.GURL* %9 to i8*
  %37 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %8, i64 0, i32 4
  %38 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %8, i64 0, i32 5
  %39 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %8, i64 0, i32 6, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %41 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %8, i64 0, i32 3
  %42 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %8, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %41 to i16*
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %52 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %53 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0
  %54 = bitcast %"class.std::__1::tuple.623"* %3 to i8*
  %55 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %3, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %4, i64 0, i32 0
  %57 = bitcast %"class.std::__1::vector.485"* %11 to i8*
  %58 = getelementptr inbounds %"class.std::__1::vector.485", %"class.std::__1::vector.485"* %11, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::vector.485", %"class.std::__1::vector.485"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.std::__1::pair.487"** %59 to i64*
  %61 = bitcast %"class.std::__1::vector.485"* %11 to i64*
  %62 = bitcast %"struct.std::__1::pair.487"** %58 to i64*
  %63 = bitcast %"class.std::__1::tuple.623"* %5 to i8*
  %64 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %5, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %6, i64 0, i32 0
  %66 = bitcast %"class.std::__1::vector.485"* %11 to <2 x i64>*
  br label %67

67:                                               ; preds = %26, %201
  %68 = phi i8** [ %31, %26 ], [ %207, %201 ]
  %69 = bitcast i8** %68 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"**
  %70 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19
  %71 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 6
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %35) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 184, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %36) #19
  %73 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 4, i32 0
  %74 = load %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string.107"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string.107"* %74 to i8*
  %82 = select i1 %78, i8* %80, i8* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %77 to i64
  %86 = select i1 %78, i64 %84, i64 %85
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* %82, i64 %86) #19
  %87 = load i64, i64* %7, align 8
  call void @_ZN7history6URLRowC1ERK4GURLl(%"class.history::URLRow"* nonnull %8, %class.GURL* nonnull dereferenceable(120) %9, i64 %87) #19
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %36) #19
  %88 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 7
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %37, align 8
  %90 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 8
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %38, align 4
  %92 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 9
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %39, align 8
  %94 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 1, i32 0, i64 0
  %95 = load i32, i32* %94, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %152, label %98

98:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #19
  %99 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 5, i32 0
  %100 = load %"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string.107"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = bitcast %"class.std::__1::basic_string.107"* %100 to i8*
  %108 = select i1 %104, i8* %106, i8* %107
  %109 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = zext i8 %103 to i64
  %112 = select i1 %104, i64 %110, i64 %111
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i8* %108, i64 %112) #19
  %113 = load i8, i8* %43, align 1
  %114 = icmp slt i8 %113, 0
  %115 = load i64, i64* %44, align 8
  %116 = zext i8 %113 to i64
  %117 = select i1 %114, i64 %115, i64 %116
  %118 = load i8, i8* %46, align 1
  %119 = icmp slt i8 %118, 0
  %120 = load i64, i64* %47, align 8
  %121 = zext i8 %118 to i64
  %122 = select i1 %119, i64 %120, i64 %121
  %123 = icmp eq i64 %117, %122
  br i1 %123, label %124, label %143

124:                                              ; preds = %98
  %125 = icmp eq i64 %117, 0
  br i1 %125, label %146, label %126

126:                                              ; preds = %124
  %127 = load i16*, i16** %48, align 8
  %128 = select i1 %119, i16* %127, i16* %49
  %129 = load i16*, i16** %50, align 8
  %130 = select i1 %114, i16* %129, i16* %51
  br label %131

131:                                              ; preds = %138, %126
  %132 = phi i64 [ %139, %138 ], [ %117, %126 ]
  %133 = phi i16* [ %141, %138 ], [ %128, %126 ]
  %134 = phi i16* [ %140, %138 ], [ %130, %126 ]
  %135 = load i16, i16* %134, align 2
  %136 = load i16, i16* %133, align 2
  %137 = icmp eq i16 %136, %135
  br i1 %137, label %138, label %143

138:                                              ; preds = %131
  %139 = add i64 %132, -1
  %140 = getelementptr inbounds i16, i16* %134, i64 1
  %141 = getelementptr inbounds i16, i16* %133, i64 1
  %142 = icmp eq i64 %139, 0
  br i1 %142, label %146, label %131

143:                                              ; preds = %131, %98
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #19
  %145 = load i8, i8* %43, align 1
  br label %146

146:                                              ; preds = %138, %124, %143
  %147 = phi i8 [ %113, %124 ], [ %145, %143 ], [ %113, %138 ]
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %150) #20
  br label %151

151:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #19
  br label %152

152:                                              ; preds = %67, %151
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #19
  store i64* %7, i64** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %56) #19
  %153 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %53, i64* nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.623"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %4) #19
  %154 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %153, 0
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %154, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %56) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #19
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to %"class.history::URLRow"*
  %157 = call dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"* %156, %"class.history::URLRow"* nonnull dereferenceable(184) %8) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 0, i64 24, i1 false) #19
  %158 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 3, i32 0, i32 1
  %159 = load i32, i32* %158, align 8
  %160 = sext i32 %159 to i64
  %161 = icmp eq i32 %159, 0
  br i1 %161, label %174, label %162

162:                                              ; preds = %152
  %163 = icmp slt i32 %159, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %162
  call void @abort() #21
  unreachable

165:                                              ; preds = %162
  %166 = shl nsw i64 %160, 4
  %167 = call i8* @_Znwm(i64 %166) #20
  %168 = bitcast i8* %167 to %"struct.std::__1::pair.487"*
  %169 = ptrtoint i8* %167 to i64
  %170 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %168, i64 %160
  %171 = ptrtoint %"struct.std::__1::pair.487"* %170 to i64
  %172 = ptrtoint i8* %167 to i64
  store i64 %172, i64* %61, align 16
  store i64 %169, i64* %62, align 8
  store i64 %171, i64* %60, align 16
  %173 = load i32, i32* %158, align 8
  br label %174

174:                                              ; preds = %152, %165
  %175 = phi i64 [ %171, %165 ], [ 0, %152 ]
  %176 = phi i64 [ %169, %165 ], [ 0, %152 ]
  %177 = phi %"struct.std::__1::pair.487"* [ %170, %165 ], [ null, %152 ]
  %178 = phi %"struct.std::__1::pair.487"* [ %168, %165 ], [ null, %152 ]
  %179 = phi i32 [ %173, %165 ], [ 0, %152 ]
  %180 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* %70, i64 0, i32 3, i32 0, i32 3
  %181 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %180, align 8
  %182 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %181, null
  %183 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %181, i64 0, i32 1, i64 0
  %184 = select i1 %182, i8** null, i8** %183
  %185 = sext i32 %179 to i64
  %186 = getelementptr inbounds i8*, i8** %184, i64 %185
  %187 = icmp eq i32 %179, 0
  br i1 %187, label %188, label %209

188:                                              ; preds = %273, %174
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #19
  store i64* %7, i64** %64, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %65) #19
  %189 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %53, i64* nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.623"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %6) #19
  %190 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %189, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %65) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #19
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %190, i64 26
  %192 = bitcast %"struct.std::__1::__hash_node_base"* %191 to %"struct.std::__1::pair.487"**
  %193 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %192, align 8
  %194 = icmp eq %"struct.std::__1::pair.487"* %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %188
  %196 = ptrtoint %"struct.std::__1::pair.487"* %193 to i64
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %190, i64 27
  %198 = bitcast %"struct.std::__1::__hash_node_base"* %197 to i64*
  store i64 %196, i64* %198, align 8
  %199 = bitcast %"struct.std::__1::pair.487"* %193 to i8*
  call void @_ZdlPv(i8* %199) #20
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 24, i1 false) #19
  br label %201

201:                                              ; preds = %195, %188
  %202 = load <2 x i64>, <2 x i64>* %66, align 16
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %191 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %203, align 8
  %204 = load i64, i64* %60, align 16
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %190, i64 28
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %205 to i64*
  store i64 %204, i64* %206, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #19
  call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %35) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #19
  %207 = getelementptr inbounds i8*, i8** %68, i64 1
  %208 = icmp eq i8** %207, %33
  br i1 %208, label %281, label %67

209:                                              ; preds = %174, %276
  %210 = phi i64 [ %280, %276 ], [ %175, %174 ]
  %211 = phi i64 [ %279, %276 ], [ %176, %174 ]
  %212 = phi %"struct.std::__1::pair.487"* [ %278, %276 ], [ %177, %174 ]
  %213 = phi %"struct.std::__1::pair.487"* [ %277, %276 ], [ %178, %174 ]
  %214 = phi i8** [ %274, %276 ], [ %184, %174 ]
  %215 = bitcast i8** %214 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"**
  %216 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"** %215, align 8
  %217 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* %216, i64 0, i32 3
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* %216, i64 0, i32 4
  %220 = load i64, i64* %219, align 8
  %221 = trunc i64 %220 to i32
  %222 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %221) #19
  %223 = icmp ult %"struct.std::__1::pair.487"* %213, %212
  br i1 %223, label %224, label %229

224:                                              ; preds = %209
  %225 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %213, i64 0, i32 0, i32 0, i32 0
  store i64 %218, i64* %225, align 8
  %226 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %213, i64 0, i32 1
  store i32 %222, i32* %226, align 8
  %227 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %213, i64 1
  %228 = ptrtoint %"struct.std::__1::pair.487"* %227 to i64
  store i64 %228, i64* %62, align 8
  br label %273

229:                                              ; preds = %209
  %230 = load i64, i64* %61, align 16
  %231 = sub i64 %211, %230
  %232 = ashr exact i64 %231, 4
  %233 = add nsw i64 %232, 1
  %234 = icmp ugt i64 %233, 1152921504606846975
  br i1 %234, label %235, label %237

235:                                              ; preds = %229
  %236 = bitcast %"class.std::__1::vector.485"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %236) #21
  unreachable

237:                                              ; preds = %229
  %238 = sub i64 %210, %230
  %239 = ashr exact i64 %238, 4
  %240 = icmp ult i64 %239, 576460752303423487
  br i1 %240, label %241, label %249

241:                                              ; preds = %237
  %242 = ashr exact i64 %238, 3
  %243 = icmp ult i64 %242, %233
  %244 = select i1 %243, i64 %233, i64 %242
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %254, label %246

246:                                              ; preds = %241
  %247 = icmp ugt i64 %244, 1152921504606846975
  br i1 %247, label %248, label %249

248:                                              ; preds = %246
  call void @abort() #21
  unreachable

249:                                              ; preds = %246, %237
  %250 = phi i64 [ %244, %246 ], [ 1152921504606846975, %237 ]
  %251 = shl i64 %250, 4
  %252 = call i8* @_Znwm(i64 %251) #20
  %253 = bitcast i8* %252 to %"struct.std::__1::pair.487"*
  br label %254

254:                                              ; preds = %249, %241
  %255 = phi i64 [ %250, %249 ], [ 0, %241 ]
  %256 = phi i8* [ %252, %249 ], [ null, %241 ]
  %257 = phi %"struct.std::__1::pair.487"* [ %253, %249 ], [ null, %241 ]
  %258 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %257, i64 %232
  %259 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %257, i64 %255
  %260 = ptrtoint %"struct.std::__1::pair.487"* %259 to i64
  %261 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %258, i64 0, i32 0, i32 0, i32 0
  store i64 %218, i64* %261, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %257, i64 %232, i32 1
  store i32 %222, i32* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.487", %"struct.std::__1::pair.487"* %258, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.487"* %263 to i64
  %265 = ptrtoint %"struct.std::__1::pair.487"* %257 to i64
  %266 = icmp sgt i64 %231, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %254
  %268 = inttoptr i64 %230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %268, i64 %231, i1 false) #19
  br label %269

269:                                              ; preds = %267, %254
  store i64 %265, i64* %61, align 16
  store i64 %264, i64* %62, align 8
  store i64 %260, i64* %60, align 16
  %270 = icmp eq i64 %230, 0
  br i1 %270, label %273, label %271

271:                                              ; preds = %269
  %272 = inttoptr i64 %230 to i8*
  call void @_ZdlPv(i8* %272) #20
  br label %273

273:                                              ; preds = %271, %269, %224
  %274 = getelementptr inbounds i8*, i8** %214, i64 1
  %275 = icmp eq i8** %274, %186
  br i1 %275, label %188, label %276

276:                                              ; preds = %273
  %277 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %58, align 8
  %278 = load %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"** %59, align 16
  %279 = ptrtoint %"struct.std::__1::pair.487"* %277 to i64
  %280 = ptrtoint %"struct.std::__1::pair.487"* %278 to i64
  br label %209

281:                                              ; preds = %201, %2, %16
  %282 = phi i1 [ false, %16 ], [ false, %2 ], [ true, %201 ]
  ret i1 %282
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData20RestoreWordStartsMapERKN19in_memory_url_index25InMemoryURLIndexCacheItemE(%class.URLIndexPrivateData*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.623", align 8
  %4 = alloca %"class.std::__1::tuple.626", align 1
  %5 = alloca %"class.std::__1::tuple.623", align 8
  %6 = alloca %"class.std::__1::tuple.626", align 1
  %7 = alloca i64, align 8
  %8 = alloca %struct.RowWordStarts, align 8
  %9 = alloca %"class.std::__1::vector.420", align 8
  %10 = alloca %"class.std::__1::vector.420", align 8
  %11 = alloca %struct.RowWordStarts, align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::vector", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::vector", align 8
  %16 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 1, i32 0, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %442, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem"* %1, i64 0, i32 8
  %22 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"** %21, align 8, !nonnull !189
  %23 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %22, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %22, i64 0, i32 3, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 0
  %28 = icmp eq i32 %26, %24
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %540

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* %22, i64 0, i32 3, i32 0, i32 3
  %32 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %31, align 8
  %33 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %32, null
  %34 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %32, i64 0, i32 1, i64 0
  %35 = select i1 %33, i8** null, i8** %34
  %36 = sext i32 %24 to i64
  %37 = getelementptr inbounds i8*, i8** %35, i64 %36
  %38 = bitcast i64* %7 to i8*
  %39 = bitcast %struct.RowWordStarts* %8 to i8*
  %40 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %8, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %8, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %8, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %43, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %8, i64 0, i32 1, i32 0, i32 1
  %46 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.std::__1::vector.420"* %9 to i8*
  %48 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %9, i64 0, i32 0, i32 1
  %49 = bitcast i64** %48 to i8**
  %50 = bitcast %"class.std::__1::vector.420"* %9 to i8**
  %51 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast i64** %48 to i64*
  %53 = bitcast i64** %41 to i64*
  %54 = bitcast %"class.std::__1::vector.420"* %9 to i64*
  %55 = bitcast %struct.RowWordStarts* %8 to i64*
  %56 = bitcast i64** %51 to i64*
  %57 = bitcast i64** %42 to i64*
  %58 = bitcast %"class.std::__1::vector.420"* %10 to i8*
  %59 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %10, i64 0, i32 0, i32 1
  %60 = bitcast i64** %59 to i8**
  %61 = bitcast %"class.std::__1::vector.420"* %10 to i8**
  %62 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast i64** %59 to i64*
  %64 = bitcast i64** %45 to i64*
  %65 = bitcast %"class.std::__1::vector.420"* %43 to i8*
  %66 = bitcast %"class.std::__1::vector.420"* %10 to i64*
  %67 = bitcast %"class.std::__1::vector.420"* %43 to i64*
  %68 = bitcast i64** %62 to i64*
  %69 = bitcast i64** %46 to i64*
  %70 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %71 = bitcast %"class.std::__1::tuple.623"* %3 to i8*
  %72 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %3, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %4, i64 0, i32 0
  %74 = bitcast %struct.RowWordStarts* %8 to i8*
  br label %75

75:                                               ; preds = %30, %431
  %76 = phi i8** [ %35, %30 ], [ %440, %431 ]
  %77 = bitcast i8** %76 to %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"**
  %78 = load %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"*, %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"** %77, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #19
  %79 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %78, i64 0, i32 7
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 48, i1 false)
  call void @_ZN13RowWordStartsC1Ev(%struct.RowWordStarts* nonnull %8) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #19
  %81 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %78, i64 0, i32 3, i32 2
  %82 = bitcast i8** %81 to i32**
  %83 = load i32*, i32** %82, align 8
  %84 = bitcast i32* %83 to i8*
  %85 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %78, i64 0, i32 3, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %83, i64 %87
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #19
  %89 = shl nsw i64 %87, 3
  %90 = icmp eq i32 %86, 0
  br i1 %90, label %244, label %91

91:                                               ; preds = %75
  %92 = icmp slt i32 %86, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  %94 = bitcast %"class.std::__1::vector.420"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %94) #21
  unreachable

95:                                               ; preds = %91
  %96 = call i8* @_Znwm(i64 %89) #20
  %97 = bitcast i8* %96 to i64*
  store i8* %96, i8** %49, align 8
  store i8* %96, i8** %50, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 %87
  store i64* %98, i64** %51, align 8
  %99 = ptrtoint i8* %96 to i64
  %100 = shl nsw i64 %87, 2
  %101 = add nsw i64 %100, -4
  %102 = lshr exact i64 %101, 2
  %103 = add nuw nsw i64 %102, 1
  %104 = icmp ult i64 %103, 4
  br i1 %104, label %178, label %105

105:                                              ; preds = %95
  %106 = getelementptr i8, i8* %96, i64 8
  %107 = shl nsw i64 %87, 2
  %108 = add nsw i64 %107, -4
  %109 = lshr exact i64 %108, 2
  %110 = shl nsw i64 %108, 1
  %111 = getelementptr i8, i8* %106, i64 %110
  %112 = getelementptr i32, i32* %83, i64 1
  %113 = getelementptr i32, i32* %112, i64 %109
  %114 = bitcast i32* %113 to i8*
  %115 = icmp ult i8* %96, %114
  %116 = icmp ugt i8* %111, %84
  %117 = and i1 %115, %116
  br i1 %117, label %178, label %118

118:                                              ; preds = %105
  %119 = and i64 %103, 9223372036854775804
  %120 = getelementptr i64, i64* %97, i64 %119
  %121 = getelementptr i32, i32* %83, i64 %119
  %122 = add nsw i64 %119, -4
  %123 = lshr exact i64 %122, 2
  %124 = add nuw nsw i64 %123, 1
  %125 = and i64 %124, 1
  %126 = icmp eq i64 %122, 0
  br i1 %126, label %160, label %127

127:                                              ; preds = %118
  %128 = sub nuw nsw i64 %124, %125
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %157, %129 ]
  %131 = phi i64 [ %128, %127 ], [ %158, %129 ]
  %132 = getelementptr i64, i64* %97, i64 %130
  %133 = getelementptr i32, i32* %83, i64 %130
  %134 = bitcast i32* %133 to <2 x i32>*
  %135 = load <2 x i32>, <2 x i32>* %134, align 4, !alias.scope !210
  %136 = getelementptr i32, i32* %133, i64 2
  %137 = bitcast i32* %136 to <2 x i32>*
  %138 = load <2 x i32>, <2 x i32>* %137, align 4, !alias.scope !210
  %139 = sext <2 x i32> %135 to <2 x i64>
  %140 = sext <2 x i32> %138 to <2 x i64>
  %141 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %141, align 8, !alias.scope !213, !noalias !210
  %142 = getelementptr i64, i64* %132, i64 2
  %143 = bitcast i64* %142 to <2 x i64>*
  store <2 x i64> %140, <2 x i64>* %143, align 8, !alias.scope !213, !noalias !210
  %144 = or i64 %130, 4
  %145 = getelementptr i64, i64* %97, i64 %144
  %146 = getelementptr i32, i32* %83, i64 %144
  %147 = bitcast i32* %146 to <2 x i32>*
  %148 = load <2 x i32>, <2 x i32>* %147, align 4, !alias.scope !210
  %149 = getelementptr i32, i32* %146, i64 2
  %150 = bitcast i32* %149 to <2 x i32>*
  %151 = load <2 x i32>, <2 x i32>* %150, align 4, !alias.scope !210
  %152 = sext <2 x i32> %148 to <2 x i64>
  %153 = sext <2 x i32> %151 to <2 x i64>
  %154 = bitcast i64* %145 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %154, align 8, !alias.scope !213, !noalias !210
  %155 = getelementptr i64, i64* %145, i64 2
  %156 = bitcast i64* %155 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %156, align 8, !alias.scope !213, !noalias !210
  %157 = add i64 %130, 8
  %158 = add i64 %131, -2
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %129, !llvm.loop !215

160:                                              ; preds = %129, %118
  %161 = phi i64 [ 0, %118 ], [ %157, %129 ]
  %162 = icmp eq i64 %125, 0
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr i64, i64* %97, i64 %161
  %165 = getelementptr i32, i32* %83, i64 %161
  %166 = bitcast i32* %165 to <2 x i32>*
  %167 = load <2 x i32>, <2 x i32>* %166, align 4, !alias.scope !210
  %168 = getelementptr i32, i32* %165, i64 2
  %169 = bitcast i32* %168 to <2 x i32>*
  %170 = load <2 x i32>, <2 x i32>* %169, align 4, !alias.scope !210
  %171 = sext <2 x i32> %167 to <2 x i64>
  %172 = sext <2 x i32> %170 to <2 x i64>
  %173 = bitcast i64* %164 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %173, align 8, !alias.scope !213, !noalias !210
  %174 = getelementptr i64, i64* %164, i64 2
  %175 = bitcast i64* %174 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %175, align 8, !alias.scope !213, !noalias !210
  br label %176

176:                                              ; preds = %160, %163
  %177 = icmp eq i64 %103, %119
  br i1 %177, label %241, label %178

178:                                              ; preds = %176, %105, %95
  %179 = phi i64* [ %97, %105 ], [ %97, %95 ], [ %120, %176 ]
  %180 = phi i32* [ %83, %105 ], [ %83, %95 ], [ %121, %176 ]
  %181 = ptrtoint i32* %180 to i64
  %182 = getelementptr i32, i32* %83, i64 -1
  %183 = getelementptr i32, i32* %182, i64 %87
  %184 = ptrtoint i32* %183 to i64
  %185 = sub i64 %184, %181
  %186 = lshr i64 %185, 2
  %187 = add nuw nsw i64 %186, 1
  %188 = and i64 %187, 7
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %200, label %190

190:                                              ; preds = %178, %190
  %191 = phi i64* [ %197, %190 ], [ %179, %178 ]
  %192 = phi i32* [ %196, %190 ], [ %180, %178 ]
  %193 = phi i64 [ %198, %190 ], [ %188, %178 ]
  %194 = load i32, i32* %192, align 4
  %195 = sext i32 %194 to i64
  store i64 %195, i64* %191, align 8
  %196 = getelementptr inbounds i32, i32* %192, i64 1
  %197 = getelementptr inbounds i64, i64* %191, i64 1
  %198 = add i64 %193, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %190, !llvm.loop !216

200:                                              ; preds = %190, %178
  %201 = phi i64* [ undef, %178 ], [ %197, %190 ]
  %202 = phi i64* [ %179, %178 ], [ %197, %190 ]
  %203 = phi i32* [ %180, %178 ], [ %196, %190 ]
  %204 = icmp ult i64 %185, 28
  br i1 %204, label %241, label %205

205:                                              ; preds = %200, %205
  %206 = phi i64* [ %239, %205 ], [ %202, %200 ]
  %207 = phi i32* [ %238, %205 ], [ %203, %200 ]
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  store i64 %209, i64* %206, align 8
  %210 = getelementptr inbounds i32, i32* %207, i64 1
  %211 = getelementptr inbounds i64, i64* %206, i64 1
  %212 = load i32, i32* %210, align 4
  %213 = sext i32 %212 to i64
  store i64 %213, i64* %211, align 8
  %214 = getelementptr inbounds i32, i32* %207, i64 2
  %215 = getelementptr inbounds i64, i64* %206, i64 2
  %216 = load i32, i32* %214, align 4
  %217 = sext i32 %216 to i64
  store i64 %217, i64* %215, align 8
  %218 = getelementptr inbounds i32, i32* %207, i64 3
  %219 = getelementptr inbounds i64, i64* %206, i64 3
  %220 = load i32, i32* %218, align 4
  %221 = sext i32 %220 to i64
  store i64 %221, i64* %219, align 8
  %222 = getelementptr inbounds i32, i32* %207, i64 4
  %223 = getelementptr inbounds i64, i64* %206, i64 4
  %224 = load i32, i32* %222, align 4
  %225 = sext i32 %224 to i64
  store i64 %225, i64* %223, align 8
  %226 = getelementptr inbounds i32, i32* %207, i64 5
  %227 = getelementptr inbounds i64, i64* %206, i64 5
  %228 = load i32, i32* %226, align 4
  %229 = sext i32 %228 to i64
  store i64 %229, i64* %227, align 8
  %230 = getelementptr inbounds i32, i32* %207, i64 6
  %231 = getelementptr inbounds i64, i64* %206, i64 6
  %232 = load i32, i32* %230, align 4
  %233 = sext i32 %232 to i64
  store i64 %233, i64* %231, align 8
  %234 = getelementptr inbounds i32, i32* %207, i64 7
  %235 = getelementptr inbounds i64, i64* %206, i64 7
  %236 = load i32, i32* %234, align 4
  %237 = sext i32 %236 to i64
  store i64 %237, i64* %235, align 8
  %238 = getelementptr inbounds i32, i32* %207, i64 8
  %239 = getelementptr inbounds i64, i64* %206, i64 8
  %240 = icmp eq i32* %238, %88
  br i1 %240, label %241, label %205, !llvm.loop !217

241:                                              ; preds = %200, %205, %176
  %242 = phi i64* [ %120, %176 ], [ %201, %200 ], [ %239, %205 ]
  %243 = ptrtoint i64* %242 to i64
  store i64 %243, i64* %52, align 8
  br label %244

244:                                              ; preds = %75, %241
  %245 = phi i64 [ 0, %75 ], [ %243, %241 ]
  %246 = phi i64 [ 0, %75 ], [ %99, %241 ]
  %247 = load i64*, i64** %40, align 8
  %248 = icmp eq i64* %247, null
  br i1 %248, label %254, label %249

249:                                              ; preds = %244
  %250 = ptrtoint i64* %247 to i64
  store i64 %250, i64* %53, align 8
  %251 = bitcast i64* %247 to i8*
  call void @_ZdlPv(i8* %251) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #19
  %252 = load i64, i64* %54, align 8
  %253 = load i64, i64* %52, align 8
  br label %254

254:                                              ; preds = %244, %249
  %255 = phi i64 [ %245, %244 ], [ %253, %249 ]
  %256 = phi i64 [ %246, %244 ], [ %252, %249 ]
  store i64 %256, i64* %55, align 8
  store i64 %255, i64* %53, align 8
  %257 = load i64, i64* %56, align 8
  store i64 %257, i64* %57, align 8
  %258 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %78, i64 0, i32 5, i32 2
  %259 = bitcast i8** %258 to i32**
  %260 = load i32*, i32** %259, align 8
  %261 = bitcast i32* %260 to i8*
  %262 = getelementptr inbounds %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry", %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* %78, i64 0, i32 5, i32 0
  %263 = load i32, i32* %262, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #19
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32* %260, i64 %264
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #19
  %266 = shl nsw i64 %264, 3
  %267 = icmp eq i32 %263, 0
  br i1 %267, label %421, label %268

268:                                              ; preds = %254
  %269 = icmp slt i32 %263, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.420"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %271) #21
  unreachable

272:                                              ; preds = %268
  %273 = call i8* @_Znwm(i64 %266) #20
  %274 = bitcast i8* %273 to i64*
  store i8* %273, i8** %60, align 8
  store i8* %273, i8** %61, align 8
  %275 = getelementptr inbounds i64, i64* %274, i64 %264
  store i64* %275, i64** %62, align 8
  %276 = ptrtoint i8* %273 to i64
  %277 = shl nsw i64 %264, 2
  %278 = add nsw i64 %277, -4
  %279 = lshr exact i64 %278, 2
  %280 = add nuw nsw i64 %279, 1
  %281 = icmp ult i64 %280, 4
  br i1 %281, label %355, label %282

282:                                              ; preds = %272
  %283 = getelementptr i8, i8* %273, i64 8
  %284 = shl nsw i64 %264, 2
  %285 = add nsw i64 %284, -4
  %286 = lshr exact i64 %285, 2
  %287 = shl nsw i64 %285, 1
  %288 = getelementptr i8, i8* %283, i64 %287
  %289 = getelementptr i32, i32* %260, i64 1
  %290 = getelementptr i32, i32* %289, i64 %286
  %291 = bitcast i32* %290 to i8*
  %292 = icmp ult i8* %273, %291
  %293 = icmp ugt i8* %288, %261
  %294 = and i1 %292, %293
  br i1 %294, label %355, label %295

295:                                              ; preds = %282
  %296 = and i64 %280, 9223372036854775804
  %297 = getelementptr i64, i64* %274, i64 %296
  %298 = getelementptr i32, i32* %260, i64 %296
  %299 = add nsw i64 %296, -4
  %300 = lshr exact i64 %299, 2
  %301 = add nuw nsw i64 %300, 1
  %302 = and i64 %301, 1
  %303 = icmp eq i64 %299, 0
  br i1 %303, label %337, label %304

304:                                              ; preds = %295
  %305 = sub nuw nsw i64 %301, %302
  br label %306

306:                                              ; preds = %306, %304
  %307 = phi i64 [ 0, %304 ], [ %334, %306 ]
  %308 = phi i64 [ %305, %304 ], [ %335, %306 ]
  %309 = getelementptr i64, i64* %274, i64 %307
  %310 = getelementptr i32, i32* %260, i64 %307
  %311 = bitcast i32* %310 to <2 x i32>*
  %312 = load <2 x i32>, <2 x i32>* %311, align 4, !alias.scope !218
  %313 = getelementptr i32, i32* %310, i64 2
  %314 = bitcast i32* %313 to <2 x i32>*
  %315 = load <2 x i32>, <2 x i32>* %314, align 4, !alias.scope !218
  %316 = sext <2 x i32> %312 to <2 x i64>
  %317 = sext <2 x i32> %315 to <2 x i64>
  %318 = bitcast i64* %309 to <2 x i64>*
  store <2 x i64> %316, <2 x i64>* %318, align 8, !alias.scope !221, !noalias !218
  %319 = getelementptr i64, i64* %309, i64 2
  %320 = bitcast i64* %319 to <2 x i64>*
  store <2 x i64> %317, <2 x i64>* %320, align 8, !alias.scope !221, !noalias !218
  %321 = or i64 %307, 4
  %322 = getelementptr i64, i64* %274, i64 %321
  %323 = getelementptr i32, i32* %260, i64 %321
  %324 = bitcast i32* %323 to <2 x i32>*
  %325 = load <2 x i32>, <2 x i32>* %324, align 4, !alias.scope !218
  %326 = getelementptr i32, i32* %323, i64 2
  %327 = bitcast i32* %326 to <2 x i32>*
  %328 = load <2 x i32>, <2 x i32>* %327, align 4, !alias.scope !218
  %329 = sext <2 x i32> %325 to <2 x i64>
  %330 = sext <2 x i32> %328 to <2 x i64>
  %331 = bitcast i64* %322 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %331, align 8, !alias.scope !221, !noalias !218
  %332 = getelementptr i64, i64* %322, i64 2
  %333 = bitcast i64* %332 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %333, align 8, !alias.scope !221, !noalias !218
  %334 = add i64 %307, 8
  %335 = add i64 %308, -2
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %306, !llvm.loop !223

337:                                              ; preds = %306, %295
  %338 = phi i64 [ 0, %295 ], [ %334, %306 ]
  %339 = icmp eq i64 %302, 0
  br i1 %339, label %353, label %340

340:                                              ; preds = %337
  %341 = getelementptr i64, i64* %274, i64 %338
  %342 = getelementptr i32, i32* %260, i64 %338
  %343 = bitcast i32* %342 to <2 x i32>*
  %344 = load <2 x i32>, <2 x i32>* %343, align 4, !alias.scope !218
  %345 = getelementptr i32, i32* %342, i64 2
  %346 = bitcast i32* %345 to <2 x i32>*
  %347 = load <2 x i32>, <2 x i32>* %346, align 4, !alias.scope !218
  %348 = sext <2 x i32> %344 to <2 x i64>
  %349 = sext <2 x i32> %347 to <2 x i64>
  %350 = bitcast i64* %341 to <2 x i64>*
  store <2 x i64> %348, <2 x i64>* %350, align 8, !alias.scope !221, !noalias !218
  %351 = getelementptr i64, i64* %341, i64 2
  %352 = bitcast i64* %351 to <2 x i64>*
  store <2 x i64> %349, <2 x i64>* %352, align 8, !alias.scope !221, !noalias !218
  br label %353

353:                                              ; preds = %337, %340
  %354 = icmp eq i64 %280, %296
  br i1 %354, label %418, label %355

355:                                              ; preds = %353, %282, %272
  %356 = phi i64* [ %274, %282 ], [ %274, %272 ], [ %297, %353 ]
  %357 = phi i32* [ %260, %282 ], [ %260, %272 ], [ %298, %353 ]
  %358 = ptrtoint i32* %357 to i64
  %359 = getelementptr i32, i32* %260, i64 -1
  %360 = getelementptr i32, i32* %359, i64 %264
  %361 = ptrtoint i32* %360 to i64
  %362 = sub i64 %361, %358
  %363 = lshr i64 %362, 2
  %364 = add nuw nsw i64 %363, 1
  %365 = and i64 %364, 7
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %377, label %367

367:                                              ; preds = %355, %367
  %368 = phi i64* [ %374, %367 ], [ %356, %355 ]
  %369 = phi i32* [ %373, %367 ], [ %357, %355 ]
  %370 = phi i64 [ %375, %367 ], [ %365, %355 ]
  %371 = load i32, i32* %369, align 4
  %372 = sext i32 %371 to i64
  store i64 %372, i64* %368, align 8
  %373 = getelementptr inbounds i32, i32* %369, i64 1
  %374 = getelementptr inbounds i64, i64* %368, i64 1
  %375 = add i64 %370, -1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %367, !llvm.loop !224

377:                                              ; preds = %367, %355
  %378 = phi i64* [ undef, %355 ], [ %374, %367 ]
  %379 = phi i64* [ %356, %355 ], [ %374, %367 ]
  %380 = phi i32* [ %357, %355 ], [ %373, %367 ]
  %381 = icmp ult i64 %362, 28
  br i1 %381, label %418, label %382

382:                                              ; preds = %377, %382
  %383 = phi i64* [ %416, %382 ], [ %379, %377 ]
  %384 = phi i32* [ %415, %382 ], [ %380, %377 ]
  %385 = load i32, i32* %384, align 4
  %386 = sext i32 %385 to i64
  store i64 %386, i64* %383, align 8
  %387 = getelementptr inbounds i32, i32* %384, i64 1
  %388 = getelementptr inbounds i64, i64* %383, i64 1
  %389 = load i32, i32* %387, align 4
  %390 = sext i32 %389 to i64
  store i64 %390, i64* %388, align 8
  %391 = getelementptr inbounds i32, i32* %384, i64 2
  %392 = getelementptr inbounds i64, i64* %383, i64 2
  %393 = load i32, i32* %391, align 4
  %394 = sext i32 %393 to i64
  store i64 %394, i64* %392, align 8
  %395 = getelementptr inbounds i32, i32* %384, i64 3
  %396 = getelementptr inbounds i64, i64* %383, i64 3
  %397 = load i32, i32* %395, align 4
  %398 = sext i32 %397 to i64
  store i64 %398, i64* %396, align 8
  %399 = getelementptr inbounds i32, i32* %384, i64 4
  %400 = getelementptr inbounds i64, i64* %383, i64 4
  %401 = load i32, i32* %399, align 4
  %402 = sext i32 %401 to i64
  store i64 %402, i64* %400, align 8
  %403 = getelementptr inbounds i32, i32* %384, i64 5
  %404 = getelementptr inbounds i64, i64* %383, i64 5
  %405 = load i32, i32* %403, align 4
  %406 = sext i32 %405 to i64
  store i64 %406, i64* %404, align 8
  %407 = getelementptr inbounds i32, i32* %384, i64 6
  %408 = getelementptr inbounds i64, i64* %383, i64 6
  %409 = load i32, i32* %407, align 4
  %410 = sext i32 %409 to i64
  store i64 %410, i64* %408, align 8
  %411 = getelementptr inbounds i32, i32* %384, i64 7
  %412 = getelementptr inbounds i64, i64* %383, i64 7
  %413 = load i32, i32* %411, align 4
  %414 = sext i32 %413 to i64
  store i64 %414, i64* %412, align 8
  %415 = getelementptr inbounds i32, i32* %384, i64 8
  %416 = getelementptr inbounds i64, i64* %383, i64 8
  %417 = icmp eq i32* %415, %265
  br i1 %417, label %418, label %382, !llvm.loop !225

418:                                              ; preds = %377, %382, %353
  %419 = phi i64* [ %297, %353 ], [ %378, %377 ], [ %416, %382 ]
  %420 = ptrtoint i64* %419 to i64
  store i64 %420, i64* %63, align 8
  br label %421

421:                                              ; preds = %254, %418
  %422 = phi i64 [ 0, %254 ], [ %420, %418 ]
  %423 = phi i64 [ 0, %254 ], [ %276, %418 ]
  %424 = load i64*, i64** %44, align 8
  %425 = icmp eq i64* %424, null
  br i1 %425, label %431, label %426

426:                                              ; preds = %421
  %427 = ptrtoint i64* %424 to i64
  store i64 %427, i64* %64, align 8
  %428 = bitcast i64* %424 to i8*
  call void @_ZdlPv(i8* %428) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #19
  %429 = load i64, i64* %66, align 8
  %430 = load i64, i64* %63, align 8
  br label %431

431:                                              ; preds = %426, %421
  %432 = phi i64 [ %422, %421 ], [ %430, %426 ]
  %433 = phi i64 [ %423, %421 ], [ %429, %426 ]
  store i64 %433, i64* %67, align 8
  store i64 %432, i64* %64, align 8
  %434 = load i64, i64* %68, align 8
  store i64 %434, i64* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #19
  store i64* %7, i64** %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %73) #19
  %435 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.75"* %70, i64* nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.623"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %4) #19
  %436 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %435, 0
  %437 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %436, i64 5
  %438 = bitcast %"class.std::__1::__tree_end_node"* %437 to %struct.RowWordStarts*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %73) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #19
  %439 = call dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSEOS_(%struct.RowWordStarts* %438, %struct.RowWordStarts* nonnull dereferenceable(48) %8) #19
  call void @_ZN13RowWordStartsD1Ev(%struct.RowWordStarts* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #19
  %440 = getelementptr inbounds i8*, i8** %76, i64 1
  %441 = icmp eq i8** %440, %37
  br i1 %441, label %540, label %75

442:                                              ; preds = %2
  %443 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %444 = bitcast %"struct.std::__1::__hash_node_base"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %540, label %447

447:                                              ; preds = %442
  %448 = bitcast %struct.RowWordStarts* %11 to i8*
  %449 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %11, i64 0, i32 0
  %450 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %11, i64 0, i32 1
  %451 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %452 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %453 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %454 = bitcast %"class.std::__1::vector"* %13 to i8**
  %455 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %456 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %457 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %458 = bitcast %"class.std::__1::vector"* %15 to i8**
  %459 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 13, i32 0
  %460 = bitcast %"class.std::__1::tuple.623"* %5 to i8*
  %461 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %5, i64 0, i32 0, i32 0, i32 0
  %462 = getelementptr inbounds %"class.std::__1::tuple.626", %"class.std::__1::tuple.626"* %6, i64 0, i32 0
  %463 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %464 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %463, i64 0, i32 1, i32 1
  %465 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %466 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %467 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %466, i64 0, i32 1, i32 1
  %468 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %469 = bitcast %struct.RowWordStarts* %11 to i8*
  br label %470

470:                                              ; preds = %447, %536
  %471 = phi i64 [ %445, %447 ], [ %538, %536 ]
  %472 = inttoptr i64 %471 to %"struct.std::__1::__hash_node"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %448) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %469, i8 -86, i64 48, i1 false)
  call void @_ZN13RowWordStartsC1Ev(%struct.RowWordStarts* nonnull %11) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #19
  %473 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %472, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  call void @_ZN9bookmarks21CleanUpUrlForMatchingERK4GURLPNSt3__16vectorIN4base14OffsetAdjuster10AdjustmentENS3_9allocatorIS7_EEEE(%"class.std::__1::basic_string"* nonnull sret %12, %class.GURL* dereferenceable(120) %473, %"class.std::__1::vector.541"* null) #19
  call void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector"* nonnull sret %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i1 zeroext false, %"class.std::__1::vector.420"* nonnull %449) #19
  %474 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %452, align 8
  %475 = icmp eq %"class.std::__1::basic_string"* %474, null
  br i1 %475, label %496, label %476

476:                                              ; preds = %470
  %477 = bitcast %"class.std::__1::basic_string"* %474 to i8*
  %478 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %453, align 8
  %479 = icmp eq %"class.std::__1::basic_string"* %478, %474
  br i1 %479, label %494, label %480

480:                                              ; preds = %476, %490
  %481 = phi %"class.std::__1::basic_string"* [ %482, %490 ], [ %478, %476 ]
  %482 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %481, i64 -1
  %483 = bitcast %"class.std::__1::basic_string"* %482 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %484 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %483, i64 0, i32 1, i32 1
  %485 = load i8, i8* %484, align 1
  %486 = icmp slt i8 %485, 0
  br i1 %486, label %487, label %490

487:                                              ; preds = %480
  %488 = bitcast %"class.std::__1::basic_string"* %482 to i8**
  %489 = load i8*, i8** %488, align 8
  call void @_ZdlPv(i8* %489) #20
  br label %490

490:                                              ; preds = %487, %480
  %491 = icmp eq %"class.std::__1::basic_string"* %482, %474
  br i1 %491, label %492, label %480

492:                                              ; preds = %490
  %493 = load i8*, i8** %454, align 8
  br label %494

494:                                              ; preds = %492, %476
  %495 = phi i8* [ %493, %492 ], [ %477, %476 ]
  store %"class.std::__1::basic_string"* %474, %"class.std::__1::basic_string"** %453, align 8
  call void @_ZdlPv(i8* %495) #20
  br label %496

496:                                              ; preds = %470, %494
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %455) #19
  %497 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %472, i64 0, i32 2, i32 0, i32 1, i32 0, i32 3
  call void @_ZN9bookmarks23CleanUpTitleForMatchingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %14, %"class.std::__1::basic_string"* dereferenceable(24) %497) #19
  call void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector"* nonnull sret %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, i1 zeroext false, %"class.std::__1::vector.420"* %450) #19
  %498 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %456, align 8
  %499 = icmp eq %"class.std::__1::basic_string"* %498, null
  br i1 %499, label %520, label %500

500:                                              ; preds = %496
  %501 = bitcast %"class.std::__1::basic_string"* %498 to i8*
  %502 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %457, align 8
  %503 = icmp eq %"class.std::__1::basic_string"* %502, %498
  br i1 %503, label %518, label %504

504:                                              ; preds = %500, %514
  %505 = phi %"class.std::__1::basic_string"* [ %506, %514 ], [ %502, %500 ]
  %506 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %505, i64 -1
  %507 = bitcast %"class.std::__1::basic_string"* %506 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %508 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %507, i64 0, i32 1, i32 1
  %509 = load i8, i8* %508, align 1
  %510 = icmp slt i8 %509, 0
  br i1 %510, label %511, label %514

511:                                              ; preds = %504
  %512 = bitcast %"class.std::__1::basic_string"* %506 to i8**
  %513 = load i8*, i8** %512, align 8
  call void @_ZdlPv(i8* %513) #20
  br label %514

514:                                              ; preds = %511, %504
  %515 = icmp eq %"class.std::__1::basic_string"* %506, %498
  br i1 %515, label %516, label %504

516:                                              ; preds = %514
  %517 = load i8*, i8** %458, align 8
  br label %518

518:                                              ; preds = %516, %500
  %519 = phi i8* [ %517, %516 ], [ %501, %500 ]
  store %"class.std::__1::basic_string"* %498, %"class.std::__1::basic_string"** %457, align 8
  call void @_ZdlPv(i8* %519) #20
  br label %520

520:                                              ; preds = %496, %518
  %521 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %472, i64 0, i32 2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %460) #19
  store i64* %521, i64** %461, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %462) #19
  %522 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.75"* %459, i64* dereferenceable(8) %521, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.623"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.626"* nonnull dereferenceable(1) %6) #19
  %523 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %522, 0
  %524 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %523, i64 5
  %525 = bitcast %"class.std::__1::__tree_end_node"* %524 to %struct.RowWordStarts*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %462) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %460) #19
  %526 = call dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSEOS_(%struct.RowWordStarts* %525, %struct.RowWordStarts* nonnull dereferenceable(48) %11) #19
  %527 = load i8, i8* %464, align 1
  %528 = icmp slt i8 %527, 0
  br i1 %528, label %529, label %531

529:                                              ; preds = %520
  %530 = load i8*, i8** %465, align 8
  call void @_ZdlPv(i8* %530) #20
  br label %531

531:                                              ; preds = %520, %529
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %455) #19
  %532 = load i8, i8* %467, align 1
  %533 = icmp slt i8 %532, 0
  br i1 %533, label %534, label %536

534:                                              ; preds = %531
  %535 = load i8*, i8** %468, align 8
  call void @_ZdlPv(i8* %535) #20
  br label %536

536:                                              ; preds = %531, %534
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #19
  call void @_ZN13RowWordStartsD1Ev(%struct.RowWordStarts* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %448) #19
  %537 = inttoptr i64 %471 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %470

540:                                              ; preds = %431, %536, %442, %20
  %541 = phi i1 [ false, %20 ], [ true, %442 ], [ true, %536 ], [ true, %431 ]
  ret i1 %541
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #21
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #20
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #19
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::basic_string"* %47 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #20
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #20
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

declare i32 @_ZN2ui21PageTransitionFromIntEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19URLIndexPrivateData12ShouldFilterElPK18TemplateURLService(%class.URLIndexPrivateData* nocapture readonly, i64, %class.TemplateURLService*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.GURL, align 8
  %5 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %74, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #19, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %1
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %1
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %1, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %1, %14 ]
  %20 = getelementptr inbounds %class.URLIndexPrivateData, %class.URLIndexPrivateData* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %74, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %74, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %1
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %74

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %74, label %31

56:                                               ; preds = %47
  %57 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %57) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 120, i1 false)
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 5
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to %class.GURL*
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %4, %class.GURL* dereferenceable(120) %59) #19
  %60 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 0, i32 1
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56
  %64 = icmp eq %class.TemplateURLService* %2, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %63
  %66 = call %class.TemplateURL* @_ZNK18TemplateURLService24GetDefaultSearchProviderEv(%class.TemplateURLService* nonnull %2) #19
  %67 = icmp eq %class.TemplateURL* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %2, i64 0, i32 4, i32 0, i32 0, i32 0
  %70 = load %class.SearchTermsData*, %class.SearchTermsData** %69, align 8
  %71 = call zeroext i1 @_ZNK11TemplateURL11IsSearchURLERK4GURLRK15SearchTermsData(%class.TemplateURL* nonnull %66, %class.GURL* nonnull dereferenceable(120) %4, %class.SearchTermsData* dereferenceable(8) %70) #19
  br label %72

72:                                               ; preds = %56, %63, %68, %65
  %73 = phi i1 [ true, %56 ], [ false, %65 ], [ %71, %68 ], [ false, %63 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %57) #19
  br label %74

74:                                               ; preds = %52, %44, %25, %3, %18, %72
  %75 = phi i1 [ %73, %72 ], [ true, %18 ], [ true, %3 ], [ true, %25 ], [ true, %44 ], [ true, %52 ]
  ret i1 %75
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare %class.TemplateURL* @_ZNK18TemplateURLService24GetDefaultSearchProviderEv(%class.TemplateURLService*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11TemplateURL11IsSearchURLERK4GURLRK15SearchTermsData(%class.TemplateURL*, %class.GURL* dereferenceable(120), %class.SearchTermsData* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData19SearchTermCacheItemC2ERKN4base8internal9flat_treeImNS1_8identityENSt3__14lessIvEENS5_6vectorImNS5_9allocatorImEEEEEERKNS3_IlS4_S7_NS8_IlNS9_IlEEEEEE(%"struct.URLIndexPrivateData::SearchTermCacheItem"*, %"class.base::internal::flat_tree.520"* nocapture readonly dereferenceable(24), %"class.base::internal::flat_tree.517"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #19
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i64** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::internal::flat_tree.520"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %3
  %14 = icmp ugt i64 %11, 2305843009213693951
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #21
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #20
  %19 = bitcast i8* %18 to i64*
  %20 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast i64** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds i64, i64* %19, i64 %11
  %24 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = getelementptr inbounds %"class.base::internal::flat_tree.520", %"class.base::internal::flat_tree.520"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = load i64, i64* %6, align 8
  %28 = bitcast i64** %20 to i64*
  %29 = ptrtoint i8* %18 to i64
  %30 = ptrtoint i64* %26 to i64
  %31 = sub i64 %27, %30
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %17
  %34 = lshr exact i64 %31, 3
  %35 = bitcast i64* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %35, i64 %31, i1 false) #19
  %36 = getelementptr inbounds i64, i64* %19, i64 %34
  %37 = ptrtoint i64* %36 to i64
  br label %38

38:                                               ; preds = %33, %17
  %39 = phi i64 [ %37, %33 ], [ %29, %17 ]
  store i64 %39, i64* %28, align 8
  br label %40

40:                                               ; preds = %3, %38
  %41 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1
  %42 = bitcast %"class.base::internal::flat_tree.517"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #19
  %43 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %2, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast i64** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::internal::flat_tree.517"* %2 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %40
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.base::internal::flat_tree.517"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #21
  unreachable

55:                                               ; preds = %51
  %56 = tail call i8* @_Znwm(i64 %48) #20
  %57 = bitcast i8* %56 to i64*
  %58 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %59 = bitcast i64** %58 to i8**
  store i8* %56, i8** %59, align 8
  %60 = bitcast %"class.base::internal::flat_tree.517"* %41 to i8**
  store i8* %56, i8** %60, align 8
  %61 = getelementptr inbounds i64, i64* %57, i64 %49
  %62 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %2, i64 0, i32 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i64, i64* %44, align 8
  %66 = bitcast i64** %58 to i64*
  %67 = ptrtoint i8* %56 to i64
  %68 = ptrtoint i64* %64 to i64
  %69 = sub i64 %65, %68
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %55
  %72 = lshr exact i64 %69, 3
  %73 = bitcast i64* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %73, i64 %69, i1 false) #19
  %74 = getelementptr inbounds i64, i64* %57, i64 %72
  %75 = ptrtoint i64* %74 to i64
  br label %76

76:                                               ; preds = %71, %55
  %77 = phi i64 [ %75, %71 ], [ %67, %55 ]
  store i64 %77, i64* %66, align 8
  br label %78

78:                                               ; preds = %40, %76
  %79 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 2
  store i8 1, i8* %79, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData19SearchTermCacheItemC2Ev(%"struct.URLIndexPrivateData::SearchTermCacheItem"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 2
  %3 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData19SearchTermCacheItemC2ERKS0_(%"struct.URLIndexPrivateData::SearchTermCacheItem"*, %"struct.URLIndexPrivateData::SearchTermCacheItem"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #19
  %4 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i64** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 2305843009213693951
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #21
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #20
  %18 = bitcast i8* %17 to i64*
  %19 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds i64, i64* %18, i64 %10
  %23 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %22, i64** %23, align 8
  %24 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast i64** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint i64* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = lshr exact i64 %30, 3
  %34 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %34, i64 %30, i1 false) #19
  %35 = getelementptr inbounds i64, i64* %18, i64 %33
  %36 = ptrtoint i64* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  %40 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %1, i64 0, i32 1
  %42 = bitcast %"class.base::internal::flat_tree.517"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #19
  %43 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %44 = bitcast i64** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::internal::flat_tree.517"* %41 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %39
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.base::internal::flat_tree.517"* %40 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #21
  unreachable

55:                                               ; preds = %51
  %56 = tail call i8* @_Znwm(i64 %48) #20
  %57 = bitcast i8* %56 to i64*
  %58 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %59 = bitcast i64** %58 to i8**
  store i8* %56, i8** %59, align 8
  %60 = bitcast %"class.base::internal::flat_tree.517"* %40 to i8**
  store i8* %56, i8** %60, align 8
  %61 = getelementptr inbounds i64, i64* %57, i64 %49
  %62 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %41, i64 0, i32 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i64, i64* %44, align 8
  %66 = bitcast i64** %58 to i64*
  %67 = ptrtoint i8* %56 to i64
  %68 = ptrtoint i64* %64 to i64
  %69 = sub i64 %65, %68
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %55
  %72 = lshr exact i64 %69, 3
  %73 = bitcast i64* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %73, i64 %69, i1 false) #19
  %74 = getelementptr inbounds i64, i64* %57, i64 %72
  %75 = ptrtoint i64* %74 to i64
  br label %76

76:                                               ; preds = %71, %55
  %77 = phi i64 [ %75, %71 ], [ %67, %55 ]
  store i64 %77, i64* %66, align 8
  br label %78

78:                                               ; preds = %39, %76
  %79 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 2
  %80 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %1, i64 0, i32 2
  %81 = load i8, i8* %80, align 8, !range !2
  store i8 %81, i8* %79, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK19URLIndexPrivateData19SearchTermCacheItem19EstimateMemoryUsageEv(%"struct.URLIndexPrivateData::SearchTermCacheItem"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast i64** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::internal::flat_tree.517"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %4, %6
  %14 = add i64 %13, %10
  %15 = sub i64 %14, %12
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19URLIndexPrivateData19SearchTermCacheItemD2Ev(%"struct.URLIndexPrivateData::SearchTermCacheItem"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i64* %3 to i64
  %7 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i64* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #20
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"struct.URLIndexPrivateData::SearchTermCacheItem", %"struct.URLIndexPrivateData::SearchTermCacheItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #20
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterC2ERKNSt3__113unordered_mapIl19HistoryInfoMapValueNS1_4hashIlEENS1_8equal_toIlEENS1_9allocatorINS1_4pairIKlS3_EEEEEE(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* nocapture, %"class.std::__1::unordered_map"* dereferenceable(40)) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.URLIndexPrivateData::HistoryItemFactorGreater", %"class.URLIndexPrivateData::HistoryItemFactorGreater"* %0, i64 0, i32 0
  store %"class.std::__1::unordered_map"* %1, %"class.std::__1::unordered_map"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterD2Ev(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* nocapture readonly, i64, i64) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.URLIndexPrivateData::HistoryItemFactorGreater", %"class.URLIndexPrivateData::HistoryItemFactorGreater"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %128, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #19, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %1
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %1
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %1, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %1, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %128, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %128, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %1
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %128

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %1
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %128, label %32

57:                                               ; preds = %48
  br i1 %11, label %60, label %58

58:                                               ; preds = %57
  %59 = and i64 %31, %2
  br label %64

60:                                               ; preds = %57
  %61 = icmp ugt i64 %7, %2
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %2, %7
  br label %64

64:                                               ; preds = %62, %60, %58
  %65 = phi i64 [ %59, %58 ], [ %63, %62 ], [ %2, %60 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %65
  %67 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base"* %67, null
  br i1 %68, label %128, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %71, null
  br i1 %72, label %128, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base"* [ %96, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 1
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, %2
  br i1 %78, label %89, label %79

79:                                               ; preds = %73
  br i1 %11, label %82, label %80

80:                                               ; preds = %79
  %81 = and i64 %77, %31
  br label %86

82:                                               ; preds = %79
  %83 = icmp ult i64 %77, %7
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %77, %7
  br label %86

86:                                               ; preds = %84, %82, %80
  %87 = phi i64 [ %81, %80 ], [ %85, %84 ], [ %77, %82 ]
  %88 = icmp eq i64 %87, %65
  br i1 %88, label %94, label %128

89:                                               ; preds = %73
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 2
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, %2
  br i1 %93, label %98, label %94

94:                                               ; preds = %89, %86
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base"* %96, null
  br i1 %97, label %128, label %73

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 3
  %100 = bitcast %"struct.std::__1::__hash_node_base"* %99 to %"class.history::URLRow"*
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 3
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.history::URLRow"*
  %103 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %100, i64 0, i32 5
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %102, i64 0, i32 5
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %98
  %109 = icmp sgt i32 %104, %106
  br label %128

110:                                              ; preds = %98
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 23
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i32*
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 23
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to i32*
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %113, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %110
  %119 = icmp sgt i32 %113, %116
  br label %128

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 24
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 24
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp sgt i64 %123, %126
  br label %128

128:                                              ; preds = %53, %45, %94, %86, %69, %64, %26, %3, %19, %120, %118, %108
  %129 = phi i1 [ %109, %108 ], [ %119, %118 ], [ %127, %120 ], [ false, %19 ], [ false, %3 ], [ false, %26 ], [ true, %64 ], [ true, %69 ], [ true, %86 ], [ true, %94 ], [ false, %45 ], [ false, %53 ]
  ret i1 %129
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN19in_memory_url_index25InMemoryURLIndexCacheItemC2EPN6google8protobuf5ArenaE(%"class.in_memory_url_index::InMemoryURLIndexCacheItem"*, %"class.google::protobuf::Arena"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeImED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #19
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #19
  %15 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #19
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #19
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 %1
  ret i64* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare i32 @_ZN2ui26PageTransitionGetQualifierENS_14PageTransitionE(i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.428"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = ptrtoint i64* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.428"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i64*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i64, i64* %1, i64 %22
  %25 = select i1 %23, i64* %24, i64* %2
  %26 = ptrtoint i64* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #19
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #19
  %42 = inttoptr i64 %35 to i64*
  %43 = getelementptr inbounds i64, i64* %42, i64 %39
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i64, i64* %16, i64 %28
  store i64* %48, i64** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i64** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  %55 = bitcast %"class.std::__1::vector.428"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #19
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.428"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #21
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.428"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #21
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #20
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i64** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.428"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i64, i64* %75, i64 %72
  store i64* %79, i64** %8, align 8
  %80 = bitcast i64** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #19
  %86 = getelementptr inbounds i64, i64* %75, i64 %84
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = ptrtoint i64* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.420"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i64*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i64, i64* %1, i64 %22
  %25 = select i1 %23, i64* %24, i64* %2
  %26 = ptrtoint i64* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #19
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #19
  %42 = inttoptr i64 %35 to i64*
  %43 = getelementptr inbounds i64, i64* %42, i64 %39
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i64, i64* %16, i64 %28
  store i64* %48, i64** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i64** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  %55 = bitcast %"class.std::__1::vector.420"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #19
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.420"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #21
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.420"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #21
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #20
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i64** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.420"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i64, i64* %75, i64 %72
  store i64* %79, i64** %8, align 8
  %80 = bitcast i64** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #19
  %86 = getelementptr inbounds i64, i64* %75, i64 %84
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordListItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index38InMemoryURLIndexCacheItem_WordListItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase3AddINS0_16RepeatedPtrFieldINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE11TypeHandlerELPv0EEEvONT_4TypeE(%"class.google::protobuf::internal::RepeatedPtrFieldBase"*, %"class.std::__1::basic_string.107"* dereferenceable(24)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.google::protobuf::internal::RepeatedPtrFieldBase", %"class.google::protobuf::internal::RepeatedPtrFieldBase"* %0, i64 0, i32 3
  %4 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %3, align 8
  %5 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.google::protobuf::internal::RepeatedPtrFieldBase", %"class.google::protobuf::internal::RepeatedPtrFieldBase"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  br label %34

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.google::protobuf::internal::RepeatedPtrFieldBase", %"class.google::protobuf::internal::RepeatedPtrFieldBase"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %11, %13
  br i1 %14, label %15, label %30

15:                                               ; preds = %9
  %16 = add nsw i32 %11, 1
  store i32 %16, i32* %10, align 8
  %17 = sext i32 %11 to i64
  %18 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %4, i64 0, i32 1, i64 %17
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 23
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %15
  %24 = bitcast i8* %19 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #20
  br label %26

26:                                               ; preds = %15, %23
  %27 = bitcast %"class.std::__1::basic_string.107"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %27, i64 24, i1 false) #19
  %28 = bitcast %"class.std::__1::basic_string.107"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 0, i8* %29, align 1
  store i8 0, i8* %27, align 1
  br label %69

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.google::protobuf::internal::RepeatedPtrFieldBase", %"class.google::protobuf::internal::RepeatedPtrFieldBase"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %13, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %6, %30
  %35 = phi i32 [ %8, %6 ], [ %13, %30 ]
  %36 = add nsw i32 %35, 1
  tail call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %0, i32 %36) #19
  %37 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %3, align 8
  %38 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  br label %40

40:                                               ; preds = %34, %30
  %41 = phi i32 [ %39, %34 ], [ %13, %30 ]
  %42 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %37, %34 ], [ %4, %30 ]
  %43 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %42, i64 0, i32 0
  %44 = add nsw i32 %41, 1
  store i32 %44, i32* %43, align 8
  %45 = getelementptr inbounds %"class.google::protobuf::internal::RepeatedPtrFieldBase", %"class.google::protobuf::internal::RepeatedPtrFieldBase"* %0, i64 0, i32 0
  %46 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %45, align 8
  %47 = icmp eq %"class.google::protobuf::Arena"* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %40
  %49 = tail call i8* @_Znwm(i64 24) #20
  %50 = bitcast %"class.std::__1::basic_string.107"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 8 %50, i64 24, i1 false) #19
  br label %60

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.google::protobuf::Arena", %"class.google::protobuf::Arena"* %46, i64 0, i32 4
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %56, label %55, !prof !188

55:                                               ; preds = %51
  tail call void @_ZNK6google8protobuf5Arena17OnArenaAllocationEPKSt9type_infom(%"class.google::protobuf::Arena"* nonnull %46, %"class.std::type_info"* null, i64 24) #19
  br label %56

56:                                               ; preds = %55, %51
  %57 = getelementptr inbounds %"class.google::protobuf::Arena", %"class.google::protobuf::Arena"* %46, i64 0, i32 0
  %58 = tail call i8* @_ZN6google8protobuf8internal9ArenaImpl28AllocateAlignedAndAddCleanupEmPFvPvE(%"class.google::protobuf::internal::ArenaImpl"* %57, i64 24, void (i8*)* nonnull @_ZN6google8protobuf8internal21arena_destruct_objectINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvPv) #19
  %59 = bitcast %"class.std::__1::basic_string.107"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #19
  br label %60

60:                                               ; preds = %48, %56
  %61 = phi i8* [ %50, %48 ], [ %59, %56 ]
  %62 = phi i8* [ %49, %48 ], [ %58, %56 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #19
  %63 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %3, align 8
  %64 = getelementptr inbounds %"class.google::protobuf::internal::RepeatedPtrFieldBase", %"class.google::protobuf::internal::RepeatedPtrFieldBase"* %0, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %64, align 8
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %63, i64 0, i32 1, i64 %67
  store i8* %62, i8** %68, align 8
  br label %69

69:                                               ; preds = %60, %26
  ret void
}

declare void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"*, i32) local_unnamed_addr #1

declare i8* @_ZN6google8protobuf8internal9ArenaImpl28AllocateAlignedAndAddCleanupEmPFvPvE(%"class.google::protobuf::internal::ArenaImpl"*, i64, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6google8protobuf8internal21arena_destruct_objectINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvPv(i8*) #0 comdat {
  %2 = getelementptr inbounds i8, i8* %0, i64 23
  %3 = load i8, i8* %2, align 1
  %4 = icmp slt i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %7) #20
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare void @_ZNK6google8protobuf5Arena17OnArenaAllocationEPKSt9type_infom(%"class.google::protobuf::Arena"*, %"class.std::type_info"*, i64) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index37InMemoryURLIndexCacheItem_WordMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordMapItem_WordMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index50InMemoryURLIndexCacheItem_WordMapItem_WordMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"*, %"class.google::protobuf::Arena"*, %"class.std::__1::basic_string.107"*) local_unnamed_addr #14 comdat align 2 {
  %4 = icmp eq %"class.google::protobuf::Arena"* %1, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 24) #20
  %7 = bitcast i8* %6 to %"class.std::__1::basic_string.107"*
  %8 = bitcast %"class.std::__1::basic_string.107"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string.107"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %13, i64 24, i1 false) #19
  br label %39

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.107"* nonnull %7, i8* %16, i64 %18) #19
  br label %39

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.google::protobuf::Arena", %"class.google::protobuf::Arena"* %1, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23, !prof !188

23:                                               ; preds = %19
  tail call void @_ZNK6google8protobuf5Arena17OnArenaAllocationEPKSt9type_infom(%"class.google::protobuf::Arena"* nonnull %1, %"class.std::type_info"* null, i64 24) #19
  br label %24

24:                                               ; preds = %23, %19
  %25 = getelementptr inbounds %"class.google::protobuf::Arena", %"class.google::protobuf::Arena"* %1, i64 0, i32 0
  %26 = tail call i8* @_ZN6google8protobuf8internal9ArenaImpl28AllocateAlignedAndAddCleanupEmPFvPvE(%"class.google::protobuf::internal::ArenaImpl"* %25, i64 24, void (i8*)* nonnull @_ZN6google8protobuf8internal21arena_destruct_objectINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvPv) #19
  %27 = bitcast i8* %26 to %"class.std::__1::basic_string.107"*
  %28 = bitcast %"class.std::__1::basic_string.107"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.std::__1::basic_string.107"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %33, i64 24, i1 false) #19
  br label %39

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.107"* %27, i8* %36, i64 %38) #19
  br label %39

39:                                               ; preds = %12, %14, %32, %34
  %40 = phi %"class.std::__1::basic_string.107"* [ %7, %12 ], [ %7, %14 ], [ %27, %32 ], [ %27, %34 ]
  %41 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string.107"* %40, %"class.std::__1::basic_string.107"** %41, align 8
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.107"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.107"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.107"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.107"*, i8*, i64) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index41InMemoryURLIndexCacheItem_CharWordMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index58InMemoryURLIndexCacheItem_CharWordMapItem_CharWordMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare void @_ZN6google8protobuf13RepeatedFieldIiE7ReserveEi(%"class.google::protobuf::RepeatedField"*, i32) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index46InMemoryURLIndexCacheItem_WordIDHistoryMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index68InMemoryURLIndexCacheItem_WordIDHistoryMapItem_WordIDHistoryMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare void @_ZN6google8protobuf13RepeatedFieldIlE7ReserveEi(%"class.google::protobuf::RepeatedField.562"*, i32) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index44InMemoryURLIndexCacheItem_HistoryInfoMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index64InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfo"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index74InMemoryURLIndexCacheItem_HistoryInfoMapItem_HistoryInfoMapEntry_VisitInfoEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index43InMemoryURLIndexCacheItem_WordStartsMapItemEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare %"class.in_memory_url_index::InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntry"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN19in_memory_url_index62InMemoryURLIndexCacheItem_WordStartsMapItem_WordStartsMapEntryEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.107"*, %"class.std::__1::basic_string.107"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.114"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #19
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #19
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #19
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #19
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #19
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #19
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.107", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #19
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.107"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #19
  %32 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.107"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #20
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.107"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.107"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #19
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #19
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #20
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #19
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #19
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #21
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #21
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #20
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !226
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !226
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !229, !noalias !226
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !229, !noalias !226
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !226
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !226
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !229, !noalias !226
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !229, !noalias !226
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !226
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !226
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !229, !noalias !226
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !229, !noalias !226
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !226
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !226
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !229, !noalias !226
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !229, !noalias !226
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !231

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !226
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !226
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !229, !noalias !226
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !229, !noalias !226
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !232

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !233

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !234

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !235

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !236

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !237

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !239
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !239
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !242, !noalias !239
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !242, !noalias !239
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !239
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !239
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !242, !noalias !239
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !242, !noalias !239
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !239
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !239
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !242, !noalias !239
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !242, !noalias !239
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !239
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !239
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !242, !noalias !239
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !242, !noalias !239
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !244

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !239
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !239
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !242, !noalias !239
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !242, !noalias !239
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !245

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !246

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !247

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #20
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %38, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #20
  br label %19

19:                                               ; preds = %14, %4
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i64* %21 to i64
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast i64** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i64* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #20
  br label %28

28:                                               ; preds = %23, %19
  %29 = bitcast %"struct.std::__1::pair.521"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = bitcast %"struct.std::__1::pair.521"* %10 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #20
  br label %36

36:                                               ; preds = %28, %33
  %37 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %37) #20
  br label %38

38:                                               ; preds = %2, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"*, %"class.std::__1::__tree_node.579"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.579"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.579"* %1 to %"class.std::__1::__tree_node.579"**
  %6 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %0, %"class.std::__1::__tree_node.579"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.579"**
  %9 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %0, %"class.std::__1::__tree_node.579"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %1, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.std::__1::pair.549"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = bitcast %"struct.std::__1::pair.549"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #20
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.579"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"*, %"class.std::__1::__tree_node.581"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.581"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.581"* %1 to %"class.std::__1::__tree_node.581"**
  %6 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node.581"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.581"**
  %9 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node.581"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = icmp eq i64* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint i64* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast i64** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i64* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #20
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.581"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"*, %"class.std::__1::__tree_node.583"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.583"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.583"* %1 to %"class.std::__1::__tree_node.583"**
  %6 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"* %0, %"class.std::__1::__tree_node.583"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.583"**
  %9 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"* %0, %"class.std::__1::__tree_node.583"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = icmp eq i64* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint i64* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast i64** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i64* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #20
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.583"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"*, %"class.std::__1::__tree_node.585"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.585"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.585"* %1 to %"class.std::__1::__tree_node.585"**
  %6 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"* %0, %"class.std::__1::__tree_node.585"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.585"**
  %9 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"* %0, %"class.std::__1::__tree_node.585"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = icmp eq i64* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint i64* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast i64** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i64* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #20
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.585"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19HistoryInfoMapValueD1Ev(%struct.HistoryInfoMapValue*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"*, %"class.std::__1::__tree_node.588"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.588"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.588"* %1 to %"class.std::__1::__tree_node.588"**
  %6 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"* %0, %"class.std::__1::__tree_node.588"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.588"**
  %9 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"* %0, %"class.std::__1::__tree_node.588"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN13RowWordStartsD1Ev(%struct.RowWordStarts* %10) #19
  %11 = bitcast %"class.std::__1::__tree_node.588"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #20
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #19
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #21
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #21
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #20
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !248
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !248
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !251, !noalias !248
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !251, !noalias !248
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !248
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !248
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !251, !noalias !248
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !251, !noalias !248
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !248
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !248
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !251, !noalias !248
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !251, !noalias !248
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !248
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !248
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !251, !noalias !248
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !251, !noalias !248
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !253

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !248
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !248
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !251, !noalias !248
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !251, !noalias !248
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !254

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !255

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !256

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %221 = ptrtoint %"class.std::__1::basic_string"* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %222, align 8
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %225 = icmp eq %"class.std::__1::basic_string"* %224, %223
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = ptrtoint %"class.std::__1::basic_string"* %223 to i64
  br label %239

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::basic_string"* [ %231, %228 ], [ %34, %219 ]
  %230 = phi %"class.std::__1::basic_string"* [ %232, %228 ], [ %224, %219 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 -1
  %233 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  %234 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #19
  %235 = icmp eq %"class.std::__1::basic_string"* %232, %223
  br i1 %235, label %236, label %228

236:                                              ; preds = %228
  %237 = load i64, i64* %6, align 8
  %238 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %239

239:                                              ; preds = %226, %236
  %240 = phi %"class.std::__1::basic_string"* [ %223, %226 ], [ %238, %236 ]
  %241 = phi %"class.std::__1::basic_string"* [ %34, %226 ], [ %231, %236 ]
  %242 = phi i64 [ %227, %226 ], [ %237, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string"* %241 to i64
  store i64 %243, i64* %6, align 8
  store i64 %221, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %244 = inttoptr i64 %242 to %"class.std::__1::basic_string"*
  %245 = icmp eq %"class.std::__1::basic_string"* %240, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239, %256
  %247 = phi %"class.std::__1::basic_string"* [ %248, %256 ], [ %240, %239 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::basic_string"* %248 to i8**
  %255 = load i8*, i8** %254, align 8
  tail call void @_ZdlPv(i8* %255) #20
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string"* %248, %244
  br i1 %257, label %258, label %246

258:                                              ; preds = %256, %239
  %259 = icmp eq i64 %242, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %261) #20
  br label %262

262:                                              ; preds = %258, %260
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #21
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !257
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !257
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !260, !noalias !257
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !260, !noalias !257
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !257
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !257
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !260, !noalias !257
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !260, !noalias !257
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !257
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !257
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !260, !noalias !257
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !260, !noalias !257
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !257
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !257
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !260, !noalias !257
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !260, !noalias !257
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !262

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !257
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !257
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !260, !noalias !257
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !260, !noalias !257
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !263

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !264

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !265

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !266
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !266
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !269, !noalias !266
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !269, !noalias !266
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !266
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !266
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !269, !noalias !266
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !269, !noalias !266
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !271

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !266
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !266
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !269, !noalias !266
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !269, !noalias !266
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !272

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !273

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !274
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !274
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !277, !noalias !274
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !277, !noalias !274
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !274
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !274
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !277, !noalias !274
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !277, !noalias !274
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !274
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !274
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !277, !noalias !274
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !277, !noalias !274
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !274
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !274
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !277, !noalias !274
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !277, !noalias !274
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !279

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !274
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !274
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !277, !noalias !274
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !277, !noalias !274
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !280

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !281

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !282

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !283
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !283
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !286, !noalias !283
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !286, !noalias !283
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !283
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !283
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !286, !noalias !283
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !286, !noalias !283
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !288

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !283
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !283
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !286, !noalias !283
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !286, !noalias !283
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !289

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !290

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.410"*, %"class.std::__1::__tree_node.592"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.592"* %1, null
  br i1 %3, label %38, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.592"* %1 to %"class.std::__1::__tree_node.592"**
  %6 = load %"class.std::__1::__tree_node.592"*, %"class.std::__1::__tree_node.592"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.410"* %0, %"class.std::__1::__tree_node.592"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.592"**
  %9 = load %"class.std::__1::__tree_node.592"*, %"class.std::__1::__tree_node.592"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.410"* %0, %"class.std::__1::__tree_node.592"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %1, i64 0, i32 1, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %17, %12
  br i1 %18, label %34, label %19

19:                                               ; preds = %14, %29
  %20 = phi %"class.std::__1::basic_string"* [ %21, %29 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 -1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %26, %19
  %30 = icmp eq %"class.std::__1::basic_string"* %21, %12
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %14
  %35 = phi i8* [ %33, %31 ], [ %15, %14 ]
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %16, align 8
  tail call void @_ZdlPv(i8* %35) #20
  br label %36

36:                                               ; preds = %4, %34
  %37 = bitcast %"class.std::__1::__tree_node.592"* %1 to i8*
  tail call void @_ZdlPv(i8* %37) #20
  br label %38

38:                                               ; preds = %2, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE4findIS9_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.410"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.410", %"class.std::__1::__tree.410"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.592"**
  %5 = load %"class.std::__1::__tree_node.592"*, %"class.std::__1::__tree_node.592"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.592"* %5, null
  br i1 %6, label %198, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string"* %9, %11
  br label %13

13:                                               ; preds = %7, %105
  %14 = phi %"class.std::__1::__tree_end_node"* [ %107, %105 ], [ %3, %7 ]
  %15 = phi %"class.std::__1::__tree_node.592"* [ %108, %105 ], [ %5, %7 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %15, i64 0, i32 1, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br i1 %12, label %99, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %15, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  br label %21

21:                                               ; preds = %95, %18
  %22 = phi %"class.std::__1::basic_string"* [ %96, %95 ], [ %20, %18 ]
  %23 = phi %"class.std::__1::basic_string"* [ %97, %95 ], [ %9, %18 ]
  %24 = icmp eq %"class.std::__1::basic_string"* %22, %17
  br i1 %24, label %102, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp ult i64 %33, %41
  %43 = select i1 %42, i64 %33, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %68, label %45

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %49 = select i1 %37, i16* %47, i16* %48
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %23 to i16*
  %53 = select i1 %29, i16* %51, i16* %52
  br label %54

54:                                               ; preds = %63, %45
  %55 = phi i64 [ %64, %63 ], [ %43, %45 ]
  %56 = phi i16* [ %66, %63 ], [ %53, %45 ]
  %57 = phi i16* [ %65, %63 ], [ %49, %45 ]
  %58 = load i16, i16* %57, align 2
  %59 = load i16, i16* %56, align 2
  %60 = icmp ult i16 %58, %59
  br i1 %60, label %102, label %61

61:                                               ; preds = %54
  %62 = icmp ult i16 %59, %58
  br i1 %62, label %70, label %63

63:                                               ; preds = %61
  %64 = add i64 %55, -1
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = getelementptr inbounds i16, i16* %56, i64 1
  %67 = icmp eq i64 %64, 0
  br i1 %67, label %68, label %54

68:                                               ; preds = %63, %25
  %69 = icmp ult i64 %41, %33
  br i1 %69, label %102, label %70

70:                                               ; preds = %61, %68
  br i1 %44, label %94, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %23 to i16*
  %75 = select i1 %29, i16* %73, i16* %74
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i16*, i16** %76, align 8
  %78 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %79 = select i1 %37, i16* %77, i16* %78
  br label %80

80:                                               ; preds = %89, %71
  %81 = phi i64 [ %90, %89 ], [ %43, %71 ]
  %82 = phi i16* [ %92, %89 ], [ %79, %71 ]
  %83 = phi i16* [ %91, %89 ], [ %75, %71 ]
  %84 = load i16, i16* %83, align 2
  %85 = load i16, i16* %82, align 2
  %86 = icmp ult i16 %84, %85
  br i1 %86, label %99, label %87

87:                                               ; preds = %80
  %88 = icmp ult i16 %85, %84
  br i1 %88, label %95, label %89

89:                                               ; preds = %87
  %90 = add i64 %81, -1
  %91 = getelementptr inbounds i16, i16* %83, i64 1
  %92 = getelementptr inbounds i16, i16* %82, i64 1
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %94, label %80

94:                                               ; preds = %89, %70
  br i1 %42, label %99, label %95

95:                                               ; preds = %87, %94
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 1
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 1
  %98 = icmp eq %"class.std::__1::basic_string"* %97, %11
  br i1 %98, label %99, label %21

99:                                               ; preds = %94, %95, %80, %13
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %15, i64 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::__tree_node.592"* %15 to %"class.std::__1::__tree_node.592"**
  br label %105

102:                                              ; preds = %21, %68, %54
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %15, i64 0, i32 0, i32 1
  %104 = bitcast %"class.std::__1::__tree_node_base"** %103 to %"class.std::__1::__tree_node.592"**
  br label %105

105:                                              ; preds = %99, %102
  %106 = phi %"class.std::__1::__tree_node.592"** [ %104, %102 ], [ %101, %99 ]
  %107 = phi %"class.std::__1::__tree_end_node"* [ %14, %102 ], [ %100, %99 ]
  %108 = load %"class.std::__1::__tree_node.592"*, %"class.std::__1::__tree_node.592"** %106, align 8
  %109 = icmp eq %"class.std::__1::__tree_node.592"* %108, null
  br i1 %109, label %110, label %13

110:                                              ; preds = %105
  %111 = icmp eq %"class.std::__1::__tree_end_node"* %107, %3
  br i1 %111, label %198, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 4
  %114 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::basic_string"**
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 5
  %117 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"class.std::__1::basic_string"**
  %118 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %117, align 8
  %119 = icmp eq %"class.std::__1::basic_string"* %115, %118
  br i1 %119, label %198, label %120

120:                                              ; preds = %112, %194
  %121 = phi %"class.std::__1::basic_string"* [ %195, %194 ], [ %9, %112 ]
  %122 = phi %"class.std::__1::basic_string"* [ %196, %194 ], [ %115, %112 ]
  %123 = icmp eq %"class.std::__1::basic_string"* %121, %11
  br i1 %123, label %198, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = zext i8 %127 to i64
  %132 = select i1 %128, i64 %130, i64 %131
  %133 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %133, i64 0, i32 1, i32 1
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %135 to i64
  %140 = select i1 %136, i64 %138, i64 %139
  %141 = icmp ult i64 %132, %140
  %142 = select i1 %141, i64 %132, i64 %140
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %167, label %144

144:                                              ; preds = %124
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i16*, i16** %145, align 8
  %147 = bitcast %"class.std::__1::basic_string"* %121 to i16*
  %148 = select i1 %136, i16* %146, i16* %147
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i16*, i16** %149, align 8
  %151 = bitcast %"class.std::__1::basic_string"* %122 to i16*
  %152 = select i1 %128, i16* %150, i16* %151
  br label %153

153:                                              ; preds = %162, %144
  %154 = phi i64 [ %163, %162 ], [ %142, %144 ]
  %155 = phi i16* [ %165, %162 ], [ %152, %144 ]
  %156 = phi i16* [ %164, %162 ], [ %148, %144 ]
  %157 = load i16, i16* %156, align 2
  %158 = load i16, i16* %155, align 2
  %159 = icmp ult i16 %157, %158
  br i1 %159, label %198, label %160

160:                                              ; preds = %153
  %161 = icmp ult i16 %158, %157
  br i1 %161, label %169, label %162

162:                                              ; preds = %160
  %163 = add i64 %154, -1
  %164 = getelementptr inbounds i16, i16* %156, i64 1
  %165 = getelementptr inbounds i16, i16* %155, i64 1
  %166 = icmp eq i64 %163, 0
  br i1 %166, label %167, label %153

167:                                              ; preds = %162, %124
  %168 = icmp ult i64 %140, %132
  br i1 %168, label %198, label %169

169:                                              ; preds = %160, %167
  br i1 %143, label %193, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i16*, i16** %171, align 8
  %173 = bitcast %"class.std::__1::basic_string"* %122 to i16*
  %174 = select i1 %128, i16* %172, i16* %173
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i16*, i16** %175, align 8
  %177 = bitcast %"class.std::__1::basic_string"* %121 to i16*
  %178 = select i1 %136, i16* %176, i16* %177
  br label %179

179:                                              ; preds = %188, %170
  %180 = phi i64 [ %189, %188 ], [ %142, %170 ]
  %181 = phi i16* [ %191, %188 ], [ %178, %170 ]
  %182 = phi i16* [ %190, %188 ], [ %174, %170 ]
  %183 = load i16, i16* %182, align 2
  %184 = load i16, i16* %181, align 2
  %185 = icmp ult i16 %183, %184
  br i1 %185, label %198, label %186

186:                                              ; preds = %179
  %187 = icmp ult i16 %184, %183
  br i1 %187, label %194, label %188

188:                                              ; preds = %186
  %189 = add i64 %180, -1
  %190 = getelementptr inbounds i16, i16* %182, i64 1
  %191 = getelementptr inbounds i16, i16* %181, i64 1
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %193, label %179

193:                                              ; preds = %188, %169
  br i1 %141, label %198, label %194

194:                                              ; preds = %186, %193
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 1
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 1
  %197 = icmp eq %"class.std::__1::basic_string"* %196, %118
  br i1 %197, label %198, label %120

198:                                              ; preds = %120, %167, %194, %193, %153, %179, %110, %2, %112
  %199 = phi %"class.std::__1::__tree_end_node"* [ %107, %112 ], [ %3, %110 ], [ %3, %2 ], [ %107, %179 ], [ %3, %153 ], [ %3, %120 ], [ %3, %167 ], [ %107, %194 ], [ %107, %193 ]
  ret %"class.std::__1::__tree_end_node"* %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE15__insert_uniqueERKS9_(%"class.std::__1::__tree.410"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #19
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree.410"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::vector"* dereferenceable(24) %1) #19
  %6 = bitcast %"class.std::__1::__tree_node_base"** %5 to %"class.std::__1::__tree_node.592"**
  %7 = load %"class.std::__1::__tree_node.592"*, %"class.std::__1::__tree_node.592"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node.592"* %7, null
  br i1 %8, label %9, label %36

9:                                                ; preds = %2
  %10 = call i8* @_Znwm(i64 56) #20, !noalias !291
  %11 = getelementptr inbounds i8, i8* %10, i64 32
  %12 = bitcast i8* %11 to %"class.std::__1::vector"*
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector"* %12, %"class.std::__1::vector"* dereferenceable(24) %1) #19, !noalias !291
  %13 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to %"class.std::__1::__tree_node.592"*
  %16 = bitcast i8* %10 to %"class.std::__1::__tree_node_base"*
  %17 = getelementptr inbounds i8, i8* %10, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #19
  %18 = bitcast i8* %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8**
  store i8* %10, i8** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::__tree.410", %"class.std::__1::__tree.410"* %0, i64 0, i32 0
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 0, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %9
  %26 = ptrtoint %"class.std::__1::__tree_node_base"* %23 to i64
  %27 = bitcast %"class.std::__1::__tree.410"* %0 to i64*
  store i64 %26, i64* %27, align 8
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  br label %29

29:                                               ; preds = %25, %9
  %30 = phi %"class.std::__1::__tree_node_base"* [ %16, %9 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree.410", %"class.std::__1::__tree.410"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %32, %"class.std::__1::__tree_node_base"* %30) #19
  %33 = getelementptr inbounds %"class.std::__1::__tree.410", %"class.std::__1::__tree.410"* %0, i64 0, i32 2, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %33, align 8
  br label %36

36:                                               ; preds = %2, %29
  %37 = phi i8 [ 0, %2 ], [ 1, %29 ]
  %38 = phi %"class.std::__1::__tree_node.592"* [ %7, %2 ], [ %15, %29 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %38, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #19
  %40 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %39, 0
  %41 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %40, i8 %37, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree.410"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.410", %"class.std::__1::__tree.410"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.592"**
  %6 = load %"class.std::__1::__tree_node.592"*, %"class.std::__1::__tree_node.592"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.592"* %6, null
  br i1 %7, label %198, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.410", %"class.std::__1::__tree.410"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %11
  br label %15

15:                                               ; preds = %8, %194
  %16 = phi %"class.std::__1::__tree_node.592"* [ %197, %194 ], [ %6, %8 ]
  %17 = phi %"class.std::__1::__tree_node_base"** [ %196, %194 ], [ %9, %8 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %16, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %16, i64 0, i32 1, i32 0, i32 1
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %22 = icmp eq %"class.std::__1::basic_string"* %19, %21
  br i1 %22, label %107, label %23

23:                                               ; preds = %15, %97
  %24 = phi %"class.std::__1::basic_string"* [ %98, %97 ], [ %13, %15 ]
  %25 = phi %"class.std::__1::basic_string"* [ %99, %97 ], [ %19, %15 ]
  %26 = icmp eq %"class.std::__1::basic_string"* %24, %11
  br i1 %26, label %101, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %30 to i64
  %35 = select i1 %31, i64 %33, i64 %34
  %36 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i64 %41, i64 %42
  %44 = icmp ult i64 %35, %43
  %45 = select i1 %44, i64 %35, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  %51 = select i1 %39, i16* %49, i16* %50
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %25 to i16*
  %55 = select i1 %31, i16* %53, i16* %54
  br label %56

56:                                               ; preds = %65, %47
  %57 = phi i64 [ %66, %65 ], [ %45, %47 ]
  %58 = phi i16* [ %68, %65 ], [ %55, %47 ]
  %59 = phi i16* [ %67, %65 ], [ %51, %47 ]
  %60 = load i16, i16* %59, align 2
  %61 = load i16, i16* %58, align 2
  %62 = icmp ult i16 %60, %61
  br i1 %62, label %101, label %63

63:                                               ; preds = %56
  %64 = icmp ult i16 %61, %60
  br i1 %64, label %72, label %65

65:                                               ; preds = %63
  %66 = add i64 %57, -1
  %67 = getelementptr inbounds i16, i16* %59, i64 1
  %68 = getelementptr inbounds i16, i16* %58, i64 1
  %69 = icmp eq i64 %66, 0
  br i1 %69, label %70, label %56

70:                                               ; preds = %65, %27
  %71 = icmp ult i64 %43, %35
  br i1 %71, label %101, label %72

72:                                               ; preds = %63, %70
  br i1 %46, label %96, label %73

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i16*, i16** %74, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %25 to i16*
  %77 = select i1 %31, i16* %75, i16* %76
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i16*, i16** %78, align 8
  %80 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  %81 = select i1 %39, i16* %79, i16* %80
  br label %82

82:                                               ; preds = %91, %73
  %83 = phi i64 [ %92, %91 ], [ %45, %73 ]
  %84 = phi i16* [ %94, %91 ], [ %81, %73 ]
  %85 = phi i16* [ %93, %91 ], [ %77, %73 ]
  %86 = load i16, i16* %85, align 2
  %87 = load i16, i16* %84, align 2
  %88 = icmp ult i16 %86, %87
  br i1 %88, label %107, label %89

89:                                               ; preds = %82
  %90 = icmp ult i16 %87, %86
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = add i64 %83, -1
  %93 = getelementptr inbounds i16, i16* %85, i64 1
  %94 = getelementptr inbounds i16, i16* %84, i64 1
  %95 = icmp eq i64 %92, 0
  br i1 %95, label %96, label %82

96:                                               ; preds = %91, %72
  br i1 %44, label %107, label %97

97:                                               ; preds = %89, %96
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 1
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  %100 = icmp eq %"class.std::__1::basic_string"* %99, %21
  br i1 %100, label %107, label %23

101:                                              ; preds = %70, %23, %56
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %16, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %194

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %16, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %200

107:                                              ; preds = %96, %97, %82, %15
  br i1 %14, label %192, label %108

108:                                              ; preds = %107, %182
  %109 = phi %"class.std::__1::basic_string"* [ %183, %182 ], [ %19, %107 ]
  %110 = phi %"class.std::__1::basic_string"* [ %184, %182 ], [ %13, %107 ]
  %111 = icmp eq %"class.std::__1::basic_string"* %109, %21
  br i1 %111, label %186, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i64 %118, i64 %119
  %121 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %121, i64 0, i32 1, i32 1
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %123 to i64
  %128 = select i1 %124, i64 %126, i64 %127
  %129 = icmp ult i64 %120, %128
  %130 = select i1 %129, i64 %120, i64 %128
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %155, label %132

132:                                              ; preds = %112
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i16*, i16** %133, align 8
  %135 = bitcast %"class.std::__1::basic_string"* %109 to i16*
  %136 = select i1 %124, i16* %134, i16* %135
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i16*, i16** %137, align 8
  %139 = bitcast %"class.std::__1::basic_string"* %110 to i16*
  %140 = select i1 %116, i16* %138, i16* %139
  br label %141

141:                                              ; preds = %150, %132
  %142 = phi i64 [ %151, %150 ], [ %130, %132 ]
  %143 = phi i16* [ %153, %150 ], [ %140, %132 ]
  %144 = phi i16* [ %152, %150 ], [ %136, %132 ]
  %145 = load i16, i16* %144, align 2
  %146 = load i16, i16* %143, align 2
  %147 = icmp ult i16 %145, %146
  br i1 %147, label %186, label %148

148:                                              ; preds = %141
  %149 = icmp ult i16 %146, %145
  br i1 %149, label %157, label %150

150:                                              ; preds = %148
  %151 = add i64 %142, -1
  %152 = getelementptr inbounds i16, i16* %144, i64 1
  %153 = getelementptr inbounds i16, i16* %143, i64 1
  %154 = icmp eq i64 %151, 0
  br i1 %154, label %155, label %141

155:                                              ; preds = %150, %112
  %156 = icmp ult i64 %128, %120
  br i1 %156, label %186, label %157

157:                                              ; preds = %148, %155
  br i1 %131, label %181, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i16*, i16** %159, align 8
  %161 = bitcast %"class.std::__1::basic_string"* %110 to i16*
  %162 = select i1 %116, i16* %160, i16* %161
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i16*, i16** %163, align 8
  %165 = bitcast %"class.std::__1::basic_string"* %109 to i16*
  %166 = select i1 %124, i16* %164, i16* %165
  br label %167

167:                                              ; preds = %176, %158
  %168 = phi i64 [ %177, %176 ], [ %130, %158 ]
  %169 = phi i16* [ %179, %176 ], [ %166, %158 ]
  %170 = phi i16* [ %178, %176 ], [ %162, %158 ]
  %171 = load i16, i16* %170, align 2
  %172 = load i16, i16* %169, align 2
  %173 = icmp ult i16 %171, %172
  br i1 %173, label %192, label %174

174:                                              ; preds = %167
  %175 = icmp ult i16 %172, %171
  br i1 %175, label %182, label %176

176:                                              ; preds = %174
  %177 = add i64 %168, -1
  %178 = getelementptr inbounds i16, i16* %170, i64 1
  %179 = getelementptr inbounds i16, i16* %169, i64 1
  %180 = icmp eq i64 %177, 0
  br i1 %180, label %181, label %167

181:                                              ; preds = %176, %157
  br i1 %129, label %192, label %182

182:                                              ; preds = %174, %181
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 1
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 1
  %185 = icmp eq %"class.std::__1::basic_string"* %184, %11
  br i1 %185, label %192, label %108

186:                                              ; preds = %155, %108, %141
  %187 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %16, i64 0, i32 0, i32 1
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %194

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %16, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %191, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %200

192:                                              ; preds = %107, %181, %182, %167
  %193 = getelementptr inbounds %"class.std::__1::__tree_node.592", %"class.std::__1::__tree_node.592"* %16, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %193, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %200

194:                                              ; preds = %186, %101
  %195 = phi %"class.std::__1::__tree_node_base"* [ %103, %101 ], [ %188, %186 ]
  %196 = phi %"class.std::__1::__tree_node_base"** [ %102, %101 ], [ %187, %186 ]
  %197 = bitcast %"class.std::__1::__tree_node_base"* %195 to %"class.std::__1::__tree_node.592"*
  br label %15

198:                                              ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %200

200:                                              ; preds = %198, %192, %190, %105
  %201 = phi %"class.std::__1::__tree_node_base"** [ %102, %105 ], [ %187, %190 ], [ %17, %192 ], [ %199, %198 ]
  ret %"class.std::__1::__tree_node_base"** %201
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__partial_sortIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_SA_T_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %struct.ScoredHistoryMatch, align 8
  %6 = alloca %struct.ScoredHistoryMatch, align 8
  %7 = ptrtoint %struct.ScoredHistoryMatch* %0 to i64
  %8 = ptrtoint %struct.ScoredHistoryMatch* %1 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 248
  %11 = icmp sgt i64 %9, 248
  br i1 %11, label %12, label %20

12:                                               ; preds = %4
  %13 = add nsw i64 %10, -2
  %14 = sdiv i64 %13, 2
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi i64 [ %18, %15 ], [ %14, %12 ]
  %17 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 %16
  tail call void @_ZNSt3__111__sift_downIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %1, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %3, i64 %10, %struct.ScoredHistoryMatch* %17) #19
  %18 = add nsw i64 %16, -1
  %19 = icmp sgt i64 %16, 0
  br i1 %19, label %15, label %20

20:                                               ; preds = %15, %4
  %21 = icmp eq %struct.ScoredHistoryMatch* %1, %2
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = bitcast %struct.ScoredHistoryMatch* %6 to i8*
  br label %39

24:                                               ; preds = %46, %20
  br i1 %11, label %25, label %38

25:                                               ; preds = %24
  %26 = udiv exact i64 %9, 248
  %27 = bitcast %struct.ScoredHistoryMatch* %5 to i8*
  br label %28

28:                                               ; preds = %32, %25
  %29 = phi i64 [ %36, %32 ], [ %26, %25 ]
  %30 = phi %struct.ScoredHistoryMatch* [ %33, %32 ], [ %1, %25 ]
  %31 = icmp sgt i64 %29, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %30, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %27) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %5, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %34 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %33) #19
  %35 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %33, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %5) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %27) #19
  %36 = add nsw i64 %29, -1
  call void @_ZNSt3__111__sift_downIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %33, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %3, i64 %36, %struct.ScoredHistoryMatch* %0) #19
  %37 = icmp sgt i64 %36, 1
  br i1 %37, label %28, label %38

38:                                               ; preds = %28, %32, %24
  ret void

39:                                               ; preds = %22, %46
  %40 = phi %struct.ScoredHistoryMatch* [ %1, %22 ], [ %47, %46 ]
  %41 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %3, align 8
  %42 = call zeroext i1 %41(%struct.ScoredHistoryMatch* dereferenceable(248) %40, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %23) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %6, %struct.ScoredHistoryMatch* dereferenceable(248) %40) #19
  %44 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %40, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %45 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %6) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %23) #19
  call void @_ZNSt3__111__sift_downIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %1, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %3, i64 %10, %struct.ScoredHistoryMatch* %0)
  br label %46

46:                                               ; preds = %39, %43
  %47 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %40, i64 1
  %48 = icmp eq %struct.ScoredHistoryMatch* %47, %2
  br i1 %48, label %24, label %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__111__sift_downIRPFbRK18ScoredHistoryMatchS3_ENS_11__wrap_iterIPS1_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8), i64, %struct.ScoredHistoryMatch*) local_unnamed_addr #0 comdat {
  %6 = alloca %struct.ScoredHistoryMatch, align 8
  %7 = ptrtoint %struct.ScoredHistoryMatch* %0 to i64
  %8 = ptrtoint %struct.ScoredHistoryMatch* %4 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 248
  %11 = icmp slt i64 %3, 2
  br i1 %11, label %69, label %12

12:                                               ; preds = %5
  %13 = add nsw i64 %3, -2
  %14 = sdiv i64 %13, 2
  %15 = icmp slt i64 %14, %10
  br i1 %15, label %69, label %16

16:                                               ; preds = %12
  %17 = shl nsw i64 %10, 1
  %18 = or i64 %17, 1
  %19 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 %18
  %20 = ptrtoint %struct.ScoredHistoryMatch* %19 to i64
  %21 = add nsw i64 %18, 1
  %22 = icmp slt i64 %21, %3
  br i1 %22, label %23, label %30

23:                                               ; preds = %16
  %24 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %25 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %19, i64 1
  %26 = tail call zeroext i1 %24(%struct.ScoredHistoryMatch* dereferenceable(248) %19, %struct.ScoredHistoryMatch* dereferenceable(248) %25) #19
  %27 = ptrtoint %struct.ScoredHistoryMatch* %25 to i64
  %28 = select i1 %26, i64 %27, i64 %20
  %29 = select i1 %26, i64 %21, i64 %18
  br label %30

30:                                               ; preds = %23, %16
  %31 = phi i64 [ %20, %16 ], [ %28, %23 ]
  %32 = phi i64 [ %18, %16 ], [ %29, %23 ]
  %33 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %34 = inttoptr i64 %31 to %struct.ScoredHistoryMatch*
  %35 = tail call zeroext i1 %33(%struct.ScoredHistoryMatch* dereferenceable(248) %34, %struct.ScoredHistoryMatch* dereferenceable(248) %4) #19
  br i1 %35, label %69, label %36

36:                                               ; preds = %30
  %37 = bitcast %struct.ScoredHistoryMatch* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %37) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 248, i1 false)
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %6, %struct.ScoredHistoryMatch* dereferenceable(248) %4) #19
  br label %38

38:                                               ; preds = %60, %36
  %39 = phi i64 [ %31, %36 ], [ %61, %60 ]
  %40 = phi i64 [ %8, %36 ], [ %39, %60 ]
  %41 = phi i64 [ %32, %36 ], [ %62, %60 ]
  %42 = inttoptr i64 %39 to %struct.ScoredHistoryMatch*
  %43 = inttoptr i64 %40 to %struct.ScoredHistoryMatch*
  %44 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %43, %struct.ScoredHistoryMatch* dereferenceable(248) %42) #19
  %45 = icmp slt i64 %14, %41
  br i1 %45, label %66, label %46

46:                                               ; preds = %38
  %47 = shl nsw i64 %41, 1
  %48 = or i64 %47, 1
  %49 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 %48
  %50 = ptrtoint %struct.ScoredHistoryMatch* %49 to i64
  %51 = add nsw i64 %48, 1
  %52 = icmp slt i64 %51, %3
  br i1 %52, label %53, label %60

53:                                               ; preds = %46
  %54 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %55 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %49, i64 1
  %56 = call zeroext i1 %54(%struct.ScoredHistoryMatch* dereferenceable(248) %49, %struct.ScoredHistoryMatch* dereferenceable(248) %55) #19
  %57 = ptrtoint %struct.ScoredHistoryMatch* %55 to i64
  %58 = select i1 %56, i64 %57, i64 %50
  %59 = select i1 %56, i64 %51, i64 %48
  br label %60

60:                                               ; preds = %53, %46
  %61 = phi i64 [ %50, %46 ], [ %58, %53 ]
  %62 = phi i64 [ %48, %46 ], [ %59, %53 ]
  %63 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %64 = inttoptr i64 %61 to %struct.ScoredHistoryMatch*
  %65 = call zeroext i1 %63(%struct.ScoredHistoryMatch* dereferenceable(248) %64, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %6) #19
  br i1 %65, label %66, label %38

66:                                               ; preds = %60, %38
  %67 = inttoptr i64 %39 to %struct.ScoredHistoryMatch*
  %68 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %67, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %6) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %37) #19
  br label %69

69:                                               ; preds = %66, %30, %5, %12
  ret void
}

declare void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch* dereferenceable(248)) unnamed_addr #1

declare dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch* dereferenceable(248)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI18ScoredHistoryMatchNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.395"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.ScoredHistoryMatch** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.ScoredHistoryMatch** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 248
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.ScoredHistoryMatch*
  %14 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %struct.ScoredHistoryMatch* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %struct.ScoredHistoryMatch* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN18ScoredHistoryMatchC1Ev(%struct.ScoredHistoryMatch* %19) #19
  %20 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %19, i64 1
  %21 = icmp eq %struct.ScoredHistoryMatch* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %90

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector.395"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = sdiv exact i64 %27, 248
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 74382032555280450
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector.395"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #21
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = sdiv exact i64 %34, 248
  %36 = icmp ult i64 %35, 37191016277640225
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %33, %37
  %43 = phi i64 [ %40, %37 ], [ 74382032555280450, %33 ]
  %44 = mul i64 %43, 248
  %45 = tail call i8* @_Znwm(i64 %44) #20
  %46 = bitcast i8* %45 to %struct.ScoredHistoryMatch*
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %struct.ScoredHistoryMatch* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %49, i64 %28
  %51 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %49, i64 %48
  %52 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %50, i64 %1
  br label %53

53:                                               ; preds = %47, %53
  %54 = phi %struct.ScoredHistoryMatch* [ %55, %53 ], [ %50, %47 ]
  tail call void @_ZN18ScoredHistoryMatchC1Ev(%struct.ScoredHistoryMatch* %54) #19
  %55 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %54, i64 1
  %56 = icmp eq %struct.ScoredHistoryMatch* %52, %55
  br i1 %56, label %57, label %53

57:                                               ; preds = %53
  %58 = ptrtoint %struct.ScoredHistoryMatch* %51 to i64
  %59 = ptrtoint %struct.ScoredHistoryMatch* %52 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 0
  %61 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %60, align 8
  %62 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %6, align 8
  %63 = icmp eq %struct.ScoredHistoryMatch* %62, %61
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = ptrtoint %struct.ScoredHistoryMatch* %61 to i64
  br label %75

66:                                               ; preds = %57, %66
  %67 = phi %struct.ScoredHistoryMatch* [ %69, %66 ], [ %50, %57 ]
  %68 = phi %struct.ScoredHistoryMatch* [ %70, %66 ], [ %62, %57 ]
  %69 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %67, i64 -1
  %70 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %68, i64 -1
  tail call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* %69, %struct.ScoredHistoryMatch* dereferenceable(248) %70) #19
  %71 = icmp eq %struct.ScoredHistoryMatch* %70, %61
  br i1 %71, label %72, label %66

72:                                               ; preds = %66
  %73 = load i64, i64* %25, align 8
  %74 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %6, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %struct.ScoredHistoryMatch* [ %61, %64 ], [ %74, %72 ]
  %77 = phi %struct.ScoredHistoryMatch* [ %50, %64 ], [ %69, %72 ]
  %78 = phi i64 [ %65, %64 ], [ %73, %72 ]
  %79 = ptrtoint %struct.ScoredHistoryMatch* %77 to i64
  store i64 %79, i64* %25, align 8
  store i64 %59, i64* %7, align 8
  store i64 %58, i64* %4, align 8
  %80 = inttoptr i64 %78 to %struct.ScoredHistoryMatch*
  %81 = icmp eq %struct.ScoredHistoryMatch* %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %75, %82
  %83 = phi %struct.ScoredHistoryMatch* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %83, i64 -1
  tail call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* %84) #19
  %85 = icmp eq %struct.ScoredHistoryMatch* %84, %80
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %75
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %78 to i8*
  tail call void @_ZdlPv(i8* %89) #20
  br label %90

90:                                               ; preds = %88, %86, %22
  ret void
}

declare void @_ZN18ScoredHistoryMatchC1Ev(%struct.ScoredHistoryMatch*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.437"*, %"class.std::__1::__tree_node.604"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.604"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.604"* %1 to %"class.std::__1::__tree_node.604"**
  %6 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %5, align 8
  tail call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.437"* %0, %"class.std::__1::__tree_node.604"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.604", %"class.std::__1::__tree_node.604"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.604"**
  %9 = load %"class.std::__1::__tree_node.604"*, %"class.std::__1::__tree_node.604"** %8, align 8
  tail call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.437"* %0, %"class.std::__1::__tree_node.604"* %9) #19
  %10 = bitcast %"class.std::__1::__tree_node.604"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #20
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.ScoredHistoryMatch, align 8
  %5 = alloca %struct.ScoredHistoryMatch, align 8
  %6 = alloca %struct.ScoredHistoryMatch, align 8
  %7 = alloca %struct.ScoredHistoryMatch, align 8
  %8 = alloca %struct.ScoredHistoryMatch, align 8
  %9 = alloca %struct.ScoredHistoryMatch, align 8
  %10 = bitcast %struct.ScoredHistoryMatch* %6 to i8*
  %11 = bitcast %struct.ScoredHistoryMatch* %8 to i8*
  %12 = bitcast %struct.ScoredHistoryMatch* %7 to i8*
  %13 = bitcast %struct.ScoredHistoryMatch* %5 to i8*
  %14 = bitcast %struct.ScoredHistoryMatch* %4 to i8*
  br label %15

15:                                               ; preds = %167, %3
  %16 = phi %struct.ScoredHistoryMatch* [ %1, %3 ], [ %150, %167 ]
  %17 = phi %struct.ScoredHistoryMatch* [ %0, %3 ], [ %24, %167 ]
  %18 = ptrtoint %struct.ScoredHistoryMatch* %16 to i64
  %19 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %16, i64 -1
  %20 = ptrtoint %struct.ScoredHistoryMatch* %16 to i64
  br label %21

21:                                               ; preds = %178, %15
  %22 = phi %struct.ScoredHistoryMatch* [ %17, %15 ], [ %179, %178 ]
  br label %23

23:                                               ; preds = %106, %21
  %24 = phi %struct.ScoredHistoryMatch* [ %22, %21 ], [ %97, %106 ]
  %25 = ptrtoint %struct.ScoredHistoryMatch* %24 to i64
  %26 = sub i64 %18, %25
  %27 = sdiv exact i64 %26, 248
  switch i64 %27, label %51 [
    i64 0, label %182
    i64 1, label %182
    i64 2, label %28
    i64 3, label %36
    i64 4, label %40
    i64 5, label %45
  ]

28:                                               ; preds = %23
  %29 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %30 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %16, i64 -1
  %31 = call zeroext i1 %29(%struct.ScoredHistoryMatch* dereferenceable(248) %30, %struct.ScoredHistoryMatch* dereferenceable(248) %24) #19
  br i1 %31, label %32, label %182

32:                                               ; preds = %28
  %33 = bitcast %struct.ScoredHistoryMatch* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %33) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %9, %struct.ScoredHistoryMatch* dereferenceable(248) %24) #19
  %34 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* dereferenceable(248) %30) #19
  %35 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %30, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %9) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %33) #19
  br label %182

36:                                               ; preds = %23
  %37 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 1
  %38 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %16, i64 -1
  %39 = call i32 @_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %37, %struct.ScoredHistoryMatch* %38, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %182

40:                                               ; preds = %23
  %41 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 1
  %42 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 2
  %43 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %16, i64 -1
  %44 = call i32 @_ZNSt3__17__sort4IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %41, %struct.ScoredHistoryMatch* %42, %struct.ScoredHistoryMatch* %43, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %182

45:                                               ; preds = %23
  %46 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 1
  %47 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 2
  %48 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 3
  %49 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %16, i64 -1
  %50 = call i32 @_ZNSt3__17__sort5IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %46, %struct.ScoredHistoryMatch* %47, %struct.ScoredHistoryMatch* %48, %struct.ScoredHistoryMatch* %49, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %182

51:                                               ; preds = %23
  %52 = icmp slt i64 %26, 1736
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  call void @_ZNSt3__118__insertion_sort_3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %16, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %182

54:                                               ; preds = %51
  %55 = icmp sgt i64 %26, 247752
  %56 = udiv i64 %26, 496
  %57 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 %56
  br i1 %55, label %58, label %63

58:                                               ; preds = %54
  %59 = udiv i64 %26, 992
  %60 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 %59
  %61 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %57, i64 %59
  %62 = call i32 @_ZNSt3__17__sort5IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %60, %struct.ScoredHistoryMatch* %57, %struct.ScoredHistoryMatch* %61, %struct.ScoredHistoryMatch* %19, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %65

63:                                               ; preds = %54
  %64 = call i32 @_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %57, %struct.ScoredHistoryMatch* %19, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %65

65:                                               ; preds = %63, %58
  %66 = phi i32 [ %62, %58 ], [ %64, %63 ]
  %67 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %68 = call zeroext i1 %67(%struct.ScoredHistoryMatch* dereferenceable(248) %24, %struct.ScoredHistoryMatch* dereferenceable(248) %57) #19
  br i1 %68, label %118, label %69

69:                                               ; preds = %65, %111
  %70 = phi %struct.ScoredHistoryMatch* [ %71, %111 ], [ %19, %65 ]
  %71 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %70, i64 -1
  %72 = icmp eq %struct.ScoredHistoryMatch* %24, %71
  br i1 %72, label %73, label %111

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 1
  %75 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %76 = call zeroext i1 %75(%struct.ScoredHistoryMatch* dereferenceable(248) %24, %struct.ScoredHistoryMatch* dereferenceable(248) %19) #19
  br i1 %76, label %90, label %77

77:                                               ; preds = %73
  %78 = icmp eq %struct.ScoredHistoryMatch* %74, %19
  br i1 %78, label %182, label %79

79:                                               ; preds = %77, %87
  %80 = phi %struct.ScoredHistoryMatch* [ %88, %87 ], [ %74, %77 ]
  %81 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %82 = call zeroext i1 %81(%struct.ScoredHistoryMatch* dereferenceable(248) %24, %struct.ScoredHistoryMatch* dereferenceable(248) %80) #19
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %11) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %8, %struct.ScoredHistoryMatch* dereferenceable(248) %80) #19
  %84 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %80, %struct.ScoredHistoryMatch* dereferenceable(248) %19) #19
  %85 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %19, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %8) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %11) #19
  %86 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %80, i64 1
  br label %90

87:                                               ; preds = %79
  %88 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %80, i64 1
  %89 = icmp eq %struct.ScoredHistoryMatch* %88, %19
  br i1 %89, label %182, label %79

90:                                               ; preds = %83, %73
  %91 = phi %struct.ScoredHistoryMatch* [ %74, %73 ], [ %86, %83 ]
  %92 = icmp eq %struct.ScoredHistoryMatch* %91, %19
  br i1 %92, label %182, label %93

93:                                               ; preds = %90, %108
  %94 = phi %struct.ScoredHistoryMatch* [ %100, %108 ], [ %91, %90 ]
  %95 = phi %struct.ScoredHistoryMatch* [ %104, %108 ], [ %19, %90 ]
  br label %96

96:                                               ; preds = %96, %93
  %97 = phi %struct.ScoredHistoryMatch* [ %94, %93 ], [ %100, %96 ]
  %98 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %99 = call zeroext i1 %98(%struct.ScoredHistoryMatch* dereferenceable(248) %24, %struct.ScoredHistoryMatch* dereferenceable(248) %97) #19
  %100 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %97, i64 1
  br i1 %99, label %101, label %96

101:                                              ; preds = %96, %101
  %102 = phi %struct.ScoredHistoryMatch* [ %104, %101 ], [ %95, %96 ]
  %103 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %104 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %102, i64 -1
  %105 = call zeroext i1 %103(%struct.ScoredHistoryMatch* dereferenceable(248) %24, %struct.ScoredHistoryMatch* dereferenceable(248) %104) #19
  br i1 %105, label %101, label %106

106:                                              ; preds = %101
  %107 = icmp ult %struct.ScoredHistoryMatch* %97, %104
  br i1 %107, label %108, label %23

108:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %12) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %7, %struct.ScoredHistoryMatch* dereferenceable(248) %97) #19
  %109 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %97, %struct.ScoredHistoryMatch* dereferenceable(248) %104) #19
  %110 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %104, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %7) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %12) #19
  br label %93

111:                                              ; preds = %69
  %112 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %113 = call zeroext i1 %112(%struct.ScoredHistoryMatch* dereferenceable(248) %71, %struct.ScoredHistoryMatch* dereferenceable(248) %57) #19
  br i1 %113, label %114, label %69

114:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %10) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %6, %struct.ScoredHistoryMatch* dereferenceable(248) %24) #19
  %115 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* dereferenceable(248) %71) #19
  %116 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %71, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %6) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %10) #19
  %117 = add i32 %66, 1
  br label %118

118:                                              ; preds = %65, %114
  %119 = phi i32 [ %117, %114 ], [ %66, %65 ]
  %120 = phi %struct.ScoredHistoryMatch* [ %71, %114 ], [ %19, %65 ]
  %121 = ptrtoint %struct.ScoredHistoryMatch* %24 to i64
  %122 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %24, i64 1
  %123 = icmp ult %struct.ScoredHistoryMatch* %122, %120
  br i1 %123, label %124, label %147

124:                                              ; preds = %118, %141
  %125 = phi %struct.ScoredHistoryMatch* [ %146, %141 ], [ %57, %118 ]
  %126 = phi i32 [ %144, %141 ], [ %119, %118 ]
  %127 = phi %struct.ScoredHistoryMatch* [ %133, %141 ], [ %122, %118 ]
  %128 = phi %struct.ScoredHistoryMatch* [ %137, %141 ], [ %120, %118 ]
  br label %129

129:                                              ; preds = %129, %124
  %130 = phi %struct.ScoredHistoryMatch* [ %127, %124 ], [ %133, %129 ]
  %131 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %132 = call zeroext i1 %131(%struct.ScoredHistoryMatch* dereferenceable(248) %130, %struct.ScoredHistoryMatch* dereferenceable(248) %125) #19
  %133 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %130, i64 1
  br i1 %132, label %129, label %134

134:                                              ; preds = %129, %134
  %135 = phi %struct.ScoredHistoryMatch* [ %137, %134 ], [ %128, %129 ]
  %136 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %137 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %135, i64 -1
  %138 = call zeroext i1 %136(%struct.ScoredHistoryMatch* dereferenceable(248) %137, %struct.ScoredHistoryMatch* dereferenceable(248) %125) #19
  br i1 %138, label %139, label %134

139:                                              ; preds = %134
  %140 = icmp ugt %struct.ScoredHistoryMatch* %130, %137
  br i1 %140, label %147, label %141

141:                                              ; preds = %139
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %13) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %5, %struct.ScoredHistoryMatch* dereferenceable(248) %130) #19
  %142 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %130, %struct.ScoredHistoryMatch* dereferenceable(248) %137) #19
  %143 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %137, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %5) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %13) #19
  %144 = add i32 %126, 1
  %145 = icmp eq %struct.ScoredHistoryMatch* %125, %130
  %146 = select i1 %145, %struct.ScoredHistoryMatch* %137, %struct.ScoredHistoryMatch* %125
  br label %124

147:                                              ; preds = %139, %118
  %148 = phi %struct.ScoredHistoryMatch* [ %57, %118 ], [ %125, %139 ]
  %149 = phi i32 [ %119, %118 ], [ %126, %139 ]
  %150 = phi %struct.ScoredHistoryMatch* [ %122, %118 ], [ %130, %139 ]
  %151 = icmp eq %struct.ScoredHistoryMatch* %150, %148
  br i1 %151, label %159, label %152

152:                                              ; preds = %147
  %153 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %154 = call zeroext i1 %153(%struct.ScoredHistoryMatch* dereferenceable(248) %148, %struct.ScoredHistoryMatch* dereferenceable(248) %150) #19
  br i1 %154, label %155, label %159

155:                                              ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %14) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %4, %struct.ScoredHistoryMatch* dereferenceable(248) %150) #19
  %156 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %150, %struct.ScoredHistoryMatch* dereferenceable(248) %148) #19
  %157 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %148, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %4) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %14) #19
  %158 = add i32 %149, 1
  br label %159

159:                                              ; preds = %147, %155, %152
  %160 = phi i32 [ %158, %155 ], [ %149, %152 ], [ %149, %147 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %169

162:                                              ; preds = %159
  %163 = call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRK18ScoredHistoryMatchS3_EPS1_EEbT0_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %150, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  %164 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %150, i64 1
  %165 = call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRK18ScoredHistoryMatchS3_EPS1_EEbT0_S8_T_(%struct.ScoredHistoryMatch* %164, %struct.ScoredHistoryMatch* %16, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  br i1 %163, label %182, label %167

167:                                              ; preds = %166, %180
  br label %15

168:                                              ; preds = %162
  br i1 %163, label %178, label %169

169:                                              ; preds = %168, %159
  %170 = ptrtoint %struct.ScoredHistoryMatch* %150 to i64
  %171 = sub i64 %170, %121
  %172 = sdiv exact i64 %171, 248
  %173 = sub i64 %20, %170
  %174 = sdiv exact i64 %173, 248
  %175 = icmp slt i64 %172, %174
  br i1 %175, label %176, label %180

176:                                              ; preds = %169
  call void @_ZNSt3__16__sortIRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_(%struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %150, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  %177 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %150, i64 1
  br label %178

178:                                              ; preds = %176, %168
  %179 = phi %struct.ScoredHistoryMatch* [ %164, %168 ], [ %177, %176 ]
  br label %21

180:                                              ; preds = %169
  %181 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %150, i64 1
  call void @_ZNSt3__16__sortIRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_(%struct.ScoredHistoryMatch* %181, %struct.ScoredHistoryMatch* %16, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %167

182:                                              ; preds = %166, %90, %23, %23, %77, %87, %28, %32, %36, %40, %45, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %struct.ScoredHistoryMatch, align 8
  %6 = alloca %struct.ScoredHistoryMatch, align 8
  %7 = alloca %struct.ScoredHistoryMatch, align 8
  %8 = alloca %struct.ScoredHistoryMatch, align 8
  %9 = alloca %struct.ScoredHistoryMatch, align 8
  %10 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %3, align 8
  %11 = tail call zeroext i1 %10(%struct.ScoredHistoryMatch* dereferenceable(248) %1, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %12 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %3, align 8
  %13 = tail call zeroext i1 %12(%struct.ScoredHistoryMatch* dereferenceable(248) %2, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  br i1 %11, label %25, label %14

14:                                               ; preds = %4
  br i1 %13, label %15, label %40

15:                                               ; preds = %14
  %16 = bitcast %struct.ScoredHistoryMatch* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %16) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %9, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %17 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  %18 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %9) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %16) #19
  %19 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %3, align 8
  %20 = call zeroext i1 %19(%struct.ScoredHistoryMatch* dereferenceable(248) %1, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  br i1 %20, label %21, label %40

21:                                               ; preds = %15
  %22 = bitcast %struct.ScoredHistoryMatch* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %22) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %8, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %23 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %24 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %8) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %22) #19
  br label %40

25:                                               ; preds = %4
  br i1 %13, label %26, label %30

26:                                               ; preds = %25
  %27 = bitcast %struct.ScoredHistoryMatch* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %27) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %7, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %28 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  %29 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %7) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %27) #19
  br label %40

30:                                               ; preds = %25
  %31 = bitcast %struct.ScoredHistoryMatch* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %31) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %6, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %32 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %33 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %6) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %31) #19
  %34 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %3, align 8
  %35 = call zeroext i1 %34(%struct.ScoredHistoryMatch* dereferenceable(248) %2, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = bitcast %struct.ScoredHistoryMatch* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %37) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %5, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %38 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  %39 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %5) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %37) #19
  br label %40

40:                                               ; preds = %30, %36, %15, %21, %14, %26
  %41 = phi i32 [ 1, %26 ], [ 0, %14 ], [ 2, %21 ], [ 1, %15 ], [ 2, %36 ], [ 1, %30 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = alloca %struct.ScoredHistoryMatch, align 8
  %7 = alloca %struct.ScoredHistoryMatch, align 8
  %8 = alloca %struct.ScoredHistoryMatch, align 8
  %9 = tail call i32 @_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* %2, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %4)
  %10 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %4, align 8
  %11 = tail call zeroext i1 %10(%struct.ScoredHistoryMatch* dereferenceable(248) %3, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  br i1 %11, label %12, label %31

12:                                               ; preds = %5
  %13 = bitcast %struct.ScoredHistoryMatch* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %13) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %8, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  %14 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* dereferenceable(248) %3) #19
  %15 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %3, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %8) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %13) #19
  %16 = add i32 %9, 1
  %17 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %4, align 8
  %18 = call zeroext i1 %17(%struct.ScoredHistoryMatch* dereferenceable(248) %2, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = bitcast %struct.ScoredHistoryMatch* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %20) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %7, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %21 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  %22 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %7) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %20) #19
  %23 = add i32 %9, 2
  %24 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %4, align 8
  %25 = call zeroext i1 %24(%struct.ScoredHistoryMatch* dereferenceable(248) %1, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = bitcast %struct.ScoredHistoryMatch* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %27) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %6, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %28 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %29 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %6) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %27) #19
  %30 = add i32 %9, 3
  br label %31

31:                                               ; preds = %12, %26, %19, %5
  %32 = phi i32 [ %30, %26 ], [ %23, %19 ], [ %16, %12 ], [ %9, %5 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_S8_T_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = alloca %struct.ScoredHistoryMatch, align 8
  %8 = alloca %struct.ScoredHistoryMatch, align 8
  %9 = alloca %struct.ScoredHistoryMatch, align 8
  %10 = alloca %struct.ScoredHistoryMatch, align 8
  %11 = tail call i32 @_ZNSt3__17__sort4IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* %3, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %5)
  %12 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %5, align 8
  %13 = tail call zeroext i1 %12(%struct.ScoredHistoryMatch* dereferenceable(248) %4, %struct.ScoredHistoryMatch* dereferenceable(248) %3) #19
  br i1 %13, label %14, label %40

14:                                               ; preds = %6
  %15 = bitcast %struct.ScoredHistoryMatch* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %15) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %10, %struct.ScoredHistoryMatch* dereferenceable(248) %3) #19
  %16 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %3, %struct.ScoredHistoryMatch* dereferenceable(248) %4) #19
  %17 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %4, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %10) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %15) #19
  %18 = add i32 %11, 1
  %19 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %5, align 8
  %20 = call zeroext i1 %19(%struct.ScoredHistoryMatch* dereferenceable(248) %3, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  br i1 %20, label %21, label %40

21:                                               ; preds = %14
  %22 = bitcast %struct.ScoredHistoryMatch* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %22) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %9, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  %23 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* dereferenceable(248) %3) #19
  %24 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %3, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %9) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %22) #19
  %25 = add i32 %11, 2
  %26 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %5, align 8
  %27 = call zeroext i1 %26(%struct.ScoredHistoryMatch* dereferenceable(248) %2, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  br i1 %27, label %28, label %40

28:                                               ; preds = %21
  %29 = bitcast %struct.ScoredHistoryMatch* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %29) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %8, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %30 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* dereferenceable(248) %2) #19
  %31 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %2, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %8) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %29) #19
  %32 = add i32 %11, 3
  %33 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %5, align 8
  %34 = call zeroext i1 %33(%struct.ScoredHistoryMatch* dereferenceable(248) %1, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  br i1 %34, label %35, label %40

35:                                               ; preds = %28
  %36 = bitcast %struct.ScoredHistoryMatch* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %36) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %7, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %37 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %38 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %1, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %7) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %36) #19
  %39 = add i32 %11, 4
  br label %40

40:                                               ; preds = %14, %28, %35, %21, %6
  %41 = phi i32 [ %39, %35 ], [ %32, %28 ], [ %25, %21 ], [ %18, %14 ], [ %11, %6 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEvT0_S8_T_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.ScoredHistoryMatch, align 8
  %5 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 2
  %6 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 1
  %7 = tail call i32 @_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %6, %struct.ScoredHistoryMatch* %5, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  %8 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 3
  %9 = icmp eq %struct.ScoredHistoryMatch* %8, %1
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = bitcast %struct.ScoredHistoryMatch* %4 to i8*
  br label %13

12:                                               ; preds = %31, %3
  ret void

13:                                               ; preds = %10, %31
  %14 = phi %struct.ScoredHistoryMatch* [ %8, %10 ], [ %32, %31 ]
  %15 = phi %struct.ScoredHistoryMatch* [ %5, %10 ], [ %14, %31 ]
  %16 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %17 = call zeroext i1 %16(%struct.ScoredHistoryMatch* dereferenceable(248) %14, %struct.ScoredHistoryMatch* dereferenceable(248) %15) #19
  br i1 %17, label %18, label %31

18:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %11) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 248, i1 false)
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %4, %struct.ScoredHistoryMatch* dereferenceable(248) %14) #19
  br label %19

19:                                               ; preds = %24, %18
  %20 = phi %struct.ScoredHistoryMatch* [ %14, %18 ], [ %21, %24 ]
  %21 = phi %struct.ScoredHistoryMatch* [ %15, %18 ], [ %26, %24 ]
  %22 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %20, %struct.ScoredHistoryMatch* dereferenceable(248) %21) #19
  %23 = icmp eq %struct.ScoredHistoryMatch* %21, %0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %26 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %21, i64 -1
  %27 = call zeroext i1 %25(%struct.ScoredHistoryMatch* nonnull dereferenceable(248) %4, %struct.ScoredHistoryMatch* dereferenceable(248) %26) #19
  br i1 %27, label %19, label %28

28:                                               ; preds = %19, %24
  %29 = phi %struct.ScoredHistoryMatch* [ %0, %19 ], [ %21, %24 ]
  %30 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %29, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %4) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %11) #19
  br label %31

31:                                               ; preds = %28, %13
  %32 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %14, i64 1
  %33 = icmp eq %struct.ScoredHistoryMatch* %32, %1
  br i1 %33, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRK18ScoredHistoryMatchS3_EPS1_EEbT0_S8_T_(%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.ScoredHistoryMatch, align 8
  %5 = alloca %struct.ScoredHistoryMatch, align 8
  %6 = ptrtoint %struct.ScoredHistoryMatch* %1 to i64
  %7 = ptrtoint %struct.ScoredHistoryMatch* %0 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 248
  switch i64 %9, label %33 [
    i64 0, label %69
    i64 1, label %69
    i64 2, label %10
    i64 3, label %18
    i64 4, label %22
    i64 5, label %27
  ]

10:                                               ; preds = %3
  %11 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %12 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %1, i64 -1
  %13 = tail call zeroext i1 %11(%struct.ScoredHistoryMatch* dereferenceable(248) %12, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  br i1 %13, label %14, label %69

14:                                               ; preds = %10
  %15 = bitcast %struct.ScoredHistoryMatch* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %15) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 248, i1 false) #19
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %4, %struct.ScoredHistoryMatch* dereferenceable(248) %0) #19
  %16 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* dereferenceable(248) %12) #19
  %17 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %12, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %4) #19
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %15) #19
  br label %69

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 1
  %20 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %1, i64 -1
  %21 = tail call i32 @_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %19, %struct.ScoredHistoryMatch* %20, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %69

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 1
  %24 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 2
  %25 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %1, i64 -1
  %26 = tail call i32 @_ZNSt3__17__sort4IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %23, %struct.ScoredHistoryMatch* %24, %struct.ScoredHistoryMatch* %25, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %69

27:                                               ; preds = %3
  %28 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 1
  %29 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 2
  %30 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 3
  %31 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %1, i64 -1
  %32 = tail call i32 @_ZNSt3__17__sort5IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_S8_S8_T_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %28, %struct.ScoredHistoryMatch* %29, %struct.ScoredHistoryMatch* %30, %struct.ScoredHistoryMatch* %31, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  br label %69

33:                                               ; preds = %3
  %34 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 2
  %35 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 1
  %36 = tail call i32 @_ZNSt3__17__sort3IRPFbRK18ScoredHistoryMatchS3_EPS1_EEjT0_S8_S8_T_(%struct.ScoredHistoryMatch* %0, %struct.ScoredHistoryMatch* %35, %struct.ScoredHistoryMatch* %34, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** dereferenceable(8) %2)
  %37 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %0, i64 3
  %38 = icmp eq %struct.ScoredHistoryMatch* %37, %1
  br i1 %38, label %69, label %39

39:                                               ; preds = %33
  %40 = bitcast %struct.ScoredHistoryMatch* %5 to i8*
  br label %41

41:                                               ; preds = %39, %62
  %42 = phi %struct.ScoredHistoryMatch* [ %37, %39 ], [ %64, %62 ]
  %43 = phi i32 [ 0, %39 ], [ %63, %62 ]
  %44 = phi %struct.ScoredHistoryMatch* [ %34, %39 ], [ %42, %62 ]
  %45 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %46 = call zeroext i1 %45(%struct.ScoredHistoryMatch* dereferenceable(248) %42, %struct.ScoredHistoryMatch* dereferenceable(248) %44) #19
  br i1 %46, label %47, label %62

47:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %40) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 248, i1 false)
  call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* nonnull %5, %struct.ScoredHistoryMatch* dereferenceable(248) %42) #19
  br label %48

48:                                               ; preds = %53, %47
  %49 = phi %struct.ScoredHistoryMatch* [ %42, %47 ], [ %50, %53 ]
  %50 = phi %struct.ScoredHistoryMatch* [ %44, %47 ], [ %55, %53 ]
  %51 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %49, %struct.ScoredHistoryMatch* dereferenceable(248) %50) #19
  %52 = icmp eq %struct.ScoredHistoryMatch* %50, %0
  br i1 %52, label %57, label %53

53:                                               ; preds = %48
  %54 = load i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)*, i1 (%struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch*)** %2, align 8
  %55 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %50, i64 -1
  %56 = call zeroext i1 %54(%struct.ScoredHistoryMatch* nonnull dereferenceable(248) %5, %struct.ScoredHistoryMatch* dereferenceable(248) %55) #19
  br i1 %56, label %48, label %57

57:                                               ; preds = %48, %53
  %58 = phi %struct.ScoredHistoryMatch* [ %0, %48 ], [ %50, %53 ]
  %59 = call dereferenceable(248) %struct.ScoredHistoryMatch* @_ZN18ScoredHistoryMatchaSEOS_(%struct.ScoredHistoryMatch* %58, %struct.ScoredHistoryMatch* nonnull dereferenceable(248) %5) #19
  %60 = add i32 %43, 1
  %61 = icmp eq i32 %60, 8
  call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %40) #19
  br i1 %61, label %66, label %62

62:                                               ; preds = %57, %41
  %63 = phi i32 [ %60, %57 ], [ %43, %41 ]
  %64 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %42, i64 1
  %65 = icmp eq %struct.ScoredHistoryMatch* %64, %1
  br i1 %65, label %69, label %41

66:                                               ; preds = %57
  %67 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %42, i64 1
  %68 = icmp eq %struct.ScoredHistoryMatch* %67, %1
  br label %69

69:                                               ; preds = %62, %66, %33, %10, %14, %3, %3, %27, %22, %18
  %70 = phi i1 [ true, %27 ], [ true, %22 ], [ true, %18 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %10 ], [ true, %33 ], [ %68, %66 ], [ true, %62 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14pairINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEC2IRNS0_IKS6_S8_EELb0EEEOT_(%"struct.std::__1::pair.618"*, %"struct.std::__1::pair.521"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair.521"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.std::__1::pair.618"* %0 to i8*
  %9 = bitcast %"struct.std::__1::pair.521"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #19
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::pair.521", %"struct.std::__1::pair.521"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.521", %"struct.std::__1::pair.521"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.std::__1::pair.618"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.std::__1::pair.618"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.std::__1::pair.618"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #21
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #21
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #20
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.std::__1::pair.618"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !294
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !294
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !297, !noalias !294
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !297, !noalias !294
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !294
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !294
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !297, !noalias !294
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !297, !noalias !294
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !294
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !294
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !297, !noalias !294
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !297, !noalias !294
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !294
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !294
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !297, !noalias !294
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !297, !noalias !294
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !299

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !294
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !294
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !297, !noalias !294
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !297, !noalias !294
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !300

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !301

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !302

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.std::__1::pair.618", %"struct.std::__1::pair.618"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.std::__1::pair.521", %"struct.std::__1::pair.521"* %1, i64 0, i32 1
  tail call void @_ZN19URLIndexPrivateData19SearchTermCacheItemC2ERKS0_(%"struct.URLIndexPrivateData::SearchTermCacheItem"* %186, %"struct.URLIndexPrivateData::SearchTermCacheItem"* dereferenceable(56) %187)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #19
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 10
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i64**
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %38
  %51 = ptrtoint i64* %48 to i64
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 11
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i64* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  br label %55

55:                                               ; preds = %50, %38
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i64**
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = ptrtoint i64* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 8
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i64* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #20
  br label %65

65:                                               ; preds = %60, %55
  %66 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #20
  br label %73

73:                                               ; preds = %65, %70
  %74 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %74) #20
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.75"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.623"* dereferenceable(8), %"class.std::__1::tuple.626"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.588"**
  %8 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.588"* %8, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i64, i64* %1, align 8
  br label %13

13:                                               ; preds = %35, %10
  %14 = phi %"class.std::__1::__tree_node.588"* [ %38, %35 ], [ %8, %10 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp slt i64 %12, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp slt i64 %17, %12
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node.588"*
  br label %13

39:                                               ; preds = %5
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %41

41:                                               ; preds = %23, %31, %33, %39
  %42 = phi %"class.std::__1::__tree_end_node"* [ %6, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node.588"**
  %45 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.588"* %45, null
  br i1 %46, label %47, label %77

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 88) #20, !noalias !303
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %3, i64 0, i32 0, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8, !noalias !303
  %52 = bitcast i8* %49 to i64*
  %53 = load i64, i64* %51, align 8, !noalias !303
  store i64 %53, i64* %52, align 8, !noalias !303
  %54 = getelementptr inbounds i8, i8* %48, i64 40
  %55 = bitcast i8* %54 to %struct.RowWordStarts*
  tail call void @_ZN13RowWordStartsC1Ev(%struct.RowWordStarts* %55) #19, !noalias !303
  %56 = bitcast i8* %48 to %"class.std::__1::__tree_node.588"*
  %57 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %58 = getelementptr inbounds i8, i8* %48, i64 16
  %59 = bitcast i8* %58 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %59, align 8
  %60 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %47
  %67 = ptrtoint %"class.std::__1::__tree_node_base"* %64 to i64
  %68 = bitcast %"class.std::__1::__tree.75"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %70

70:                                               ; preds = %66, %47
  %71 = phi %"class.std::__1::__tree_node_base"* [ %57, %47 ], [ %69, %66 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %73, %"class.std::__1::__tree_node_base"* %71) #19
  %74 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %74, align 8
  br label %77

77:                                               ; preds = %70, %41
  %78 = phi i8 [ 1, %70 ], [ 0, %41 ]
  %79 = phi %"class.std::__1::__tree_node.588"* [ %56, %70 ], [ %45, %41 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %79, i64 0, i32 0, i32 0
  %81 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %80, 0
  %82 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %81, i8 %78, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %82
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %29) #19
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #19
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #21
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #21
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #20
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !306
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !306
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !309, !noalias !306
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !309, !noalias !306
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !306
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !306
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !309, !noalias !306
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !309, !noalias !306
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !306
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !306
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !309, !noalias !306
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !309, !noalias !306
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !306
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !306
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !309, !noalias !306
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !309, !noalias !306
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !311

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !306
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !306
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !309, !noalias !306
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !309, !noalias !306
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !312

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !313

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !314

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #20
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #20
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #20
  %275 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #19
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #21
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #20
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  %293 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 %289
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #19
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #21
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #21
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #20
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !315
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !315
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !318, !noalias !315
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !318, !noalias !315
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !315
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !315
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !318, !noalias !315
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !318, !noalias !315
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !315
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !315
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !318, !noalias !315
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !318, !noalias !315
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !315
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !315
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !318, !noalias !315
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !318, !noalias !315
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !320

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !315
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !315
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !318, !noalias !315
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !318, !noalias !315
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !321

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !322

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !323

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeImE6assignINS_8internal29circular_deque_const_iteratorImEEEENSt3__19enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %7
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = icmp ugt i64 %9, %7
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %7) #19
  br i1 %12, label %20, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %17) #19
  %19 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %13, i64 0) #19
  br label %20

20:                                               ; preds = %11, %15
  %21 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %9) #19
  br label %22

22:                                               ; preds = %20, %5
  %23 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #19
  %24 = icmp eq i64 %2, %4
  br i1 %24, label %53, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %28 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %1, i64 0, i32 0, i32 1
  br label %30

30:                                               ; preds = %25, %45
  %31 = phi i64 [ %2, %25 ], [ %51, %45 ]
  %32 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %26, i64 %31) #19
  tail call void @_ZN4base14circular_dequeImE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 1) #19
  %33 = load i64, i64* %8, align 8
  %34 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %27, i64 %33) #19
  %35 = load i64, i64* %32, align 8
  store i64 %35, i64* %34, align 8
  %36 = load i64, i64* %8, align 8
  %37 = load i64, i64* %28, align 8
  %38 = add i64 %37, -1
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %30
  store i64 0, i64* %8, align 8
  br label %44

41:                                               ; preds = %30
  %42 = add i64 %36, 1
  store i64 %42, i64* %8, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41, %40
  br label %45

45:                                               ; preds = %41, %44
  %46 = phi i64 [ %38, %44 ], [ %36, %41 ]
  %47 = tail call dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %27, i64 %46) #19
  %48 = add i64 %31, 1
  %49 = load i64, i64* %29, align 8
  %50 = icmp eq i64 %48, %49
  %51 = select i1 %50, i64 0, i64 %48
  %52 = icmp eq i64 %51, %4
  br i1 %52, label %53, label %30

53:                                               ; preds = %45, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeImE10MoveBufferERNS_8internal12VectorBufferImEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferImE9MoveRangeImLi0EEEvPmS4_S4_(i64* %11, i64* %12, i64* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load i64*, i64** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferImE9MoveRangeImLi0EEEvPmS4_S4_(i64* %19, i64* %20, i64* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) i64* @_ZN4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferImE9MoveRangeImLi0EEEvPmS4_S4_(i64* %24, i64* %25, i64* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferImE9MoveRangeImLi0EEEvPmS4_S4_(i64*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint i64* %0 to i64
  %6 = icmp ult i64* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint i64* %2 to i64
  %9 = ptrtoint i64* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #19
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #19
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !59

16:                                               ; preds = %7
  tail call void @llvm.trap() #19
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i64 0, i64 0)) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i64 14) #19
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #19
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i64 14) #19
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #19
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #19
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint i64* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #19
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !59

45:                                               ; preds = %41
  call void @llvm.trap() #19
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast i64* %0 to i8*
  %50 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeImE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #19
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #19
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #19
  br i1 %37, label %38, label %39, !prof !59

38:                                               ; preds = %27
  tail call void @llvm.trap() #19
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #19
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeImE10MoveBufferERNS_8internal12VectorBufferImEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #19
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #19
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #19
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZNK4base8internal12VectorBufferImEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 %1
  ret i64* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE14__assign_multiINS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEEEvT_SM_(%"class.std::__1::__tree.16"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %201, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.16"* %0 to %"class.std::__1::__tree_node.579"**
  %10 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #19
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node.579"*
  %20 = select i1 %18, %"class.std::__1::__tree_node.579"* %10, %"class.std::__1::__tree_node.579"* %19
  %21 = icmp eq %"class.std::__1::__tree_node.579"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %0, %"class.std::__1::__tree_node.579"* %20) #19
  br label %201

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node.579"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node.579"**
  %34 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node.579"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node.579"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node.579"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node.579"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node.579"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %181, label %76

76:                                               ; preds = %72, %173
  %77 = phi %"class.std::__1::__tree_node.579"* [ %175, %173 ], [ %73, %72 ]
  %78 = phi i64 [ %145, %173 ], [ %74, %72 ]
  %79 = phi %"class.std::__1::__tree_node.579"* [ %77, %173 ], [ %20, %72 ]
  %80 = phi %"class.std::__1::__tree_end_node"* [ %174, %173 ], [ %1, %72 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 4
  %82 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %79, i64 0, i32 1, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %79, i64 0, i32 1, i32 0, i32 1
  %84 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::basic_string"*
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %82, %"class.std::__1::basic_string"* dereferenceable(24) %84) #19
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 7
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %83, align 8
  %89 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE19__node_insert_multiEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %0, %"class.std::__1::__tree_node.579"* nonnull %79)
  %90 = icmp eq i64 %78, 0
  br i1 %90, label %144, label %91

91:                                               ; preds = %76
  %92 = inttoptr i64 %78 to %"class.std::__1::__tree_node.579"*
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %92, i64 0, i32 0, i32 2
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_end_node"* %94, null
  br i1 %95, label %141, label %96

96:                                               ; preds = %91
  %97 = inttoptr i64 %78 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, %97
  br i1 %100, label %101, label %120

101:                                              ; preds = %96
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %98, align 8
  %102 = bitcast %"class.std::__1::__tree_end_node"** %93 to %"class.std::__1::__tree_node.579"**
  %103 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %103, i64 0, i32 0, i32 1
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %141, label %107

107:                                              ; preds = %101, %116
  %108 = phi %"class.std::__1::__tree_node_base"* [ %117, %116 ], [ %105, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %116

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 1
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %112, %107
  %117 = phi %"class.std::__1::__tree_node_base"* [ %110, %107 ], [ %114, %112 ]
  br label %107

118:                                              ; preds = %112
  %119 = bitcast %"class.std::__1::__tree_node_base"* %108 to %"class.std::__1::__tree_node.579"*
  br label %141

120:                                              ; preds = %96
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %121, align 8
  %122 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %120
  %127 = bitcast %"class.std::__1::__tree_end_node"* %122 to %"class.std::__1::__tree_node.579"*
  br label %141

128:                                              ; preds = %120, %137
  %129 = phi %"class.std::__1::__tree_node_base"* [ %138, %137 ], [ %124, %120 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %133, label %137

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 1
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133, %128
  %138 = phi %"class.std::__1::__tree_node_base"* [ %131, %128 ], [ %135, %133 ]
  br label %128

139:                                              ; preds = %133
  %140 = bitcast %"class.std::__1::__tree_node_base"* %129 to %"class.std::__1::__tree_node.579"*
  br label %141

141:                                              ; preds = %139, %126, %118, %101, %91
  %142 = phi %"class.std::__1::__tree_node.579"* [ %119, %118 ], [ %127, %126 ], [ %140, %139 ], [ null, %91 ], [ %103, %101 ]
  %143 = ptrtoint %"class.std::__1::__tree_node.579"* %142 to i64
  br label %144

144:                                              ; preds = %76, %141
  %145 = phi i64 [ 0, %76 ], [ %143, %141 ]
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %157

149:                                              ; preds = %144
  %150 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_node_base"*
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 2
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to %"class.std::__1::__tree_end_node"**
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 0, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, %150
  br i1 %156, label %173, label %164

157:                                              ; preds = %144, %157
  %158 = phi %"class.std::__1::__tree_node_base"* [ %160, %157 ], [ %147, %144 ]
  %159 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %158, i64 0, i32 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, null
  br i1 %161, label %162, label %157

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %158, i64 0, i32 0
  br label %173

164:                                              ; preds = %149, %164
  %165 = phi %"class.std::__1::__tree_end_node"** [ %168, %164 ], [ %152, %149 ]
  %166 = bitcast %"class.std::__1::__tree_end_node"** %165 to %"class.std::__1::__tree_node_base"**
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 2
  %169 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %168, align 8
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 0, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, %167
  br i1 %172, label %173, label %164

173:                                              ; preds = %164, %149, %162
  %174 = phi %"class.std::__1::__tree_end_node"* [ %163, %162 ], [ %153, %149 ], [ %169, %164 ]
  %175 = inttoptr i64 %145 to %"class.std::__1::__tree_node.579"*
  %176 = icmp ne %"class.std::__1::__tree_node.579"* %77, null
  %177 = icmp ne %"class.std::__1::__tree_end_node"* %174, %2
  %178 = and i1 %177, %176
  br i1 %178, label %76, label %179

179:                                              ; preds = %173
  %180 = inttoptr i64 %145 to %"class.std::__1::__tree_node.579"*
  br label %181

181:                                              ; preds = %72, %179
  %182 = phi %"class.std::__1::__tree_node.579"* [ %73, %72 ], [ %180, %179 ]
  %183 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %174, %179 ]
  %184 = phi %"class.std::__1::__tree_node.579"* [ %20, %72 ], [ %77, %179 ]
  %185 = phi i64 [ %74, %72 ], [ %145, %179 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %0, %"class.std::__1::__tree_node.579"* %184) #19
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %201, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %182, i64 0, i32 0, i32 2
  %189 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_end_node"* %189, null
  br i1 %190, label %199, label %191

191:                                              ; preds = %187, %191
  %192 = phi %"class.std::__1::__tree_end_node"* [ %195, %191 ], [ %189, %187 ]
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 2
  %194 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"class.std::__1::__tree_end_node"**
  %195 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %194, align 8
  %196 = icmp eq %"class.std::__1::__tree_end_node"* %195, null
  br i1 %196, label %197, label %191

197:                                              ; preds = %191
  %198 = bitcast %"class.std::__1::__tree_end_node"* %192 to %"class.std::__1::__tree_node.579"*
  br label %199

199:                                              ; preds = %197, %187
  %200 = phi %"class.std::__1::__tree_node.579"* [ %182, %187 ], [ %198, %197 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"* %0, %"class.std::__1::__tree_node.579"* %200) #19
  br label %201

201:                                              ; preds = %22, %199, %181, %3
  %202 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %183, %181 ], [ %183, %199 ], [ %1, %22 ]
  %203 = icmp eq %"class.std::__1::__tree_end_node"* %202, %2
  br i1 %203, label %239, label %204

204:                                              ; preds = %201, %236
  %205 = phi %"class.std::__1::__tree_end_node"* [ %237, %236 ], [ %202, %201 ]
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 4
  %207 = bitcast %"class.std::__1::__tree_end_node"* %206 to %"struct.std::__1::pair.549"*
  %208 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__emplace_multiIJRKNS_4pairIKS7_mEEEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEDpOT_(%"class.std::__1::__tree.16"* %0, %"struct.std::__1::pair.549"* dereferenceable(32) %207) #19
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 1, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, null
  br i1 %211, label %212, label %220

212:                                              ; preds = %204
  %213 = bitcast %"class.std::__1::__tree_end_node"* %205 to %"class.std::__1::__tree_node_base"*
  %214 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 2
  %215 = bitcast %"class.std::__1::__tree_end_node"* %214 to %"class.std::__1::__tree_end_node"**
  %216 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %215, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %216, i64 0, i32 0
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = icmp eq %"class.std::__1::__tree_node_base"* %218, %213
  br i1 %219, label %236, label %227

220:                                              ; preds = %204, %220
  %221 = phi %"class.std::__1::__tree_node_base"* [ %223, %220 ], [ %210, %204 ]
  %222 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %221, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = icmp eq %"class.std::__1::__tree_node_base"* %223, null
  br i1 %224, label %225, label %220

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %221, i64 0, i32 0
  br label %236

227:                                              ; preds = %212, %227
  %228 = phi %"class.std::__1::__tree_end_node"** [ %231, %227 ], [ %215, %212 ]
  %229 = bitcast %"class.std::__1::__tree_end_node"** %228 to %"class.std::__1::__tree_node_base"**
  %230 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %229, align 8
  %231 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %230, i64 0, i32 2
  %232 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %232, i64 0, i32 0
  %234 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %233, align 8
  %235 = icmp eq %"class.std::__1::__tree_node_base"* %234, %230
  br i1 %235, label %236, label %227

236:                                              ; preds = %227, %212, %225
  %237 = phi %"class.std::__1::__tree_end_node"* [ %226, %225 ], [ %216, %212 ], [ %232, %227 ]
  %238 = icmp eq %"class.std::__1::__tree_end_node"* %237, %2
  br i1 %238, label %239, label %204

239:                                              ; preds = %236, %201
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE19__node_insert_multiEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.16"*, %"class.std::__1::__tree_node.579"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.579"**
  %6 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.579"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %20 = select i1 %12, i16* %18, i16* %19
  br label %21

21:                                               ; preds = %70, %8
  %22 = phi %"class.std::__1::__tree_node.579"* [ %72, %70 ], [ %6, %8 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type.580"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %31, %16
  %33 = select i1 %32, i64 %31, i64 %16
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %54, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"struct.std::__1::__value_type.580", %"struct.std::__1::__value_type.580"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type.580"* %23 to i16*
  %39 = select i1 %27, i16* %37, i16* %38
  br label %40

40:                                               ; preds = %49, %35
  %41 = phi i64 [ %50, %49 ], [ %33, %35 ]
  %42 = phi i16* [ %52, %49 ], [ %39, %35 ]
  %43 = phi i16* [ %51, %49 ], [ %20, %35 ]
  %44 = load i16, i16* %43, align 2
  %45 = load i16, i16* %42, align 2
  %46 = icmp ult i16 %44, %45
  br i1 %46, label %56, label %47

47:                                               ; preds = %40
  %48 = icmp ult i16 %45, %44
  br i1 %48, label %63, label %49

49:                                               ; preds = %47
  %50 = add i64 %41, -1
  %51 = getelementptr inbounds i16, i16* %43, i64 1
  %52 = getelementptr inbounds i16, i16* %42, i64 1
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %54, label %40

54:                                               ; preds = %49, %21
  %55 = icmp ult i64 %16, %31
  br i1 %55, label %56, label %63

56:                                               ; preds = %40, %54
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %70

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 0
  br label %75

63:                                               ; preds = %47, %54
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 1
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 0
  br label %75

70:                                               ; preds = %63, %56
  %71 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %65, %63 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"* %71 to %"class.std::__1::__tree_node.579"*
  br label %21

73:                                               ; preds = %2
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %75

75:                                               ; preds = %60, %67, %73
  %76 = phi %"class.std::__1::__tree_end_node"* [ %4, %73 ], [ %62, %60 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %74, %73 ], [ %61, %60 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node.579"* %1 to %"class.std::__1::__tree_node_base"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %1, i64 0, i32 0, i32 2
  %80 = bitcast %"class.std::__1::__tree_node.579"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = bitcast %"class.std::__1::__tree_node_base"** %77 to %"class.std::__1::__tree_node.579"**
  store %"class.std::__1::__tree_node.579"* %1, %"class.std::__1::__tree_node.579"** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %75
  %88 = ptrtoint %"class.std::__1::__tree_node_base"* %85 to i64
  %89 = bitcast %"class.std::__1::__tree.16"* %0 to i64*
  store i64 %88, i64* %89, align 8
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  br label %91

91:                                               ; preds = %75, %87
  %92 = phi %"class.std::__1::__tree_node_base"* [ %78, %75 ], [ %90, %87 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %94, %"class.std::__1::__tree_node_base"* %92) #19
  %95 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 2, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 1
  store i64 %97, i64* %95, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %1, i64 0, i32 0, i32 0
  ret %"class.std::__1::__tree_end_node"* %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__emplace_multiIJRKNS_4pairIKS7_mEEEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEDpOT_(%"class.std::__1::__tree.16"*, %"struct.std::__1::pair.549"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.639", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.639"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #19
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.639", %"class.std::__1::unique_ptr.639"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::unique_ptr.639"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_4pairIKS7_mEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_(%"class.std::__1::unique_ptr.639"* nonnull sret %3, %"class.std::__1::__tree.16"* %0, %"struct.std::__1::pair.549"* dereferenceable(32) %1)
  %7 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %5, align 8
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.579"**
  %11 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.579"* %11, null
  br i1 %12, label %78, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i16*, i16** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %25 = select i1 %17, i16* %23, i16* %24
  br label %26

26:                                               ; preds = %75, %13
  %27 = phi %"class.std::__1::__tree_node.579"* [ %77, %75 ], [ %11, %13 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__value_type.580"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp ult i64 %36, %21
  %38 = select i1 %37, i64 %36, i64 %21
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %59, label %40

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"struct.std::__1::__value_type.580", %"struct.std::__1::__value_type.580"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = bitcast %"struct.std::__1::__value_type.580"* %28 to i16*
  %44 = select i1 %32, i16* %42, i16* %43
  br label %45

45:                                               ; preds = %54, %40
  %46 = phi i64 [ %55, %54 ], [ %38, %40 ]
  %47 = phi i16* [ %57, %54 ], [ %44, %40 ]
  %48 = phi i16* [ %56, %54 ], [ %25, %40 ]
  %49 = load i16, i16* %48, align 2
  %50 = load i16, i16* %47, align 2
  %51 = icmp ult i16 %49, %50
  br i1 %51, label %61, label %52

52:                                               ; preds = %45
  %53 = icmp ult i16 %50, %49
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = add i64 %46, -1
  %56 = getelementptr inbounds i16, i16* %48, i64 1
  %57 = getelementptr inbounds i16, i16* %47, i64 1
  %58 = icmp eq i64 %55, 0
  br i1 %58, label %59, label %45

59:                                               ; preds = %54, %26
  %60 = icmp ult i64 %21, %36
  br i1 %60, label %61, label %68

61:                                               ; preds = %45, %59
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %75

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 0, i32 0
  br label %80

68:                                               ; preds = %52, %59
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 0, i32 1
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %27, i64 0, i32 0, i32 0
  br label %80

75:                                               ; preds = %68, %61
  %76 = phi %"class.std::__1::__tree_node_base"* [ %63, %61 ], [ %70, %68 ]
  %77 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.579"*
  br label %26

78:                                               ; preds = %2
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  br label %80

80:                                               ; preds = %65, %72, %78
  %81 = phi %"class.std::__1::__tree_end_node"* [ %9, %78 ], [ %67, %65 ], [ %74, %72 ]
  %82 = phi %"class.std::__1::__tree_node_base"** [ %79, %78 ], [ %66, %65 ], [ %73, %72 ]
  %83 = bitcast %"class.std::__1::__tree_node.579"* %7 to %"class.std::__1::__tree_node_base"*
  %84 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %7, i64 0, i32 0, i32 2
  %85 = bitcast %"class.std::__1::__tree_node.579"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = bitcast %"class.std::__1::__tree_node_base"** %82 to %"class.std::__1::__tree_node.579"**
  store %"class.std::__1::__tree_node.579"* %7, %"class.std::__1::__tree_node.579"** %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %80
  %93 = ptrtoint %"class.std::__1::__tree_node_base"* %90 to i64
  %94 = bitcast %"class.std::__1::__tree.16"* %0 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  br label %96

96:                                               ; preds = %92, %80
  %97 = phi %"class.std::__1::__tree_node_base"* [ %83, %80 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %97) #19
  %100 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 2, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  %103 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %5, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %103, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #19
  ret %"class.std::__1::__tree_end_node"* %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_4pairIKS7_mEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_(%"class.std::__1::unique_ptr.639"* noalias sret, %"class.std::__1::__tree.16"*, %"struct.std::__1::pair.549"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.639", %"class.std::__1::unique_ptr.639"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.639", %"class.std::__1::unique_ptr.639"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.639"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = tail call i8* @_Znwm(i64 64) #20
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.639"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast %"class.std::__1::allocator.19"** %5 to %"class.std::__1::__compressed_pair.17"**
  store %"class.std::__1::__compressed_pair.17"* %4, %"class.std::__1::__compressed_pair.17"** %11, align 8
  store i8 0, i8* %6, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 32
  %13 = bitcast %"struct.std::__1::pair.549"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = bitcast %"struct.std::__1::pair.549"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #19
  br label %198

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.std::__1::pair.549", %"struct.std::__1::pair.549"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = bitcast i16* %21 to i8*
  %23 = getelementptr inbounds %"struct.std::__1::pair.549", %"struct.std::__1::pair.549"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = trunc i64 %24 to i8
  %28 = getelementptr inbounds i8, i8* %8, i64 55
  store i8 %27, i8* %28, align 1
  br label %47

29:                                               ; preds = %19
  %30 = icmp ugt i64 %24, 9223372036854775791
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast i8* %12 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %32) #21
  unreachable

33:                                               ; preds = %29
  %34 = add nuw nsw i64 %24, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #21
  unreachable

38:                                               ; preds = %33
  %39 = shl i64 %35, 1
  %40 = tail call i8* @_Znwm(i64 %39) #20
  %41 = bitcast i8* %12 to i8**
  store i8* %40, i8** %41, align 8
  %42 = or i64 %35, -9223372036854775808
  %43 = getelementptr inbounds i8, i8* %8, i64 48
  %44 = bitcast i8* %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %8, i64 40
  %46 = bitcast i8* %45 to i64*
  store i64 %24, i64* %46, align 8
  br label %47

47:                                               ; preds = %38, %26
  %48 = phi i8* [ %12, %26 ], [ %40, %38 ]
  %49 = bitcast i8* %48 to i16*
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %145, label %53

53:                                               ; preds = %47
  %54 = shl i64 %24, 1
  %55 = add i64 %54, 2
  %56 = getelementptr i8, i8* %48, i64 %55
  %57 = add i64 %24, 1
  %58 = getelementptr i16, i16* %21, i64 %57
  %59 = bitcast i16* %58 to i8*
  %60 = icmp ult i8* %48, %59
  %61 = icmp ugt i8* %56, %22
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %53
  %64 = and i64 %51, -16
  %65 = sub i64 %50, %64
  %66 = getelementptr i16, i16* %21, i64 %64
  %67 = getelementptr i16, i16* %49, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %21, i64 %76
  %79 = getelementptr i16, i16* %49, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !324
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !324
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !327, !noalias !324
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !327, !noalias !324
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %21, i64 %88
  %90 = getelementptr i16, i16* %49, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !324
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !324
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !327, !noalias !324
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !327, !noalias !324
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %21, i64 %99
  %101 = getelementptr i16, i16* %49, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !324
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !324
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !327, !noalias !324
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !327, !noalias !324
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %21, i64 %110
  %112 = getelementptr i16, i16* %49, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !324
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !324
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !327, !noalias !324
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !327, !noalias !324
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !329

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %21, i64 %128
  %131 = getelementptr i16, i16* %49, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !324
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !324
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !327, !noalias !324
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !327, !noalias !324
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !330

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %51, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %53, %47
  %146 = phi i64 [ %50, %53 ], [ %50, %47 ], [ %65, %143 ]
  %147 = phi i16* [ %21, %53 ], [ %21, %47 ], [ %66, %143 ]
  %148 = phi i16* [ %49, %53 ], [ %49, %47 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !331

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !332

198:                                              ; preds = %163, %168, %143, %17
  %199 = getelementptr inbounds i8, i8* %8, i64 56
  %200 = bitcast i8* %199 to i64*
  %201 = getelementptr inbounds %"struct.std::__1::pair.549", %"struct.std::__1::pair.549"* %2, i64 0, i32 1
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_(%"class.std::__1::__tree.25"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %258, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.25"* %0 to %"class.std::__1::__tree_node.581"**
  %10 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #19
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node.581"*
  %20 = select i1 %18, %"class.std::__1::__tree_node.581"* %10, %"class.std::__1::__tree_node.581"* %19
  %21 = icmp eq %"class.std::__1::__tree_node.581"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node.581"* %20) #19
  br label %258

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node.581"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node.581"**
  %34 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node.581"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node.581"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node.581"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node.581"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node.581"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %238, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.581"**
  %78 = bitcast %"class.std::__1::__tree.25"* %0 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %76, %230
  %81 = phi %"class.std::__1::__tree_node.581"* [ %73, %76 ], [ %232, %230 ]
  %82 = phi i64 [ %74, %76 ], [ %202, %230 ]
  %83 = phi %"class.std::__1::__tree_node.581"* [ %20, %76 ], [ %81, %230 ]
  %84 = phi %"class.std::__1::__tree_end_node"* [ %1, %76 ], [ %231, %230 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"struct.std::__1::__value_type.582"*
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %83, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::__value_type.582", %"struct.std::__1::__value_type.582"* %87, i64 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::__tree_end_node"* %85 to i16*
  %90 = load i16, i16* %89, align 2
  store i16 %90, i16* %88, align 2
  %91 = icmp eq %"struct.std::__1::__value_type.582"* %87, %86
  br i1 %91, label %100, label %92

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %83, i64 0, i32 1, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 5
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to i64**
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 6
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to i64**
  %99 = load i64*, i64** %98, align 8
  tail call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"* %93, i64* %96, i64* %99) #19
  br label %100

100:                                              ; preds = %80, %92
  %101 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %77, align 8
  %102 = icmp eq %"class.std::__1::__tree_node.581"* %101, null
  br i1 %102, label %128, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %83, i64 0, i32 1, i32 0, i32 0
  %105 = load i16, i16* %104, align 2
  br label %106

106:                                              ; preds = %125, %103
  %107 = phi %"class.std::__1::__tree_node.581"* [ %127, %125 ], [ %101, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %107, i64 0, i32 1, i32 0, i32 0
  %109 = load i16, i16* %108, align 2
  %110 = icmp ult i16 %105, %109
  br i1 %110, label %111, label %118

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %107, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %125

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %107, i64 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %107, i64 0, i32 0, i32 0
  br label %128

118:                                              ; preds = %106
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %107, i64 0, i32 0, i32 1
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %107, i64 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %107, i64 0, i32 0, i32 0
  br label %128

125:                                              ; preds = %118, %111
  %126 = phi %"class.std::__1::__tree_node_base"* [ %113, %111 ], [ %120, %118 ]
  %127 = bitcast %"class.std::__1::__tree_node_base"* %126 to %"class.std::__1::__tree_node.581"*
  br label %106

128:                                              ; preds = %100, %122, %115
  %129 = phi %"class.std::__1::__tree_end_node"* [ %117, %115 ], [ %124, %122 ], [ %11, %100 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %116, %115 ], [ %123, %122 ], [ %12, %100 ]
  %131 = bitcast %"class.std::__1::__tree_node.581"* %83 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %83, i64 0, i32 0, i32 2
  %133 = bitcast %"class.std::__1::__tree_node.581"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = bitcast %"class.std::__1::__tree_node_base"** %130 to %"class.std::__1::__tree_node.581"**
  store %"class.std::__1::__tree_node.581"* %83, %"class.std::__1::__tree_node.581"** %134, align 8
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %128
  %140 = ptrtoint %"class.std::__1::__tree_node_base"* %137 to i64
  store i64 %140, i64* %78, align 8
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  br label %142

142:                                              ; preds = %128, %139
  %143 = phi %"class.std::__1::__tree_node_base"* [ %131, %128 ], [ %141, %139 ]
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %144, %"class.std::__1::__tree_node_base"* %143) #19
  %145 = load i64, i64* %4, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %4, align 8
  %147 = icmp eq i64 %82, 0
  br i1 %147, label %201, label %148

148:                                              ; preds = %142
  %149 = inttoptr i64 %82 to %"class.std::__1::__tree_node.581"*
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %149, i64 0, i32 0, i32 2
  %151 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_end_node"* %151, null
  br i1 %152, label %198, label %153

153:                                              ; preds = %148
  %154 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 0, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, %154
  br i1 %157, label %158, label %177

158:                                              ; preds = %153
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %155, align 8
  %159 = bitcast %"class.std::__1::__tree_end_node"** %150 to %"class.std::__1::__tree_node.581"**
  %160 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %160, i64 0, i32 0, i32 1
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %198, label %164

164:                                              ; preds = %158, %173
  %165 = phi %"class.std::__1::__tree_node_base"* [ %174, %173 ], [ %162, %158 ]
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, null
  br i1 %168, label %169, label %173

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 1
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169, %164
  %174 = phi %"class.std::__1::__tree_node_base"* [ %167, %164 ], [ %171, %169 ]
  br label %164

175:                                              ; preds = %169
  %176 = bitcast %"class.std::__1::__tree_node_base"* %165 to %"class.std::__1::__tree_node.581"*
  br label %198

177:                                              ; preds = %153
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %178, align 8
  %179 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node.581"*
  br label %198

185:                                              ; preds = %177, %194
  %186 = phi %"class.std::__1::__tree_node_base"* [ %195, %194 ], [ %181, %177 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %194

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 1
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %190, %185
  %195 = phi %"class.std::__1::__tree_node_base"* [ %188, %185 ], [ %192, %190 ]
  br label %185

196:                                              ; preds = %190
  %197 = bitcast %"class.std::__1::__tree_node_base"* %186 to %"class.std::__1::__tree_node.581"*
  br label %198

198:                                              ; preds = %196, %183, %175, %158, %148
  %199 = phi %"class.std::__1::__tree_node.581"* [ %176, %175 ], [ %184, %183 ], [ %197, %196 ], [ null, %148 ], [ %160, %158 ]
  %200 = ptrtoint %"class.std::__1::__tree_node.581"* %199 to i64
  br label %201

201:                                              ; preds = %142, %198
  %202 = phi i64 [ 0, %142 ], [ %200, %198 ]
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 1, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %206, label %214

206:                                              ; preds = %201
  %207 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %209 = bitcast %"class.std::__1::__tree_end_node"* %208 to %"class.std::__1::__tree_end_node"**
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, %207
  br i1 %213, label %230, label %221

214:                                              ; preds = %201, %214
  %215 = phi %"class.std::__1::__tree_node_base"* [ %217, %214 ], [ %204, %201 ]
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, null
  br i1 %218, label %219, label %214

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0
  br label %230

221:                                              ; preds = %206, %221
  %222 = phi %"class.std::__1::__tree_end_node"** [ %225, %221 ], [ %209, %206 ]
  %223 = bitcast %"class.std::__1::__tree_end_node"** %222 to %"class.std::__1::__tree_node_base"**
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  %226 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %225, align 8
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %226, i64 0, i32 0
  %228 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %227, align 8
  %229 = icmp eq %"class.std::__1::__tree_node_base"* %228, %224
  br i1 %229, label %230, label %221

230:                                              ; preds = %221, %206, %219
  %231 = phi %"class.std::__1::__tree_end_node"* [ %220, %219 ], [ %210, %206 ], [ %226, %221 ]
  %232 = inttoptr i64 %202 to %"class.std::__1::__tree_node.581"*
  %233 = icmp ne %"class.std::__1::__tree_node.581"* %81, null
  %234 = icmp ne %"class.std::__1::__tree_end_node"* %231, %2
  %235 = and i1 %234, %233
  br i1 %235, label %80, label %236

236:                                              ; preds = %230
  %237 = inttoptr i64 %202 to %"class.std::__1::__tree_node.581"*
  br label %238

238:                                              ; preds = %72, %236
  %239 = phi %"class.std::__1::__tree_node.581"* [ %73, %72 ], [ %237, %236 ]
  %240 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %231, %236 ]
  %241 = phi %"class.std::__1::__tree_node.581"* [ %20, %72 ], [ %81, %236 ]
  %242 = phi i64 [ %74, %72 ], [ %202, %236 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node.581"* %241) #19
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %258, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %239, i64 0, i32 0, i32 2
  %246 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %245, align 8
  %247 = icmp eq %"class.std::__1::__tree_end_node"* %246, null
  br i1 %247, label %256, label %248

248:                                              ; preds = %244, %248
  %249 = phi %"class.std::__1::__tree_end_node"* [ %252, %248 ], [ %246, %244 ]
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 2
  %251 = bitcast %"class.std::__1::__tree_end_node"* %250 to %"class.std::__1::__tree_end_node"**
  %252 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %251, align 8
  %253 = icmp eq %"class.std::__1::__tree_end_node"* %252, null
  br i1 %253, label %254, label %248

254:                                              ; preds = %248
  %255 = bitcast %"class.std::__1::__tree_end_node"* %249 to %"class.std::__1::__tree_node.581"*
  br label %256

256:                                              ; preds = %254, %244
  %257 = phi %"class.std::__1::__tree_node.581"* [ %239, %244 ], [ %255, %254 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node.581"* %257) #19
  br label %258

258:                                              ; preds = %22, %256, %238, %3
  %259 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %240, %238 ], [ %240, %256 ], [ %1, %22 ]
  %260 = icmp eq %"class.std::__1::__tree_end_node"* %259, %2
  br i1 %260, label %296, label %261

261:                                              ; preds = %258, %293
  %262 = phi %"class.std::__1::__tree_end_node"* [ %294, %293 ], [ %259, %258 ]
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 4
  %264 = bitcast %"class.std::__1::__tree_end_node"* %263 to %"struct.std::__1::pair.537"*
  %265 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKDsSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_(%"class.std::__1::__tree.25"* %0, %"struct.std::__1::pair.537"* dereferenceable(32) %264) #19
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, null
  br i1 %268, label %269, label %277

269:                                              ; preds = %261
  %270 = bitcast %"class.std::__1::__tree_end_node"* %262 to %"class.std::__1::__tree_node_base"*
  %271 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 2
  %272 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.std::__1::__tree_end_node"**
  %273 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %273, i64 0, i32 0
  %275 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %274, align 8
  %276 = icmp eq %"class.std::__1::__tree_node_base"* %275, %270
  br i1 %276, label %293, label %284

277:                                              ; preds = %261, %277
  %278 = phi %"class.std::__1::__tree_node_base"* [ %280, %277 ], [ %267, %261 ]
  %279 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %278, i64 0, i32 0, i32 0
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %279, align 8
  %281 = icmp eq %"class.std::__1::__tree_node_base"* %280, null
  br i1 %281, label %282, label %277

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %278, i64 0, i32 0
  br label %293

284:                                              ; preds = %269, %284
  %285 = phi %"class.std::__1::__tree_end_node"** [ %288, %284 ], [ %272, %269 ]
  %286 = bitcast %"class.std::__1::__tree_end_node"** %285 to %"class.std::__1::__tree_node_base"**
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 2
  %289 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %288, align 8
  %290 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %289, i64 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, %287
  br i1 %292, label %293, label %284

293:                                              ; preds = %284, %269, %282
  %294 = phi %"class.std::__1::__tree_end_node"* [ %283, %282 ], [ %273, %269 ], [ %289, %284 ]
  %295 = icmp eq %"class.std::__1::__tree_end_node"* %294, %2
  br i1 %295, label %296, label %261

296:                                              ; preds = %293, %258
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKDsSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_(%"class.std::__1::__tree.25"*, %"struct.std::__1::pair.537"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #20, !noalias !333
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds %"struct.std::__1::pair.537", %"struct.std::__1::pair.537"* %1, i64 0, i32 0
  %7 = load i16, i16* %6, align 8, !noalias !333
  store i16 %7, i16* %5, align 8, !noalias !333
  %8 = getelementptr inbounds i8, i8* %3, i64 40
  %9 = getelementptr inbounds %"struct.std::__1::pair.537", %"struct.std::__1::pair.537"* %1, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #19, !noalias !333
  %10 = getelementptr inbounds %"struct.std::__1::pair.537", %"struct.std::__1::pair.537"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast i64** %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !333
  %13 = bitcast %"class.base::internal::flat_tree.520"* %9 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !333
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %16, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast i8* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #21, !noalias !333
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #20, !noalias !333
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds i8, i8* %3, i64 48
  %26 = bitcast i8* %25 to i8**
  store i8* %23, i8** %26, align 8, !noalias !333
  %27 = bitcast i8* %8 to i8**
  store i8* %23, i8** %27, align 8, !noalias !333
  %28 = getelementptr inbounds i64, i64* %24, i64 %16
  %29 = getelementptr inbounds i8, i8* %3, i64 56
  %30 = bitcast i8* %29 to i64**
  store i64* %28, i64** %30, align 8, !noalias !333
  %31 = bitcast i8* %25 to i64*
  %32 = ptrtoint i8* %23 to i64
  %33 = icmp sgt i64 %15, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %22
  %35 = lshr exact i64 %15, 3
  %36 = inttoptr i64 %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %36, i64 %15, i1 false) #19, !noalias !333
  %37 = getelementptr inbounds i64, i64* %24, i64 %35
  %38 = ptrtoint i64* %37 to i64
  br label %39

39:                                               ; preds = %34, %22
  %40 = phi i64 [ %38, %34 ], [ %32, %22 ]
  store i64 %40, i64* %31, align 8, !noalias !333
  br label %41

41:                                               ; preds = %2, %39
  %42 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node.581"**
  %44 = load %"class.std::__1::__tree_node.581"*, %"class.std::__1::__tree_node.581"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.581"* %44, null
  br i1 %45, label %68, label %46

46:                                               ; preds = %41, %65
  %47 = phi %"class.std::__1::__tree_node.581"* [ %67, %65 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %47, i64 0, i32 1, i32 0, i32 0
  %49 = load i16, i16* %48, align 2
  %50 = icmp ult i16 %7, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %65

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %47, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %47, i64 0, i32 0, i32 0
  br label %70

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %47, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %47, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.581", %"class.std::__1::__tree_node.581"* %47, i64 0, i32 0, i32 0
  br label %70

65:                                               ; preds = %58, %51
  %66 = phi %"class.std::__1::__tree_node_base"* [ %53, %51 ], [ %60, %58 ]
  %67 = bitcast %"class.std::__1::__tree_node_base"* %66 to %"class.std::__1::__tree_node.581"*
  br label %46

68:                                               ; preds = %41
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  br label %70

70:                                               ; preds = %55, %62, %68
  %71 = phi %"class.std::__1::__tree_end_node"* [ %42, %68 ], [ %57, %55 ], [ %64, %62 ]
  %72 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %56, %55 ], [ %63, %62 ]
  %73 = bitcast i8* %3 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds i8, i8* %3, i64 16
  %75 = bitcast i8* %74 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %75, align 8
  %76 = bitcast %"class.std::__1::__tree_node_base"** %72 to i8**
  store i8* %3, i8** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %70
  %83 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %84 = bitcast %"class.std::__1::__tree.25"* %0 to i64*
  store i64 %83, i64* %84, align 8
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  br label %86

86:                                               ; preds = %82, %70
  %87 = phi %"class.std::__1::__tree_node_base"* [ %73, %70 ], [ %85, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %89, %"class.std::__1::__tree_node_base"* %87) #19
  %90 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %90, align 8
  %93 = bitcast i8* %3 to %"class.std::__1::__tree_end_node"*
  ret %"class.std::__1::__tree_end_node"* %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_(%"class.std::__1::__tree.36"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %258, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.36"* %0 to %"class.std::__1::__tree_node.583"**
  %10 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #19
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node.583"*
  %20 = select i1 %18, %"class.std::__1::__tree_node.583"* %10, %"class.std::__1::__tree_node.583"* %19
  %21 = icmp eq %"class.std::__1::__tree_node.583"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"* %0, %"class.std::__1::__tree_node.583"* %20) #19
  br label %258

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node.583"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node.583"**
  %34 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node.583"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node.583"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node.583"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node.583"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node.583"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %238, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.583"**
  %78 = bitcast %"class.std::__1::__tree.36"* %0 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %76, %230
  %81 = phi %"class.std::__1::__tree_node.583"* [ %73, %76 ], [ %232, %230 ]
  %82 = phi i64 [ %74, %76 ], [ %202, %230 ]
  %83 = phi %"class.std::__1::__tree_node.583"* [ %20, %76 ], [ %81, %230 ]
  %84 = phi %"class.std::__1::__tree_end_node"* [ %1, %76 ], [ %231, %230 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"struct.std::__1::__value_type.584"*
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %83, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::__value_type.584", %"struct.std::__1::__value_type.584"* %87, i64 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::__tree_end_node"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  %91 = icmp eq %"struct.std::__1::__value_type.584"* %87, %86
  br i1 %91, label %100, label %92

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %83, i64 0, i32 1, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 5
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to i64**
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 6
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to i64**
  %99 = load i64*, i64** %98, align 8
  tail call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.428"* %93, i64* %96, i64* %99) #19
  br label %100

100:                                              ; preds = %80, %92
  %101 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %77, align 8
  %102 = icmp eq %"class.std::__1::__tree_node.583"* %101, null
  br i1 %102, label %128, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %83, i64 0, i32 1, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  br label %106

106:                                              ; preds = %125, %103
  %107 = phi %"class.std::__1::__tree_node.583"* [ %127, %125 ], [ %101, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %107, i64 0, i32 1, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = icmp ult i64 %105, %109
  br i1 %110, label %111, label %118

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %107, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %125

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %107, i64 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %107, i64 0, i32 0, i32 0
  br label %128

118:                                              ; preds = %106
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %107, i64 0, i32 0, i32 1
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %107, i64 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %107, i64 0, i32 0, i32 0
  br label %128

125:                                              ; preds = %118, %111
  %126 = phi %"class.std::__1::__tree_node_base"* [ %113, %111 ], [ %120, %118 ]
  %127 = bitcast %"class.std::__1::__tree_node_base"* %126 to %"class.std::__1::__tree_node.583"*
  br label %106

128:                                              ; preds = %100, %122, %115
  %129 = phi %"class.std::__1::__tree_end_node"* [ %117, %115 ], [ %124, %122 ], [ %11, %100 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %116, %115 ], [ %123, %122 ], [ %12, %100 ]
  %131 = bitcast %"class.std::__1::__tree_node.583"* %83 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %83, i64 0, i32 0, i32 2
  %133 = bitcast %"class.std::__1::__tree_node.583"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = bitcast %"class.std::__1::__tree_node_base"** %130 to %"class.std::__1::__tree_node.583"**
  store %"class.std::__1::__tree_node.583"* %83, %"class.std::__1::__tree_node.583"** %134, align 8
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %128
  %140 = ptrtoint %"class.std::__1::__tree_node_base"* %137 to i64
  store i64 %140, i64* %78, align 8
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  br label %142

142:                                              ; preds = %128, %139
  %143 = phi %"class.std::__1::__tree_node_base"* [ %131, %128 ], [ %141, %139 ]
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %144, %"class.std::__1::__tree_node_base"* %143) #19
  %145 = load i64, i64* %4, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %4, align 8
  %147 = icmp eq i64 %82, 0
  br i1 %147, label %201, label %148

148:                                              ; preds = %142
  %149 = inttoptr i64 %82 to %"class.std::__1::__tree_node.583"*
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %149, i64 0, i32 0, i32 2
  %151 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_end_node"* %151, null
  br i1 %152, label %198, label %153

153:                                              ; preds = %148
  %154 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 0, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, %154
  br i1 %157, label %158, label %177

158:                                              ; preds = %153
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %155, align 8
  %159 = bitcast %"class.std::__1::__tree_end_node"** %150 to %"class.std::__1::__tree_node.583"**
  %160 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %160, i64 0, i32 0, i32 1
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %198, label %164

164:                                              ; preds = %158, %173
  %165 = phi %"class.std::__1::__tree_node_base"* [ %174, %173 ], [ %162, %158 ]
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, null
  br i1 %168, label %169, label %173

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 1
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169, %164
  %174 = phi %"class.std::__1::__tree_node_base"* [ %167, %164 ], [ %171, %169 ]
  br label %164

175:                                              ; preds = %169
  %176 = bitcast %"class.std::__1::__tree_node_base"* %165 to %"class.std::__1::__tree_node.583"*
  br label %198

177:                                              ; preds = %153
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %178, align 8
  %179 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node.583"*
  br label %198

185:                                              ; preds = %177, %194
  %186 = phi %"class.std::__1::__tree_node_base"* [ %195, %194 ], [ %181, %177 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %194

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 1
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %190, %185
  %195 = phi %"class.std::__1::__tree_node_base"* [ %188, %185 ], [ %192, %190 ]
  br label %185

196:                                              ; preds = %190
  %197 = bitcast %"class.std::__1::__tree_node_base"* %186 to %"class.std::__1::__tree_node.583"*
  br label %198

198:                                              ; preds = %196, %183, %175, %158, %148
  %199 = phi %"class.std::__1::__tree_node.583"* [ %176, %175 ], [ %184, %183 ], [ %197, %196 ], [ null, %148 ], [ %160, %158 ]
  %200 = ptrtoint %"class.std::__1::__tree_node.583"* %199 to i64
  br label %201

201:                                              ; preds = %142, %198
  %202 = phi i64 [ 0, %142 ], [ %200, %198 ]
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 1, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %206, label %214

206:                                              ; preds = %201
  %207 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %209 = bitcast %"class.std::__1::__tree_end_node"* %208 to %"class.std::__1::__tree_end_node"**
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, %207
  br i1 %213, label %230, label %221

214:                                              ; preds = %201, %214
  %215 = phi %"class.std::__1::__tree_node_base"* [ %217, %214 ], [ %204, %201 ]
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, null
  br i1 %218, label %219, label %214

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0
  br label %230

221:                                              ; preds = %206, %221
  %222 = phi %"class.std::__1::__tree_end_node"** [ %225, %221 ], [ %209, %206 ]
  %223 = bitcast %"class.std::__1::__tree_end_node"** %222 to %"class.std::__1::__tree_node_base"**
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  %226 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %225, align 8
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %226, i64 0, i32 0
  %228 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %227, align 8
  %229 = icmp eq %"class.std::__1::__tree_node_base"* %228, %224
  br i1 %229, label %230, label %221

230:                                              ; preds = %221, %206, %219
  %231 = phi %"class.std::__1::__tree_end_node"* [ %220, %219 ], [ %210, %206 ], [ %226, %221 ]
  %232 = inttoptr i64 %202 to %"class.std::__1::__tree_node.583"*
  %233 = icmp ne %"class.std::__1::__tree_node.583"* %81, null
  %234 = icmp ne %"class.std::__1::__tree_end_node"* %231, %2
  %235 = and i1 %234, %233
  br i1 %235, label %80, label %236

236:                                              ; preds = %230
  %237 = inttoptr i64 %202 to %"class.std::__1::__tree_node.583"*
  br label %238

238:                                              ; preds = %72, %236
  %239 = phi %"class.std::__1::__tree_node.583"* [ %73, %72 ], [ %237, %236 ]
  %240 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %231, %236 ]
  %241 = phi %"class.std::__1::__tree_node.583"* [ %20, %72 ], [ %81, %236 ]
  %242 = phi i64 [ %74, %72 ], [ %202, %236 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"* %0, %"class.std::__1::__tree_node.583"* %241) #19
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %258, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %239, i64 0, i32 0, i32 2
  %246 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %245, align 8
  %247 = icmp eq %"class.std::__1::__tree_end_node"* %246, null
  br i1 %247, label %256, label %248

248:                                              ; preds = %244, %248
  %249 = phi %"class.std::__1::__tree_end_node"* [ %252, %248 ], [ %246, %244 ]
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 2
  %251 = bitcast %"class.std::__1::__tree_end_node"* %250 to %"class.std::__1::__tree_end_node"**
  %252 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %251, align 8
  %253 = icmp eq %"class.std::__1::__tree_end_node"* %252, null
  br i1 %253, label %254, label %248

254:                                              ; preds = %248
  %255 = bitcast %"class.std::__1::__tree_end_node"* %249 to %"class.std::__1::__tree_node.583"*
  br label %256

256:                                              ; preds = %254, %244
  %257 = phi %"class.std::__1::__tree_node.583"* [ %239, %244 ], [ %255, %254 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.36"* %0, %"class.std::__1::__tree_node.583"* %257) #19
  br label %258

258:                                              ; preds = %22, %256, %238, %3
  %259 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %240, %238 ], [ %240, %256 ], [ %1, %22 ]
  %260 = icmp eq %"class.std::__1::__tree_end_node"* %259, %2
  br i1 %260, label %296, label %261

261:                                              ; preds = %258, %293
  %262 = phi %"class.std::__1::__tree_end_node"* [ %294, %293 ], [ %259, %258 ]
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 4
  %264 = bitcast %"class.std::__1::__tree_end_node"* %263 to %"struct.std::__1::pair.533"*
  %265 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKmSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_(%"class.std::__1::__tree.36"* %0, %"struct.std::__1::pair.533"* dereferenceable(32) %264) #19
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, null
  br i1 %268, label %269, label %277

269:                                              ; preds = %261
  %270 = bitcast %"class.std::__1::__tree_end_node"* %262 to %"class.std::__1::__tree_node_base"*
  %271 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 2
  %272 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.std::__1::__tree_end_node"**
  %273 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %273, i64 0, i32 0
  %275 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %274, align 8
  %276 = icmp eq %"class.std::__1::__tree_node_base"* %275, %270
  br i1 %276, label %293, label %284

277:                                              ; preds = %261, %277
  %278 = phi %"class.std::__1::__tree_node_base"* [ %280, %277 ], [ %267, %261 ]
  %279 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %278, i64 0, i32 0, i32 0
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %279, align 8
  %281 = icmp eq %"class.std::__1::__tree_node_base"* %280, null
  br i1 %281, label %282, label %277

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %278, i64 0, i32 0
  br label %293

284:                                              ; preds = %269, %284
  %285 = phi %"class.std::__1::__tree_end_node"** [ %288, %284 ], [ %272, %269 ]
  %286 = bitcast %"class.std::__1::__tree_end_node"** %285 to %"class.std::__1::__tree_node_base"**
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 2
  %289 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %288, align 8
  %290 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %289, i64 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, %287
  br i1 %292, label %293, label %284

293:                                              ; preds = %284, %269, %282
  %294 = phi %"class.std::__1::__tree_end_node"* [ %283, %282 ], [ %273, %269 ], [ %289, %284 ]
  %295 = icmp eq %"class.std::__1::__tree_end_node"* %294, %2
  br i1 %295, label %296, label %261

296:                                              ; preds = %293, %258
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKmSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_(%"class.std::__1::__tree.36"*, %"struct.std::__1::pair.533"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #20, !noalias !336
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds %"struct.std::__1::pair.533", %"struct.std::__1::pair.533"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !336
  store i64 %7, i64* %5, align 8, !noalias !336
  %8 = getelementptr inbounds i8, i8* %3, i64 40
  %9 = getelementptr inbounds %"struct.std::__1::pair.533", %"struct.std::__1::pair.533"* %1, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #19, !noalias !336
  %10 = getelementptr inbounds %"struct.std::__1::pair.533", %"struct.std::__1::pair.533"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast i64** %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !336
  %13 = bitcast %"class.base::internal::flat_tree.517"* %9 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !336
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %16, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast i8* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #21, !noalias !336
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #20, !noalias !336
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds i8, i8* %3, i64 48
  %26 = bitcast i8* %25 to i8**
  store i8* %23, i8** %26, align 8, !noalias !336
  %27 = bitcast i8* %8 to i8**
  store i8* %23, i8** %27, align 8, !noalias !336
  %28 = getelementptr inbounds i64, i64* %24, i64 %16
  %29 = getelementptr inbounds i8, i8* %3, i64 56
  %30 = bitcast i8* %29 to i64**
  store i64* %28, i64** %30, align 8, !noalias !336
  %31 = bitcast i8* %25 to i64*
  %32 = ptrtoint i8* %23 to i64
  %33 = icmp sgt i64 %15, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %22
  %35 = lshr exact i64 %15, 3
  %36 = inttoptr i64 %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %36, i64 %15, i1 false) #19, !noalias !336
  %37 = getelementptr inbounds i64, i64* %24, i64 %35
  %38 = ptrtoint i64* %37 to i64
  br label %39

39:                                               ; preds = %34, %22
  %40 = phi i64 [ %38, %34 ], [ %32, %22 ]
  store i64 %40, i64* %31, align 8, !noalias !336
  br label %41

41:                                               ; preds = %2, %39
  %42 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node.583"**
  %44 = load %"class.std::__1::__tree_node.583"*, %"class.std::__1::__tree_node.583"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.583"* %44, null
  br i1 %45, label %68, label %46

46:                                               ; preds = %41, %65
  %47 = phi %"class.std::__1::__tree_node.583"* [ %67, %65 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %47, i64 0, i32 1, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %7, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %65

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %47, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %47, i64 0, i32 0, i32 0
  br label %70

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %47, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %47, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.583", %"class.std::__1::__tree_node.583"* %47, i64 0, i32 0, i32 0
  br label %70

65:                                               ; preds = %58, %51
  %66 = phi %"class.std::__1::__tree_node_base"* [ %53, %51 ], [ %60, %58 ]
  %67 = bitcast %"class.std::__1::__tree_node_base"* %66 to %"class.std::__1::__tree_node.583"*
  br label %46

68:                                               ; preds = %41
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  br label %70

70:                                               ; preds = %55, %62, %68
  %71 = phi %"class.std::__1::__tree_end_node"* [ %42, %68 ], [ %57, %55 ], [ %64, %62 ]
  %72 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %56, %55 ], [ %63, %62 ]
  %73 = bitcast i8* %3 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds i8, i8* %3, i64 16
  %75 = bitcast i8* %74 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %75, align 8
  %76 = bitcast %"class.std::__1::__tree_node_base"** %72 to i8**
  store i8* %3, i8** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %70
  %83 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %84 = bitcast %"class.std::__1::__tree.36"* %0 to i64*
  store i64 %83, i64* %84, align 8
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  br label %86

86:                                               ; preds = %82, %70
  %87 = phi %"class.std::__1::__tree_node_base"* [ %73, %70 ], [ %85, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %89, %"class.std::__1::__tree_node_base"* %87) #19
  %90 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %90, align 8
  %93 = bitcast i8* %3 to %"class.std::__1::__tree_end_node"*
  ret %"class.std::__1::__tree_end_node"* %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE14__assign_multiINS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEEEEvT_SQ_(%"class.std::__1::__tree.47"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %258, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.47"* %0 to %"class.std::__1::__tree_node.585"**
  %10 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #19
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node.585"*
  %20 = select i1 %18, %"class.std::__1::__tree_node.585"* %10, %"class.std::__1::__tree_node.585"* %19
  %21 = icmp eq %"class.std::__1::__tree_node.585"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"* %0, %"class.std::__1::__tree_node.585"* %20) #19
  br label %258

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node.585"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node.585"**
  %34 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node.585"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node.585"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node.585"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node.585"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node.585"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %238, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.585"**
  %78 = bitcast %"class.std::__1::__tree.47"* %0 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %76, %230
  %81 = phi %"class.std::__1::__tree_node.585"* [ %73, %76 ], [ %232, %230 ]
  %82 = phi i64 [ %74, %76 ], [ %202, %230 ]
  %83 = phi %"class.std::__1::__tree_node.585"* [ %20, %76 ], [ %81, %230 ]
  %84 = phi %"class.std::__1::__tree_end_node"* [ %1, %76 ], [ %231, %230 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"struct.std::__1::__value_type.586"*
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %83, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::__value_type.586", %"struct.std::__1::__value_type.586"* %87, i64 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::__tree_end_node"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  %91 = icmp eq %"struct.std::__1::__value_type.586"* %87, %86
  br i1 %91, label %100, label %92

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %83, i64 0, i32 1, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 5
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to i64**
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 6
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to i64**
  %99 = load i64*, i64** %98, align 8
  tail call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.420"* %93, i64* %96, i64* %99) #19
  br label %100

100:                                              ; preds = %80, %92
  %101 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %77, align 8
  %102 = icmp eq %"class.std::__1::__tree_node.585"* %101, null
  br i1 %102, label %128, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %83, i64 0, i32 1, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  br label %106

106:                                              ; preds = %125, %103
  %107 = phi %"class.std::__1::__tree_node.585"* [ %127, %125 ], [ %101, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %107, i64 0, i32 1, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = icmp slt i64 %105, %109
  br i1 %110, label %111, label %118

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %107, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %125

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %107, i64 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %107, i64 0, i32 0, i32 0
  br label %128

118:                                              ; preds = %106
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %107, i64 0, i32 0, i32 1
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %107, i64 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %107, i64 0, i32 0, i32 0
  br label %128

125:                                              ; preds = %118, %111
  %126 = phi %"class.std::__1::__tree_node_base"* [ %113, %111 ], [ %120, %118 ]
  %127 = bitcast %"class.std::__1::__tree_node_base"* %126 to %"class.std::__1::__tree_node.585"*
  br label %106

128:                                              ; preds = %100, %122, %115
  %129 = phi %"class.std::__1::__tree_end_node"* [ %117, %115 ], [ %124, %122 ], [ %11, %100 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %116, %115 ], [ %123, %122 ], [ %12, %100 ]
  %131 = bitcast %"class.std::__1::__tree_node.585"* %83 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %83, i64 0, i32 0, i32 2
  %133 = bitcast %"class.std::__1::__tree_node.585"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = bitcast %"class.std::__1::__tree_node_base"** %130 to %"class.std::__1::__tree_node.585"**
  store %"class.std::__1::__tree_node.585"* %83, %"class.std::__1::__tree_node.585"** %134, align 8
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %128
  %140 = ptrtoint %"class.std::__1::__tree_node_base"* %137 to i64
  store i64 %140, i64* %78, align 8
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  br label %142

142:                                              ; preds = %128, %139
  %143 = phi %"class.std::__1::__tree_node_base"* [ %131, %128 ], [ %141, %139 ]
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %144, %"class.std::__1::__tree_node_base"* %143) #19
  %145 = load i64, i64* %4, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %4, align 8
  %147 = icmp eq i64 %82, 0
  br i1 %147, label %201, label %148

148:                                              ; preds = %142
  %149 = inttoptr i64 %82 to %"class.std::__1::__tree_node.585"*
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %149, i64 0, i32 0, i32 2
  %151 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_end_node"* %151, null
  br i1 %152, label %198, label %153

153:                                              ; preds = %148
  %154 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 0, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, %154
  br i1 %157, label %158, label %177

158:                                              ; preds = %153
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %155, align 8
  %159 = bitcast %"class.std::__1::__tree_end_node"** %150 to %"class.std::__1::__tree_node.585"**
  %160 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %160, i64 0, i32 0, i32 1
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %198, label %164

164:                                              ; preds = %158, %173
  %165 = phi %"class.std::__1::__tree_node_base"* [ %174, %173 ], [ %162, %158 ]
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, null
  br i1 %168, label %169, label %173

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 1
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169, %164
  %174 = phi %"class.std::__1::__tree_node_base"* [ %167, %164 ], [ %171, %169 ]
  br label %164

175:                                              ; preds = %169
  %176 = bitcast %"class.std::__1::__tree_node_base"* %165 to %"class.std::__1::__tree_node.585"*
  br label %198

177:                                              ; preds = %153
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %178, align 8
  %179 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node.585"*
  br label %198

185:                                              ; preds = %177, %194
  %186 = phi %"class.std::__1::__tree_node_base"* [ %195, %194 ], [ %181, %177 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %194

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 1
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %190, %185
  %195 = phi %"class.std::__1::__tree_node_base"* [ %188, %185 ], [ %192, %190 ]
  br label %185

196:                                              ; preds = %190
  %197 = bitcast %"class.std::__1::__tree_node_base"* %186 to %"class.std::__1::__tree_node.585"*
  br label %198

198:                                              ; preds = %196, %183, %175, %158, %148
  %199 = phi %"class.std::__1::__tree_node.585"* [ %176, %175 ], [ %184, %183 ], [ %197, %196 ], [ null, %148 ], [ %160, %158 ]
  %200 = ptrtoint %"class.std::__1::__tree_node.585"* %199 to i64
  br label %201

201:                                              ; preds = %142, %198
  %202 = phi i64 [ 0, %142 ], [ %200, %198 ]
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 1, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %206, label %214

206:                                              ; preds = %201
  %207 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %209 = bitcast %"class.std::__1::__tree_end_node"* %208 to %"class.std::__1::__tree_end_node"**
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, %207
  br i1 %213, label %230, label %221

214:                                              ; preds = %201, %214
  %215 = phi %"class.std::__1::__tree_node_base"* [ %217, %214 ], [ %204, %201 ]
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, null
  br i1 %218, label %219, label %214

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0
  br label %230

221:                                              ; preds = %206, %221
  %222 = phi %"class.std::__1::__tree_end_node"** [ %225, %221 ], [ %209, %206 ]
  %223 = bitcast %"class.std::__1::__tree_end_node"** %222 to %"class.std::__1::__tree_node_base"**
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  %226 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %225, align 8
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %226, i64 0, i32 0
  %228 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %227, align 8
  %229 = icmp eq %"class.std::__1::__tree_node_base"* %228, %224
  br i1 %229, label %230, label %221

230:                                              ; preds = %221, %206, %219
  %231 = phi %"class.std::__1::__tree_end_node"* [ %220, %219 ], [ %210, %206 ], [ %226, %221 ]
  %232 = inttoptr i64 %202 to %"class.std::__1::__tree_node.585"*
  %233 = icmp ne %"class.std::__1::__tree_node.585"* %81, null
  %234 = icmp ne %"class.std::__1::__tree_end_node"* %231, %2
  %235 = and i1 %234, %233
  br i1 %235, label %80, label %236

236:                                              ; preds = %230
  %237 = inttoptr i64 %202 to %"class.std::__1::__tree_node.585"*
  br label %238

238:                                              ; preds = %72, %236
  %239 = phi %"class.std::__1::__tree_node.585"* [ %73, %72 ], [ %237, %236 ]
  %240 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %231, %236 ]
  %241 = phi %"class.std::__1::__tree_node.585"* [ %20, %72 ], [ %81, %236 ]
  %242 = phi i64 [ %74, %72 ], [ %202, %236 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"* %0, %"class.std::__1::__tree_node.585"* %241) #19
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %258, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %239, i64 0, i32 0, i32 2
  %246 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %245, align 8
  %247 = icmp eq %"class.std::__1::__tree_end_node"* %246, null
  br i1 %247, label %256, label %248

248:                                              ; preds = %244, %248
  %249 = phi %"class.std::__1::__tree_end_node"* [ %252, %248 ], [ %246, %244 ]
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 2
  %251 = bitcast %"class.std::__1::__tree_end_node"* %250 to %"class.std::__1::__tree_end_node"**
  %252 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %251, align 8
  %253 = icmp eq %"class.std::__1::__tree_end_node"* %252, null
  br i1 %253, label %254, label %248

254:                                              ; preds = %248
  %255 = bitcast %"class.std::__1::__tree_end_node"* %249 to %"class.std::__1::__tree_node.585"*
  br label %256

256:                                              ; preds = %254, %244
  %257 = phi %"class.std::__1::__tree_node.585"* [ %239, %244 ], [ %255, %254 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.47"* %0, %"class.std::__1::__tree_node.585"* %257) #19
  br label %258

258:                                              ; preds = %22, %256, %238, %3
  %259 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %240, %238 ], [ %240, %256 ], [ %1, %22 ]
  %260 = icmp eq %"class.std::__1::__tree_end_node"* %259, %2
  br i1 %260, label %296, label %261

261:                                              ; preds = %258, %293
  %262 = phi %"class.std::__1::__tree_end_node"* [ %294, %293 ], [ %259, %258 ]
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 4
  %264 = bitcast %"class.std::__1::__tree_end_node"* %263 to %"struct.std::__1::pair.587"*
  %265 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKlSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_(%"class.std::__1::__tree.47"* %0, %"struct.std::__1::pair.587"* dereferenceable(32) %264) #19
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, null
  br i1 %268, label %269, label %277

269:                                              ; preds = %261
  %270 = bitcast %"class.std::__1::__tree_end_node"* %262 to %"class.std::__1::__tree_node_base"*
  %271 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 2
  %272 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.std::__1::__tree_end_node"**
  %273 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %273, i64 0, i32 0
  %275 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %274, align 8
  %276 = icmp eq %"class.std::__1::__tree_node_base"* %275, %270
  br i1 %276, label %293, label %284

277:                                              ; preds = %261, %277
  %278 = phi %"class.std::__1::__tree_node_base"* [ %280, %277 ], [ %267, %261 ]
  %279 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %278, i64 0, i32 0, i32 0
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %279, align 8
  %281 = icmp eq %"class.std::__1::__tree_node_base"* %280, null
  br i1 %281, label %282, label %277

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %278, i64 0, i32 0
  br label %293

284:                                              ; preds = %269, %284
  %285 = phi %"class.std::__1::__tree_end_node"** [ %288, %284 ], [ %272, %269 ]
  %286 = bitcast %"class.std::__1::__tree_end_node"** %285 to %"class.std::__1::__tree_node_base"**
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 2
  %289 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %288, align 8
  %290 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %289, i64 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, %287
  br i1 %292, label %293, label %284

293:                                              ; preds = %284, %269, %282
  %294 = phi %"class.std::__1::__tree_end_node"* [ %283, %282 ], [ %273, %269 ], [ %289, %284 ]
  %295 = icmp eq %"class.std::__1::__tree_end_node"* %294, %2
  br i1 %295, label %296, label %261

296:                                              ; preds = %293, %258
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE15__emplace_multiIJRKNS_4pairIKlSC_EEEEENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEEDpOT_(%"class.std::__1::__tree.47"*, %"struct.std::__1::pair.587"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #20, !noalias !339
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds %"struct.std::__1::pair.587", %"struct.std::__1::pair.587"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !339
  store i64 %7, i64* %5, align 8, !noalias !339
  %8 = getelementptr inbounds i8, i8* %3, i64 40
  %9 = getelementptr inbounds %"struct.std::__1::pair.587", %"struct.std::__1::pair.587"* %1, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #19, !noalias !339
  %10 = getelementptr inbounds %"struct.std::__1::pair.587", %"struct.std::__1::pair.587"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast i64** %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !339
  %13 = bitcast %"class.base::internal::flat_tree.520"* %9 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !339
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %16, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast i8* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #21, !noalias !339
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #20, !noalias !339
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds i8, i8* %3, i64 48
  %26 = bitcast i8* %25 to i8**
  store i8* %23, i8** %26, align 8, !noalias !339
  %27 = bitcast i8* %8 to i8**
  store i8* %23, i8** %27, align 8, !noalias !339
  %28 = getelementptr inbounds i64, i64* %24, i64 %16
  %29 = getelementptr inbounds i8, i8* %3, i64 56
  %30 = bitcast i8* %29 to i64**
  store i64* %28, i64** %30, align 8, !noalias !339
  %31 = bitcast i8* %25 to i64*
  %32 = ptrtoint i8* %23 to i64
  %33 = icmp sgt i64 %15, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %22
  %35 = lshr exact i64 %15, 3
  %36 = inttoptr i64 %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %36, i64 %15, i1 false) #19, !noalias !339
  %37 = getelementptr inbounds i64, i64* %24, i64 %35
  %38 = ptrtoint i64* %37 to i64
  br label %39

39:                                               ; preds = %34, %22
  %40 = phi i64 [ %38, %34 ], [ %32, %22 ]
  store i64 %40, i64* %31, align 8, !noalias !339
  br label %41

41:                                               ; preds = %2, %39
  %42 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node.585"**
  %44 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.585"* %44, null
  br i1 %45, label %68, label %46

46:                                               ; preds = %41, %65
  %47 = phi %"class.std::__1::__tree_node.585"* [ %67, %65 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %47, i64 0, i32 1, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %7, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %65

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %47, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %47, i64 0, i32 0, i32 0
  br label %70

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %47, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %47, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %47, i64 0, i32 0, i32 0
  br label %70

65:                                               ; preds = %58, %51
  %66 = phi %"class.std::__1::__tree_node_base"* [ %53, %51 ], [ %60, %58 ]
  %67 = bitcast %"class.std::__1::__tree_node_base"* %66 to %"class.std::__1::__tree_node.585"*
  br label %46

68:                                               ; preds = %41
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  br label %70

70:                                               ; preds = %55, %62, %68
  %71 = phi %"class.std::__1::__tree_end_node"* [ %42, %68 ], [ %57, %55 ], [ %64, %62 ]
  %72 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %56, %55 ], [ %63, %62 ]
  %73 = bitcast i8* %3 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds i8, i8* %3, i64 16
  %75 = bitcast i8* %74 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %75, align 8
  %76 = bitcast %"class.std::__1::__tree_node_base"** %72 to i8**
  store i8* %3, i8** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %70
  %83 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %84 = bitcast %"class.std::__1::__tree.47"* %0 to i64*
  store i64 %83, i64* %84, align 8
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  br label %86

86:                                               ; preds = %82, %70
  %87 = phi %"class.std::__1::__tree_node_base"* [ %73, %70 ], [ %85, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %89, %"class.std::__1::__tree_node_base"* %87) #19
  %90 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %90, align 8
  %93 = bitcast i8* %3 to %"class.std::__1::__tree_end_node"*
  ret %"class.std::__1::__tree_end_node"* %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEEEEvT_SM_(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::__hash_node_base"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %78, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = add i64 %6, -1
  %11 = and i64 %6, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = sub i64 %6, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %29, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %30, %15 ]
  %18 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %18, i64 %16
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %19, align 8
  %20 = or i64 %16, 1
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %20
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  %23 = or i64 %16, 2
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %23
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %25, align 8
  %26 = or i64 %16, 3
  %27 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, i64 %26
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %28, align 8
  %29 = add nuw i64 %16, 4
  %30 = add i64 %17, -4
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %15

32:                                               ; preds = %15, %8
  %33 = phi i64 [ 0, %8 ], [ %29, %15 ]
  %34 = icmp eq i64 %11, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %11, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !342

43:                                               ; preds = %35, %32
  %44 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %78, label %48

48:                                               ; preds = %43, %53
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %65, %53 ], [ %46, %43 ]
  %50 = phi i64 [ %68, %53 ], [ %4, %43 ]
  %51 = inttoptr i64 %50 to %"struct.std::__1::__hash_node_base"*
  %52 = icmp eq %"struct.std::__1::__hash_node_base"* %51, %2
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %49 to %"struct.std::__1::__hash_node"*
  %55 = inttoptr i64 %50 to %"struct.std::__1::__hash_node"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 3
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to %struct.HistoryInfoMapValue*
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %57, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2, i32 0, i32 1
  %63 = tail call dereferenceable(208) %struct.HistoryInfoMapValue* @_ZN19HistoryInfoMapValueaSERKS_(%struct.HistoryInfoMapValue* %59, %struct.HistoryInfoMapValue* dereferenceable(208) %62) #19
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %64, align 8
  %66 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE19__node_insert_multiEPNS_11__hash_nodeIS3_PvEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node"* %54)
  %67 = inttoptr i64 %50 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %65, null
  br i1 %69, label %78, label %48

70:                                               ; preds = %48, %70
  %71 = phi %"struct.std::__1::__hash_node_base"* [ %73, %70 ], [ %49, %48 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %71, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %71, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to %struct.HistoryInfoMapValue*
  tail call void @_ZN19HistoryInfoMapValueD1Ev(%struct.HistoryInfoMapValue* %75) #19
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i8*
  tail call void @_ZdlPv(i8* %76) #20
  %77 = icmp eq %"struct.std::__1::__hash_node_base"* %73, null
  br i1 %77, label %78, label %70

78:                                               ; preds = %53, %70, %43, %3
  %79 = phi i64 [ %4, %3 ], [ %4, %43 ], [ %50, %70 ], [ %68, %53 ]
  %80 = inttoptr i64 %79 to %"struct.std::__1::__hash_node_base"*
  %81 = icmp eq %"struct.std::__1::__hash_node_base"* %80, %2
  br i1 %81, label %103, label %82

82:                                               ; preds = %78, %82
  %83 = phi i64 [ %100, %82 ], [ %79, %78 ]
  %84 = inttoptr i64 %83 to %"struct.std::__1::__hash_node"*
  %85 = tail call i8* @_Znwm(i64 232) #20, !noalias !343
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8* %86 to i64*
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %84, i64 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8, !noalias !343
  store i64 %89, i64* %87, align 8, !noalias !343
  %90 = getelementptr inbounds i8, i8* %85, i64 24
  %91 = bitcast i8* %90 to %struct.HistoryInfoMapValue*
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %84, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN19HistoryInfoMapValueC1ERKS_(%struct.HistoryInfoMapValue* %91, %struct.HistoryInfoMapValue* dereferenceable(208) %92) #19, !noalias !343
  %93 = load i64, i64* %87, align 8, !noalias !343
  %94 = getelementptr inbounds i8, i8* %85, i64 8
  %95 = bitcast i8* %94 to i64*
  store i64 %93, i64* %95, align 8, !noalias !343
  %96 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %96, align 8, !noalias !343
  %97 = bitcast i8* %85 to %"struct.std::__1::__hash_node"*
  %98 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE19__node_insert_multiEPNS_11__hash_nodeIS3_PvEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node"* nonnull %97) #19
  %99 = inttoptr i64 %83 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %100 to %"struct.std::__1::__hash_node_base"*
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %101, %2
  br i1 %102, label %103, label %82

103:                                              ; preds = %82, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE19__node_insert_multiEPNS_11__hash_nodeIS3_PvEE(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %3, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 1
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0
  %8 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE27__node_insert_multi_prepareEmRS3_(%"class.std::__1::__hash_table"* %0, i64 %5, %"struct.std::__1::__hash_value_type"* dereferenceable(216) %3)
  %9 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %6, align 8
  %12 = tail call i64 @llvm.ctpop.i64(i64 %10) #19, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = add i64 %10, -1
  %16 = and i64 %15, %11
  br label %21

17:                                               ; preds = %2
  %18 = icmp ult i64 %11, %10
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %11, %10
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %11, %17 ]
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %23, label %24, label %51

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %30 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %28, i64* %30, align 8
  store %"struct.std::__1::__hash_node_base"* %7, %"struct.std::__1::__hash_node_base"** %26, align 8
  %31 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, i64 %22
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %33, align 8
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %77, label %36

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  br i1 %13, label %43, label %40

40:                                               ; preds = %36
  %41 = add i64 %10, -1
  %42 = and i64 %39, %41
  br label %47

43:                                               ; preds = %36
  %44 = icmp ult i64 %39, %10
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %39, %10
  br label %47

47:                                               ; preds = %45, %43, %40
  %48 = phi i64 [ %42, %40 ], [ %46, %45 ], [ %39, %43 ]
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* %7, %"struct.std::__1::__hash_node_base"** %50, align 8
  br label %77

51:                                               ; preds = %21
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %8, i64 0, i32 0
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %8 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %56 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %54, i64* %56, align 8
  store %"struct.std::__1::__hash_node_base"* %7, %"struct.std::__1::__hash_node_base"** %52, align 8
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %77, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %13, label %66, label %63

63:                                               ; preds = %59
  %64 = add i64 %10, -1
  %65 = and i64 %62, %64
  br label %70

66:                                               ; preds = %59
  %67 = icmp ult i64 %62, %10
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %62, %10
  br label %70

70:                                               ; preds = %68, %66, %63
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %62, %66 ]
  %72 = icmp eq i64 %71, %22
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, i64 %71
  store %"struct.std::__1::__hash_node_base"* %7, %"struct.std::__1::__hash_node_base"** %76, align 8
  br label %77

77:                                               ; preds = %24, %47, %51, %70, %73
  %78 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  ret %"struct.std::__1::__hash_node_base"* %7
}

declare dereferenceable(208) %struct.HistoryInfoMapValue* @_ZN19HistoryInfoMapValueaSERKS_(%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue* dereferenceable(208)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE27__node_insert_multi_prepareEmRS3_(%"class.std::__1::__hash_table"*, i64, %"struct.std::__1::__hash_value_type"* dereferenceable(216)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #19, !range !3
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #19
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #19, !range !3
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  br label %53

53:                                               ; preds = %49, %82
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %57, %82 ], [ %47, %49 ]
  %55 = phi i8 [ %87, %82 ], [ 0, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %34, label %65, label %63

63:                                               ; preds = %59
  %64 = and i64 %62, %50
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %62, %32
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %62, %32
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %62, %65 ]
  %71 = icmp eq i64 %70, %43
  br i1 %71, label %72, label %88

72:                                               ; preds = %69
  %73 = and i8 %55, 1
  %74 = icmp eq i8 %73, 0
  %75 = zext i8 %73 to i32
  %76 = icmp eq i64 %62, %1
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, %52
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i1 [ false, %72 ], [ %81, %77 ]
  %84 = zext i1 %83 to i32
  %85 = icmp eq i32 %75, %84
  %86 = or i1 %74, %85
  %87 = select i1 %85, i8 %55, i8 1
  br i1 %86, label %53, label %88

88:                                               ; preds = %82, %53, %69, %42
  %89 = phi %"struct.std::__1::__hash_node_base"* [ null, %42 ], [ %54, %69 ], [ %54, %53 ], [ %54, %82 ]
  ret %"struct.std::__1::__hash_node_base"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #19
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #19, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #19
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #19, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #19
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #21
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #20
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #20
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !346

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #19, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #20
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #16

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #16

declare void @_ZN19HistoryInfoMapValueC1ERKS_(%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue* dereferenceable(208)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SI_(%"class.std::__1::__tree.75"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %249, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.75"* %0 to %"class.std::__1::__tree_node.588"**
  %10 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #19
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node.588"*
  %20 = select i1 %18, %"class.std::__1::__tree_node.588"* %10, %"class.std::__1::__tree_node.588"* %19
  %21 = icmp eq %"class.std::__1::__tree_node.588"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"* %0, %"class.std::__1::__tree_node.588"* %20) #19
  br label %249

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node.588"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node.588"**
  %34 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node.588"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node.588"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node.588"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node.588"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node.588"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %229, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.588"**
  %78 = bitcast %"class.std::__1::__tree.75"* %0 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %76, %221
  %81 = phi %"class.std::__1::__tree_node.588"* [ %73, %76 ], [ %223, %221 ]
  %82 = phi i64 [ %74, %76 ], [ %193, %221 ]
  %83 = phi %"class.std::__1::__tree_node.588"* [ %20, %76 ], [ %81, %221 ]
  %84 = phi %"class.std::__1::__tree_end_node"* [ %1, %76 ], [ %222, %221 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %86 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %83, i64 0, i32 1, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %83, i64 0, i32 1, i32 0, i32 1
  %88 = bitcast %"class.std::__1::__tree_end_node"* %85 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 5
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %struct.RowWordStarts*
  %92 = tail call dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSERKS_(%struct.RowWordStarts* %87, %struct.RowWordStarts* dereferenceable(48) %91) #19
  %93 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %77, align 8
  %94 = icmp eq %"class.std::__1::__tree_node.588"* %93, null
  br i1 %94, label %119, label %95

95:                                               ; preds = %80
  %96 = load i64, i64* %86, align 8
  br label %97

97:                                               ; preds = %116, %95
  %98 = phi %"class.std::__1::__tree_node.588"* [ %118, %116 ], [ %93, %95 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %98, i64 0, i32 1, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp slt i64 %96, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %98, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %116

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %98, i64 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %98, i64 0, i32 0, i32 0
  br label %119

109:                                              ; preds = %97
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %98, i64 0, i32 0, i32 1
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %113, label %116

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %98, i64 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %98, i64 0, i32 0, i32 0
  br label %119

116:                                              ; preds = %109, %102
  %117 = phi %"class.std::__1::__tree_node_base"* [ %104, %102 ], [ %111, %109 ]
  %118 = bitcast %"class.std::__1::__tree_node_base"* %117 to %"class.std::__1::__tree_node.588"*
  br label %97

119:                                              ; preds = %80, %113, %106
  %120 = phi %"class.std::__1::__tree_end_node"* [ %108, %106 ], [ %115, %113 ], [ %11, %80 ]
  %121 = phi %"class.std::__1::__tree_node_base"** [ %107, %106 ], [ %114, %113 ], [ %12, %80 ]
  %122 = bitcast %"class.std::__1::__tree_node.588"* %83 to %"class.std::__1::__tree_node_base"*
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %83, i64 0, i32 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_node.588"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %123, align 8
  %125 = bitcast %"class.std::__1::__tree_node_base"** %121 to %"class.std::__1::__tree_node.588"**
  store %"class.std::__1::__tree_node.588"* %83, %"class.std::__1::__tree_node.588"** %125, align 8
  %126 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %119
  %131 = ptrtoint %"class.std::__1::__tree_node_base"* %128 to i64
  store i64 %131, i64* %78, align 8
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %133

133:                                              ; preds = %119, %130
  %134 = phi %"class.std::__1::__tree_node_base"* [ %122, %119 ], [ %132, %130 ]
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %135, %"class.std::__1::__tree_node_base"* %134) #19
  %136 = load i64, i64* %4, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %4, align 8
  %138 = icmp eq i64 %82, 0
  br i1 %138, label %192, label %139

139:                                              ; preds = %133
  %140 = inttoptr i64 %82 to %"class.std::__1::__tree_node.588"*
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %140, i64 0, i32 0, i32 2
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_end_node"* %142, null
  br i1 %143, label %189, label %144

144:                                              ; preds = %139
  %145 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, %145
  br i1 %148, label %149, label %168

149:                                              ; preds = %144
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %146, align 8
  %150 = bitcast %"class.std::__1::__tree_end_node"** %141 to %"class.std::__1::__tree_node.588"**
  %151 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %151, i64 0, i32 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %189, label %155

155:                                              ; preds = %149, %164
  %156 = phi %"class.std::__1::__tree_node_base"* [ %165, %164 ], [ %153, %149 ]
  %157 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, null
  br i1 %159, label %160, label %164

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 1
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %160, %155
  %165 = phi %"class.std::__1::__tree_node_base"* [ %158, %155 ], [ %162, %160 ]
  br label %155

166:                                              ; preds = %160
  %167 = bitcast %"class.std::__1::__tree_node_base"* %156 to %"class.std::__1::__tree_node.588"*
  br label %189

168:                                              ; preds = %144
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %169, align 8
  %170 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %141, align 8
  %171 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %170, i64 0, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"class.std::__1::__tree_node.588"*
  br label %189

176:                                              ; preds = %168, %185
  %177 = phi %"class.std::__1::__tree_node_base"* [ %186, %185 ], [ %172, %168 ]
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, null
  br i1 %180, label %181, label %185

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 1
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %182, align 8
  %184 = icmp eq %"class.std::__1::__tree_node_base"* %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %181, %176
  %186 = phi %"class.std::__1::__tree_node_base"* [ %179, %176 ], [ %183, %181 ]
  br label %176

187:                                              ; preds = %181
  %188 = bitcast %"class.std::__1::__tree_node_base"* %177 to %"class.std::__1::__tree_node.588"*
  br label %189

189:                                              ; preds = %187, %174, %166, %149, %139
  %190 = phi %"class.std::__1::__tree_node.588"* [ %167, %166 ], [ %175, %174 ], [ %188, %187 ], [ null, %139 ], [ %151, %149 ]
  %191 = ptrtoint %"class.std::__1::__tree_node.588"* %190 to i64
  br label %192

192:                                              ; preds = %133, %189
  %193 = phi i64 [ 0, %133 ], [ %191, %189 ]
  %194 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 1, i32 0
  %195 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %194, align 8
  %196 = icmp eq %"class.std::__1::__tree_node_base"* %195, null
  br i1 %196, label %197, label %205

197:                                              ; preds = %192
  %198 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %200 = bitcast %"class.std::__1::__tree_end_node"* %199 to %"class.std::__1::__tree_end_node"**
  %201 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %200, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 0, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, %198
  br i1 %204, label %221, label %212

205:                                              ; preds = %192, %205
  %206 = phi %"class.std::__1::__tree_node_base"* [ %208, %205 ], [ %195, %192 ]
  %207 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %206, i64 0, i32 0, i32 0
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node_base"* %208, null
  br i1 %209, label %210, label %205

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %206, i64 0, i32 0
  br label %221

212:                                              ; preds = %197, %212
  %213 = phi %"class.std::__1::__tree_end_node"** [ %216, %212 ], [ %200, %197 ]
  %214 = bitcast %"class.std::__1::__tree_end_node"** %213 to %"class.std::__1::__tree_node_base"**
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 2
  %217 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %216, align 8
  %218 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %217, i64 0, i32 0
  %219 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %218, align 8
  %220 = icmp eq %"class.std::__1::__tree_node_base"* %219, %215
  br i1 %220, label %221, label %212

221:                                              ; preds = %212, %197, %210
  %222 = phi %"class.std::__1::__tree_end_node"* [ %211, %210 ], [ %201, %197 ], [ %217, %212 ]
  %223 = inttoptr i64 %193 to %"class.std::__1::__tree_node.588"*
  %224 = icmp ne %"class.std::__1::__tree_node.588"* %81, null
  %225 = icmp ne %"class.std::__1::__tree_end_node"* %222, %2
  %226 = and i1 %225, %224
  br i1 %226, label %80, label %227

227:                                              ; preds = %221
  %228 = inttoptr i64 %193 to %"class.std::__1::__tree_node.588"*
  br label %229

229:                                              ; preds = %72, %227
  %230 = phi %"class.std::__1::__tree_node.588"* [ %73, %72 ], [ %228, %227 ]
  %231 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %222, %227 ]
  %232 = phi %"class.std::__1::__tree_node.588"* [ %20, %72 ], [ %81, %227 ]
  %233 = phi i64 [ %74, %72 ], [ %193, %227 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"* %0, %"class.std::__1::__tree_node.588"* %232) #19
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %249, label %235

235:                                              ; preds = %229
  %236 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %230, i64 0, i32 0, i32 2
  %237 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_end_node"* %237, null
  br i1 %238, label %247, label %239

239:                                              ; preds = %235, %239
  %240 = phi %"class.std::__1::__tree_end_node"* [ %243, %239 ], [ %237, %235 ]
  %241 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %240, i64 2
  %242 = bitcast %"class.std::__1::__tree_end_node"* %241 to %"class.std::__1::__tree_end_node"**
  %243 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %242, align 8
  %244 = icmp eq %"class.std::__1::__tree_end_node"* %243, null
  br i1 %244, label %245, label %239

245:                                              ; preds = %239
  %246 = bitcast %"class.std::__1::__tree_end_node"* %240 to %"class.std::__1::__tree_node.588"*
  br label %247

247:                                              ; preds = %245, %235
  %248 = phi %"class.std::__1::__tree_node.588"* [ %230, %235 ], [ %246, %245 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.75"* %0, %"class.std::__1::__tree_node.588"* %248) #19
  br label %249

249:                                              ; preds = %22, %247, %229, %3
  %250 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %231, %229 ], [ %231, %247 ], [ %1, %22 ]
  %251 = icmp eq %"class.std::__1::__tree_end_node"* %250, %2
  br i1 %251, label %346, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0
  %254 = bitcast %"class.std::__1::__tree_end_node"* %253 to %"class.std::__1::__tree_node.588"**
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 0, i32 0
  %256 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 0
  %257 = bitcast %"class.std::__1::__tree.75"* %0 to i64*
  %258 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %259

259:                                              ; preds = %252, %343
  %260 = phi %"class.std::__1::__tree_end_node"* [ %250, %252 ], [ %344, %343 ]
  %261 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 4
  %262 = tail call i8* @_Znwm(i64 88) #20, !noalias !347
  %263 = getelementptr inbounds i8, i8* %262, i64 32
  %264 = bitcast i8* %263 to i64*
  %265 = bitcast %"class.std::__1::__tree_end_node"* %261 to i64*
  %266 = load i64, i64* %265, align 8, !noalias !347
  store i64 %266, i64* %264, align 8, !noalias !347
  %267 = getelementptr inbounds i8, i8* %262, i64 40
  %268 = bitcast i8* %267 to %struct.RowWordStarts*
  %269 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 5
  %270 = bitcast %"class.std::__1::__tree_end_node"* %269 to %struct.RowWordStarts*
  tail call void @_ZN13RowWordStartsC1ERKS_(%struct.RowWordStarts* %268, %struct.RowWordStarts* dereferenceable(48) %270) #19, !noalias !347
  %271 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %254, align 8
  %272 = icmp eq %"class.std::__1::__tree_node.588"* %271, null
  br i1 %272, label %297, label %273

273:                                              ; preds = %259
  %274 = load i64, i64* %264, align 8
  br label %275

275:                                              ; preds = %294, %273
  %276 = phi %"class.std::__1::__tree_node.588"* [ %296, %294 ], [ %271, %273 ]
  %277 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %276, i64 0, i32 1, i32 0, i32 0
  %278 = load i64, i64* %277, align 8
  %279 = icmp slt i64 %274, %278
  br i1 %279, label %280, label %287

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %276, i64 0, i32 0, i32 0, i32 0
  %282 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %281, align 8
  %283 = icmp eq %"class.std::__1::__tree_node_base"* %282, null
  br i1 %283, label %284, label %294

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %276, i64 0, i32 0, i32 0, i32 0
  %286 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %276, i64 0, i32 0, i32 0
  br label %297

287:                                              ; preds = %275
  %288 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %276, i64 0, i32 0, i32 1
  %289 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %288, align 8
  %290 = icmp eq %"class.std::__1::__tree_node_base"* %289, null
  br i1 %290, label %291, label %294

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %276, i64 0, i32 0, i32 1
  %293 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %276, i64 0, i32 0, i32 0
  br label %297

294:                                              ; preds = %287, %280
  %295 = phi %"class.std::__1::__tree_node_base"* [ %282, %280 ], [ %289, %287 ]
  %296 = bitcast %"class.std::__1::__tree_node_base"* %295 to %"class.std::__1::__tree_node.588"*
  br label %275

297:                                              ; preds = %259, %291, %284
  %298 = phi %"class.std::__1::__tree_end_node"* [ %286, %284 ], [ %293, %291 ], [ %253, %259 ]
  %299 = phi %"class.std::__1::__tree_node_base"** [ %285, %284 ], [ %292, %291 ], [ %255, %259 ]
  %300 = bitcast i8* %262 to %"class.std::__1::__tree_node_base"*
  %301 = getelementptr inbounds i8, i8* %262, i64 16
  %302 = bitcast i8* %301 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %298, %"class.std::__1::__tree_end_node"** %302, align 8
  %303 = bitcast %"class.std::__1::__tree_node_base"** %299 to i8**
  store i8* %262, i8** %303, align 8
  %304 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %256, align 8
  %305 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %304, i64 0, i32 0
  %306 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %305, align 8
  %307 = icmp eq %"class.std::__1::__tree_node_base"* %306, null
  br i1 %307, label %311, label %308

308:                                              ; preds = %297
  %309 = ptrtoint %"class.std::__1::__tree_node_base"* %306 to i64
  store i64 %309, i64* %257, align 8
  %310 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  br label %311

311:                                              ; preds = %297, %308
  %312 = phi %"class.std::__1::__tree_node_base"* [ %300, %297 ], [ %310, %308 ]
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %313, %"class.std::__1::__tree_node_base"* %312) #19
  %314 = load i64, i64* %4, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %4, align 8
  %316 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 1, i32 0
  %317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %316, align 8
  %318 = icmp eq %"class.std::__1::__tree_node_base"* %317, null
  br i1 %318, label %319, label %327

319:                                              ; preds = %311
  %320 = bitcast %"class.std::__1::__tree_end_node"* %260 to %"class.std::__1::__tree_node_base"*
  %321 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 2
  %322 = bitcast %"class.std::__1::__tree_end_node"* %321 to %"class.std::__1::__tree_end_node"**
  %323 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %322, align 8
  %324 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %323, i64 0, i32 0
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node_base"* %325, %320
  br i1 %326, label %343, label %334

327:                                              ; preds = %311, %327
  %328 = phi %"class.std::__1::__tree_node_base"* [ %330, %327 ], [ %317, %311 ]
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %328, i64 0, i32 0, i32 0
  %330 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %329, align 8
  %331 = icmp eq %"class.std::__1::__tree_node_base"* %330, null
  br i1 %331, label %332, label %327

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %328, i64 0, i32 0
  br label %343

334:                                              ; preds = %319, %334
  %335 = phi %"class.std::__1::__tree_end_node"** [ %338, %334 ], [ %322, %319 ]
  %336 = bitcast %"class.std::__1::__tree_end_node"** %335 to %"class.std::__1::__tree_node_base"**
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %337, i64 0, i32 2
  %339 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %338, align 8
  %340 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %339, i64 0, i32 0
  %341 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %340, align 8
  %342 = icmp eq %"class.std::__1::__tree_node_base"* %341, %337
  br i1 %342, label %343, label %334

343:                                              ; preds = %334, %319, %332
  %344 = phi %"class.std::__1::__tree_end_node"* [ %333, %332 ], [ %323, %319 ], [ %339, %334 ]
  %345 = icmp eq %"class.std::__1::__tree_end_node"* %344, %2
  br i1 %345, label %346, label %259

346:                                              ; preds = %343, %249
  ret void
}

declare dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSERKS_(%struct.RowWordStarts*, %struct.RowWordStarts* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN13RowWordStartsC1ERKS_(%struct.RowWordStarts*, %struct.RowWordStarts* dereferenceable(48)) unnamed_addr #1

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i64 @_ZNK19HistoryInfoMapValue19EstimateMemoryUsageEv(%struct.HistoryInfoMapValue*) local_unnamed_addr #1

declare i64 @_ZNK13RowWordStarts19EstimateMemoryUsageEv(%struct.RowWordStarts*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %289, %3
  %5 = phi %"class.std::__1::basic_string"* [ %1, %3 ], [ %266, %289 ]
  %6 = phi %"class.std::__1::basic_string"* [ %0, %3 ], [ %26, %289 ]
  %7 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %8 to <2 x i64>*
  %20 = bitcast %"class.std::__1::basic_string"* %8 to <2 x i64>*
  %21 = bitcast %"class.std::__1::basic_string"* %8 to <2 x i64>*
  %22 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  br label %23

23:                                               ; preds = %300, %4
  %24 = phi %"class.std::__1::basic_string"* [ %6, %4 ], [ %301, %300 ]
  br label %25

25:                                               ; preds = %204, %23
  %26 = phi %"class.std::__1::basic_string"* [ %24, %23 ], [ %195, %204 ]
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = sub i64 %7, %27
  %29 = sdiv exact i64 %28, 24
  switch i64 %29, label %107 [
    i64 0, label %304
    i64 1, label %304
    i64 2, label %30
    i64 3, label %43
    i64 4, label %96
    i64 5, label %101
  ]

30:                                               ; preds = %25
  %31 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %33 = tail call zeroext i1 %31(%"class.std::__1::basic_string"* dereferenceable(24) %32, %"class.std::__1::basic_string"* dereferenceable(24) %26) #19
  br i1 %33, label %34, label %304

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::basic_string"* %26 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #19
  %41 = bitcast %"class.std::__1::basic_string"* %32 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %42, align 8
  br label %304

43:                                               ; preds = %25
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %46 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %47 = tail call zeroext i1 %46(%"class.std::__1::basic_string"* dereferenceable(24) %44, %"class.std::__1::basic_string"* dereferenceable(24) %26) #19
  %48 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %49 = tail call zeroext i1 %48(%"class.std::__1::basic_string"* dereferenceable(24) %45, %"class.std::__1::basic_string"* dereferenceable(24) %44) #19
  br i1 %47, label %69, label %50

50:                                               ; preds = %43
  br i1 %49, label %51, label %304

51:                                               ; preds = %50
  %52 = bitcast %"class.std::__1::basic_string"* %44 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #19
  %58 = bitcast %"class.std::__1::basic_string"* %45 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %59, align 8
  %60 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %61 = tail call zeroext i1 %60(%"class.std::__1::basic_string"* dereferenceable(24) %44, %"class.std::__1::basic_string"* dereferenceable(24) %26) #19
  br i1 %61, label %62, label %304

62:                                               ; preds = %51
  %63 = bitcast %"class.std::__1::basic_string"* %26 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %56, i64 24, i1 false) #19
  %68 = bitcast %"class.std::__1::basic_string"* %44 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %68, align 8
  store i64 %66, i64* %54, align 8
  br label %304

69:                                               ; preds = %43
  %70 = bitcast %"class.std::__1::basic_string"* %26 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  br i1 %49, label %77, label %82

77:                                               ; preds = %69
  %78 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %78, i64 24, i1 false) #19
  %79 = bitcast %"class.std::__1::basic_string"* %45 to i64*
  store i64 %71, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %73, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %75, i64* %81, align 8
  br label %304

82:                                               ; preds = %69
  %83 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %83, i64 24, i1 false) #19
  %84 = bitcast %"class.std::__1::basic_string"* %44 to i64*
  store i64 %71, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %73, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %75, i64* %86, align 8
  %87 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %88 = tail call zeroext i1 %87(%"class.std::__1::basic_string"* dereferenceable(24) %45, %"class.std::__1::basic_string"* dereferenceable(24) %44) #19
  br i1 %88, label %89, label %304

89:                                               ; preds = %82
  %90 = bitcast %"class.std::__1::basic_string"* %44 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8
  %92 = load i64, i64* %86, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %93, i64 24, i1 false) #19
  %94 = bitcast %"class.std::__1::basic_string"* %45 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %92, i64* %95, align 8
  br label %304

96:                                               ; preds = %25
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 2
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %100 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* %97, %"class.std::__1::basic_string"* %98, %"class.std::__1::basic_string"* %99, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br label %304

101:                                              ; preds = %25
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 2
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 3
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 -1
  %106 = tail call i32 @_ZNSt3__17__sort5IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* %102, %"class.std::__1::basic_string"* %103, %"class.std::__1::basic_string"* %104, %"class.std::__1::basic_string"* %105, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br label %304

107:                                              ; preds = %25
  %108 = icmp slt i64 %28, 168
  br i1 %108, label %109, label %110

109:                                              ; preds = %107
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* %5, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br label %304

110:                                              ; preds = %107
  %111 = icmp sgt i64 %28, 23976
  %112 = udiv i64 %28, 48
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %112
  br i1 %111, label %114, label %119

114:                                              ; preds = %110
  %115 = udiv i64 %28, 96
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %115
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 %115
  %118 = tail call i32 @_ZNSt3__17__sort5IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* %116, %"class.std::__1::basic_string"* %113, %"class.std::__1::basic_string"* %117, %"class.std::__1::basic_string"* %8, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br label %160

119:                                              ; preds = %110
  %120 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %121 = tail call zeroext i1 %120(%"class.std::__1::basic_string"* dereferenceable(24) %113, %"class.std::__1::basic_string"* dereferenceable(24) %26) #19
  %122 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %123 = tail call zeroext i1 %122(%"class.std::__1::basic_string"* dereferenceable(24) %8, %"class.std::__1::basic_string"* dereferenceable(24) %113) #19
  br i1 %121, label %140, label %124

124:                                              ; preds = %119
  br i1 %123, label %125, label %160

125:                                              ; preds = %124
  %126 = bitcast %"class.std::__1::basic_string"* %113 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %112, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %9, i64 24, i1 false) #19
  store <2 x i64> %127, <2 x i64>* %19, align 8
  store i64 %129, i64* %10, align 8
  %131 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %132 = tail call zeroext i1 %131(%"class.std::__1::basic_string"* dereferenceable(24) %113, %"class.std::__1::basic_string"* dereferenceable(24) %26) #19
  br i1 %132, label %133, label %160

133:                                              ; preds = %125
  %134 = bitcast %"class.std::__1::basic_string"* %26 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %130, i64 24, i1 false) #19
  %139 = bitcast %"class.std::__1::basic_string"* %113 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %139, align 8
  store i64 %137, i64* %128, align 8
  br label %160

140:                                              ; preds = %119
  %141 = bitcast %"class.std::__1::basic_string"* %26 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  br i1 %123, label %148, label %149

148:                                              ; preds = %140
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %13, i64 24, i1 false) #19
  store i64 %142, i64* %14, align 8
  store i64 %144, i64* %15, align 8
  store i64 %146, i64* %16, align 8
  br label %160

149:                                              ; preds = %140
  %150 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %150, i64 24, i1 false) #19
  %151 = bitcast %"class.std::__1::basic_string"* %113 to i64*
  store i64 %142, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %112, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %144, i64* %152, align 8
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %112, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %146, i64* %153, align 8
  %154 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %155 = tail call zeroext i1 %154(%"class.std::__1::basic_string"* dereferenceable(24) %8, %"class.std::__1::basic_string"* dereferenceable(24) %113) #19
  br i1 %155, label %156, label %160

156:                                              ; preds = %149
  %157 = bitcast %"class.std::__1::basic_string"* %113 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8
  %159 = load i64, i64* %153, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %11, i64 24, i1 false) #19
  store <2 x i64> %158, <2 x i64>* %20, align 8
  store i64 %159, i64* %12, align 8
  br label %160

160:                                              ; preds = %156, %149, %148, %133, %125, %124, %114
  %161 = phi i32 [ %118, %114 ], [ 1, %148 ], [ 0, %124 ], [ 2, %133 ], [ 1, %125 ], [ 2, %156 ], [ 1, %149 ]
  %162 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %163 = tail call zeroext i1 %162(%"class.std::__1::basic_string"* dereferenceable(24) %26, %"class.std::__1::basic_string"* dereferenceable(24) %113) #19
  br i1 %163, label %228, label %164

164:                                              ; preds = %160, %215
  %165 = phi %"class.std::__1::basic_string"* [ %166, %215 ], [ %8, %160 ]
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %165, i64 -1
  %167 = icmp eq %"class.std::__1::basic_string"* %26, %166
  br i1 %167, label %168, label %215

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %170 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %171 = tail call zeroext i1 %170(%"class.std::__1::basic_string"* dereferenceable(24) %26, %"class.std::__1::basic_string"* dereferenceable(24) %8) #19
  br i1 %171, label %188, label %172

172:                                              ; preds = %168
  %173 = icmp eq %"class.std::__1::basic_string"* %169, %8
  br i1 %173, label %304, label %174

174:                                              ; preds = %172, %185
  %175 = phi %"class.std::__1::basic_string"* [ %186, %185 ], [ %169, %172 ]
  %176 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %177 = tail call zeroext i1 %176(%"class.std::__1::basic_string"* dereferenceable(24) %26, %"class.std::__1::basic_string"* dereferenceable(24) %175) #19
  br i1 %177, label %178, label %185

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::basic_string"* %175 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %17, i64 24, i1 false) #19
  store <2 x i64> %180, <2 x i64>* %21, align 8
  store i64 %182, i64* %18, align 8
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 1
  br label %188

185:                                              ; preds = %174
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 1
  %187 = icmp eq %"class.std::__1::basic_string"* %186, %8
  br i1 %187, label %304, label %174

188:                                              ; preds = %178, %168
  %189 = phi %"class.std::__1::basic_string"* [ %169, %168 ], [ %184, %178 ]
  %190 = icmp eq %"class.std::__1::basic_string"* %189, %8
  br i1 %190, label %304, label %191

191:                                              ; preds = %188, %206
  %192 = phi %"class.std::__1::basic_string"* [ %198, %206 ], [ %189, %188 ]
  %193 = phi %"class.std::__1::basic_string"* [ %202, %206 ], [ %8, %188 ]
  br label %194

194:                                              ; preds = %194, %191
  %195 = phi %"class.std::__1::basic_string"* [ %192, %191 ], [ %198, %194 ]
  %196 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %197 = tail call zeroext i1 %196(%"class.std::__1::basic_string"* dereferenceable(24) %26, %"class.std::__1::basic_string"* dereferenceable(24) %195) #19
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 1
  br i1 %197, label %199, label %194

199:                                              ; preds = %194, %199
  %200 = phi %"class.std::__1::basic_string"* [ %202, %199 ], [ %193, %194 ]
  %201 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %200, i64 -1
  %203 = tail call zeroext i1 %201(%"class.std::__1::basic_string"* dereferenceable(24) %26, %"class.std::__1::basic_string"* dereferenceable(24) %202) #19
  br i1 %203, label %199, label %204

204:                                              ; preds = %199
  %205 = icmp ult %"class.std::__1::basic_string"* %195, %202
  br i1 %205, label %206, label %25

206:                                              ; preds = %204
  %207 = bitcast %"class.std::__1::basic_string"* %195 to <2 x i64>*
  %208 = load <2 x i64>, <2 x i64>* %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.std::__1::basic_string"* %195 to i8*
  %212 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 24, i1 false) #19
  %213 = bitcast %"class.std::__1::basic_string"* %202 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %213, align 8
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %200, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %210, i64* %214, align 8
  br label %191

215:                                              ; preds = %164
  %216 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %217 = tail call zeroext i1 %216(%"class.std::__1::basic_string"* dereferenceable(24) %166, %"class.std::__1::basic_string"* dereferenceable(24) %113) #19
  br i1 %217, label %218, label %164

218:                                              ; preds = %215
  %219 = bitcast %"class.std::__1::basic_string"* %26 to <2 x i64>*
  %220 = load <2 x i64>, <2 x i64>* %219, align 8
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %224 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 24, i1 false) #19
  %225 = bitcast %"class.std::__1::basic_string"* %166 to <2 x i64>*
  store <2 x i64> %220, <2 x i64>* %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %165, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %222, i64* %226, align 8
  %227 = add i32 %161, 1
  br label %228

228:                                              ; preds = %160, %218
  %229 = phi i32 [ %227, %218 ], [ %161, %160 ]
  %230 = phi %"class.std::__1::basic_string"* [ %166, %218 ], [ %8, %160 ]
  %231 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %233 = icmp ult %"class.std::__1::basic_string"* %232, %230
  br i1 %233, label %234, label %263

234:                                              ; preds = %228, %251
  %235 = phi %"class.std::__1::basic_string"* [ %262, %251 ], [ %113, %228 ]
  %236 = phi i32 [ %260, %251 ], [ %229, %228 ]
  %237 = phi %"class.std::__1::basic_string"* [ %243, %251 ], [ %232, %228 ]
  %238 = phi %"class.std::__1::basic_string"* [ %247, %251 ], [ %230, %228 ]
  br label %239

239:                                              ; preds = %239, %234
  %240 = phi %"class.std::__1::basic_string"* [ %237, %234 ], [ %243, %239 ]
  %241 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %242 = tail call zeroext i1 %241(%"class.std::__1::basic_string"* dereferenceable(24) %240, %"class.std::__1::basic_string"* dereferenceable(24) %235) #19
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 1
  br i1 %242, label %239, label %244

244:                                              ; preds = %239, %244
  %245 = phi %"class.std::__1::basic_string"* [ %247, %244 ], [ %238, %239 ]
  %246 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %245, i64 -1
  %248 = tail call zeroext i1 %246(%"class.std::__1::basic_string"* dereferenceable(24) %247, %"class.std::__1::basic_string"* dereferenceable(24) %235) #19
  br i1 %248, label %249, label %244

249:                                              ; preds = %244
  %250 = icmp ugt %"class.std::__1::basic_string"* %240, %247
  br i1 %250, label %263, label %251

251:                                              ; preds = %249
  %252 = bitcast %"class.std::__1::basic_string"* %240 to <2 x i64>*
  %253 = load <2 x i64>, <2 x i64>* %252, align 8
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.std::__1::basic_string"* %240 to i8*
  %257 = bitcast %"class.std::__1::basic_string"* %247 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 24, i1 false) #19
  %258 = bitcast %"class.std::__1::basic_string"* %247 to <2 x i64>*
  store <2 x i64> %253, <2 x i64>* %258, align 8
  %259 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %245, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %255, i64* %259, align 8
  %260 = add i32 %236, 1
  %261 = icmp eq %"class.std::__1::basic_string"* %235, %240
  %262 = select i1 %261, %"class.std::__1::basic_string"* %247, %"class.std::__1::basic_string"* %235
  br label %234

263:                                              ; preds = %249, %228
  %264 = phi %"class.std::__1::basic_string"* [ %113, %228 ], [ %235, %249 ]
  %265 = phi i32 [ %229, %228 ], [ %236, %249 ]
  %266 = phi %"class.std::__1::basic_string"* [ %232, %228 ], [ %240, %249 ]
  %267 = icmp eq %"class.std::__1::basic_string"* %266, %264
  br i1 %267, label %281, label %268

268:                                              ; preds = %263
  %269 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %270 = tail call zeroext i1 %269(%"class.std::__1::basic_string"* dereferenceable(24) %264, %"class.std::__1::basic_string"* dereferenceable(24) %266) #19
  br i1 %270, label %271, label %281

271:                                              ; preds = %268
  %272 = bitcast %"class.std::__1::basic_string"* %266 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.std::__1::basic_string"* %266 to i8*
  %277 = bitcast %"class.std::__1::basic_string"* %264 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 24, i1 false) #19
  %278 = bitcast %"class.std::__1::basic_string"* %264 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %278, align 8
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %275, i64* %279, align 8
  %280 = add i32 %265, 1
  br label %281

281:                                              ; preds = %263, %271, %268
  %282 = phi i32 [ %280, %271 ], [ %265, %268 ], [ %265, %263 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %291

284:                                              ; preds = %281
  %285 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEbT0_SD_T_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* %266, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 1
  %287 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEbT0_SD_T_(%"class.std::__1::basic_string"* %286, %"class.std::__1::basic_string"* %5, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br i1 %287, label %288, label %290

288:                                              ; preds = %284
  br i1 %285, label %304, label %289

289:                                              ; preds = %288, %302
  br label %4

290:                                              ; preds = %284
  br i1 %285, label %300, label %291

291:                                              ; preds = %290, %281
  %292 = ptrtoint %"class.std::__1::basic_string"* %266 to i64
  %293 = sub i64 %292, %231
  %294 = sdiv exact i64 %293, 24
  %295 = sub i64 %22, %292
  %296 = sdiv exact i64 %295, 24
  %297 = icmp slt i64 %294, %296
  br i1 %297, label %298, label %302

298:                                              ; preds = %291
  tail call void @_ZNSt3__16__sortIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* %266, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 1
  br label %300

300:                                              ; preds = %298, %290
  %301 = phi %"class.std::__1::basic_string"* [ %286, %290 ], [ %299, %298 ]
  br label %23

302:                                              ; preds = %291
  %303 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_(%"class.std::__1::basic_string"* %303, %"class.std::__1::basic_string"* %5, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br label %289

304:                                              ; preds = %288, %188, %25, %25, %172, %185, %89, %82, %77, %62, %51, %50, %30, %34, %96, %101, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  %7 = tail call zeroext i1 %6(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  %8 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  %9 = tail call zeroext i1 %8(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  br i1 %7, label %29, label %10

10:                                               ; preds = %5
  br i1 %9, label %11, label %56

11:                                               ; preds = %10
  %12 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #19
  %18 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %19, align 8
  %20 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  %21 = tail call zeroext i1 %20(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  br i1 %21, label %22, label %56

22:                                               ; preds = %11
  %23 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %16, i64 24, i1 false) #19
  %28 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %28, align 8
  store i64 %26, i64* %14, align 8
  br label %56

29:                                               ; preds = %5
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %9, label %37, label %42

37:                                               ; preds = %29
  %38 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %38, i64 24, i1 false) #19
  %39 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  store i64 %31, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %41, align 8
  br label %56

42:                                               ; preds = %29
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %43, i64 24, i1 false) #19
  %44 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  store i64 %31, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %46, align 8
  %47 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  %48 = tail call zeroext i1 %47(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  br i1 %48, label %49, label %56

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8
  %52 = load i64, i64* %46, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %53, i64 24, i1 false) #19
  %54 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %55, align 8
  br label %56

56:                                               ; preds = %10, %11, %22, %37, %42, %49
  %57 = phi i32 [ 1, %37 ], [ 0, %10 ], [ 2, %22 ], [ 1, %11 ], [ 2, %49 ], [ 1, %42 ]
  %58 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  %59 = tail call zeroext i1 %58(%"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  br i1 %59, label %60, label %90

60:                                               ; preds = %56
  %61 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  %62 = load <2 x i64>, <2 x i64>* %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #19
  %67 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %64, i64* %68, align 8
  %69 = add nuw nsw i32 %57, 1
  %70 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  %71 = tail call zeroext i1 %70(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  br i1 %71, label %72, label %90

72:                                               ; preds = %60
  %73 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %65, i64 24, i1 false) #19
  %78 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %78, align 8
  store i64 %76, i64* %63, align 8
  %79 = add nuw nsw i32 %57, 2
  %80 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %4, align 8
  %81 = tail call zeroext i1 %80(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  br i1 %81, label %82, label %90

82:                                               ; preds = %72
  %83 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %77, i64 24, i1 false) #19
  %88 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %88, align 8
  store i64 %86, i64* %75, align 8
  %89 = add nuw nsw i32 %57, 3
  br label %90

90:                                               ; preds = %60, %82, %72, %56
  %91 = phi i32 [ %89, %82 ], [ %79, %72 ], [ %69, %60 ], [ %57, %56 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %3, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %5, align 8
  %9 = tail call zeroext i1 %8(%"class.std::__1::basic_string"* dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %3) #19
  br i1 %9, label %10, label %50

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #19
  %17 = bitcast %"class.std::__1::basic_string"* %4 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %18, align 8
  %19 = add i32 %7, 1
  %20 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %5, align 8
  %21 = tail call zeroext i1 %20(%"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  br i1 %21, label %22, label %50

22:                                               ; preds = %10
  %23 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %15, i64 24, i1 false) #19
  %28 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %28, align 8
  store i64 %26, i64* %13, align 8
  %29 = add i32 %7, 2
  %30 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %5, align 8
  %31 = tail call zeroext i1 %30(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  br i1 %31, label %32, label %50

32:                                               ; preds = %22
  %33 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %27, i64 24, i1 false) #19
  %38 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %38, align 8
  store i64 %36, i64* %25, align 8
  %39 = add i32 %7, 3
  %40 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %5, align 8
  %41 = tail call zeroext i1 %40(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  br i1 %41, label %42, label %50

42:                                               ; preds = %32
  %43 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %37, i64 24, i1 false) #19
  %48 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %48, align 8
  store i64 %46, i64* %35, align 8
  %49 = add i32 %7, 4
  br label %50

50:                                               ; preds = %10, %32, %42, %22, %6
  %51 = phi i32 [ %49, %42 ], [ %39, %32 ], [ %29, %22 ], [ %19, %10 ], [ %7, %6 ]
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEvT0_SD_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %7 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %8 = tail call zeroext i1 %7(%"class.std::__1::basic_string"* dereferenceable(24) %6, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  %9 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %10 = tail call zeroext i1 %9(%"class.std::__1::basic_string"* dereferenceable(24) %5, %"class.std::__1::basic_string"* dereferenceable(24) %6) #19
  br i1 %8, label %30, label %11

11:                                               ; preds = %3
  br i1 %10, label %12, label %57

12:                                               ; preds = %11
  %13 = bitcast %"class.std::__1::basic_string"* %6 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #19
  %19 = bitcast %"class.std::__1::basic_string"* %5 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %20, align 8
  %21 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %22 = tail call zeroext i1 %21(%"class.std::__1::basic_string"* dereferenceable(24) %6, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  br i1 %22, label %23, label %57

23:                                               ; preds = %12
  %24 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %17, i64 24, i1 false) #19
  %29 = bitcast %"class.std::__1::basic_string"* %6 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %29, align 8
  store i64 %27, i64* %15, align 8
  br label %57

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %10, label %38, label %43

38:                                               ; preds = %30
  %39 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %39, i64 24, i1 false) #19
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  store i64 %32, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %42, align 8
  br label %57

43:                                               ; preds = %30
  %44 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %44, i64 24, i1 false) #19
  %45 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  store i64 %32, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %47, align 8
  %48 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %49 = tail call zeroext i1 %48(%"class.std::__1::basic_string"* dereferenceable(24) %5, %"class.std::__1::basic_string"* dereferenceable(24) %6) #19
  br i1 %49, label %50, label %57

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::basic_string"* %6 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  %53 = load i64, i64* %47, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %54, i64 24, i1 false) #19
  %55 = bitcast %"class.std::__1::basic_string"* %5 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %56, align 8
  br label %57

57:                                               ; preds = %11, %12, %23, %38, %43, %50
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 3
  %59 = icmp eq %"class.std::__1::basic_string"* %58, %1
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %64

63:                                               ; preds = %103, %57
  ret void

64:                                               ; preds = %60, %103
  %65 = phi %"class.std::__1::basic_string"* [ %58, %60 ], [ %104, %103 ]
  %66 = phi %"class.std::__1::basic_string"* [ %5, %60 ], [ %65, %103 ]
  %67 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %68 = call zeroext i1 %67(%"class.std::__1::basic_string"* dereferenceable(24) %65, %"class.std::__1::basic_string"* dereferenceable(24) %66) #19
  br i1 %68, label %69, label %103

69:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #19
  %70 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 %70, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #19
  br label %71

71:                                               ; preds = %88, %69
  %72 = phi %"class.std::__1::basic_string"* [ %65, %69 ], [ %73, %88 ]
  %73 = phi %"class.std::__1::basic_string"* [ %66, %69 ], [ %90, %88 ]
  %74 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #20
  br label %81

81:                                               ; preds = %71, %78
  %82 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %83 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 24, i1 false) #19
  %84 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  store i8 0, i8* %85, align 1
  %86 = bitcast %"class.std::__1::basic_string"* %73 to i16*
  store i16 0, i16* %86, align 2
  %87 = icmp eq %"class.std::__1::basic_string"* %73, %0
  br i1 %87, label %101, label %88

88:                                               ; preds = %81
  %89 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %91 = call zeroext i1 %89(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %90) #19
  br i1 %91, label %71, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %94, i64 0, i32 1, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %73 to i8**
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #20
  br label %101

101:                                              ; preds = %81, %98, %92
  %102 = phi i8* [ %93, %98 ], [ %93, %92 ], [ %62, %81 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %61, i64 24, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #19
  br label %103

103:                                              ; preds = %101, %64
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 1
  %105 = icmp eq %"class.std::__1::basic_string"* %104, %1
  br i1 %105, label %63, label %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEbT0_SD_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = sdiv exact i64 %7, 24
  switch i64 %8, label %86 [
    i64 0, label %194
    i64 1, label %194
    i64 2, label %9
    i64 3, label %22
    i64 4, label %75
    i64 5, label %80
  ]

9:                                                ; preds = %3
  %10 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %12 = tail call zeroext i1 %10(%"class.std::__1::basic_string"* dereferenceable(24) %11, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  br i1 %12, label %13, label %194

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #19
  %20 = bitcast %"class.std::__1::basic_string"* %11 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %21, align 8
  br label %194

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %25 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %26 = tail call zeroext i1 %25(%"class.std::__1::basic_string"* dereferenceable(24) %23, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  %27 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %28 = tail call zeroext i1 %27(%"class.std::__1::basic_string"* dereferenceable(24) %24, %"class.std::__1::basic_string"* dereferenceable(24) %23) #19
  br i1 %26, label %48, label %29

29:                                               ; preds = %22
  br i1 %28, label %30, label %194

30:                                               ; preds = %29
  %31 = bitcast %"class.std::__1::basic_string"* %23 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #19
  %37 = bitcast %"class.std::__1::basic_string"* %24 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %38, align 8
  %39 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %40 = tail call zeroext i1 %39(%"class.std::__1::basic_string"* dereferenceable(24) %23, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  br i1 %40, label %41, label %194

41:                                               ; preds = %30
  %42 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %35, i64 24, i1 false) #19
  %47 = bitcast %"class.std::__1::basic_string"* %23 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %47, align 8
  store i64 %45, i64* %33, align 8
  br label %194

48:                                               ; preds = %22
  %49 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %28, label %56, label %61

56:                                               ; preds = %48
  %57 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %57, i64 24, i1 false) #19
  %58 = bitcast %"class.std::__1::basic_string"* %24 to i64*
  store i64 %50, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %60, align 8
  br label %194

61:                                               ; preds = %48
  %62 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %62, i64 24, i1 false) #19
  %63 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  store i64 %50, i64* %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %65, align 8
  %66 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %67 = tail call zeroext i1 %66(%"class.std::__1::basic_string"* dereferenceable(24) %24, %"class.std::__1::basic_string"* dereferenceable(24) %23) #19
  br i1 %67, label %68, label %194

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::basic_string"* %23 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  %71 = load i64, i64* %65, align 8
  %72 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %72, i64 24, i1 false) #19
  %73 = bitcast %"class.std::__1::basic_string"* %24 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %71, i64* %74, align 8
  br label %194

75:                                               ; preds = %3
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %76, %"class.std::__1::basic_string"* %77, %"class.std::__1::basic_string"* %78, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br label %194

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 3
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %81, %"class.std::__1::basic_string"* %82, %"class.std::__1::basic_string"* %83, %"class.std::__1::basic_string"* %84, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** dereferenceable(8) %2)
  br label %194

86:                                               ; preds = %3
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %89 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %90 = tail call zeroext i1 %89(%"class.std::__1::basic_string"* dereferenceable(24) %88, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  %91 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %92 = tail call zeroext i1 %91(%"class.std::__1::basic_string"* dereferenceable(24) %87, %"class.std::__1::basic_string"* dereferenceable(24) %88) #19
  br i1 %90, label %112, label %93

93:                                               ; preds = %86
  br i1 %92, label %94, label %139

94:                                               ; preds = %93
  %95 = bitcast %"class.std::__1::basic_string"* %88 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #19
  %101 = bitcast %"class.std::__1::basic_string"* %87 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %98, i64* %102, align 8
  %103 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %104 = tail call zeroext i1 %103(%"class.std::__1::basic_string"* dereferenceable(24) %88, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  br i1 %104, label %105, label %139

105:                                              ; preds = %94
  %106 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %99, i64 24, i1 false) #19
  %111 = bitcast %"class.std::__1::basic_string"* %88 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %111, align 8
  store i64 %109, i64* %97, align 8
  br label %139

112:                                              ; preds = %86
  %113 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %92, label %120, label %125

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %121, i64 24, i1 false) #19
  %122 = bitcast %"class.std::__1::basic_string"* %87 to i64*
  store i64 %114, i64* %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %116, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %118, i64* %124, align 8
  br label %139

125:                                              ; preds = %112
  %126 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %126, i64 24, i1 false) #19
  %127 = bitcast %"class.std::__1::basic_string"* %88 to i64*
  store i64 %114, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %116, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %118, i64* %129, align 8
  %130 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %131 = tail call zeroext i1 %130(%"class.std::__1::basic_string"* dereferenceable(24) %87, %"class.std::__1::basic_string"* dereferenceable(24) %88) #19
  br i1 %131, label %132, label %139

132:                                              ; preds = %125
  %133 = bitcast %"class.std::__1::basic_string"* %88 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8
  %135 = load i64, i64* %129, align 8
  %136 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %136, i64 24, i1 false) #19
  %137 = bitcast %"class.std::__1::basic_string"* %87 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 8
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %135, i64* %138, align 8
  br label %139

139:                                              ; preds = %93, %94, %105, %120, %125, %132
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 3
  %141 = icmp eq %"class.std::__1::basic_string"* %140, %1
  br i1 %141, label %194, label %142

142:                                              ; preds = %139
  %143 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %144 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %145

145:                                              ; preds = %142, %187
  %146 = phi %"class.std::__1::basic_string"* [ %140, %142 ], [ %189, %187 ]
  %147 = phi i32 [ 0, %142 ], [ %188, %187 ]
  %148 = phi %"class.std::__1::basic_string"* [ %87, %142 ], [ %146, %187 ]
  %149 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %150 = call zeroext i1 %149(%"class.std::__1::basic_string"* dereferenceable(24) %146, %"class.std::__1::basic_string"* dereferenceable(24) %148) #19
  br i1 %150, label %151, label %187

151:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #19
  %152 = bitcast %"class.std::__1::basic_string"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %143, i8* align 8 %152, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #19
  br label %153

153:                                              ; preds = %170, %151
  %154 = phi %"class.std::__1::basic_string"* [ %146, %151 ], [ %155, %170 ]
  %155 = phi %"class.std::__1::basic_string"* [ %148, %151 ], [ %172, %170 ]
  %156 = bitcast %"class.std::__1::basic_string"* %154 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %156, i64 0, i32 1, i32 1
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %153
  %161 = bitcast %"class.std::__1::basic_string"* %154 to i8**
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #20
  br label %163

163:                                              ; preds = %153, %160
  %164 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  %165 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 24, i1 false) #19
  %166 = bitcast %"class.std::__1::basic_string"* %155 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %166, i64 0, i32 1, i32 1
  store i8 0, i8* %167, align 1
  %168 = bitcast %"class.std::__1::basic_string"* %155 to i16*
  store i16 0, i16* %168, align 2
  %169 = icmp eq %"class.std::__1::basic_string"* %155, %0
  br i1 %169, label %183, label %170

170:                                              ; preds = %163
  %171 = load i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %2, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %155, i64 -1
  %173 = call zeroext i1 %171(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %172) #19
  br i1 %173, label %153, label %174

174:                                              ; preds = %170
  %175 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  %176 = bitcast %"class.std::__1::basic_string"* %155 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %176, i64 0, i32 1, i32 1
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %174
  %181 = bitcast %"class.std::__1::basic_string"* %155 to i8**
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #20
  br label %183

183:                                              ; preds = %163, %180, %174
  %184 = phi i8* [ %175, %180 ], [ %175, %174 ], [ %144, %163 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* nonnull align 8 %143, i64 24, i1 false) #19
  %185 = add i32 %147, 1
  %186 = icmp eq i32 %185, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #19
  br i1 %186, label %191, label %187

187:                                              ; preds = %183, %145
  %188 = phi i32 [ %185, %183 ], [ %147, %145 ]
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 1
  %190 = icmp eq %"class.std::__1::basic_string"* %189, %1
  br i1 %190, label %194, label %145

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 1
  %193 = icmp eq %"class.std::__1::basic_string"* %192, %1
  br label %194

194:                                              ; preds = %187, %191, %139, %68, %61, %56, %41, %30, %29, %9, %13, %3, %3, %80, %75
  %195 = phi i1 [ true, %80 ], [ true, %75 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %9 ], [ true, %29 ], [ true, %30 ], [ true, %41 ], [ true, %56 ], [ true, %61 ], [ true, %68 ], [ true, %139 ], [ %193, %191 ], [ true, %187 ]
  ret i1 %195
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__nth_elementIRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEvT0_S7_S7_T_(i64*, i64*, i64*, %"class.URLIndexPrivateData::HistoryItemFactorGreater"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq i64* %2, %1
  br i1 %5, label %213, label %6

6:                                                ; preds = %4
  %7 = ptrtoint i64* %2 to i64
  %8 = ptrtoint i64* %0 to i64
  br label %9

9:                                                ; preds = %6, %208
  %10 = phi i64* [ %211, %208 ], [ %2, %6 ]
  %11 = phi i64 [ %210, %208 ], [ %8, %6 ]
  %12 = phi i64 [ %209, %208 ], [ %7, %6 ]
  %13 = sub i64 %12, %11
  %14 = ashr exact i64 %13, 3
  switch i64 %14, label %27 [
    i64 0, label %213
    i64 1, label %213
    i64 2, label %15
    i64 3, label %22
  ]

15:                                               ; preds = %9
  %16 = getelementptr inbounds i64, i64* %10, i64 -1
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %11 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %17, i64 %19)
  br i1 %20, label %21, label %213

21:                                               ; preds = %15
  store i64 %17, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  br label %213

22:                                               ; preds = %9
  %23 = inttoptr i64 %11 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 1
  %25 = getelementptr inbounds i64, i64* %10, i64 -1
  %26 = tail call i32 @_ZNSt3__17__sort3IRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEjT0_S7_S7_T_(i64* %23, i64* %24, i64* %25, %"class.URLIndexPrivateData::HistoryItemFactorGreater"* dereferenceable(8) %3)
  br label %213

27:                                               ; preds = %9
  %28 = icmp slt i64 %13, 64
  br i1 %28, label %29, label %61

29:                                               ; preds = %27
  %30 = inttoptr i64 %11 to i64*
  %31 = getelementptr inbounds i64, i64* %10, i64 -1
  %32 = icmp eq i64* %31, %30
  br i1 %32, label %213, label %33

33:                                               ; preds = %29, %58
  %34 = phi i64* [ %59, %58 ], [ %30, %29 ]
  %35 = ptrtoint i64* %34 to i64
  %36 = icmp eq i64* %34, %10
  br i1 %36, label %51, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds i64, i64* %34, i64 1
  %39 = icmp eq i64* %38, %10
  br i1 %39, label %51, label %40

40:                                               ; preds = %37, %40
  %41 = phi i64* [ %49, %40 ], [ %38, %37 ]
  %42 = phi i64 [ %48, %40 ], [ %35, %37 ]
  %43 = ptrtoint i64* %41 to i64
  %44 = load i64, i64* %41, align 8
  %45 = inttoptr i64 %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %44, i64 %46) #19
  %48 = select i1 %47, i64 %43, i64 %42
  %49 = getelementptr inbounds i64, i64* %41, i64 1
  %50 = icmp eq i64* %49, %10
  br i1 %50, label %51, label %40

51:                                               ; preds = %40, %37, %33
  %52 = phi i64 [ %35, %33 ], [ %35, %37 ], [ %48, %40 ]
  %53 = inttoptr i64 %52 to i64*
  %54 = icmp eq i64* %34, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = load i64, i64* %34, align 8
  %57 = load i64, i64* %53, align 8
  store i64 %57, i64* %34, align 8
  store i64 %56, i64* %53, align 8
  br label %58

58:                                               ; preds = %55, %51
  %59 = getelementptr inbounds i64, i64* %34, i64 1
  %60 = icmp eq i64* %59, %31
  br i1 %60, label %213, label %33

61:                                               ; preds = %27
  %62 = lshr i64 %14, 1
  %63 = inttoptr i64 %11 to i64*
  %64 = getelementptr inbounds i64, i64* %63, i64 %62
  %65 = ptrtoint i64* %64 to i64
  %66 = getelementptr inbounds i64, i64* %10, i64 -1
  %67 = ptrtoint i64* %66 to i64
  %68 = tail call i32 @_ZNSt3__17__sort3IRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEjT0_S7_S7_T_(i64* %63, i64* %64, i64* %66, %"class.URLIndexPrivateData::HistoryItemFactorGreater"* dereferenceable(8) %3)
  %69 = load i64, i64* %63, align 8
  %70 = load i64, i64* %64, align 8
  %71 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %69, i64 %70)
  br i1 %71, label %123, label %72

72:                                               ; preds = %61, %76
  %73 = phi i64* [ %74, %76 ], [ %66, %61 ]
  %74 = getelementptr inbounds i64, i64* %73, i64 -1
  %75 = icmp eq i64* %74, %63
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = load i64, i64* %74, align 8
  %78 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %77, i64 %70) #19
  br i1 %78, label %79, label %72

79:                                               ; preds = %76
  %80 = ptrtoint i64* %74 to i64
  store i64 %77, i64* %63, align 8
  store i64 %69, i64* %74, align 8
  %81 = add i32 %68, 1
  br label %123

82:                                               ; preds = %72
  %83 = getelementptr inbounds i64, i64* %63, i64 1
  %84 = load i64, i64* %66, align 8
  %85 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %69, i64 %84)
  br i1 %85, label %97, label %86

86:                                               ; preds = %82
  %87 = icmp eq i64* %83, %66
  br i1 %87, label %213, label %88

88:                                               ; preds = %86, %94
  %89 = phi i64* [ %95, %94 ], [ %83, %86 ]
  %90 = load i64, i64* %89, align 8
  %91 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %69, i64 %90)
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  store i64 %84, i64* %89, align 8
  store i64 %90, i64* %66, align 8
  %93 = getelementptr inbounds i64, i64* %89, i64 1
  br label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds i64, i64* %89, i64 1
  %96 = icmp eq i64* %95, %66
  br i1 %96, label %213, label %88

97:                                               ; preds = %92, %82
  %98 = phi i64* [ %83, %82 ], [ %93, %92 ]
  %99 = icmp eq i64* %98, %66
  br i1 %99, label %213, label %100

100:                                              ; preds = %97, %118
  %101 = phi i64* [ %108, %118 ], [ %98, %97 ]
  %102 = phi i64 [ %119, %118 ], [ %67, %97 ]
  %103 = load i64, i64* %63, align 8
  br label %104

104:                                              ; preds = %104, %100
  %105 = phi i64* [ %101, %100 ], [ %108, %104 ]
  %106 = load i64, i64* %105, align 8
  %107 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %103, i64 %106)
  %108 = getelementptr inbounds i64, i64* %105, i64 1
  br i1 %107, label %109, label %104

109:                                              ; preds = %104
  %110 = inttoptr i64 %102 to i64*
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64* [ %113, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds i64, i64* %112, i64 -1
  %114 = load i64, i64* %113, align 8
  %115 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %103, i64 %114)
  br i1 %115, label %111, label %116

116:                                              ; preds = %111
  %117 = icmp ult i64* %105, %113
  br i1 %117, label %118, label %120

118:                                              ; preds = %116
  %119 = ptrtoint i64* %113 to i64
  store i64 %114, i64* %105, align 8
  store i64 %106, i64* %113, align 8
  br label %100

120:                                              ; preds = %116
  %121 = ptrtoint i64* %105 to i64
  %122 = icmp ugt i64* %105, %1
  br i1 %122, label %213, label %208

123:                                              ; preds = %79, %61
  %124 = phi i64 [ %67, %61 ], [ %80, %79 ]
  %125 = phi i32 [ %68, %61 ], [ %81, %79 ]
  %126 = getelementptr inbounds i64, i64* %63, i64 1
  %127 = ptrtoint i64* %126 to i64
  %128 = inttoptr i64 %124 to i64*
  %129 = icmp ult i64* %126, %128
  br i1 %129, label %130, label %168

130:                                              ; preds = %123, %160
  %131 = phi i64 [ %163, %160 ], [ %65, %123 ]
  %132 = phi i64 [ %165, %160 ], [ %127, %123 ]
  %133 = phi i64 [ %158, %160 ], [ %124, %123 ]
  %134 = phi i32 [ %161, %160 ], [ %125, %123 ]
  %135 = inttoptr i64 %133 to i64*
  %136 = inttoptr i64 %132 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = inttoptr i64 %131 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %137, i64 %139)
  br i1 %140, label %147, label %143

141:                                              ; preds = %147
  %142 = ptrtoint i64* %149 to i64
  br label %143

143:                                              ; preds = %141, %130
  %144 = phi i64 [ %142, %141 ], [ %132, %130 ]
  %145 = phi i64* [ %149, %141 ], [ %136, %130 ]
  %146 = phi i64 [ %150, %141 ], [ %137, %130 ]
  br label %152

147:                                              ; preds = %130, %147
  %148 = phi i64* [ %149, %147 ], [ %136, %130 ]
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = load i64, i64* %149, align 8
  %151 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %150, i64 %139)
  br i1 %151, label %147, label %141

152:                                              ; preds = %143, %152
  %153 = phi i64* [ %154, %152 ], [ %135, %143 ]
  %154 = getelementptr inbounds i64, i64* %153, i64 -1
  %155 = load i64, i64* %154, align 8
  %156 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %155, i64 %139)
  br i1 %156, label %157, label %152

157:                                              ; preds = %152
  %158 = ptrtoint i64* %154 to i64
  %159 = icmp ugt i64* %154, %145
  br i1 %159, label %160, label %166

160:                                              ; preds = %157
  store i64 %155, i64* %145, align 8
  store i64 %146, i64* %154, align 8
  %161 = add i32 %134, 1
  %162 = icmp eq i64* %145, %138
  %163 = select i1 %162, i64 %158, i64 %131
  %164 = getelementptr inbounds i64, i64* %145, i64 1
  %165 = ptrtoint i64* %164 to i64
  br label %130

166:                                              ; preds = %157
  %167 = inttoptr i64 %131 to i64*
  br label %168

168:                                              ; preds = %166, %123
  %169 = phi i64* [ %64, %123 ], [ %167, %166 ]
  %170 = phi i64 [ %127, %123 ], [ %144, %166 ]
  %171 = phi i32 [ %125, %123 ], [ %134, %166 ]
  %172 = inttoptr i64 %170 to i64*
  %173 = icmp eq i64* %169, %172
  br i1 %173, label %180, label %174

174:                                              ; preds = %168
  %175 = load i64, i64* %169, align 8
  %176 = load i64, i64* %172, align 8
  %177 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %175, i64 %176)
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  store i64 %175, i64* %172, align 8
  store i64 %176, i64* %169, align 8
  %179 = add i32 %171, 1
  br label %180

180:                                              ; preds = %168, %178, %174
  %181 = phi i32 [ %179, %178 ], [ %171, %174 ], [ %171, %168 ]
  %182 = icmp eq i64* %172, %1
  br i1 %182, label %213, label %183

183:                                              ; preds = %180
  %184 = icmp eq i32 %181, 0
  br i1 %184, label %185, label %203

185:                                              ; preds = %183
  %186 = icmp ugt i64* %172, %1
  br i1 %186, label %187, label %195

187:                                              ; preds = %185, %191
  %188 = phi i64* [ %189, %191 ], [ %63, %185 ]
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = icmp eq i64* %189, %172
  br i1 %190, label %213, label %191

191:                                              ; preds = %187
  %192 = load i64, i64* %189, align 8
  %193 = load i64, i64* %188, align 8
  %194 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %192, i64 %193)
  br i1 %194, label %203, label %187

195:                                              ; preds = %185, %199
  %196 = phi i64* [ %197, %199 ], [ %172, %185 ]
  %197 = getelementptr inbounds i64, i64* %196, i64 1
  %198 = icmp eq i64* %197, %10
  br i1 %198, label %213, label %199

199:                                              ; preds = %195
  %200 = load i64, i64* %197, align 8
  %201 = load i64, i64* %196, align 8
  %202 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %200, i64 %201)
  br i1 %202, label %203, label %195

203:                                              ; preds = %199, %191, %183
  %204 = icmp ugt i64* %172, %1
  br i1 %204, label %208, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds i64, i64* %172, i64 1
  %207 = ptrtoint i64* %206 to i64
  br label %208

208:                                              ; preds = %120, %205, %203
  %209 = phi i64 [ %12, %205 ], [ %170, %203 ], [ %12, %120 ]
  %210 = phi i64 [ %207, %205 ], [ %11, %203 ], [ %121, %120 ]
  %211 = inttoptr i64 %209 to i64*
  %212 = icmp eq i64* %211, %1
  br i1 %212, label %213, label %9

213:                                              ; preds = %208, %9, %9, %97, %120, %180, %86, %94, %195, %187, %58, %4, %29, %15, %21, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN19URLIndexPrivateData24HistoryItemFactorGreaterENS_11__wrap_iterIPlEEEEjT0_S7_S7_T_(i64*, i64*, i64*, %"class.URLIndexPrivateData::HistoryItemFactorGreater"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i64, i64* %1, align 8
  %6 = load i64, i64* %0, align 8
  %7 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %5, i64 %6)
  %8 = load i64, i64* %2, align 8
  %9 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %8, i64 %5)
  br i1 %7, label %16, label %10

10:                                               ; preds = %4
  br i1 %9, label %11, label %22

11:                                               ; preds = %10
  store i64 %8, i64* %1, align 8
  store i64 %5, i64* %2, align 8
  %12 = load i64, i64* %1, align 8
  %13 = load i64, i64* %0, align 8
  %14 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %12, i64 %13)
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  store i64 %12, i64* %0, align 8
  store i64 %13, i64* %1, align 8
  br label %22

16:                                               ; preds = %4
  br i1 %9, label %17, label %18

17:                                               ; preds = %16
  store i64 %8, i64* %0, align 8
  store i64 %6, i64* %2, align 8
  br label %22

18:                                               ; preds = %16
  store i64 %5, i64* %0, align 8
  store i64 %6, i64* %1, align 8
  %19 = load i64, i64* %2, align 8
  %20 = tail call zeroext i1 @_ZN19URLIndexPrivateData24HistoryItemFactorGreaterclEll(%"class.URLIndexPrivateData::HistoryItemFactorGreater"* %3, i64 %19, i64 %6)
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  store i64 %19, i64* %1, align 8
  store i64 %6, i64* %2, align 8
  br label %22

22:                                               ; preds = %18, %21, %11, %15, %10, %17
  %23 = phi i32 [ 1, %17 ], [ 0, %10 ], [ 2, %15 ], [ 1, %11 ], [ 2, %21 ], [ 1, %18 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.678"* dereferenceable(8), %"class.std::__1::tuple.626"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.681", align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %100, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %24 = select i1 %16, i16* %22, i16* %23
  br label %25

25:                                               ; preds = %96, %11
  %26 = phi %"class.std::__1::__tree_node"* [ %99, %96 ], [ %9, %11 ]
  %27 = phi %"class.std::__1::__tree_node_base"** [ %98, %96 ], [ %12, %11 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__value_type"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp ult i64 %36, %20
  %38 = select i1 %37, i64 %36, i64 %20
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %59, label %40

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = bitcast %"struct.std::__1::__value_type"* %28 to i16*
  %44 = select i1 %32, i16* %42, i16* %43
  br label %45

45:                                               ; preds = %54, %40
  %46 = phi i64 [ %55, %54 ], [ %38, %40 ]
  %47 = phi i16* [ %57, %54 ], [ %44, %40 ]
  %48 = phi i16* [ %56, %54 ], [ %24, %40 ]
  %49 = load i16, i16* %48, align 2
  %50 = load i16, i16* %47, align 2
  %51 = icmp ult i16 %49, %50
  br i1 %51, label %61, label %52

52:                                               ; preds = %45
  %53 = icmp ult i16 %50, %49
  br i1 %53, label %67, label %54

54:                                               ; preds = %52
  %55 = add i64 %46, -1
  %56 = getelementptr inbounds i16, i16* %48, i64 1
  %57 = getelementptr inbounds i16, i16* %47, i64 1
  %58 = icmp eq i64 %55, 0
  br i1 %58, label %59, label %45

59:                                               ; preds = %54, %25
  %60 = icmp ult i64 %20, %36
  br i1 %60, label %61, label %67

61:                                               ; preds = %45, %59
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %96

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %102

67:                                               ; preds = %52, %59
  br i1 %39, label %87, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i16*, i16** %69, align 8
  %71 = bitcast %"struct.std::__1::__value_type"* %28 to i16*
  %72 = select i1 %32, i16* %70, i16* %71
  br label %73

73:                                               ; preds = %82, %68
  %74 = phi i64 [ %83, %82 ], [ %38, %68 ]
  %75 = phi i16* [ %85, %82 ], [ %24, %68 ]
  %76 = phi i16* [ %84, %82 ], [ %72, %68 ]
  %77 = load i16, i16* %76, align 2
  %78 = load i16, i16* %75, align 2
  %79 = icmp ult i16 %77, %78
  br i1 %79, label %88, label %80

80:                                               ; preds = %73
  %81 = icmp ult i16 %78, %77
  br i1 %81, label %94, label %82

82:                                               ; preds = %80
  %83 = add i64 %74, -1
  %84 = getelementptr inbounds i16, i16* %76, i64 1
  %85 = getelementptr inbounds i16, i16* %75, i64 1
  %86 = icmp eq i64 %83, 0
  br i1 %86, label %87, label %73

87:                                               ; preds = %82, %67
  br i1 %37, label %88, label %94

88:                                               ; preds = %73, %87
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %102

94:                                               ; preds = %87, %80
  %95 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %102

96:                                               ; preds = %88, %61
  %97 = phi %"class.std::__1::__tree_node_base"* [ %63, %61 ], [ %90, %88 ]
  %98 = phi %"class.std::__1::__tree_node_base"** [ %62, %61 ], [ %89, %88 ]
  %99 = bitcast %"class.std::__1::__tree_node_base"* %97 to %"class.std::__1::__tree_node"*
  br label %25

100:                                              ; preds = %5
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %102

102:                                              ; preds = %65, %92, %94, %100
  %103 = phi %"class.std::__1::__tree_end_node"* [ %7, %100 ], [ %66, %65 ], [ %93, %92 ], [ %95, %94 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %101, %100 ], [ %62, %65 ], [ %89, %92 ], [ %27, %94 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to %"class.std::__1::__tree_node"**
  %106 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node"* %106, null
  br i1 %107, label %108, label %133

108:                                              ; preds = %102
  %109 = bitcast %"class.std::__1::unique_ptr.681"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #19
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.681"* %6, i64 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::unique_ptr.681"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_(%"class.std::__1::unique_ptr.681"* nonnull sret %6, %"class.std::__1::__tree"* %0, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1) %2, %"class.std::__1::tuple.678"* dereferenceable(8) %3, %"class.std::__1::tuple.626"* dereferenceable(1) %4)
  %112 = bitcast %"class.std::__1::unique_ptr.681"* %6 to %"class.std::__1::__tree_node_base"**
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %115 = bitcast %"class.std::__1::__tree_node_base"* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %103, %"class.std::__1::__tree_end_node"** %114, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %104, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %108
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  br label %125

125:                                              ; preds = %121, %108
  %126 = phi %"class.std::__1::__tree_node_base"* [ %113, %108 ], [ %124, %121 ]
  %127 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %126) #19
  %129 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %129, align 8
  %132 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #19
  br label %133

133:                                              ; preds = %125, %102
  %134 = phi i8 [ 1, %125 ], [ 0, %102 ]
  %135 = phi %"class.std::__1::__tree_node"* [ %132, %125 ], [ %106, %102 ]
  %136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %135, i64 0, i32 0, i32 0
  %137 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %136, 0
  %138 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %137, i8 %134, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %138
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEN19URLIndexPrivateData19SearchTermCacheItemEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_(%"class.std::__1::unique_ptr.681"* noalias sret, %"class.std::__1::__tree"*, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.678"* dereferenceable(8), %"class.std::__1::tuple.626"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.681"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.681"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.681"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call i8* @_Znwm(i64 112) #20
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.std::__1::unique_ptr.681"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = bitcast %"class.std::__1::allocator"** %7 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %6, %"class.std::__1::__compressed_pair"** %13, align 8
  store i8 0, i8* %8, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple.678", %"class.std::__1::tuple.678"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %5
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %22, i64 24, i1 false) #19
  br label %202

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast i16* %25 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, 11
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = trunc i64 %28 to i8
  %32 = getelementptr inbounds i8, i8* %10, i64 55
  store i8 %31, i8* %32, align 1
  br label %51

33:                                               ; preds = %23
  %34 = icmp ugt i64 %28, 9223372036854775791
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast i8* %14 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %36) #21
  unreachable

37:                                               ; preds = %33
  %38 = add nuw nsw i64 %28, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #21
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #20
  %45 = bitcast i8* %14 to i8**
  store i8* %44, i8** %45, align 8
  %46 = or i64 %39, -9223372036854775808
  %47 = getelementptr inbounds i8, i8* %10, i64 48
  %48 = bitcast i8* %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %10, i64 40
  %50 = bitcast i8* %49 to i64*
  store i64 %28, i64* %50, align 8
  br label %51

51:                                               ; preds = %42, %30
  %52 = phi i8* [ %14, %30 ], [ %44, %42 ]
  %53 = bitcast i8* %52 to i16*
  %54 = add nuw nsw i64 %28, 1
  %55 = add i64 %28, 1
  %56 = icmp ult i64 %55, 16
  br i1 %56, label %149, label %57

57:                                               ; preds = %51
  %58 = shl i64 %28, 1
  %59 = add i64 %58, 2
  %60 = getelementptr i8, i8* %52, i64 %59
  %61 = add i64 %28, 1
  %62 = getelementptr i16, i16* %25, i64 %61
  %63 = bitcast i16* %62 to i8*
  %64 = icmp ult i8* %52, %63
  %65 = icmp ugt i8* %60, %26
  %66 = and i1 %64, %65
  br i1 %66, label %149, label %67

67:                                               ; preds = %57
  %68 = and i64 %55, -16
  %69 = sub i64 %54, %68
  %70 = getelementptr i16, i16* %25, i64 %68
  %71 = getelementptr i16, i16* %53, i64 %68
  %72 = add i64 %68, -16
  %73 = lshr exact i64 %72, 4
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 48
  br i1 %76, label %128, label %77

77:                                               ; preds = %67
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i16, i16* %25, i64 %80
  %83 = getelementptr i16, i16* %53, i64 %80
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !350
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !350
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !353, !noalias !350
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !353, !noalias !350
  %92 = or i64 %80, 16
  %93 = getelementptr i16, i16* %25, i64 %92
  %94 = getelementptr i16, i16* %53, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !350
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !350
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !353, !noalias !350
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !353, !noalias !350
  %103 = or i64 %80, 32
  %104 = getelementptr i16, i16* %25, i64 %103
  %105 = getelementptr i16, i16* %53, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !350
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !350
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !353, !noalias !350
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !353, !noalias !350
  %114 = or i64 %80, 48
  %115 = getelementptr i16, i16* %25, i64 %114
  %116 = getelementptr i16, i16* %53, i64 %114
  %117 = bitcast i16* %115 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !350
  %119 = getelementptr i16, i16* %115, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !350
  %122 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %122, align 2, !alias.scope !353, !noalias !350
  %123 = getelementptr i16, i16* %116, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %124, align 2, !alias.scope !353, !noalias !350
  %125 = add i64 %80, 64
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !355

128:                                              ; preds = %79, %67
  %129 = phi i64 [ 0, %67 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i16, i16* %25, i64 %132
  %135 = getelementptr i16, i16* %53, i64 %132
  %136 = bitcast i16* %134 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !350
  %138 = getelementptr i16, i16* %134, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !350
  %141 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %141, align 2, !alias.scope !353, !noalias !350
  %142 = getelementptr i16, i16* %135, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %143, align 2, !alias.scope !353, !noalias !350
  %144 = add i64 %132, 16
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !356

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %55, %68
  br i1 %148, label %202, label %149

149:                                              ; preds = %147, %57, %51
  %150 = phi i64 [ %54, %57 ], [ %54, %51 ], [ %69, %147 ]
  %151 = phi i16* [ %25, %57 ], [ %25, %51 ], [ %70, %147 ]
  %152 = phi i16* [ %53, %57 ], [ %53, %51 ], [ %71, %147 ]
  %153 = add i64 %150, -1
  %154 = and i64 %150, 7
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %167, label %156

156:                                              ; preds = %149, %156
  %157 = phi i64 [ %162, %156 ], [ %150, %149 ]
  %158 = phi i16* [ %164, %156 ], [ %151, %149 ]
  %159 = phi i16* [ %163, %156 ], [ %152, %149 ]
  %160 = phi i64 [ %165, %156 ], [ %154, %149 ]
  %161 = load i16, i16* %158, align 2
  store i16 %161, i16* %159, align 2
  %162 = add i64 %157, -1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = getelementptr inbounds i16, i16* %158, i64 1
  %165 = add i64 %160, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %156, !llvm.loop !357

167:                                              ; preds = %156, %149
  %168 = phi i64 [ %150, %149 ], [ %162, %156 ]
  %169 = phi i16* [ %151, %149 ], [ %164, %156 ]
  %170 = phi i16* [ %152, %149 ], [ %163, %156 ]
  %171 = icmp ult i64 %153, 7
  br i1 %171, label %202, label %172

172:                                              ; preds = %167, %172
  %173 = phi i64 [ %198, %172 ], [ %168, %167 ]
  %174 = phi i16* [ %200, %172 ], [ %169, %167 ]
  %175 = phi i16* [ %199, %172 ], [ %170, %167 ]
  %176 = load i16, i16* %174, align 2
  store i16 %176, i16* %175, align 2
  %177 = getelementptr inbounds i16, i16* %175, i64 1
  %178 = getelementptr inbounds i16, i16* %174, i64 1
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %175, i64 2
  %181 = getelementptr inbounds i16, i16* %174, i64 2
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %175, i64 3
  %184 = getelementptr inbounds i16, i16* %174, i64 3
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %175, i64 4
  %187 = getelementptr inbounds i16, i16* %174, i64 4
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %175, i64 5
  %190 = getelementptr inbounds i16, i16* %174, i64 5
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %175, i64 6
  %193 = getelementptr inbounds i16, i16* %174, i64 6
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %175, i64 7
  %196 = getelementptr inbounds i16, i16* %174, i64 7
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = add i64 %173, -8
  %199 = getelementptr inbounds i16, i16* %175, i64 8
  %200 = getelementptr inbounds i16, i16* %174, i64 8
  %201 = icmp eq i64 %198, 0
  br i1 %201, label %202, label %172, !llvm.loop !358

202:                                              ; preds = %167, %172, %147, %21
  %203 = getelementptr inbounds i8, i8* %10, i64 56
  %204 = getelementptr inbounds i8, i8* %10, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 48, i1 false) #19
  store i8 1, i8* %204, align 8
  store i8 1, i8* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #21
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #21
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #21
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #20
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !359
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !359
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !362, !noalias !359
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !362, !noalias !359
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !359
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !359
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !362, !noalias !359
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !362, !noalias !359
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !359
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !359
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !362, !noalias !359
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !362, !noalias !359
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !359
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !359
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !362, !noalias !359
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !362, !noalias !359
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !364

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !359
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !359
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !362, !noalias !359
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !362, !noalias !359
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !365

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !366

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !367

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i16*, i8 } @_ZN4base8internal9flat_treeIDsNS_8identityENSt3__14lessIvEENS3_6vectorIDsNS3_9allocatorIDsEEEEE21emplace_hint_key_argsIDsJRKDsEEENS3_4pairINS3_11__wrap_iterIPDsEEbEENSF_IPSC_EERKT_DpOT0_(%"class.base::internal::flat_tree.522"*, i16*, i16* dereferenceable(2), i16* dereferenceable(2)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, %1
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds i16, i16* %1, i64 -1
  %10 = load i16, i16* %9, align 2
  %11 = load i16, i16* %2, align 2
  %12 = icmp ult i16 %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast i16** %14 to i64*
  %16 = load i64, i64* %15, align 8
  br label %31

17:                                               ; preds = %4, %8
  %18 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = load i16*, i16** %18, align 8
  %20 = icmp eq i16* %19, %1
  %21 = ptrtoint i16* %19 to i64
  br i1 %20, label %26, label %22

22:                                               ; preds = %17
  %23 = load i16, i16* %2, align 2
  %24 = load i16, i16* %1, align 2
  %25 = icmp ult i16 %23, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %17, %22
  %27 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %0, i64 0, i32 0
  %28 = tail call i16* @_ZNSt3__16vectorIDsNS_9allocatorIDsEEE7emplaceIJRKDsEEENS_11__wrap_iterIPDsEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.523"* %27, i16* %1, i16* dereferenceable(2) %3) #19
  br label %62

29:                                               ; preds = %22
  %30 = icmp ult i16 %24, %23
  br i1 %30, label %31, label %62

31:                                               ; preds = %29, %13
  %32 = phi i16 [ %11, %13 ], [ %23, %29 ]
  %33 = phi i64 [ %16, %13 ], [ %21, %29 ]
  %34 = ptrtoint i16* %6 to i64
  %35 = sub i64 %33, %34
  %36 = icmp eq i64 %35, 0
  %37 = inttoptr i64 %33 to i16*
  br i1 %36, label %53, label %38

38:                                               ; preds = %31
  %39 = ashr exact i64 %35, 1
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i16* [ %6, %38 ], [ %51, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %50, %40 ]
  %43 = lshr i64 %42, 1
  %44 = getelementptr inbounds i16, i16* %41, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = icmp ult i16 %45, %32
  %47 = getelementptr inbounds i16, i16* %44, i64 1
  %48 = xor i64 %43, -1
  %49 = add i64 %42, %48
  %50 = select i1 %46, i64 %49, i64 %43
  %51 = select i1 %46, i16* %47, i16* %41
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %40, %31
  %54 = phi i16* [ %6, %31 ], [ %51, %40 ]
  %55 = icmp eq i16* %54, %37
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = load i16, i16* %54, align 2
  %58 = icmp ult i16 %32, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %56, %53
  %60 = getelementptr inbounds %"class.base::internal::flat_tree.522", %"class.base::internal::flat_tree.522"* %0, i64 0, i32 0
  %61 = tail call i16* @_ZNSt3__16vectorIDsNS_9allocatorIDsEEE7emplaceIJRKDsEEENS_11__wrap_iterIPDsEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.523"* %60, i16* %54, i16* dereferenceable(2) %3) #19
  br label %62

62:                                               ; preds = %59, %56, %29, %26
  %63 = phi i16* [ %28, %26 ], [ %1, %29 ], [ %61, %59 ], [ %54, %56 ]
  %64 = phi i8 [ 1, %26 ], [ 0, %29 ], [ 1, %59 ], [ 0, %56 ]
  %65 = insertvalue { i16*, i8 } undef, i16* %63, 0
  %66 = insertvalue { i16*, i8 } %65, i8 %64, 1
  ret { i16*, i8 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNSt3__16vectorIDsNS_9allocatorIDsEEE7emplaceIJRKDsEEENS_11__wrap_iterIPDsEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.523"*, i16*, i16* dereferenceable(2)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i16* %1 to i64
  %5 = bitcast i16* %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.523", %"class.std::__1::vector.523"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.523", %"class.std::__1::vector.523"* %0, i64 0, i32 0, i32 1
  %8 = load i16*, i16** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.523", %"class.std::__1::vector.523"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = icmp ult i16* %8, %10
  %12 = ptrtoint i16* %8 to i64
  %13 = ptrtoint i16* %10 to i64
  br i1 %11, label %14, label %157

14:                                               ; preds = %3
  %15 = icmp eq i16* %8, %1
  %16 = load i16, i16* %2, align 2
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i16 %16, i16* %1, align 2
  %18 = getelementptr inbounds i16, i16* %1, i64 1
  %19 = ptrtoint i16* %18 to i64
  %20 = bitcast i16** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %392

21:                                               ; preds = %14
  %22 = getelementptr inbounds i16, i16* %1, i64 1
  %23 = ptrtoint i16* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 1
  %26 = getelementptr inbounds i16, i16* %1, i64 %25
  %27 = bitcast i16** %7 to i64*
  %28 = icmp ult i16* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i16, i16* %8, i64 %30
  %32 = bitcast i16* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 1
  %37 = add nuw i64 %36, 1
  %38 = icmp ult i64 %37, 16
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i16* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i16* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %149

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i16, i16* %8, i64 %43
  %45 = bitcast i16* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 1
  %50 = add nuw i64 %49, 1
  %51 = getelementptr i16, i16* %8, i64 %50
  %52 = add i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i16, i16* %1, i64 %53
  %55 = icmp ult i16* %8, %54
  %56 = icmp ult i16* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, -16
  %60 = getelementptr i16, i16* %8, i64 %59
  %61 = getelementptr i16, i16* %26, i64 %59
  %62 = add i64 %59, -16
  %63 = lshr exact i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 48
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i16, i16* %8, i64 %70
  %73 = getelementptr i16, i16* %26, i64 %70
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !368
  %76 = getelementptr i16, i16* %73, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !368
  %79 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %79, align 2, !alias.scope !371, !noalias !368
  %80 = getelementptr i16, i16* %72, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %81, align 2, !alias.scope !371, !noalias !368
  %82 = or i64 %70, 16
  %83 = getelementptr i16, i16* %8, i64 %82
  %84 = getelementptr i16, i16* %26, i64 %82
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !368
  %87 = getelementptr i16, i16* %84, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !368
  %90 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %90, align 2, !alias.scope !371, !noalias !368
  %91 = getelementptr i16, i16* %83, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %92, align 2, !alias.scope !371, !noalias !368
  %93 = or i64 %70, 32
  %94 = getelementptr i16, i16* %8, i64 %93
  %95 = getelementptr i16, i16* %26, i64 %93
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !368
  %98 = getelementptr i16, i16* %95, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !368
  %101 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !371, !noalias !368
  %102 = getelementptr i16, i16* %94, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !371, !noalias !368
  %104 = or i64 %70, 48
  %105 = getelementptr i16, i16* %8, i64 %104
  %106 = getelementptr i16, i16* %26, i64 %104
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !368
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !368
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !371, !noalias !368
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !371, !noalias !368
  %115 = add i64 %70, 64
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !373

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i16, i16* %8, i64 %122
  %125 = getelementptr i16, i16* %26, i64 %122
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !368
  %128 = getelementptr i16, i16* %125, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !368
  %131 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !371, !noalias !368
  %132 = getelementptr i16, i16* %124, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !371, !noalias !368
  %134 = add i64 %122, 16
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !374

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %149, %137
  %140 = phi i16* [ %60, %137 ], [ %154, %149 ]
  %141 = ptrtoint i16* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i16, i16* %8, i64 %146
  %148 = bitcast i16* %147 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %148, i8* align 2 %5, i64 %24, i1 false) #19
  br label %156

149:                                              ; preds = %39, %149
  %150 = phi i16* [ %154, %149 ], [ %40, %39 ]
  %151 = phi i16* [ %153, %149 ], [ %41, %39 ]
  %152 = load i16, i16* %151, align 2
  store i16 %152, i16* %150, align 2
  %153 = getelementptr inbounds i16, i16* %151, i64 1
  %154 = getelementptr inbounds i16, i16* %150, i64 1
  %155 = icmp ult i16* %153, %8
  br i1 %155, label %149, label %139, !llvm.loop !375

156:                                              ; preds = %142, %145
  store i16 %16, i16* %1, align 2
  br label %392

157:                                              ; preds = %3
  %158 = bitcast i16** %7 to i64*
  %159 = bitcast %"class.std::__1::vector.523"* %0 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %12, %160
  %162 = ashr exact i64 %161, 1
  %163 = add nsw i64 %162, 1
  %164 = icmp slt i64 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %157
  %166 = bitcast %"class.std::__1::vector.523"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %166) #21
  unreachable

167:                                              ; preds = %157
  %168 = bitcast i16** %9 to i64*
  %169 = sub i64 %13, %160
  %170 = ashr exact i64 %169, 1
  %171 = icmp ult i64 %170, 4611686018427387903
  %172 = icmp ult i64 %169, %163
  %173 = select i1 %172, i64 %163, i64 %169
  %174 = select i1 %171, i64 %173, i64 9223372036854775807
  %175 = sub i64 %4, %160
  %176 = ashr exact i64 %175, 1
  %177 = icmp eq i64 %174, 0
  br i1 %177, label %185, label %178

178:                                              ; preds = %167
  %179 = icmp slt i64 %174, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #21
  unreachable

181:                                              ; preds = %178
  %182 = shl i64 %174, 1
  %183 = tail call i8* @_Znwm(i64 %182) #20
  %184 = bitcast i8* %183 to i16*
  br label %185

185:                                              ; preds = %167, %181
  %186 = phi i8* [ %183, %181 ], [ null, %167 ]
  %187 = phi i16* [ %184, %181 ], [ null, %167 ]
  %188 = getelementptr inbounds i16, i16* %187, i64 %176
  %189 = getelementptr inbounds i16, i16* %187, i64 %174
  %190 = ptrtoint i16* %189 to i64
  %191 = icmp eq i64 %176, %174
  br i1 %191, label %192, label %213

192:                                              ; preds = %185
  %193 = icmp sgt i64 %175, 0
  br i1 %193, label %194, label %198

194:                                              ; preds = %192
  %195 = add nuw nsw i64 %174, 1
  %196 = sdiv i64 %195, -2
  %197 = getelementptr inbounds i16, i16* %188, i64 %196
  br label %213

198:                                              ; preds = %192
  %199 = shl nuw i64 %174, 1
  %200 = select i1 %177, i64 1, i64 %199
  %201 = icmp slt i64 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %198
  tail call void @abort() #21
  unreachable

203:                                              ; preds = %198
  %204 = lshr i64 %200, 2
  %205 = shl i64 %200, 1
  %206 = tail call i8* @_Znwm(i64 %205) #20
  %207 = bitcast i8* %206 to i16*
  %208 = getelementptr inbounds i16, i16* %207, i64 %204
  %209 = getelementptr inbounds i16, i16* %207, i64 %200
  %210 = ptrtoint i16* %209 to i64
  %211 = icmp eq i16* %187, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %203
  tail call void @_ZdlPv(i8* %186) #20
  br label %213

213:                                              ; preds = %185, %194, %203, %212
  %214 = phi i16* [ %197, %194 ], [ %208, %203 ], [ %208, %212 ], [ %188, %185 ]
  %215 = phi i64 [ %190, %194 ], [ %210, %203 ], [ %210, %212 ], [ %190, %185 ]
  %216 = load i16, i16* %2, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %214, i64 1
  %218 = load i16*, i16** %6, align 8
  %219 = ptrtoint i16* %218 to i64
  %220 = sub i64 %4, %219
  %221 = ashr exact i64 %220, 1
  %222 = sub nsw i64 0, %221
  %223 = getelementptr inbounds i16, i16* %214, i64 %222
  %224 = ptrtoint i16* %223 to i64
  %225 = icmp sgt i64 %220, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %213
  %227 = bitcast i16* %223 to i8*
  %228 = bitcast i16* %218 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %227, i8* align 2 %228, i64 %220, i1 false) #19
  br label %229

229:                                              ; preds = %226, %213
  %230 = load i16*, i16** %7, align 8
  %231 = icmp eq i16* %230, %1
  br i1 %231, label %385, label %232

232:                                              ; preds = %229
  %233 = getelementptr i16, i16* %230, i64 -1
  %234 = ptrtoint i16* %233 to i64
  %235 = sub i64 %234, %4
  %236 = lshr i64 %235, 1
  %237 = add nuw i64 %236, 1
  %238 = icmp ult i64 %237, 16
  br i1 %238, label %332, label %239

239:                                              ; preds = %232
  %240 = getelementptr i16, i16* %230, i64 -1
  %241 = ptrtoint i16* %240 to i64
  %242 = sub i64 %241, %4
  %243 = lshr i64 %242, 1
  %244 = add nuw i64 %243, 2
  %245 = getelementptr i16, i16* %214, i64 %244
  %246 = add nuw i64 %243, 1
  %247 = getelementptr i16, i16* %1, i64 %246
  %248 = icmp ult i16* %217, %247
  %249 = icmp ugt i16* %245, %1
  %250 = and i1 %248, %249
  br i1 %250, label %332, label %251

251:                                              ; preds = %239
  %252 = and i64 %237, -16
  %253 = getelementptr i16, i16* %217, i64 %252
  %254 = getelementptr i16, i16* %1, i64 %252
  %255 = add i64 %252, -16
  %256 = lshr exact i64 %255, 4
  %257 = add nuw nsw i64 %256, 1
  %258 = and i64 %257, 3
  %259 = icmp ult i64 %255, 48
  br i1 %259, label %311, label %260

260:                                              ; preds = %251
  %261 = sub nsw i64 %257, %258
  br label %262

262:                                              ; preds = %262, %260
  %263 = phi i64 [ 0, %260 ], [ %308, %262 ]
  %264 = phi i64 [ %261, %260 ], [ %309, %262 ]
  %265 = getelementptr i16, i16* %217, i64 %263
  %266 = getelementptr i16, i16* %1, i64 %263
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !376
  %269 = getelementptr i16, i16* %266, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !376
  %272 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %272, align 2, !alias.scope !379, !noalias !376
  %273 = getelementptr i16, i16* %265, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %274, align 2, !alias.scope !379, !noalias !376
  %275 = or i64 %263, 16
  %276 = getelementptr i16, i16* %217, i64 %275
  %277 = getelementptr i16, i16* %1, i64 %275
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !376
  %280 = getelementptr i16, i16* %277, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !376
  %283 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %283, align 2, !alias.scope !379, !noalias !376
  %284 = getelementptr i16, i16* %276, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %285, align 2, !alias.scope !379, !noalias !376
  %286 = or i64 %263, 32
  %287 = getelementptr i16, i16* %217, i64 %286
  %288 = getelementptr i16, i16* %1, i64 %286
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !376
  %291 = getelementptr i16, i16* %288, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !376
  %294 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %294, align 2, !alias.scope !379, !noalias !376
  %295 = getelementptr i16, i16* %287, i64 8
  %296 = bitcast i16* %295 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %296, align 2, !alias.scope !379, !noalias !376
  %297 = or i64 %263, 48
  %298 = getelementptr i16, i16* %217, i64 %297
  %299 = getelementptr i16, i16* %1, i64 %297
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !376
  %302 = getelementptr i16, i16* %299, i64 8
  %303 = bitcast i16* %302 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !376
  %305 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %305, align 2, !alias.scope !379, !noalias !376
  %306 = getelementptr i16, i16* %298, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %307, align 2, !alias.scope !379, !noalias !376
  %308 = add i64 %263, 64
  %309 = add i64 %264, -4
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %262, !llvm.loop !381

311:                                              ; preds = %262, %251
  %312 = phi i64 [ 0, %251 ], [ %308, %262 ]
  %313 = icmp eq i64 %258, 0
  br i1 %313, label %330, label %314

314:                                              ; preds = %311, %314
  %315 = phi i64 [ %327, %314 ], [ %312, %311 ]
  %316 = phi i64 [ %328, %314 ], [ %258, %311 ]
  %317 = getelementptr i16, i16* %217, i64 %315
  %318 = getelementptr i16, i16* %1, i64 %315
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !376
  %321 = getelementptr i16, i16* %318, i64 8
  %322 = bitcast i16* %321 to <8 x i16>*
  %323 = load <8 x i16>, <8 x i16>* %322, align 2, !alias.scope !376
  %324 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %324, align 2, !alias.scope !379, !noalias !376
  %325 = getelementptr i16, i16* %317, i64 8
  %326 = bitcast i16* %325 to <8 x i16>*
  store <8 x i16> %323, <8 x i16>* %326, align 2, !alias.scope !379, !noalias !376
  %327 = add i64 %315, 16
  %328 = add i64 %316, -1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %314, !llvm.loop !382

330:                                              ; preds = %314, %311
  %331 = icmp eq i64 %237, %252
  br i1 %331, label %385, label %332

332:                                              ; preds = %330, %239, %232
  %333 = phi i16* [ %217, %239 ], [ %217, %232 ], [ %253, %330 ]
  %334 = phi i16* [ %1, %239 ], [ %1, %232 ], [ %254, %330 ]
  %335 = ptrtoint i16* %334 to i64
  %336 = getelementptr i16, i16* %230, i64 -1
  %337 = ptrtoint i16* %336 to i64
  %338 = sub i64 %337, %335
  %339 = lshr i64 %338, 1
  %340 = add nuw i64 %339, 1
  %341 = and i64 %340, 7
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %352, label %343

343:                                              ; preds = %332, %343
  %344 = phi i16* [ %349, %343 ], [ %333, %332 ]
  %345 = phi i16* [ %348, %343 ], [ %334, %332 ]
  %346 = phi i64 [ %350, %343 ], [ %341, %332 ]
  %347 = load i16, i16* %345, align 2
  store i16 %347, i16* %344, align 2
  %348 = getelementptr inbounds i16, i16* %345, i64 1
  %349 = getelementptr inbounds i16, i16* %344, i64 1
  %350 = add i64 %346, -1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %343, !llvm.loop !383

352:                                              ; preds = %343, %332
  %353 = phi i16* [ undef, %332 ], [ %349, %343 ]
  %354 = phi i16* [ %333, %332 ], [ %349, %343 ]
  %355 = phi i16* [ %334, %332 ], [ %348, %343 ]
  %356 = icmp ult i64 %338, 14
  br i1 %356, label %385, label %357

357:                                              ; preds = %352, %357
  %358 = phi i16* [ %383, %357 ], [ %354, %352 ]
  %359 = phi i16* [ %382, %357 ], [ %355, %352 ]
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %359, i64 1
  %362 = getelementptr inbounds i16, i16* %358, i64 1
  %363 = load i16, i16* %361, align 2
  store i16 %363, i16* %362, align 2
  %364 = getelementptr inbounds i16, i16* %359, i64 2
  %365 = getelementptr inbounds i16, i16* %358, i64 2
  %366 = load i16, i16* %364, align 2
  store i16 %366, i16* %365, align 2
  %367 = getelementptr inbounds i16, i16* %359, i64 3
  %368 = getelementptr inbounds i16, i16* %358, i64 3
  %369 = load i16, i16* %367, align 2
  store i16 %369, i16* %368, align 2
  %370 = getelementptr inbounds i16, i16* %359, i64 4
  %371 = getelementptr inbounds i16, i16* %358, i64 4
  %372 = load i16, i16* %370, align 2
  store i16 %372, i16* %371, align 2
  %373 = getelementptr inbounds i16, i16* %359, i64 5
  %374 = getelementptr inbounds i16, i16* %358, i64 5
  %375 = load i16, i16* %373, align 2
  store i16 %375, i16* %374, align 2
  %376 = getelementptr inbounds i16, i16* %359, i64 6
  %377 = getelementptr inbounds i16, i16* %358, i64 6
  %378 = load i16, i16* %376, align 2
  store i16 %378, i16* %377, align 2
  %379 = getelementptr inbounds i16, i16* %359, i64 7
  %380 = getelementptr inbounds i16, i16* %358, i64 7
  %381 = load i16, i16* %379, align 2
  store i16 %381, i16* %380, align 2
  %382 = getelementptr inbounds i16, i16* %359, i64 8
  %383 = getelementptr inbounds i16, i16* %358, i64 8
  %384 = icmp eq i16* %382, %230
  br i1 %384, label %385, label %357, !llvm.loop !384

385:                                              ; preds = %352, %357, %330, %229
  %386 = phi i16* [ %217, %229 ], [ %253, %330 ], [ %353, %352 ], [ %383, %357 ]
  %387 = ptrtoint i16* %386 to i64
  %388 = load i16*, i16** %6, align 8
  store i64 %224, i64* %159, align 8
  store i64 %387, i64* %158, align 8
  store i64 %215, i64* %168, align 8
  %389 = icmp eq i16* %388, null
  br i1 %389, label %392, label %390

390:                                              ; preds = %385
  %391 = bitcast i16* %388 to i8*
  tail call void @_ZdlPv(i8* %391) #20
  br label %392

392:                                              ; preds = %390, %385, %17, %156
  %393 = phi i16* [ %1, %17 ], [ %1, %156 ], [ %214, %385 ], [ %214, %390 ]
  ret i16* %393
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEE15sort_and_uniqueEv(%"class.base::internal::flat_tree.517"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare", align 1
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.517", %"class.base::internal::flat_tree.517"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = ptrtoint i64* %6 to i64
  %8 = getelementptr inbounds %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare", %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  %9 = ptrtoint i64* %4 to i64
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 1024
  br i1 %12, label %13, label %24

13:                                               ; preds = %1
  %14 = icmp slt i64 %11, 1152921504606846975
  %15 = select i1 %14, i64 %11, i64 1152921504606846975
  br label %16

16:                                               ; preds = %21, %13
  %17 = phi i64 [ %22, %21 ], [ %15, %13 ]
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %18, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #19
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = lshr i64 %17, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %16

24:                                               ; preds = %21, %1
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %4, i64* %6, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* nonnull dereferenceable(1) %2, i64 %11, i64* null, i64 0) #19
  br label %27

25:                                               ; preds = %16
  %26 = bitcast i8* %19 to i64*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %4, i64* %6, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* nonnull dereferenceable(1) %2, i64 %11, i64* nonnull %26, i64 %17) #19
  call void @_ZdlPv(i8* nonnull %19) #20
  br label %27

27:                                               ; preds = %24, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8)
  %28 = icmp eq i64* %4, %6
  br i1 %28, label %78, label %29

29:                                               ; preds = %27, %33
  %30 = phi i64* [ %31, %33 ], [ %4, %27 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 1
  %32 = icmp eq i64* %31, %6
  br i1 %32, label %78, label %33

33:                                               ; preds = %29
  %34 = load i64, i64* %30, align 8
  %35 = load i64, i64* %31, align 8
  %36 = icmp slt i64 %34, %35
  br i1 %36, label %29, label %37

37:                                               ; preds = %33
  %38 = icmp eq i64* %30, %6
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds i64, i64* %30, i64 2
  %41 = icmp eq i64* %40, %6
  br i1 %41, label %63, label %42

42:                                               ; preds = %39
  %43 = ptrtoint i64* %30 to i64
  br label %44

44:                                               ; preds = %59, %42
  %45 = phi i64 [ %60, %59 ], [ %34, %42 ]
  %46 = phi i64* [ %58, %59 ], [ %30, %42 ]
  %47 = phi i64* [ %56, %59 ], [ %40, %42 ]
  %48 = phi i64 [ %55, %59 ], [ %43, %42 ]
  %49 = load i64, i64* %47, align 8
  %50 = icmp slt i64 %45, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %44
  %52 = getelementptr inbounds i64, i64* %46, i64 1
  %53 = ptrtoint i64* %52 to i64
  store i64 %49, i64* %52, align 8
  br label %54

54:                                               ; preds = %51, %44
  %55 = phi i64 [ %48, %44 ], [ %53, %51 ]
  %56 = getelementptr inbounds i64, i64* %47, i64 1
  %57 = icmp eq i64* %56, %6
  %58 = inttoptr i64 %55 to i64*
  br i1 %57, label %61, label %59

59:                                               ; preds = %54
  %60 = load i64, i64* %58, align 8
  br label %44

61:                                               ; preds = %54
  %62 = inttoptr i64 %55 to i64*
  br label %63

63:                                               ; preds = %61, %39
  %64 = phi i64* [ %30, %39 ], [ %62, %61 ]
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = icmp eq i64* %65, %6
  br i1 %66, label %78, label %67

67:                                               ; preds = %63
  %68 = bitcast i64** %5 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %69, %7
  %71 = ashr exact i64 %70, 3
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = bitcast i64* %65 to i8*
  %75 = bitcast i64* %6 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 %70, i1 false) #19
  br label %76

76:                                               ; preds = %73, %67
  %77 = getelementptr inbounds i64, i64* %65, i64 %71
  store i64* %77, i64** %5, align 8
  br label %78

78:                                               ; preds = %29, %27, %37, %63, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i64* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i64 %10, i64* %0, align 8
  store i64 %11, i64* %9, align 8
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i64* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i64, i64* %0, i64 1
  %20 = icmp eq i64* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i64, i64* %1, i64 -2
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i64, i64* %19, align 8
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i64* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 -1
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i64 %32, i64* %30, align 8
  %35 = icmp eq i64* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i64* [ %30, %29 ], [ %0, %34 ]
  store i64 %28, i64* %37, align 8
  %38 = getelementptr inbounds i64, i64* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i64* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 8
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i64* [ %410, %408 ], [ %40, %39 ]
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i64* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i64* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i64 %44, i64* %52, align 8
  %53 = getelementptr inbounds i64, i64* %43, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i64 %49, i64* %47, align 8
  %57 = icmp eq i64* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i64, i64* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %0, i64* %60, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i64, i64* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %63, i64* %64)
  %65 = getelementptr inbounds i64, i64* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i64* %366 to i64
  %68 = icmp eq i64* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i64, i64* %4, i64 %70
  %72 = ptrtoint i64* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 4
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i64* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i64* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i64* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i64, i64* %4, i64 %81
  %83 = ptrtoint i64* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i64* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i64* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i64, i64* %90, align 8
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds i64, i64* %90, i64 1
  %95 = getelementptr inbounds i64, i64* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !385

98:                                               ; preds = %89, %77
  %99 = phi i64* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i64* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 56
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i64, i64* %4, i64 %103
  %105 = ptrtoint i64* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i64, i64* %368, i64 %108
  %110 = getelementptr i64, i64* %366, i64 %108
  %111 = icmp ult i64* %368, %110
  %112 = icmp ult i64* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 4611686018427387900
  %116 = getelementptr i64, i64* %366, i64 %115
  %117 = getelementptr i64, i64* %368, i64 %115
  %118 = add nsw i64 %115, -4
  %119 = lshr exact i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 12
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i64, i64* %366, i64 %126
  %129 = getelementptr i64, i64* %368, i64 %126
  %130 = bitcast i64* %128 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !386
  %132 = getelementptr i64, i64* %128, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !386
  %135 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 8, !alias.scope !389, !noalias !386
  %136 = getelementptr i64, i64* %129, i64 2
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 8, !alias.scope !389, !noalias !386
  %138 = or i64 %126, 4
  %139 = getelementptr i64, i64* %366, i64 %138
  %140 = getelementptr i64, i64* %368, i64 %138
  %141 = bitcast i64* %139 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !386
  %143 = getelementptr i64, i64* %139, i64 2
  %144 = bitcast i64* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !386
  %146 = bitcast i64* %140 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 8, !alias.scope !389, !noalias !386
  %147 = getelementptr i64, i64* %140, i64 2
  %148 = bitcast i64* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 8, !alias.scope !389, !noalias !386
  %149 = or i64 %126, 8
  %150 = getelementptr i64, i64* %366, i64 %149
  %151 = getelementptr i64, i64* %368, i64 %149
  %152 = bitcast i64* %150 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !386
  %154 = getelementptr i64, i64* %150, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !386
  %157 = bitcast i64* %151 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !389, !noalias !386
  %158 = getelementptr i64, i64* %151, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !389, !noalias !386
  %160 = or i64 %126, 12
  %161 = getelementptr i64, i64* %366, i64 %160
  %162 = getelementptr i64, i64* %368, i64 %160
  %163 = bitcast i64* %161 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !386
  %165 = getelementptr i64, i64* %161, i64 2
  %166 = bitcast i64* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !386
  %168 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 8, !alias.scope !389, !noalias !386
  %169 = getelementptr i64, i64* %162, i64 2
  %170 = bitcast i64* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 8, !alias.scope !389, !noalias !386
  %171 = add i64 %126, 16
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !391

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i64, i64* %366, i64 %178
  %181 = getelementptr i64, i64* %368, i64 %178
  %182 = bitcast i64* %180 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !386
  %184 = getelementptr i64, i64* %180, i64 2
  %185 = bitcast i64* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !386
  %187 = bitcast i64* %181 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %187, align 8, !alias.scope !389, !noalias !386
  %188 = getelementptr i64, i64* %181, i64 2
  %189 = bitcast i64* %188 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %189, align 8, !alias.scope !389, !noalias !386
  %190 = add i64 %178, 4
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !392

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i64* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i64* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i64* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i64* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i64* %196 to i64
  %202 = icmp eq i64* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i64, i64* %4, i64 %204
  %206 = ptrtoint i64* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 4
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i64, i64* %4, i64 %212
  %214 = ptrtoint i64* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i64, i64* %198, i64 %217
  %219 = getelementptr i64, i64* %196, i64 %217
  %220 = icmp ult i64* %198, %219
  %221 = icmp ult i64* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 4611686018427387900
  %225 = getelementptr i64, i64* %196, i64 %224
  %226 = getelementptr i64, i64* %198, i64 %224
  %227 = add nsw i64 %224, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i64, i64* %196, i64 %235
  %238 = getelementptr i64, i64* %198, i64 %235
  %239 = bitcast i64* %237 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !393
  %241 = getelementptr i64, i64* %237, i64 2
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !393
  %244 = bitcast i64* %238 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 8, !alias.scope !396, !noalias !393
  %245 = getelementptr i64, i64* %238, i64 2
  %246 = bitcast i64* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 8, !alias.scope !396, !noalias !393
  %247 = or i64 %235, 4
  %248 = getelementptr i64, i64* %196, i64 %247
  %249 = getelementptr i64, i64* %198, i64 %247
  %250 = bitcast i64* %248 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !393
  %252 = getelementptr i64, i64* %248, i64 2
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !393
  %255 = bitcast i64* %249 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 8, !alias.scope !396, !noalias !393
  %256 = getelementptr i64, i64* %249, i64 2
  %257 = bitcast i64* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 8, !alias.scope !396, !noalias !393
  %258 = or i64 %235, 8
  %259 = getelementptr i64, i64* %196, i64 %258
  %260 = getelementptr i64, i64* %198, i64 %258
  %261 = bitcast i64* %259 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !393
  %263 = getelementptr i64, i64* %259, i64 2
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !393
  %266 = bitcast i64* %260 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 8, !alias.scope !396, !noalias !393
  %267 = getelementptr i64, i64* %260, i64 2
  %268 = bitcast i64* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 8, !alias.scope !396, !noalias !393
  %269 = or i64 %235, 12
  %270 = getelementptr i64, i64* %196, i64 %269
  %271 = getelementptr i64, i64* %198, i64 %269
  %272 = bitcast i64* %270 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !393
  %274 = getelementptr i64, i64* %270, i64 2
  %275 = bitcast i64* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 8, !alias.scope !393
  %277 = bitcast i64* %271 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 8, !alias.scope !396, !noalias !393
  %278 = getelementptr i64, i64* %271, i64 2
  %279 = bitcast i64* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 8, !alias.scope !396, !noalias !393
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !398

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i64, i64* %196, i64 %287
  %290 = getelementptr i64, i64* %198, i64 %287
  %291 = bitcast i64* %289 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !393
  %293 = getelementptr i64, i64* %289, i64 2
  %294 = bitcast i64* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !393
  %296 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !396, !noalias !393
  %297 = getelementptr i64, i64* %290, i64 2
  %298 = bitcast i64* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !396, !noalias !393
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !399

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i64* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i64* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i64* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i64, i64* %4, i64 %308
  %310 = ptrtoint i64* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 3
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i64* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i64* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i64, i64* %317, align 8
  store i64 %320, i64* %318, align 8
  %321 = getelementptr inbounds i64, i64* %317, i64 1
  %322 = getelementptr inbounds i64, i64* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !400

325:                                              ; preds = %316, %304
  %326 = phi i64* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i64* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 56
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i64* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i64* [ %355, %329 ], [ %327, %325 ]
  %332 = load i64, i64* %330, align 8
  store i64 %332, i64* %331, align 8
  %333 = getelementptr inbounds i64, i64* %330, i64 1
  %334 = getelementptr inbounds i64, i64* %331, i64 1
  %335 = load i64, i64* %333, align 8
  store i64 %335, i64* %334, align 8
  %336 = getelementptr inbounds i64, i64* %330, i64 2
  %337 = getelementptr inbounds i64, i64* %331, i64 2
  %338 = load i64, i64* %336, align 8
  store i64 %338, i64* %337, align 8
  %339 = getelementptr inbounds i64, i64* %330, i64 3
  %340 = getelementptr inbounds i64, i64* %331, i64 3
  %341 = load i64, i64* %339, align 8
  store i64 %341, i64* %340, align 8
  %342 = getelementptr inbounds i64, i64* %330, i64 4
  %343 = getelementptr inbounds i64, i64* %331, i64 4
  %344 = load i64, i64* %342, align 8
  store i64 %344, i64* %343, align 8
  %345 = getelementptr inbounds i64, i64* %330, i64 5
  %346 = getelementptr inbounds i64, i64* %331, i64 5
  %347 = load i64, i64* %345, align 8
  store i64 %347, i64* %346, align 8
  %348 = getelementptr inbounds i64, i64* %330, i64 6
  %349 = getelementptr inbounds i64, i64* %331, i64 6
  %350 = load i64, i64* %348, align 8
  store i64 %350, i64* %349, align 8
  %351 = getelementptr inbounds i64, i64* %330, i64 7
  %352 = getelementptr inbounds i64, i64* %331, i64 7
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds i64, i64* %330, i64 8
  %355 = getelementptr inbounds i64, i64* %331, i64 8
  %356 = icmp eq i64* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !401

357:                                              ; preds = %195
  %358 = load i64, i64* %197, align 8
  %359 = load i64, i64* %196, align 8
  %360 = icmp slt i64 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i64 %358, i64* %198, align 8
  %362 = getelementptr inbounds i64, i64* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i64 %359, i64* %198, align 8
  %364 = getelementptr inbounds i64, i64* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i64* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i64* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i64, i64* %198, i64 1
  %369 = icmp eq i64* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i64* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i64* [ %396, %370 ], [ %100, %98 ]
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %371, i64 1
  %375 = getelementptr inbounds i64, i64* %372, i64 1
  %376 = load i64, i64* %374, align 8
  store i64 %376, i64* %375, align 8
  %377 = getelementptr inbounds i64, i64* %371, i64 2
  %378 = getelementptr inbounds i64, i64* %372, i64 2
  %379 = load i64, i64* %377, align 8
  store i64 %379, i64* %378, align 8
  %380 = getelementptr inbounds i64, i64* %371, i64 3
  %381 = getelementptr inbounds i64, i64* %372, i64 3
  %382 = load i64, i64* %380, align 8
  store i64 %382, i64* %381, align 8
  %383 = getelementptr inbounds i64, i64* %371, i64 4
  %384 = getelementptr inbounds i64, i64* %372, i64 4
  %385 = load i64, i64* %383, align 8
  store i64 %385, i64* %384, align 8
  %386 = getelementptr inbounds i64, i64* %371, i64 5
  %387 = getelementptr inbounds i64, i64* %372, i64 5
  %388 = load i64, i64* %386, align 8
  store i64 %388, i64* %387, align 8
  %389 = getelementptr inbounds i64, i64* %371, i64 6
  %390 = getelementptr inbounds i64, i64* %372, i64 6
  %391 = load i64, i64* %389, align 8
  store i64 %391, i64* %390, align 8
  %392 = getelementptr inbounds i64, i64* %371, i64 7
  %393 = getelementptr inbounds i64, i64* %372, i64 7
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds i64, i64* %371, i64 8
  %396 = getelementptr inbounds i64, i64* %372, i64 8
  %397 = icmp eq i64* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !402

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %60, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %399, i64* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %0, i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i64* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i64* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i64, i64* %402, i64 -1
  %404 = load i64, i64* %403, align 8
  %405 = icmp slt i64 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i64 %404, i64* %402, align 8
  %407 = icmp eq i64* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i64* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i64 %54, i64* %409, align 8
  %410 = getelementptr inbounds i64, i64* %43, i64 2
  %411 = icmp eq i64* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i64 %10, i64* %4, align 8
  %14 = getelementptr inbounds i64, i64* %4, i64 1
  %15 = load i64, i64* %0, align 8
  store i64 %15, i64* %14, align 8
  br label %390

16:                                               ; preds = %8
  store i64 %11, i64* %4, align 8
  %17 = getelementptr inbounds i64, i64* %4, i64 1
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %17, align 8
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i64* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i64, i64* %0, align 8
  store i64 %24, i64* %4, align 8
  %25 = getelementptr inbounds i64, i64* %0, i64 1
  %26 = icmp eq i64* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i64 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i64* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i64* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 1
  %32 = load i64, i64* %29, align 8
  %33 = icmp slt i64 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i64 %28, i64* %31, align 8
  %35 = icmp eq i64* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i64* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 -1
  %39 = load i64, i64* %29, align 8
  %40 = load i64, i64* %38, align 8
  %41 = icmp slt i64 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i64 %40, i64* %37, align 8
  %43 = icmp eq i64* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i64* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i64, i64* %29, align 8
  store i64 %46, i64* %45, align 8
  br label %48

47:                                               ; preds = %27
  store i64 %32, i64* %31, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i64, i64* %29, i64 1
  %50 = icmp eq i64* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i64, i64* %31, align 8
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i64, i64* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %55, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %54, i64* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i64, i64* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %55, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %56, i64* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i64* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i64* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i64* %60 to i64
  %63 = icmp eq i64* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i64, i64* %1, i64 -1
  %66 = ptrtoint i64* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 3
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 4
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i64, i64* %1, i64 -1
  %73 = ptrtoint i64* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i64, i64* %61, i64 %76
  %78 = getelementptr i64, i64* %60, i64 %76
  %79 = icmp ult i64* %61, %78
  %80 = icmp ult i64* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 4611686018427387900
  %84 = getelementptr i64, i64* %61, i64 %83
  %85 = getelementptr i64, i64* %60, i64 %83
  %86 = add nsw i64 %83, -4
  %87 = lshr exact i64 %86, 2
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 12
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i64, i64* %61, i64 %94
  %97 = getelementptr i64, i64* %60, i64 %94
  %98 = bitcast i64* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !403
  %100 = getelementptr i64, i64* %97, i64 2
  %101 = bitcast i64* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !403
  %103 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !406, !noalias !403
  %104 = getelementptr i64, i64* %96, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !406, !noalias !403
  %106 = or i64 %94, 4
  %107 = getelementptr i64, i64* %61, i64 %106
  %108 = getelementptr i64, i64* %60, i64 %106
  %109 = bitcast i64* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !403
  %111 = getelementptr i64, i64* %108, i64 2
  %112 = bitcast i64* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !403
  %114 = bitcast i64* %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !406, !noalias !403
  %115 = getelementptr i64, i64* %107, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !406, !noalias !403
  %117 = or i64 %94, 8
  %118 = getelementptr i64, i64* %61, i64 %117
  %119 = getelementptr i64, i64* %60, i64 %117
  %120 = bitcast i64* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !403
  %122 = getelementptr i64, i64* %119, i64 2
  %123 = bitcast i64* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !403
  %125 = bitcast i64* %118 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 8, !alias.scope !406, !noalias !403
  %126 = getelementptr i64, i64* %118, i64 2
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 8, !alias.scope !406, !noalias !403
  %128 = or i64 %94, 12
  %129 = getelementptr i64, i64* %61, i64 %128
  %130 = getelementptr i64, i64* %60, i64 %128
  %131 = bitcast i64* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !403
  %133 = getelementptr i64, i64* %130, i64 2
  %134 = bitcast i64* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !403
  %136 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %136, align 8, !alias.scope !406, !noalias !403
  %137 = getelementptr i64, i64* %129, i64 2
  %138 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %138, align 8, !alias.scope !406, !noalias !403
  %139 = add i64 %94, 16
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !408

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i64, i64* %61, i64 %146
  %149 = getelementptr i64, i64* %60, i64 %146
  %150 = bitcast i64* %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !alias.scope !403
  %152 = getelementptr i64, i64* %149, i64 2
  %153 = bitcast i64* %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !403
  %155 = bitcast i64* %148 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %155, align 8, !alias.scope !406, !noalias !403
  %156 = getelementptr i64, i64* %148, i64 2
  %157 = bitcast i64* %156 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %157, align 8, !alias.scope !406, !noalias !403
  %158 = add i64 %146, 4
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !409

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i64* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i64* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i64* %165 to i64
  %167 = getelementptr i64, i64* %1, i64 -1
  %168 = ptrtoint i64* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 3
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i64* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i64* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %175, align 8
  %179 = getelementptr inbounds i64, i64* %176, i64 1
  %180 = getelementptr inbounds i64, i64* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !410

183:                                              ; preds = %174, %163
  %184 = phi i64* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i64* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 56
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i64* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i64* [ %212, %187 ], [ %185, %183 ]
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  %191 = getelementptr inbounds i64, i64* %189, i64 1
  %192 = getelementptr inbounds i64, i64* %188, i64 1
  %193 = load i64, i64* %191, align 8
  store i64 %193, i64* %192, align 8
  %194 = getelementptr inbounds i64, i64* %189, i64 2
  %195 = getelementptr inbounds i64, i64* %188, i64 2
  %196 = load i64, i64* %194, align 8
  store i64 %196, i64* %195, align 8
  %197 = getelementptr inbounds i64, i64* %189, i64 3
  %198 = getelementptr inbounds i64, i64* %188, i64 3
  %199 = load i64, i64* %197, align 8
  store i64 %199, i64* %198, align 8
  %200 = getelementptr inbounds i64, i64* %189, i64 4
  %201 = getelementptr inbounds i64, i64* %188, i64 4
  %202 = load i64, i64* %200, align 8
  store i64 %202, i64* %201, align 8
  %203 = getelementptr inbounds i64, i64* %189, i64 5
  %204 = getelementptr inbounds i64, i64* %188, i64 5
  %205 = load i64, i64* %203, align 8
  store i64 %205, i64* %204, align 8
  %206 = getelementptr inbounds i64, i64* %189, i64 6
  %207 = getelementptr inbounds i64, i64* %188, i64 6
  %208 = load i64, i64* %206, align 8
  store i64 %208, i64* %207, align 8
  %209 = getelementptr inbounds i64, i64* %189, i64 7
  %210 = getelementptr inbounds i64, i64* %188, i64 7
  %211 = load i64, i64* %209, align 8
  store i64 %211, i64* %210, align 8
  %212 = getelementptr inbounds i64, i64* %189, i64 8
  %213 = getelementptr inbounds i64, i64* %188, i64 8
  %214 = icmp eq i64* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !411

215:                                              ; preds = %53, %385
  %216 = phi i64* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i64* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i64* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i64* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i64* %217 to i64
  %222 = icmp eq i64* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i64, i64* %0, i64 %224
  %226 = ptrtoint i64* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 4
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i64, i64* %0, i64 %232
  %234 = ptrtoint i64* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i64, i64* %216, i64 %237
  %239 = getelementptr i64, i64* %217, i64 %237
  %240 = icmp ult i64* %216, %239
  %241 = icmp ult i64* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 4611686018427387900
  %245 = getelementptr i64, i64* %216, i64 %244
  %246 = getelementptr i64, i64* %217, i64 %244
  %247 = add nsw i64 %244, -4
  %248 = lshr exact i64 %247, 2
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 12
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i64, i64* %216, i64 %255
  %258 = getelementptr i64, i64* %217, i64 %255
  %259 = bitcast i64* %258 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 8, !alias.scope !412
  %261 = getelementptr i64, i64* %258, i64 2
  %262 = bitcast i64* %261 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !412
  %264 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %260, <2 x i64>* %264, align 8, !alias.scope !415, !noalias !412
  %265 = getelementptr i64, i64* %257, i64 2
  %266 = bitcast i64* %265 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %266, align 8, !alias.scope !415, !noalias !412
  %267 = or i64 %255, 4
  %268 = getelementptr i64, i64* %216, i64 %267
  %269 = getelementptr i64, i64* %217, i64 %267
  %270 = bitcast i64* %269 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8, !alias.scope !412
  %272 = getelementptr i64, i64* %269, i64 2
  %273 = bitcast i64* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !412
  %275 = bitcast i64* %268 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %275, align 8, !alias.scope !415, !noalias !412
  %276 = getelementptr i64, i64* %268, i64 2
  %277 = bitcast i64* %276 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %277, align 8, !alias.scope !415, !noalias !412
  %278 = or i64 %255, 8
  %279 = getelementptr i64, i64* %216, i64 %278
  %280 = getelementptr i64, i64* %217, i64 %278
  %281 = bitcast i64* %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 8, !alias.scope !412
  %283 = getelementptr i64, i64* %280, i64 2
  %284 = bitcast i64* %283 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !412
  %286 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %286, align 8, !alias.scope !415, !noalias !412
  %287 = getelementptr i64, i64* %279, i64 2
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %288, align 8, !alias.scope !415, !noalias !412
  %289 = or i64 %255, 12
  %290 = getelementptr i64, i64* %216, i64 %289
  %291 = getelementptr i64, i64* %217, i64 %289
  %292 = bitcast i64* %291 to <2 x i64>*
  %293 = load <2 x i64>, <2 x i64>* %292, align 8, !alias.scope !412
  %294 = getelementptr i64, i64* %291, i64 2
  %295 = bitcast i64* %294 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !alias.scope !412
  %297 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %293, <2 x i64>* %297, align 8, !alias.scope !415, !noalias !412
  %298 = getelementptr i64, i64* %290, i64 2
  %299 = bitcast i64* %298 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %299, align 8, !alias.scope !415, !noalias !412
  %300 = add i64 %255, 16
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !417

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i64, i64* %216, i64 %307
  %310 = getelementptr i64, i64* %217, i64 %307
  %311 = bitcast i64* %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !412
  %313 = getelementptr i64, i64* %310, i64 2
  %314 = bitcast i64* %313 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8, !alias.scope !412
  %316 = bitcast i64* %309 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %316, align 8, !alias.scope !415, !noalias !412
  %317 = getelementptr i64, i64* %309, i64 2
  %318 = bitcast i64* %317 to <2 x i64>*
  store <2 x i64> %315, <2 x i64>* %318, align 8, !alias.scope !415, !noalias !412
  %319 = add i64 %307, 4
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !418

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i64* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i64* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i64* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i64, i64* %0, i64 %328
  %330 = ptrtoint i64* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 3
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i64* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i64* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %337, align 8
  %341 = getelementptr inbounds i64, i64* %338, i64 1
  %342 = getelementptr inbounds i64, i64* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !419

345:                                              ; preds = %336, %324
  %346 = phi i64* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i64* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 56
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i64* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i64* [ %374, %349 ], [ %347, %345 ]
  %352 = load i64, i64* %351, align 8
  store i64 %352, i64* %350, align 8
  %353 = getelementptr inbounds i64, i64* %351, i64 1
  %354 = getelementptr inbounds i64, i64* %350, i64 1
  %355 = load i64, i64* %353, align 8
  store i64 %355, i64* %354, align 8
  %356 = getelementptr inbounds i64, i64* %351, i64 2
  %357 = getelementptr inbounds i64, i64* %350, i64 2
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  %359 = getelementptr inbounds i64, i64* %351, i64 3
  %360 = getelementptr inbounds i64, i64* %350, i64 3
  %361 = load i64, i64* %359, align 8
  store i64 %361, i64* %360, align 8
  %362 = getelementptr inbounds i64, i64* %351, i64 4
  %363 = getelementptr inbounds i64, i64* %350, i64 4
  %364 = load i64, i64* %362, align 8
  store i64 %364, i64* %363, align 8
  %365 = getelementptr inbounds i64, i64* %351, i64 5
  %366 = getelementptr inbounds i64, i64* %350, i64 5
  %367 = load i64, i64* %365, align 8
  store i64 %367, i64* %366, align 8
  %368 = getelementptr inbounds i64, i64* %351, i64 6
  %369 = getelementptr inbounds i64, i64* %350, i64 6
  %370 = load i64, i64* %368, align 8
  store i64 %370, i64* %369, align 8
  %371 = getelementptr inbounds i64, i64* %351, i64 7
  %372 = getelementptr inbounds i64, i64* %350, i64 7
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %351, i64 8
  %375 = getelementptr inbounds i64, i64* %350, i64 8
  %376 = icmp eq i64* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !420

377:                                              ; preds = %215
  %378 = load i64, i64* %218, align 8
  %379 = load i64, i64* %217, align 8
  %380 = icmp slt i64 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i64 %378, i64* %216, align 8
  %382 = getelementptr inbounds i64, i64* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i64 %379, i64* %216, align 8
  %384 = getelementptr inbounds i64, i64* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i64* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i64* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i64, i64* %216, i64 1
  %389 = icmp eq i64* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64*, i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64, i64*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i64* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i64* %1 to i64
  %13 = ptrtoint i64* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i64* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i64*
  %27 = load i64, i64* %26, align 8
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i64*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i64*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i64* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i64, i64* %31, i64 -1
  %38 = bitcast i64* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 4
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i64* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i64* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = getelementptr i64, i64* %31, i64 -1
  %50 = ptrtoint i64* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i64* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i64* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %57, align 8
  %61 = getelementptr inbounds i64, i64* %58, i64 1
  %62 = getelementptr inbounds i64, i64* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !421

65:                                               ; preds = %56, %45
  %66 = phi i64* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i64* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i64* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 56
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i64, i64* %31, i64 -1
  %72 = bitcast i64* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i64, i64* %6, i64 %77
  %79 = bitcast i64* %78 to i8*
  %80 = getelementptr i64, i64* %29, i64 %77
  %81 = icmp ugt i64* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 4611686018427387900
  %86 = getelementptr i64, i64* %6, i64 %85
  %87 = getelementptr i64, i64* %29, i64 %85
  %88 = add nsw i64 %85, -4
  %89 = lshr exact i64 %88, 2
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 12
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i64, i64* %6, i64 %96
  %99 = getelementptr i64, i64* %29, i64 %96
  %100 = bitcast i64* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !422
  %102 = getelementptr i64, i64* %99, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !422
  %105 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8, !alias.scope !425, !noalias !422
  %106 = getelementptr i64, i64* %98, i64 2
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8, !alias.scope !425, !noalias !422
  %108 = or i64 %96, 4
  %109 = getelementptr i64, i64* %6, i64 %108
  %110 = getelementptr i64, i64* %29, i64 %108
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !422
  %113 = getelementptr i64, i64* %110, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !422
  %116 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !425, !noalias !422
  %117 = getelementptr i64, i64* %109, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !425, !noalias !422
  %119 = or i64 %96, 8
  %120 = getelementptr i64, i64* %6, i64 %119
  %121 = getelementptr i64, i64* %29, i64 %119
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !422
  %124 = getelementptr i64, i64* %121, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !422
  %127 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !425, !noalias !422
  %128 = getelementptr i64, i64* %120, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !425, !noalias !422
  %130 = or i64 %96, 12
  %131 = getelementptr i64, i64* %6, i64 %130
  %132 = getelementptr i64, i64* %29, i64 %130
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !422
  %135 = getelementptr i64, i64* %132, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !422
  %138 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !425, !noalias !422
  %139 = getelementptr i64, i64* %131, i64 2
  %140 = bitcast i64* %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !425, !noalias !422
  %141 = add i64 %96, 16
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !427

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i64, i64* %6, i64 %148
  %151 = getelementptr i64, i64* %29, i64 %148
  %152 = bitcast i64* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !422
  %154 = getelementptr i64, i64* %151, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !422
  %157 = bitcast i64* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !425, !noalias !422
  %158 = getelementptr i64, i64* %150, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !425, !noalias !422
  %160 = add i64 %148, 4
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !428

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i64* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i64, i64* %15, i64 -1
  %169 = bitcast i64* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 4
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i64* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i64* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i64* %178 to i64
  %180 = getelementptr i64, i64* %15, i64 -1
  %181 = ptrtoint i64* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i64* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i64* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i64, i64* %189, align 8
  store i64 %191, i64* %188, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !429

196:                                              ; preds = %187, %176
  %197 = phi i64* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i64* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i64* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 56
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i64, i64* %15, i64 -1
  %203 = bitcast i64* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 3
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i64, i64* %6, i64 %208
  %210 = bitcast i64* %209 to i8*
  %211 = getelementptr i64, i64* %31, i64 %208
  %212 = icmp ugt i64* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 4611686018427387900
  %217 = getelementptr i64, i64* %6, i64 %216
  %218 = getelementptr i64, i64* %31, i64 %216
  %219 = add nsw i64 %216, -4
  %220 = lshr exact i64 %219, 2
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 12
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i64, i64* %6, i64 %227
  %230 = getelementptr i64, i64* %31, i64 %227
  %231 = bitcast i64* %230 to <2 x i64>*
  %232 = load <2 x i64>, <2 x i64>* %231, align 8, !alias.scope !430
  %233 = getelementptr i64, i64* %230, i64 2
  %234 = bitcast i64* %233 to <2 x i64>*
  %235 = load <2 x i64>, <2 x i64>* %234, align 8, !alias.scope !430
  %236 = bitcast i64* %229 to <2 x i64>*
  store <2 x i64> %232, <2 x i64>* %236, align 8, !alias.scope !433, !noalias !430
  %237 = getelementptr i64, i64* %229, i64 2
  %238 = bitcast i64* %237 to <2 x i64>*
  store <2 x i64> %235, <2 x i64>* %238, align 8, !alias.scope !433, !noalias !430
  %239 = or i64 %227, 4
  %240 = getelementptr i64, i64* %6, i64 %239
  %241 = getelementptr i64, i64* %31, i64 %239
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !430
  %244 = getelementptr i64, i64* %241, i64 2
  %245 = bitcast i64* %244 to <2 x i64>*
  %246 = load <2 x i64>, <2 x i64>* %245, align 8, !alias.scope !430
  %247 = bitcast i64* %240 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %247, align 8, !alias.scope !433, !noalias !430
  %248 = getelementptr i64, i64* %240, i64 2
  %249 = bitcast i64* %248 to <2 x i64>*
  store <2 x i64> %246, <2 x i64>* %249, align 8, !alias.scope !433, !noalias !430
  %250 = or i64 %227, 8
  %251 = getelementptr i64, i64* %6, i64 %250
  %252 = getelementptr i64, i64* %31, i64 %250
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !430
  %255 = getelementptr i64, i64* %252, i64 2
  %256 = bitcast i64* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !alias.scope !430
  %258 = bitcast i64* %251 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %258, align 8, !alias.scope !433, !noalias !430
  %259 = getelementptr i64, i64* %251, i64 2
  %260 = bitcast i64* %259 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %260, align 8, !alias.scope !433, !noalias !430
  %261 = or i64 %227, 12
  %262 = getelementptr i64, i64* %6, i64 %261
  %263 = getelementptr i64, i64* %31, i64 %261
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !430
  %266 = getelementptr i64, i64* %263, i64 2
  %267 = bitcast i64* %266 to <2 x i64>*
  %268 = load <2 x i64>, <2 x i64>* %267, align 8, !alias.scope !430
  %269 = bitcast i64* %262 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %269, align 8, !alias.scope !433, !noalias !430
  %270 = getelementptr i64, i64* %262, i64 2
  %271 = bitcast i64* %270 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %271, align 8, !alias.scope !433, !noalias !430
  %272 = add i64 %227, 16
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !435

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i64, i64* %6, i64 %279
  %282 = getelementptr i64, i64* %31, i64 %279
  %283 = bitcast i64* %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !430
  %285 = getelementptr i64, i64* %282, i64 2
  %286 = bitcast i64* %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !430
  %288 = bitcast i64* %281 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %288, align 8, !alias.scope !433, !noalias !430
  %289 = getelementptr i64, i64* %281, i64 2
  %290 = bitcast i64* %289 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %290, align 8, !alias.scope !433, !noalias !430
  %291 = add i64 %279, 4
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !436

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i64* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i64* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i64* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i64* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i64* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i64* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i64* %297 to i64
  %306 = ptrtoint i64* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i64* %301 to i8*
  %311 = bitcast i64* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 %307, i1 false) #19
  br label %887

312:                                              ; preds = %299
  %313 = load i64, i64* %302, align 8
  %314 = load i64, i64* %300, align 8
  %315 = icmp slt i64 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i64 %313, i64* %301, align 8
  %317 = getelementptr inbounds i64, i64* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i64 %314, i64* %301, align 8
  %319 = getelementptr inbounds i64, i64* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i64* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i64* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i64, i64* %301, i64 1
  %324 = icmp eq i64* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i64* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i64* [ %350, %325 ], [ %68, %65 ]
  %328 = load i64, i64* %327, align 8
  store i64 %328, i64* %326, align 8
  %329 = getelementptr inbounds i64, i64* %327, i64 1
  %330 = getelementptr inbounds i64, i64* %326, i64 1
  %331 = load i64, i64* %329, align 8
  store i64 %331, i64* %330, align 8
  %332 = getelementptr inbounds i64, i64* %327, i64 2
  %333 = getelementptr inbounds i64, i64* %326, i64 2
  %334 = load i64, i64* %332, align 8
  store i64 %334, i64* %333, align 8
  %335 = getelementptr inbounds i64, i64* %327, i64 3
  %336 = getelementptr inbounds i64, i64* %326, i64 3
  %337 = load i64, i64* %335, align 8
  store i64 %337, i64* %336, align 8
  %338 = getelementptr inbounds i64, i64* %327, i64 4
  %339 = getelementptr inbounds i64, i64* %326, i64 4
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %339, align 8
  %341 = getelementptr inbounds i64, i64* %327, i64 5
  %342 = getelementptr inbounds i64, i64* %326, i64 5
  %343 = load i64, i64* %341, align 8
  store i64 %343, i64* %342, align 8
  %344 = getelementptr inbounds i64, i64* %327, i64 6
  %345 = getelementptr inbounds i64, i64* %326, i64 6
  %346 = load i64, i64* %344, align 8
  store i64 %346, i64* %345, align 8
  %347 = getelementptr inbounds i64, i64* %327, i64 7
  %348 = getelementptr inbounds i64, i64* %326, i64 7
  %349 = load i64, i64* %347, align 8
  store i64 %349, i64* %348, align 8
  %350 = getelementptr inbounds i64, i64* %327, i64 8
  %351 = getelementptr inbounds i64, i64* %326, i64 8
  %352 = icmp eq i64* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !437

353:                                              ; preds = %196, %520, %294
  %354 = phi i64* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i64* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i64* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i64* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i64* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i64* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i64, i64* %358, i64 -1
  %363 = ptrtoint i64* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 3
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 4
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i64, i64* %358, i64 -1
  %370 = ptrtoint i64* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 3
  %373 = xor i64 %372, -1
  %374 = getelementptr i64, i64* %357, i64 %373
  %375 = getelementptr i64, i64* %358, i64 %373
  %376 = icmp ult i64* %374, %358
  %377 = icmp ult i64* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 4611686018427387900
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i64, i64* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i64, i64* %357, i64 %383
  %385 = add nsw i64 %380, -4
  %386 = lshr exact i64 %385, 2
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i64, i64* %358, i64 -1
  %393 = getelementptr i64, i64* %357, i64 -1
  %394 = getelementptr i64, i64* %358, i64 -1
  %395 = getelementptr i64, i64* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i64, i64* %392, i64 %399
  %402 = getelementptr inbounds i64, i64* %401, i64 -1
  %403 = bitcast i64* %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !438
  %405 = getelementptr inbounds i64, i64* %401, i64 -2
  %406 = getelementptr inbounds i64, i64* %405, i64 -1
  %407 = bitcast i64* %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !438
  %409 = getelementptr inbounds i64, i64* %393, i64 %400
  %410 = getelementptr inbounds i64, i64* %409, i64 -1
  %411 = bitcast i64* %410 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %411, align 8, !alias.scope !441, !noalias !438
  %412 = getelementptr inbounds i64, i64* %409, i64 -2
  %413 = getelementptr inbounds i64, i64* %412, i64 -1
  %414 = bitcast i64* %413 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %414, align 8, !alias.scope !441, !noalias !438
  %415 = sub nuw nsw i64 -4, %397
  %416 = sub nuw nsw i64 -4, %397
  %417 = getelementptr inbounds i64, i64* %394, i64 %415
  %418 = getelementptr inbounds i64, i64* %417, i64 -1
  %419 = bitcast i64* %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !438
  %421 = getelementptr inbounds i64, i64* %417, i64 -2
  %422 = getelementptr inbounds i64, i64* %421, i64 -1
  %423 = bitcast i64* %422 to <2 x i64>*
  %424 = load <2 x i64>, <2 x i64>* %423, align 8, !alias.scope !438
  %425 = getelementptr inbounds i64, i64* %395, i64 %416
  %426 = getelementptr inbounds i64, i64* %425, i64 -1
  %427 = bitcast i64* %426 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %427, align 8, !alias.scope !441, !noalias !438
  %428 = getelementptr inbounds i64, i64* %425, i64 -2
  %429 = getelementptr inbounds i64, i64* %428, i64 -1
  %430 = bitcast i64* %429 to <2 x i64>*
  store <2 x i64> %424, <2 x i64>* %430, align 8, !alias.scope !441, !noalias !438
  %431 = add i64 %397, 8
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !443

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -8, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i64, i64* %358, i64 -1
  %441 = getelementptr i64, i64* %357, i64 -1
  %442 = getelementptr inbounds i64, i64* %440, i64 %437
  %443 = getelementptr inbounds i64, i64* %442, i64 -1
  %444 = bitcast i64* %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !438
  %446 = getelementptr inbounds i64, i64* %442, i64 -2
  %447 = getelementptr inbounds i64, i64* %446, i64 -1
  %448 = bitcast i64* %447 to <2 x i64>*
  %449 = load <2 x i64>, <2 x i64>* %448, align 8, !alias.scope !438
  %450 = getelementptr inbounds i64, i64* %441, i64 %437
  %451 = getelementptr inbounds i64, i64* %450, i64 -1
  %452 = bitcast i64* %451 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %452, align 8, !alias.scope !441, !noalias !438
  %453 = getelementptr inbounds i64, i64* %450, i64 -2
  %454 = getelementptr inbounds i64, i64* %453, i64 -1
  %455 = bitcast i64* %454 to <2 x i64>*
  store <2 x i64> %449, <2 x i64>* %455, align 8, !alias.scope !441, !noalias !438
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i64* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i64* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i64, i64* %459, i64 -1
  %462 = ptrtoint i64* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 3
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i64* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i64* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i64, i64* %469, i64 -1
  %473 = load i64, i64* %472, align 8
  %474 = getelementptr inbounds i64, i64* %470, i64 -1
  store i64 %473, i64* %474, align 8
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !444

477:                                              ; preds = %468, %458
  %478 = phi i64* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i64* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 56
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i64* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i64* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i64, i64* %482, i64 -1
  %485 = load i64, i64* %484, align 8
  %486 = getelementptr inbounds i64, i64* %483, i64 -1
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds i64, i64* %482, i64 -2
  %488 = load i64, i64* %487, align 8
  %489 = getelementptr inbounds i64, i64* %483, i64 -2
  store i64 %488, i64* %489, align 8
  %490 = getelementptr inbounds i64, i64* %482, i64 -3
  %491 = load i64, i64* %490, align 8
  %492 = getelementptr inbounds i64, i64* %483, i64 -3
  store i64 %491, i64* %492, align 8
  %493 = getelementptr inbounds i64, i64* %482, i64 -4
  %494 = load i64, i64* %493, align 8
  %495 = getelementptr inbounds i64, i64* %483, i64 -4
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds i64, i64* %482, i64 -5
  %497 = load i64, i64* %496, align 8
  %498 = getelementptr inbounds i64, i64* %483, i64 -5
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds i64, i64* %482, i64 -6
  %500 = load i64, i64* %499, align 8
  %501 = getelementptr inbounds i64, i64* %483, i64 -6
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds i64, i64* %482, i64 -7
  %503 = load i64, i64* %502, align 8
  %504 = getelementptr inbounds i64, i64* %483, i64 -7
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds i64, i64* %482, i64 -8
  %506 = load i64, i64* %505, align 8
  %507 = getelementptr inbounds i64, i64* %483, i64 -8
  store i64 %506, i64* %507, align 8
  %508 = icmp eq i64* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !445

509:                                              ; preds = %356
  %510 = getelementptr inbounds i64, i64* %359, i64 -1
  %511 = getelementptr inbounds i64, i64* %358, i64 -1
  %512 = load i64, i64* %511, align 8
  %513 = load i64, i64* %510, align 8
  %514 = icmp slt i64 %512, %513
  %515 = getelementptr inbounds i64, i64* %357, i64 -1
  %516 = select i1 %514, i64 %513, i64 %512
  %517 = select i1 %514, i64* %510, i64* %359
  %518 = select i1 %514, i64* %358, i64* %511
  store i64 %516, i64* %515, align 8
  %519 = icmp eq i64* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i64* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i64* [ %545, %520 ], [ %199, %196 ]
  %523 = load i64, i64* %522, align 8
  store i64 %523, i64* %521, align 8
  %524 = getelementptr inbounds i64, i64* %522, i64 1
  %525 = getelementptr inbounds i64, i64* %521, i64 1
  %526 = load i64, i64* %524, align 8
  store i64 %526, i64* %525, align 8
  %527 = getelementptr inbounds i64, i64* %522, i64 2
  %528 = getelementptr inbounds i64, i64* %521, i64 2
  %529 = load i64, i64* %527, align 8
  store i64 %529, i64* %528, align 8
  %530 = getelementptr inbounds i64, i64* %522, i64 3
  %531 = getelementptr inbounds i64, i64* %521, i64 3
  %532 = load i64, i64* %530, align 8
  store i64 %532, i64* %531, align 8
  %533 = getelementptr inbounds i64, i64* %522, i64 4
  %534 = getelementptr inbounds i64, i64* %521, i64 4
  %535 = load i64, i64* %533, align 8
  store i64 %535, i64* %534, align 8
  %536 = getelementptr inbounds i64, i64* %522, i64 5
  %537 = getelementptr inbounds i64, i64* %521, i64 5
  %538 = load i64, i64* %536, align 8
  store i64 %538, i64* %537, align 8
  %539 = getelementptr inbounds i64, i64* %522, i64 6
  %540 = getelementptr inbounds i64, i64* %521, i64 6
  %541 = load i64, i64* %539, align 8
  store i64 %541, i64* %540, align 8
  %542 = getelementptr inbounds i64, i64* %522, i64 7
  %543 = getelementptr inbounds i64, i64* %521, i64 7
  %544 = load i64, i64* %542, align 8
  store i64 %544, i64* %543, align 8
  %545 = getelementptr inbounds i64, i64* %522, i64 8
  %546 = getelementptr inbounds i64, i64* %521, i64 8
  %547 = icmp eq i64* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !446

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = icmp slt i64 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i64, i64* %551, i64 1
  %556 = ptrtoint i64* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i64*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i64, i64* %26, i64 %563
  %565 = ptrtoint i64* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 3
  %570 = load i64, i64* %564, align 8
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i64* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i64, i64* %572, i64 %574
  %576 = load i64, i64* %575, align 8
  %577 = icmp slt i64 %570, %576
  %578 = getelementptr inbounds i64, i64* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i64* %572, i64* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i64* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i64* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 3
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i64*
  %593 = inttoptr i64 %550 to i64*
  store i64 %27, i64* %593, align 8
  store i64 %552, i64* %592, align 8
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i64, i64* %560, i64 %595
  %597 = ptrtoint i64* %596 to i64
  %598 = ptrtoint i64* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 3
  %603 = load i64, i64* %596, align 8
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i64* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i64, i64* %605, i64 %607
  %609 = load i64, i64* %608, align 8
  %610 = icmp slt i64 %609, %603
  %611 = getelementptr inbounds i64, i64* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i64* %611, i64* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i64* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i64* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 3
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i64*
  %630 = inttoptr i64 %624 to i64*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i64* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i64* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i64, i64* %629, i64 1
  %638 = icmp eq i64* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i64, i64* %629, align 8
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 3
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %631, i8* align 8 %632, i64 %641, i1 false) #19
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i64, i64* %629, i64 %642
  store i64 %640, i64* %646, align 8
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i64, i64* %26, i64 1
  %649 = icmp eq i64* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i64, i64* %630, i64 -1
  %652 = load i64, i64* %651, align 8
  %653 = ptrtoint i64* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 3
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i64, i64* %630, i64 %658
  %660 = bitcast i64* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %660, i8* align 8 %631, i64 %654, i1 false) #19
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i64* [ %659, %656 ], [ %630, %650 ]
  store i64 %652, i64* %629, align 8
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 3
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 3
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i64, i64* %629, align 8
  store i64 %27, i64* %629, align 8
  store i64 %670, i64* %26, align 8
  %671 = getelementptr inbounds i64, i64* %629, i64 1
  %672 = getelementptr inbounds i64, i64* %26, i64 1
  %673 = icmp eq i64* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i64, i64* %26, i64 -2
  %676 = bitcast i64* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 3
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 4
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i64, i64* %629, i64 2
  %685 = getelementptr i64, i64* %26, i64 -2
  %686 = bitcast i64* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 3
  %691 = getelementptr i64, i64* %684, i64 %690
  %692 = getelementptr i64, i64* %26, i64 2
  %693 = getelementptr i64, i64* %692, i64 %690
  %694 = icmp ult i64* %671, %693
  %695 = icmp ult i64* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 4611686018427387900
  %699 = getelementptr i64, i64* %672, i64 %698
  %700 = getelementptr i64, i64* %671, i64 %698
  %701 = add nsw i64 %698, -4
  %702 = lshr exact i64 %701, 2
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i64, i64* %672, i64 %709
  %712 = getelementptr i64, i64* %671, i64 %709
  %713 = bitcast i64* %711 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !447
  %715 = getelementptr i64, i64* %711, i64 2
  %716 = bitcast i64* %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !447
  %718 = bitcast i64* %712 to <2 x i64>*
  %719 = load <2 x i64>, <2 x i64>* %718, align 8, !alias.scope !450, !noalias !447
  %720 = getelementptr i64, i64* %712, i64 2
  %721 = bitcast i64* %720 to <2 x i64>*
  %722 = load <2 x i64>, <2 x i64>* %721, align 8, !alias.scope !450, !noalias !447
  %723 = bitcast i64* %712 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %723, align 8, !alias.scope !450, !noalias !447
  %724 = bitcast i64* %720 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %724, align 8, !alias.scope !450, !noalias !447
  %725 = bitcast i64* %711 to <2 x i64>*
  store <2 x i64> %719, <2 x i64>* %725, align 8, !alias.scope !447
  %726 = bitcast i64* %715 to <2 x i64>*
  store <2 x i64> %722, <2 x i64>* %726, align 8, !alias.scope !447
  %727 = or i64 %709, 4
  %728 = getelementptr i64, i64* %672, i64 %727
  %729 = getelementptr i64, i64* %671, i64 %727
  %730 = bitcast i64* %728 to <2 x i64>*
  %731 = load <2 x i64>, <2 x i64>* %730, align 8, !alias.scope !447
  %732 = getelementptr i64, i64* %728, i64 2
  %733 = bitcast i64* %732 to <2 x i64>*
  %734 = load <2 x i64>, <2 x i64>* %733, align 8, !alias.scope !447
  %735 = bitcast i64* %729 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !450, !noalias !447
  %737 = getelementptr i64, i64* %729, i64 2
  %738 = bitcast i64* %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !450, !noalias !447
  %740 = bitcast i64* %729 to <2 x i64>*
  store <2 x i64> %731, <2 x i64>* %740, align 8, !alias.scope !450, !noalias !447
  %741 = bitcast i64* %737 to <2 x i64>*
  store <2 x i64> %734, <2 x i64>* %741, align 8, !alias.scope !450, !noalias !447
  %742 = bitcast i64* %728 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %742, align 8, !alias.scope !447
  %743 = bitcast i64* %732 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %743, align 8, !alias.scope !447
  %744 = add i64 %709, 8
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !452

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i64, i64* %672, i64 %748
  %752 = getelementptr i64, i64* %671, i64 %748
  %753 = bitcast i64* %751 to <2 x i64>*
  %754 = load <2 x i64>, <2 x i64>* %753, align 8, !alias.scope !447
  %755 = getelementptr i64, i64* %751, i64 2
  %756 = bitcast i64* %755 to <2 x i64>*
  %757 = load <2 x i64>, <2 x i64>* %756, align 8, !alias.scope !447
  %758 = bitcast i64* %752 to <2 x i64>*
  %759 = load <2 x i64>, <2 x i64>* %758, align 8, !alias.scope !450, !noalias !447
  %760 = getelementptr i64, i64* %752, i64 2
  %761 = bitcast i64* %760 to <2 x i64>*
  %762 = load <2 x i64>, <2 x i64>* %761, align 8, !alias.scope !450, !noalias !447
  %763 = bitcast i64* %752 to <2 x i64>*
  store <2 x i64> %754, <2 x i64>* %763, align 8, !alias.scope !450, !noalias !447
  %764 = bitcast i64* %760 to <2 x i64>*
  store <2 x i64> %757, <2 x i64>* %764, align 8, !alias.scope !450, !noalias !447
  %765 = bitcast i64* %751 to <2 x i64>*
  store <2 x i64> %759, <2 x i64>* %765, align 8, !alias.scope !447
  %766 = bitcast i64* %755 to <2 x i64>*
  store <2 x i64> %762, <2 x i64>* %766, align 8, !alias.scope !447
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i64* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i64* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i64* %771 to i64
  %773 = getelementptr i64, i64* %26, i64 -1
  %774 = ptrtoint i64* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 3
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i64* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i64* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i64, i64* %781, align 8
  %785 = load i64, i64* %782, align 8
  store i64 %784, i64* %782, align 8
  store i64 %785, i64* %781, align 8
  %786 = getelementptr inbounds i64, i64* %782, i64 1
  %787 = getelementptr inbounds i64, i64* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !453

790:                                              ; preds = %780, %769
  %791 = phi i64* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i64* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 24
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i64* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i64* [ %811, %794 ], [ %792, %790 ]
  %797 = load i64, i64* %795, align 8
  %798 = load i64, i64* %796, align 8
  store i64 %797, i64* %796, align 8
  store i64 %798, i64* %795, align 8
  %799 = getelementptr inbounds i64, i64* %796, i64 1
  %800 = getelementptr inbounds i64, i64* %795, i64 1
  %801 = load i64, i64* %800, align 8
  %802 = load i64, i64* %799, align 8
  store i64 %801, i64* %799, align 8
  store i64 %802, i64* %800, align 8
  %803 = getelementptr inbounds i64, i64* %796, i64 2
  %804 = getelementptr inbounds i64, i64* %795, i64 2
  %805 = load i64, i64* %804, align 8
  %806 = load i64, i64* %803, align 8
  store i64 %805, i64* %803, align 8
  store i64 %806, i64* %804, align 8
  %807 = getelementptr inbounds i64, i64* %796, i64 3
  %808 = getelementptr inbounds i64, i64* %795, i64 3
  %809 = load i64, i64* %808, align 8
  %810 = load i64, i64* %807, align 8
  store i64 %809, i64* %807, align 8
  store i64 %810, i64* %808, align 8
  %811 = getelementptr inbounds i64, i64* %796, i64 4
  %812 = getelementptr inbounds i64, i64* %795, i64 4
  %813 = icmp eq i64* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !454

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i64, i64* %629, i64 %815
  %823 = shl nsw i64 %815, 3
  %824 = add i64 %823, -8
  %825 = and i64 %824, 8
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i64, i64* %822, i64 -1
  %829 = load i64, i64* %828, align 8
  %830 = getelementptr inbounds i64, i64* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i64* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i64* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i64* %833 to i64
  %835 = load i64, i64* %833, align 8
  store i64 %835, i64* %832, align 8
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 3
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i64, i64* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i64, i64* %629, i64 %840
  %842 = select i1 %838, i64* %839, i64* %841
  %843 = icmp eq i64* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i64 %829, i64* %833, align 8
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i64* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i64, i64* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i64* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i64, i64* %851, i64 -1
  %853 = load i64, i64* %852, align 8
  %854 = getelementptr inbounds i64, i64* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i64* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i64* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i64* %857 to i64
  %859 = load i64, i64* %857, align 8
  store i64 %859, i64* %856, align 8
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 3
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i64, i64* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i64, i64* %629, i64 %864
  %866 = select i1 %862, i64* %863, i64* %865
  %867 = icmp eq i64* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i64 %853, i64* %857, align 8
  %869 = getelementptr inbounds i64, i64* %851, i64 -2
  %870 = load i64, i64* %869, align 8
  %871 = getelementptr inbounds i64, i64* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i64* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i64* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %560, i64* %629, i64* %873, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i64* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %873, i64* %630, i64* %15, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i64* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i64* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i64* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i64* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i64* %890 to i64
  %892 = load i64, i64* %890, align 8
  store i64 %892, i64* %889, align 8
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 3
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i64, i64* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i64, i64* %629, i64 %897
  %899 = select i1 %895, i64* %896, i64* %898
  %900 = icmp eq i64* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i64 %870, i64* %890, align 8
  %902 = icmp eq i64* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI18ScoredHistoryMatchNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.395"*, %struct.ScoredHistoryMatch* dereferenceable(248)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.ScoredHistoryMatch** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.395"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 248
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 74382032555280450
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.395"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.ScoredHistoryMatch** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 248
  %20 = icmp ult i64 %19, 37191016277640225
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 74382032555280450, %14 ]
  %28 = mul i64 %27, 248
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %struct.ScoredHistoryMatch*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.ScoredHistoryMatch* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %33, i64 %9
  %35 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %33, i64 %32
  %36 = ptrtoint %struct.ScoredHistoryMatch* %35 to i64
  tail call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* %34, %struct.ScoredHistoryMatch* dereferenceable(248) %1) #19
  %37 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %34, i64 1
  %38 = ptrtoint %struct.ScoredHistoryMatch* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.395", %"class.std::__1::vector.395"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %39, align 8
  %41 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %3, align 8
  %42 = icmp eq %struct.ScoredHistoryMatch* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.ScoredHistoryMatch* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.ScoredHistoryMatch* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.ScoredHistoryMatch* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %46, i64 -1
  %49 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %47, i64 -1
  tail call void @_ZN18ScoredHistoryMatchC1EOS_(%struct.ScoredHistoryMatch* %48, %struct.ScoredHistoryMatch* dereferenceable(248) %49) #19
  %50 = icmp eq %struct.ScoredHistoryMatch* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.ScoredHistoryMatch*, %struct.ScoredHistoryMatch** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.ScoredHistoryMatch* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.ScoredHistoryMatch* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.ScoredHistoryMatch* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.ScoredHistoryMatch*
  %60 = icmp eq %struct.ScoredHistoryMatch* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.ScoredHistoryMatch* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.ScoredHistoryMatch, %struct.ScoredHistoryMatch* %62, i64 -1
  tail call void @_ZN18ScoredHistoryMatchD1Ev(%struct.ScoredHistoryMatch* %63) #19
  %64 = icmp eq %struct.ScoredHistoryMatch* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.420"*, i64, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %2 to i8*
  %5 = bitcast i64* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i64*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i64, i64* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i64* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i64, i64* %16, i64 %29
  %31 = ptrtoint i64* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i64* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %2, align 8
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds i64, i64* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !455

44:                                               ; preds = %37, %26
  %45 = phi i64* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 56
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 3
  %49 = add i64 %48, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i64, i64* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i64* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 4611686018427387900
  %59 = getelementptr i64, i64* %16, i64 %58
  %60 = add nsw i64 %58, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i64, i64* %2, align 8, !alias.scope !456
  %68 = insertelement <2 x i64> undef, i64 %67, i32 0
  %69 = shufflevector <2 x i64> %68, <2 x i64> undef, <2 x i32> zeroinitializer
  %70 = insertelement <2 x i64> undef, i64 %67, i32 0
  %71 = shufflevector <2 x i64> %70, <2 x i64> undef, <2 x i32> zeroinitializer
  %72 = load i64, i64* %2, align 8, !alias.scope !456
  %73 = insertelement <2 x i64> undef, i64 %72, i32 0
  %74 = shufflevector <2 x i64> %73, <2 x i64> undef, <2 x i32> zeroinitializer
  %75 = insertelement <2 x i64> undef, i64 %72, i32 0
  %76 = shufflevector <2 x i64> %75, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i64, i64* %16, i64 %78
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %81, align 8, !alias.scope !459, !noalias !456
  %82 = getelementptr i64, i64* %80, i64 2
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %83, align 8, !alias.scope !459, !noalias !456
  %84 = or i64 %78, 4
  %85 = getelementptr i64, i64* %16, i64 %84
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %86, align 8, !alias.scope !459, !noalias !456
  %87 = getelementptr i64, i64* %85, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %88, align 8, !alias.scope !459, !noalias !456
  %89 = add i64 %78, 8
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !461

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i64, i64* %16, i64 %93
  %97 = load i64, i64* %2, align 8, !alias.scope !456
  %98 = insertelement <2 x i64> undef, i64 %97, i32 0
  %99 = shufflevector <2 x i64> %98, <2 x i64> undef, <2 x i32> zeroinitializer
  %100 = insertelement <2 x i64> undef, i64 %97, i32 0
  %101 = shufflevector <2 x i64> %100, <2 x i64> undef, <2 x i32> zeroinitializer
  %102 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %102, align 8, !alias.scope !459, !noalias !456
  %103 = getelementptr i64, i64* %96, i64 2
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %104, align 8, !alias.scope !459, !noalias !456
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i64* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i64* [ %126, %109 ], [ %45, %44 ]
  %111 = load i64, i64* %2, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds i64, i64* %110, i64 1
  %113 = load i64, i64* %2, align 8
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds i64, i64* %110, i64 2
  %115 = load i64, i64* %2, align 8
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds i64, i64* %110, i64 3
  %117 = load i64, i64* %2, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds i64, i64* %110, i64 4
  %119 = load i64, i64* %2, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds i64, i64* %110, i64 5
  %121 = load i64, i64* %2, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds i64, i64* %110, i64 6
  %123 = load i64, i64* %2, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds i64, i64* %110, i64 7
  %125 = load i64, i64* %2, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds i64, i64* %110, i64 8
  %127 = icmp eq i64* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !462

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  br label %292

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector.420"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 3
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 2305843009213693951
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector.420"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #21
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 3
  %142 = icmp ult i64 %141, 1152921504606846975
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 2
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 2305843009213693951
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #21
  unreachable

151:                                              ; preds = %139, %148
  %152 = phi i64 [ %146, %148 ], [ 2305843009213693951, %139 ]
  %153 = shl i64 %152, 3
  %154 = tail call i8* @_Znwm(i64 %153) #20
  %155 = bitcast i8* %154 to i64*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i64* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i64, i64* %158, i64 %134
  %160 = getelementptr inbounds i64, i64* %158, i64 %157
  %161 = getelementptr inbounds i64, i64* %159, i64 %1
  %162 = shl nsw i64 %1, 3
  %163 = add i64 %162, -8
  %164 = lshr exact i64 %163, 3
  %165 = add nuw nsw i64 %164, 1
  %166 = icmp ult i64 %165, 4
  br i1 %166, label %229, label %167

167:                                              ; preds = %156
  %168 = bitcast i64* %159 to i8*
  %169 = shl nsw i64 %1, 3
  %170 = add i64 %169, -8
  %171 = lshr exact i64 %170, 3
  %172 = add nsw i64 %134, %171
  %173 = add nsw i64 %172, 1
  %174 = getelementptr i64, i64* %158, i64 %173
  %175 = getelementptr i8, i8* %4, i64 1
  %176 = icmp ugt i8* %175, %168
  %177 = icmp ugt i64* %174, %2
  %178 = and i1 %176, %177
  br i1 %178, label %229, label %179

179:                                              ; preds = %167
  %180 = and i64 %165, 4611686018427387900
  %181 = getelementptr i64, i64* %159, i64 %180
  %182 = add nsw i64 %180, -4
  %183 = lshr exact i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %182, 0
  br i1 %186, label %214, label %187

187:                                              ; preds = %179
  %188 = sub nuw nsw i64 %184, %185
  %189 = load i64, i64* %2, align 8, !alias.scope !463
  %190 = insertelement <2 x i64> undef, i64 %189, i32 0
  %191 = shufflevector <2 x i64> %190, <2 x i64> undef, <2 x i32> zeroinitializer
  %192 = insertelement <2 x i64> undef, i64 %189, i32 0
  %193 = shufflevector <2 x i64> %192, <2 x i64> undef, <2 x i32> zeroinitializer
  %194 = load i64, i64* %2, align 8, !alias.scope !463
  %195 = insertelement <2 x i64> undef, i64 %194, i32 0
  %196 = shufflevector <2 x i64> %195, <2 x i64> undef, <2 x i32> zeroinitializer
  %197 = insertelement <2 x i64> undef, i64 %194, i32 0
  %198 = shufflevector <2 x i64> %197, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %199

199:                                              ; preds = %199, %187
  %200 = phi i64 [ 0, %187 ], [ %211, %199 ]
  %201 = phi i64 [ %188, %187 ], [ %212, %199 ]
  %202 = getelementptr i64, i64* %159, i64 %200
  %203 = bitcast i64* %202 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %203, align 8, !alias.scope !466, !noalias !463
  %204 = getelementptr i64, i64* %202, i64 2
  %205 = bitcast i64* %204 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %205, align 8, !alias.scope !466, !noalias !463
  %206 = or i64 %200, 4
  %207 = getelementptr i64, i64* %159, i64 %206
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %208, align 8, !alias.scope !466, !noalias !463
  %209 = getelementptr i64, i64* %207, i64 2
  %210 = bitcast i64* %209 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %210, align 8, !alias.scope !466, !noalias !463
  %211 = add i64 %200, 8
  %212 = add i64 %201, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %199, !llvm.loop !468

214:                                              ; preds = %199, %179
  %215 = phi i64 [ 0, %179 ], [ %211, %199 ]
  %216 = icmp eq i64 %185, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214
  %218 = getelementptr i64, i64* %159, i64 %215
  %219 = load i64, i64* %2, align 8, !alias.scope !463
  %220 = insertelement <2 x i64> undef, i64 %219, i32 0
  %221 = shufflevector <2 x i64> %220, <2 x i64> undef, <2 x i32> zeroinitializer
  %222 = insertelement <2 x i64> undef, i64 %219, i32 0
  %223 = shufflevector <2 x i64> %222, <2 x i64> undef, <2 x i32> zeroinitializer
  %224 = bitcast i64* %218 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %224, align 8, !alias.scope !466, !noalias !463
  %225 = getelementptr i64, i64* %218, i64 2
  %226 = bitcast i64* %225 to <2 x i64>*
  store <2 x i64> %223, <2 x i64>* %226, align 8, !alias.scope !466, !noalias !463
  br label %227

227:                                              ; preds = %214, %217
  %228 = icmp eq i64 %165, %180
  br i1 %228, label %270, label %229

229:                                              ; preds = %227, %167, %156
  %230 = phi i64* [ %159, %167 ], [ %159, %156 ], [ %181, %227 ]
  %231 = ptrtoint i64* %230 to i64
  %232 = add i64 %134, %1
  %233 = add i64 %232, -1
  %234 = getelementptr i64, i64* %158, i64 %233
  %235 = ptrtoint i64* %234 to i64
  %236 = sub i64 %235, %231
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %229, %241
  %242 = phi i64* [ %245, %241 ], [ %230, %229 ]
  %243 = phi i64 [ %246, %241 ], [ %239, %229 ]
  %244 = load i64, i64* %2, align 8
  store i64 %244, i64* %242, align 8
  %245 = getelementptr inbounds i64, i64* %242, i64 1
  %246 = add i64 %243, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %241, !llvm.loop !469

248:                                              ; preds = %241, %229
  %249 = phi i64* [ %230, %229 ], [ %245, %241 ]
  %250 = icmp ult i64 %236, 56
  br i1 %250, label %270, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64* [ %268, %251 ], [ %249, %248 ]
  %253 = load i64, i64* %2, align 8
  store i64 %253, i64* %252, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64, i64* %2, align 8
  store i64 %255, i64* %254, align 8
  %256 = getelementptr inbounds i64, i64* %252, i64 2
  %257 = load i64, i64* %2, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 3
  %259 = load i64, i64* %2, align 8
  store i64 %259, i64* %258, align 8
  %260 = getelementptr inbounds i64, i64* %252, i64 4
  %261 = load i64, i64* %2, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 5
  %263 = load i64, i64* %2, align 8
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds i64, i64* %252, i64 6
  %265 = load i64, i64* %2, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 7
  %267 = load i64, i64* %2, align 8
  store i64 %267, i64* %266, align 8
  %268 = getelementptr inbounds i64, i64* %252, i64 8
  %269 = icmp eq i64* %161, %268
  br i1 %269, label %270, label %251, !llvm.loop !470

270:                                              ; preds = %248, %251, %227
  %271 = ptrtoint i64* %160 to i64
  %272 = ptrtoint i64* %161 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 0
  %274 = load i64*, i64** %273, align 8
  %275 = load i64, i64* %10, align 8
  %276 = ptrtoint i64* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 3
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i64, i64* %159, i64 %279
  %281 = ptrtoint i64* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %270
  %284 = bitcast i64* %280 to i8*
  %285 = bitcast i64* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %285, i64 %277, i1 false) #19
  %286 = load i64*, i64** %273, align 8
  br label %287

287:                                              ; preds = %270, %283
  %288 = phi i64* [ %274, %270 ], [ %286, %283 ]
  store i64 %281, i64* %131, align 8
  store i64 %272, i64* %10, align 8
  store i64 %271, i64* %7, align 8
  %289 = icmp eq i64* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i64* %288 to i8*
  tail call void @_ZdlPv(i8* %291) #20
  br label %292

292:                                              ; preds = %290, %287, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSJ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.623"* dereferenceable(8), %"class.std::__1::tuple.626"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #19, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %6
  br i1 %53, label %145, label %29

54:                                               ; preds = %29, %46, %20, %5
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %5 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 232) #20, !noalias !471
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.std::__1::tuple.623", %"class.std::__1::tuple.623"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8, !noalias !471
  %60 = bitcast i8* %57 to i64*
  %61 = load i64, i64* %59, align 8, !noalias !471
  store i64 %61, i64* %60, align 8, !noalias !471
  %62 = getelementptr inbounds i8, i8* %56, i64 24
  %63 = bitcast i8* %62 to %struct.HistoryInfoMapValue*
  tail call void @_ZN19HistoryInfoMapValueC1Ev(%struct.HistoryInfoMapValue* %63) #19, !noalias !471
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %6, i64* %65, align 8, !noalias !471
  %66 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8, !noalias !471
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %8 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %9, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %54
  %78 = shl i64 %8, 1
  %79 = icmp ult i64 %8, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %8) #19, !range !3
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #19
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %89)
  %90 = load i64, i64* %7, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #19, !range !3
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, -1
  %95 = and i64 %94, %6
  br label %100

96:                                               ; preds = %77
  %97 = icmp ult i64 %6, %90
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %6, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %54
  %101 = phi i64 [ %8, %54 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %55, %54 ], [ %95, %93 ], [ %6, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %56 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i8**
  store i8* %56, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base"* %109, %"struct.std::__1::__hash_node_base"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #19, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %56 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %56, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %49, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %49 ]
  %147 = phi %"struct.std::__1::__hash_node_base"* [ %142, %141 ], [ %32, %49 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %149
}

declare void @_ZN19HistoryInfoMapValueC1Ev(%struct.HistoryInfoMapValue*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"* } @_ZNSt3__111__set_unionIRNS_6__lessINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_11__wrap_iterIPKS7_EESD_NS_15insert_iteratorIN4base8internal9flat_treeIS7_NSF_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEEEEEEET2_T0_SR_T1_SS_SQ_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"*, %"struct.std::__1::__less.594"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %8 = icmp eq %"class.std::__1::basic_string"* %0, %1
  %9 = icmp eq %"class.std::__1::basic_string"* %2, %3
  br i1 %8, label %111, label %10

10:                                               ; preds = %7, %104
  %11 = phi i1 [ %110, %104 ], [ %9, %7 ]
  %12 = phi %"class.std::__1::basic_string"* [ %107, %104 ], [ %0, %7 ]
  %13 = phi %"class.std::__1::basic_string"* [ %108, %104 ], [ %5, %7 ]
  %14 = phi %"class.std::__1::basic_string"* [ %105, %104 ], [ %2, %7 ]
  br i1 %11, label %15, label %23

15:                                               ; preds = %10, %15
  %16 = phi %"class.std::__1::basic_string"* [ %21, %15 ], [ %12, %10 ]
  %17 = phi %"class.std::__1::basic_string"* [ %20, %15 ], [ %13, %10 ]
  %18 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_(%"class.base::internal::flat_tree.542"* %4, %"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* dereferenceable(24) %16, %"class.std::__1::basic_string"* dereferenceable(24) %16) #19
  %19 = extractvalue { %"class.std::__1::basic_string"*, i8 } %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 1
  %22 = icmp eq %"class.std::__1::basic_string"* %21, %1
  br i1 %22, label %123, label %15

23:                                               ; preds = %10
  %24 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp ult i64 %31, %39
  %41 = select i1 %40, i64 %31, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %47 = select i1 %35, i16* %45, i16* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %51 = select i1 %27, i16* %49, i16* %50
  br label %52

52:                                               ; preds = %61, %43
  %53 = phi i64 [ %62, %61 ], [ %41, %43 ]
  %54 = phi i16* [ %64, %61 ], [ %51, %43 ]
  %55 = phi i16* [ %63, %61 ], [ %47, %43 ]
  %56 = load i16, i16* %55, align 2
  %57 = load i16, i16* %54, align 2
  %58 = icmp ult i16 %56, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %52
  %60 = icmp ult i16 %57, %56
  br i1 %60, label %72, label %61

61:                                               ; preds = %59
  %62 = add i64 %53, -1
  %63 = getelementptr inbounds i16, i16* %55, i64 1
  %64 = getelementptr inbounds i16, i16* %54, i64 1
  %65 = icmp eq i64 %62, 0
  br i1 %65, label %66, label %52

66:                                               ; preds = %61, %23
  %67 = icmp ult i64 %39, %31
  br i1 %67, label %68, label %72

68:                                               ; preds = %52, %66
  %69 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_(%"class.base::internal::flat_tree.542"* %4, %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %14, %"class.std::__1::basic_string"* dereferenceable(24) %14) #19
  %70 = extractvalue { %"class.std::__1::basic_string"*, i8 } %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  br label %104

72:                                               ; preds = %59, %66
  br i1 %42, label %96, label %73

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i16*, i16** %74, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %77 = select i1 %27, i16* %75, i16* %76
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i16*, i16** %78, align 8
  %80 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %81 = select i1 %35, i16* %79, i16* %80
  br label %82

82:                                               ; preds = %91, %73
  %83 = phi i64 [ %92, %91 ], [ %41, %73 ]
  %84 = phi i16* [ %94, %91 ], [ %81, %73 ]
  %85 = phi i16* [ %93, %91 ], [ %77, %73 ]
  %86 = load i16, i16* %85, align 2
  %87 = load i16, i16* %84, align 2
  %88 = icmp ult i16 %86, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %82
  %90 = icmp ult i16 %87, %86
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = add i64 %83, -1
  %93 = getelementptr inbounds i16, i16* %85, i64 1
  %94 = getelementptr inbounds i16, i16* %84, i64 1
  %95 = icmp eq i64 %92, 0
  br i1 %95, label %96, label %82

96:                                               ; preds = %91, %72
  br i1 %40, label %99, label %97

97:                                               ; preds = %89, %96
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  br label %99

99:                                               ; preds = %82, %97, %96
  %100 = phi %"class.std::__1::basic_string"* [ %14, %96 ], [ %98, %97 ], [ %14, %82 ]
  %101 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_(%"class.base::internal::flat_tree.542"* %4, %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %12, %"class.std::__1::basic_string"* dereferenceable(24) %12) #19
  %102 = extractvalue { %"class.std::__1::basic_string"*, i8 } %101, 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 1
  br label %104

104:                                              ; preds = %68, %99
  %105 = phi %"class.std::__1::basic_string"* [ %71, %68 ], [ %100, %99 ]
  %106 = phi %"class.std::__1::basic_string"* [ %70, %68 ], [ %102, %99 ]
  %107 = phi %"class.std::__1::basic_string"* [ %12, %68 ], [ %103, %99 ]
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 1
  %109 = icmp eq %"class.std::__1::basic_string"* %107, %1
  %110 = icmp eq %"class.std::__1::basic_string"* %105, %3
  br i1 %109, label %111, label %10

111:                                              ; preds = %104, %7
  %112 = phi %"class.std::__1::basic_string"* [ %2, %7 ], [ %105, %104 ]
  %113 = phi %"class.std::__1::basic_string"* [ %5, %7 ], [ %108, %104 ]
  %114 = phi i1 [ %9, %7 ], [ %110, %104 ]
  br i1 %114, label %123, label %115

115:                                              ; preds = %111, %115
  %116 = phi %"class.std::__1::basic_string"* [ %121, %115 ], [ %112, %111 ]
  %117 = phi %"class.std::__1::basic_string"* [ %120, %115 ], [ %113, %111 ]
  %118 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_(%"class.base::internal::flat_tree.542"* %4, %"class.std::__1::basic_string"* %117, %"class.std::__1::basic_string"* dereferenceable(24) %116, %"class.std::__1::basic_string"* dereferenceable(24) %116) #19
  %119 = extractvalue { %"class.std::__1::basic_string"*, i8 } %118, 0
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 1
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 1
  %122 = icmp eq %"class.std::__1::basic_string"* %121, %3
  br i1 %122, label %123, label %115

123:                                              ; preds = %15, %115, %111
  %124 = phi %"class.std::__1::basic_string"* [ %113, %111 ], [ %120, %115 ], [ %20, %15 ]
  %125 = insertvalue { %"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"* } undef, %"class.base::internal::flat_tree.542"* %4, 0
  %126 = insertvalue { %"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"* } %125, %"class.std::__1::basic_string"* %124, 1
  ret { %"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"* } %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_(%"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %6, %1
  br i1 %7, label %54, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp ult i64 %17, %25
  %27 = select i1 %26, i64 %17, i64 %25
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %52, label %29

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %33 = select i1 %21, i16* %31, i16* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %37 = select i1 %13, i16* %35, i16* %36
  br label %38

38:                                               ; preds = %47, %29
  %39 = phi i64 [ %48, %47 ], [ %27, %29 ]
  %40 = phi i16* [ %50, %47 ], [ %37, %29 ]
  %41 = phi i16* [ %49, %47 ], [ %33, %29 ]
  %42 = load i16, i16* %41, align 2
  %43 = load i16, i16* %40, align 2
  %44 = icmp ult i16 %42, %43
  br i1 %44, label %54, label %45

45:                                               ; preds = %38
  %46 = icmp ult i16 %43, %42
  br i1 %46, label %131, label %47

47:                                               ; preds = %45
  %48 = add i64 %39, -1
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = getelementptr inbounds i16, i16* %40, i64 1
  %51 = icmp eq i64 %48, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %47, %8
  %53 = icmp ult i64 %25, %17
  br i1 %53, label %54, label %131

54:                                               ; preds = %38, %4, %52
  %55 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  %57 = icmp eq %"class.std::__1::basic_string"* %56, %1
  br i1 %57, label %103, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %69 to i64
  %74 = select i1 %70, i64 %72, i64 %73
  %75 = icmp ult i64 %66, %74
  %76 = select i1 %75, i64 %66, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i16*, i16** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %82 = select i1 %70, i16* %80, i16* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %86 = select i1 %62, i16* %84, i16* %85
  br label %87

87:                                               ; preds = %96, %78
  %88 = phi i64 [ %97, %96 ], [ %76, %78 ]
  %89 = phi i16* [ %99, %96 ], [ %86, %78 ]
  %90 = phi i16* [ %98, %96 ], [ %82, %78 ]
  %91 = load i16, i16* %90, align 2
  %92 = load i16, i16* %89, align 2
  %93 = icmp ult i16 %91, %92
  br i1 %93, label %103, label %94

94:                                               ; preds = %87
  %95 = icmp ult i16 %92, %91
  br i1 %95, label %106, label %96

96:                                               ; preds = %94
  %97 = add i64 %88, -1
  %98 = getelementptr inbounds i16, i16* %90, i64 1
  %99 = getelementptr inbounds i16, i16* %89, i64 1
  %100 = icmp eq i64 %97, 0
  br i1 %100, label %101, label %87

101:                                              ; preds = %96, %58
  %102 = icmp ult i64 %74, %66
  br i1 %102, label %103, label %106

103:                                              ; preds = %87, %54, %101
  %104 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %0, i64 0, i32 0
  %105 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector"* %104, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %3) #19
  br label %135

106:                                              ; preds = %94, %101
  br i1 %77, label %130, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i16*, i16** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %111 = select i1 %62, i16* %109, i16* %110
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i16*, i16** %112, align 8
  %114 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %115 = select i1 %70, i16* %113, i16* %114
  br label %116

116:                                              ; preds = %125, %107
  %117 = phi i64 [ %126, %125 ], [ %76, %107 ]
  %118 = phi i16* [ %128, %125 ], [ %115, %107 ]
  %119 = phi i16* [ %127, %125 ], [ %111, %107 ]
  %120 = load i16, i16* %119, align 2
  %121 = load i16, i16* %118, align 2
  %122 = icmp ult i16 %120, %121
  br i1 %122, label %131, label %123

123:                                              ; preds = %116
  %124 = icmp ult i16 %121, %120
  br i1 %124, label %135, label %125

125:                                              ; preds = %123
  %126 = add i64 %117, -1
  %127 = getelementptr inbounds i16, i16* %119, i64 1
  %128 = getelementptr inbounds i16, i16* %118, i64 1
  %129 = icmp eq i64 %126, 0
  br i1 %129, label %130, label %116

130:                                              ; preds = %125, %106
  br i1 %75, label %131, label %135

131:                                              ; preds = %45, %116, %130, %52
  %132 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.542"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3)
  %133 = extractvalue { %"class.std::__1::basic_string"*, i8 } %132, 0
  %134 = extractvalue { %"class.std::__1::basic_string"*, i8 } %132, 1
  br label %135

135:                                              ; preds = %123, %130, %131, %103
  %136 = phi %"class.std::__1::basic_string"* [ %105, %103 ], [ %133, %131 ], [ %1, %130 ], [ %1, %123 ]
  %137 = phi i8 [ 1, %103 ], [ %134, %131 ], [ 0, %130 ], [ 0, %123 ]
  %138 = insertvalue { %"class.std::__1::basic_string"*, i8 } undef, %"class.std::__1::basic_string"* %136, 0
  %139 = insertvalue { %"class.std::__1::basic_string"*, i8 } %138, i8 %137, 1
  ret { %"class.std::__1::basic_string"*, i8 } %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.542"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.std::__1::basic_string"*
  br i1 %11, label %74, label %13

13:                                               ; preds = %3
  %14 = sdiv exact i64 %10, 24
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %26 = select i1 %18, i16* %24, i16* %25
  br label %27

27:                                               ; preds = %68, %13
  %28 = phi %"class.std::__1::basic_string"* [ %5, %13 ], [ %70, %68 ]
  %29 = phi i64 [ %14, %13 ], [ %69, %68 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 %30
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 %30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp ult i64 %22, %39
  %41 = select i1 %40, i64 %22, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %62, label %43

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %31 to i16*
  %47 = select i1 %35, i16* %45, i16* %46
  br label %48

48:                                               ; preds = %57, %43
  %49 = phi i64 [ %58, %57 ], [ %41, %43 ]
  %50 = phi i16* [ %60, %57 ], [ %26, %43 ]
  %51 = phi i16* [ %59, %57 ], [ %47, %43 ]
  %52 = load i16, i16* %51, align 2
  %53 = load i16, i16* %50, align 2
  %54 = icmp ult i16 %52, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  %56 = icmp ult i16 %53, %52
  br i1 %56, label %68, label %57

57:                                               ; preds = %55
  %58 = add i64 %49, -1
  %59 = getelementptr inbounds i16, i16* %51, i64 1
  %60 = getelementptr inbounds i16, i16* %50, i64 1
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %62, label %48

62:                                               ; preds = %57, %27
  %63 = icmp ult i64 %39, %22
  br i1 %63, label %64, label %68

64:                                               ; preds = %48, %62
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %66 = xor i64 %30, -1
  %67 = add i64 %29, %66
  br label %68

68:                                               ; preds = %55, %64, %62
  %69 = phi i64 [ %67, %64 ], [ %30, %62 ], [ %30, %55 ]
  %70 = phi %"class.std::__1::basic_string"* [ %65, %64 ], [ %28, %62 ], [ %28, %55 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %27

72:                                               ; preds = %68
  %73 = ptrtoint %"class.std::__1::basic_string"* %70 to i64
  br label %74

74:                                               ; preds = %72, %3
  %75 = phi i64 [ %73, %72 ], [ %9, %3 ]
  %76 = phi %"class.std::__1::basic_string"* [ %70, %72 ], [ %5, %3 ]
  %77 = icmp eq %"class.std::__1::basic_string"* %76, %12
  br i1 %77, label %123, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = icmp ult i64 %86, %94
  %96 = select i1 %95, i64 %86, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %121, label %98

98:                                               ; preds = %78
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i16*, i16** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %102 = select i1 %90, i16* %100, i16* %101
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i16*, i16** %103, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %76 to i16*
  %106 = select i1 %82, i16* %104, i16* %105
  br label %107

107:                                              ; preds = %116, %98
  %108 = phi i64 [ %117, %116 ], [ %96, %98 ]
  %109 = phi i16* [ %119, %116 ], [ %106, %98 ]
  %110 = phi i16* [ %118, %116 ], [ %102, %98 ]
  %111 = load i16, i16* %110, align 2
  %112 = load i16, i16* %109, align 2
  %113 = icmp ult i16 %111, %112
  br i1 %113, label %123, label %114

114:                                              ; preds = %107
  %115 = icmp ult i16 %112, %111
  br i1 %115, label %127, label %116

116:                                              ; preds = %114
  %117 = add i64 %108, -1
  %118 = getelementptr inbounds i16, i16* %110, i64 1
  %119 = getelementptr inbounds i16, i16* %109, i64 1
  %120 = icmp eq i64 %117, 0
  br i1 %120, label %121, label %107

121:                                              ; preds = %116, %78
  %122 = icmp ult i64 %94, %86
  br i1 %122, label %123, label %127

123:                                              ; preds = %107, %74, %121
  %124 = getelementptr inbounds %"class.base::internal::flat_tree.542", %"class.base::internal::flat_tree.542"* %0, i64 0, i32 0
  %125 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector"* %124, %"class.std::__1::basic_string"* %76, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  %126 = ptrtoint %"class.std::__1::basic_string"* %125 to i64
  br label %127

127:                                              ; preds = %114, %121, %123
  %128 = phi i64 [ %126, %123 ], [ %75, %121 ], [ %75, %114 ]
  %129 = phi i8 [ 1, %123 ], [ 0, %121 ], [ 0, %114 ]
  %130 = inttoptr i64 %128 to %"class.std::__1::basic_string"*
  %131 = insertvalue { %"class.std::__1::basic_string"*, i8 } undef, %"class.std::__1::basic_string"* %130, 0
  %132 = insertvalue { %"class.std::__1::basic_string"*, i8 } %131, i8 %129, 1
  ret { %"class.std::__1::basic_string"*, i8 } %132
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %5 = alloca %"struct.std::__1::__temp_value.718", align 8
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp ult %"class.std::__1::basic_string"* %10, %12
  %14 = ptrtoint %"class.std::__1::basic_string"* %10 to i64
  %15 = ptrtoint %"class.std::__1::basic_string"* %12 to i64
  br i1 %13, label %16, label %445

16:                                               ; preds = %3
  %17 = icmp eq %"class.std::__1::basic_string"* %10, %1
  br i1 %17, label %18, label %204

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %24, i64 24, i1 false) #19
  br label %200

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %33 = trunc i64 %29 to i8
  %34 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 %33, i8* %35, align 1
  br label %53

36:                                               ; preds = %25
  %37 = icmp ugt i64 %29, 9223372036854775791
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #21
  unreachable

40:                                               ; preds = %36
  %41 = add nuw nsw i64 %29, 8
  %42 = and i64 %41, -8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @abort() #21
  unreachable

45:                                               ; preds = %40
  %46 = shl i64 %42, 1
  %47 = tail call i8* @_Znwm(i64 %46) #20
  %48 = bitcast i8* %47 to i16*
  %49 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  store i8* %47, i8** %49, align 8
  %50 = or i64 %42, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %52, align 8
  br label %53

53:                                               ; preds = %45, %31
  %54 = phi i16* [ %32, %31 ], [ %48, %45 ]
  %55 = add nuw nsw i64 %29, 1
  %56 = add i64 %29, 1
  %57 = icmp ult i64 %56, 16
  br i1 %57, label %147, label %58

58:                                               ; preds = %53
  %59 = add i64 %29, 1
  %60 = getelementptr i16, i16* %54, i64 %59
  %61 = getelementptr i16, i16* %27, i64 %59
  %62 = icmp ult i16* %54, %61
  %63 = icmp ult i16* %27, %60
  %64 = and i1 %62, %63
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = and i64 %56, -16
  %67 = sub i64 %55, %66
  %68 = getelementptr i16, i16* %27, i64 %66
  %69 = getelementptr i16, i16* %54, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %126, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %123, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %124, %77 ]
  %80 = getelementptr i16, i16* %27, i64 %78
  %81 = getelementptr i16, i16* %54, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !474
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !474
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !477, !noalias !474
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !477, !noalias !474
  %90 = or i64 %78, 16
  %91 = getelementptr i16, i16* %27, i64 %90
  %92 = getelementptr i16, i16* %54, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !474
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !474
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !477, !noalias !474
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !477, !noalias !474
  %101 = or i64 %78, 32
  %102 = getelementptr i16, i16* %27, i64 %101
  %103 = getelementptr i16, i16* %54, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !474
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !474
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !477, !noalias !474
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !477, !noalias !474
  %112 = or i64 %78, 48
  %113 = getelementptr i16, i16* %27, i64 %112
  %114 = getelementptr i16, i16* %54, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !474
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !474
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !477, !noalias !474
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !477, !noalias !474
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !479

126:                                              ; preds = %77, %65
  %127 = phi i64 [ 0, %65 ], [ %123, %77 ]
  %128 = icmp eq i64 %73, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126, %129
  %130 = phi i64 [ %142, %129 ], [ %127, %126 ]
  %131 = phi i64 [ %143, %129 ], [ %73, %126 ]
  %132 = getelementptr i16, i16* %27, i64 %130
  %133 = getelementptr i16, i16* %54, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !474
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !474
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !477, !noalias !474
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !477, !noalias !474
  %142 = add i64 %130, 16
  %143 = add i64 %131, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %129, !llvm.loop !480

145:                                              ; preds = %129, %126
  %146 = icmp eq i64 %56, %66
  br i1 %146, label %200, label %147

147:                                              ; preds = %145, %58, %53
  %148 = phi i64 [ %55, %58 ], [ %55, %53 ], [ %67, %145 ]
  %149 = phi i16* [ %27, %58 ], [ %27, %53 ], [ %68, %145 ]
  %150 = phi i16* [ %54, %58 ], [ %54, %53 ], [ %69, %145 ]
  %151 = add i64 %148, -1
  %152 = and i64 %148, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %160, %154 ], [ %148, %147 ]
  %156 = phi i16* [ %162, %154 ], [ %149, %147 ]
  %157 = phi i16* [ %161, %154 ], [ %150, %147 ]
  %158 = phi i64 [ %163, %154 ], [ %152, %147 ]
  %159 = load i16, i16* %156, align 2
  store i16 %159, i16* %157, align 2
  %160 = add i64 %155, -1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = add i64 %158, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %154, !llvm.loop !481

165:                                              ; preds = %154, %147
  %166 = phi i64 [ %148, %147 ], [ %160, %154 ]
  %167 = phi i16* [ %149, %147 ], [ %162, %154 ]
  %168 = phi i16* [ %150, %147 ], [ %161, %154 ]
  %169 = icmp ult i64 %151, 7
  br i1 %169, label %200, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %196, %170 ], [ %166, %165 ]
  %172 = phi i16* [ %198, %170 ], [ %167, %165 ]
  %173 = phi i16* [ %197, %170 ], [ %168, %165 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %173, i64 2
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %173, i64 3
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %173, i64 4
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 5
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %173, i64 6
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %173, i64 7
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %171, -8
  %197 = getelementptr inbounds i16, i16* %173, i64 8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %200, label %170, !llvm.loop !482

200:                                              ; preds = %165, %170, %145, %23
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %202 = ptrtoint %"class.std::__1::basic_string"* %201 to i64
  %203 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  store i64 %202, i64* %203, align 8
  br label %569

204:                                              ; preds = %16
  %205 = getelementptr inbounds %"struct.std::__1::__temp_value.718", %"struct.std::__1::__temp_value.718"* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %205) #19
  %206 = getelementptr inbounds %"struct.std::__1::__temp_value.718", %"struct.std::__1::__temp_value.718"* %5, i64 0, i32 0, i32 0, i64 8
  %207 = getelementptr inbounds %"struct.std::__1::__temp_value.718", %"struct.std::__1::__temp_value.718"* %5, i64 0, i32 0, i32 0, i64 16
  %208 = getelementptr inbounds %"struct.std::__1::__temp_value.718", %"struct.std::__1::__temp_value.718"* %5, i64 0, i32 0, i32 0, i64 23
  %209 = getelementptr inbounds %"struct.std::__1::__temp_value.718", %"struct.std::__1::__temp_value.718"* %5, i64 0, i32 1
  %210 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %211 = bitcast %"class.std::__1::allocator.13"** %209 to %"class.std::__1::__compressed_pair.10"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 24, i1 false)
  store %"class.std::__1::__compressed_pair.10"* %210, %"class.std::__1::__compressed_pair.10"** %211, align 8
  %212 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %212, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %204
  %217 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* align 8 %217, i64 24, i1 false) #19
  br label %394

218:                                              ; preds = %204
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i16*, i16** %219, align 8
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = icmp ult i64 %222, 11
  br i1 %223, label %224, label %227

224:                                              ; preds = %218
  %225 = bitcast %"struct.std::__1::__temp_value.718"* %5 to i16*
  %226 = trunc i64 %222 to i8
  store i8 %226, i8* %208, align 1
  br label %244

227:                                              ; preds = %218
  %228 = icmp ugt i64 %222, 9223372036854775791
  br i1 %228, label %229, label %231

229:                                              ; preds = %227
  %230 = bitcast %"struct.std::__1::__temp_value.718"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %230) #21
  unreachable

231:                                              ; preds = %227
  %232 = add nuw nsw i64 %222, 8
  %233 = and i64 %232, -8
  %234 = icmp slt i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %231
  tail call void @abort() #21
  unreachable

236:                                              ; preds = %231
  %237 = shl i64 %233, 1
  %238 = tail call i8* @_Znwm(i64 %237) #20
  %239 = bitcast i8* %238 to i16*
  %240 = bitcast %"struct.std::__1::__temp_value.718"* %5 to i8**
  store i8* %238, i8** %240, align 8
  %241 = or i64 %233, -9223372036854775808
  %242 = bitcast i8* %207 to i64*
  store i64 %241, i64* %242, align 8
  %243 = bitcast i8* %206 to i64*
  store i64 %222, i64* %243, align 8
  br label %244

244:                                              ; preds = %236, %224
  %245 = phi i16* [ %225, %224 ], [ %239, %236 ]
  %246 = add nuw nsw i64 %222, 1
  %247 = add i64 %222, 1
  %248 = icmp ult i64 %247, 16
  br i1 %248, label %338, label %249

249:                                              ; preds = %244
  %250 = add i64 %222, 1
  %251 = getelementptr i16, i16* %245, i64 %250
  %252 = getelementptr i16, i16* %220, i64 %250
  %253 = icmp ult i16* %245, %252
  %254 = icmp ult i16* %220, %251
  %255 = and i1 %253, %254
  br i1 %255, label %338, label %256

256:                                              ; preds = %249
  %257 = and i64 %247, -16
  %258 = sub i64 %246, %257
  %259 = getelementptr i16, i16* %220, i64 %257
  %260 = getelementptr i16, i16* %245, i64 %257
  %261 = add i64 %257, -16
  %262 = lshr exact i64 %261, 4
  %263 = add nuw nsw i64 %262, 1
  %264 = and i64 %263, 3
  %265 = icmp ult i64 %261, 48
  br i1 %265, label %317, label %266

266:                                              ; preds = %256
  %267 = sub nsw i64 %263, %264
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i64 [ 0, %266 ], [ %314, %268 ]
  %270 = phi i64 [ %267, %266 ], [ %315, %268 ]
  %271 = getelementptr i16, i16* %220, i64 %269
  %272 = getelementptr i16, i16* %245, i64 %269
  %273 = bitcast i16* %271 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !483
  %275 = getelementptr i16, i16* %271, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !483
  %278 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !486, !noalias !483
  %279 = getelementptr i16, i16* %272, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !486, !noalias !483
  %281 = or i64 %269, 16
  %282 = getelementptr i16, i16* %220, i64 %281
  %283 = getelementptr i16, i16* %245, i64 %281
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !483
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !483
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !486, !noalias !483
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !486, !noalias !483
  %292 = or i64 %269, 32
  %293 = getelementptr i16, i16* %220, i64 %292
  %294 = getelementptr i16, i16* %245, i64 %292
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !483
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !483
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !486, !noalias !483
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !486, !noalias !483
  %303 = or i64 %269, 48
  %304 = getelementptr i16, i16* %220, i64 %303
  %305 = getelementptr i16, i16* %245, i64 %303
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !483
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !483
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !486, !noalias !483
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !486, !noalias !483
  %314 = add i64 %269, 64
  %315 = add i64 %270, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %268, !llvm.loop !488

317:                                              ; preds = %268, %256
  %318 = phi i64 [ 0, %256 ], [ %314, %268 ]
  %319 = icmp eq i64 %264, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %317, %320
  %321 = phi i64 [ %333, %320 ], [ %318, %317 ]
  %322 = phi i64 [ %334, %320 ], [ %264, %317 ]
  %323 = getelementptr i16, i16* %220, i64 %321
  %324 = getelementptr i16, i16* %245, i64 %321
  %325 = bitcast i16* %323 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !483
  %327 = getelementptr i16, i16* %323, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !483
  %330 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !486, !noalias !483
  %331 = getelementptr i16, i16* %324, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !486, !noalias !483
  %333 = add i64 %321, 16
  %334 = add i64 %322, -1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %320, !llvm.loop !489

336:                                              ; preds = %320, %317
  %337 = icmp eq i64 %247, %257
  br i1 %337, label %391, label %338

338:                                              ; preds = %336, %249, %244
  %339 = phi i64 [ %246, %249 ], [ %246, %244 ], [ %258, %336 ]
  %340 = phi i16* [ %220, %249 ], [ %220, %244 ], [ %259, %336 ]
  %341 = phi i16* [ %245, %249 ], [ %245, %244 ], [ %260, %336 ]
  %342 = add i64 %339, -1
  %343 = and i64 %339, 7
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %338, %345
  %346 = phi i64 [ %351, %345 ], [ %339, %338 ]
  %347 = phi i16* [ %353, %345 ], [ %340, %338 ]
  %348 = phi i16* [ %352, %345 ], [ %341, %338 ]
  %349 = phi i64 [ %354, %345 ], [ %343, %338 ]
  %350 = load i16, i16* %347, align 2
  store i16 %350, i16* %348, align 2
  %351 = add i64 %346, -1
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = getelementptr inbounds i16, i16* %347, i64 1
  %354 = add i64 %349, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %345, !llvm.loop !490

356:                                              ; preds = %345, %338
  %357 = phi i64 [ %339, %338 ], [ %351, %345 ]
  %358 = phi i16* [ %340, %338 ], [ %353, %345 ]
  %359 = phi i16* [ %341, %338 ], [ %352, %345 ]
  %360 = icmp ult i64 %342, 7
  br i1 %360, label %391, label %361

361:                                              ; preds = %356, %361
  %362 = phi i64 [ %387, %361 ], [ %357, %356 ]
  %363 = phi i16* [ %389, %361 ], [ %358, %356 ]
  %364 = phi i16* [ %388, %361 ], [ %359, %356 ]
  %365 = load i16, i16* %363, align 2
  store i16 %365, i16* %364, align 2
  %366 = getelementptr inbounds i16, i16* %364, i64 1
  %367 = getelementptr inbounds i16, i16* %363, i64 1
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %364, i64 2
  %370 = getelementptr inbounds i16, i16* %363, i64 2
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %364, i64 3
  %373 = getelementptr inbounds i16, i16* %363, i64 3
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %364, i64 4
  %376 = getelementptr inbounds i16, i16* %363, i64 4
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %364, i64 5
  %379 = getelementptr inbounds i16, i16* %363, i64 5
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %364, i64 6
  %382 = getelementptr inbounds i16, i16* %363, i64 6
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %364, i64 7
  %385 = getelementptr inbounds i16, i16* %363, i64 7
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = add i64 %362, -8
  %388 = getelementptr inbounds i16, i16* %364, i64 8
  %389 = getelementptr inbounds i16, i16* %363, i64 8
  %390 = icmp eq i64 %387, 0
  br i1 %390, label %391, label %361, !llvm.loop !491

391:                                              ; preds = %356, %361, %336
  %392 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %393 = ptrtoint %"class.std::__1::basic_string"* %392 to i64
  br label %394

394:                                              ; preds = %391, %216
  %395 = phi i64 [ %393, %391 ], [ %14, %216 ]
  %396 = phi %"class.std::__1::basic_string"* [ %392, %391 ], [ %10, %216 ]
  %397 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %398 = ptrtoint %"class.std::__1::basic_string"* %397 to i64
  %399 = sub i64 %395, %398
  %400 = sdiv exact i64 %399, 24
  %401 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %400
  %402 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %403 = icmp ult %"class.std::__1::basic_string"* %401, %396
  br i1 %403, label %428, label %406

404:                                              ; preds = %428
  %405 = ptrtoint %"class.std::__1::basic_string"* %434 to i64
  br label %406

406:                                              ; preds = %404, %394
  %407 = phi i64 [ %405, %404 ], [ %395, %394 ]
  store i64 %407, i64* %402, align 8
  %408 = icmp eq i64 %399, 0
  br i1 %408, label %436, label %409

409:                                              ; preds = %406, %421
  %410 = phi %"class.std::__1::basic_string"* [ %413, %421 ], [ %396, %406 ]
  %411 = phi %"class.std::__1::basic_string"* [ %412, %421 ], [ %401, %406 ]
  %412 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %411, i64 -1
  %413 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %410, i64 -1
  %414 = bitcast %"class.std::__1::basic_string"* %413 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %415 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %414, i64 0, i32 1, i32 1
  %416 = load i8, i8* %415, align 1
  %417 = icmp slt i8 %416, 0
  br i1 %417, label %418, label %421

418:                                              ; preds = %409
  %419 = bitcast %"class.std::__1::basic_string"* %413 to i8**
  %420 = load i8*, i8** %419, align 8
  tail call void @_ZdlPv(i8* %420) #20
  br label %421

421:                                              ; preds = %418, %409
  %422 = bitcast %"class.std::__1::basic_string"* %413 to i8*
  %423 = bitcast %"class.std::__1::basic_string"* %412 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %422, i8* align 8 %423, i64 24, i1 false) #19
  %424 = bitcast %"class.std::__1::basic_string"* %412 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %425 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %424, i64 0, i32 1, i32 1
  store i8 0, i8* %425, align 1
  %426 = bitcast %"class.std::__1::basic_string"* %412 to i16*
  store i16 0, i16* %426, align 2
  %427 = icmp eq %"class.std::__1::basic_string"* %412, %1
  br i1 %427, label %436, label %409

428:                                              ; preds = %394, %428
  %429 = phi %"class.std::__1::basic_string"* [ %434, %428 ], [ %396, %394 ]
  %430 = phi %"class.std::__1::basic_string"* [ %433, %428 ], [ %401, %394 ]
  %431 = bitcast %"class.std::__1::basic_string"* %429 to i8*
  %432 = bitcast %"class.std::__1::basic_string"* %430 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %432, i8 0, i64 24, i1 false) #19
  %433 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %430, i64 1
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %429, i64 1
  %435 = icmp ult %"class.std::__1::basic_string"* %433, %396
  br i1 %435, label %428, label %404

436:                                              ; preds = %421, %406
  %437 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %438 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %437, i64 0, i32 1, i32 1
  %439 = load i8, i8* %438, align 1
  %440 = icmp slt i8 %439, 0
  br i1 %440, label %441, label %444

441:                                              ; preds = %436
  %442 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %443 = load i8*, i8** %442, align 8
  tail call void @_ZdlPv(i8* %443) #20
  br label %444

444:                                              ; preds = %436, %441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* nonnull align 8 %205, i64 24, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #19
  br label %569

445:                                              ; preds = %3
  %446 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %447 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %447) #19
  %448 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %449 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %450 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %451 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %452 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %453 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %454 = bitcast %"class.std::__1::vector"* %0 to i64*
  %455 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %455, i8 -86, i64 40, i1 false)
  %456 = load i64, i64* %454, align 8
  %457 = sub i64 %14, %456
  %458 = sdiv exact i64 %457, 24
  %459 = add nsw i64 %458, 1
  %460 = icmp ugt i64 %459, 768614336404564650
  br i1 %460, label %461, label %463

461:                                              ; preds = %445
  %462 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %462) #21
  unreachable

463:                                              ; preds = %445
  %464 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %465 = sub i64 %15, %456
  %466 = sdiv exact i64 %465, 24
  %467 = icmp ult i64 %466, 384307168202282325
  br i1 %467, label %472, label %468

468:                                              ; preds = %463
  %469 = sub i64 %7, %456
  %470 = sdiv exact i64 %469, 24
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %451, align 8
  %471 = bitcast %"class.std::__1::allocator.13"** %452 to %"class.std::__1::__compressed_pair.10"**
  store %"class.std::__1::__compressed_pair.10"* %446, %"class.std::__1::__compressed_pair.10"** %471, align 8
  br label %480

472:                                              ; preds = %463
  %473 = shl nsw i64 %466, 1
  %474 = icmp ult i64 %473, %459
  %475 = select i1 %474, i64 %459, i64 %473
  %476 = sub i64 %7, %456
  %477 = sdiv exact i64 %476, 24
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %451, align 8
  %478 = bitcast %"class.std::__1::allocator.13"** %452 to %"class.std::__1::__compressed_pair.10"**
  store %"class.std::__1::__compressed_pair.10"* %446, %"class.std::__1::__compressed_pair.10"** %478, align 8
  %479 = icmp eq i64 %475, 0
  br i1 %479, label %486, label %480

480:                                              ; preds = %472, %468
  %481 = phi i64 [ %470, %468 ], [ %477, %472 ]
  %482 = phi i64 [ 768614336404564650, %468 ], [ %475, %472 ]
  %483 = mul i64 %482, 24
  %484 = tail call i8* @_Znwm(i64 %483) #20
  %485 = bitcast i8* %484 to %"class.std::__1::basic_string"*
  br label %486

486:                                              ; preds = %472, %480
  %487 = phi i64 [ %481, %480 ], [ %477, %472 ]
  %488 = phi i64 [ %482, %480 ], [ 0, %472 ]
  %489 = phi %"class.std::__1::basic_string"* [ %485, %480 ], [ null, %472 ]
  store %"class.std::__1::basic_string"* %489, %"class.std::__1::basic_string"** %448, align 8
  %490 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %489, i64 %487
  store %"class.std::__1::basic_string"* %490, %"class.std::__1::basic_string"** %450, align 8
  store %"class.std::__1::basic_string"* %490, %"class.std::__1::basic_string"** %449, align 8
  %491 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %489, i64 %488
  store %"class.std::__1::basic_string"* %491, %"class.std::__1::basic_string"** %451, align 8
  call void @_ZNSt3__114__split_bufferINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERNS4_IS6_EEE12emplace_backIJRKS6_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %492 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %449, align 8
  %493 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %494 = icmp eq %"class.std::__1::basic_string"* %493, %1
  br i1 %494, label %505, label %495

495:                                              ; preds = %486, %495
  %496 = phi %"class.std::__1::basic_string"* [ %503, %495 ], [ %492, %486 ]
  %497 = phi %"class.std::__1::basic_string"* [ %499, %495 ], [ %1, %486 ]
  %498 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %496, i64 -1
  %499 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %497, i64 -1
  %500 = bitcast %"class.std::__1::basic_string"* %498 to i8*
  %501 = bitcast %"class.std::__1::basic_string"* %499 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %500, i8* align 8 %501, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %501, i8 0, i64 24, i1 false) #19
  %502 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %449, align 8
  %503 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %502, i64 -1
  store %"class.std::__1::basic_string"* %503, %"class.std::__1::basic_string"** %449, align 8
  %504 = icmp eq %"class.std::__1::basic_string"* %499, %493
  br i1 %504, label %505, label %495

505:                                              ; preds = %495, %486
  %506 = phi %"class.std::__1::basic_string"* [ %492, %486 ], [ %503, %495 ]
  %507 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %508 = icmp eq %"class.std::__1::basic_string"* %507, %1
  br i1 %508, label %509, label %515

509:                                              ; preds = %505
  %510 = ptrtoint %"class.std::__1::basic_string"* %507 to i64
  %511 = ptrtoint %"class.std::__1::basic_string"* %506 to i64
  %512 = bitcast %"class.std::__1::basic_string"** %449 to i64*
  %513 = bitcast %"class.std::__1::basic_string"** %450 to i64*
  %514 = load i64, i64* %513, align 8
  br label %533

515:                                              ; preds = %505
  %516 = bitcast %"class.std::__1::basic_string"** %450 to i8**
  %517 = load i8*, i8** %516, align 8
  br label %518

518:                                              ; preds = %518, %515
  %519 = phi i8* [ %517, %515 ], [ %526, %518 ]
  %520 = phi %"class.std::__1::basic_string"* [ %1, %515 ], [ %522, %518 ]
  %521 = bitcast %"class.std::__1::basic_string"* %520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %519, i8* align 8 %521, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %521, i8 0, i64 24, i1 false) #19
  %522 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %520, i64 1
  %523 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %450, align 8
  %524 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %523, i64 1
  store %"class.std::__1::basic_string"* %524, %"class.std::__1::basic_string"** %450, align 8
  %525 = icmp eq %"class.std::__1::basic_string"* %522, %507
  %526 = bitcast %"class.std::__1::basic_string"* %524 to i8*
  br i1 %525, label %527, label %518

527:                                              ; preds = %518
  %528 = ptrtoint %"class.std::__1::basic_string"* %524 to i64
  %529 = bitcast %"class.std::__1::basic_string"** %449 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = load i64, i64* %453, align 8
  %532 = bitcast %"class.std::__1::basic_string"** %450 to i64*
  br label %533

533:                                              ; preds = %509, %527
  %534 = phi i64* [ %513, %509 ], [ %532, %527 ]
  %535 = phi i64 [ %514, %509 ], [ %528, %527 ]
  %536 = phi i64 [ %510, %509 ], [ %531, %527 ]
  %537 = phi i64* [ %512, %509 ], [ %529, %527 ]
  %538 = phi i64 [ %511, %509 ], [ %530, %527 ]
  %539 = load i64, i64* %454, align 8
  store i64 %538, i64* %454, align 8
  store i64 %539, i64* %537, align 8
  store i64 %535, i64* %453, align 8
  store i64 %536, i64* %534, align 8
  %540 = load i64, i64* %464, align 8
  %541 = bitcast %"class.std::__1::basic_string"** %451 to i64*
  %542 = load i64, i64* %541, align 8
  store i64 %542, i64* %464, align 8
  store i64 %540, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %539, i64* %543, align 8
  %544 = inttoptr i64 %539 to %"class.std::__1::basic_string"*
  %545 = inttoptr i64 %536 to %"class.std::__1::basic_string"*
  %546 = icmp eq %"class.std::__1::basic_string"* %545, %544
  br i1 %546, label %563, label %547

547:                                              ; preds = %533, %558
  %548 = phi %"class.std::__1::basic_string"* [ %559, %558 ], [ %545, %533 ]
  %549 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %548, i64 -1
  store %"class.std::__1::basic_string"* %549, %"class.std::__1::basic_string"** %450, align 8
  %550 = bitcast %"class.std::__1::basic_string"* %549 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %551 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %550, i64 0, i32 1, i32 1
  %552 = load i8, i8* %551, align 1
  %553 = icmp slt i8 %552, 0
  br i1 %553, label %554, label %558

554:                                              ; preds = %547
  %555 = bitcast %"class.std::__1::basic_string"* %549 to i8**
  %556 = load i8*, i8** %555, align 8
  call void @_ZdlPv(i8* %556) #20
  %557 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %450, align 8
  br label %558

558:                                              ; preds = %554, %547
  %559 = phi %"class.std::__1::basic_string"* [ %549, %547 ], [ %557, %554 ]
  %560 = icmp eq %"class.std::__1::basic_string"* %559, %544
  br i1 %560, label %561, label %547

561:                                              ; preds = %558
  %562 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %448, align 8
  br label %563

563:                                              ; preds = %561, %533
  %564 = phi %"class.std::__1::basic_string"* [ %562, %561 ], [ %544, %533 ]
  %565 = icmp eq %"class.std::__1::basic_string"* %564, null
  br i1 %565, label %568, label %566

566:                                              ; preds = %563
  %567 = bitcast %"class.std::__1::basic_string"* %564 to i8*
  call void @_ZdlPv(i8* %567) #20
  br label %568

568:                                              ; preds = %563, %566
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %447) #19
  br label %569

569:                                              ; preds = %200, %444, %568
  %570 = phi %"class.std::__1::basic_string"* [ %1, %200 ], [ %1, %444 ], [ %492, %568 ]
  ret %"class.std::__1::basic_string"* %570
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERNS4_IS6_EEE12emplace_backIJRKS6_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %4, %6
  %8 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  br i1 %7, label %9, label %114

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp ugt %"class.std::__1::basic_string"* %11, %13
  %15 = ptrtoint %"class.std::__1::basic_string"* %13 to i64
  br i1 %14, label %16, label %49

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = sdiv exact i64 %18, 24
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::basic_string"* %11, %4
  br i1 %23, label %45, label %24

24:                                               ; preds = %16, %34
  %25 = phi %"class.std::__1::basic_string"* [ %41, %34 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::basic_string"* [ %40, %34 ], [ %11, %16 ]
  %27 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string"* %25 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #20
  br label %34

34:                                               ; preds = %31, %24
  %35 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #19
  %37 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  store i8 0, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  %42 = icmp eq %"class.std::__1::basic_string"* %40, %4
  br i1 %42, label %43, label %24

43:                                               ; preds = %34
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi %"class.std::__1::basic_string"* [ %4, %16 ], [ %44, %43 ]
  %47 = phi %"class.std::__1::basic_string"* [ %22, %16 ], [ %41, %43 ]
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %3, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 %21
  store %"class.std::__1::basic_string"* %48, %"class.std::__1::basic_string"** %10, align 8
  br label %114

49:                                               ; preds = %9
  %50 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %52 = sub i64 %8, %15
  %53 = sdiv exact i64 %52, 24
  %54 = shl nsw i64 %53, 1
  %55 = icmp eq i64 %52, 0
  %56 = select i1 %55, i64 1, i64 %54
  %57 = icmp ugt i64 %56, 768614336404564650
  br i1 %57, label %58, label %59

58:                                               ; preds = %49
  tail call void @abort() #21
  unreachable

59:                                               ; preds = %49
  %60 = lshr i64 %56, 2
  %61 = mul i64 %56, 24
  %62 = tail call i8* @_Znwm(i64 %61) #20
  %63 = bitcast i8* %62 to %"class.std::__1::basic_string"*
  %64 = ptrtoint i8* %62 to i64
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 %60
  %66 = ptrtoint %"class.std::__1::basic_string"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 %56
  %68 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  %69 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %70 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %71 = sub i64 %70, %69
  %72 = sdiv exact i64 %71, 24
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 %72
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %59, %75
  %76 = phi %"class.std::__1::basic_string"* [ %81, %75 ], [ %65, %59 ]
  %77 = phi i64 [ %82, %75 ], [ %66, %59 ]
  %78 = phi %"class.std::__1::basic_string"* [ %83, %75 ], [ %11, %59 ]
  %79 = inttoptr i64 %77 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #19
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %82 = ptrtoint %"class.std::__1::basic_string"* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 1
  %84 = icmp eq %"class.std::__1::basic_string"* %73, %81
  br i1 %84, label %85, label %75

85:                                               ; preds = %75
  %86 = ptrtoint %"class.std::__1::basic_string"* %73 to i64
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %90

90:                                               ; preds = %59, %85
  %91 = phi %"class.std::__1::basic_string"* [ %89, %85 ], [ %4, %59 ]
  %92 = phi %"class.std::__1::basic_string"* [ %88, %85 ], [ %11, %59 ]
  %93 = phi %"class.std::__1::basic_string"* [ %87, %85 ], [ %13, %59 ]
  %94 = phi i64 [ %86, %85 ], [ %66, %59 ]
  store i64 %64, i64* %51, align 8
  %95 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  store i64 %66, i64* %95, align 8
  %96 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  store i64 %94, i64* %96, align 8
  store i64 %68, i64* %50, align 8
  %97 = icmp eq %"class.std::__1::basic_string"* %91, %92
  br i1 %97, label %110, label %98

98:                                               ; preds = %90, %108
  %99 = phi %"class.std::__1::basic_string"* [ %100, %108 ], [ %91, %90 ]
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 -1
  %101 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = bitcast %"class.std::__1::basic_string"* %100 to i8**
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #20
  br label %108

108:                                              ; preds = %105, %98
  %109 = icmp eq %"class.std::__1::basic_string"* %100, %92
  br i1 %109, label %110, label %98

110:                                              ; preds = %108, %90
  %111 = icmp eq %"class.std::__1::basic_string"* %93, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @_ZdlPv(i8* %113) #20
  br label %114

114:                                              ; preds = %112, %110, %45, %2
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %116 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %122 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 24, i1 false) #19
  br label %298

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i16*, i16** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = icmp ult i64 %127, 11
  br i1 %128, label %129, label %134

129:                                              ; preds = %123
  %130 = bitcast %"class.std::__1::basic_string"* %115 to i16*
  %131 = trunc i64 %127 to i8
  %132 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %132, i64 0, i32 1, i32 1
  store i8 %131, i8* %133, align 1
  br label %151

134:                                              ; preds = %123
  %135 = icmp ugt i64 %127, 9223372036854775791
  br i1 %135, label %136, label %138

136:                                              ; preds = %134
  %137 = bitcast %"class.std::__1::basic_string"* %115 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %137) #21
  unreachable

138:                                              ; preds = %134
  %139 = add nuw nsw i64 %127, 8
  %140 = and i64 %139, -8
  %141 = icmp slt i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %138
  tail call void @abort() #21
  unreachable

143:                                              ; preds = %138
  %144 = shl i64 %140, 1
  %145 = tail call i8* @_Znwm(i64 %144) #20
  %146 = bitcast i8* %145 to i16*
  %147 = bitcast %"class.std::__1::basic_string"* %115 to i8**
  store i8* %145, i8** %147, align 8
  %148 = or i64 %140, -9223372036854775808
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %127, i64* %150, align 8
  br label %151

151:                                              ; preds = %143, %129
  %152 = phi i16* [ %130, %129 ], [ %146, %143 ]
  %153 = add nuw nsw i64 %127, 1
  %154 = add i64 %127, 1
  %155 = icmp ult i64 %154, 16
  br i1 %155, label %245, label %156

156:                                              ; preds = %151
  %157 = add i64 %127, 1
  %158 = getelementptr i16, i16* %152, i64 %157
  %159 = getelementptr i16, i16* %125, i64 %157
  %160 = icmp ult i16* %152, %159
  %161 = icmp ult i16* %125, %158
  %162 = and i1 %160, %161
  br i1 %162, label %245, label %163

163:                                              ; preds = %156
  %164 = and i64 %154, -16
  %165 = sub i64 %153, %164
  %166 = getelementptr i16, i16* %125, i64 %164
  %167 = getelementptr i16, i16* %152, i64 %164
  %168 = add i64 %164, -16
  %169 = lshr exact i64 %168, 4
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 3
  %172 = icmp ult i64 %168, 48
  br i1 %172, label %224, label %173

173:                                              ; preds = %163
  %174 = sub nsw i64 %170, %171
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %221, %175 ]
  %177 = phi i64 [ %174, %173 ], [ %222, %175 ]
  %178 = getelementptr i16, i16* %125, i64 %176
  %179 = getelementptr i16, i16* %152, i64 %176
  %180 = bitcast i16* %178 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !492
  %182 = getelementptr i16, i16* %178, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !492
  %185 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %185, align 2, !alias.scope !495, !noalias !492
  %186 = getelementptr i16, i16* %179, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %187, align 2, !alias.scope !495, !noalias !492
  %188 = or i64 %176, 16
  %189 = getelementptr i16, i16* %125, i64 %188
  %190 = getelementptr i16, i16* %152, i64 %188
  %191 = bitcast i16* %189 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !492
  %193 = getelementptr i16, i16* %189, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !492
  %196 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %196, align 2, !alias.scope !495, !noalias !492
  %197 = getelementptr i16, i16* %190, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %198, align 2, !alias.scope !495, !noalias !492
  %199 = or i64 %176, 32
  %200 = getelementptr i16, i16* %125, i64 %199
  %201 = getelementptr i16, i16* %152, i64 %199
  %202 = bitcast i16* %200 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !492
  %204 = getelementptr i16, i16* %200, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  %206 = load <8 x i16>, <8 x i16>* %205, align 2, !alias.scope !492
  %207 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %207, align 2, !alias.scope !495, !noalias !492
  %208 = getelementptr i16, i16* %201, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %209, align 2, !alias.scope !495, !noalias !492
  %210 = or i64 %176, 48
  %211 = getelementptr i16, i16* %125, i64 %210
  %212 = getelementptr i16, i16* %152, i64 %210
  %213 = bitcast i16* %211 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !492
  %215 = getelementptr i16, i16* %211, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  %217 = load <8 x i16>, <8 x i16>* %216, align 2, !alias.scope !492
  %218 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %218, align 2, !alias.scope !495, !noalias !492
  %219 = getelementptr i16, i16* %212, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  store <8 x i16> %217, <8 x i16>* %220, align 2, !alias.scope !495, !noalias !492
  %221 = add i64 %176, 64
  %222 = add i64 %177, -4
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %175, !llvm.loop !497

224:                                              ; preds = %175, %163
  %225 = phi i64 [ 0, %163 ], [ %221, %175 ]
  %226 = icmp eq i64 %171, 0
  br i1 %226, label %243, label %227

227:                                              ; preds = %224, %227
  %228 = phi i64 [ %240, %227 ], [ %225, %224 ]
  %229 = phi i64 [ %241, %227 ], [ %171, %224 ]
  %230 = getelementptr i16, i16* %125, i64 %228
  %231 = getelementptr i16, i16* %152, i64 %228
  %232 = bitcast i16* %230 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !492
  %234 = getelementptr i16, i16* %230, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !492
  %237 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %237, align 2, !alias.scope !495, !noalias !492
  %238 = getelementptr i16, i16* %231, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %239, align 2, !alias.scope !495, !noalias !492
  %240 = add i64 %228, 16
  %241 = add i64 %229, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %227, !llvm.loop !498

243:                                              ; preds = %227, %224
  %244 = icmp eq i64 %154, %164
  br i1 %244, label %298, label %245

245:                                              ; preds = %243, %156, %151
  %246 = phi i64 [ %153, %156 ], [ %153, %151 ], [ %165, %243 ]
  %247 = phi i16* [ %125, %156 ], [ %125, %151 ], [ %166, %243 ]
  %248 = phi i16* [ %152, %156 ], [ %152, %151 ], [ %167, %243 ]
  %249 = add i64 %246, -1
  %250 = and i64 %246, 7
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %263, label %252

252:                                              ; preds = %245, %252
  %253 = phi i64 [ %258, %252 ], [ %246, %245 ]
  %254 = phi i16* [ %260, %252 ], [ %247, %245 ]
  %255 = phi i16* [ %259, %252 ], [ %248, %245 ]
  %256 = phi i64 [ %261, %252 ], [ %250, %245 ]
  %257 = load i16, i16* %254, align 2
  store i16 %257, i16* %255, align 2
  %258 = add i64 %253, -1
  %259 = getelementptr inbounds i16, i16* %255, i64 1
  %260 = getelementptr inbounds i16, i16* %254, i64 1
  %261 = add i64 %256, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %252, !llvm.loop !499

263:                                              ; preds = %252, %245
  %264 = phi i64 [ %246, %245 ], [ %258, %252 ]
  %265 = phi i16* [ %247, %245 ], [ %260, %252 ]
  %266 = phi i16* [ %248, %245 ], [ %259, %252 ]
  %267 = icmp ult i64 %249, 7
  br i1 %267, label %298, label %268

268:                                              ; preds = %263, %268
  %269 = phi i64 [ %294, %268 ], [ %264, %263 ]
  %270 = phi i16* [ %296, %268 ], [ %265, %263 ]
  %271 = phi i16* [ %295, %268 ], [ %266, %263 ]
  %272 = load i16, i16* %270, align 2
  store i16 %272, i16* %271, align 2
  %273 = getelementptr inbounds i16, i16* %271, i64 1
  %274 = getelementptr inbounds i16, i16* %270, i64 1
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %271, i64 2
  %277 = getelementptr inbounds i16, i16* %270, i64 2
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %271, i64 3
  %280 = getelementptr inbounds i16, i16* %270, i64 3
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %271, i64 4
  %283 = getelementptr inbounds i16, i16* %270, i64 4
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = getelementptr inbounds i16, i16* %271, i64 5
  %286 = getelementptr inbounds i16, i16* %270, i64 5
  %287 = load i16, i16* %286, align 2
  store i16 %287, i16* %285, align 2
  %288 = getelementptr inbounds i16, i16* %271, i64 6
  %289 = getelementptr inbounds i16, i16* %270, i64 6
  %290 = load i16, i16* %289, align 2
  store i16 %290, i16* %288, align 2
  %291 = getelementptr inbounds i16, i16* %271, i64 7
  %292 = getelementptr inbounds i16, i16* %270, i64 7
  %293 = load i16, i16* %292, align 2
  store i16 %293, i16* %291, align 2
  %294 = add i64 %269, -8
  %295 = getelementptr inbounds i16, i16* %271, i64 8
  %296 = getelementptr inbounds i16, i16* %270, i64 8
  %297 = icmp eq i64 %294, 0
  br i1 %297, label %298, label %268, !llvm.loop !500

298:                                              ; preds = %263, %268, %243, %120
  %299 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %300 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %299, i64 1
  store %"class.std::__1::basic_string"* %300, %"class.std::__1::basic_string"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_mEEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.16"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.547"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.579"**
  %6 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.579"* %6, null
  br i1 %7, label %97, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %13, i16* %19, i16* %20
  br label %22

22:                                               ; preds = %93, %8
  %23 = phi %"class.std::__1::__tree_node.579"* [ %96, %93 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %95, %93 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type.580"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type.580", %"struct.std::__1::__value_type.580"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type.580"* %25 to i16*
  %41 = select i1 %29, i16* %39, i16* %40
  br label %42

42:                                               ; preds = %51, %37
  %43 = phi i64 [ %52, %51 ], [ %35, %37 ]
  %44 = phi i16* [ %54, %51 ], [ %41, %37 ]
  %45 = phi i16* [ %53, %51 ], [ %21, %37 ]
  %46 = load i16, i16* %45, align 2
  %47 = load i16, i16* %44, align 2
  %48 = icmp ult i16 %46, %47
  br i1 %48, label %58, label %49

49:                                               ; preds = %42
  %50 = icmp ult i16 %47, %46
  br i1 %50, label %64, label %51

51:                                               ; preds = %49
  %52 = add i64 %43, -1
  %53 = getelementptr inbounds i16, i16* %45, i64 1
  %54 = getelementptr inbounds i16, i16* %44, i64 1
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %56, label %42

56:                                               ; preds = %51, %22
  %57 = icmp ult i64 %17, %33
  br i1 %57, label %58, label %64

58:                                               ; preds = %42, %56
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %23, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %93

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %23, i64 0, i32 0, i32 0
  br label %99

64:                                               ; preds = %49, %56
  br i1 %36, label %84, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"struct.std::__1::__value_type.580", %"struct.std::__1::__value_type.580"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = bitcast %"struct.std::__1::__value_type.580"* %25 to i16*
  %69 = select i1 %29, i16* %67, i16* %68
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i64 [ %80, %79 ], [ %35, %65 ]
  %72 = phi i16* [ %82, %79 ], [ %21, %65 ]
  %73 = phi i16* [ %81, %79 ], [ %69, %65 ]
  %74 = load i16, i16* %73, align 2
  %75 = load i16, i16* %72, align 2
  %76 = icmp ult i16 %74, %75
  br i1 %76, label %85, label %77

77:                                               ; preds = %70
  %78 = icmp ult i16 %75, %74
  br i1 %78, label %91, label %79

79:                                               ; preds = %77
  %80 = add i64 %71, -1
  %81 = getelementptr inbounds i16, i16* %73, i64 1
  %82 = getelementptr inbounds i16, i16* %72, i64 1
  %83 = icmp eq i64 %80, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %79, %64
  br i1 %34, label %85, label %91

85:                                               ; preds = %70, %84
  %86 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %23, i64 0, i32 0, i32 1
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %23, i64 0, i32 0, i32 0
  br label %99

91:                                               ; preds = %84, %77
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %23, i64 0, i32 0, i32 0
  br label %99

93:                                               ; preds = %85, %58
  %94 = phi %"class.std::__1::__tree_node_base"* [ %60, %58 ], [ %87, %85 ]
  %95 = phi %"class.std::__1::__tree_node_base"** [ %59, %58 ], [ %86, %85 ]
  %96 = bitcast %"class.std::__1::__tree_node_base"* %94 to %"class.std::__1::__tree_node.579"*
  br label %22

97:                                               ; preds = %3
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %99

99:                                               ; preds = %62, %89, %91, %97
  %100 = phi %"class.std::__1::__tree_end_node"* [ %4, %97 ], [ %63, %62 ], [ %90, %89 ], [ %92, %91 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %98, %97 ], [ %59, %62 ], [ %86, %89 ], [ %24, %91 ]
  %102 = bitcast %"class.std::__1::__tree_node_base"** %101 to %"class.std::__1::__tree_node.579"**
  %103 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node.579"* %103, null
  br i1 %104, label %105, label %134

105:                                              ; preds = %99
  %106 = tail call i8* @_Znwm(i64 64) #20, !noalias !501
  %107 = getelementptr inbounds i8, i8* %106, i64 32
  %108 = bitcast %"struct.std::__1::pair.547"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #19, !noalias !501
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 24, i1 false) #19, !noalias !501
  %109 = getelementptr inbounds i8, i8* %106, i64 56
  %110 = bitcast i8* %109 to i64*
  %111 = getelementptr inbounds %"struct.std::__1::pair.547", %"struct.std::__1::pair.547"* %2, i64 0, i32 1
  %112 = load i64, i64* %111, align 8, !noalias !501
  store i64 %112, i64* %110, align 8, !noalias !501
  %113 = bitcast i8* %106 to %"class.std::__1::__tree_node.579"*
  %114 = bitcast i8* %106 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds i8, i8* %106, i64 16
  %116 = bitcast i8* %115 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %100, %"class.std::__1::__tree_end_node"** %116, align 8
  %117 = bitcast %"class.std::__1::__tree_node_base"** %101 to i8**
  store i8* %106, i8** %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %105
  %124 = ptrtoint %"class.std::__1::__tree_node_base"* %121 to i64
  %125 = bitcast %"class.std::__1::__tree.16"* %0 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  br label %127

127:                                              ; preds = %123, %105
  %128 = phi %"class.std::__1::__tree_node_base"* [ %114, %105 ], [ %126, %123 ]
  %129 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %130, %"class.std::__1::__tree_node_base"* %128) #19
  %131 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 2, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  br label %134

134:                                              ; preds = %127, %99
  %135 = phi i8 [ 1, %127 ], [ 0, %99 ]
  %136 = phi %"class.std::__1::__tree_node.579"* [ %113, %127 ], [ %103, %99 ]
  %137 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %136, i64 0, i32 0, i32 0
  %138 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %137, 0
  %139 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %138, i8 %135, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorImNS_9allocatorImEEE7emplaceIJRKmEEENS_11__wrap_iterIPmEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.420"*, i64*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.710", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ult i64* %8, %10
  %12 = ptrtoint i64* %8 to i64
  %13 = ptrtoint i64* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i64* %8, %1
  %16 = load i64, i64* %2, align 8
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i64 %16, i64* %1, align 8
  %18 = getelementptr inbounds i64, i64* %1, i64 1
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast i64** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i64, i64* %1, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = getelementptr inbounds i64, i64* %1, i64 %25
  %27 = bitcast i64** %7 to i64*
  %28 = icmp ult i64* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i64, i64* %8, i64 %30
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i64* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i64* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i64, i64* %8, i64 %43
  %45 = bitcast i64* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i64, i64* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add nsw i64 %52, 1
  %54 = getelementptr i64, i64* %1, i64 %53
  %55 = icmp ult i64* %8, %54
  %56 = icmp ult i64* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 4611686018427387900
  %60 = getelementptr i64, i64* %8, i64 %59
  %61 = getelementptr i64, i64* %26, i64 %59
  %62 = add nsw i64 %59, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 12
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i64, i64* %8, i64 %70
  %73 = getelementptr i64, i64* %26, i64 %70
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !504
  %76 = getelementptr i64, i64* %73, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !504
  %79 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !507, !noalias !504
  %80 = getelementptr i64, i64* %72, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %81, align 8, !alias.scope !507, !noalias !504
  %82 = or i64 %70, 4
  %83 = getelementptr i64, i64* %8, i64 %82
  %84 = getelementptr i64, i64* %26, i64 %82
  %85 = bitcast i64* %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !504
  %87 = getelementptr i64, i64* %84, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !504
  %90 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !507, !noalias !504
  %91 = getelementptr i64, i64* %83, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %92, align 8, !alias.scope !507, !noalias !504
  %93 = or i64 %70, 8
  %94 = getelementptr i64, i64* %8, i64 %93
  %95 = getelementptr i64, i64* %26, i64 %93
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !504
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !504
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !507, !noalias !504
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !507, !noalias !504
  %104 = or i64 %70, 12
  %105 = getelementptr i64, i64* %8, i64 %104
  %106 = getelementptr i64, i64* %26, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !504
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !504
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !507, !noalias !504
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !507, !noalias !504
  %115 = add i64 %70, 16
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !509

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i64, i64* %8, i64 %122
  %125 = getelementptr i64, i64* %26, i64 %122
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !504
  %128 = getelementptr i64, i64* %125, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !504
  %131 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !507, !noalias !504
  %132 = getelementptr i64, i64* %124, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8, !alias.scope !507, !noalias !504
  %134 = add i64 %122, 4
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !510

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i64* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i64* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i64, i64* %8, i64 %146
  %148 = bitcast i64* %147 to i8*
  %149 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %24, i1 false) #19
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i64* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i64* [ %154, %150 ], [ %41, %39 ]
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i64, i64* %152, i64 1
  %155 = getelementptr inbounds i64, i64* %151, i64 1
  %156 = icmp ult i64* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !511

157:                                              ; preds = %142, %145
  store i64 %16, i64* %1, align 8
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.710"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #19
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i64** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.420"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.710"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 3
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 2305843009213693951
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.420"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #21
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i64** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 3
  %180 = icmp ult i64 %179, 1152921504606846975
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 3
  store i64* null, i64** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.425"** %165 to %"class.std::__1::__compressed_pair.422"**
  store %"class.std::__1::__compressed_pair.422"* %159, %"class.std::__1::__compressed_pair.422"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 2
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 3
  store i64* null, i64** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.425"** %165 to %"class.std::__1::__compressed_pair.422"**
  store %"class.std::__1::__compressed_pair.422"* %159, %"class.std::__1::__compressed_pair.422"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #21
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 2305843009213693951, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 3
  %200 = tail call i8* @_Znwm(i64 %199) #20
  %201 = bitcast i8* %200 to i64*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i64* [ %201, %196 ], [ null, %185 ]
  store i64* %205, i64** %161, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 %203
  store i64* %206, i64** %163, align 8
  store i64* %206, i64** %162, align 8
  %207 = getelementptr inbounds i64, i64* %205, i64 %204
  store i64* %207, i64** %164, align 8
  call void @_ZNSt3__114__split_bufferImRNS_9allocatorImEEE12emplace_backIJRKmEEEvDpOT_(%"struct.std::__1::__split_buffer.710"* nonnull %5, i64* dereferenceable(8) %2)
  %208 = load i64*, i64** %162, align 8
  %209 = load i64*, i64** %6, align 8
  %210 = ptrtoint i64* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 3
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i64, i64* %208, i64 %213
  store i64* %214, i64** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i64* %214 to i8*
  %218 = bitcast i64* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %211, i1 false) #19
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i64*, i64** %7, align 8
  %221 = icmp eq i64* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i64* %220 to i64
  %224 = bitcast i64** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i64*, i64** %163, align 8
  %228 = getelementptr i64, i64* %220, i64 -1
  %229 = ptrtoint i64* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i64* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i64* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %236, align 8
  %240 = getelementptr inbounds i64, i64* %237, i64 1
  %241 = load i64*, i64** %163, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 1
  store i64* %242, i64** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !512

245:                                              ; preds = %235, %226
  %246 = phi i64* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i64* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i64* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 24
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i64* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i64* [ %266, %250 ], [ %248, %245 ]
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %251, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64*, i64** %163, align 8
  %256 = getelementptr inbounds i64, i64* %255, i64 1
  store i64* %256, i64** %163, align 8
  %257 = load i64, i64* %254, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 2
  %259 = load i64*, i64** %163, align 8
  %260 = getelementptr inbounds i64, i64* %259, i64 1
  store i64* %260, i64** %163, align 8
  %261 = load i64, i64* %258, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 3
  %263 = load i64*, i64** %163, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 1
  store i64* %264, i64** %163, align 8
  %265 = load i64, i64* %262, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 4
  %267 = load i64*, i64** %163, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 1
  store i64* %268, i64** %163, align 8
  %269 = icmp eq i64* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i64* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i64* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i64** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i64** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i64** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.710"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i64*
  %287 = inttoptr i64 %278 to i64*
  %288 = icmp eq i64* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i64, i64* %287, i64 -1
  %291 = ptrtoint i64* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 3
  %294 = xor i64 %293, -1
  %295 = getelementptr i64, i64* %287, i64 %294
  store i64* %295, i64** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #20
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #19
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i64* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i64* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferImRNS_9allocatorImEEE12emplace_backIJRKmEEEvDpOT_(%"struct.std::__1::__split_buffer.710"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 2
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.710", %"struct.std::__1::__split_buffer.710"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp ugt i64* %11, %14
  %16 = ptrtoint i64* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i64* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i64, i64* %11, i64 %22
  %24 = ptrtoint i64* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i64* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #19
  %30 = load i64*, i64** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i64* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i64, i64* %23, i64 %26
  store i64* %33, i64** %3, align 8
  %34 = getelementptr inbounds i64, i64* %32, i64 %22
  store i64* %34, i64** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i64** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.710"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #21
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #20
  %48 = bitcast i8* %47 to i64*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i64, i64* %48, i64 %45
  %51 = ptrtoint i64* %50 to i64
  %52 = getelementptr inbounds i64, i64* %48, i64 %41
  %53 = ptrtoint i64* %52 to i64
  %54 = ptrtoint i64* %11 to i64
  %55 = ptrtoint i64* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds i64, i64* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i64, i64* %11, i64 %74
  %76 = bitcast i64* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr i64, i64* %50, i64 %81
  %83 = getelementptr i64, i64* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i64, i64* %50, i64 %92
  %95 = getelementptr i64, i64* %11, i64 %92
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !513
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !513
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !516, !noalias !513
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !516, !noalias !513
  %104 = or i64 %92, 4
  %105 = getelementptr i64, i64* %50, i64 %104
  %106 = getelementptr i64, i64* %11, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !513
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !513
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !516, !noalias !513
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !516, !noalias !513
  %115 = or i64 %92, 8
  %116 = getelementptr i64, i64* %50, i64 %115
  %117 = getelementptr i64, i64* %11, i64 %115
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !513
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !513
  %123 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !516, !noalias !513
  %124 = getelementptr i64, i64* %116, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !516, !noalias !513
  %126 = or i64 %92, 12
  %127 = getelementptr i64, i64* %50, i64 %126
  %128 = getelementptr i64, i64* %11, i64 %126
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !513
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !513
  %134 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !516, !noalias !513
  %135 = getelementptr i64, i64* %127, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !516, !noalias !513
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !518

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i64, i64* %50, i64 %144
  %147 = getelementptr i64, i64* %11, i64 %144
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !513
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !513
  %153 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !516, !noalias !513
  %154 = getelementptr i64, i64* %146, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !516, !noalias !513
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !519

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i64* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i64* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i64* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i64* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i64* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %176, align 8
  %180 = getelementptr inbounds i64, i64* %176, i64 1
  %181 = getelementptr inbounds i64, i64* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !520

184:                                              ; preds = %175, %161
  %185 = phi i64* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i64* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i64* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i64* [ %214, %188 ], [ %186, %184 ]
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %190, i64 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = getelementptr inbounds i64, i64* %189, i64 2
  %196 = getelementptr inbounds i64, i64* %190, i64 2
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds i64, i64* %189, i64 3
  %199 = getelementptr inbounds i64, i64* %190, i64 3
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds i64, i64* %189, i64 4
  %202 = getelementptr inbounds i64, i64* %190, i64 4
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds i64, i64* %189, i64 5
  %205 = getelementptr inbounds i64, i64* %190, i64 5
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %204, align 8
  %207 = getelementptr inbounds i64, i64* %189, i64 6
  %208 = getelementptr inbounds i64, i64* %190, i64 6
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds i64, i64* %189, i64 7
  %211 = getelementptr inbounds i64, i64* %190, i64 7
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %210, align 8
  %213 = getelementptr inbounds i64, i64* %189, i64 8
  %214 = getelementptr inbounds i64, i64* %190, i64 8
  %215 = icmp eq i64* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !521

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i64* %58 to i64
  %218 = load i64*, i64** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i64* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i64** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i64** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i64* %220, null
  %225 = inttoptr i64 %221 to i64*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i64* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #20
  %228 = load i64*, i64** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i64* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i64, i64* %1, align 8
  store i64 %231, i64* %230, align 8
  %232 = load i64*, i64** %3, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 1
  store i64* %233, i64** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJRKlEEENS_11__wrap_iterIPlEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.428"*, i64*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.698", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ult i64* %8, %10
  %12 = ptrtoint i64* %8 to i64
  %13 = ptrtoint i64* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i64* %8, %1
  %16 = load i64, i64* %2, align 8
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i64 %16, i64* %1, align 8
  %18 = getelementptr inbounds i64, i64* %1, i64 1
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast i64** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i64, i64* %1, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = getelementptr inbounds i64, i64* %1, i64 %25
  %27 = bitcast i64** %7 to i64*
  %28 = icmp ult i64* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i64, i64* %8, i64 %30
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i64* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i64* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i64, i64* %8, i64 %43
  %45 = bitcast i64* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i64, i64* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add nsw i64 %52, 1
  %54 = getelementptr i64, i64* %1, i64 %53
  %55 = icmp ult i64* %8, %54
  %56 = icmp ult i64* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 4611686018427387900
  %60 = getelementptr i64, i64* %8, i64 %59
  %61 = getelementptr i64, i64* %26, i64 %59
  %62 = add nsw i64 %59, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 12
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i64, i64* %8, i64 %70
  %73 = getelementptr i64, i64* %26, i64 %70
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !522
  %76 = getelementptr i64, i64* %73, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !522
  %79 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !525, !noalias !522
  %80 = getelementptr i64, i64* %72, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %81, align 8, !alias.scope !525, !noalias !522
  %82 = or i64 %70, 4
  %83 = getelementptr i64, i64* %8, i64 %82
  %84 = getelementptr i64, i64* %26, i64 %82
  %85 = bitcast i64* %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !522
  %87 = getelementptr i64, i64* %84, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !522
  %90 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !525, !noalias !522
  %91 = getelementptr i64, i64* %83, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %92, align 8, !alias.scope !525, !noalias !522
  %93 = or i64 %70, 8
  %94 = getelementptr i64, i64* %8, i64 %93
  %95 = getelementptr i64, i64* %26, i64 %93
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !522
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !522
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !525, !noalias !522
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !525, !noalias !522
  %104 = or i64 %70, 12
  %105 = getelementptr i64, i64* %8, i64 %104
  %106 = getelementptr i64, i64* %26, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !522
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !522
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !525, !noalias !522
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !525, !noalias !522
  %115 = add i64 %70, 16
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !527

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i64, i64* %8, i64 %122
  %125 = getelementptr i64, i64* %26, i64 %122
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !522
  %128 = getelementptr i64, i64* %125, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !522
  %131 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !525, !noalias !522
  %132 = getelementptr i64, i64* %124, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8, !alias.scope !525, !noalias !522
  %134 = add i64 %122, 4
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !528

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i64* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i64* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i64, i64* %8, i64 %146
  %148 = bitcast i64* %147 to i8*
  %149 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %24, i1 false) #19
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i64* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i64* [ %154, %150 ], [ %41, %39 ]
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i64, i64* %152, i64 1
  %155 = getelementptr inbounds i64, i64* %151, i64 1
  %156 = icmp ult i64* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !529

157:                                              ; preds = %142, %145
  store i64 %16, i64* %1, align 8
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.428", %"class.std::__1::vector.428"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.698"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #19
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i64** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.428"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.698"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 3
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 2305843009213693951
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.428"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #21
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i64** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 3
  %180 = icmp ult i64 %179, 1152921504606846975
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 3
  store i64* null, i64** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.433"** %165 to %"class.std::__1::__compressed_pair.430"**
  store %"class.std::__1::__compressed_pair.430"* %159, %"class.std::__1::__compressed_pair.430"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 2
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 3
  store i64* null, i64** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.433"** %165 to %"class.std::__1::__compressed_pair.430"**
  store %"class.std::__1::__compressed_pair.430"* %159, %"class.std::__1::__compressed_pair.430"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #21
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 2305843009213693951, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 3
  %200 = tail call i8* @_Znwm(i64 %199) #20
  %201 = bitcast i8* %200 to i64*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i64* [ %201, %196 ], [ null, %185 ]
  store i64* %205, i64** %161, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 %203
  store i64* %206, i64** %163, align 8
  store i64* %206, i64** %162, align 8
  %207 = getelementptr inbounds i64, i64* %205, i64 %204
  store i64* %207, i64** %164, align 8
  call void @_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJRKlEEEvDpOT_(%"struct.std::__1::__split_buffer.698"* nonnull %5, i64* dereferenceable(8) %2)
  %208 = load i64*, i64** %162, align 8
  %209 = load i64*, i64** %6, align 8
  %210 = ptrtoint i64* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 3
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i64, i64* %208, i64 %213
  store i64* %214, i64** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i64* %214 to i8*
  %218 = bitcast i64* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %211, i1 false) #19
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i64*, i64** %7, align 8
  %221 = icmp eq i64* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i64* %220 to i64
  %224 = bitcast i64** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i64*, i64** %163, align 8
  %228 = getelementptr i64, i64* %220, i64 -1
  %229 = ptrtoint i64* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i64* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i64* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %236, align 8
  %240 = getelementptr inbounds i64, i64* %237, i64 1
  %241 = load i64*, i64** %163, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 1
  store i64* %242, i64** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !530

245:                                              ; preds = %235, %226
  %246 = phi i64* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i64* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i64* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 24
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i64* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i64* [ %266, %250 ], [ %248, %245 ]
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %251, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64*, i64** %163, align 8
  %256 = getelementptr inbounds i64, i64* %255, i64 1
  store i64* %256, i64** %163, align 8
  %257 = load i64, i64* %254, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 2
  %259 = load i64*, i64** %163, align 8
  %260 = getelementptr inbounds i64, i64* %259, i64 1
  store i64* %260, i64** %163, align 8
  %261 = load i64, i64* %258, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 3
  %263 = load i64*, i64** %163, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 1
  store i64* %264, i64** %163, align 8
  %265 = load i64, i64* %262, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 4
  %267 = load i64*, i64** %163, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 1
  store i64* %268, i64** %163, align 8
  %269 = icmp eq i64* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i64* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i64* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i64** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i64** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i64** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.698"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i64*
  %287 = inttoptr i64 %278 to i64*
  %288 = icmp eq i64* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i64, i64* %287, i64 -1
  %291 = ptrtoint i64* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 3
  %294 = xor i64 %293, -1
  %295 = getelementptr i64, i64* %287, i64 %294
  store i64* %295, i64** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #20
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #19
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i64* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i64* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJRKlEEEvDpOT_(%"struct.std::__1::__split_buffer.698"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %0, i64 0, i32 2
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.698", %"struct.std::__1::__split_buffer.698"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp ugt i64* %11, %14
  %16 = ptrtoint i64* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i64* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i64, i64* %11, i64 %22
  %24 = ptrtoint i64* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i64* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #19
  %30 = load i64*, i64** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i64* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i64, i64* %23, i64 %26
  store i64* %33, i64** %3, align 8
  %34 = getelementptr inbounds i64, i64* %32, i64 %22
  store i64* %34, i64** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i64** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.698"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #21
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #20
  %48 = bitcast i8* %47 to i64*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i64, i64* %48, i64 %45
  %51 = ptrtoint i64* %50 to i64
  %52 = getelementptr inbounds i64, i64* %48, i64 %41
  %53 = ptrtoint i64* %52 to i64
  %54 = ptrtoint i64* %11 to i64
  %55 = ptrtoint i64* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds i64, i64* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i64, i64* %11, i64 %74
  %76 = bitcast i64* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr i64, i64* %50, i64 %81
  %83 = getelementptr i64, i64* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i64, i64* %50, i64 %92
  %95 = getelementptr i64, i64* %11, i64 %92
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !531
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !531
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !534, !noalias !531
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !534, !noalias !531
  %104 = or i64 %92, 4
  %105 = getelementptr i64, i64* %50, i64 %104
  %106 = getelementptr i64, i64* %11, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !531
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !531
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !534, !noalias !531
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !534, !noalias !531
  %115 = or i64 %92, 8
  %116 = getelementptr i64, i64* %50, i64 %115
  %117 = getelementptr i64, i64* %11, i64 %115
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !531
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !531
  %123 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !534, !noalias !531
  %124 = getelementptr i64, i64* %116, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !534, !noalias !531
  %126 = or i64 %92, 12
  %127 = getelementptr i64, i64* %50, i64 %126
  %128 = getelementptr i64, i64* %11, i64 %126
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !531
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !531
  %134 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !534, !noalias !531
  %135 = getelementptr i64, i64* %127, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !534, !noalias !531
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !536

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i64, i64* %50, i64 %144
  %147 = getelementptr i64, i64* %11, i64 %144
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !531
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !531
  %153 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !534, !noalias !531
  %154 = getelementptr i64, i64* %146, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !534, !noalias !531
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !537

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i64* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i64* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i64* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i64* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i64* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %176, align 8
  %180 = getelementptr inbounds i64, i64* %176, i64 1
  %181 = getelementptr inbounds i64, i64* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !538

184:                                              ; preds = %175, %161
  %185 = phi i64* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i64* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i64* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i64* [ %214, %188 ], [ %186, %184 ]
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %190, i64 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = getelementptr inbounds i64, i64* %189, i64 2
  %196 = getelementptr inbounds i64, i64* %190, i64 2
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds i64, i64* %189, i64 3
  %199 = getelementptr inbounds i64, i64* %190, i64 3
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds i64, i64* %189, i64 4
  %202 = getelementptr inbounds i64, i64* %190, i64 4
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds i64, i64* %189, i64 5
  %205 = getelementptr inbounds i64, i64* %190, i64 5
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %204, align 8
  %207 = getelementptr inbounds i64, i64* %189, i64 6
  %208 = getelementptr inbounds i64, i64* %190, i64 6
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds i64, i64* %189, i64 7
  %211 = getelementptr inbounds i64, i64* %190, i64 7
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %210, align 8
  %213 = getelementptr inbounds i64, i64* %189, i64 8
  %214 = getelementptr inbounds i64, i64* %190, i64 8
  %215 = icmp eq i64* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !539

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i64* %58 to i64
  %218 = load i64*, i64** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i64* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i64** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i64** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i64* %220, null
  %225 = inttoptr i64 %221 to i64*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i64* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #20
  %228 = load i64*, i64** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i64* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i64, i64* %1, align 8
  store i64 %231, i64* %230, align 8
  %232 = load i64*, i64** %3, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 1
  store i64* %233, i64** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeImE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #19
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #19
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #19
  br i1 %31, label %32, label %33, !prof !59

32:                                               ; preds = %27
  tail call void @llvm.trap() #19
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #19
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeImE10MoveBufferERNS_8internal12VectorBufferImEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #19
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #19
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #19
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.669", align 8
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #19, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %70, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %70, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %70

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %4
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %70, label %31

56:                                               ; preds = %47
  %57 = bitcast %"class.std::__1::unique_ptr.669"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.669"* nonnull sret %3, %"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* nonnull %32) #19
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.669", %"class.std::__1::unique_ptr.669"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %58, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node"* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.669", %"class.std::__1::unique_ptr.669"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 2, i32 0, i32 1
  call void @_ZN19HistoryInfoMapValueD1Ev(%struct.HistoryInfoMapValue* %66) #19
  br label %67

67:                                               ; preds = %65, %61
  %68 = bitcast %"struct.std::__1::__hash_node"* %59 to i8*
  call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %56, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57)
  br label %70

70:                                               ; preds = %44, %52, %25, %2, %18, %69
  %71 = phi i64 [ 1, %69 ], [ 0, %18 ], [ 0, %2 ], [ 0, %25 ], [ 0, %52 ], [ 0, %44 ]
  ret i64 %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.669"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #19, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.64"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.669"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.669", %"class.std::__1::unique_ptr.669"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.67"** %98 to %"class.std::__1::__compressed_pair.64"**
  store %"class.std::__1::__compressed_pair.64"* %30, %"class.std::__1::__compressed_pair.64"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.669", %"class.std::__1::unique_ptr.669"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree.75"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.588"**
  %5 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.588"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node.588"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %75, label %8

8:                                                ; preds = %2
  %9 = load i64, i64* %1, align 8
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %8 ], [ %21, %10 ]
  %12 = phi %"class.std::__1::__tree_node.588"* [ %5, %8 ], [ %22, %10 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node.588"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.588", %"class.std::__1::__tree_node.588"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node.588"* %12 to %"class.std::__1::__tree_node.588"**
  %20 = select i1 %15, %"class.std::__1::__tree_node.588"** %17, %"class.std::__1::__tree_node.588"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node.588"*, %"class.std::__1::__tree_node.588"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node.588"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %3
  br i1 %25, label %75, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %9, %29
  br i1 %30, label %75, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_end_node"**
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %36
  br i1 %42, label %59, label %50

43:                                               ; preds = %31, %43
  %44 = phi %"class.std::__1::__tree_node_base"* [ %46, %43 ], [ %33, %31 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %43

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0
  br label %59

50:                                               ; preds = %35, %50
  %51 = phi %"class.std::__1::__tree_end_node"** [ %54, %50 ], [ %38, %35 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"** %51 to %"class.std::__1::__tree_node_base"**
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %53
  br i1 %58, label %59, label %50

59:                                               ; preds = %50, %48, %35
  %60 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %39, %35 ], [ %55, %50 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %21
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = ptrtoint %"class.std::__1::__tree_end_node"* %60 to i64
  %66 = bitcast %"class.std::__1::__tree.75"* %0 to i64*
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %59, %64
  %68 = getelementptr inbounds %"class.std::__1::__tree.75", %"class.std::__1::__tree.75"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %71) #19
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %struct.RowWordStarts*
  tail call void @_ZN13RowWordStartsD1Ev(%struct.RowWordStarts* %73) #19
  %74 = bitcast %"class.std::__1::__tree_end_node"* %21 to i8*
  tail call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %26, %24, %2, %67
  %76 = phi i64 [ 1, %67 ], [ 0, %2 ], [ 0, %24 ], [ 0, %26 ]
  ret i64 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree.47"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.585"**
  %5 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.585"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node.585"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %83, label %8

8:                                                ; preds = %2
  %9 = load i64, i64* %1, align 8
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %8 ], [ %21, %10 ]
  %12 = phi %"class.std::__1::__tree_node.585"* [ %5, %8 ], [ %22, %10 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node.585"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.585", %"class.std::__1::__tree_node.585"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node.585"* %12 to %"class.std::__1::__tree_node.585"**
  %20 = select i1 %15, %"class.std::__1::__tree_node.585"** %17, %"class.std::__1::__tree_node.585"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node.585"*, %"class.std::__1::__tree_node.585"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node.585"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %3
  br i1 %25, label %83, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %9, %29
  br i1 %30, label %83, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_end_node"**
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %36
  br i1 %42, label %59, label %50

43:                                               ; preds = %31, %43
  %44 = phi %"class.std::__1::__tree_node_base"* [ %46, %43 ], [ %33, %31 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %43

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0
  br label %59

50:                                               ; preds = %35, %50
  %51 = phi %"class.std::__1::__tree_end_node"** [ %54, %50 ], [ %38, %35 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"** %51 to %"class.std::__1::__tree_node_base"**
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %53
  br i1 %58, label %59, label %50

59:                                               ; preds = %50, %48, %35
  %60 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %39, %35 ], [ %55, %50 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %21
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = ptrtoint %"class.std::__1::__tree_end_node"* %60 to i64
  %66 = bitcast %"class.std::__1::__tree.47"* %0 to i64*
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %64, %59
  %68 = getelementptr inbounds %"class.std::__1::__tree.47", %"class.std::__1::__tree.47"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %71) #19
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to i64**
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %67
  %77 = ptrtoint i64* %74 to i64
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 6
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %80) #20
  br label %81

81:                                               ; preds = %67, %76
  %82 = bitcast %"class.std::__1::__tree_end_node"* %21 to i8*
  tail call void @_ZdlPv(i8* %82) #20
  br label %83

83:                                               ; preds = %26, %24, %2, %81
  %84 = phi i64 [ 1, %81 ], [ 0, %2 ], [ 0, %24 ], [ 0, %26 ]
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.16"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.579"**
  %5 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.579"* %5, null
  br i1 %6, label %106, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %19 = select i1 %11, i16* %17, i16* %18
  br label %20

20:                                               ; preds = %64, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %66, %64 ]
  %22 = phi %"class.std::__1::__tree_node.579"* [ %5, %7 ], [ %67, %64 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type.580"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %57, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type.580", %"struct.std::__1::__value_type.580"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type.580"* %23 to i16*
  %39 = select i1 %27, i16* %37, i16* %38
  br label %40

40:                                               ; preds = %52, %35
  %41 = phi i64 [ %53, %52 ], [ %33, %35 ]
  %42 = phi i16* [ %55, %52 ], [ %19, %35 ]
  %43 = phi i16* [ %54, %52 ], [ %39, %35 ]
  %44 = load i16, i16* %43, align 2
  %45 = load i16, i16* %42, align 2
  %46 = icmp ult i16 %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node.579"**
  br label %64

50:                                               ; preds = %40
  %51 = icmp ult i16 %45, %44
  br i1 %51, label %61, label %52

52:                                               ; preds = %50
  %53 = add i64 %41, -1
  %54 = getelementptr inbounds i16, i16* %43, i64 1
  %55 = getelementptr inbounds i16, i16* %42, i64 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %57, label %40

57:                                               ; preds = %52, %20
  %58 = icmp ult i64 %31, %15
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__tree_node_base"** %59 to %"class.std::__1::__tree_node.579"**
  br i1 %58, label %64, label %61

61:                                               ; preds = %50, %57
  %62 = bitcast %"class.std::__1::__tree_node.579"* %22 to %"class.std::__1::__tree_node.579"**
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %22, i64 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %61, %57, %47
  %65 = phi %"class.std::__1::__tree_node.579"** [ %62, %61 ], [ %49, %47 ], [ %60, %57 ]
  %66 = phi %"class.std::__1::__tree_end_node"* [ %63, %61 ], [ %21, %47 ], [ %21, %57 ]
  %67 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %65, align 8
  %68 = icmp eq %"class.std::__1::__tree_node.579"* %67, null
  br i1 %68, label %69, label %20

69:                                               ; preds = %64
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %66, %3
  br i1 %70, label %106, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 4
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 5
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp ult i64 %81, %15
  %83 = select i1 %82, i64 %81, i64 %15
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %104, label %85

85:                                               ; preds = %71
  %86 = bitcast %"class.std::__1::__tree_end_node"* %72 to i16**
  %87 = load i16*, i16** %86, align 8
  %88 = bitcast %"class.std::__1::__tree_end_node"* %72 to i16*
  %89 = select i1 %76, i16* %87, i16* %88
  br label %90

90:                                               ; preds = %99, %85
  %91 = phi i64 [ %100, %99 ], [ %83, %85 ]
  %92 = phi i16* [ %102, %99 ], [ %89, %85 ]
  %93 = phi i16* [ %101, %99 ], [ %19, %85 ]
  %94 = load i16, i16* %93, align 2
  %95 = load i16, i16* %92, align 2
  %96 = icmp ult i16 %94, %95
  br i1 %96, label %106, label %97

97:                                               ; preds = %90
  %98 = icmp ult i16 %95, %94
  br i1 %98, label %107, label %99

99:                                               ; preds = %97
  %100 = add i64 %91, -1
  %101 = getelementptr inbounds i16, i16* %93, i64 1
  %102 = getelementptr inbounds i16, i16* %92, i64 1
  %103 = icmp eq i64 %100, 0
  br i1 %103, label %104, label %90

104:                                              ; preds = %99, %71
  %105 = icmp ult i64 %15, %81
  br i1 %105, label %106, label %107

106:                                              ; preds = %90, %69, %2, %104
  br label %107

107:                                              ; preds = %97, %104, %106
  %108 = phi %"class.std::__1::__tree_end_node"* [ %3, %106 ], [ %66, %104 ], [ %66, %97 ]
  ret %"class.std::__1::__tree_end_node"* %108
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #20
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #19
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #19
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #20
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.16"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.749"* dereferenceable(8), %"class.std::__1::tuple.626"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.579"**
  %8 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.579"* %8, null
  br i1 %9, label %99, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %23 = select i1 %15, i16* %21, i16* %22
  br label %24

24:                                               ; preds = %95, %10
  %25 = phi %"class.std::__1::__tree_node.579"* [ %98, %95 ], [ %8, %10 ]
  %26 = phi %"class.std::__1::__tree_node_base"** [ %97, %95 ], [ %11, %10 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %25, i64 0, i32 1
  %28 = bitcast %"struct.std::__1::__value_type.580"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %30 to i64
  %35 = select i1 %31, i64 %33, i64 %34
  %36 = icmp ult i64 %35, %19
  %37 = select i1 %36, i64 %35, i64 %19
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"struct.std::__1::__value_type.580", %"struct.std::__1::__value_type.580"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = bitcast %"struct.std::__1::__value_type.580"* %27 to i16*
  %43 = select i1 %31, i16* %41, i16* %42
  br label %44

44:                                               ; preds = %53, %39
  %45 = phi i64 [ %54, %53 ], [ %37, %39 ]
  %46 = phi i16* [ %56, %53 ], [ %43, %39 ]
  %47 = phi i16* [ %55, %53 ], [ %23, %39 ]
  %48 = load i16, i16* %47, align 2
  %49 = load i16, i16* %46, align 2
  %50 = icmp ult i16 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = icmp ult i16 %49, %48
  br i1 %52, label %66, label %53

53:                                               ; preds = %51
  %54 = add i64 %45, -1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = getelementptr inbounds i16, i16* %46, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %58, label %44

58:                                               ; preds = %53, %24
  %59 = icmp ult i64 %19, %35
  br i1 %59, label %60, label %66

60:                                               ; preds = %44, %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %25, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %95

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %25, i64 0, i32 0, i32 0
  br label %101

66:                                               ; preds = %51, %58
  br i1 %38, label %86, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"struct.std::__1::__value_type.580", %"struct.std::__1::__value_type.580"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = bitcast %"struct.std::__1::__value_type.580"* %27 to i16*
  %71 = select i1 %31, i16* %69, i16* %70
  br label %72

72:                                               ; preds = %81, %67
  %73 = phi i64 [ %82, %81 ], [ %37, %67 ]
  %74 = phi i16* [ %84, %81 ], [ %23, %67 ]
  %75 = phi i16* [ %83, %81 ], [ %71, %67 ]
  %76 = load i16, i16* %75, align 2
  %77 = load i16, i16* %74, align 2
  %78 = icmp ult i16 %76, %77
  br i1 %78, label %87, label %79

79:                                               ; preds = %72
  %80 = icmp ult i16 %77, %76
  br i1 %80, label %93, label %81

81:                                               ; preds = %79
  %82 = add i64 %73, -1
  %83 = getelementptr inbounds i16, i16* %75, i64 1
  %84 = getelementptr inbounds i16, i16* %74, i64 1
  %85 = icmp eq i64 %82, 0
  br i1 %85, label %86, label %72

86:                                               ; preds = %81, %66
  br i1 %36, label %87, label %93

87:                                               ; preds = %72, %86
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %25, i64 0, i32 0, i32 1
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %25, i64 0, i32 0, i32 0
  br label %101

93:                                               ; preds = %86, %79
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %25, i64 0, i32 0, i32 0
  br label %101

95:                                               ; preds = %87, %60
  %96 = phi %"class.std::__1::__tree_node_base"* [ %62, %60 ], [ %89, %87 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %88, %87 ]
  %98 = bitcast %"class.std::__1::__tree_node_base"* %96 to %"class.std::__1::__tree_node.579"*
  br label %24

99:                                               ; preds = %5
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %101

101:                                              ; preds = %64, %91, %93, %99
  %102 = phi %"class.std::__1::__tree_end_node"* [ %6, %99 ], [ %65, %64 ], [ %92, %91 ], [ %94, %93 ]
  %103 = phi %"class.std::__1::__tree_node_base"** [ %100, %99 ], [ %61, %64 ], [ %88, %91 ], [ %26, %93 ]
  %104 = bitcast %"class.std::__1::__tree_node_base"** %103 to %"class.std::__1::__tree_node.579"**
  %105 = load %"class.std::__1::__tree_node.579"*, %"class.std::__1::__tree_node.579"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node.579"* %105, null
  br i1 %106, label %107, label %135

107:                                              ; preds = %101
  %108 = tail call i8* @_Znwm(i64 64) #20, !noalias !540
  %109 = getelementptr inbounds i8, i8* %108, i64 32
  %110 = bitcast %"class.std::__1::tuple.749"* %3 to i8**
  %111 = load i8*, i8** %110, align 8, !noalias !540
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %111, i64 24, i1 false) #19, !noalias !540
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false) #19, !noalias !540
  %112 = getelementptr inbounds i8, i8* %108, i64 56
  %113 = bitcast i8* %112 to i64*
  store i64 0, i64* %113, align 8, !noalias !540
  %114 = bitcast i8* %108 to %"class.std::__1::__tree_node.579"*
  %115 = bitcast i8* %108 to %"class.std::__1::__tree_node_base"*
  %116 = getelementptr inbounds i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"** %117, align 8
  %118 = bitcast %"class.std::__1::__tree_node_base"** %103 to i8**
  store i8* %108, i8** %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 0
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 0, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %107
  %125 = ptrtoint %"class.std::__1::__tree_node_base"* %122 to i64
  %126 = bitcast %"class.std::__1::__tree.16"* %0 to i64*
  store i64 %125, i64* %126, align 8
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  br label %128

128:                                              ; preds = %124, %107
  %129 = phi %"class.std::__1::__tree_node_base"* [ %115, %107 ], [ %127, %124 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"* %129) #19
  %132 = getelementptr inbounds %"class.std::__1::__tree.16", %"class.std::__1::__tree.16"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  br label %135

135:                                              ; preds = %128, %101
  %136 = phi i8 [ 1, %128 ], [ 0, %101 ]
  %137 = phi %"class.std::__1::__tree_node.579"* [ %114, %128 ], [ %105, %101 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node.579", %"class.std::__1::__tree_node.579"* %137, i64 0, i32 0, i32 0
  %139 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %138, 0
  %140 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %139, i8 %136, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64*, i64*, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1), i64, i64*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i64* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp ult i64 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i64 %10, i64* %0, align 8
  store i64 %11, i64* %9, align 8
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i64* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i64, i64* %0, i64 1
  %20 = icmp eq i64* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i64, i64* %1, i64 -2
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i64, i64* %19, align 8
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i64* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 -1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i64 %32, i64* %30, align 8
  %35 = icmp eq i64* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i64* [ %30, %29 ], [ %0, %34 ]
  store i64 %28, i64* %37, align 8
  %38 = getelementptr inbounds i64, i64* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i64* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 8
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i64* [ %410, %408 ], [ %40, %39 ]
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i64* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i64* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i64 %44, i64* %52, align 8
  %53 = getelementptr inbounds i64, i64* %43, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i64 %49, i64* %47, align 8
  %57 = icmp eq i64* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i64, i64* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %0, i64* %60, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i64, i64* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %60, i64* %1, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %2, i64 %63, i64* %64)
  %65 = getelementptr inbounds i64, i64* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i64* %366 to i64
  %68 = icmp eq i64* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i64, i64* %4, i64 %70
  %72 = ptrtoint i64* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 4
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i64* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i64* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i64* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i64, i64* %4, i64 %81
  %83 = ptrtoint i64* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i64* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i64* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i64, i64* %90, align 8
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds i64, i64* %90, i64 1
  %95 = getelementptr inbounds i64, i64* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !543

98:                                               ; preds = %89, %77
  %99 = phi i64* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i64* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 56
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i64, i64* %4, i64 %103
  %105 = ptrtoint i64* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i64, i64* %368, i64 %108
  %110 = getelementptr i64, i64* %366, i64 %108
  %111 = icmp ult i64* %368, %110
  %112 = icmp ult i64* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 4611686018427387900
  %116 = getelementptr i64, i64* %366, i64 %115
  %117 = getelementptr i64, i64* %368, i64 %115
  %118 = add nsw i64 %115, -4
  %119 = lshr exact i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 12
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i64, i64* %366, i64 %126
  %129 = getelementptr i64, i64* %368, i64 %126
  %130 = bitcast i64* %128 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !544
  %132 = getelementptr i64, i64* %128, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !544
  %135 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 8, !alias.scope !547, !noalias !544
  %136 = getelementptr i64, i64* %129, i64 2
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 8, !alias.scope !547, !noalias !544
  %138 = or i64 %126, 4
  %139 = getelementptr i64, i64* %366, i64 %138
  %140 = getelementptr i64, i64* %368, i64 %138
  %141 = bitcast i64* %139 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !544
  %143 = getelementptr i64, i64* %139, i64 2
  %144 = bitcast i64* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !544
  %146 = bitcast i64* %140 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 8, !alias.scope !547, !noalias !544
  %147 = getelementptr i64, i64* %140, i64 2
  %148 = bitcast i64* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 8, !alias.scope !547, !noalias !544
  %149 = or i64 %126, 8
  %150 = getelementptr i64, i64* %366, i64 %149
  %151 = getelementptr i64, i64* %368, i64 %149
  %152 = bitcast i64* %150 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !544
  %154 = getelementptr i64, i64* %150, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !544
  %157 = bitcast i64* %151 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !547, !noalias !544
  %158 = getelementptr i64, i64* %151, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !547, !noalias !544
  %160 = or i64 %126, 12
  %161 = getelementptr i64, i64* %366, i64 %160
  %162 = getelementptr i64, i64* %368, i64 %160
  %163 = bitcast i64* %161 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !544
  %165 = getelementptr i64, i64* %161, i64 2
  %166 = bitcast i64* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !544
  %168 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 8, !alias.scope !547, !noalias !544
  %169 = getelementptr i64, i64* %162, i64 2
  %170 = bitcast i64* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 8, !alias.scope !547, !noalias !544
  %171 = add i64 %126, 16
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !549

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i64, i64* %366, i64 %178
  %181 = getelementptr i64, i64* %368, i64 %178
  %182 = bitcast i64* %180 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !544
  %184 = getelementptr i64, i64* %180, i64 2
  %185 = bitcast i64* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !544
  %187 = bitcast i64* %181 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %187, align 8, !alias.scope !547, !noalias !544
  %188 = getelementptr i64, i64* %181, i64 2
  %189 = bitcast i64* %188 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %189, align 8, !alias.scope !547, !noalias !544
  %190 = add i64 %178, 4
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !550

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i64* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i64* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i64* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i64* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i64* %196 to i64
  %202 = icmp eq i64* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i64, i64* %4, i64 %204
  %206 = ptrtoint i64* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 4
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i64, i64* %4, i64 %212
  %214 = ptrtoint i64* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i64, i64* %198, i64 %217
  %219 = getelementptr i64, i64* %196, i64 %217
  %220 = icmp ult i64* %198, %219
  %221 = icmp ult i64* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 4611686018427387900
  %225 = getelementptr i64, i64* %196, i64 %224
  %226 = getelementptr i64, i64* %198, i64 %224
  %227 = add nsw i64 %224, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i64, i64* %196, i64 %235
  %238 = getelementptr i64, i64* %198, i64 %235
  %239 = bitcast i64* %237 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !551
  %241 = getelementptr i64, i64* %237, i64 2
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !551
  %244 = bitcast i64* %238 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 8, !alias.scope !554, !noalias !551
  %245 = getelementptr i64, i64* %238, i64 2
  %246 = bitcast i64* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 8, !alias.scope !554, !noalias !551
  %247 = or i64 %235, 4
  %248 = getelementptr i64, i64* %196, i64 %247
  %249 = getelementptr i64, i64* %198, i64 %247
  %250 = bitcast i64* %248 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !551
  %252 = getelementptr i64, i64* %248, i64 2
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !551
  %255 = bitcast i64* %249 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 8, !alias.scope !554, !noalias !551
  %256 = getelementptr i64, i64* %249, i64 2
  %257 = bitcast i64* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 8, !alias.scope !554, !noalias !551
  %258 = or i64 %235, 8
  %259 = getelementptr i64, i64* %196, i64 %258
  %260 = getelementptr i64, i64* %198, i64 %258
  %261 = bitcast i64* %259 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !551
  %263 = getelementptr i64, i64* %259, i64 2
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !551
  %266 = bitcast i64* %260 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 8, !alias.scope !554, !noalias !551
  %267 = getelementptr i64, i64* %260, i64 2
  %268 = bitcast i64* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 8, !alias.scope !554, !noalias !551
  %269 = or i64 %235, 12
  %270 = getelementptr i64, i64* %196, i64 %269
  %271 = getelementptr i64, i64* %198, i64 %269
  %272 = bitcast i64* %270 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !551
  %274 = getelementptr i64, i64* %270, i64 2
  %275 = bitcast i64* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 8, !alias.scope !551
  %277 = bitcast i64* %271 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 8, !alias.scope !554, !noalias !551
  %278 = getelementptr i64, i64* %271, i64 2
  %279 = bitcast i64* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 8, !alias.scope !554, !noalias !551
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !556

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i64, i64* %196, i64 %287
  %290 = getelementptr i64, i64* %198, i64 %287
  %291 = bitcast i64* %289 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !551
  %293 = getelementptr i64, i64* %289, i64 2
  %294 = bitcast i64* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !551
  %296 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !554, !noalias !551
  %297 = getelementptr i64, i64* %290, i64 2
  %298 = bitcast i64* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !554, !noalias !551
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !557

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i64* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i64* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i64* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i64, i64* %4, i64 %308
  %310 = ptrtoint i64* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 3
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i64* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i64* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i64, i64* %317, align 8
  store i64 %320, i64* %318, align 8
  %321 = getelementptr inbounds i64, i64* %317, i64 1
  %322 = getelementptr inbounds i64, i64* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !558

325:                                              ; preds = %316, %304
  %326 = phi i64* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i64* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 56
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i64* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i64* [ %355, %329 ], [ %327, %325 ]
  %332 = load i64, i64* %330, align 8
  store i64 %332, i64* %331, align 8
  %333 = getelementptr inbounds i64, i64* %330, i64 1
  %334 = getelementptr inbounds i64, i64* %331, i64 1
  %335 = load i64, i64* %333, align 8
  store i64 %335, i64* %334, align 8
  %336 = getelementptr inbounds i64, i64* %330, i64 2
  %337 = getelementptr inbounds i64, i64* %331, i64 2
  %338 = load i64, i64* %336, align 8
  store i64 %338, i64* %337, align 8
  %339 = getelementptr inbounds i64, i64* %330, i64 3
  %340 = getelementptr inbounds i64, i64* %331, i64 3
  %341 = load i64, i64* %339, align 8
  store i64 %341, i64* %340, align 8
  %342 = getelementptr inbounds i64, i64* %330, i64 4
  %343 = getelementptr inbounds i64, i64* %331, i64 4
  %344 = load i64, i64* %342, align 8
  store i64 %344, i64* %343, align 8
  %345 = getelementptr inbounds i64, i64* %330, i64 5
  %346 = getelementptr inbounds i64, i64* %331, i64 5
  %347 = load i64, i64* %345, align 8
  store i64 %347, i64* %346, align 8
  %348 = getelementptr inbounds i64, i64* %330, i64 6
  %349 = getelementptr inbounds i64, i64* %331, i64 6
  %350 = load i64, i64* %348, align 8
  store i64 %350, i64* %349, align 8
  %351 = getelementptr inbounds i64, i64* %330, i64 7
  %352 = getelementptr inbounds i64, i64* %331, i64 7
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds i64, i64* %330, i64 8
  %355 = getelementptr inbounds i64, i64* %331, i64 8
  %356 = icmp eq i64* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !559

357:                                              ; preds = %195
  %358 = load i64, i64* %197, align 8
  %359 = load i64, i64* %196, align 8
  %360 = icmp ult i64 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i64 %358, i64* %198, align 8
  %362 = getelementptr inbounds i64, i64* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i64 %359, i64* %198, align 8
  %364 = getelementptr inbounds i64, i64* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i64* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i64* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i64, i64* %198, i64 1
  %369 = icmp eq i64* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i64* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i64* [ %396, %370 ], [ %100, %98 ]
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %371, i64 1
  %375 = getelementptr inbounds i64, i64* %372, i64 1
  %376 = load i64, i64* %374, align 8
  store i64 %376, i64* %375, align 8
  %377 = getelementptr inbounds i64, i64* %371, i64 2
  %378 = getelementptr inbounds i64, i64* %372, i64 2
  %379 = load i64, i64* %377, align 8
  store i64 %379, i64* %378, align 8
  %380 = getelementptr inbounds i64, i64* %371, i64 3
  %381 = getelementptr inbounds i64, i64* %372, i64 3
  %382 = load i64, i64* %380, align 8
  store i64 %382, i64* %381, align 8
  %383 = getelementptr inbounds i64, i64* %371, i64 4
  %384 = getelementptr inbounds i64, i64* %372, i64 4
  %385 = load i64, i64* %383, align 8
  store i64 %385, i64* %384, align 8
  %386 = getelementptr inbounds i64, i64* %371, i64 5
  %387 = getelementptr inbounds i64, i64* %372, i64 5
  %388 = load i64, i64* %386, align 8
  store i64 %388, i64* %387, align 8
  %389 = getelementptr inbounds i64, i64* %371, i64 6
  %390 = getelementptr inbounds i64, i64* %372, i64 6
  %391 = load i64, i64* %389, align 8
  store i64 %391, i64* %390, align 8
  %392 = getelementptr inbounds i64, i64* %371, i64 7
  %393 = getelementptr inbounds i64, i64* %372, i64 7
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds i64, i64* %371, i64 8
  %396 = getelementptr inbounds i64, i64* %372, i64 8
  %397 = icmp eq i64* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !560

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %60, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %60, i64* %1, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %2, i64 %399, i64* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %0, i64* %60, i64* %1, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i64* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i64* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i64, i64* %402, i64 -1
  %404 = load i64, i64* %403, align 8
  %405 = icmp ult i64 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i64 %404, i64* %402, align 8
  %407 = icmp eq i64* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i64* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i64 %54, i64* %409, align 8
  %410 = getelementptr inbounds i64, i64* %43, i64 2
  %411 = icmp eq i64* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64*, i64*, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1), i64, i64*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp ult i64 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i64 %10, i64* %4, align 8
  %14 = getelementptr inbounds i64, i64* %4, i64 1
  %15 = load i64, i64* %0, align 8
  store i64 %15, i64* %14, align 8
  br label %390

16:                                               ; preds = %8
  store i64 %11, i64* %4, align 8
  %17 = getelementptr inbounds i64, i64* %4, i64 1
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %17, align 8
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i64* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i64, i64* %0, align 8
  store i64 %24, i64* %4, align 8
  %25 = getelementptr inbounds i64, i64* %0, i64 1
  %26 = icmp eq i64* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i64 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i64* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i64* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 1
  %32 = load i64, i64* %29, align 8
  %33 = icmp ult i64 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i64 %28, i64* %31, align 8
  %35 = icmp eq i64* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i64* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 -1
  %39 = load i64, i64* %29, align 8
  %40 = load i64, i64* %38, align 8
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i64 %40, i64* %37, align 8
  %43 = icmp eq i64* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i64* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i64, i64* %29, align 8
  store i64 %46, i64* %45, align 8
  br label %48

47:                                               ; preds = %27
  store i64 %32, i64* %31, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i64, i64* %29, i64 1
  %50 = icmp eq i64* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i64, i64* %31, align 8
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i64, i64* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %55, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %2, i64 %54, i64* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i64, i64* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %55, i64* %1, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %2, i64 %56, i64* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i64* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i64* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i64* %60 to i64
  %63 = icmp eq i64* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i64, i64* %1, i64 -1
  %66 = ptrtoint i64* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 3
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 4
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i64, i64* %1, i64 -1
  %73 = ptrtoint i64* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i64, i64* %61, i64 %76
  %78 = getelementptr i64, i64* %60, i64 %76
  %79 = icmp ult i64* %61, %78
  %80 = icmp ult i64* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 4611686018427387900
  %84 = getelementptr i64, i64* %61, i64 %83
  %85 = getelementptr i64, i64* %60, i64 %83
  %86 = add nsw i64 %83, -4
  %87 = lshr exact i64 %86, 2
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 12
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i64, i64* %61, i64 %94
  %97 = getelementptr i64, i64* %60, i64 %94
  %98 = bitcast i64* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !561
  %100 = getelementptr i64, i64* %97, i64 2
  %101 = bitcast i64* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !561
  %103 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !564, !noalias !561
  %104 = getelementptr i64, i64* %96, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !564, !noalias !561
  %106 = or i64 %94, 4
  %107 = getelementptr i64, i64* %61, i64 %106
  %108 = getelementptr i64, i64* %60, i64 %106
  %109 = bitcast i64* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !561
  %111 = getelementptr i64, i64* %108, i64 2
  %112 = bitcast i64* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !561
  %114 = bitcast i64* %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !564, !noalias !561
  %115 = getelementptr i64, i64* %107, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !564, !noalias !561
  %117 = or i64 %94, 8
  %118 = getelementptr i64, i64* %61, i64 %117
  %119 = getelementptr i64, i64* %60, i64 %117
  %120 = bitcast i64* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !561
  %122 = getelementptr i64, i64* %119, i64 2
  %123 = bitcast i64* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !561
  %125 = bitcast i64* %118 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 8, !alias.scope !564, !noalias !561
  %126 = getelementptr i64, i64* %118, i64 2
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 8, !alias.scope !564, !noalias !561
  %128 = or i64 %94, 12
  %129 = getelementptr i64, i64* %61, i64 %128
  %130 = getelementptr i64, i64* %60, i64 %128
  %131 = bitcast i64* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !561
  %133 = getelementptr i64, i64* %130, i64 2
  %134 = bitcast i64* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !561
  %136 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %136, align 8, !alias.scope !564, !noalias !561
  %137 = getelementptr i64, i64* %129, i64 2
  %138 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %138, align 8, !alias.scope !564, !noalias !561
  %139 = add i64 %94, 16
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !566

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i64, i64* %61, i64 %146
  %149 = getelementptr i64, i64* %60, i64 %146
  %150 = bitcast i64* %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !alias.scope !561
  %152 = getelementptr i64, i64* %149, i64 2
  %153 = bitcast i64* %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !561
  %155 = bitcast i64* %148 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %155, align 8, !alias.scope !564, !noalias !561
  %156 = getelementptr i64, i64* %148, i64 2
  %157 = bitcast i64* %156 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %157, align 8, !alias.scope !564, !noalias !561
  %158 = add i64 %146, 4
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !567

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i64* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i64* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i64* %165 to i64
  %167 = getelementptr i64, i64* %1, i64 -1
  %168 = ptrtoint i64* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 3
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i64* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i64* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %175, align 8
  %179 = getelementptr inbounds i64, i64* %176, i64 1
  %180 = getelementptr inbounds i64, i64* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !568

183:                                              ; preds = %174, %163
  %184 = phi i64* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i64* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 56
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i64* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i64* [ %212, %187 ], [ %185, %183 ]
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  %191 = getelementptr inbounds i64, i64* %189, i64 1
  %192 = getelementptr inbounds i64, i64* %188, i64 1
  %193 = load i64, i64* %191, align 8
  store i64 %193, i64* %192, align 8
  %194 = getelementptr inbounds i64, i64* %189, i64 2
  %195 = getelementptr inbounds i64, i64* %188, i64 2
  %196 = load i64, i64* %194, align 8
  store i64 %196, i64* %195, align 8
  %197 = getelementptr inbounds i64, i64* %189, i64 3
  %198 = getelementptr inbounds i64, i64* %188, i64 3
  %199 = load i64, i64* %197, align 8
  store i64 %199, i64* %198, align 8
  %200 = getelementptr inbounds i64, i64* %189, i64 4
  %201 = getelementptr inbounds i64, i64* %188, i64 4
  %202 = load i64, i64* %200, align 8
  store i64 %202, i64* %201, align 8
  %203 = getelementptr inbounds i64, i64* %189, i64 5
  %204 = getelementptr inbounds i64, i64* %188, i64 5
  %205 = load i64, i64* %203, align 8
  store i64 %205, i64* %204, align 8
  %206 = getelementptr inbounds i64, i64* %189, i64 6
  %207 = getelementptr inbounds i64, i64* %188, i64 6
  %208 = load i64, i64* %206, align 8
  store i64 %208, i64* %207, align 8
  %209 = getelementptr inbounds i64, i64* %189, i64 7
  %210 = getelementptr inbounds i64, i64* %188, i64 7
  %211 = load i64, i64* %209, align 8
  store i64 %211, i64* %210, align 8
  %212 = getelementptr inbounds i64, i64* %189, i64 8
  %213 = getelementptr inbounds i64, i64* %188, i64 8
  %214 = icmp eq i64* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !569

215:                                              ; preds = %53, %385
  %216 = phi i64* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i64* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i64* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i64* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i64* %217 to i64
  %222 = icmp eq i64* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i64, i64* %0, i64 %224
  %226 = ptrtoint i64* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 4
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i64, i64* %0, i64 %232
  %234 = ptrtoint i64* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i64, i64* %216, i64 %237
  %239 = getelementptr i64, i64* %217, i64 %237
  %240 = icmp ult i64* %216, %239
  %241 = icmp ult i64* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 4611686018427387900
  %245 = getelementptr i64, i64* %216, i64 %244
  %246 = getelementptr i64, i64* %217, i64 %244
  %247 = add nsw i64 %244, -4
  %248 = lshr exact i64 %247, 2
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 12
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i64, i64* %216, i64 %255
  %258 = getelementptr i64, i64* %217, i64 %255
  %259 = bitcast i64* %258 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 8, !alias.scope !570
  %261 = getelementptr i64, i64* %258, i64 2
  %262 = bitcast i64* %261 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !570
  %264 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %260, <2 x i64>* %264, align 8, !alias.scope !573, !noalias !570
  %265 = getelementptr i64, i64* %257, i64 2
  %266 = bitcast i64* %265 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %266, align 8, !alias.scope !573, !noalias !570
  %267 = or i64 %255, 4
  %268 = getelementptr i64, i64* %216, i64 %267
  %269 = getelementptr i64, i64* %217, i64 %267
  %270 = bitcast i64* %269 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8, !alias.scope !570
  %272 = getelementptr i64, i64* %269, i64 2
  %273 = bitcast i64* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !570
  %275 = bitcast i64* %268 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %275, align 8, !alias.scope !573, !noalias !570
  %276 = getelementptr i64, i64* %268, i64 2
  %277 = bitcast i64* %276 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %277, align 8, !alias.scope !573, !noalias !570
  %278 = or i64 %255, 8
  %279 = getelementptr i64, i64* %216, i64 %278
  %280 = getelementptr i64, i64* %217, i64 %278
  %281 = bitcast i64* %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 8, !alias.scope !570
  %283 = getelementptr i64, i64* %280, i64 2
  %284 = bitcast i64* %283 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !570
  %286 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %286, align 8, !alias.scope !573, !noalias !570
  %287 = getelementptr i64, i64* %279, i64 2
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %288, align 8, !alias.scope !573, !noalias !570
  %289 = or i64 %255, 12
  %290 = getelementptr i64, i64* %216, i64 %289
  %291 = getelementptr i64, i64* %217, i64 %289
  %292 = bitcast i64* %291 to <2 x i64>*
  %293 = load <2 x i64>, <2 x i64>* %292, align 8, !alias.scope !570
  %294 = getelementptr i64, i64* %291, i64 2
  %295 = bitcast i64* %294 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !alias.scope !570
  %297 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %293, <2 x i64>* %297, align 8, !alias.scope !573, !noalias !570
  %298 = getelementptr i64, i64* %290, i64 2
  %299 = bitcast i64* %298 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %299, align 8, !alias.scope !573, !noalias !570
  %300 = add i64 %255, 16
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !575

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i64, i64* %216, i64 %307
  %310 = getelementptr i64, i64* %217, i64 %307
  %311 = bitcast i64* %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !570
  %313 = getelementptr i64, i64* %310, i64 2
  %314 = bitcast i64* %313 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8, !alias.scope !570
  %316 = bitcast i64* %309 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %316, align 8, !alias.scope !573, !noalias !570
  %317 = getelementptr i64, i64* %309, i64 2
  %318 = bitcast i64* %317 to <2 x i64>*
  store <2 x i64> %315, <2 x i64>* %318, align 8, !alias.scope !573, !noalias !570
  %319 = add i64 %307, 4
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !576

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i64* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i64* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i64* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i64, i64* %0, i64 %328
  %330 = ptrtoint i64* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 3
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i64* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i64* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %337, align 8
  %341 = getelementptr inbounds i64, i64* %338, i64 1
  %342 = getelementptr inbounds i64, i64* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !577

345:                                              ; preds = %336, %324
  %346 = phi i64* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i64* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 56
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i64* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i64* [ %374, %349 ], [ %347, %345 ]
  %352 = load i64, i64* %351, align 8
  store i64 %352, i64* %350, align 8
  %353 = getelementptr inbounds i64, i64* %351, i64 1
  %354 = getelementptr inbounds i64, i64* %350, i64 1
  %355 = load i64, i64* %353, align 8
  store i64 %355, i64* %354, align 8
  %356 = getelementptr inbounds i64, i64* %351, i64 2
  %357 = getelementptr inbounds i64, i64* %350, i64 2
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  %359 = getelementptr inbounds i64, i64* %351, i64 3
  %360 = getelementptr inbounds i64, i64* %350, i64 3
  %361 = load i64, i64* %359, align 8
  store i64 %361, i64* %360, align 8
  %362 = getelementptr inbounds i64, i64* %351, i64 4
  %363 = getelementptr inbounds i64, i64* %350, i64 4
  %364 = load i64, i64* %362, align 8
  store i64 %364, i64* %363, align 8
  %365 = getelementptr inbounds i64, i64* %351, i64 5
  %366 = getelementptr inbounds i64, i64* %350, i64 5
  %367 = load i64, i64* %365, align 8
  store i64 %367, i64* %366, align 8
  %368 = getelementptr inbounds i64, i64* %351, i64 6
  %369 = getelementptr inbounds i64, i64* %350, i64 6
  %370 = load i64, i64* %368, align 8
  store i64 %370, i64* %369, align 8
  %371 = getelementptr inbounds i64, i64* %351, i64 7
  %372 = getelementptr inbounds i64, i64* %350, i64 7
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %351, i64 8
  %375 = getelementptr inbounds i64, i64* %350, i64 8
  %376 = icmp eq i64* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !578

377:                                              ; preds = %215
  %378 = load i64, i64* %218, align 8
  %379 = load i64, i64* %217, align 8
  %380 = icmp ult i64 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i64 %378, i64* %216, align 8
  %382 = getelementptr inbounds i64, i64* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i64 %379, i64* %216, align 8
  %384 = getelementptr inbounds i64, i64* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i64* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i64* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i64, i64* %216, i64 1
  %389 = icmp eq i64* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64*, i64*, i64*, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1), i64, i64, i64*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i64* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i64* %1 to i64
  %13 = ptrtoint i64* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i64* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i64*
  %27 = load i64, i64* %26, align 8
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i64*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i64*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i64* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i64, i64* %31, i64 -1
  %38 = bitcast i64* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 4
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i64* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i64* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = getelementptr i64, i64* %31, i64 -1
  %50 = ptrtoint i64* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i64* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i64* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %57, align 8
  %61 = getelementptr inbounds i64, i64* %58, i64 1
  %62 = getelementptr inbounds i64, i64* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !579

65:                                               ; preds = %56, %45
  %66 = phi i64* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i64* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i64* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 56
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i64, i64* %31, i64 -1
  %72 = bitcast i64* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i64, i64* %6, i64 %77
  %79 = bitcast i64* %78 to i8*
  %80 = getelementptr i64, i64* %29, i64 %77
  %81 = icmp ugt i64* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 4611686018427387900
  %86 = getelementptr i64, i64* %6, i64 %85
  %87 = getelementptr i64, i64* %29, i64 %85
  %88 = add nsw i64 %85, -4
  %89 = lshr exact i64 %88, 2
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 12
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i64, i64* %6, i64 %96
  %99 = getelementptr i64, i64* %29, i64 %96
  %100 = bitcast i64* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !580
  %102 = getelementptr i64, i64* %99, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !580
  %105 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8, !alias.scope !583, !noalias !580
  %106 = getelementptr i64, i64* %98, i64 2
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8, !alias.scope !583, !noalias !580
  %108 = or i64 %96, 4
  %109 = getelementptr i64, i64* %6, i64 %108
  %110 = getelementptr i64, i64* %29, i64 %108
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !580
  %113 = getelementptr i64, i64* %110, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !580
  %116 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !583, !noalias !580
  %117 = getelementptr i64, i64* %109, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !583, !noalias !580
  %119 = or i64 %96, 8
  %120 = getelementptr i64, i64* %6, i64 %119
  %121 = getelementptr i64, i64* %29, i64 %119
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !580
  %124 = getelementptr i64, i64* %121, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !580
  %127 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !583, !noalias !580
  %128 = getelementptr i64, i64* %120, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !583, !noalias !580
  %130 = or i64 %96, 12
  %131 = getelementptr i64, i64* %6, i64 %130
  %132 = getelementptr i64, i64* %29, i64 %130
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !580
  %135 = getelementptr i64, i64* %132, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !580
  %138 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !583, !noalias !580
  %139 = getelementptr i64, i64* %131, i64 2
  %140 = bitcast i64* %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !583, !noalias !580
  %141 = add i64 %96, 16
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !585

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i64, i64* %6, i64 %148
  %151 = getelementptr i64, i64* %29, i64 %148
  %152 = bitcast i64* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !580
  %154 = getelementptr i64, i64* %151, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !580
  %157 = bitcast i64* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !583, !noalias !580
  %158 = getelementptr i64, i64* %150, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !583, !noalias !580
  %160 = add i64 %148, 4
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !586

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i64* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i64, i64* %15, i64 -1
  %169 = bitcast i64* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 4
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i64* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i64* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i64* %178 to i64
  %180 = getelementptr i64, i64* %15, i64 -1
  %181 = ptrtoint i64* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i64* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i64* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i64, i64* %189, align 8
  store i64 %191, i64* %188, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !587

196:                                              ; preds = %187, %176
  %197 = phi i64* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i64* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i64* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 56
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i64, i64* %15, i64 -1
  %203 = bitcast i64* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 3
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i64, i64* %6, i64 %208
  %210 = bitcast i64* %209 to i8*
  %211 = getelementptr i64, i64* %31, i64 %208
  %212 = icmp ugt i64* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 4611686018427387900
  %217 = getelementptr i64, i64* %6, i64 %216
  %218 = getelementptr i64, i64* %31, i64 %216
  %219 = add nsw i64 %216, -4
  %220 = lshr exact i64 %219, 2
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 12
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i64, i64* %6, i64 %227
  %230 = getelementptr i64, i64* %31, i64 %227
  %231 = bitcast i64* %230 to <2 x i64>*
  %232 = load <2 x i64>, <2 x i64>* %231, align 8, !alias.scope !588
  %233 = getelementptr i64, i64* %230, i64 2
  %234 = bitcast i64* %233 to <2 x i64>*
  %235 = load <2 x i64>, <2 x i64>* %234, align 8, !alias.scope !588
  %236 = bitcast i64* %229 to <2 x i64>*
  store <2 x i64> %232, <2 x i64>* %236, align 8, !alias.scope !591, !noalias !588
  %237 = getelementptr i64, i64* %229, i64 2
  %238 = bitcast i64* %237 to <2 x i64>*
  store <2 x i64> %235, <2 x i64>* %238, align 8, !alias.scope !591, !noalias !588
  %239 = or i64 %227, 4
  %240 = getelementptr i64, i64* %6, i64 %239
  %241 = getelementptr i64, i64* %31, i64 %239
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !588
  %244 = getelementptr i64, i64* %241, i64 2
  %245 = bitcast i64* %244 to <2 x i64>*
  %246 = load <2 x i64>, <2 x i64>* %245, align 8, !alias.scope !588
  %247 = bitcast i64* %240 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %247, align 8, !alias.scope !591, !noalias !588
  %248 = getelementptr i64, i64* %240, i64 2
  %249 = bitcast i64* %248 to <2 x i64>*
  store <2 x i64> %246, <2 x i64>* %249, align 8, !alias.scope !591, !noalias !588
  %250 = or i64 %227, 8
  %251 = getelementptr i64, i64* %6, i64 %250
  %252 = getelementptr i64, i64* %31, i64 %250
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !588
  %255 = getelementptr i64, i64* %252, i64 2
  %256 = bitcast i64* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !alias.scope !588
  %258 = bitcast i64* %251 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %258, align 8, !alias.scope !591, !noalias !588
  %259 = getelementptr i64, i64* %251, i64 2
  %260 = bitcast i64* %259 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %260, align 8, !alias.scope !591, !noalias !588
  %261 = or i64 %227, 12
  %262 = getelementptr i64, i64* %6, i64 %261
  %263 = getelementptr i64, i64* %31, i64 %261
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !588
  %266 = getelementptr i64, i64* %263, i64 2
  %267 = bitcast i64* %266 to <2 x i64>*
  %268 = load <2 x i64>, <2 x i64>* %267, align 8, !alias.scope !588
  %269 = bitcast i64* %262 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %269, align 8, !alias.scope !591, !noalias !588
  %270 = getelementptr i64, i64* %262, i64 2
  %271 = bitcast i64* %270 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %271, align 8, !alias.scope !591, !noalias !588
  %272 = add i64 %227, 16
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !593

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i64, i64* %6, i64 %279
  %282 = getelementptr i64, i64* %31, i64 %279
  %283 = bitcast i64* %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !588
  %285 = getelementptr i64, i64* %282, i64 2
  %286 = bitcast i64* %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !588
  %288 = bitcast i64* %281 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %288, align 8, !alias.scope !591, !noalias !588
  %289 = getelementptr i64, i64* %281, i64 2
  %290 = bitcast i64* %289 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %290, align 8, !alias.scope !591, !noalias !588
  %291 = add i64 %279, 4
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !594

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i64* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i64* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i64* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i64* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i64* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i64* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i64* %297 to i64
  %306 = ptrtoint i64* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i64* %301 to i8*
  %311 = bitcast i64* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 %307, i1 false) #19
  br label %887

312:                                              ; preds = %299
  %313 = load i64, i64* %302, align 8
  %314 = load i64, i64* %300, align 8
  %315 = icmp ult i64 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i64 %313, i64* %301, align 8
  %317 = getelementptr inbounds i64, i64* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i64 %314, i64* %301, align 8
  %319 = getelementptr inbounds i64, i64* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i64* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i64* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i64, i64* %301, i64 1
  %324 = icmp eq i64* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i64* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i64* [ %350, %325 ], [ %68, %65 ]
  %328 = load i64, i64* %327, align 8
  store i64 %328, i64* %326, align 8
  %329 = getelementptr inbounds i64, i64* %327, i64 1
  %330 = getelementptr inbounds i64, i64* %326, i64 1
  %331 = load i64, i64* %329, align 8
  store i64 %331, i64* %330, align 8
  %332 = getelementptr inbounds i64, i64* %327, i64 2
  %333 = getelementptr inbounds i64, i64* %326, i64 2
  %334 = load i64, i64* %332, align 8
  store i64 %334, i64* %333, align 8
  %335 = getelementptr inbounds i64, i64* %327, i64 3
  %336 = getelementptr inbounds i64, i64* %326, i64 3
  %337 = load i64, i64* %335, align 8
  store i64 %337, i64* %336, align 8
  %338 = getelementptr inbounds i64, i64* %327, i64 4
  %339 = getelementptr inbounds i64, i64* %326, i64 4
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %339, align 8
  %341 = getelementptr inbounds i64, i64* %327, i64 5
  %342 = getelementptr inbounds i64, i64* %326, i64 5
  %343 = load i64, i64* %341, align 8
  store i64 %343, i64* %342, align 8
  %344 = getelementptr inbounds i64, i64* %327, i64 6
  %345 = getelementptr inbounds i64, i64* %326, i64 6
  %346 = load i64, i64* %344, align 8
  store i64 %346, i64* %345, align 8
  %347 = getelementptr inbounds i64, i64* %327, i64 7
  %348 = getelementptr inbounds i64, i64* %326, i64 7
  %349 = load i64, i64* %347, align 8
  store i64 %349, i64* %348, align 8
  %350 = getelementptr inbounds i64, i64* %327, i64 8
  %351 = getelementptr inbounds i64, i64* %326, i64 8
  %352 = icmp eq i64* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !595

353:                                              ; preds = %196, %520, %294
  %354 = phi i64* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i64* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i64* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i64* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i64* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i64* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i64, i64* %358, i64 -1
  %363 = ptrtoint i64* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 3
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 4
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i64, i64* %358, i64 -1
  %370 = ptrtoint i64* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 3
  %373 = xor i64 %372, -1
  %374 = getelementptr i64, i64* %357, i64 %373
  %375 = getelementptr i64, i64* %358, i64 %373
  %376 = icmp ult i64* %374, %358
  %377 = icmp ult i64* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 4611686018427387900
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i64, i64* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i64, i64* %357, i64 %383
  %385 = add nsw i64 %380, -4
  %386 = lshr exact i64 %385, 2
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i64, i64* %358, i64 -1
  %393 = getelementptr i64, i64* %357, i64 -1
  %394 = getelementptr i64, i64* %358, i64 -1
  %395 = getelementptr i64, i64* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i64, i64* %392, i64 %399
  %402 = getelementptr inbounds i64, i64* %401, i64 -1
  %403 = bitcast i64* %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !596
  %405 = getelementptr inbounds i64, i64* %401, i64 -2
  %406 = getelementptr inbounds i64, i64* %405, i64 -1
  %407 = bitcast i64* %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !596
  %409 = getelementptr inbounds i64, i64* %393, i64 %400
  %410 = getelementptr inbounds i64, i64* %409, i64 -1
  %411 = bitcast i64* %410 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %411, align 8, !alias.scope !599, !noalias !596
  %412 = getelementptr inbounds i64, i64* %409, i64 -2
  %413 = getelementptr inbounds i64, i64* %412, i64 -1
  %414 = bitcast i64* %413 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %414, align 8, !alias.scope !599, !noalias !596
  %415 = sub nuw nsw i64 -4, %397
  %416 = sub nuw nsw i64 -4, %397
  %417 = getelementptr inbounds i64, i64* %394, i64 %415
  %418 = getelementptr inbounds i64, i64* %417, i64 -1
  %419 = bitcast i64* %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !596
  %421 = getelementptr inbounds i64, i64* %417, i64 -2
  %422 = getelementptr inbounds i64, i64* %421, i64 -1
  %423 = bitcast i64* %422 to <2 x i64>*
  %424 = load <2 x i64>, <2 x i64>* %423, align 8, !alias.scope !596
  %425 = getelementptr inbounds i64, i64* %395, i64 %416
  %426 = getelementptr inbounds i64, i64* %425, i64 -1
  %427 = bitcast i64* %426 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %427, align 8, !alias.scope !599, !noalias !596
  %428 = getelementptr inbounds i64, i64* %425, i64 -2
  %429 = getelementptr inbounds i64, i64* %428, i64 -1
  %430 = bitcast i64* %429 to <2 x i64>*
  store <2 x i64> %424, <2 x i64>* %430, align 8, !alias.scope !599, !noalias !596
  %431 = add i64 %397, 8
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !601

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -8, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i64, i64* %358, i64 -1
  %441 = getelementptr i64, i64* %357, i64 -1
  %442 = getelementptr inbounds i64, i64* %440, i64 %437
  %443 = getelementptr inbounds i64, i64* %442, i64 -1
  %444 = bitcast i64* %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !596
  %446 = getelementptr inbounds i64, i64* %442, i64 -2
  %447 = getelementptr inbounds i64, i64* %446, i64 -1
  %448 = bitcast i64* %447 to <2 x i64>*
  %449 = load <2 x i64>, <2 x i64>* %448, align 8, !alias.scope !596
  %450 = getelementptr inbounds i64, i64* %441, i64 %437
  %451 = getelementptr inbounds i64, i64* %450, i64 -1
  %452 = bitcast i64* %451 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %452, align 8, !alias.scope !599, !noalias !596
  %453 = getelementptr inbounds i64, i64* %450, i64 -2
  %454 = getelementptr inbounds i64, i64* %453, i64 -1
  %455 = bitcast i64* %454 to <2 x i64>*
  store <2 x i64> %449, <2 x i64>* %455, align 8, !alias.scope !599, !noalias !596
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i64* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i64* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i64, i64* %459, i64 -1
  %462 = ptrtoint i64* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 3
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i64* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i64* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i64, i64* %469, i64 -1
  %473 = load i64, i64* %472, align 8
  %474 = getelementptr inbounds i64, i64* %470, i64 -1
  store i64 %473, i64* %474, align 8
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !602

477:                                              ; preds = %468, %458
  %478 = phi i64* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i64* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 56
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i64* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i64* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i64, i64* %482, i64 -1
  %485 = load i64, i64* %484, align 8
  %486 = getelementptr inbounds i64, i64* %483, i64 -1
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds i64, i64* %482, i64 -2
  %488 = load i64, i64* %487, align 8
  %489 = getelementptr inbounds i64, i64* %483, i64 -2
  store i64 %488, i64* %489, align 8
  %490 = getelementptr inbounds i64, i64* %482, i64 -3
  %491 = load i64, i64* %490, align 8
  %492 = getelementptr inbounds i64, i64* %483, i64 -3
  store i64 %491, i64* %492, align 8
  %493 = getelementptr inbounds i64, i64* %482, i64 -4
  %494 = load i64, i64* %493, align 8
  %495 = getelementptr inbounds i64, i64* %483, i64 -4
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds i64, i64* %482, i64 -5
  %497 = load i64, i64* %496, align 8
  %498 = getelementptr inbounds i64, i64* %483, i64 -5
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds i64, i64* %482, i64 -6
  %500 = load i64, i64* %499, align 8
  %501 = getelementptr inbounds i64, i64* %483, i64 -6
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds i64, i64* %482, i64 -7
  %503 = load i64, i64* %502, align 8
  %504 = getelementptr inbounds i64, i64* %483, i64 -7
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds i64, i64* %482, i64 -8
  %506 = load i64, i64* %505, align 8
  %507 = getelementptr inbounds i64, i64* %483, i64 -8
  store i64 %506, i64* %507, align 8
  %508 = icmp eq i64* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !603

509:                                              ; preds = %356
  %510 = getelementptr inbounds i64, i64* %359, i64 -1
  %511 = getelementptr inbounds i64, i64* %358, i64 -1
  %512 = load i64, i64* %511, align 8
  %513 = load i64, i64* %510, align 8
  %514 = icmp ult i64 %512, %513
  %515 = getelementptr inbounds i64, i64* %357, i64 -1
  %516 = select i1 %514, i64 %513, i64 %512
  %517 = select i1 %514, i64* %510, i64* %359
  %518 = select i1 %514, i64* %358, i64* %511
  store i64 %516, i64* %515, align 8
  %519 = icmp eq i64* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i64* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i64* [ %545, %520 ], [ %199, %196 ]
  %523 = load i64, i64* %522, align 8
  store i64 %523, i64* %521, align 8
  %524 = getelementptr inbounds i64, i64* %522, i64 1
  %525 = getelementptr inbounds i64, i64* %521, i64 1
  %526 = load i64, i64* %524, align 8
  store i64 %526, i64* %525, align 8
  %527 = getelementptr inbounds i64, i64* %522, i64 2
  %528 = getelementptr inbounds i64, i64* %521, i64 2
  %529 = load i64, i64* %527, align 8
  store i64 %529, i64* %528, align 8
  %530 = getelementptr inbounds i64, i64* %522, i64 3
  %531 = getelementptr inbounds i64, i64* %521, i64 3
  %532 = load i64, i64* %530, align 8
  store i64 %532, i64* %531, align 8
  %533 = getelementptr inbounds i64, i64* %522, i64 4
  %534 = getelementptr inbounds i64, i64* %521, i64 4
  %535 = load i64, i64* %533, align 8
  store i64 %535, i64* %534, align 8
  %536 = getelementptr inbounds i64, i64* %522, i64 5
  %537 = getelementptr inbounds i64, i64* %521, i64 5
  %538 = load i64, i64* %536, align 8
  store i64 %538, i64* %537, align 8
  %539 = getelementptr inbounds i64, i64* %522, i64 6
  %540 = getelementptr inbounds i64, i64* %521, i64 6
  %541 = load i64, i64* %539, align 8
  store i64 %541, i64* %540, align 8
  %542 = getelementptr inbounds i64, i64* %522, i64 7
  %543 = getelementptr inbounds i64, i64* %521, i64 7
  %544 = load i64, i64* %542, align 8
  store i64 %544, i64* %543, align 8
  %545 = getelementptr inbounds i64, i64* %522, i64 8
  %546 = getelementptr inbounds i64, i64* %521, i64 8
  %547 = icmp eq i64* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !604

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = icmp ult i64 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i64, i64* %551, i64 1
  %556 = ptrtoint i64* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i64*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i64, i64* %26, i64 %563
  %565 = ptrtoint i64* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 3
  %570 = load i64, i64* %564, align 8
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i64* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i64, i64* %572, i64 %574
  %576 = load i64, i64* %575, align 8
  %577 = icmp ult i64 %570, %576
  %578 = getelementptr inbounds i64, i64* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i64* %572, i64* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i64* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i64* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 3
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i64*
  %593 = inttoptr i64 %550 to i64*
  store i64 %27, i64* %593, align 8
  store i64 %552, i64* %592, align 8
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i64, i64* %560, i64 %595
  %597 = ptrtoint i64* %596 to i64
  %598 = ptrtoint i64* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 3
  %603 = load i64, i64* %596, align 8
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i64* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i64, i64* %605, i64 %607
  %609 = load i64, i64* %608, align 8
  %610 = icmp ult i64 %609, %603
  %611 = getelementptr inbounds i64, i64* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i64* %611, i64* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i64* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i64* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 3
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i64*
  %630 = inttoptr i64 %624 to i64*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i64* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i64* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i64, i64* %629, i64 1
  %638 = icmp eq i64* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i64, i64* %629, align 8
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 3
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %631, i8* align 8 %632, i64 %641, i1 false) #19
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i64, i64* %629, i64 %642
  store i64 %640, i64* %646, align 8
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i64, i64* %26, i64 1
  %649 = icmp eq i64* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i64, i64* %630, i64 -1
  %652 = load i64, i64* %651, align 8
  %653 = ptrtoint i64* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 3
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i64, i64* %630, i64 %658
  %660 = bitcast i64* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %660, i8* align 8 %631, i64 %654, i1 false) #19
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i64* [ %659, %656 ], [ %630, %650 ]
  store i64 %652, i64* %629, align 8
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 3
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 3
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i64, i64* %629, align 8
  store i64 %27, i64* %629, align 8
  store i64 %670, i64* %26, align 8
  %671 = getelementptr inbounds i64, i64* %629, i64 1
  %672 = getelementptr inbounds i64, i64* %26, i64 1
  %673 = icmp eq i64* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i64, i64* %26, i64 -2
  %676 = bitcast i64* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 3
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 4
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i64, i64* %629, i64 2
  %685 = getelementptr i64, i64* %26, i64 -2
  %686 = bitcast i64* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 3
  %691 = getelementptr i64, i64* %684, i64 %690
  %692 = getelementptr i64, i64* %26, i64 2
  %693 = getelementptr i64, i64* %692, i64 %690
  %694 = icmp ult i64* %671, %693
  %695 = icmp ult i64* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 4611686018427387900
  %699 = getelementptr i64, i64* %672, i64 %698
  %700 = getelementptr i64, i64* %671, i64 %698
  %701 = add nsw i64 %698, -4
  %702 = lshr exact i64 %701, 2
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i64, i64* %672, i64 %709
  %712 = getelementptr i64, i64* %671, i64 %709
  %713 = bitcast i64* %711 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !605
  %715 = getelementptr i64, i64* %711, i64 2
  %716 = bitcast i64* %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !605
  %718 = bitcast i64* %712 to <2 x i64>*
  %719 = load <2 x i64>, <2 x i64>* %718, align 8, !alias.scope !608, !noalias !605
  %720 = getelementptr i64, i64* %712, i64 2
  %721 = bitcast i64* %720 to <2 x i64>*
  %722 = load <2 x i64>, <2 x i64>* %721, align 8, !alias.scope !608, !noalias !605
  %723 = bitcast i64* %712 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %723, align 8, !alias.scope !608, !noalias !605
  %724 = bitcast i64* %720 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %724, align 8, !alias.scope !608, !noalias !605
  %725 = bitcast i64* %711 to <2 x i64>*
  store <2 x i64> %719, <2 x i64>* %725, align 8, !alias.scope !605
  %726 = bitcast i64* %715 to <2 x i64>*
  store <2 x i64> %722, <2 x i64>* %726, align 8, !alias.scope !605
  %727 = or i64 %709, 4
  %728 = getelementptr i64, i64* %672, i64 %727
  %729 = getelementptr i64, i64* %671, i64 %727
  %730 = bitcast i64* %728 to <2 x i64>*
  %731 = load <2 x i64>, <2 x i64>* %730, align 8, !alias.scope !605
  %732 = getelementptr i64, i64* %728, i64 2
  %733 = bitcast i64* %732 to <2 x i64>*
  %734 = load <2 x i64>, <2 x i64>* %733, align 8, !alias.scope !605
  %735 = bitcast i64* %729 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !608, !noalias !605
  %737 = getelementptr i64, i64* %729, i64 2
  %738 = bitcast i64* %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !608, !noalias !605
  %740 = bitcast i64* %729 to <2 x i64>*
  store <2 x i64> %731, <2 x i64>* %740, align 8, !alias.scope !608, !noalias !605
  %741 = bitcast i64* %737 to <2 x i64>*
  store <2 x i64> %734, <2 x i64>* %741, align 8, !alias.scope !608, !noalias !605
  %742 = bitcast i64* %728 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %742, align 8, !alias.scope !605
  %743 = bitcast i64* %732 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %743, align 8, !alias.scope !605
  %744 = add i64 %709, 8
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !610

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i64, i64* %672, i64 %748
  %752 = getelementptr i64, i64* %671, i64 %748
  %753 = bitcast i64* %751 to <2 x i64>*
  %754 = load <2 x i64>, <2 x i64>* %753, align 8, !alias.scope !605
  %755 = getelementptr i64, i64* %751, i64 2
  %756 = bitcast i64* %755 to <2 x i64>*
  %757 = load <2 x i64>, <2 x i64>* %756, align 8, !alias.scope !605
  %758 = bitcast i64* %752 to <2 x i64>*
  %759 = load <2 x i64>, <2 x i64>* %758, align 8, !alias.scope !608, !noalias !605
  %760 = getelementptr i64, i64* %752, i64 2
  %761 = bitcast i64* %760 to <2 x i64>*
  %762 = load <2 x i64>, <2 x i64>* %761, align 8, !alias.scope !608, !noalias !605
  %763 = bitcast i64* %752 to <2 x i64>*
  store <2 x i64> %754, <2 x i64>* %763, align 8, !alias.scope !608, !noalias !605
  %764 = bitcast i64* %760 to <2 x i64>*
  store <2 x i64> %757, <2 x i64>* %764, align 8, !alias.scope !608, !noalias !605
  %765 = bitcast i64* %751 to <2 x i64>*
  store <2 x i64> %759, <2 x i64>* %765, align 8, !alias.scope !605
  %766 = bitcast i64* %755 to <2 x i64>*
  store <2 x i64> %762, <2 x i64>* %766, align 8, !alias.scope !605
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i64* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i64* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i64* %771 to i64
  %773 = getelementptr i64, i64* %26, i64 -1
  %774 = ptrtoint i64* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 3
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i64* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i64* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i64, i64* %781, align 8
  %785 = load i64, i64* %782, align 8
  store i64 %784, i64* %782, align 8
  store i64 %785, i64* %781, align 8
  %786 = getelementptr inbounds i64, i64* %782, i64 1
  %787 = getelementptr inbounds i64, i64* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !611

790:                                              ; preds = %780, %769
  %791 = phi i64* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i64* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 24
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i64* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i64* [ %811, %794 ], [ %792, %790 ]
  %797 = load i64, i64* %795, align 8
  %798 = load i64, i64* %796, align 8
  store i64 %797, i64* %796, align 8
  store i64 %798, i64* %795, align 8
  %799 = getelementptr inbounds i64, i64* %796, i64 1
  %800 = getelementptr inbounds i64, i64* %795, i64 1
  %801 = load i64, i64* %800, align 8
  %802 = load i64, i64* %799, align 8
  store i64 %801, i64* %799, align 8
  store i64 %802, i64* %800, align 8
  %803 = getelementptr inbounds i64, i64* %796, i64 2
  %804 = getelementptr inbounds i64, i64* %795, i64 2
  %805 = load i64, i64* %804, align 8
  %806 = load i64, i64* %803, align 8
  store i64 %805, i64* %803, align 8
  store i64 %806, i64* %804, align 8
  %807 = getelementptr inbounds i64, i64* %796, i64 3
  %808 = getelementptr inbounds i64, i64* %795, i64 3
  %809 = load i64, i64* %808, align 8
  %810 = load i64, i64* %807, align 8
  store i64 %809, i64* %807, align 8
  store i64 %810, i64* %808, align 8
  %811 = getelementptr inbounds i64, i64* %796, i64 4
  %812 = getelementptr inbounds i64, i64* %795, i64 4
  %813 = icmp eq i64* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !612

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i64, i64* %629, i64 %815
  %823 = shl nsw i64 %815, 3
  %824 = add i64 %823, -8
  %825 = and i64 %824, 8
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i64, i64* %822, i64 -1
  %829 = load i64, i64* %828, align 8
  %830 = getelementptr inbounds i64, i64* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i64* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i64* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i64* %833 to i64
  %835 = load i64, i64* %833, align 8
  store i64 %835, i64* %832, align 8
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 3
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i64, i64* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i64, i64* %629, i64 %840
  %842 = select i1 %838, i64* %839, i64* %841
  %843 = icmp eq i64* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i64 %829, i64* %833, align 8
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i64* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i64, i64* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i64* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i64, i64* %851, i64 -1
  %853 = load i64, i64* %852, align 8
  %854 = getelementptr inbounds i64, i64* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i64* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i64* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i64* %857 to i64
  %859 = load i64, i64* %857, align 8
  store i64 %859, i64* %856, align 8
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 3
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i64, i64* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i64, i64* %629, i64 %864
  %866 = select i1 %862, i64* %863, i64* %865
  %867 = icmp eq i64* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i64 %853, i64* %857, align 8
  %869 = getelementptr inbounds i64, i64* %851, i64 -2
  %870 = load i64, i64* %869, align 8
  %871 = getelementptr inbounds i64, i64* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i64* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i64* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %560, i64* %629, i64* %873, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i64* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeImNS1_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEE13value_compareENS_11__wrap_iterIPmEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %873, i64* %630, i64* %15, %"struct.base::internal::flat_tree<unsigned long, base::identity, std::__1::less<void>, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i64* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i64* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i64* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i64* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i64* %890 to i64
  %892 = load i64, i64* %890, align 8
  store i64 %892, i64* %889, align 8
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 3
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i64, i64* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i64, i64* %629, i64 %897
  %899 = select i1 %895, i64* %896, i64* %898
  %900 = icmp eq i64* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i64 %870, i64* %890, align 8
  %902 = icmp eq i64* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.215"*, %"class.std::__1::basic_string.107"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.215", %"class.std::__1::__tree.215"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.768"**
  %5 = load %"class.std::__1::__tree_node.768"*, %"class.std::__1::__tree_node.768"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.768"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string.107"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.107"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node.768"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.768", %"class.std::__1::__tree_node.768"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string.107"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.768", %"class.std::__1::__tree_node.768"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string.107", %"class.std::__1::basic_string.107"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string.107"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #19
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.768", %"class.std::__1::__tree_node.768"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.768"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.768", %"class.std::__1::__tree_node.768"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node.768"* %22 to %"class.std::__1::__tree_node.768"**
  %53 = select i1 %48, %"class.std::__1::__tree_node.768"** %50, %"class.std::__1::__tree_node.768"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node.768"*, %"class.std::__1::__tree_node.768"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.768"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #19
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #18

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nounwind }
attributes #20 = { builtin nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !10}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !10}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJRKlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJRKlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJRKlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJRKlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !10}
!36 = distinct !{!36, !12}
!37 = distinct !{!37, !12}
!38 = distinct !{!38, !10}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!41 = distinct !{!41, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!42 = distinct !{!42, !43, !"_ZNK4GURL6schemeEv: argument 0"}
!43 = distinct !{!43, !"_ZNK4GURL6schemeEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !10}
!53 = distinct !{!53, !12}
!54 = distinct !{!54, !12}
!55 = distinct !{!55, !10}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN4base11STLSetUnionINS_8internal9flat_treeINSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS_8identityENS3_4lessIvEENS3_6vectorIS9_NS7_IS9_EEEEEESG_SG_EET_RKT0_RKT1_: argument 0"}
!58 = distinct !{!58, !"_ZN4base11STLSetUnionINS_8internal9flat_treeINSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS_8identityENS3_4lessIvEENS3_6vectorIS9_NS7_IS9_EEEEEESG_SG_EET_RKT0_RKT1_"}
!59 = !{!"branch_weights", i32 1, i32 2000}
!60 = distinct !{!60, !12}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !12}
!68 = distinct !{!68, !12}
!69 = distinct !{!69, !10}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !12}
!77 = distinct !{!77, !12}
!78 = distinct !{!78, !10}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZN4base16STLSetDifferenceINS_8internal9flat_treeIDsNS_8identityENSt3__14lessIvEENS4_6vectorIDsNS4_9allocatorIDsEEEEEESB_SB_EET_RKT0_RKT1_: argument 0"}
!81 = distinct !{!81, !"_ZN4base16STLSetDifferenceINS_8internal9flat_treeIDsNS_8identityENSt3__14lessIvEENS4_6vectorIDsNS4_9allocatorIDsEEEEEESB_SB_EET_RKT0_RKT1_"}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !10}
!88 = distinct !{!88, !12}
!89 = distinct !{!89, !12}
!90 = distinct !{!90, !10}
!91 = !{!92}
!92 = distinct !{!92, !93}
!93 = distinct !{!93, !"LVerDomain"}
!94 = !{!95}
!95 = distinct !{!95, !93}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !12}
!98 = distinct !{!98, !12}
!99 = distinct !{!99, !10}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !12}
!107 = distinct !{!107, !10}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !10}
!114 = distinct !{!114, !12}
!115 = distinct !{!115, !12}
!116 = distinct !{!116, !10}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !12}
!124 = distinct !{!124, !12}
!125 = distinct !{!125, !10}
!126 = !{!127, !129}
!127 = distinct !{!127, !128, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!128 = distinct !{!128, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!129 = distinct !{!129, !130, !"_ZNK4GURL6schemeEv: argument 0"}
!130 = distinct !{!130, !"_ZNK4GURL6schemeEv"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNSt3__19make_pairIRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__19make_pairIRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_"}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !10}
!140 = distinct !{!140, !12}
!141 = distinct !{!141, !12}
!142 = distinct !{!142, !10}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKDsEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!145 = distinct !{!145, !"_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKDsEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!148 = distinct !{!148, !"_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!151 = distinct !{!151, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !10}
!158 = distinct !{!158, !12}
!159 = distinct !{!159, !12}
!160 = distinct !{!160, !10}
!161 = !{!162}
!162 = distinct !{!162, !163}
!163 = distinct !{!163, !"LVerDomain"}
!164 = !{!165}
!165 = distinct !{!165, !163}
!166 = distinct !{!166, !10}
!167 = distinct !{!167, !12}
!168 = distinct !{!168, !12}
!169 = distinct !{!169, !10}
!170 = !{!171}
!171 = distinct !{!171, !172}
!172 = distinct !{!172, !"LVerDomain"}
!173 = !{!174}
!174 = distinct !{!174, !172}
!175 = distinct !{!175, !10}
!176 = distinct !{!176, !12}
!177 = distinct !{!177, !12}
!178 = distinct !{!178, !10}
!179 = !{!180}
!180 = distinct !{!180, !181}
!181 = distinct !{!181, !"LVerDomain"}
!182 = !{!183}
!183 = distinct !{!183, !181}
!184 = distinct !{!184, !10}
!185 = distinct !{!185, !12}
!186 = distinct !{!186, !12}
!187 = distinct !{!187, !10}
!188 = !{!"branch_weights", i32 2000, i32 1}
!189 = !{}
!190 = !{!191}
!191 = distinct !{!191, !192, !"_ZZN19URLIndexPrivateData15RestoreWordListERKN19in_memory_url_index25InMemoryURLIndexCacheItemEENK3$_4clERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE: argument 0"}
!192 = distinct !{!192, !"_ZZN19URLIndexPrivateData15RestoreWordListERKN19in_memory_url_index25InMemoryURLIndexCacheItemEENK3$_4clERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"}
!193 = !{!194}
!194 = distinct !{!194, !195}
!195 = distinct !{!195, !"LVerDomain"}
!196 = !{!197}
!197 = distinct !{!197, !195}
!198 = distinct !{!198, !10}
!199 = distinct !{!199, !12}
!200 = distinct !{!200, !10}
!201 = !{!202}
!202 = distinct !{!202, !203, !"_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKDsEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!203 = distinct !{!203, !"_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKDsEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!204 = !{!205}
!205 = distinct !{!205, !206, !"_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!206 = distinct !{!206, !"_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!209 = distinct !{!209, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!210 = !{!211}
!211 = distinct !{!211, !212}
!212 = distinct !{!212, !"LVerDomain"}
!213 = !{!214}
!214 = distinct !{!214, !212}
!215 = distinct !{!215, !10}
!216 = distinct !{!216, !12}
!217 = distinct !{!217, !10}
!218 = !{!219}
!219 = distinct !{!219, !220}
!220 = distinct !{!220, !"LVerDomain"}
!221 = !{!222}
!222 = distinct !{!222, !220}
!223 = distinct !{!223, !10}
!224 = distinct !{!224, !12}
!225 = distinct !{!225, !10}
!226 = !{!227}
!227 = distinct !{!227, !228}
!228 = distinct !{!228, !"LVerDomain"}
!229 = !{!230}
!230 = distinct !{!230, !228}
!231 = distinct !{!231, !10}
!232 = distinct !{!232, !12}
!233 = distinct !{!233, !12}
!234 = distinct !{!234, !10}
!235 = distinct !{!235, !10}
!236 = distinct !{!236, !12}
!237 = distinct !{!237, !238, !10}
!238 = !{!"llvm.loop.unroll.runtime.disable"}
!239 = !{!240}
!240 = distinct !{!240, !241}
!241 = distinct !{!241, !"LVerDomain"}
!242 = !{!243}
!243 = distinct !{!243, !241}
!244 = distinct !{!244, !10}
!245 = distinct !{!245, !12}
!246 = distinct !{!246, !12}
!247 = distinct !{!247, !10}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = distinct !{!253, !10}
!254 = distinct !{!254, !12}
!255 = distinct !{!255, !12}
!256 = distinct !{!256, !10}
!257 = !{!258}
!258 = distinct !{!258, !259}
!259 = distinct !{!259, !"LVerDomain"}
!260 = !{!261}
!261 = distinct !{!261, !259}
!262 = distinct !{!262, !10}
!263 = distinct !{!263, !12}
!264 = distinct !{!264, !12}
!265 = distinct !{!265, !10}
!266 = !{!267}
!267 = distinct !{!267, !268}
!268 = distinct !{!268, !"LVerDomain"}
!269 = !{!270}
!270 = distinct !{!270, !268}
!271 = distinct !{!271, !10}
!272 = distinct !{!272, !12}
!273 = distinct !{!273, !10}
!274 = !{!275}
!275 = distinct !{!275, !276}
!276 = distinct !{!276, !"LVerDomain"}
!277 = !{!278}
!278 = distinct !{!278, !276}
!279 = distinct !{!279, !10}
!280 = distinct !{!280, !12}
!281 = distinct !{!281, !12}
!282 = distinct !{!282, !10}
!283 = !{!284}
!284 = distinct !{!284, !285}
!285 = distinct !{!285, !"LVerDomain"}
!286 = !{!287}
!287 = distinct !{!287, !285}
!288 = distinct !{!288, !10}
!289 = distinct !{!289, !12}
!290 = distinct !{!290, !10}
!291 = !{!292}
!292 = distinct !{!292, !293, !"_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE16__construct_nodeIJRKS9_EEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS5_ISK_EEEEEEDpOT_: argument 0"}
!293 = distinct !{!293, !"_ZNSt3__16__treeINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS5_IS7_EEEENS_4lessIS9_EENS5_IS9_EEE16__construct_nodeIJRKS9_EEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS5_ISK_EEEEEEDpOT_"}
!294 = !{!295}
!295 = distinct !{!295, !296}
!296 = distinct !{!296, !"LVerDomain"}
!297 = !{!298}
!298 = distinct !{!298, !296}
!299 = distinct !{!299, !10}
!300 = distinct !{!300, !12}
!301 = distinct !{!301, !12}
!302 = distinct !{!302, !10}
!303 = !{!304}
!304 = distinct !{!304, !305, !"_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_: argument 0"}
!305 = distinct !{!305, !"_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_"}
!306 = !{!307}
!307 = distinct !{!307, !308}
!308 = distinct !{!308, !"LVerDomain"}
!309 = !{!310}
!310 = distinct !{!310, !308}
!311 = distinct !{!311, !10}
!312 = distinct !{!312, !12}
!313 = distinct !{!313, !12}
!314 = distinct !{!314, !10}
!315 = !{!316}
!316 = distinct !{!316, !317}
!317 = distinct !{!317, !"LVerDomain"}
!318 = !{!319}
!319 = distinct !{!319, !317}
!320 = distinct !{!320, !10}
!321 = distinct !{!321, !12}
!322 = distinct !{!322, !12}
!323 = distinct !{!323, !10}
!324 = !{!325}
!325 = distinct !{!325, !326}
!326 = distinct !{!326, !"LVerDomain"}
!327 = !{!328}
!328 = distinct !{!328, !326}
!329 = distinct !{!329, !10}
!330 = distinct !{!330, !12}
!331 = distinct !{!331, !12}
!332 = distinct !{!332, !10}
!333 = !{!334}
!334 = distinct !{!334, !335, !"_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_4pairIKDsSC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISS_EEEEEEDpOT_: argument 0"}
!335 = distinct !{!335, !"_ZNSt3__16__treeINS_12__value_typeIDsN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIDsSD_NS6_IDsEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_4pairIKDsSC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISS_EEEEEEDpOT_"}
!336 = !{!337}
!337 = distinct !{!337, !338, !"_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_4pairIKmSC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISS_EEEEEEDpOT_: argument 0"}
!338 = distinct !{!338, !"_ZNSt3__16__treeINS_12__value_typeImN4base8internal9flat_treeIlNS2_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEEEEENS_19__map_value_compareImSD_NS6_ImEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_4pairIKmSC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISS_EEEEEEDpOT_"}
!339 = !{!340}
!340 = distinct !{!340, !341, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_4pairIKlSC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISS_EEEEEEDpOT_: argument 0"}
!341 = distinct !{!341, !"_ZNSt3__16__treeINS_12__value_typeIlN4base8internal9flat_treeImNS2_8identityENS_4lessIvEENS_6vectorImNS_9allocatorImEEEEEEEENS_19__map_value_compareIlSD_NS6_IlEELb1EEENS9_ISD_EEE16__construct_nodeIJRKNS_4pairIKlSC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS9_ISS_EEEEEEDpOT_"}
!342 = distinct !{!342, !12}
!343 = !{!344}
!344 = distinct !{!344, !345, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_4pairIKlS2_EEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISO_EEEEEEDpOT_: argument 0"}
!345 = distinct !{!345, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_4pairIKlS2_EEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISO_EEEEEEDpOT_"}
!346 = distinct !{!346, !12}
!347 = !{!348}
!348 = distinct !{!348, !349, !"_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_4pairIKlS2_EEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISK_EEEEEEDpOT_: argument 0"}
!349 = distinct !{!349, !"_ZNSt3__16__treeINS_12__value_typeIl13RowWordStartsEENS_19__map_value_compareIlS3_NS_4lessIlEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_4pairIKlS2_EEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISK_EEEEEEDpOT_"}
!350 = !{!351}
!351 = distinct !{!351, !352}
!352 = distinct !{!352, !"LVerDomain"}
!353 = !{!354}
!354 = distinct !{!354, !352}
!355 = distinct !{!355, !10}
!356 = distinct !{!356, !12}
!357 = distinct !{!357, !12}
!358 = distinct !{!358, !10}
!359 = !{!360}
!360 = distinct !{!360, !361}
!361 = distinct !{!361, !"LVerDomain"}
!362 = !{!363}
!363 = distinct !{!363, !361}
!364 = distinct !{!364, !10}
!365 = distinct !{!365, !12}
!366 = distinct !{!366, !12}
!367 = distinct !{!367, !10}
!368 = !{!369}
!369 = distinct !{!369, !370}
!370 = distinct !{!370, !"LVerDomain"}
!371 = !{!372}
!372 = distinct !{!372, !370}
!373 = distinct !{!373, !10}
!374 = distinct !{!374, !12}
!375 = distinct !{!375, !10}
!376 = !{!377}
!377 = distinct !{!377, !378}
!378 = distinct !{!378, !"LVerDomain"}
!379 = !{!380}
!380 = distinct !{!380, !378}
!381 = distinct !{!381, !10}
!382 = distinct !{!382, !12}
!383 = distinct !{!383, !12}
!384 = distinct !{!384, !10}
!385 = distinct !{!385, !12}
!386 = !{!387}
!387 = distinct !{!387, !388}
!388 = distinct !{!388, !"LVerDomain"}
!389 = !{!390}
!390 = distinct !{!390, !388}
!391 = distinct !{!391, !10}
!392 = distinct !{!392, !12}
!393 = !{!394}
!394 = distinct !{!394, !395}
!395 = distinct !{!395, !"LVerDomain"}
!396 = !{!397}
!397 = distinct !{!397, !395}
!398 = distinct !{!398, !10}
!399 = distinct !{!399, !12}
!400 = distinct !{!400, !12}
!401 = distinct !{!401, !10}
!402 = distinct !{!402, !10}
!403 = !{!404}
!404 = distinct !{!404, !405}
!405 = distinct !{!405, !"LVerDomain"}
!406 = !{!407}
!407 = distinct !{!407, !405}
!408 = distinct !{!408, !10}
!409 = distinct !{!409, !12}
!410 = distinct !{!410, !12}
!411 = distinct !{!411, !10}
!412 = !{!413}
!413 = distinct !{!413, !414}
!414 = distinct !{!414, !"LVerDomain"}
!415 = !{!416}
!416 = distinct !{!416, !414}
!417 = distinct !{!417, !10}
!418 = distinct !{!418, !12}
!419 = distinct !{!419, !12}
!420 = distinct !{!420, !10}
!421 = distinct !{!421, !12}
!422 = !{!423}
!423 = distinct !{!423, !424}
!424 = distinct !{!424, !"LVerDomain"}
!425 = !{!426}
!426 = distinct !{!426, !424}
!427 = distinct !{!427, !10}
!428 = distinct !{!428, !12}
!429 = distinct !{!429, !12}
!430 = !{!431}
!431 = distinct !{!431, !432}
!432 = distinct !{!432, !"LVerDomain"}
!433 = !{!434}
!434 = distinct !{!434, !432}
!435 = distinct !{!435, !10}
!436 = distinct !{!436, !12}
!437 = distinct !{!437, !10}
!438 = !{!439}
!439 = distinct !{!439, !440}
!440 = distinct !{!440, !"LVerDomain"}
!441 = !{!442}
!442 = distinct !{!442, !440}
!443 = distinct !{!443, !10}
!444 = distinct !{!444, !12}
!445 = distinct !{!445, !10}
!446 = distinct !{!446, !10}
!447 = !{!448}
!448 = distinct !{!448, !449}
!449 = distinct !{!449, !"LVerDomain"}
!450 = !{!451}
!451 = distinct !{!451, !449}
!452 = distinct !{!452, !10}
!453 = distinct !{!453, !12}
!454 = distinct !{!454, !10}
!455 = distinct !{!455, !12}
!456 = !{!457}
!457 = distinct !{!457, !458}
!458 = distinct !{!458, !"LVerDomain"}
!459 = !{!460}
!460 = distinct !{!460, !458}
!461 = distinct !{!461, !10}
!462 = distinct !{!462, !10}
!463 = !{!464}
!464 = distinct !{!464, !465}
!465 = distinct !{!465, !"LVerDomain"}
!466 = !{!467}
!467 = distinct !{!467, !465}
!468 = distinct !{!468, !10}
!469 = distinct !{!469, !12}
!470 = distinct !{!470, !10}
!471 = !{!472}
!472 = distinct !{!472, !473, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKlEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_: argument 0"}
!473 = distinct !{!473, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIl19HistoryInfoMapValueEENS_22__unordered_map_hasherIlS3_NS_4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS3_S8_S6_Lb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKlEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_"}
!474 = !{!475}
!475 = distinct !{!475, !476}
!476 = distinct !{!476, !"LVerDomain"}
!477 = !{!478}
!478 = distinct !{!478, !476}
!479 = distinct !{!479, !10}
!480 = distinct !{!480, !12}
!481 = distinct !{!481, !12}
!482 = distinct !{!482, !10}
!483 = !{!484}
!484 = distinct !{!484, !485}
!485 = distinct !{!485, !"LVerDomain"}
!486 = !{!487}
!487 = distinct !{!487, !485}
!488 = distinct !{!488, !10}
!489 = distinct !{!489, !12}
!490 = distinct !{!490, !12}
!491 = distinct !{!491, !10}
!492 = !{!493}
!493 = distinct !{!493, !494}
!494 = distinct !{!494, !"LVerDomain"}
!495 = !{!496}
!496 = distinct !{!496, !494}
!497 = distinct !{!497, !10}
!498 = distinct !{!498, !12}
!499 = distinct !{!499, !12}
!500 = distinct !{!500, !10}
!501 = !{!502}
!502 = distinct !{!502, !503, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJNS_4pairIS7_mEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISL_EEEEEEDpOT_: argument 0"}
!503 = distinct !{!503, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJNS_4pairIS7_mEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISL_EEEEEEDpOT_"}
!504 = !{!505}
!505 = distinct !{!505, !506}
!506 = distinct !{!506, !"LVerDomain"}
!507 = !{!508}
!508 = distinct !{!508, !506}
!509 = distinct !{!509, !10}
!510 = distinct !{!510, !12}
!511 = distinct !{!511, !10}
!512 = distinct !{!512, !12}
!513 = !{!514}
!514 = distinct !{!514, !515}
!515 = distinct !{!515, !"LVerDomain"}
!516 = !{!517}
!517 = distinct !{!517, !515}
!518 = distinct !{!518, !10}
!519 = distinct !{!519, !12}
!520 = distinct !{!520, !12}
!521 = distinct !{!521, !10}
!522 = !{!523}
!523 = distinct !{!523, !524}
!524 = distinct !{!524, !"LVerDomain"}
!525 = !{!526}
!526 = distinct !{!526, !524}
!527 = distinct !{!527, !10}
!528 = distinct !{!528, !12}
!529 = distinct !{!529, !10}
!530 = distinct !{!530, !12}
!531 = !{!532}
!532 = distinct !{!532, !533}
!533 = distinct !{!533, !"LVerDomain"}
!534 = !{!535}
!535 = distinct !{!535, !533}
!536 = distinct !{!536, !10}
!537 = distinct !{!537, !12}
!538 = distinct !{!538, !12}
!539 = distinct !{!539, !10}
!540 = !{!541}
!541 = distinct !{!541, !542, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_: argument 0"}
!542 = distinct !{!542, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEmEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_"}
!543 = distinct !{!543, !12}
!544 = !{!545}
!545 = distinct !{!545, !546}
!546 = distinct !{!546, !"LVerDomain"}
!547 = !{!548}
!548 = distinct !{!548, !546}
!549 = distinct !{!549, !10}
!550 = distinct !{!550, !12}
!551 = !{!552}
!552 = distinct !{!552, !553}
!553 = distinct !{!553, !"LVerDomain"}
!554 = !{!555}
!555 = distinct !{!555, !553}
!556 = distinct !{!556, !10}
!557 = distinct !{!557, !12}
!558 = distinct !{!558, !12}
!559 = distinct !{!559, !10}
!560 = distinct !{!560, !10}
!561 = !{!562}
!562 = distinct !{!562, !563}
!563 = distinct !{!563, !"LVerDomain"}
!564 = !{!565}
!565 = distinct !{!565, !563}
!566 = distinct !{!566, !10}
!567 = distinct !{!567, !12}
!568 = distinct !{!568, !12}
!569 = distinct !{!569, !10}
!570 = !{!571}
!571 = distinct !{!571, !572}
!572 = distinct !{!572, !"LVerDomain"}
!573 = !{!574}
!574 = distinct !{!574, !572}
!575 = distinct !{!575, !10}
!576 = distinct !{!576, !12}
!577 = distinct !{!577, !12}
!578 = distinct !{!578, !10}
!579 = distinct !{!579, !12}
!580 = !{!581}
!581 = distinct !{!581, !582}
!582 = distinct !{!582, !"LVerDomain"}
!583 = !{!584}
!584 = distinct !{!584, !582}
!585 = distinct !{!585, !10}
!586 = distinct !{!586, !12}
!587 = distinct !{!587, !12}
!588 = !{!589}
!589 = distinct !{!589, !590}
!590 = distinct !{!590, !"LVerDomain"}
!591 = !{!592}
!592 = distinct !{!592, !590}
!593 = distinct !{!593, !10}
!594 = distinct !{!594, !12}
!595 = distinct !{!595, !10}
!596 = !{!597}
!597 = distinct !{!597, !598}
!598 = distinct !{!598, !"LVerDomain"}
!599 = !{!600}
!600 = distinct !{!600, !598}
!601 = distinct !{!601, !10}
!602 = distinct !{!602, !12}
!603 = distinct !{!603, !10}
!604 = distinct !{!604, !10}
!605 = !{!606}
!606 = distinct !{!606, !607}
!607 = distinct !{!607, !"LVerDomain"}
!608 = !{!609}
!609 = distinct !{!609, !607}
!610 = distinct !{!610, !10}
!611 = distinct !{!611, !12}
!612 = distinct !{!612, !10}
