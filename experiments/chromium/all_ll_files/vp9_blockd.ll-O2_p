; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/common/vp9_blockd.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/common/vp9_blockd.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%union.int_mv = type { i32 }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.buf_2d = type { i8*, i32 }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.TileInfo = type { i32, i32, i32, i32 }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_internal_error_info = type opaque

@num_4x4_blocks_wide_lookup = external local_unnamed_addr constant [13 x i8], align 1
@num_4x4_blocks_high_lookup = external local_unnamed_addr constant [13 x i8], align 1
@uv_txsize_lookup = external local_unnamed_addr constant [13 x [4 x [2 x [2 x i8]]]], align 16
@ss_size_lookup = external local_unnamed_addr constant [13 x [2 x [2 x i8]]], align 16

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @vp9_left_block_mode(%struct.MODE_INFO* nocapture readonly, %struct.MODE_INFO* readonly, i32) local_unnamed_addr #0 {
  %4 = and i32 %2, -3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %3
  %7 = icmp eq %struct.MODE_INFO* %1, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 8, i64 0
  %10 = load i8, i8* %9, align 4
  %11 = icmp slt i8 %10, 1
  br i1 %11, label %12, label %27

12:                                               ; preds = %8
  %13 = add nsw i32 %2, 1
  %14 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 0
  %15 = load i8, i8* %14, align 4
  %16 = icmp ult i8 %15, 3
  %17 = sext i32 %13 to i64
  %18 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 10, i64 %17, i32 0
  %19 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 1
  %20 = select i1 %16, i8* %18, i8* %19
  %21 = load i8, i8* %20, align 1
  br label %27

22:                                               ; preds = %3
  %23 = add nsw i32 %2, -1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %0, i64 0, i32 10, i64 %24, i32 0
  %26 = load i8, i8* %25, align 4
  br label %27

27:                                               ; preds = %6, %8, %22, %12
  %28 = phi i8 [ %21, %12 ], [ %26, %22 ], [ 0, %8 ], [ 0, %6 ]
  ret i8 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @vp9_above_block_mode(%struct.MODE_INFO* nocapture readonly, %struct.MODE_INFO* readonly, i32) local_unnamed_addr #0 {
  %4 = icmp ult i32 %2, 2
  br i1 %4, label %5, label %21

5:                                                ; preds = %3
  %6 = icmp eq %struct.MODE_INFO* %1, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 8, i64 0
  %9 = load i8, i8* %8, align 4
  %10 = icmp slt i8 %9, 1
  br i1 %10, label %11, label %26

11:                                               ; preds = %7
  %12 = add nuw nsw i32 %2, 2
  %13 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 0
  %14 = load i8, i8* %13, align 4
  %15 = icmp ult i8 %14, 3
  %16 = sext i32 %12 to i64
  %17 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 10, i64 %16, i32 0
  %18 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %1, i64 0, i32 1
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = load i8, i8* %19, align 1
  br label %26

21:                                               ; preds = %3
  %22 = add nsw i32 %2, -2
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %0, i64 0, i32 10, i64 %23, i32 0
  %25 = load i8, i8* %24, align 4
  br label %26

26:                                               ; preds = %5, %7, %21, %11
  %27 = phi i8 [ %20, %11 ], [ %25, %21 ], [ 0, %7 ], [ 0, %5 ]
  ret i8 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd* nocapture readonly, i8 zeroext, i32, void (i32, i32, i32, i32, i8, i8, i8*)* nocapture, i8*) local_unnamed_addr #1 {
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %8 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %7, align 8
  %9 = load %struct.MODE_INFO*, %struct.MODE_INFO** %8, align 8
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %9, i64 0, i32 0
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %9, i64 0, i32 2
  %16 = load i8, i8* %15, align 2
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 %6, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 %6, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [13 x [4 x [2 x [2 x i8]]]], [13 x [4 x [2 x [2 x i8]]]]* @uv_txsize_lookup, i64 0, i64 %14, i64 %17, i64 %20, i64 %23
  br label %33

25:                                               ; preds = %5
  %26 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %9, i64 0, i32 2
  %27 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 %6, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 %6, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %28 to i64
  %32 = sext i32 %30 to i64
  br label %33

33:                                               ; preds = %25, %11
  %34 = phi i64 [ %32, %25 ], [ %23, %11 ]
  %35 = phi i64 [ %31, %25 ], [ %20, %11 ]
  %36 = phi i32 [ %30, %25 ], [ %22, %11 ]
  %37 = phi i32 [ %28, %25 ], [ %19, %11 ]
  %38 = phi i8* [ %26, %25 ], [ %24, %11 ]
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %1 to i64
  %41 = getelementptr inbounds [13 x [2 x [2 x i8]]], [13 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %40, i64 %35, i64 %34
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_wide_lookup, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_high_lookup, i64 0, i64 %43
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = zext i8 %39 to i32
  %51 = shl nuw nsw i32 %50, 1
  %52 = shl i32 1, %51
  %53 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 13
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, -1
  %56 = add nsw i32 %37, 5
  %57 = ashr i32 %54, %56
  %58 = select i1 %55, i32 0, i32 %57
  %59 = add nsw i32 %58, %46
  %60 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 15
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, -1
  %63 = add nsw i32 %36, 5
  %64 = ashr i32 %61, %63
  %65 = select i1 %62, i32 0, i32 %64
  %66 = add nsw i32 %65, %49
  %67 = sub i32 0, %58
  %68 = ashr i32 %67, %50
  %69 = shl i32 %68, %51
  %70 = icmp sgt i32 %66, 0
  br i1 %70, label %71, label %88

71:                                               ; preds = %33
  %72 = icmp sgt i32 %59, 0
  %73 = shl i32 1, %50
  br label %74

74:                                               ; preds = %71, %83
  %75 = phi i32 [ 0, %71 ], [ %86, %83 ]
  %76 = phi i32 [ 0, %71 ], [ %85, %83 ]
  br i1 %72, label %77, label %83

77:                                               ; preds = %74, %77
  %78 = phi i32 [ %81, %77 ], [ 0, %74 ]
  %79 = phi i32 [ %80, %77 ], [ %76, %74 ]
  tail call void %3(i32 %2, i32 %79, i32 %75, i32 %78, i8 zeroext %42, i8 zeroext %39, i8* %4) #4
  %80 = add nsw i32 %79, %52
  %81 = add nsw i32 %78, %73
  %82 = icmp slt i32 %81, %59
  br i1 %82, label %77, label %83

83:                                               ; preds = %77, %74
  %84 = phi i32 [ %76, %74 ], [ %80, %77 ]
  %85 = add nsw i32 %84, %69
  %86 = add nsw i32 %75, %73
  %87 = icmp slt i32 %86, %66
  br i1 %87, label %74, label %88

88:                                               ; preds = %83, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_foreach_transformed_block(%struct.macroblockd* nocapture readonly, i8 zeroext, void (i32, i32, i32, i32, i8, i8, i8*)* nocapture, i8*) local_unnamed_addr #1 {
  tail call void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd* %0, i8 zeroext %1, i32 0, void (i32, i32, i32, i32, i8, i8, i8*)* %2, i8* %3)
  tail call void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd* %0, i8 zeroext %1, i32 1, void (i32, i32, i32, i32, i8, i8, i8*)* %2, i8* %3)
  tail call void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd* %0, i8 zeroext %1, i32 2, void (i32, i32, i32, i32, i8, i8, i8*)* %2, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_set_contexts(%struct.macroblockd* nocapture readonly, %struct.macroblockd_plane* nocapture readonly, i8 zeroext, i8 zeroext, i32, i32, i32) local_unnamed_addr #1 {
  %8 = getelementptr inbounds %struct.macroblockd_plane, %struct.macroblockd_plane* %1, i64 0, i32 5
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  %12 = getelementptr inbounds %struct.macroblockd_plane, %struct.macroblockd_plane* %1, i64 0, i32 6
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %6 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = zext i8 %3 to i32
  %17 = shl i32 1, %16
  %18 = icmp eq i32 %4, 0
  br i1 %18, label %61, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 13
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = trunc i32 %4 to i8
  %25 = sext i32 %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 %24, i64 %25, i1 false)
  br label %64

26:                                               ; preds = %19
  %27 = zext i8 %2 to i64
  %28 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_wide_lookup, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds %struct.macroblockd_plane, %struct.macroblockd_plane* %1, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = add nsw i32 %32, 5
  %34 = ashr i32 %21, %33
  %35 = add nsw i32 %34, %30
  %36 = add i32 %17, %5
  %37 = icmp sgt i32 %36, %35
  %38 = sub nsw i32 %35, %5
  %39 = select i1 %37, i32 %38, i32 %17
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %26
  %42 = trunc i32 %4 to i8
  %43 = icmp slt i32 %36, %35
  %44 = select i1 %43, i32 %36, i32 %35
  %45 = xor i32 %5, -1
  %46 = add i32 %44, %45
  %47 = zext i32 %46 to i64
  %48 = add nuw nsw i64 %47, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 %42, i64 %48, i1 false)
  br label %49

49:                                               ; preds = %41, %26
  %50 = icmp slt i32 %39, %17
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = sext i32 %39 to i64
  %53 = add nsw i64 %10, %52
  %54 = getelementptr i8, i8* %9, i64 %53
  %55 = icmp slt i32 %36, %35
  %56 = select i1 %55, i32 %36, i32 %35
  %57 = xor i32 %56, -1
  %58 = add i32 %36, %57
  %59 = zext i32 %58 to i64
  %60 = add nuw nsw i64 %59, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %54, i8 0, i64 %60, i1 false)
  br label %64

61:                                               ; preds = %7
  %62 = trunc i32 %4 to i8
  %63 = sext i32 %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 %62, i64 %63, i1 false)
  br label %103

64:                                               ; preds = %49, %51, %23
  %65 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 15
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %68, label %103

68:                                               ; preds = %64
  %69 = zext i8 %2 to i64
  %70 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_high_lookup, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds %struct.macroblockd_plane, %struct.macroblockd_plane* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = add nsw i32 %74, 5
  %76 = ashr i32 %66, %75
  %77 = add nsw i32 %76, %72
  %78 = add i32 %17, %6
  %79 = icmp sgt i32 %78, %77
  %80 = sub nsw i32 %77, %6
  %81 = select i1 %79, i32 %80, i32 %17
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %91

83:                                               ; preds = %68
  %84 = trunc i32 %4 to i8
  %85 = icmp slt i32 %78, %77
  %86 = select i1 %85, i32 %78, i32 %77
  %87 = xor i32 %6, -1
  %88 = add i32 %86, %87
  %89 = zext i32 %88 to i64
  %90 = add nuw nsw i64 %89, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 %84, i64 %90, i1 false)
  br label %91

91:                                               ; preds = %83, %68
  %92 = icmp slt i32 %81, %17
  br i1 %92, label %93, label %106

93:                                               ; preds = %91
  %94 = sext i32 %81 to i64
  %95 = add nsw i64 %14, %94
  %96 = getelementptr i8, i8* %13, i64 %95
  %97 = icmp slt i32 %78, %77
  %98 = select i1 %97, i32 %78, i32 %77
  %99 = xor i32 %98, -1
  %100 = add i32 %78, %99
  %101 = zext i32 %100 to i64
  %102 = add nuw nsw i64 %101, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %96, i8 0, i64 %102, i1 false)
  br label %106

103:                                              ; preds = %61, %64
  %104 = trunc i32 %4 to i8
  %105 = sext i32 %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 %104, i64 %105, i1 false)
  br label %106

106:                                              ; preds = %93, %91, %103
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @vp9_setup_block_planes(%struct.macroblockd* nocapture, i32, i32) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 1, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 1, i32 2
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 2, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 2, i32 2
  store i32 %2, i32* %9, align 4
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
