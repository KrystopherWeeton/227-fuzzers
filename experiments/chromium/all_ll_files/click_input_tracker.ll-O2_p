; ModuleID = '../../components/page_load_metrics/browser/observers/click_input_tracker.cc'
source_filename = "../../components/page_load_metrics/browser/observers/click_input_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.page_load_metrics::ClickInputTracker" = type { %"class.base::TimeDelta", i32, i32, i32, i32, %"class.base::TimeTicks", %"class.gfx::PointF" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.ukm::builders::ClickInput" = type { %"class.ukm::internal::UkmEntryBuilderBase" }
%"class.ukm::internal::UkmEntryBuilderBase" = type { i32 (...)**, %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.23" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::pair"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.16", [4 x i8] }>
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"class.ukm::UkmRecorder" = type { i32 (...)** }

@_ZN17page_load_metricsL18kClickInputTrackerE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0), i32 1 }, align 8
@.str = private unnamed_addr constant [24 x i8] c"time_delta_threshold_ms\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"position_delta_threshold\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"burst_count_threshold\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"PageLoad.Experimental.ClickInputBurst\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"ClickInputTracker\00", align 1
@_ZZN17page_load_metrics17ClickInputTracker16RecordClickBurstElE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN17page_load_metrics17ClickInputTrackerC1Ev = hidden unnamed_addr alias void (%"class.page_load_metrics::ClickInputTracker"*), void (%"class.page_load_metrics::ClickInputTracker"*)* @_ZN17page_load_metrics17ClickInputTrackerC2Ev
@_ZN17page_load_metrics17ClickInputTrackerD1Ev = hidden unnamed_addr alias void (%"class.page_load_metrics::ClickInputTracker"*), void (%"class.page_load_metrics::ClickInputTracker"*)* @_ZN17page_load_metrics17ClickInputTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17page_load_metrics17ClickInputTrackerC2Ev(%"class.page_load_metrics::ClickInputTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %9 = tail call i8* @_Znwm(i64 32) #9
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 23, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %9, i64 23
  store i8 0, i8* %13, align 1
  %14 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN17page_load_metricsL18kClickInputTrackerE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 500) #8
  %15 = sext i32 %14 to i64
  %16 = mul nsw i64 %15, 1000
  store i64 %16, i64* %5, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %1
  %22 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  %25 = call i8* @_Znwm(i64 32) #9
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %28, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 24, i1 false) #8
  %29 = getelementptr inbounds i8, i8* %25, i64 24
  store i8 0, i8* %29, align 1
  %30 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN17page_load_metricsL18kClickInputTrackerE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 10) #8
  %31 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 1
  store i32 %30, i32* %31, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %23, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 21, i8* %41, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21, i1 false) #8
  %42 = getelementptr inbounds i8, i8* %39, i64 21
  store i8 0, i8* %42, align 1
  %43 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN17page_load_metricsL18kClickInputTrackerE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 3) #8
  %44 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 2
  store i32 %43, i32* %44, align 4
  %45 = load i8, i8* %41, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %38, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17page_load_metrics17ClickInputTrackerD2Ev(%"class.page_load_metrics::ClickInputTracker"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17page_load_metrics17ClickInputTracker11OnUserInputERKN5blink13WebInputEventE(%"class.page_load_metrics::ClickInputTracker"* nocapture, %"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN17page_load_metricsL18kClickInputTrackerE) #8
  br i1 %3, label %4, label %66

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %66 [
    i32 21, label %7
    i32 1, label %10
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 2, i32 2, i32 1
  %9 = bitcast float* %8 to %"class.gfx::PointF"*
  br label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 2, i32 2
  %12 = bitcast %"class.gfx::Vector2dF"* %11 to %"class.gfx::PointF"*
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi %"class.gfx::PointF"* [ %9, %7 ], [ %12, %10 ]
  %15 = bitcast %"class.gfx::PointF"* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %14, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %57, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = sub nsw i64 %25, %21
  %27 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %26, %28
  br i1 %29, label %30, label %55

30:                                               ; preds = %23
  %31 = bitcast i32 %16 to float
  %32 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 6, i32 0
  %33 = load float, float* %32, align 4
  %34 = fsub float %31, %33
  %35 = tail call float @llvm.fabs.f32(float %34) #8
  %36 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sitofp i32 %37 to float
  %39 = fcmp olt float %35, %38
  br i1 %39, label %40, label %55

40:                                               ; preds = %30
  %41 = bitcast i32 %19 to float
  %42 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 6, i32 1
  %43 = load float, float* %42, align 4
  %44 = fsub float %41, %43
  %45 = tail call float @llvm.fabs.f32(float %44) #8
  %46 = fcmp olt float %45, %38
  br i1 %46, label %47, label %55

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 8
  %51 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %49
  %54 = select i1 %53, i32 %52, i32 %50
  store i32 %54, i32* %51, align 4
  br label %59

55:                                               ; preds = %40, %30, %23
  %56 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 3
  store i32 1, i32* %56, align 8
  br label %59

57:                                               ; preds = %13
  %58 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 3
  store i32 1, i32* %58, align 8
  br label %59

59:                                               ; preds = %57, %55, %47
  %60 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %20, align 8
  %62 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 6
  %63 = bitcast %"class.gfx::PointF"* %62 to i32*
  store i32 %16, i32* %63, align 8
  %64 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 6, i32 1
  %65 = bitcast float* %64 to i32*
  store i32 %19, i32* %65, align 4
  br label %66

66:                                               ; preds = %4, %2, %59
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17page_load_metrics17ClickInputTracker16RecordClickBurstEl(%"class.page_load_metrics::ClickInputTracker"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.ukm::builders::ClickInput", align 8
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN17page_load_metricsL18kClickInputTrackerE) #8
  br i1 %4, label %5, label %33

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.page_load_metrics::ClickInputTracker", %"class.page_load_metrics::ClickInputTracker"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %33, label %11

11:                                               ; preds = %5
  %12 = load atomic i64, i64* @_ZZN17page_load_metrics17ClickInputTracker16RecordClickBurstElE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %13 = inttoptr i64 %12 to %"class.base::HistogramBase"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #8
  %17 = ptrtoint %"class.base::HistogramBase"* %16 to i64
  store atomic i64 %17, i64* @_ZZN17page_load_metrics17ClickInputTracker16RecordClickBurstElE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi %"class.base::HistogramBase"* [ %13, %11 ], [ %16, %15 ]
  %20 = load i32, i32* %6, align 4
  %21 = bitcast %"class.base::HistogramBase"* %19 to void (%"class.base::HistogramBase"*, i32)***
  %22 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %22, i64 6
  %24 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %23, align 8
  tail call void %24(%"class.base::HistogramBase"* %19, i32 %20) #8
  %25 = bitcast %"class.ukm::builders::ClickInput"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  call void @_ZN3ukm8builders10ClickInputC1El(%"class.ukm::builders::ClickInput"* nonnull %3, i64 %1) #8
  %26 = load i32, i32* %6, align 4
  %27 = icmp slt i32 %26, 50
  %28 = select i1 %27, i32 %26, i32 50
  %29 = sext i32 %28 to i64
  %30 = call dereferenceable(16) %"class.ukm::builders::ClickInput"* @_ZN3ukm8builders10ClickInput31SetExperimental_ClickInputBurstEl(%"class.ukm::builders::ClickInput"* nonnull %3, i64 %29) #8
  %31 = getelementptr inbounds %"class.ukm::builders::ClickInput", %"class.ukm::builders::ClickInput"* %30, i64 0, i32 0
  %32 = call %"class.ukm::UkmRecorder"* @_ZN3ukm11UkmRecorder3GetEv() #8
  call void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"* %31, %"class.ukm::UkmRecorder"* %32) #8
  call void @_ZN3ukm8builders10ClickInputD1Ev(%"class.ukm::builders::ClickInput"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  br label %33

33:                                               ; preds = %5, %2, %18
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN3ukm8builders10ClickInputC1El(%"class.ukm::builders::ClickInput"*, i64) unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::ClickInput"* @_ZN3ukm8builders10ClickInput31SetExperimental_ClickInputBurstEl(%"class.ukm::builders::ClickInput"*, i64) local_unnamed_addr #2

declare void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #2

declare %"class.ukm::UkmRecorder"* @_ZN3ukm11UkmRecorder3GetEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3ukm8builders10ClickInputD1Ev(%"class.ukm::builders::ClickInput"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
