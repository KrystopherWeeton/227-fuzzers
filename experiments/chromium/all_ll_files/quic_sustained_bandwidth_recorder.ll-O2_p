; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_sustained_bandwidth_recorder.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_sustained_bandwidth_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicWallTime" = type { i64 }

@_ZN4quic30QuicSustainedBandwidthRecorderC1Ev = hidden unnamed_addr alias void (%"class.quic::QuicSustainedBandwidthRecorder"*), void (%"class.quic::QuicSustainedBandwidthRecorder"*)* @_ZN4quic30QuicSustainedBandwidthRecorderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic30QuicSustainedBandwidthRecorderC2Ev(%"class.quic::QuicSustainedBandwidthRecorder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 3, i32 0
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QuicSustainedBandwidthRecorder14RecordEstimateEbbNS_13QuicBandwidthENS_8QuicTimeENS_12QuicWallTimeENS2_5DeltaE(%"class.quic::QuicSustainedBandwidthRecorder"* nocapture, i1 zeroext, i1 zeroext, i64, i64, i64, i64) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.quic::QuicWallTime", align 8
  %9 = getelementptr inbounds %"class.quic::QuicWallTime", %"class.quic::QuicWallTime"* %8, i64 0, i32 0
  store i64 %5, i64* %9, align 8
  %10 = zext i1 %2 to i8
  %11 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 1
  br i1 %1, label %12, label %13

12:                                               ; preds = %7
  store i8 0, i8* %11, align 1
  br label %34

13:                                               ; preds = %7
  %14 = load i8, i8* %11, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 6, i32 0
  br i1 %15, label %17, label %18

17:                                               ; preds = %13
  store i64 %4, i64* %16, align 8
  store i8 1, i8* %11, align 1
  br label %34

18:                                               ; preds = %13
  %19 = load i64, i64* %16, align 8
  %20 = sub nsw i64 %4, %19
  %21 = mul nsw i64 %6, 3
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 0
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 2
  store i8 %10, i8* %25, align 2
  %26 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 3, i32 0
  store i64 %3, i64* %26, align 8
  br label %27

27:                                               ; preds = %18, %23
  %28 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 4, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %29, %3
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  store i64 %3, i64* %28, align 8
  %32 = call i64 @_ZNK4quic12QuicWallTime13ToUNIXSecondsEv(%"class.quic::QuicWallTime"* nonnull %8) #4
  %33 = getelementptr inbounds %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicSustainedBandwidthRecorder"* %0, i64 0, i32 5
  store i64 %32, i64* %33, align 8
  br label %34

34:                                               ; preds = %12, %17, %31, %27
  ret void
}

declare i64 @_ZNK4quic12QuicWallTime13ToUNIXSecondsEv(%"class.quic::QuicWallTime"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
