; ModuleID = '../../sandbox/policy/linux/bpf_print_backend_policy_linux.cc'
source_filename = "../../sandbox/policy/linux/bpf_print_backend_policy_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.sandbox::policy::PrintBackendProcessPolicy" = type { %"class.sandbox::policy::NetworkProcessPolicy" }
%"class.sandbox::policy::NetworkProcessPolicy" = type { %"class.sandbox::policy::BPFBasePolicy" }
%"class.sandbox::policy::BPFBasePolicy" = type { %"class.sandbox::bpf_dsl::Policy", %"class.std::__1::unique_ptr" }
%"class.sandbox::bpf_dsl::Policy" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sandbox::BaselinePolicy"* }
%"class.sandbox::BaselinePolicy" = type { %"class.sandbox::bpf_dsl::Policy", i32, i32 }
%"class.sandbox::bpf_dsl::internal::ResultExprImpl" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }

@_ZTVN7sandbox6policy25PrintBackendProcessPolicyE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sandbox::policy::PrintBackendProcessPolicy"*)* @_ZN7sandbox6policy25PrintBackendProcessPolicyD2Ev to i8*), i8* bitcast (void (%"class.sandbox::policy::PrintBackendProcessPolicy"*)* @_ZN7sandbox6policy25PrintBackendProcessPolicyD0Ev to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::NetworkProcessPolicy"*, i32)* @_ZNK7sandbox6policy20NetworkProcessPolicy15EvaluateSyscallEi to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::BPFBasePolicy"*)* @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv to i8*)] }, align 8

@_ZN7sandbox6policy25PrintBackendProcessPolicyC1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::PrintBackendProcessPolicy"*), void (%"class.sandbox::policy::PrintBackendProcessPolicy"*)* @_ZN7sandbox6policy25PrintBackendProcessPolicyC2Ev
@_ZN7sandbox6policy25PrintBackendProcessPolicyD1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::PrintBackendProcessPolicy"*), void (%"class.sandbox::policy::PrintBackendProcessPolicy"*)* @_ZN7sandbox6policy25PrintBackendProcessPolicyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy25PrintBackendProcessPolicyC2Ev(%"class.sandbox::policy::PrintBackendProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::PrintBackendProcessPolicy", %"class.sandbox::policy::PrintBackendProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy20NetworkProcessPolicyC2Ev(%"class.sandbox::policy::NetworkProcessPolicy"* %2) #4
  %3 = getelementptr inbounds %"class.sandbox::policy::PrintBackendProcessPolicy", %"class.sandbox::policy::PrintBackendProcessPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7sandbox6policy25PrintBackendProcessPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN7sandbox6policy20NetworkProcessPolicyC2Ev(%"class.sandbox::policy::NetworkProcessPolicy"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7sandbox6policy20NetworkProcessPolicyD2Ev(%"class.sandbox::policy::NetworkProcessPolicy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy25PrintBackendProcessPolicyD2Ev(%"class.sandbox::policy::PrintBackendProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::PrintBackendProcessPolicy", %"class.sandbox::policy::PrintBackendProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy20NetworkProcessPolicyD2Ev(%"class.sandbox::policy::NetworkProcessPolicy"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy25PrintBackendProcessPolicyD0Ev(%"class.sandbox::policy::PrintBackendProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::PrintBackendProcessPolicy", %"class.sandbox::policy::PrintBackendProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy20NetworkProcessPolicyD2Ev(%"class.sandbox::policy::NetworkProcessPolicy"* %2) #4
  %3 = bitcast %"class.sandbox::policy::PrintBackendProcessPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy20NetworkProcessPolicy15EvaluateSyscallEi(%"class.sandbox::policy::NetworkProcessPolicy"*, i32) unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
