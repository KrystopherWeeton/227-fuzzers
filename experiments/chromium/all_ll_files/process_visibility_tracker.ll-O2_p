; ModuleID = '../../content/common/process_visibility_tracker.cc'
source_filename = "../../content/common/process_visibility_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [72 x i8] }
%"class.content::ProcessVisibilityTracker" = type { %"class.absl::optional", [6 x i8], %"class.base::ObserverList", %"class.std::__1::unique_ptr" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.power_scheduler::PowerModeArbiter" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver", %"class.power_scheduler::PowerModeVoter::Delegate", %"class.std::__1::unique_ptr.10", %"class.base::Lock", %class.scoped_refptr.16, %"class.std::__1::map", %"class.std::__1::map.26", %"class.base::TimeTicks", %"class.power_scheduler::TracedPowerMode", i32, %class.scoped_refptr.35, i8, %"class.std::__1::unique_ptr.36" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.power_scheduler::PowerModeArbiter::Observer"* }
%"class.power_scheduler::PowerModeArbiter::Observer" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.16 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.power_scheduler::TracedPowerMode" = type <{ i8*, i8*, i32, [4 x i8] }>
%class.scoped_refptr.35 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.power_scheduler::PowerModeArbiter::ChargingPowerModeVoter"* }
%"class.power_scheduler::PowerModeArbiter::ChargingPowerModeVoter" = type opaque
%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.54 }
%union.anon.54 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_ = comdat any

$_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_ = comdat any

$_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_ = comdat any

@_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance = internal global i64 0, align 8
@.str = private unnamed_addr constant [26 x i8] c"PowerModeVoter.Visibility\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1

@_ZN7content24ProcessVisibilityTrackerC1Ev = hidden unnamed_addr alias void (%"class.content::ProcessVisibilityTracker"*), void (%"class.content::ProcessVisibilityTracker"*)* @_ZN7content24ProcessVisibilityTrackerC2Ev
@_ZN7content24ProcessVisibilityTrackerD1Ev = hidden unnamed_addr alias void (%"class.content::ProcessVisibilityTracker"*), void (%"class.content::ProcessVisibilityTracker"*)* @_ZN7content24ProcessVisibilityTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::ProcessVisibilityTracker"* @_ZN7content24ProcessVisibilityTracker11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 8), i8 0, i64 24, i1 false) #11
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 32) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 32) to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 32) to %"class.base::internal::LinkNodeBase"*)) #11
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 48) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 56) to i32*), align 8
  %7 = tail call %"class.power_scheduler::PowerModeArbiter"* @_ZN15power_scheduler16PowerModeArbiter11GetInstanceEv() #11
  %8 = tail call %"class.power_scheduler::PowerModeVoter"* @_ZN15power_scheduler16PowerModeArbiter8NewVoterEPKc(%"class.power_scheduler::PowerModeArbiter"* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #11
  store %"class.power_scheduler::PowerModeVoter"* %8, %"class.power_scheduler::PowerModeVoter"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance, i64 0, i32 0, i64 64) to %"class.power_scheduler::PowerModeVoter"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance) #11
  br label %9

9:                                                ; preds = %3, %6, %0
  ret %"class.content::ProcessVisibilityTracker"* bitcast (%"class.base::NoDestructor"* @_ZZN7content24ProcessVisibilityTracker11GetInstanceEvE8instance to %"class.content::ProcessVisibilityTracker"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ProcessVisibilityTrackerC2Ev(%"class.content::ProcessVisibilityTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2
  %4 = bitcast %"class.base::ObserverList"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %5, %"class.base::internal::LinkNodeBase"* %5, %"class.base::internal::LinkNodeBase"* %5) #11
  %6 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %7, align 8
  %8 = tail call %"class.power_scheduler::PowerModeArbiter"* @_ZN15power_scheduler16PowerModeArbiter11GetInstanceEv() #11
  %9 = tail call %"class.power_scheduler::PowerModeVoter"* @_ZN15power_scheduler16PowerModeArbiter8NewVoterEPKc(%"class.power_scheduler::PowerModeArbiter"* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #11
  %10 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.power_scheduler::PowerModeVoter"* %9, %"class.power_scheduler::PowerModeVoter"** %10, align 8
  ret void
}

declare %"class.power_scheduler::PowerModeArbiter"* @_ZN15power_scheduler16PowerModeArbiter11GetInstanceEv() local_unnamed_addr #2

declare %"class.power_scheduler::PowerModeVoter"* @_ZN15power_scheduler16PowerModeArbiter8NewVoterEPKc(%"class.power_scheduler::PowerModeArbiter"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ProcessVisibilityTrackerD2Ev(%"class.content::ProcessVisibilityTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.power_scheduler::PowerModeVoter"*, %"class.power_scheduler::PowerModeVoter"** %2, align 8
  store %"class.power_scheduler::PowerModeVoter"* null, %"class.power_scheduler::PowerModeVoter"** %2, align 8
  %4 = icmp eq %"class.power_scheduler::PowerModeVoter"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN15power_scheduler14PowerModeVoterD1Ev(%"class.power_scheduler::PowerModeVoter"* nonnull %3) #11
  %6 = bitcast %"class.power_scheduler::PowerModeVoter"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"class.base::internal::LinkNodeBase"** %9 to %"class.base::LinkNode"**
  %11 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 1, i32 0
  %12 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %10, align 8
  %13 = icmp eq %"class.base::LinkNode"* %12, %11
  br i1 %13, label %26, label %14

14:                                               ; preds = %7, %23
  %15 = phi %"class.base::LinkNode"* [ %24, %23 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %15, i64 1
  %17 = bitcast %"class.base::LinkNode"* %16 to %"class.base::ObserverList"**
  %18 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %19 = icmp eq %"class.base::ObserverList"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %17, align 8
  %21 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %15, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %21) #11
  %22 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %10, align 8
  br label %23

23:                                               ; preds = %20, %14
  %24 = phi %"class.base::LinkNode"* [ %15, %14 ], [ %22, %20 ]
  %25 = icmp eq %"class.base::LinkNode"* %24, %11
  br i1 %25, label %26, label %14

26:                                               ; preds = %23, %7
  %27 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %27, align 8
  %29 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %28, null
  br i1 %29, label %44, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.base::internal::CheckedObserverAdapter"* %28 to i8*
  %32 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %32, align 8
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %33, %28
  br i1 %34, label %42, label %35

35:                                               ; preds = %30, %35
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %35 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %37) #11
  %38 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %37, %28
  br i1 %38, label %39, label %35

39:                                               ; preds = %35
  %40 = bitcast %"class.base::ObserverList"* %8 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi i8* [ %41, %39 ], [ %31, %30 ]
  store %"class.base::internal::CheckedObserverAdapter"* %28, %"class.base::internal::CheckedObserverAdapter"** %32, align 8
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %26, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ProcessVisibilityTracker11AddObserverEPNS0_25ProcessVisibilityObserverE(%"class.content::ProcessVisibilityTracker"*, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2
  tail call void @_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_(%"class.base::ObserverList"* %3, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1)
  %4 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1, !range !3
  %10 = icmp ne i8 %9, 0
  %11 = bitcast %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1 to void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)***
  %12 = load void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)**, void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)*, void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)** %12, i64 2
  %14 = load void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)*, void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)** %13, align 8
  tail call void %14(%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1, i1 zeroext %10) #11
  br label %15

15:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_(%"class.base::ObserverList"*, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::CheckedObserverAdapter", align 8
  %4 = icmp eq %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %7, %9
  %11 = getelementptr inbounds %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver", %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1, i64 0, i32 0
  br i1 %10, label %28, label %12

12:                                               ; preds = %5, %21
  %13 = phi %"class.base::internal::CheckedObserverAdapter"* [ %22, %21 ], [ %7, %5 ]
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #11
  %16 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.base::CheckedObserver"**
  %18 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %17, align 8
  %19 = select i1 %15, %"class.base::CheckedObserver"* %18, %"class.base::CheckedObserver"* null
  %20 = icmp eq %"class.base::CheckedObserver"* %19, %11
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 1
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %22, %9
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %21
  %25 = phi %"class.base::internal::CheckedObserverAdapter"* [ %9, %21 ], [ %13, %12 ]
  %26 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %27 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %25, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %24, %5, %2
  %29 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = bitcast %"class.base::internal::CheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver", %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1, i64 0, i32 0
  call void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"* nonnull %3, %"class.base::CheckedObserver"* %33) #11
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %34, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = icmp ult %"class.base::internal::CheckedObserverAdapter"* %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %28
  call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %35, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #11
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %35, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::CheckedObserverAdapter"** %34 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* %44, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #11
  br label %45

45:                                               ; preds = %39, %43
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #11
  br label %46

46:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ProcessVisibilityTracker14RemoveObserverEPNS0_25ProcessVisibilityObserverE(%"class.content::ProcessVisibilityTracker"*, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2
  tail call void @_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_(%"class.base::ObserverList"* %3, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_(%"class.base::ObserverList"*, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %6, %8
  %10 = getelementptr inbounds %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver", %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %1, i64 0, i32 0
  br i1 %9, label %97, label %11

11:                                               ; preds = %2, %20
  %12 = phi %"class.base::internal::CheckedObserverAdapter"* [ %21, %20 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #11
  %15 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.base::CheckedObserver"**
  %17 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %16, align 8
  %18 = select i1 %14, %"class.base::CheckedObserver"* %17, %"class.base::CheckedObserver"* null
  %19 = icmp eq %"class.base::CheckedObserver"* %18, %10
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 1
  %22 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %21, %8
  br i1 %22, label %23, label %11

23:                                               ; preds = %11, %20
  %24 = phi %"class.base::internal::CheckedObserverAdapter"* [ %8, %20 ], [ %12, %11 ]
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %97, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %32) #11
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #11
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %37

37:                                               ; preds = %27, %31, %34
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #11
  %40 = bitcast i64* %28 to %"class.base::CheckedObserver"**
  %41 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %40, align 8
  %42 = icmp eq %"class.base::CheckedObserver"* %41, null
  %43 = xor i1 %39, true
  %44 = or i1 %42, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %45, %37
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::LinkNodeBase"** %50 to %"class.base::LinkNode"**
  %52 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %54 = icmp eq %"class.base::LinkNode"* %52, %53
  br i1 %54, label %55, label %78

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 1
  %57 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %58 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %56, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %59 ], [ %24, %55 ]
  %61 = phi %"class.base::internal::CheckedObserverAdapter"* [ %63, %59 ], [ %56, %55 ]
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %60, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %61) #11
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %60, i64 1
  %65 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %63, %57
  br i1 %65, label %66, label %59

66:                                               ; preds = %59
  %67 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %64
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %55
  %70 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %24, %55 ]
  %71 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %66 ], [ %56, %55 ]
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi %"class.base::internal::CheckedObserverAdapter"* [ %74, %72 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %73, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %74) #11
  %75 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %74, %70
  br i1 %75, label %76, label %72

76:                                               ; preds = %72, %66
  %77 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %70, %72 ]
  store %"class.base::internal::CheckedObserverAdapter"* %77, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  br label %97

78:                                               ; preds = %49
  %79 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #11
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %81, align 8
  %84 = bitcast %"class.base::internal::CheckedObserverAdapter"* %24 to i64*
  %85 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.base::internal::WeakReference::Flag"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %86) #11
  %93 = bitcast %"class.base::internal::WeakReference::Flag"* %86 to i8*
  call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %78, %88, %92
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %28, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #11
  br label %97

97:                                               ; preds = %2, %76, %94, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ProcessVisibilityTracker26OnProcessVisibilityChangedEb(%"class.content::ProcessVisibilityTracker"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  %10 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, %9
  br i1 %12, label %181, label %13

13:                                               ; preds = %8, %2
  %14 = bitcast %"class.content::ProcessVisibilityTracker"* %0 to i16*
  %15 = zext i1 %1 to i16
  %16 = shl nuw nsw i16 %15, 8
  %17 = or i16 %16, 1
  store i16 %17, i16* %14, align 8
  %18 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.power_scheduler::PowerModeVoter"*, %"class.power_scheduler::PowerModeVoter"** %18, align 8
  %20 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = select i1 %1, i32 0, i32 10
  tail call void @_ZN15power_scheduler14PowerModeVoter7VoteForENS_9PowerModeE(%"class.power_scheduler::PowerModeVoter"* %19, i32 %21) #11
  %22 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2
  %23 = bitcast %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %27 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false)
  %29 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %27, align 8, !noalias !4
  %30 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %31 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %30, align 8, !noalias !4
  %32 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %29, %31
  %33 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %33) #11
  br i1 %32, label %34, label %36

34:                                               ; preds = %13
  %35 = bitcast %"class.base::ObserverList"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #11, !alias.scope !4
  br label %50

36:                                               ; preds = %13
  store %"class.base::ObserverList"* %22, %"class.base::ObserverList"** %24, align 8, !alias.scope !4
  %37 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %33, %"class.base::internal::LinkNodeBase"* %37) #11
  store i64 0, i64* %25, align 8, !alias.scope !4
  %38 = getelementptr inbounds %"class.content::ProcessVisibilityTracker", %"class.content::ProcessVisibilityTracker"* %0, i64 0, i32 2, i32 3
  %39 = load i32, i32* %38, align 8, !noalias !4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::internal::CheckedObserverAdapter"** %30 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !4
  %44 = bitcast %"class.base::ObserverList"* %22 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !4
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 4
  br label %48

48:                                               ; preds = %41, %36
  %49 = phi i64 [ %47, %41 ], [ -1, %36 ]
  store i64 %49, i64* %26, align 8, !alias.scope !4
  call void @_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #11
  br label %50

50:                                               ; preds = %34, %48
  %51 = bitcast %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %54 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %55 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %55) #11
  %57 = bitcast %"class.base::ObserverList"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #11, !alias.scope !7
  br label %58

58:                                               ; preds = %177, %50
  %59 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %60 = icmp eq %"class.base::ObserverList"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %58
  %62 = load i64, i64* %25, align 8
  %63 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %59, i64 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.base::internal::CheckedObserverAdapter"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::ObserverList"* %59 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %65, %67
  %69 = ashr exact i64 %68, 4
  %70 = load i64, i64* %26, align 8
  %71 = icmp ult i64 %69, %70
  %72 = select i1 %71, i64 %69, i64 %70
  %73 = icmp eq i64 %62, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %61
  %75 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %52, align 8
  br label %92

76:                                               ; preds = %61, %58
  %77 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %52, align 8
  %78 = icmp eq %"class.base::ObserverList"* %77, null
  br i1 %78, label %127, label %79

79:                                               ; preds = %76
  %80 = load i64, i64* %53, align 8
  %81 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %77, i64 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.base::internal::CheckedObserverAdapter"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::ObserverList"* %77 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 4
  %88 = load i64, i64* %54, align 8
  %89 = icmp ult i64 %87, %88
  %90 = select i1 %89, i64 %87, i64 %88
  %91 = icmp eq i64 %80, %90
  br i1 %91, label %101, label %92

92:                                               ; preds = %79, %74
  %93 = phi %"class.base::ObserverList"* [ %75, %74 ], [ %77, %79 ]
  %94 = icmp eq %"class.base::ObserverList"* %59, %93
  %95 = load i64, i64* %25, align 8
  %96 = load i64, i64* %53, align 8
  %97 = icmp eq i64 %95, %96
  %98 = and i1 %94, %97
  br i1 %98, label %99, label %156

99:                                               ; preds = %92
  %100 = icmp eq %"class.base::ObserverList"* %59, null
  br i1 %100, label %127, label %101

101:                                              ; preds = %79, %99
  %102 = phi %"class.base::ObserverList"* [ %59, %99 ], [ %77, %79 ]
  %103 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 1
  %104 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 1, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::LinkNodeBase"** %104 to %"class.base::LinkNode"**
  %106 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %105, align 8
  %107 = bitcast %"class.base::LinkedList"* %103 to %"class.base::LinkNode"**
  %108 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %107, align 8
  %109 = icmp eq %"class.base::LinkNode"* %106, %108
  br i1 %109, label %110, label %123

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %111, align 8
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %102, i64 0, i32 0, i32 0, i32 1
  %114 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %113, align 8
  %115 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %112, %"class.base::internal::CheckedObserverAdapter"* %114) #11
  %116 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %113, align 8
  %117 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %115, %116
  br i1 %117, label %123, label %118

118:                                              ; preds = %110, %118
  %119 = phi %"class.base::internal::CheckedObserverAdapter"* [ %120, %118 ], [ %116, %110 ]
  %120 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %119, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %120) #11
  %121 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %120, %115
  br i1 %121, label %122, label %118

122:                                              ; preds = %118
  store %"class.base::internal::CheckedObserverAdapter"* %115, %"class.base::internal::CheckedObserverAdapter"** %113, align 8
  br label %123

123:                                              ; preds = %122, %110, %101
  %124 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %52, align 8
  %125 = icmp eq %"class.base::ObserverList"* %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %52, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %55) #11
  br label %127

127:                                              ; preds = %76, %99, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #11
  %128 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %129 = icmp eq %"class.base::ObserverList"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 1
  %132 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 1, i32 0, i32 0, i32 1
  %133 = bitcast %"class.base::internal::LinkNodeBase"** %132 to %"class.base::LinkNode"**
  %134 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %133, align 8
  %135 = bitcast %"class.base::LinkedList"* %131 to %"class.base::LinkNode"**
  %136 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %135, align 8
  %137 = icmp eq %"class.base::LinkNode"* %134, %136
  br i1 %137, label %138, label %151

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %139, align 8
  %141 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 0, i32 0, i32 1
  %142 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %141, align 8
  %143 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %140, %"class.base::internal::CheckedObserverAdapter"* %142) #11
  %144 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %141, align 8
  %145 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %143, %144
  br i1 %145, label %151, label %146

146:                                              ; preds = %138, %146
  %147 = phi %"class.base::internal::CheckedObserverAdapter"* [ %148, %146 ], [ %144, %138 ]
  %148 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %147, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %148) #11
  %149 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %148, %143
  br i1 %149, label %150, label %146

150:                                              ; preds = %146
  store %"class.base::internal::CheckedObserverAdapter"* %143, %"class.base::internal::CheckedObserverAdapter"** %141, align 8
  br label %151

151:                                              ; preds = %150, %138, %130
  %152 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %153 = icmp eq %"class.base::ObserverList"* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %24, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %33) #11
  br label %155

155:                                              ; preds = %127, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #11
  br label %181

156:                                              ; preds = %92
  %157 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %59, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %157, align 8
  %159 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %158, i64 %95, i32 0, i32 0, i32 0
  %160 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %159) #11
  %161 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %158, i64 %95, i32 0, i32 0, i32 1
  %162 = bitcast i64* %161 to %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"**
  %163 = load %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"** %162, align 8
  %164 = select i1 %160, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %163, %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* null
  %165 = load i8, i8* %5, align 1, !range !3
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %167, label %168, !prof !10

167:                                              ; preds = %156
  call void @llvm.trap() #11
  unreachable

168:                                              ; preds = %156
  %169 = load i8, i8* %20, align 1, !range !3
  %170 = icmp ne i8 %169, 0
  %171 = bitcast %"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %164 to void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)***
  %172 = load void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)**, void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)*, void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)** %172, i64 2
  %174 = load void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)*, void (%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"*, i1)** %173, align 8
  call void %174(%"class.content::ProcessVisibilityTracker::ProcessVisibilityObserver"* %164, i1 zeroext %170) #11
  %175 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %176 = icmp eq %"class.base::ObserverList"* %175, null
  br i1 %176, label %177, label %178

177:                                              ; preds = %168, %178
  br label %58

178:                                              ; preds = %168
  %179 = load i64, i64* %25, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %25, align 8
  call void @_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #11
  br label %177

181:                                              ; preds = %8, %155
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN15power_scheduler14PowerModeVoter7VoteForENS_9PowerModeE(%"class.power_scheduler::PowerModeVoter"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN15power_scheduler14PowerModeVoterD1Ev(%"class.power_scheduler::PowerModeVoter"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #4

declare void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::CheckedObserverAdapter"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedObserverAdapter"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %38 to i64
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %1) #11
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8
  %44 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  %45 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::CheckedObserverAdapter"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::CheckedObserverAdapter"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %50, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %51, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %52) #11
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::CheckedObserverAdapter"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::CheckedObserverAdapter"*
  %63 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %65, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %66) #11
  %67 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::ProcessVisibilityTracker::ProcessVisibilityObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #11
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #11
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #11
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #11
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #11
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #11
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #11
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #11
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #11
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base12ObserverListIN7content24ProcessVisibilityTracker25ProcessVisibilityObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!10 = !{!"branch_weights", i32 1, i32 2000}
