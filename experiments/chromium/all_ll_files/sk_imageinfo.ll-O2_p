; ModuleID = '../../third_party/skia/src/c/sk_imageinfo.cpp'
source_filename = "../../third_party/skia/src/c/sk_imageinfo.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon = type { i32, i32 }
%struct.anon.6 = type { i32, i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%struct.sk_imageinfo_t = type opaque
%struct.sk_colorspace_t = type opaque

@_ZL13gColorTypeMap = internal unnamed_addr constant [7 x %struct.anon] [%struct.anon zeroinitializer, %struct.anon { i32 1, i32 4 }, %struct.anon { i32 2, i32 6 }, %struct.anon { i32 3, i32 1 }, %struct.anon { i32 4, i32 11 }, %struct.anon { i32 5, i32 13 }, %struct.anon { i32 6, i32 14 }], align 16
@_ZL13gAlphaTypeMap = internal unnamed_addr constant [3 x %struct.anon.6] [%struct.anon.6 { i32 0, i32 1 }, %struct.anon.6 { i32 1, i32 2 }, %struct.anon.6 { i32 2, i32 3 }], align 16
@switch.table.sk_imageinfo_get_colortype = private unnamed_addr constant [15 x i64] [i64 0, i64 3, i64 0, i64 0, i64 1, i64 0, i64 2, i64 0, i64 0, i64 0, i64 0, i64 4, i64 0, i64 5, i64 6], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.SkImageInfo* @_Z11ToImageInfoPK14sk_imageinfo_t(%struct.sk_imageinfo_t* readnone) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  ret %struct.SkImageInfo* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.sk_imageinfo_t* @sk_imageinfo_new(i32, i32, i32, i32, %struct.sk_colorspace_t*) local_unnamed_addr #1 {
  %6 = icmp ult i32 %2, 7
  br i1 %6, label %7, label %37

7:                                                ; preds = %5
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @_ZL13gColorTypeMap, i64 0, i64 %8, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %3, 3
  br i1 %11, label %12, label %37

12:                                               ; preds = %7
  %13 = zext i32 %3 to i64
  %14 = getelementptr inbounds [3 x %struct.anon.6], [3 x %struct.anon.6]* @_ZL13gAlphaTypeMap, i64 0, i64 %13, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call i8* @_Znwm(i64 24) #9
  %17 = icmp eq %struct.sk_colorspace_t* %4, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %struct.sk_colorspace_t* %4 to i32*
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !2
  br label %21

21:                                               ; preds = %18, %12
  %22 = ptrtoint %struct.sk_colorspace_t* %4 to i64
  %23 = zext i32 %10 to i64
  %24 = zext i32 %15 to i64
  %25 = shl nuw i64 %24, 32
  %26 = or i64 %25, %23
  %27 = zext i32 %1 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %0 to i64
  %30 = or i64 %28, %29
  %31 = bitcast i8* %16 to i64*
  store i64 %22, i64* %31, align 8, !alias.scope !5
  %32 = getelementptr inbounds i8, i8* %16, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %26, i64* %33, align 8, !alias.scope !5
  %34 = getelementptr inbounds i8, i8* %16, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 %30, i64* %35, align 8, !alias.scope !5
  %36 = bitcast i8* %16 to %struct.sk_imageinfo_t*
  br label %37

37:                                               ; preds = %7, %5, %21
  %38 = phi %struct.sk_imageinfo_t* [ %36, %21 ], [ null, %5 ], [ null, %7 ]
  ret %struct.sk_imageinfo_t* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_imageinfo_delete(%struct.sk_imageinfo_t*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.sk_imageinfo_t* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_imageinfo_t* %0 to %class.SkColorSpace**
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %class.SkColorSpace* %5 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  br label %13

13:                                               ; preds = %3, %7, %11
  %14 = bitcast %struct.sk_imageinfo_t* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sk_imageinfo_get_width(%struct.sk_imageinfo_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sk_imageinfo_get_height(%struct.sk_imageinfo_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @sk_imageinfo_get_colortype(%struct.sk_imageinfo_t* nocapture readonly) local_unnamed_addr #6 {
  %2 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 15
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i16
  %8 = lshr i16 26707, %7
  %9 = and i16 %8, 1
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = sext i32 %4 to i64
  %13 = getelementptr inbounds [15 x i64], [15 x i64]* @switch.table.sk_imageinfo_get_colortype, i64 0, i64 %12
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @_ZL13gColorTypeMap, i64 0, i64 %14, i32 0
  %16 = load i32, i32* %15, align 8
  br label %17

17:                                               ; preds = %6, %1, %11
  %18 = phi i32 [ %16, %11 ], [ 0, %1 ], [ 0, %6 ]
  ret i32 %18
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @sk_imageinfo_get_alphatype(%struct.sk_imageinfo_t* nocapture readonly) local_unnamed_addr #6 {
  %2 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = zext i32 %5 to i64
  %9 = getelementptr inbounds [3 x %struct.anon.6], [3 x %struct.anon.6]* @_ZL13gAlphaTypeMap, i64 0, i64 %8, i32 0
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 1, %1 ]
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.sk_colorspace_t* @sk_imageinfo_get_colorspace(%struct.sk_imageinfo_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = bitcast %struct.sk_imageinfo_t* %0 to %struct.sk_colorspace_t**
  %3 = load %struct.sk_colorspace_t*, %struct.sk_colorspace_t** %2, align 8
  ret %struct.sk_colorspace_t* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_colorspace_t* @sk_colorspace_new_srgb() local_unnamed_addr #1 {
  %1 = alloca %class.sk_sp, align 8
  %2 = bitcast %class.sk_sp* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #10
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* nonnull sret %1) #10
  %3 = bitcast %class.sk_sp* %1 to %struct.sk_colorspace_t**
  %4 = load %struct.sk_colorspace_t*, %struct.sk_colorspace_t** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #10
  ret %struct.sk_colorspace_t* %4
}

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* sret) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_colorspace_ref(%struct.sk_colorspace_t*) local_unnamed_addr #8 {
  %2 = icmp eq %struct.sk_colorspace_t* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_colorspace_t* %0 to i32*
  %5 = atomicrmw add i32* %4, i32 1 monotonic
  br label %6

6:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_colorspace_unref(%struct.sk_colorspace_t*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.sk_colorspace_t* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_colorspace_t* %0 to i32*
  %5 = atomicrmw add i32* %4, i32 -1 acq_rel
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %struct.sk_colorspace_t* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %1, %3, %7
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
