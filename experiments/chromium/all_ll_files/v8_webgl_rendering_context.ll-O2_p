; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_rendering_context.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_rendering_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" = type { i8*, i64 }
%"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig" = type { %"struct.blink::bindings::IDLMemberInstaller::OperationConfig", %"class.v8::CFunction" }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.215" }
%"struct.std::__1::atomic.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.v8::internal::CFunctionInfoImpl" = type { %"class.v8::CFunctionInfo", [4 x %"class.v8::CTypeInfo"] }
%"class.v8::internal::CFunctionInfoImpl.1859" = type <{ %"class.v8::CFunctionInfo", [5 x %"class.v8::CTypeInfo"], [6 x i8] }>
%"class.v8::internal::CFunctionInfoImpl.1861" = type <{ %"class.v8::CFunctionInfo", [6 x %"class.v8::CTypeInfo"], [4 x i8] }>
%"class.base::span.182" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.187, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.187 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.189" }
%"class.blink::Persistent.189" = type { %"class.blink::PersistentBase.190" }
%"class.blink::PersistentBase.190" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.240", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.249", %"class.blink::Member.251", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.260", %"class.blink::Member.266", %"class.blink::Member.268", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.191" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.191" = type { %"class.WTF::HashMap.194" }
%"class.WTF::HashMap.194" = type { %"class.WTF::HashTable.195" }
%"class.WTF::HashTable.195" = type <{ %"struct.WTF::KeyValuePair.197"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.197" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.203" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.200" }
%"class.WTF::HashTable.200" = type <{ %"class.blink::WeakMember.202"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.202" = type opaque
%"class.blink::Supplementable.203" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.204" }
%"class.blink::HeapHashMap.204" = type { %"class.WTF::HashMap.207" }
%"class.WTF::HashMap.207" = type { %"class.WTF::HashTable.208" }
%"class.WTF::HashTable.208" = type <{ %"struct.WTF::KeyValuePair.210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.210" = type { i8*, %"class.blink::Member.270" }
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.272" }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.211, %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228", %"class.blink::Member.234", i32, [4 x i8], %"class.WTF::HashSet.236", i32, i32 }
%class.scoped_refptr.211 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.212", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.221 }
%"class.WTF::RefCounted.212" = type { %"class.base::RefCounted.213" }
%"class.base::RefCounted.213" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::String" = type { %class.scoped_refptr.214 }
%class.scoped_refptr.214 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.220 }
%union.anon.220 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.221 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.236" = type { %"class.WTF::HashTable.237" }
%"class.WTF::HashTable.237" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.244" }
%"class.WTF::Vector.244" = type { %"class.WTF::VectorBuffer.245" }
%"class.WTF::VectorBuffer.245" = type { %"class.WTF::VectorBufferBase.246" }
%"class.WTF::VectorBufferBase.246" = type { %"class.blink::Member.247"*, i32, i32 }
%"class.blink::Member.247" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.253", i32, i32 }
%"class.blink::HeapHashMap.253" = type { %"class.WTF::HashMap.256" }
%"class.WTF::HashMap.256" = type { %"class.WTF::HashTable.257" }
%"class.WTF::HashTable.257" = type <{ %"struct.WTF::KeyValuePair.259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.259" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"* }
%"class.base::span.184" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"* }
%"class.blink::WebGLRenderingContextBase" = type <{ %"class.blink::CanvasRenderingContext.base", [7 x i8], %"class.blink::DrawingBuffer::Client", %"class.blink::NoAllocDirectCallHost", %class.scoped_refptr.392, %"class.blink::Member.455", i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer", i8, [7 x i8], %"class.blink::HeapTaskRunnerTimer", %class.scoped_refptr.356, i8, i8, i8, [5 x i8], %"class.blink::Member.460", %"class.blink::Member.463", %"class.blink::Member.463", %"class.WTF::Vector.478", i32, [4 x i8], %"class.blink::Member.483", %"class.blink::Member.487", %"class.blink::Member.501", i8, [7 x i8], %"class.blink::Member.503", %"class.blink::HeapVector.520", i32, [4 x i8], %"class.WTF::Vector.496", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x float], i8, [3 x i8], [4 x i32], float, i32, [4 x i8], i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %"class.std::__1::unique_ptr.429", [45 x i8], [3 x i8], %"class.blink::HeapVector.534", %"class.WTF::HashSet.432", %"class.WTF::Vector.496", %"class.WTF::Vector.496", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.WTF::HashSet.542", %"class.WTF::HashSet.542", %"class.WTF::HashSet.542", %"class.WTF::HashSet.542", %"class.WTF::HashSet.542", %"class.WTF::HashSet.542", %"class.WTF::HashSet.542", i32, i32, %"class.base::MRUCache.546", i32, i8, [3 x i8], %"class.blink::CanvasColorParams", [4 x i8] }>
%"class.blink::CanvasRenderingContext.base" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.274", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8 }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.276", i32 }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.291", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.327", i8, i32, i32, i32, %"class.WTF::Vector.351", i8, i8, i64, i64, %"class.base::RepeatingCallback.362", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.383" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.279 }
%class.scoped_refptr.279 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.280" }
%"struct.std::__1::atomic.280" = type { %"struct.std::__1::__atomic_base.281" }
%"struct.std::__1::__atomic_base.281" = type { %"struct.std::__1::__atomic_base.282" }
%"struct.std::__1::__atomic_base.282" = type { %"struct.std::__1::__cxx_atomic_impl.283" }
%"struct.std::__1::__cxx_atomic_impl.283" = type { %"struct.std::__1::__cxx_atomic_base_impl.284" }
%"struct.std::__1::__cxx_atomic_base_impl.284" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.285" }
%"struct.std::__1::atomic.285" = type { %"struct.std::__1::__atomic_base.286" }
%"struct.std::__1::__atomic_base.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__cxx_atomic_impl.288" }
%"struct.std::__1::__cxx_atomic_impl.288" = type { %"struct.std::__1::__cxx_atomic_base_impl.289" }
%"struct.std::__1::__cxx_atomic_base_impl.289" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.280" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.291" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.318", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.301, [384 x i64], %class.sk_sp.302, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.303", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.309" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.301 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.302 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.315, %class.SkPixmap, %class.sk_sp.317 }
%class.sk_sp.315 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.316, i32, i32 }
%class.sk_sp.316 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.280" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.285" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.317 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.330, %"class.std::__1::unique_ptr.331" }
%class.scoped_refptr.330 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.334", %struct.SkRect }
%"class.absl::optional.334" = type { %"class.absl::optional_internal::optional_data.335" }
%"class.absl::optional_internal::optional_data.335" = type { %"class.absl::optional_internal::optional_data_base.336" }
%"class.absl::optional_internal::optional_data_base.336" = type { %"class.absl::optional_internal::optional_data_dtor_base.337" }
%"class.absl::optional_internal::optional_data_dtor_base.337" = type { i8, %union.anon.338 }
%union.anon.338 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.347", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.347" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %class.scoped_refptr.354*, i32, i32 }
%class.scoped_refptr.354 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.356, %"struct.gpu::SyncToken", %"class.base::WeakPtr.359", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.355" }
%"class.base::RefCountedThreadSafe.355" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias.358" }
%"class.base::StrongAlias.358" = type { i64 }
%"class.base::WeakPtr.359" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.362" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.363" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.377" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.377" = type { %"class.std::__1::__vector_base.378" }
%"class.std::__1::__vector_base.378" = type { %"struct.std::__1::pair.379"*, %"struct.std::__1::pair.379"*, %"class.std::__1::__compressed_pair.380" }
%"struct.std::__1::pair.379" = type { i32, i32 }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381", %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::pair.379"* }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.316, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.383" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::DrawingBuffer::Client" = type { i32 (...)** }
%"class.blink::NoAllocDirectCallHost" = type { %"class.WTF::Vector.387", %"struct.v8::FastApiCallbackOptions"* }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.v8::FastApiCallbackOptions" = type { i8, %union.anon }
%union.anon = type { i64 }
%class.scoped_refptr.392 = type { %"class.blink::DrawingBuffer"* }
%"class.blink::DrawingBuffer" = type { %"class.cc::TextureLayerClient", %"class.WTF::RefCounted.393", %"class.WTF::Vector.395", %"class.blink::DrawingBuffer::Client"*, i32, i32, %"class.std::__1::unique_ptr.403", %"class.gpu::gles2::GLES2Interface"*, %"class.std::__1::unique_ptr.429", %"class.blink::IntSize", i8, i8, i8, i8, i8, %"struct.blink::Platform::GraphicsInfo", i8, i8, i32, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i32, i32, i32, i32, %"struct.gpu::Mailbox", i32, %class.scoped_refptr.439, %class.scoped_refptr.439, i8, i8, i32, i8, i8, %"class.gfx::ColorSpace", i32, i8, i32, i32, i32, i8, i8, i8, i32, %class.scoped_refptr.448, %"class.WTF::Deque.449", i32, i8, i32, i32, %"class.base::WeakPtrFactory.454" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.WTF::RefCounted.393" = type { %"class.base::RefCounted.394" }
%"class.base::RefCounted.394" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"struct.blink::DrawingBuffer::RegisteredBitmap"*, i32, i32 }
%"struct.blink::DrawingBuffer::RegisteredBitmap" = type { %class.scoped_refptr.398, %"class.cc::SharedBitmapIdRegistration" }
%class.scoped_refptr.398 = type { %"class.cc::CrossThreadSharedBitmap"* }
%"class.cc::CrossThreadSharedBitmap" = type <{ %"class.base::RefCountedThreadSafe.399", %"struct.gpu::Mailbox", [4 x i8], %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.gfx::Size", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.399" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::SharedBitmapIdRegistration" = type { %"class.base::WeakPtr.400", %"struct.gpu::Mailbox" }
%"class.base::WeakPtr.400" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.412", %"class.base::ObserverList", %"class.base::WeakPtrFactory.425" }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.418", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.420" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.425" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.blink::Platform::GraphicsInfo" = type { i32, i32, i32, i8, i8, i8, i8, i8, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString" }
%"class.blink::WebString" = type { %class.scoped_refptr.214 }
%"class.blink::DrawingBuffer::ScopedStateRestorer" = type <{ %class.scoped_refptr.392, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%class.scoped_refptr.439 = type { %"struct.blink::DrawingBuffer::ColorBuffer"* }
%"struct.blink::DrawingBuffer::ColorBuffer" = type { %"class.base::RefCountedThreadSafe.440", %"class.base::PlatformThreadRef", %"class.base::WeakPtr.441", %"class.blink::IntSize", i32, i32, %"class.std::__1::unique_ptr.442", i32, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"struct.gpu::SyncToken" }
%"class.base::RefCountedThreadSafe.440" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.441" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.scoped_refptr.448 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.WTF::Deque.449" = type { %"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %class.scoped_refptr.439*, i32, i32 }
%"class.base::WeakPtrFactory.454" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::WebGLContextGroup"* }
%"class.blink::WebGLContextGroup" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.458", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.356, %"class.base::WeakPtrFactory.457" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.457" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::WebGLRenderingContextBase"* }
%class.scoped_refptr.356 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.357" }>
%"class.base::RefCountedThreadSafe.357" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::WebGLBuffer"* }
%"class.blink::WebGLBuffer" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, i64 }
%"class.blink::WebGLSharedPlatform3DObject.base" = type <{ %"class.blink::WebGLSharedObject", i32 }>
%"class.blink::WebGLSharedObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.455" }
%"class.blink::WebGLObject.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ThreadState::PrefinalizerRegistration.462", [3 x i8], i32, i32, i8, i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.462" = type { i8 }
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::WebGLVertexArrayObjectBase"* }
%"class.blink::WebGLVertexArrayObjectBase" = type <{ %"class.blink::WebGLContextObject", i32, i32, i8, [7 x i8], %"class.blink::Member.460", %"class.blink::HeapVector.466", %"class.WTF::Vector.473", i8, [7 x i8] }>
%"class.blink::WebGLContextObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.465" }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.459" }
%"class.blink::HeapVector.466" = type { %"class.WTF::Vector.469" }
%"class.WTF::Vector.469" = type { %"class.WTF::VectorBuffer.470" }
%"class.WTF::VectorBuffer.470" = type { %"class.WTF::VectorBufferBase.471" }
%"class.WTF::VectorBufferBase.471" = type { %"class.blink::Member.460"*, i32, i32 }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { i8*, i32, i32 }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { i32*, i32, i32 }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::WebGLProgram"* }
%"class.blink::WebGLProgram" = type <{ %"class.blink::WebGLSharedPlatform3DObject.base", i32, i32, i32, %"class.blink::Member.485", %"class.blink::Member.485", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::WebGLShader"* }
%"class.blink::WebGLShader" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, %"class.WTF::String" }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::WebGLFramebuffer"* }
%"class.blink::WebGLFramebuffer" = type <{ %"class.blink::WebGLContextObject", i32, [4 x i8], %"class.blink::HeapHashMap.489", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.WTF::Vector.496", %"class.WTF::Vector.496", i32, [4 x i8] }>
%"class.blink::HeapHashMap.489" = type { %"class.WTF::HashMap.492" }
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.495" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::WebGLRenderbuffer"* }
%"class.blink::WebGLRenderbuffer" = type <{ %"class.blink::WebGLSharedPlatform3DObject.base", i32, i32, i32, i8, i8, [6 x i8] }>
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.509", i32, %"class.blink::Member.510", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.513", %"class.blink::SelfKeepAlive.517" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.507" }
%"class.blink::WeakMember.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ThreadState::PrefinalizerRegistration.509" = type { i8 }
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::ScriptState"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.512 }
%class.scoped_refptr.512 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.510", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.513", %class.scoped_refptr.516 }
%class.scoped_refptr.516 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.513" = type { %"class.v8::TracedReference.514" }
%"class.v8::TracedReference.514" = type { %"class.v8::BasicTracedReference.515" }
%"class.v8::BasicTracedReference.515" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.517" = type { %"class.blink::Persistent.518" }
%"class.blink::Persistent.518" = type { %"class.blink::PersistentBase.519" }
%"class.blink::PersistentBase.519" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.520" = type { %"class.WTF::Vector.523" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %"class.blink::WebGLRenderingContextBase::TextureUnitState"*, i32, i32 }
%"class.blink::WebGLRenderingContextBase::TextureUnitState" = type { %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526" }
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::WebGLTexture"* }
%"class.blink::WebGLTexture" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, %"struct.blink::WebGLTexture::VideoFrameUploadMetadata" }
%"struct.blink::WebGLTexture::VideoFrameUploadMetadata" = type <{ i32, %"class.blink::IntRect", [4 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache" = type { i32, %"class.WTF::Vector.529" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { %"class.std::__1::unique_ptr.276"*, i32, i32 }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::Extensions3DUtil"* }
%"class.blink::Extensions3DUtil" = type <{ %"class.gpu::gles2::GLES2Interface"*, %"class.WTF::HashSet.432", %"class.WTF::HashSet.432", i8, [7 x i8] }>
%"class.blink::HeapVector.534" = type { %"class.WTF::Vector.537" }
%"class.WTF::Vector.537" = type { %"class.WTF::VectorBuffer.538" }
%"class.WTF::VectorBuffer.538" = type { %"class.WTF::VectorBufferBase.539" }
%"class.WTF::VectorBufferBase.539" = type { %"class.blink::Member.540"*, i32, i32 }
%"class.blink::Member.540" = type opaque
%"class.WTF::HashSet.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { i32*, i32, i32 }
%"class.WTF::HashSet.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.base::MRUCache.546" = type { %"class.base::MRUCacheBase.547" }
%"class.base::MRUCacheBase.547" = type { i32 (...)**, %"class.std::__1::list.548", %"class.std::__1::map.555", i64 }
%"class.std::__1::list.548" = type { %"class.std::__1::__list_imp.549" }
%"class.std::__1::__list_imp.549" = type { %"struct.std::__1::__list_node_base.550", %"class.std::__1::__compressed_pair.551" }
%"struct.std::__1::__list_node_base.550" = type { %"struct.std::__1::__list_node_base.550"*, %"struct.std::__1::__list_node_base.550"* }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.555" = type { %"class.std::__1::__tree.556" }
%"class.std::__1::__tree.556" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::V8UnionHTMLCanvasElementOrOffscreenCanvas" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.638", %"class.blink::Member.1048" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::HTMLCanvasElement"* }
%"class.blink::HTMLCanvasElement" = type { %"class.blink::HTMLElement", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::PageVisibilityObserver", %"class.blink::CanvasRenderingContextHost", %"class.blink::WebSurfaceLayerBridgeObserver", %"class.blink::ImageBitmapSource", %"class.blink::OffscreenCanvasPlaceholder.base", %"class.blink::ThreadState::PrefinalizerRegistration.676", [3 x i8], %"class.blink::HeapHashSet.677", %"class.blink::IntSize", %"class.blink::Member.684", i8, i8, i8, %"class.blink::FloatRect", i8, i8, i8, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.989", i8, i64, %class.scoped_refptr.1023 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.651" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.640", %"class.blink::Member.640" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.640", %"class.blink::Member.642", %"class.blink::Member.640", %"class.blink::Member.640", %"class.blink::Member.644" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1074", %"class.blink::Member.1076", %"class.blink::Member.642", %"class.blink::Member.1078", %"class.blink::Member.1078", %"class.blink::Member.1102", %"class.blink::Member.1104", %"class.blink::Member.1106", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1111", %"class.blink::HeapVector.1113" }
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1122", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.387", %"class.WTF::Vector.387", i8, i32, %"class.blink::Member.1130", %"class.blink::Member.234", %"class.blink::Member.1132", %"class.blink::Member.1134", %"class.blink::Member.1136", %"class.blink::Member.1138", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1146", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1152", %"class.blink::Member.1154", %"class.blink::Member.1119", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1156", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1161", %"class.blink::HeapVector.1095", %"class.blink::Member.1093", %"class.blink::Member.1163", %"class.blink::Member.1093", %"class.blink::Member.1093", %"class.blink::Member.1093", %"class.blink::UserActionElementSet", %"class.blink::Member.1172", double, double, i64, i64, %"class.blink::HeapHashSet.1174", %"class.blink::HeapHashSet.1181", i16, i8, %"class.blink::Member.1188", %"class.blink::Member.1190", %"class.blink::Member.1192", %"class.blink::Member.1194", %"class.blink::TextLinkColors", %"class.blink::Member.1196", i8, [7 x i8], %"class.blink::HeapHashMap.1198", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1093", %"class.WTF::Vector.1205", %"class.blink::Member.1210", %"class.blink::Member.1212", i8, %"class.blink::Member.1093", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1214", %"class.blink::HeapVector.1216", %"class.std::__1::unique_ptr.1224", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1230", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1243", %"class.WTF::Vector.1245", i8, i8, %"class.std::__1::unique_ptr.1250", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1095", %"class.blink::HeapVector.1256", i32, i8, %"class.blink::HeapTaskRunnerTimer.1161", %"class.blink::HeapTaskRunnerTimer.1161", %"class.blink::DocumentTiming", %"class.blink::Member.1264", i8, i32, %"class.blink::Member.1266", %"class.blink::Member.1268", %"class.blink::Member.1270", %"class.blink::HeapTaskRunnerTimer.1161", %"class.blink::Member.1272", %"class.WTF::HashMap.1274", %"class.blink::Member.1279", %"class.blink::Member.1281", %"class.blink::Member.1283", %"class.blink::Member.1285", %"class.blink::Member.1076", %"class.blink::Member.1076", %"class.blink::HeapTaskRunnerTimer.1161", %"class.blink::HeapHashSet.1287", i8, i32, %"class.blink::Member.1294", %"class.blink::Member.1296", i32, %"class.blink::Member.1298", %"class.blink::Member.1300", %"class.blink::Member.1302", %"class.std::__1::unique_ptr.1304", i64, %"class.std::__1::unique_ptr.1310", i32, i32, %"class.blink::Member.1316", %"class.blink::Member.1318", %"class.blink::Member.1320", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1322", %"class.WTF::Vector.473", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1352", %"class.blink::Member.1359", %"class.std::__1::unique_ptr.1361", %"class.blink::Member.1367", i8, i8, %"class.WTF::String", %"class.blink::Member.1369", i8, [7 x i8], %"class.blink::HeapHashMap.1371", %"class.blink::HeapObserverSet.1378", %"class.blink::Member.1386", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1388", i32, i8, i8, %"class.blink::WeakMember.1390", %"class.blink::Member.1391" }
%"class.blink::Supplementable.1122" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1123" }
%"class.blink::HeapHashMap.1123" = type { %"class.WTF::HashMap.1126" }
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1129" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1140" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.blink::KURL"* }
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.WTF::Vector.1156" = type { %"class.WTF::VectorBuffer.1157" }
%"class.WTF::VectorBuffer.1157" = type { %"class.WTF::VectorBufferBase.1158" }
%"class.WTF::VectorBufferBase.1158" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.516 }
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1165" }
%"class.blink::HeapHashMap.1165" = type { %"class.WTF::HashMap.1168" }
%"class.WTF::HashMap.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"struct.WTF::KeyValuePair.1171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1171" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1174" = type { %"class.WTF::HashSet.1177" }
%"class.WTF::HashSet.1177" = type { %"class.WTF::HashTable.1178" }
%"class.WTF::HashTable.1178" = type <{ %"class.blink::WeakMember.1180"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1180" = type opaque
%"class.blink::HeapHashSet.1181" = type { %"class.WTF::HashSet.1184" }
%"class.WTF::HashSet.1184" = type { %"class.WTF::HashTable.1185" }
%"class.WTF::HashTable.1185" = type <{ %"class.blink::WeakMember.1187"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1187" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1198" = type { %"class.WTF::HashMap.1201" }
%"class.WTF::HashMap.1201" = type { %"class.WTF::HashTable.1202" }
%"class.WTF::HashTable.1202" = type <{ %"struct.WTF::KeyValuePair.1204"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1204" = type opaque
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1216" = type { %"class.WTF::Vector.1219" }
%"class.WTF::Vector.1219" = type { %"class.WTF::VectorBuffer.1220" }
%"class.WTF::VectorBuffer.1220" = type { %"class.WTF::VectorBufferBase.1221" }
%"class.WTF::VectorBufferBase.1221" = type { %"class.blink::Member.1222"*, i32, i32 }
%"class.blink::Member.1222" = type opaque
%"class.std::__1::unique_ptr.1224" = type { %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1230" = type { %"class.WTF::HashSet.1233" }
%"class.WTF::HashSet.1233" = type { %"class.WTF::HashTable.1234" }
%"class.WTF::HashTable.1234" = type <{ %"class.blink::WeakMember.1236"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1236" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1237", i32, [4 x i8] }>
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"struct.std::__1::pair.1240"*, i32, i32 }
%"struct.std::__1::pair.1240" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1245" = type { %"class.WTF::VectorBuffer.1246" }
%"class.WTF::VectorBuffer.1246" = type { %"class.WTF::VectorBufferBase.1247" }
%"class.WTF::VectorBufferBase.1247" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1095" = type { %"class.WTF::Vector.1098" }
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { %"class.blink::Member.1093"*, i32, i32 }
%"class.blink::HeapVector.1256" = type { %"class.WTF::Vector.1259" }
%"class.WTF::Vector.1259" = type { %"class.WTF::VectorBuffer.1260" }
%"class.WTF::VectorBuffer.1260" = type { %"class.WTF::VectorBufferBase.1261" }
%"class.WTF::VectorBufferBase.1261" = type { %"class.blink::Member.1262"*, i32, i32 }
%"class.blink::Member.1262" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1076" }
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1274" = type { %"class.WTF::HashTable.1275" }
%"class.WTF::HashTable.1275" = type <{ %"struct.WTF::KeyValuePair.1278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1278" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1161" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1162", { i64, i64 } }
%"class.blink::WeakMember.1162" = type { %"class.blink::MemberBase.1077" }
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::Member.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1293" = type opaque
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1310" = type { %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1326", %"class.blink::Member.1326", i32, i8, [3 x i8] }>
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member.1328", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.1341", double, %"class.WTF::Vector.1346", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1072" }
%"class.blink::WeakMember.1072" = type { %"class.blink::MemberBase.235" }
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::Node"* }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1333", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1333" = type { %"class.WTF::HashTable.1334" }
%"class.WTF::HashTable.1334" = type <{ %"struct.WTF::KeyValuePair.1336"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1336" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1337", i32, i32 }
%"class.WTF::Vector.1337" = type { %"class.WTF::VectorBuffer.1338" }
%"class.WTF::VectorBuffer.1338" = type { %"class.WTF::VectorBufferBase.1339" }
%"class.WTF::VectorBufferBase.1339" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { float*, i32, i32 }
%"class.WTF::Vector.1346" = type { %"class.WTF::VectorBuffer.1347" }
%"class.WTF::VectorBuffer.1347" = type { %"class.WTF::VectorBufferBase.1348" }
%"class.WTF::VectorBufferBase.1348" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::Length" = type <{ %union.anon.1349, i8, i8, i8, i8 }>
%union.anon.1349 = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1352" = type { %"class.WTF::HashMap.1355" }
%"class.WTF::HashMap.1355" = type { %"class.WTF::HashTable.1356" }
%"class.WTF::HashTable.1356" = type <{ %"struct.WTF::KeyValuePair.1358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1358" = type opaque
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1361" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1367" = type { %"class.blink::MemberBase.1368" }
%"class.blink::MemberBase.1368" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1371" = type { %"class.WTF::HashMap.1374" }
%"class.WTF::HashMap.1374" = type { %"class.WTF::HashTable.1375" }
%"class.WTF::HashTable.1375" = type <{ %"struct.WTF::KeyValuePair.1377"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1377" = type opaque
%"class.blink::HeapObserverSet.1378" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1379" }
%"class.blink::HeapHashSet.1379" = type { %"class.WTF::HashSet.1382" }
%"class.WTF::HashSet.1382" = type { %"class.WTF::HashTable.1383" }
%"class.WTF::HashTable.1383" = type <{ %"class.blink::WeakMember.1385"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1385" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1076", %"class.blink::HeapHashSet.1395", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1402", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1395" = type { %"class.WTF::HashSet.1398" }
%"class.WTF::HashSet.1398" = type { %"class.WTF::HashTable.1399" }
%"class.WTF::HashTable.1399" = type <{ %"class.blink::Member.1401"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1401" = type opaque
%"class.blink::HeapTaskRunnerTimer.1402" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1403", { i64, i64 } }
%"class.blink::WeakMember.1403" = type { %"class.blink::MemberBase.1389" }
%"class.blink::WeakMember.1390" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::Node"* }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1082" }
%"class.blink::HeapHashMap.1082" = type { %"class.WTF::HashMap.1085" }
%"class.WTF::HashMap.1085" = type { %"class.WTF::HashTable.1086" }
%"class.WTF::HashTable.1086" = type <{ %"struct.WTF::KeyValuePair.1088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1088" = type { %"class.WTF::AtomicString", %"class.blink::Member.1089" }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1093", i32, %"class.blink::HeapVector.1095" }
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1108" }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::HeapHashMap.1110"* }
%"class.blink::HeapHashMap.1110" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1113" = type { %"class.WTF::Vector.1116" }
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { %"class.blink::Member.1119"*, i32, i32 }
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.649", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.655", %"class.blink::Member.657", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.655" = type { %"class.WTF::SingleThreadedBitField.656" }
%"class.WTF::SingleThreadedBitField.656" = type { i32 }
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.659 }
%class.scoped_refptr.659 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.660", %"class.WTF::AtomicString", %"class.WTF::Vector.662" }
%"class.WTF::RefCounted.660" = type { %"class.base::RefCounted.661" }
%"class.base::RefCounted.661" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664", [32 x i8] }
%"class.WTF::VectorBufferBase.664" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.667" }
%"class.blink::WeakMember.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::WebSurfaceLayerBridgeObserver" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::OffscreenCanvasPlaceholder.base" = type <{ i32 (...)**, %class.scoped_refptr.354, %"class.base::WeakPtr.291", %class.scoped_refptr.356, %"class.util::IdType.669", i32, i32, %"class.absl::optional.671" }>
%"class.util::IdType.669" = type { %"class.base::StrongAlias.670" }
%"class.base::StrongAlias.670" = type { i32 }
%"class.absl::optional.671" = type { %"class.absl::optional_internal::optional_data.672" }
%"class.absl::optional_internal::optional_data.672" = type { %"class.absl::optional_internal::optional_data_base.673" }
%"class.absl::optional_internal::optional_data_base.673" = type { %"class.absl::optional_internal::optional_data_dtor_base.674" }
%"class.absl::optional_internal::optional_data_dtor_base.674" = type { i8, %union.anon.675 }
%union.anon.675 = type { i32 }
%"class.blink::ThreadState::PrefinalizerRegistration.676" = type { i8 }
%"class.blink::HeapHashSet.677" = type { %"class.WTF::HashSet.680" }
%"class.WTF::HashSet.680" = type { %"class.WTF::HashTable.681" }
%"class.WTF::HashTable.681" = type <{ %"class.blink::WeakMember.683"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.683" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.274", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8, [7 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::Canvas2DLayerBridge"* }
%"class.blink::Canvas2DLayerBridge" = type { %"class.cc::TextureLayerClient", %class.sk_sp.689, %class.scoped_refptr.448, %"class.std::__1::unique_ptr.690", %"class.std::__1::unique_ptr.696", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::CanvasColorParams", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceHost"*, %"struct.viz::TransferableResource", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::bernoulli_distribution", %"class.WTF::Deque.712", %class.sk_sp.717, %"class.base::WeakPtrFactory.722" }
%class.sk_sp.689 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::SharedContextRateLimiter"* }
%"class.blink::SharedContextRateLimiter" = type opaque
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::Canvas2DLayerBridge::Logger"* }
%"class.blink::Canvas2DLayerBridge::Logger" = type { i32 (...)** }
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.276", i32, [4 x i8] }>
%"struct.viz::TransferableResource" = type { %"class.util::IdType.669", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.702", i8, i32, i8, [7 x i8], %"class.absl::optional.707" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"class.absl::optional.702" = type { %"class.absl::optional_internal::optional_data.703" }
%"class.absl::optional_internal::optional_data.703" = type { %"class.absl::optional_internal::optional_data_base.704" }
%"class.absl::optional_internal::optional_data_base.704" = type { %"class.absl::optional_internal::optional_data_dtor_base.705" }
%"class.absl::optional_internal::optional_data_dtor_base.705" = type { i8, %union.anon.706 }
%union.anon.706 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.707" = type { %"class.absl::optional_internal::optional_data.708" }
%"class.absl::optional_internal::optional_data.708" = type { %"class.absl::optional_internal::optional_data_base.709" }
%"class.absl::optional_internal::optional_data_base.709" = type { %"class.absl::optional_internal::optional_data_dtor_base.710" }
%"class.absl::optional_internal::optional_data_dtor_base.710" = type { i8, [7 x i8], %union.anon.711 }
%union.anon.711 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::__1::bernoulli_distribution" = type { %"class.std::__1::bernoulli_distribution::param_type" }
%"class.std::__1::bernoulli_distribution::param_type" = type { double }
%"class.WTF::Deque.712" = type { %"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.715" }
%"class.WTF::VectorBuffer.715" = type { %"class.WTF::VectorBufferBase.716" }
%"class.WTF::VectorBufferBase.716" = type { %"struct.blink::Canvas2DLayerBridge::RasterTimer"*, i32, i32 }
%"struct.blink::Canvas2DLayerBridge::RasterTimer" = type { i32, %"class.base::TimeDelta" }
%class.sk_sp.717 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.718", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { i8* }
%"class.base::WeakPtrFactory.722" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::SurfaceLayerBridge"* }
%"class.blink::SurfaceLayerBridge" = type <{ %"class.blink::mojom::blink::EmbeddedFrameSinkClient", %"class.blink::mojom::blink::SurfaceEmbedder", %"class.blink::WebSurfaceLayerBridge", %class.scoped_refptr.729, %class.scoped_refptr.825, %"class.blink::WebSurfaceLayerBridgeObserver"*, %"class.base::RepeatingCallback.814", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.mojo::Receiver", %"class.mojo::Receiver.984", %"class.viz::FrameSinkId", i32, [4 x i8], %"class.viz::SurfaceId", %"class.viz::FrameSinkId", i8, i8, [6 x i8] }>
%"class.blink::mojom::blink::EmbeddedFrameSinkClient" = type { i32 (...)** }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridge" = type { i32 (...)** }
%class.scoped_refptr.729 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.814", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.820", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.730", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.747", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.788" }>
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.731", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.731" = type { %"class.std::__1::__vector_base.732" }
%"class.std::__1::__vector_base.732" = type { %class.scoped_refptr.733*, %class.scoped_refptr.733*, %"class.std::__1::__compressed_pair.734" }
%class.scoped_refptr.733 = type opaque
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %class.scoped_refptr.733* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.739" }
%"class.std::__1::vector.739" = type { %"class.std::__1::__vector_base.740" }
%"class.std::__1::__vector_base.740" = type { %"struct.std::__1::pair.741"*, %"struct.std::__1::pair.741"*, %"class.std::__1::__compressed_pair.742" }
%"struct.std::__1::pair.741" = type opaque
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"struct.std::__1::pair.741"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.771", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.776", %"class.std::__1::vector.777" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.750" }
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.766" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.752, [20 x float], i32, [4 x i8], %"class.std::__1::vector.759", i32, [4 x i8] }>
%class.sk_sp.752 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.753, i32, %"class.absl::optional.754", i8, i32 }
%class.sk_sp.753 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.754" = type { %"class.absl::optional_internal::optional_data.755" }
%"class.absl::optional_internal::optional_data.755" = type { %"class.absl::optional_internal::optional_data_base.756" }
%"class.absl::optional_internal::optional_data_base.756" = type { %"class.absl::optional_internal::optional_data_dtor_base.757" }
%"class.absl::optional_internal::optional_data_dtor_base.757" = type { i8, %union.anon.758 }
%union.anon.758 = type { %struct.SkRect }
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.771" = type { %"class.absl::optional_internal::optional_data.772" }
%"class.absl::optional_internal::optional_data.772" = type { %"class.absl::optional_internal::optional_data_base.773" }
%"class.absl::optional_internal::optional_data_base.773" = type { %"class.absl::optional_internal::optional_data_dtor_base.774" }
%"class.absl::optional_internal::optional_data_dtor_base.774" = type { i8, %union.anon.775 }
%union.anon.775 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.776" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.777" = type { %"class.std::__1::__vector_base.778" }
%"class.std::__1::__vector_base.778" = type { %"class.std::__1::unique_ptr.779"*, %"class.std::__1::unique_ptr.779"*, %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::unique_ptr.779" = type opaque
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.std::__1::unique_ptr.779"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.797", %"class.std::__1::vector.797", %"class.std::__1::vector.804" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.793 }
%union.anon.793 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.797" = type { %"class.std::__1::__vector_base.798" }
%"class.std::__1::__vector_base.798" = type { i8**, i8**, %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { i8** }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.806" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.815", %"class.viz::SurfaceId" }
%"class.absl::optional.815" = type { %"class.absl::optional_internal::optional_data.816" }
%"class.absl::optional_internal::optional_data.816" = type { %"class.absl::optional_internal::optional_data_base.817" }
%"class.absl::optional_internal::optional_data_base.817" = type { %"class.absl::optional_internal::optional_data_dtor_base.818" }
%"class.absl::optional_internal::optional_data_dtor_base.818" = type { i8, %union.anon.819 }
%union.anon.819 = type { %"class.viz::SurfaceId" }
%"class.absl::optional.820" = type { %"class.absl::optional_internal::optional_data.821" }
%"class.absl::optional_internal::optional_data.821" = type { %"class.absl::optional_internal::optional_data_base.822" }
%"class.absl::optional_internal::optional_data_base.822" = type { %"class.absl::optional_internal::optional_data_dtor_base.823" }
%"class.absl::optional_internal::optional_data_dtor_base.823" = type { i8, %union.anon.824 }
%union.anon.824 = type { i32 }
%class.scoped_refptr.825 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%"class.base::RepeatingCallback.814" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.826, %"class.std::__1::unique_ptr.934", %"class.base::WeakPtrFactory.983" }
%class.scoped_refptr.826 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.828, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.900", %"class.absl::optional.905", %"class.absl::optional.858", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.925", i8, [7 x i8], %class.scoped_refptr.828, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.827" }>
%"class.base::RefCountedThreadSafe.827" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.829", %"class.std::__1::unique_ptr.835", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.841" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.841" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.828, %"class.std::__1::unique_ptr.842", %"class.absl::optional.852", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i32, i32, %"class.absl::optional.858", %"class.std::__1::unique_ptr.863", i8, i64, %class.scoped_refptr.896, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.898", %"class.base::WeakPtrFactory.899" }
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.828, i8, %"class.mojo::ScopedHandleBase.845", %class.scoped_refptr.846, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.847", i8*, %"class.base::WeakPtrFactory.848" }
%"class.mojo::ScopedHandleBase.845" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.846 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.847" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.848" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.852" = type { %"class.absl::optional_internal::optional_data.853" }
%"class.absl::optional_internal::optional_data.853" = type { %"class.absl::optional_internal::optional_data_base.854" }
%"class.absl::optional_internal::optional_data_base.854" = type { %"class.absl::optional_internal::optional_data_dtor_base.855" }
%"class.absl::optional_internal::optional_data_dtor_base.855" = type { i8, %union.anon.856 }
%union.anon.856 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.857", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.857" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.866", i8, i64, %class.scoped_refptr.867, %class.scoped_refptr.892 }
%"class.base::RepeatingCallback.866" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.867 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.868", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.870", %"class.std::__1::map.881", i8, [7 x i8] }>
%"class.base::RefCounted.868" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.869 }
%class.scoped_refptr.869 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.870" = type { %"class.std::__1::__tree.871" }
%"class.std::__1::__tree.871" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.881" = type { %"class.std::__1::__tree.882" }
%"class.std::__1::__tree.882" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.883", %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.892 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.896 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.897 }
%class.scoped_refptr.897 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1073", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.828, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.215", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1073" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.898" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.899" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.900" = type { %"class.absl::optional_internal::optional_data.901" }
%"class.absl::optional_internal::optional_data.901" = type { %"class.absl::optional_internal::optional_data_base.902" }
%"class.absl::optional_internal::optional_data_base.902" = type { %"class.absl::optional_internal::optional_data_dtor_base.903" }
%"class.absl::optional_internal::optional_data_dtor_base.903" = type { i8, %union.anon.904 }
%union.anon.904 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.905" = type { %"class.absl::optional_internal::optional_data.906" }
%"class.absl::optional_internal::optional_data.906" = type { %"class.absl::optional_internal::optional_data_base.907" }
%"class.absl::optional_internal::optional_data_base.907" = type { %"class.absl::optional_internal::optional_data_dtor_base.908" }
%"class.absl::optional_internal::optional_data_dtor_base.908" = type { i8, [7 x i8], %union.anon.909 }
%union.anon.909 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.858" = type { %"class.absl::optional_internal::optional_data.859" }
%"class.absl::optional_internal::optional_data.859" = type { %"class.absl::optional_internal::optional_data_base.860" }
%"class.absl::optional_internal::optional_data_base.860" = type { %"class.absl::optional_internal::optional_data_dtor_base.861" }
%"class.absl::optional_internal::optional_data_dtor_base.861" = type { i8, %union.anon.862 }
%union.anon.862 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.910 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.910 = type { %"class.std::__1::map.913" }
%"class.std::__1::map.913" = type { %"class.std::__1::__tree.914" }
%"class.std::__1::__tree.914" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.915", %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.924"*, i64 }
%"class.std::__1::unique_ptr.924" = type opaque
%"class.std::__1::map.925" = type { %"class.std::__1::__tree.926" }
%"class.std::__1::__tree.926" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.828 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.937", %"class.absl::optional.938", %"class.absl::optional.943", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.950", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.958", %"class.std::__1::map.969", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.978", i8, %class.scoped_refptr.828, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.979" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.937" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.938" = type { %"class.absl::optional_internal::optional_data.939" }
%"class.absl::optional_internal::optional_data.939" = type { %"class.absl::optional_internal::optional_data_base.940" }
%"class.absl::optional_internal::optional_data_base.940" = type { %"class.absl::optional_internal::optional_data_dtor_base.941" }
%"class.absl::optional_internal::optional_data_dtor_base.941" = type { i8, %union.anon.942 }
%union.anon.942 = type { %"class.base::TimeDelta" }
%"class.absl::optional.943" = type { %"class.absl::optional_internal::optional_data.944" }
%"class.absl::optional_internal::optional_data.944" = type { %"class.absl::optional_internal::optional_data_base.945" }
%"class.absl::optional_internal::optional_data_base.945" = type { %"class.absl::optional_internal::optional_data_dtor_base.946" }
%"class.absl::optional_internal::optional_data_dtor_base.946" = type { i8, %union.anon.947 }
%union.anon.947 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.828, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.948" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.948" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.949 }
%class.scoped_refptr.949 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.953", %class.scoped_refptr.954 }
%"class.base::RepeatingCallback.953" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.954 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.827", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.958" = type { %"class.std::__1::__tree.959" }
%"class.std::__1::__tree.959" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.969" = type { %"class.std::__1::__tree.970" }
%"class.std::__1::__tree.970" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.971", %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::OnceCallback.978" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.979" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.983" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::EmbeddedFrameSinkClient"* }
%"class.mojo::Receiver.984" = type { %"class.mojo::internal::BindingState.985" }
%"class.mojo::internal::BindingState.985" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::SurfaceEmbedderStub" }
%"class.blink::mojom::blink::SurfaceEmbedderStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::SurfaceEmbedder"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type { %"class.viz::mojom::blink::CompositorFrameSinkClient", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.viz::FrameSinkId", %"class.blink::IntSize", i8, i8, i8, i32, %"class.mojo::Remote", %"class.mojo::Remote.998", %"class.mojo::Receiver.1006", i32, %"class.viz::ResourceIdGenerator", [4 x i8], %"class.WTF::HashMap.1008", %"class.viz::FrameTokenGenerator", %class.scoped_refptr.354, %"class.util::IdType.669", i32, %"struct.viz::BeginFrameAck", %"class.blink::CanvasResourceDispatcherClient"*, %"class.std::__1::unique_ptr.1013", %"class.base::WeakPtrFactory.1019" }
%"class.viz::mojom::blink::CompositorFrameSinkClient" = type { i32 (...)** }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.992" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.826, %"class.std::__1::unique_ptr.934", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.828, i32 }>
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.viz::mojom::blink::CompositorFrameSinkProxy"* }
%"class.viz::mojom::blink::CompositorFrameSinkProxy" = type { %"class.viz::mojom::blink::CompositorFrameSink", %"class.mojo::MessageReceiverWithResponder"* }
%"class.viz::mojom::blink::CompositorFrameSink" = type { i32 (...)** }
%"class.mojo::Remote.998" = type { %"class.mojo::internal::InterfacePtrState.999" }
%"class.mojo::internal::InterfacePtrState.999" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1000" }
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.blink::mojom::blink::SurfaceEmbedderProxy"* }
%"class.blink::mojom::blink::SurfaceEmbedderProxy" = type { %"class.blink::mojom::blink::SurfaceEmbedder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.mojo::Receiver.1006" = type { %"class.mojo::internal::BindingState.1007" }
%"class.mojo::internal::BindingState.1007" = type { %"class.mojo::internal::BindingStateBase", %"class.viz::mojom::blink::CompositorFrameSinkClientStub" }
%"class.viz::mojom::blink::CompositorFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.viz::mojom::blink::CompositorFrameSinkClient"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.WTF::HashMap.1008" = type { %"class.WTF::HashTable.1009" }
%"class.WTF::HashTable.1009" = type <{ %"struct.WTF::KeyValuePair.1012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1012" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.blink::CanvasResourceDispatcherClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1019" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.1023 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1024", i8, %class.scoped_refptr.1026, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.1042" }
%"class.WTF::ThreadSafeRefCounted.1024" = type { %"class.base::RefCountedThreadSafe.1025" }
%"class.base::RefCountedThreadSafe.1025" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1026 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1027", i64, %"class.WTF::Vector.1029", %"class.WTF::Vector.1034" }
%"class.WTF::RefCounted.1027" = type { %"class.base::RefCounted.1028" }
%"class.base::RefCounted.1028" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1029" = type { %"class.WTF::VectorBuffer.1030" }
%"class.WTF::VectorBuffer.1030" = type { %"class.WTF::VectorBufferBase.1031" }
%"class.WTF::VectorBufferBase.1031" = type { i8*, i32, i32 }
%"class.WTF::Vector.1034" = type { %"class.WTF::VectorBuffer.1035" }
%"class.WTF::VectorBuffer.1035" = type { %"class.WTF::VectorBufferBase.1036" }
%"class.WTF::VectorBufferBase.1036" = type { %"class.std::__1::unique_ptr.1037"*, i32, i32 }
%"class.std::__1::unique_ptr.1037" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.1041" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::PersistentNodePtr.1041" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::OffscreenCanvas"* }
%"class.blink::OffscreenCanvas" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ImageBitmapSource", %"class.blink::CanvasRenderingContextHost", %"class.blink::CanvasResourceDispatcherClient", %"class.blink::ThreadState::PrefinalizerRegistration.1071", [3 x i8], i32, %"class.blink::Member.684", %"class.blink::WeakMember.1072", i32, %"class.blink::IntSize", i8, i8, i8, i8, %"class.std::__1::unique_ptr.989", %struct.SkIRect, i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1064" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1052" }
%"class.blink::HeapVector.1052" = type { %"class.WTF::Vector.1055" }
%"class.WTF::Vector.1055" = type { %"class.WTF::VectorBuffer.1056" }
%"class.WTF::VectorBuffer.1056" = type { %"class.WTF::VectorBufferBase.1057", [32 x i8] }
%"class.WTF::VectorBufferBase.1057" = type { %"struct.std::__1::pair.1058"*, i32, i32 }
%"struct.std::__1::pair.1058" = type { %"class.WTF::AtomicString", %"class.blink::Member.1059" }
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::HeapVector.1061"* }
%"class.blink::HeapVector.1061" = type opaque
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.WTF::Vector.1067"* }
%"class.WTF::Vector.1067" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1071" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.513" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.1426", %"class.WTF::HashMap.1426", %"class.WTF::HashMap.1431", %"class.std::__1::unique_ptr.1436", %"class.std::__1::unique_ptr.1483", %"class.blink::Persistent.189", i8, i8, i8, %"class.WTF::Vector.387", %"class.std::__1::unique_ptr.1497", %"class.blink::Persistent.1503", %"class.blink::Persistent.1507", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.1408", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1414", %"class.std::__1::unique_ptr.1420", i32, i32 }
%"class.std::__1::unique_ptr.1408" = type { %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.1420" = type { %"class.std::__1::__compressed_pair.1421" }
%"class.std::__1::__compressed_pair.1421" = type { %"struct.std::__1::__compressed_pair_elem.1422" }
%"struct.std::__1::__compressed_pair_elem.1422" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.1426" = type { %"class.WTF::HashTable.1427" }
%"class.WTF::HashTable.1427" = type <{ %"struct.WTF::KeyValuePair.1430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1430" = type opaque
%"class.WTF::HashMap.1431" = type { %"class.WTF::HashTable.1432" }
%"class.WTF::HashTable.1432" = type <{ %"struct.WTF::KeyValuePair.1435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1435" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.1444", %class.scoped_refptr.214 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1439", i8* }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.1444" = type { %"class.v8::PersistentValueMapBase.1445" }
%"class.v8::PersistentValueMapBase.1445" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1446", i8* }
%"class.WTF::HashMap.1446" = type { %"class.WTF::HashTable.1447" }
%"class.WTF::HashTable.1447" = type <{ %"struct.WTF::KeyValuePair.1450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1450" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1451", %"class.WTF::String", %"class.std::__1::unique_ptr.1453" }
%"class.WTF::RefCounted.1451" = type { %"class.base::RefCounted.1452" }
%"class.base::RefCounted.1452" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1453" = type { %"class.std::__1::__compressed_pair.1454" }
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.1455" }
%"struct.std::__1::__compressed_pair_elem.1455" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1456", %"class.std::__1::unique_ptr.1467", %"class.WTF::Vector.1473", i8, i32 }
%"class.std::__1::unique_ptr.1456" = type { %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"class.WTF::Vector.1459"* }
%"class.WTF::Vector.1459" = type { %"class.WTF::VectorBuffer.1460" }
%"class.WTF::VectorBuffer.1460" = type { %"class.WTF::VectorBufferBase.1461" }
%"class.WTF::VectorBufferBase.1461" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1467" = type { %"class.std::__1::__compressed_pair.1468" }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1473" = type { %"class.WTF::VectorBuffer.1474" }
%"class.WTF::VectorBuffer.1474" = type { %"class.WTF::VectorBufferBase.1461", [32 x i8] }
%"class.std::__1::unique_ptr.1483" = type { %"class.std::__1::__compressed_pair.1484" }
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.1486", %"class.WTF::HashMap.1489" }
%"class.blink::ScopedPersistent.1486" = type { %"class.v8::Persistent.1487" }
%"class.v8::Persistent.1487" = type { %"class.v8::PersistentBase.1488" }
%"class.v8::PersistentBase.1488" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1493" = type opaque
%"class.std::__1::unique_ptr.1497" = type { %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1503" = type { %"class.blink::PersistentBase.1504" }
%"class.blink::PersistentBase.1504" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1507" = type { %"class.blink::PersistentBase.1508" }
%"class.blink::PersistentBase.1508" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1511", i64 }
%"class.blink::HeapVector.1511" = type { %"class.WTF::Vector.1514" }
%"class.WTF::Vector.1514" = type { %"class.WTF::VectorBuffer.1515" }
%"class.WTF::VectorBuffer.1515" = type { %"class.WTF::VectorBufferBase.1516" }
%"class.WTF::VectorBufferBase.1516" = type { %"struct.std::__1::pair.1517"*, i32, i32 }
%"struct.std::__1::pair.1517" = type { %"class.blink::UntracedMember.1518", %"class.blink::Member.1520" }
%"class.blink::UntracedMember.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.1523", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.1523" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.1524" }
%"class.std::__1::unique_ptr.1524" = type { %"class.std::__1::__compressed_pair.1525" }
%"class.std::__1::__compressed_pair.1525" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"class.v8::Number" = type { i8 }
%"class.blink::MaybeShared" = type { %"class.blink::Member.1529" }
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.1531" }
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::scheduler::CooperativeSchedulingManager" = type <{ i32 (...)**, i32, i8, [3 x i8], %"class.base::TimeTicks", %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.blink::FlexibleArrayBufferView" = type { %"class.blink::DOMArrayBufferView"*, i8*, i64, [64 x i8] }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.v8::Boolean" = type { i8 }
%"class.blink::WebGLActiveInfo" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", i32, i32 }
%"class.absl::optional.1535" = type { %"class.absl::optional_internal::optional_data.1536" }
%"class.absl::optional_internal::optional_data.1536" = type { %"class.absl::optional_internal::optional_data_base.1537" }
%"class.absl::optional_internal::optional_data_base.1537" = type { %"class.absl::optional_internal::optional_data_dtor_base.1538" }
%"class.absl::optional_internal::optional_data_dtor_base.1538" = type { i8, %union.anon.1539 }
%union.anon.1539 = type { %"class.blink::HeapVector.1540" }
%"class.blink::HeapVector.1540" = type { %"class.WTF::Vector.1543" }
%"class.WTF::Vector.1543" = type { %"class.WTF::VectorBuffer.1544" }
%"class.WTF::VectorBuffer.1544" = type { %"class.WTF::VectorBufferBase.1545" }
%"class.WTF::VectorBufferBase.1545" = type { %"class.blink::Member.485"*, i32, i32 }
%"class.blink::HeapVector.1547" = type { %"class.WTF::Vector.1550" }
%"class.WTF::Vector.1550" = type { %"class.WTF::VectorBuffer.1551" }
%"class.WTF::VectorBuffer.1551" = type { %"class.WTF::VectorBufferBase.1552" }
%"class.WTF::VectorBufferBase.1552" = type { %"class.blink::Member.1553"*, i32, i32 }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::WebGLContextAttributes" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], %"class.WTF::String", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::WebGLShaderPrecisionFormat" = type <{ %"class.blink::ScriptWrappable", i32, i32, i32, [4 x i8] }>
%"class.blink::IdentifiableToken" = type { i64 }
%"class.absl::optional.1559" = type { %"class.absl::optional_internal::optional_data.1560" }
%"class.absl::optional_internal::optional_data.1560" = type { %"class.absl::optional_internal::optional_data_base.1561" }
%"class.absl::optional_internal::optional_data_base.1561" = type { %"class.absl::optional_internal::optional_data_dtor_base.1562" }
%"class.absl::optional_internal::optional_data_dtor_base.1562" = type { i8, %union.anon.1563 }
%union.anon.1563 = type { %"class.WTF::Vector.1564" }
%"class.WTF::Vector.1564" = type { %"class.WTF::VectorBuffer.1565" }
%"class.WTF::VectorBuffer.1565" = type { %"class.WTF::VectorBufferBase.1566" }
%"class.WTF::VectorBufferBase.1566" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebGLUniformLocation" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.483", i32, i32 }
%"class.blink::HTMLVideoElement" = type { %"class.blink::HTMLMediaElement", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %"class.blink::Supplementable.1695", %"class.blink::Member.1703", %"class.blink::Member.1735", %"class.blink::Member.1737", %"class.blink::Member.1739", %"class.blink::Member.1741", %"class.WTF::AtomicString", i8, %"class.std::__1::unique_ptr.276" }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.1573", %"class.blink::ActiveScriptWrappable.1581", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration.1582", %"class.blink::HeapTaskRunnerTimer.1583", %"class.blink::HeapTaskRunnerTimer.1583", %"class.blink::HeapTaskRunnerTimer.1583", %"class.blink::HeapTaskRunnerTimer.1583", %"class.blink::HeapTaskRunnerTimer.1583", %"class.blink::Member.1586", %"class.blink::Member.1588", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.1590", %"class.blink::Member.1592", double, double, %"class.absl::optional.1594", double, double, double, i32, %"class.blink::Member.1603", %"class.blink::Member.640", i32, %"class.blink::HeapTaskRunnerTimer.1583", %"class.std::__1::unique_ptr.1605", %"class.cc::Layer"*, %class.scoped_refptr.1611, %"class.blink::Member.1612", double, i8, double, i32, i16, %"class.absl::optional.1614", i8, %"class.base::TimeTicks", %"class.blink::Member.1619", %"class.blink::Member.1621", %"class.blink::Member.1623", %"class.blink::HeapVector.1625", %"class.blink::Member.1633", %"class.blink::HeapVector.1635", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.1635", %"class.blink::HeapVector.1635", i32, %"class.blink::Member.1642", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.1676", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.1678", %"class.blink::Member.1681", %"class.blink::Member.1326", %"class.blink::Member.1683", %"class.blink::Member.1685", %"class.blink::Member.1692" }
%"class.blink::Supplementable.1573" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1574" }
%"class.blink::HeapHashMap.1574" = type { %"class.WTF::HashMap.1577" }
%"class.WTF::HashMap.1577" = type { %"class.WTF::HashTable.1578" }
%"class.WTF::HashTable.1578" = type <{ %"struct.WTF::KeyValuePair.1580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1580" = type opaque
%"class.blink::ActiveScriptWrappable.1581" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.1582" = type { i8 }
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.1594" = type { %"class.absl::optional_internal::optional_data.1595" }
%"class.absl::optional_internal::optional_data.1595" = type { %"class.absl::optional_internal::optional_data_base.1596" }
%"class.absl::optional_internal::optional_data_base.1596" = type { %"class.absl::optional_internal::optional_data_dtor_base.1597" }
%"class.absl::optional_internal::optional_data_dtor_base.1597" = type { i8, %union.anon.1598 }
%union.anon.1598 = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer.1583" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1584", { i64, i64 } }
%"class.blink::WeakMember.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::HTMLMediaElement"* }
%"class.std::__1::unique_ptr.1605" = type { %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%class.scoped_refptr.1611 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.1614" = type { %"class.absl::optional_internal::optional_data.1615" }
%"class.absl::optional_internal::optional_data.1615" = type { %"class.absl::optional_internal::optional_data_base.1616" }
%"class.absl::optional_internal::optional_data_base.1616" = type { %"class.absl::optional_internal::optional_data_dtor_base.1617" }
%"class.absl::optional_internal::optional_data_dtor_base.1617" = type { i8, %union.anon.1618 }
%union.anon.1618 = type { i8 }
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapVector.1625" = type { %"class.WTF::Vector.1628" }
%"class.WTF::Vector.1628" = type { %"class.WTF::VectorBuffer.1629" }
%"class.WTF::VectorBuffer.1629" = type { %"class.WTF::VectorBufferBase.1630" }
%"class.WTF::VectorBufferBase.1630" = type { %"class.blink::Member.1631"*, i32, i32 }
%"class.blink::Member.1631" = type opaque
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.1635" = type { %"class.WTF::Vector.1638" }
%"class.WTF::Vector.1638" = type { %"class.WTF::VectorBuffer.1639" }
%"class.WTF::VectorBuffer.1639" = type { %"class.WTF::VectorBufferBase.1640" }
%"class.WTF::VectorBufferBase.1640" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.1644, %"class.blink::Member.1672", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.1644 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.1646, %"class.std::__1::unique_ptr.1647", %"class.std::__1::unique_ptr.1663", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.1671" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1645" }>
%"class.base::RefCountedThreadSafe.1645" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.1646 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.1650", i8, i64, i32, %"class.std::__1::vector.1653", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.1650" = type { %"class.std::__1::__compressed_pair.1651" }
%"class.std::__1::__compressed_pair.1651" = type { %"struct.std::__1::__compressed_pair_elem.1652" }
%"struct.std::__1::__compressed_pair_elem.1652" = type { float* }
%"class.std::__1::vector.1653" = type { %"class.std::__1::__vector_base.1654" }
%"class.std::__1::__vector_base.1654" = type { float**, float**, %"class.std::__1::__compressed_pair.1655" }
%"class.std::__1::__compressed_pair.1655" = type { %"struct.std::__1::__compressed_pair_elem.1656" }
%"struct.std::__1::__compressed_pair_elem.1656" = type { float** }
%"class.std::__1::unique_ptr.1663" = type { %"class.std::__1::__compressed_pair.1664" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.1670", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe.1670" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1671" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.1642" }
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1680" }
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1585" }
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::DisallowNewWrapper.1687"* }
%"class.blink::DisallowNewWrapper.1687" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.1690" }
%"class.blink::Member.1690" = type { %"class.blink::MemberBase.1691" }
%"class.blink::MemberBase.1691" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::DisallowNewWrapper.1694"* }
%"class.blink::DisallowNewWrapper.1694" = type opaque
%"class.blink::Supplementable.1695" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1696" }
%"class.blink::HeapHashMap.1696" = type { %"class.WTF::HashMap.1699" }
%"class.WTF::HashMap.1699" = type { %"class.WTF::HashTable.1700" }
%"class.WTF::HashTable.1700" = type <{ %"struct.WTF::KeyValuePair.1702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1702" = type opaque
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1707", %"class.blink::Member.1093", %"class.blink::Member.1708", %"class.blink::Member.1708", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.1720", %"class.std::__1::unique_ptr.1721", %"class.std::__1::unique_ptr.1721", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.1727" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.1707" = type { i8 }
%"class.blink::Member.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.1712", float, i8, %class.scoped_refptr.1714, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.1714 = type { %"class.blink::Image"* }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1715" }
%"class.WTF::HashMap.1715" = type { %"class.WTF::HashTable.1716" }
%"class.WTF::HashTable.1716" = type <{ %"struct.WTF::KeyValuePair.1719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1719" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.1720" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1721" = type { %"class.std::__1::__compressed_pair.1722" }
%"class.std::__1::__compressed_pair.1722" = type { %"struct.std::__1::__compressed_pair_elem.1723" }
%"struct.std::__1::__compressed_pair_elem.1723" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.1727" = type { %"class.WTF::Vector.1730" }
%"class.WTF::Vector.1730" = type { %"class.WTF::VectorBuffer.1731" }
%"class.WTF::VectorBuffer.1731" = type { %"class.WTF::VectorBufferBase.1732" }
%"class.WTF::VectorBufferBase.1732" = type { %"class.blink::Member.1733"*, i32, i32 }
%"class.blink::Member.1733" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::MediaCustomControlsFullscreenDetector"* }
%"class.blink::MediaCustomControlsFullscreenDetector" = type opaque
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::VideoWakeLock"* }
%"class.blink::VideoWakeLock" = type opaque
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::MediaRemotingInterstitial"* }
%"class.blink::MediaRemotingInterstitial" = type opaque
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::PictureInPictureInterstitial"* }
%"class.blink::PictureInPictureInterstitial" = type opaque
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.1743", %"class.blink::FormAssociated", %"class.blink::Member.1703", %"class.blink::Member.1744", %"class.blink::Member.1746", %"class.WTF::AtomicString", float, %"class.blink::Member.1603", i8, i8, i32, %"class.std::__1::unique_ptr.1748" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::ActiveScriptWrappable.1743" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.std::__1::unique_ptr.1748" = type { %"class.std::__1::__compressed_pair.1749" }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem.1750" }
%"struct.std::__1::__compressed_pair_elem.1750" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::VideoFrame" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1754, %"class.blink::HeapVector.1761" }
%class.scoped_refptr.1754 = type { %"class.blink::VideoFrameHandle"* }
%"class.blink::VideoFrameHandle" = type { %"class.WTF::ThreadSafeRefCounted.1755", i8, %"class.WTF::Mutex", %class.sk_sp.689, %class.scoped_refptr.1757, %class.scoped_refptr.1758 }
%"class.WTF::ThreadSafeRefCounted.1755" = type { %"class.base::RefCountedThreadSafe.1756" }
%"class.base::RefCountedThreadSafe.1756" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1757 = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.1769", %"class.media::VideoFrameLayout", %class.scoped_refptr.1757, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback.1777", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr.442", %class.scoped_refptr.1778, %"class.std::__1::vector.1779", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.702", [4 x i8], %"class.absl::optional.707", %"class.std::__1::unique_ptr.1821" }
%"class.base::RefCountedThreadSafe.1769" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector.1770", i8, i64, i64 }
%"class.std::__1::vector.1770" = type { %"class.std::__1::__vector_base.1771" }
%"class.std::__1::__vector_base.1771" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair.1772" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %"struct.media::ColorPlaneLayout"* }
%"class.base::OnceCallback.1777" = type { %"class.base::internal::CallbackBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%class.scoped_refptr.1778 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.1779" = type { %"class.std::__1::__vector_base.1780" }
%"class.std::__1::__vector_base.1780" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.1781" }
%"class.std::__1::__compressed_pair.1781" = type { %"struct.std::__1::__compressed_pair_elem.1782" }
%"struct.std::__1::__compressed_pair_elem.1782" = type { %"class.base::OnceCallback"* }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional.1786", %"class.absl::optional.1786", %"class.absl::optional.1791", %"class.absl::optional.1796", %"class.absl::optional.1801", i8, %"class.absl::optional.938", %"class.absl::optional.1806", i8, %"class.absl::optional.1786", i8, [3 x i8], %"class.absl::optional.1811", i8, i8, i8, i8, i32, %"class.absl::optional.1816", i8, %"class.absl::optional.1806", %"class.absl::optional.1806", %"class.absl::optional.1806", %"class.absl::optional.1806", %"class.absl::optional.1806", %"class.absl::optional.1786", %"class.absl::optional.1786", %"class.absl::optional.938", %"class.absl::optional.1806", %"class.absl::optional.1786", %"class.absl::optional.938", %"class.absl::optional.1791" }
%"class.absl::optional.1796" = type { %"class.absl::optional_internal::optional_data.1797" }
%"class.absl::optional_internal::optional_data.1797" = type { %"class.absl::optional_internal::optional_data_base.1798" }
%"class.absl::optional_internal::optional_data_base.1798" = type { %"class.absl::optional_internal::optional_data_dtor_base.1799" }
%"class.absl::optional_internal::optional_data_dtor_base.1799" = type { i8, %union.anon.1800 }
%union.anon.1800 = type { %"class.gfx::Rect" }
%"class.absl::optional.1801" = type { %"class.absl::optional_internal::optional_data.1802" }
%"class.absl::optional_internal::optional_data.1802" = type { %"class.absl::optional_internal::optional_data_base.1803" }
%"class.absl::optional_internal::optional_data_base.1803" = type { %"class.absl::optional_internal::optional_data_dtor_base.1804" }
%"class.absl::optional_internal::optional_data_dtor_base.1804" = type { i8, %union.anon.1805 }
%union.anon.1805 = type { i32 }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { double }
%"class.absl::optional.1786" = type { %"class.absl::optional_internal::optional_data.1787" }
%"class.absl::optional_internal::optional_data.1787" = type { %"class.absl::optional_internal::optional_data_base.1788" }
%"class.absl::optional_internal::optional_data_base.1788" = type { %"class.absl::optional_internal::optional_data_dtor_base.1789" }
%"class.absl::optional_internal::optional_data_dtor_base.1789" = type { i8, %union.anon.1790 }
%union.anon.1790 = type { %"class.base::TimeTicks" }
%"class.absl::optional.1791" = type { %"class.absl::optional_internal::optional_data.1792" }
%"class.absl::optional_internal::optional_data.1792" = type { %"class.absl::optional_internal::optional_data_base.1793" }
%"class.absl::optional_internal::optional_data_base.1793" = type { %"class.absl::optional_internal::optional_data_dtor_base.1794" }
%"class.absl::optional_internal::optional_data_dtor_base.1794" = type { i8, %union.anon.1795 }
%union.anon.1795 = type { i32 }
%"class.std::__1::unique_ptr.1821" = type { %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { i8* }
%class.scoped_refptr.1758 = type { %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* }
%"class.blink::WebCodecsLogger::VideoFrameCloseAuditor" = type <{ %"class.WTF::ThreadSafeRefCounted.1759", i8, [3 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1759" = type { %"class.base::RefCountedThreadSafe.1760" }
%"class.base::RefCountedThreadSafe.1760" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::HeapVector.1761" = type { %"class.WTF::Vector.1764" }
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766" }
%"class.WTF::VectorBufferBase.1766" = type { %"class.blink::Member.1767"*, i32, i32 }
%"class.blink::Member.1767" = type opaque
%"class.blink::ImageData" = type { %"class.blink::ScriptWrappable", %"class.blink::ImageBitmapSource", %"class.blink::IntSize", %"class.blink::Member.1825", %"class.blink::Member.1827", %"class.blink::NotShared", %"class.blink::NotShared.1831", %"class.blink::NotShared.1835", i32, i32 }
%"class.blink::Member.1825" = type { %"class.blink::MemberBase.1826" }
%"class.blink::MemberBase.1826" = type { %"class.blink::ImageDataSettings"* }
%"class.blink::ImageDataSettings" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.1827" = type { %"class.blink::MemberBase.1828" }
%"class.blink::MemberBase.1828" = type { %"class.blink::V8UnionFloat32ArrayOrUint16ArrayOrUint8ClampedArray"* }
%"class.blink::V8UnionFloat32ArrayOrUint16ArrayOrUint8ClampedArray" = type opaque
%"class.blink::NotShared" = type { %"class.blink::Member.1829" }
%"class.blink::Member.1829" = type { %"class.blink::MemberBase.1830" }
%"class.blink::MemberBase.1830" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::NotShared.1831" = type { %"class.blink::Member.1832" }
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::DOMTypedArray.1834"* }
%"class.blink::DOMTypedArray.1834" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::NotShared.1835" = type { %"class.blink::Member.1836" }
%"class.blink::Member.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::DOMTypedArray.1838"* }
%"class.blink::DOMTypedArray.1838" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::ImageBitmap" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1023, i8, i32 }
%"class.blink::TypedFlexibleArrayBufferView" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847" }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.blink::TypedFlexibleArrayBufferView.1844" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::MaybeShared.1854" = type { %"class.blink::Member.1836" }
%"class.blink::MaybeShared.1855" = type { %"class.blink::Member.1856" }
%"class.blink::Member.1856" = type { %"class.blink::MemberBase.1857" }
%"class.blink::MemberBase.1857" = type { %"class.blink::DOMTypedArray.1838"* }
%"class.v8::Isolate::DisallowJavascriptExecutionScope" = type <{ i32, [4 x i8], %"class.v8::Isolate"*, i8, i8, i8, [5 x i8] }>
%"class.blink::NoAllocDirectCallExceptionState" = type { %"class.blink::ExceptionState", %"class.blink::NoAllocDirectCallHost"*, %"class.base::OnceCallback" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ExceptionToRejectPromiseScope" = type { %"class.v8::FunctionCallbackInfo"*, %"class.blink::ExceptionState"* }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.510", %"class.blink::ScriptValue" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.177", %"class.v8::Local.183", %"class.v8::Local.1523", %"class.v8::Local.1523", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.177" = type { %"class.v8::Object"* }
%"class.v8::Local.183" = type { %"class.v8::Value"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_ = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIiLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIiLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIiLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_ = comdat any

$_ZN5blink29ExceptionToRejectPromiseScopeD2Ev = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

@.str = private unnamed_addr constant [22 x i8] c"WebGLRenderingContext\00", align 1
@_ZN5blink23V8WebGLRenderingContext18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink23V8WebGLRenderingContext24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink23V8WebGLRenderingContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink21WebGLRenderingContext18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink23V8WebGLRenderingContext18wrapper_type_info_E, align 8
@_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26CanvasAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context38DrawingBufferWidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context39DrawingBufferHeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [7 x i8] c"canvas\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"drawingBufferWidth\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"drawingBufferHeight\00", align 1
@_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E19kConstantValueTable = internal constant [296 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"] [%"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i64 256 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0), i64 1024 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i32 0, i32 0), i64 16384 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i64 0 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 1 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i64 2 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i64 3 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i64 4 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i64 5 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i64 6 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i64 0 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i64 1 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i64 768 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0), i64 769 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i64 770 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0), i64 771 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i64 772 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i32 0, i32 0), i64 773 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), i64 774 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), i64 775 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i32 0, i32 0), i64 776 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i64 32774 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i64 32777 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i32 0, i32 0), i64 32777 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i64 34877 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i32 0, i32 0), i64 32778 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i32 0, i32 0), i64 32779 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i64 32968 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i32 0, i32 0), i64 32969 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i32 0, i32 0), i64 32970 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i64 32971 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i64 32769 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i32 0, i32 0), i64 32770 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i64 32771 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), i64 32772 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), i64 32773 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i64 34962 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i32 0, i32 0), i64 34963 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i32 0, i32 0), i64 34964 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i64 34965 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i64 35040 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i32 0, i32 0), i64 35044 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i32 0, i32 0), i64 35048 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i64 34660 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i64 34661 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0), i64 34342 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), i64 1028 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i64 1029 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i64 1032 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), i64 3553 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i32 0, i32 0), i64 2884 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i64 3042 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i64 3024 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i32 0, i32 0), i64 2960 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0), i64 2929 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i32 0, i32 0), i64 3089 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i32 0, i32 0), i64 32823 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i32 0, i32 0), i64 32926 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i32 0, i32 0), i64 32928 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i64 0 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.64, i32 0, i32 0), i64 1280 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i32 0, i32 0), i64 1281 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i32 0, i32 0), i64 1282 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i64 1285 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i64 2304 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i64 2305 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i32 0, i32 0), i64 2849 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i32 0, i32 0), i64 33901 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i32 0, i32 0), i64 33902 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73, i32 0, i32 0), i64 2885 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i64 2886 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i32 0, i32 0), i64 2928 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.76, i32 0, i32 0), i64 2930 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.77, i32 0, i32 0), i64 2931 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i32 0, i32 0), i64 2932 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.79, i32 0, i32 0), i64 2961 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i64 2962 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i32 0, i32 0), i64 2964 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.82, i32 0, i32 0), i64 2965 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.83, i32 0, i32 0), i64 2966 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), i64 2967 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.85, i32 0, i32 0), i64 2963 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.86, i32 0, i32 0), i64 2968 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i32 0, i32 0), i64 34816 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.88, i32 0, i32 0), i64 34817 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i32 0, i32 0), i64 34818 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i64 34819 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i32 0, i32 0), i64 36003 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.92, i32 0, i32 0), i64 36004 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i32 0, i32 0), i64 36005 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), i64 2978 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.95, i32 0, i32 0), i64 3088 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.96, i32 0, i32 0), i64 3106 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.97, i32 0, i32 0), i64 3107 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.98, i32 0, i32 0), i64 3317 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i32 0, i32 0), i64 3333 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.100, i32 0, i32 0), i64 3379 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.101, i32 0, i32 0), i64 3386 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i32 0, i32 0), i64 3408 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.103, i32 0, i32 0), i64 3410 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i32 0, i32 0), i64 3411 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0), i64 3412 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), i64 3413 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i32 0, i32 0), i64 3414 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.108, i32 0, i32 0), i64 3415 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.109, i32 0, i32 0), i64 10752 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.110, i32 0, i32 0), i64 32824 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i32 0, i32 0), i64 32873 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.112, i32 0, i32 0), i64 32936 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), i64 32937 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.114, i32 0, i32 0), i64 32938 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.115, i32 0, i32 0), i64 32939 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.116, i32 0, i32 0), i64 34467 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i32 0, i32 0), i64 4352 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i32 0, i32 0), i64 4353 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0), i64 4354 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.120, i32 0, i32 0), i64 33170 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0), i64 5120 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i32 0, i32 0), i64 5121 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), i64 5122 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124, i32 0, i32 0), i64 5123 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i32 0, i32 0), i64 5124 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.126, i32 0, i32 0), i64 5125 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i32 0, i32 0), i64 5126 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.128, i32 0, i32 0), i64 6402 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i32 0, i32 0), i64 6406 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i64 6407 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i64 6408 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.132, i32 0, i32 0), i64 6409 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.133, i32 0, i32 0), i64 6410 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.134, i32 0, i32 0), i64 32819 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.135, i32 0, i32 0), i64 32820 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.136, i32 0, i32 0), i64 33635 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.137, i32 0, i32 0), i64 35632 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i32 0, i32 0), i64 35633 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i32 0, i32 0), i64 34921 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.140, i32 0, i32 0), i64 36347 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.141, i32 0, i32 0), i64 36348 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.142, i32 0, i32 0), i64 35661 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.143, i32 0, i32 0), i64 35660 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.144, i32 0, i32 0), i64 34930 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i32 0, i32 0), i64 36349 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.146, i32 0, i32 0), i64 35663 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i32 0, i32 0), i64 35712 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.148, i32 0, i32 0), i64 35714 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.149, i32 0, i32 0), i64 35715 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.150, i32 0, i32 0), i64 35717 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.151, i32 0, i32 0), i64 35718 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.152, i32 0, i32 0), i64 35721 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.153, i32 0, i32 0), i64 35724 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.154, i32 0, i32 0), i64 35725 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.155, i32 0, i32 0), i64 512 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.156, i32 0, i32 0), i64 513 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i32 0, i32 0), i64 514 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i64 515 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.159, i32 0, i32 0), i64 516 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i32 0, i32 0), i64 517 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i32 0, i32 0), i64 518 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i64 519 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.163, i32 0, i32 0), i64 7680 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.164, i32 0, i32 0), i64 7681 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.165, i32 0, i32 0), i64 7682 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.166, i32 0, i32 0), i64 7683 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.167, i32 0, i32 0), i64 5386 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i32 0, i32 0), i64 34055 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.169, i32 0, i32 0), i64 34056 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i64 7936 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i32 0, i32 0), i64 7937 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i32 0, i32 0), i64 7938 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.173, i32 0, i32 0), i64 9728 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i32 0, i32 0), i64 9729 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.175, i32 0, i32 0), i64 9984 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.176, i32 0, i32 0), i64 9985 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.177, i32 0, i32 0), i64 9986 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.178, i32 0, i32 0), i64 9987 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.179, i32 0, i32 0), i64 10240 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.180, i32 0, i32 0), i64 10241 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i32 0, i32 0), i64 10242 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.182, i32 0, i32 0), i64 10243 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.183, i32 0, i32 0), i64 5890 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.184, i32 0, i32 0), i64 34067 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.185, i32 0, i32 0), i64 34068 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.186, i32 0, i32 0), i64 34069 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.187, i32 0, i32 0), i64 34070 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.188, i32 0, i32 0), i64 34071 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.189, i32 0, i32 0), i64 34072 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.190, i32 0, i32 0), i64 34073 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.191, i32 0, i32 0), i64 34074 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.192, i32 0, i32 0), i64 34076 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.193, i32 0, i32 0), i64 33984 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.194, i32 0, i32 0), i64 33985 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.195, i32 0, i32 0), i64 33986 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i32 0, i32 0), i64 33987 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.197, i32 0, i32 0), i64 33988 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i32 0, i32 0), i64 33989 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.199, i32 0, i32 0), i64 33990 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.200, i32 0, i32 0), i64 33991 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.201, i32 0, i32 0), i64 33992 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.202, i32 0, i32 0), i64 33993 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0), i64 33994 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i64 33995 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.205, i32 0, i32 0), i64 33996 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.206, i32 0, i32 0), i64 33997 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.207, i32 0, i32 0), i64 33998 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i64 33999 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0), i64 34000 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.210, i32 0, i32 0), i64 34001 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i32 0, i32 0), i64 34002 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.212, i32 0, i32 0), i64 34003 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.213, i32 0, i32 0), i64 34004 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.214, i32 0, i32 0), i64 34005 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.215, i32 0, i32 0), i64 34006 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.216, i32 0, i32 0), i64 34007 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.217, i32 0, i32 0), i64 34008 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.218, i32 0, i32 0), i64 34009 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i32 0, i32 0), i64 34010 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.220, i32 0, i32 0), i64 34011 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.221, i32 0, i32 0), i64 34012 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.222, i32 0, i32 0), i64 34013 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i32 0, i32 0), i64 34014 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.224, i32 0, i32 0), i64 34015 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.225, i32 0, i32 0), i64 34016 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), i64 10497 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i32 0, i32 0), i64 33071 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.228, i32 0, i32 0), i64 33648 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.229, i32 0, i32 0), i64 35664 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.230, i32 0, i32 0), i64 35665 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.231, i32 0, i32 0), i64 35666 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.232, i32 0, i32 0), i64 35667 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.233, i32 0, i32 0), i64 35668 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0), i64 35669 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i32 0, i32 0), i64 35670 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i32 0, i32 0), i64 35671 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.237, i32 0, i32 0), i64 35672 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.238, i32 0, i32 0), i64 35673 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.239, i32 0, i32 0), i64 35674 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.240, i32 0, i32 0), i64 35675 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.241, i32 0, i32 0), i64 35676 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.242, i32 0, i32 0), i64 35678 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.243, i32 0, i32 0), i64 35680 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.244, i32 0, i32 0), i64 34338 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.245, i32 0, i32 0), i64 34339 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.246, i32 0, i32 0), i64 34340 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.247, i32 0, i32 0), i64 34341 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.248, i32 0, i32 0), i64 34922 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.249, i32 0, i32 0), i64 34373 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.250, i32 0, i32 0), i64 34975 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.251, i32 0, i32 0), i64 35738 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.252, i32 0, i32 0), i64 35739 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i32 0, i32 0), i64 35713 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.254, i32 0, i32 0), i64 36336 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.255, i32 0, i32 0), i64 36337 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.256, i32 0, i32 0), i64 36338 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.257, i32 0, i32 0), i64 36339 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.258, i32 0, i32 0), i64 36340 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.259, i32 0, i32 0), i64 36341 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.260, i32 0, i32 0), i64 36160 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.261, i32 0, i32 0), i64 36161 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.262, i32 0, i32 0), i64 32854 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.263, i32 0, i32 0), i64 32855 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.264, i32 0, i32 0), i64 36194 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.265, i32 0, i32 0), i64 33189 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.266, i32 0, i32 0), i64 36168 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i32 0, i32 0), i64 34041 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.268, i32 0, i32 0), i64 36162 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.269, i32 0, i32 0), i64 36163 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i64 36164 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.271, i32 0, i32 0), i64 36176 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.272, i32 0, i32 0), i64 36177 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.273, i32 0, i32 0), i64 36178 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.274, i32 0, i32 0), i64 36179 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.275, i32 0, i32 0), i64 36180 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.276, i32 0, i32 0), i64 36181 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.277, i32 0, i32 0), i64 36048 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.278, i32 0, i32 0), i64 36049 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.279, i32 0, i32 0), i64 36050 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.280, i32 0, i32 0), i64 36051 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.281, i32 0, i32 0), i64 36064 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.282, i32 0, i32 0), i64 36096 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.283, i32 0, i32 0), i64 36128 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.284, i32 0, i32 0), i64 33306 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.285, i32 0, i32 0), i64 0 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.286, i32 0, i32 0), i64 36053 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.287, i32 0, i32 0), i64 36054 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.288, i32 0, i32 0), i64 36055 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.289, i32 0, i32 0), i64 36057 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.290, i32 0, i32 0), i64 36061 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.291, i32 0, i32 0), i64 36006 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.292, i32 0, i32 0), i64 36007 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.293, i32 0, i32 0), i64 34024 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.294, i32 0, i32 0), i64 1286 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.295, i32 0, i32 0), i64 37440 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.296, i32 0, i32 0), i64 37441 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.297, i32 0, i32 0), i64 37442 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.298, i32 0, i32 0), i64 37443 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.299, i32 0, i32 0), i64 37444 }], align 16
@.str.4 = private unnamed_addr constant [17 x i8] c"DEPTH_BUFFER_BIT\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"STENCIL_BUFFER_BIT\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"COLOR_BUFFER_BIT\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"POINTS\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"LINES\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"LINE_LOOP\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"LINE_STRIP\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"TRIANGLES\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"TRIANGLE_STRIP\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"TRIANGLE_FAN\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"ZERO\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"ONE\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"SRC_COLOR\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"ONE_MINUS_SRC_COLOR\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"SRC_ALPHA\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"ONE_MINUS_SRC_ALPHA\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"DST_ALPHA\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"ONE_MINUS_DST_ALPHA\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"DST_COLOR\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"ONE_MINUS_DST_COLOR\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"SRC_ALPHA_SATURATE\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"FUNC_ADD\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"BLEND_EQUATION\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"BLEND_EQUATION_RGB\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"BLEND_EQUATION_ALPHA\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"FUNC_SUBTRACT\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"FUNC_REVERSE_SUBTRACT\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"BLEND_DST_RGB\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"BLEND_SRC_RGB\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"BLEND_DST_ALPHA\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"BLEND_SRC_ALPHA\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"CONSTANT_COLOR\00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"ONE_MINUS_CONSTANT_COLOR\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"CONSTANT_ALPHA\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"ONE_MINUS_CONSTANT_ALPHA\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"BLEND_COLOR\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"ARRAY_BUFFER\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"ELEMENT_ARRAY_BUFFER\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"ARRAY_BUFFER_BINDING\00", align 1
@.str.43 = private unnamed_addr constant [29 x i8] c"ELEMENT_ARRAY_BUFFER_BINDING\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"STREAM_DRAW\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c"STATIC_DRAW\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"DYNAMIC_DRAW\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"BUFFER_SIZE\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"BUFFER_USAGE\00", align 1
@.str.49 = private unnamed_addr constant [22 x i8] c"CURRENT_VERTEX_ATTRIB\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"FRONT\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"BACK\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"FRONT_AND_BACK\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"TEXTURE_2D\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"CULL_FACE\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"BLEND\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"DITHER\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"STENCIL_TEST\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"DEPTH_TEST\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"SCISSOR_TEST\00", align 1
@.str.60 = private unnamed_addr constant [20 x i8] c"POLYGON_OFFSET_FILL\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"SAMPLE_ALPHA_TO_COVERAGE\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"SAMPLE_COVERAGE\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"NO_ERROR\00", align 1
@.str.64 = private unnamed_addr constant [13 x i8] c"INVALID_ENUM\00", align 1
@.str.65 = private unnamed_addr constant [14 x i8] c"INVALID_VALUE\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"INVALID_OPERATION\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"OUT_OF_MEMORY\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"CW\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"CCW\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"LINE_WIDTH\00", align 1
@.str.71 = private unnamed_addr constant [25 x i8] c"ALIASED_POINT_SIZE_RANGE\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"ALIASED_LINE_WIDTH_RANGE\00", align 1
@.str.73 = private unnamed_addr constant [15 x i8] c"CULL_FACE_MODE\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"FRONT_FACE\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"DEPTH_RANGE\00", align 1
@.str.76 = private unnamed_addr constant [16 x i8] c"DEPTH_WRITEMASK\00", align 1
@.str.77 = private unnamed_addr constant [18 x i8] c"DEPTH_CLEAR_VALUE\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"DEPTH_FUNC\00", align 1
@.str.79 = private unnamed_addr constant [20 x i8] c"STENCIL_CLEAR_VALUE\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"STENCIL_FUNC\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"STENCIL_FAIL\00", align 1
@.str.82 = private unnamed_addr constant [24 x i8] c"STENCIL_PASS_DEPTH_FAIL\00", align 1
@.str.83 = private unnamed_addr constant [24 x i8] c"STENCIL_PASS_DEPTH_PASS\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"STENCIL_REF\00", align 1
@.str.85 = private unnamed_addr constant [19 x i8] c"STENCIL_VALUE_MASK\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"STENCIL_WRITEMASK\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"STENCIL_BACK_FUNC\00", align 1
@.str.88 = private unnamed_addr constant [18 x i8] c"STENCIL_BACK_FAIL\00", align 1
@.str.89 = private unnamed_addr constant [29 x i8] c"STENCIL_BACK_PASS_DEPTH_FAIL\00", align 1
@.str.90 = private unnamed_addr constant [29 x i8] c"STENCIL_BACK_PASS_DEPTH_PASS\00", align 1
@.str.91 = private unnamed_addr constant [17 x i8] c"STENCIL_BACK_REF\00", align 1
@.str.92 = private unnamed_addr constant [24 x i8] c"STENCIL_BACK_VALUE_MASK\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"STENCIL_BACK_WRITEMASK\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"VIEWPORT\00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"SCISSOR_BOX\00", align 1
@.str.96 = private unnamed_addr constant [18 x i8] c"COLOR_CLEAR_VALUE\00", align 1
@.str.97 = private unnamed_addr constant [16 x i8] c"COLOR_WRITEMASK\00", align 1
@.str.98 = private unnamed_addr constant [17 x i8] c"UNPACK_ALIGNMENT\00", align 1
@.str.99 = private unnamed_addr constant [15 x i8] c"PACK_ALIGNMENT\00", align 1
@.str.100 = private unnamed_addr constant [17 x i8] c"MAX_TEXTURE_SIZE\00", align 1
@.str.101 = private unnamed_addr constant [18 x i8] c"MAX_VIEWPORT_DIMS\00", align 1
@.str.102 = private unnamed_addr constant [14 x i8] c"SUBPIXEL_BITS\00", align 1
@.str.103 = private unnamed_addr constant [9 x i8] c"RED_BITS\00", align 1
@.str.104 = private unnamed_addr constant [11 x i8] c"GREEN_BITS\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"BLUE_BITS\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"ALPHA_BITS\00", align 1
@.str.107 = private unnamed_addr constant [11 x i8] c"DEPTH_BITS\00", align 1
@.str.108 = private unnamed_addr constant [13 x i8] c"STENCIL_BITS\00", align 1
@.str.109 = private unnamed_addr constant [21 x i8] c"POLYGON_OFFSET_UNITS\00", align 1
@.str.110 = private unnamed_addr constant [22 x i8] c"POLYGON_OFFSET_FACTOR\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c"TEXTURE_BINDING_2D\00", align 1
@.str.112 = private unnamed_addr constant [15 x i8] c"SAMPLE_BUFFERS\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"SAMPLES\00", align 1
@.str.114 = private unnamed_addr constant [22 x i8] c"SAMPLE_COVERAGE_VALUE\00", align 1
@.str.115 = private unnamed_addr constant [23 x i8] c"SAMPLE_COVERAGE_INVERT\00", align 1
@.str.116 = private unnamed_addr constant [27 x i8] c"COMPRESSED_TEXTURE_FORMATS\00", align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"DONT_CARE\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"FASTEST\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"NICEST\00", align 1
@.str.120 = private unnamed_addr constant [21 x i8] c"GENERATE_MIPMAP_HINT\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"BYTE\00", align 1
@.str.122 = private unnamed_addr constant [14 x i8] c"UNSIGNED_BYTE\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"SHORT\00", align 1
@.str.124 = private unnamed_addr constant [15 x i8] c"UNSIGNED_SHORT\00", align 1
@.str.125 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.126 = private unnamed_addr constant [13 x i8] c"UNSIGNED_INT\00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c"FLOAT\00", align 1
@.str.128 = private unnamed_addr constant [16 x i8] c"DEPTH_COMPONENT\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"ALPHA\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"RGB\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"RGBA\00", align 1
@.str.132 = private unnamed_addr constant [10 x i8] c"LUMINANCE\00", align 1
@.str.133 = private unnamed_addr constant [16 x i8] c"LUMINANCE_ALPHA\00", align 1
@.str.134 = private unnamed_addr constant [23 x i8] c"UNSIGNED_SHORT_4_4_4_4\00", align 1
@.str.135 = private unnamed_addr constant [23 x i8] c"UNSIGNED_SHORT_5_5_5_1\00", align 1
@.str.136 = private unnamed_addr constant [21 x i8] c"UNSIGNED_SHORT_5_6_5\00", align 1
@.str.137 = private unnamed_addr constant [16 x i8] c"FRAGMENT_SHADER\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"VERTEX_SHADER\00", align 1
@.str.139 = private unnamed_addr constant [19 x i8] c"MAX_VERTEX_ATTRIBS\00", align 1
@.str.140 = private unnamed_addr constant [27 x i8] c"MAX_VERTEX_UNIFORM_VECTORS\00", align 1
@.str.141 = private unnamed_addr constant [20 x i8] c"MAX_VARYING_VECTORS\00", align 1
@.str.142 = private unnamed_addr constant [33 x i8] c"MAX_COMBINED_TEXTURE_IMAGE_UNITS\00", align 1
@.str.143 = private unnamed_addr constant [31 x i8] c"MAX_VERTEX_TEXTURE_IMAGE_UNITS\00", align 1
@.str.144 = private unnamed_addr constant [24 x i8] c"MAX_TEXTURE_IMAGE_UNITS\00", align 1
@.str.145 = private unnamed_addr constant [29 x i8] c"MAX_FRAGMENT_UNIFORM_VECTORS\00", align 1
@.str.146 = private unnamed_addr constant [12 x i8] c"SHADER_TYPE\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"DELETE_STATUS\00", align 1
@.str.148 = private unnamed_addr constant [12 x i8] c"LINK_STATUS\00", align 1
@.str.149 = private unnamed_addr constant [16 x i8] c"VALIDATE_STATUS\00", align 1
@.str.150 = private unnamed_addr constant [17 x i8] c"ATTACHED_SHADERS\00", align 1
@.str.151 = private unnamed_addr constant [16 x i8] c"ACTIVE_UNIFORMS\00", align 1
@.str.152 = private unnamed_addr constant [18 x i8] c"ACTIVE_ATTRIBUTES\00", align 1
@.str.153 = private unnamed_addr constant [25 x i8] c"SHADING_LANGUAGE_VERSION\00", align 1
@.str.154 = private unnamed_addr constant [16 x i8] c"CURRENT_PROGRAM\00", align 1
@.str.155 = private unnamed_addr constant [6 x i8] c"NEVER\00", align 1
@.str.156 = private unnamed_addr constant [5 x i8] c"LESS\00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"EQUAL\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"LEQUAL\00", align 1
@.str.159 = private unnamed_addr constant [8 x i8] c"GREATER\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"NOTEQUAL\00", align 1
@.str.161 = private unnamed_addr constant [7 x i8] c"GEQUAL\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"ALWAYS\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"KEEP\00", align 1
@.str.164 = private unnamed_addr constant [8 x i8] c"REPLACE\00", align 1
@.str.165 = private unnamed_addr constant [5 x i8] c"INCR\00", align 1
@.str.166 = private unnamed_addr constant [5 x i8] c"DECR\00", align 1
@.str.167 = private unnamed_addr constant [7 x i8] c"INVERT\00", align 1
@.str.168 = private unnamed_addr constant [10 x i8] c"INCR_WRAP\00", align 1
@.str.169 = private unnamed_addr constant [10 x i8] c"DECR_WRAP\00", align 1
@.str.170 = private unnamed_addr constant [7 x i8] c"VENDOR\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"RENDERER\00", align 1
@.str.172 = private unnamed_addr constant [8 x i8] c"VERSION\00", align 1
@.str.173 = private unnamed_addr constant [8 x i8] c"NEAREST\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c"LINEAR\00", align 1
@.str.175 = private unnamed_addr constant [23 x i8] c"NEAREST_MIPMAP_NEAREST\00", align 1
@.str.176 = private unnamed_addr constant [22 x i8] c"LINEAR_MIPMAP_NEAREST\00", align 1
@.str.177 = private unnamed_addr constant [22 x i8] c"NEAREST_MIPMAP_LINEAR\00", align 1
@.str.178 = private unnamed_addr constant [21 x i8] c"LINEAR_MIPMAP_LINEAR\00", align 1
@.str.179 = private unnamed_addr constant [19 x i8] c"TEXTURE_MAG_FILTER\00", align 1
@.str.180 = private unnamed_addr constant [19 x i8] c"TEXTURE_MIN_FILTER\00", align 1
@.str.181 = private unnamed_addr constant [15 x i8] c"TEXTURE_WRAP_S\00", align 1
@.str.182 = private unnamed_addr constant [15 x i8] c"TEXTURE_WRAP_T\00", align 1
@.str.183 = private unnamed_addr constant [8 x i8] c"TEXTURE\00", align 1
@.str.184 = private unnamed_addr constant [17 x i8] c"TEXTURE_CUBE_MAP\00", align 1
@.str.185 = private unnamed_addr constant [25 x i8] c"TEXTURE_BINDING_CUBE_MAP\00", align 1
@.str.186 = private unnamed_addr constant [28 x i8] c"TEXTURE_CUBE_MAP_POSITIVE_X\00", align 1
@.str.187 = private unnamed_addr constant [28 x i8] c"TEXTURE_CUBE_MAP_NEGATIVE_X\00", align 1
@.str.188 = private unnamed_addr constant [28 x i8] c"TEXTURE_CUBE_MAP_POSITIVE_Y\00", align 1
@.str.189 = private unnamed_addr constant [28 x i8] c"TEXTURE_CUBE_MAP_NEGATIVE_Y\00", align 1
@.str.190 = private unnamed_addr constant [28 x i8] c"TEXTURE_CUBE_MAP_POSITIVE_Z\00", align 1
@.str.191 = private unnamed_addr constant [28 x i8] c"TEXTURE_CUBE_MAP_NEGATIVE_Z\00", align 1
@.str.192 = private unnamed_addr constant [26 x i8] c"MAX_CUBE_MAP_TEXTURE_SIZE\00", align 1
@.str.193 = private unnamed_addr constant [9 x i8] c"TEXTURE0\00", align 1
@.str.194 = private unnamed_addr constant [9 x i8] c"TEXTURE1\00", align 1
@.str.195 = private unnamed_addr constant [9 x i8] c"TEXTURE2\00", align 1
@.str.196 = private unnamed_addr constant [9 x i8] c"TEXTURE3\00", align 1
@.str.197 = private unnamed_addr constant [9 x i8] c"TEXTURE4\00", align 1
@.str.198 = private unnamed_addr constant [9 x i8] c"TEXTURE5\00", align 1
@.str.199 = private unnamed_addr constant [9 x i8] c"TEXTURE6\00", align 1
@.str.200 = private unnamed_addr constant [9 x i8] c"TEXTURE7\00", align 1
@.str.201 = private unnamed_addr constant [9 x i8] c"TEXTURE8\00", align 1
@.str.202 = private unnamed_addr constant [9 x i8] c"TEXTURE9\00", align 1
@.str.203 = private unnamed_addr constant [10 x i8] c"TEXTURE10\00", align 1
@.str.204 = private unnamed_addr constant [10 x i8] c"TEXTURE11\00", align 1
@.str.205 = private unnamed_addr constant [10 x i8] c"TEXTURE12\00", align 1
@.str.206 = private unnamed_addr constant [10 x i8] c"TEXTURE13\00", align 1
@.str.207 = private unnamed_addr constant [10 x i8] c"TEXTURE14\00", align 1
@.str.208 = private unnamed_addr constant [10 x i8] c"TEXTURE15\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"TEXTURE16\00", align 1
@.str.210 = private unnamed_addr constant [10 x i8] c"TEXTURE17\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"TEXTURE18\00", align 1
@.str.212 = private unnamed_addr constant [10 x i8] c"TEXTURE19\00", align 1
@.str.213 = private unnamed_addr constant [10 x i8] c"TEXTURE20\00", align 1
@.str.214 = private unnamed_addr constant [10 x i8] c"TEXTURE21\00", align 1
@.str.215 = private unnamed_addr constant [10 x i8] c"TEXTURE22\00", align 1
@.str.216 = private unnamed_addr constant [10 x i8] c"TEXTURE23\00", align 1
@.str.217 = private unnamed_addr constant [10 x i8] c"TEXTURE24\00", align 1
@.str.218 = private unnamed_addr constant [10 x i8] c"TEXTURE25\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"TEXTURE26\00", align 1
@.str.220 = private unnamed_addr constant [10 x i8] c"TEXTURE27\00", align 1
@.str.221 = private unnamed_addr constant [10 x i8] c"TEXTURE28\00", align 1
@.str.222 = private unnamed_addr constant [10 x i8] c"TEXTURE29\00", align 1
@.str.223 = private unnamed_addr constant [10 x i8] c"TEXTURE30\00", align 1
@.str.224 = private unnamed_addr constant [10 x i8] c"TEXTURE31\00", align 1
@.str.225 = private unnamed_addr constant [15 x i8] c"ACTIVE_TEXTURE\00", align 1
@.str.226 = private unnamed_addr constant [7 x i8] c"REPEAT\00", align 1
@.str.227 = private unnamed_addr constant [14 x i8] c"CLAMP_TO_EDGE\00", align 1
@.str.228 = private unnamed_addr constant [16 x i8] c"MIRRORED_REPEAT\00", align 1
@.str.229 = private unnamed_addr constant [11 x i8] c"FLOAT_VEC2\00", align 1
@.str.230 = private unnamed_addr constant [11 x i8] c"FLOAT_VEC3\00", align 1
@.str.231 = private unnamed_addr constant [11 x i8] c"FLOAT_VEC4\00", align 1
@.str.232 = private unnamed_addr constant [9 x i8] c"INT_VEC2\00", align 1
@.str.233 = private unnamed_addr constant [9 x i8] c"INT_VEC3\00", align 1
@.str.234 = private unnamed_addr constant [9 x i8] c"INT_VEC4\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"BOOL\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c"BOOL_VEC2\00", align 1
@.str.237 = private unnamed_addr constant [10 x i8] c"BOOL_VEC3\00", align 1
@.str.238 = private unnamed_addr constant [10 x i8] c"BOOL_VEC4\00", align 1
@.str.239 = private unnamed_addr constant [11 x i8] c"FLOAT_MAT2\00", align 1
@.str.240 = private unnamed_addr constant [11 x i8] c"FLOAT_MAT3\00", align 1
@.str.241 = private unnamed_addr constant [11 x i8] c"FLOAT_MAT4\00", align 1
@.str.242 = private unnamed_addr constant [11 x i8] c"SAMPLER_2D\00", align 1
@.str.243 = private unnamed_addr constant [13 x i8] c"SAMPLER_CUBE\00", align 1
@.str.244 = private unnamed_addr constant [28 x i8] c"VERTEX_ATTRIB_ARRAY_ENABLED\00", align 1
@.str.245 = private unnamed_addr constant [25 x i8] c"VERTEX_ATTRIB_ARRAY_SIZE\00", align 1
@.str.246 = private unnamed_addr constant [27 x i8] c"VERTEX_ATTRIB_ARRAY_STRIDE\00", align 1
@.str.247 = private unnamed_addr constant [25 x i8] c"VERTEX_ATTRIB_ARRAY_TYPE\00", align 1
@.str.248 = private unnamed_addr constant [31 x i8] c"VERTEX_ATTRIB_ARRAY_NORMALIZED\00", align 1
@.str.249 = private unnamed_addr constant [28 x i8] c"VERTEX_ATTRIB_ARRAY_POINTER\00", align 1
@.str.250 = private unnamed_addr constant [35 x i8] c"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\00", align 1
@.str.251 = private unnamed_addr constant [31 x i8] c"IMPLEMENTATION_COLOR_READ_TYPE\00", align 1
@.str.252 = private unnamed_addr constant [33 x i8] c"IMPLEMENTATION_COLOR_READ_FORMAT\00", align 1
@.str.253 = private unnamed_addr constant [15 x i8] c"COMPILE_STATUS\00", align 1
@.str.254 = private unnamed_addr constant [10 x i8] c"LOW_FLOAT\00", align 1
@.str.255 = private unnamed_addr constant [13 x i8] c"MEDIUM_FLOAT\00", align 1
@.str.256 = private unnamed_addr constant [11 x i8] c"HIGH_FLOAT\00", align 1
@.str.257 = private unnamed_addr constant [8 x i8] c"LOW_INT\00", align 1
@.str.258 = private unnamed_addr constant [11 x i8] c"MEDIUM_INT\00", align 1
@.str.259 = private unnamed_addr constant [9 x i8] c"HIGH_INT\00", align 1
@.str.260 = private unnamed_addr constant [12 x i8] c"FRAMEBUFFER\00", align 1
@.str.261 = private unnamed_addr constant [13 x i8] c"RENDERBUFFER\00", align 1
@.str.262 = private unnamed_addr constant [6 x i8] c"RGBA4\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"RGB5_A1\00", align 1
@.str.264 = private unnamed_addr constant [7 x i8] c"RGB565\00", align 1
@.str.265 = private unnamed_addr constant [18 x i8] c"DEPTH_COMPONENT16\00", align 1
@.str.266 = private unnamed_addr constant [15 x i8] c"STENCIL_INDEX8\00", align 1
@.str.267 = private unnamed_addr constant [14 x i8] c"DEPTH_STENCIL\00", align 1
@.str.268 = private unnamed_addr constant [19 x i8] c"RENDERBUFFER_WIDTH\00", align 1
@.str.269 = private unnamed_addr constant [20 x i8] c"RENDERBUFFER_HEIGHT\00", align 1
@.str.270 = private unnamed_addr constant [29 x i8] c"RENDERBUFFER_INTERNAL_FORMAT\00", align 1
@.str.271 = private unnamed_addr constant [22 x i8] c"RENDERBUFFER_RED_SIZE\00", align 1
@.str.272 = private unnamed_addr constant [24 x i8] c"RENDERBUFFER_GREEN_SIZE\00", align 1
@.str.273 = private unnamed_addr constant [23 x i8] c"RENDERBUFFER_BLUE_SIZE\00", align 1
@.str.274 = private unnamed_addr constant [24 x i8] c"RENDERBUFFER_ALPHA_SIZE\00", align 1
@.str.275 = private unnamed_addr constant [24 x i8] c"RENDERBUFFER_DEPTH_SIZE\00", align 1
@.str.276 = private unnamed_addr constant [26 x i8] c"RENDERBUFFER_STENCIL_SIZE\00", align 1
@.str.277 = private unnamed_addr constant [35 x i8] c"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\00", align 1
@.str.278 = private unnamed_addr constant [35 x i8] c"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\00", align 1
@.str.279 = private unnamed_addr constant [37 x i8] c"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\00", align 1
@.str.280 = private unnamed_addr constant [45 x i8] c"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\00", align 1
@.str.281 = private unnamed_addr constant [18 x i8] c"COLOR_ATTACHMENT0\00", align 1
@.str.282 = private unnamed_addr constant [17 x i8] c"DEPTH_ATTACHMENT\00", align 1
@.str.283 = private unnamed_addr constant [19 x i8] c"STENCIL_ATTACHMENT\00", align 1
@.str.284 = private unnamed_addr constant [25 x i8] c"DEPTH_STENCIL_ATTACHMENT\00", align 1
@.str.285 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.286 = private unnamed_addr constant [21 x i8] c"FRAMEBUFFER_COMPLETE\00", align 1
@.str.287 = private unnamed_addr constant [34 x i8] c"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\00", align 1
@.str.288 = private unnamed_addr constant [42 x i8] c"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\00", align 1
@.str.289 = private unnamed_addr constant [34 x i8] c"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\00", align 1
@.str.290 = private unnamed_addr constant [24 x i8] c"FRAMEBUFFER_UNSUPPORTED\00", align 1
@.str.291 = private unnamed_addr constant [20 x i8] c"FRAMEBUFFER_BINDING\00", align 1
@.str.292 = private unnamed_addr constant [21 x i8] c"RENDERBUFFER_BINDING\00", align 1
@.str.293 = private unnamed_addr constant [22 x i8] c"MAX_RENDERBUFFER_SIZE\00", align 1
@.str.294 = private unnamed_addr constant [30 x i8] c"INVALID_FRAMEBUFFER_OPERATION\00", align 1
@.str.295 = private unnamed_addr constant [20 x i8] c"UNPACK_FLIP_Y_WEBGL\00", align 1
@.str.296 = private unnamed_addr constant [31 x i8] c"UNPACK_PREMULTIPLY_ALPHA_WEBGL\00", align 1
@.str.297 = private unnamed_addr constant [19 x i8] c"CONTEXT_LOST_WEBGL\00", align 1
@.str.298 = private unnamed_addr constant [35 x i8] c"UNPACK_COLORSPACE_CONVERSION_WEBGL\00", align 1
@.str.299 = private unnamed_addr constant [22 x i8] c"BROWSER_DEFAULT_WEBGL\00", align 1
@_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [133 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.300, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30ActiveTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.301, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29AttachShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.302, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35BindAttribLocationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.303, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32BindFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.304, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33BindRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.305, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28BindTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.306, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27BlendColorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.307, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30BlendEquationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.308, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context38BlendEquationSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.309, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26BlendFuncOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.310, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34BlendFuncSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.311, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27BufferDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.312, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30BufferSubDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.313, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context39CheckFramebufferStatusOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.314, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context22ClearOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.315, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27ClearColorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27ClearDepthOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.317, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29ClearStencilOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.318, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26ColorMaskOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.319, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30CompileShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.320, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context37CompressedTexImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 7, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.321, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context40CompressedTexSubImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 8, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31CopyTexImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 8, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.323, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34CopyTexSubImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 8, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.324, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29CreateBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.325, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34CreateFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.326, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30CreateProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.327, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35CreateRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.328, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29CreateShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.329, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30CreateTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.330, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25CullFaceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DeleteBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.332, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34DeleteFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.333, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30DeleteProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.334, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35DeleteRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.335, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DeleteShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.336, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30DeleteTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.337, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26DepthFuncOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.338, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26DepthMaskOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.339, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27DepthRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.340, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DetachShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.341, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context24DisableOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.342, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context41DisableVertexAttribArrayOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.343, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context23EnableOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.344, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context40EnableVertexAttribArrayOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.345, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context23FinishOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.346, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context22FlushOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.347, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context40FramebufferRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.348, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context37FramebufferTexture2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 5, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26FrontFaceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.350, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31GenerateMipmapOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.351, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetActiveAttribOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.352, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33GetActiveUniformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.353, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetAttachedShadersOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.354, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34GetAttribLocationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.355, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetBufferParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.356, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context37GetContextAttributesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.357, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25GetErrorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29GetExtensionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.359, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context50GetFramebufferAttachmentParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.360, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29GetParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.361, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34GetProgramInfoLogOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.362, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36GetProgramParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.363, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context41GetRenderbufferParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.364, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33GetShaderInfoLogOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.365, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetShaderParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.366, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context41GetShaderPrecisionFormatOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.367, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetShaderSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.368, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context39GetSupportedExtensionsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.369, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetTexParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.370, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27GetUniformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.371, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetUniformLocationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.372, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetVertexAttribOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.373, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context38GetVertexAttribOffsetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.374, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context21HintOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.375, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25IsBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.376, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30IsContextLostOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26IsEnabledOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.378, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30IsFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.379, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26IsProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.380, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31IsRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.381, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25IsShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.382, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26IsTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.383, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26LineWidthOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.384, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28LinkProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.385, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28PixelStoreiOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.386, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30PolygonOffsetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.387, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27ReadPixelsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 7, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.388, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36RenderbufferStorageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.389, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31SampleCoverageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.390, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context24ScissorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29ShaderSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.392, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28StencilFuncOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.393, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36StencilFuncSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.394, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28StencilMaskOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.395, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36StencilMaskSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.396, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26StencilOpOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.397, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34StencilOpSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27TexImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 6, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.399, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30TexParameterfOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.400, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30TexParameteriOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30TexSubImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 7, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.402, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform1FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.403, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform1FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.404, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform1IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.405, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform1IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.406, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform2FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.407, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform2FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.408, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform2IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.409, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform2IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.410, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform3FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform3FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.412, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform3IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform3IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform4FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 5, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.415, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform4FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform4IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 5, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.417, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform4IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.418, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33UniformMatrix2FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.419, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33UniformMatrix3FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.420, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33UniformMatrix4FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.421, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27UseProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.422, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32ValidateProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.423, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib1FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.424, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib1FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.425, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib2FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.426, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib2FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.427, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib3FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib3FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.429, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib4FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 5, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.430, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib4FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.431, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36VertexAttribPointerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 6, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.432, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25ViewportOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }], align 16
@.str.300 = private unnamed_addr constant [14 x i8] c"activeTexture\00", align 1
@.str.301 = private unnamed_addr constant [13 x i8] c"attachShader\00", align 1
@.str.302 = private unnamed_addr constant [19 x i8] c"bindAttribLocation\00", align 1
@.str.303 = private unnamed_addr constant [16 x i8] c"bindFramebuffer\00", align 1
@.str.304 = private unnamed_addr constant [17 x i8] c"bindRenderbuffer\00", align 1
@.str.305 = private unnamed_addr constant [12 x i8] c"bindTexture\00", align 1
@.str.306 = private unnamed_addr constant [11 x i8] c"blendColor\00", align 1
@.str.307 = private unnamed_addr constant [14 x i8] c"blendEquation\00", align 1
@.str.308 = private unnamed_addr constant [22 x i8] c"blendEquationSeparate\00", align 1
@.str.309 = private unnamed_addr constant [10 x i8] c"blendFunc\00", align 1
@.str.310 = private unnamed_addr constant [18 x i8] c"blendFuncSeparate\00", align 1
@.str.311 = private unnamed_addr constant [11 x i8] c"bufferData\00", align 1
@.str.312 = private unnamed_addr constant [14 x i8] c"bufferSubData\00", align 1
@.str.313 = private unnamed_addr constant [23 x i8] c"checkFramebufferStatus\00", align 1
@.str.314 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.315 = private unnamed_addr constant [11 x i8] c"clearColor\00", align 1
@.str.316 = private unnamed_addr constant [11 x i8] c"clearDepth\00", align 1
@.str.317 = private unnamed_addr constant [13 x i8] c"clearStencil\00", align 1
@.str.318 = private unnamed_addr constant [10 x i8] c"colorMask\00", align 1
@.str.319 = private unnamed_addr constant [14 x i8] c"compileShader\00", align 1
@.str.320 = private unnamed_addr constant [21 x i8] c"compressedTexImage2D\00", align 1
@.str.321 = private unnamed_addr constant [24 x i8] c"compressedTexSubImage2D\00", align 1
@.str.322 = private unnamed_addr constant [15 x i8] c"copyTexImage2D\00", align 1
@.str.323 = private unnamed_addr constant [18 x i8] c"copyTexSubImage2D\00", align 1
@.str.324 = private unnamed_addr constant [13 x i8] c"createBuffer\00", align 1
@.str.325 = private unnamed_addr constant [18 x i8] c"createFramebuffer\00", align 1
@.str.326 = private unnamed_addr constant [14 x i8] c"createProgram\00", align 1
@.str.327 = private unnamed_addr constant [19 x i8] c"createRenderbuffer\00", align 1
@.str.328 = private unnamed_addr constant [13 x i8] c"createShader\00", align 1
@.str.329 = private unnamed_addr constant [14 x i8] c"createTexture\00", align 1
@.str.330 = private unnamed_addr constant [9 x i8] c"cullFace\00", align 1
@.str.331 = private unnamed_addr constant [13 x i8] c"deleteBuffer\00", align 1
@.str.332 = private unnamed_addr constant [18 x i8] c"deleteFramebuffer\00", align 1
@.str.333 = private unnamed_addr constant [14 x i8] c"deleteProgram\00", align 1
@.str.334 = private unnamed_addr constant [19 x i8] c"deleteRenderbuffer\00", align 1
@.str.335 = private unnamed_addr constant [13 x i8] c"deleteShader\00", align 1
@.str.336 = private unnamed_addr constant [14 x i8] c"deleteTexture\00", align 1
@.str.337 = private unnamed_addr constant [10 x i8] c"depthFunc\00", align 1
@.str.338 = private unnamed_addr constant [10 x i8] c"depthMask\00", align 1
@.str.339 = private unnamed_addr constant [11 x i8] c"depthRange\00", align 1
@.str.340 = private unnamed_addr constant [13 x i8] c"detachShader\00", align 1
@.str.341 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.342 = private unnamed_addr constant [25 x i8] c"disableVertexAttribArray\00", align 1
@.str.343 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@.str.344 = private unnamed_addr constant [24 x i8] c"enableVertexAttribArray\00", align 1
@.str.345 = private unnamed_addr constant [7 x i8] c"finish\00", align 1
@.str.346 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str.347 = private unnamed_addr constant [24 x i8] c"framebufferRenderbuffer\00", align 1
@.str.348 = private unnamed_addr constant [21 x i8] c"framebufferTexture2D\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"frontFace\00", align 1
@.str.350 = private unnamed_addr constant [15 x i8] c"generateMipmap\00", align 1
@.str.351 = private unnamed_addr constant [16 x i8] c"getActiveAttrib\00", align 1
@.str.352 = private unnamed_addr constant [17 x i8] c"getActiveUniform\00", align 1
@.str.353 = private unnamed_addr constant [19 x i8] c"getAttachedShaders\00", align 1
@.str.354 = private unnamed_addr constant [18 x i8] c"getAttribLocation\00", align 1
@.str.355 = private unnamed_addr constant [19 x i8] c"getBufferParameter\00", align 1
@.str.356 = private unnamed_addr constant [21 x i8] c"getContextAttributes\00", align 1
@.str.357 = private unnamed_addr constant [9 x i8] c"getError\00", align 1
@.str.358 = private unnamed_addr constant [13 x i8] c"getExtension\00", align 1
@.str.359 = private unnamed_addr constant [34 x i8] c"getFramebufferAttachmentParameter\00", align 1
@.str.360 = private unnamed_addr constant [13 x i8] c"getParameter\00", align 1
@.str.361 = private unnamed_addr constant [18 x i8] c"getProgramInfoLog\00", align 1
@.str.362 = private unnamed_addr constant [20 x i8] c"getProgramParameter\00", align 1
@.str.363 = private unnamed_addr constant [25 x i8] c"getRenderbufferParameter\00", align 1
@.str.364 = private unnamed_addr constant [17 x i8] c"getShaderInfoLog\00", align 1
@.str.365 = private unnamed_addr constant [19 x i8] c"getShaderParameter\00", align 1
@.str.366 = private unnamed_addr constant [25 x i8] c"getShaderPrecisionFormat\00", align 1
@.str.367 = private unnamed_addr constant [16 x i8] c"getShaderSource\00", align 1
@.str.368 = private unnamed_addr constant [23 x i8] c"getSupportedExtensions\00", align 1
@.str.369 = private unnamed_addr constant [16 x i8] c"getTexParameter\00", align 1
@.str.370 = private unnamed_addr constant [11 x i8] c"getUniform\00", align 1
@.str.371 = private unnamed_addr constant [19 x i8] c"getUniformLocation\00", align 1
@.str.372 = private unnamed_addr constant [16 x i8] c"getVertexAttrib\00", align 1
@.str.373 = private unnamed_addr constant [22 x i8] c"getVertexAttribOffset\00", align 1
@.str.374 = private unnamed_addr constant [5 x i8] c"hint\00", align 1
@.str.375 = private unnamed_addr constant [9 x i8] c"isBuffer\00", align 1
@.str.376 = private unnamed_addr constant [14 x i8] c"isContextLost\00", align 1
@.str.377 = private unnamed_addr constant [10 x i8] c"isEnabled\00", align 1
@.str.378 = private unnamed_addr constant [14 x i8] c"isFramebuffer\00", align 1
@.str.379 = private unnamed_addr constant [10 x i8] c"isProgram\00", align 1
@.str.380 = private unnamed_addr constant [15 x i8] c"isRenderbuffer\00", align 1
@.str.381 = private unnamed_addr constant [9 x i8] c"isShader\00", align 1
@.str.382 = private unnamed_addr constant [10 x i8] c"isTexture\00", align 1
@.str.383 = private unnamed_addr constant [10 x i8] c"lineWidth\00", align 1
@.str.384 = private unnamed_addr constant [12 x i8] c"linkProgram\00", align 1
@.str.385 = private unnamed_addr constant [12 x i8] c"pixelStorei\00", align 1
@.str.386 = private unnamed_addr constant [14 x i8] c"polygonOffset\00", align 1
@.str.387 = private unnamed_addr constant [11 x i8] c"readPixels\00", align 1
@.str.388 = private unnamed_addr constant [20 x i8] c"renderbufferStorage\00", align 1
@.str.389 = private unnamed_addr constant [15 x i8] c"sampleCoverage\00", align 1
@.str.390 = private unnamed_addr constant [8 x i8] c"scissor\00", align 1
@.str.391 = private unnamed_addr constant [13 x i8] c"shaderSource\00", align 1
@.str.392 = private unnamed_addr constant [12 x i8] c"stencilFunc\00", align 1
@.str.393 = private unnamed_addr constant [20 x i8] c"stencilFuncSeparate\00", align 1
@.str.394 = private unnamed_addr constant [12 x i8] c"stencilMask\00", align 1
@.str.395 = private unnamed_addr constant [20 x i8] c"stencilMaskSeparate\00", align 1
@.str.396 = private unnamed_addr constant [10 x i8] c"stencilOp\00", align 1
@.str.397 = private unnamed_addr constant [18 x i8] c"stencilOpSeparate\00", align 1
@.str.398 = private unnamed_addr constant [11 x i8] c"texImage2D\00", align 1
@.str.399 = private unnamed_addr constant [14 x i8] c"texParameterf\00", align 1
@.str.400 = private unnamed_addr constant [14 x i8] c"texParameteri\00", align 1
@.str.401 = private unnamed_addr constant [14 x i8] c"texSubImage2D\00", align 1
@.str.402 = private unnamed_addr constant [10 x i8] c"uniform1f\00", align 1
@.str.403 = private unnamed_addr constant [11 x i8] c"uniform1fv\00", align 1
@.str.404 = private unnamed_addr constant [10 x i8] c"uniform1i\00", align 1
@.str.405 = private unnamed_addr constant [11 x i8] c"uniform1iv\00", align 1
@.str.406 = private unnamed_addr constant [10 x i8] c"uniform2f\00", align 1
@.str.407 = private unnamed_addr constant [11 x i8] c"uniform2fv\00", align 1
@.str.408 = private unnamed_addr constant [10 x i8] c"uniform2i\00", align 1
@.str.409 = private unnamed_addr constant [11 x i8] c"uniform2iv\00", align 1
@.str.410 = private unnamed_addr constant [10 x i8] c"uniform3f\00", align 1
@.str.411 = private unnamed_addr constant [11 x i8] c"uniform3fv\00", align 1
@.str.412 = private unnamed_addr constant [10 x i8] c"uniform3i\00", align 1
@.str.413 = private unnamed_addr constant [11 x i8] c"uniform3iv\00", align 1
@.str.414 = private unnamed_addr constant [10 x i8] c"uniform4f\00", align 1
@.str.415 = private unnamed_addr constant [11 x i8] c"uniform4fv\00", align 1
@.str.416 = private unnamed_addr constant [10 x i8] c"uniform4i\00", align 1
@.str.417 = private unnamed_addr constant [11 x i8] c"uniform4iv\00", align 1
@.str.418 = private unnamed_addr constant [17 x i8] c"uniformMatrix2fv\00", align 1
@.str.419 = private unnamed_addr constant [17 x i8] c"uniformMatrix3fv\00", align 1
@.str.420 = private unnamed_addr constant [17 x i8] c"uniformMatrix4fv\00", align 1
@.str.421 = private unnamed_addr constant [11 x i8] c"useProgram\00", align 1
@.str.422 = private unnamed_addr constant [16 x i8] c"validateProgram\00", align 1
@.str.423 = private unnamed_addr constant [15 x i8] c"vertexAttrib1f\00", align 1
@.str.424 = private unnamed_addr constant [16 x i8] c"vertexAttrib1fv\00", align 1
@.str.425 = private unnamed_addr constant [15 x i8] c"vertexAttrib2f\00", align 1
@.str.426 = private unnamed_addr constant [16 x i8] c"vertexAttrib2fv\00", align 1
@.str.427 = private unnamed_addr constant [15 x i8] c"vertexAttrib3f\00", align 1
@.str.428 = private unnamed_addr constant [16 x i8] c"vertexAttrib3fv\00", align 1
@.str.429 = private unnamed_addr constant [15 x i8] c"vertexAttrib4f\00", align 1
@.str.430 = private unnamed_addr constant [16 x i8] c"vertexAttrib4fv\00", align 1
@.str.431 = private unnamed_addr constant [20 x i8] c"vertexAttribPointer\00", align 1
@.str.432 = private unnamed_addr constant [9 x i8] c"viewport\00", align 1
@_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 = internal global [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"] zeroinitializer, align 16
@.str.433 = private unnamed_addr constant [11 x i8] c"bindBuffer\00", align 1
@_ZGVZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 = internal global i64 0, align 8
@.str.434 = private unnamed_addr constant [11 x i8] c"drawArrays\00", align 1
@.str.435 = private unnamed_addr constant [13 x i8] c"drawElements\00", align 1
@_ZZN5blink23V8WebGLRenderingContext35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.436, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context23CommitOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.436 = private unnamed_addr constant [7 x i8] c"commit\00", align 1
@_ZZN5blink23V8WebGLRenderingContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kOperationTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.437, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33MakeXRCompatibleOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 -24, i8 0 }], align 16
@.str.437 = private unnamed_addr constant [17 x i8] c"makeXRCompatible\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink12WebGLProgram18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11WebGLShader18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink16WebGLFramebuffer18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink17WebGLRenderbuffer18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink12WebGLTexture18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.438 = private unnamed_addr constant [28 x i8] c"Overload resolution failed.\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN5blink11WebGLBuffer18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.439 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/bindings/core/v8/to_v8_traits.h\00", align 1
@.str.440 = private unnamed_addr constant [17 x i8] c"script_wrappable\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink20WebGLUniformLocation18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink18V8HTMLVideoElement18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink16HTMLVideoElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink18V8HTMLImageElement18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink16HTMLImageElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink19V8HTMLCanvasElement18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink17HTMLCanvasElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink17V8OffscreenCanvas18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink15OffscreenCanvas18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink12V8VideoFrame18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink10VideoFrame18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11V8ImageData18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink9ImageData18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink13V8ImageBitmap18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink11ImageBitmap18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.441 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.442 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.443 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.444 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.445 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink31NoAllocDirectCallExceptionStateE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase35is_offscreen_canvas_commit_enabled_E = external local_unnamed_addr global i8, align 1
@.str.448 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.449 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.450 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E = external local_unnamed_addr global i8, align 1
@.str.451 = private unnamed_addr constant [19 x i8] c"Illegal invocation\00", align 1
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1859" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1861" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8WebGLRenderingContext24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span.182", align 8
  %5 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %6 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %5) #9
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %5) #9
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink23V8WebGLRenderingContext18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %6, %"class.v8::ObjectTemplate"* %7, %"class.v8::FunctionTemplate"* %5, %"class.v8::FunctionTemplate"* null) #9
  %8 = bitcast %"class.v8::ObjectTemplate"* %6 to %"class.v8::Template"*
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  tail call void @_ZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %8, %"class.v8::Template"* %9, %"class.v8::Template"* %2)
  %10 = bitcast %"class.base::span.182"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase35is_offscreen_canvas_commit_enabled_E, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %5) #9
  %15 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %4, i64 0, i32 0, i32 0
  store i64 1, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink23V8WebGLRenderingContext35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %16, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %8, %"class.v8::Template"* %9, %"class.v8::Template"* %2, %"class.v8::Signature"* %14, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %4) #9
  br label %17

17:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8WebGLRenderingContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64) #0 align 2 {
  %8 = alloca %"class.base::span.182", align 8
  %9 = trunc i64 %6 to i8
  %10 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0)
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %10) #9
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 6, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  %15 = icmp ne i8 %9, 0
  %16 = and i1 %15, %14
  %17 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E, align 1
  %18 = icmp ne i8 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %7
  %21 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #9
  %22 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %23 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %21, %"class.v8::FunctionTemplate"* %22) #9
  %24 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %8, i64 0, i32 0, i32 0
  store i64 1, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %8, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink23V8WebGLRenderingContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %25, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %21, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %23, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %8) #9
  br label %26

26:                                               ; preds = %20, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i16, align 2
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.v8::CFunction"*
  %9 = alloca i16, align 2
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.v8::CFunction"*
  %12 = alloca i16, align 2
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.v8::CFunction"*
  %15 = alloca %"class.base::span", align 8
  %16 = alloca %"class.base::span.181", align 8
  %17 = alloca %"class.base::span.182", align 8
  %18 = alloca %"class.base::span.184", align 8
  %19 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %20 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %19) #9
  %21 = getelementptr inbounds %"class.base::span", %"class.base::span"* %15, i64 0, i32 0, i32 0
  store i64 3, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %15, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %22, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %20, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %15) #9
  %23 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %16, i64 0, i32 0, i32 0
  store i64 296, i64* %23, align 8
  %24 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %16, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"* getelementptr inbounds ([296 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"], [296 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E19kConstantValueTable, i64 0, i64 0), %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"** %24, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller16InstallConstantsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_19ConstantValueConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %20, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %16) #9
  %25 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %17, i64 0, i32 0, i32 0
  store i64 133, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %17, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([133 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %26, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %20, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %17) #9
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %76, !prof !3

29:                                               ; preds = %5
  %30 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %76, label %32

32:                                               ; preds = %29
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.433, i64 0, i64 0), i8** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 0), align 16
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27BindBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 1), align 8
  %33 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 2) to i24*), align 16
  %34 = and i24 %33, -524288
  %35 = or i24 %34, 26626
  store i24 %35, i24* bitcast ([3 x i8]* getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 2) to i24*), align 16
  %36 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #9
  %37 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %45, !prof !3

39:                                               ; preds = %32
  %40 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = bitcast i16* %9 to %"class.v8::CTypeInfo"*
  %44 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %44) #9
  store i16 0, i16* %9, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %43, i32 4, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %44) #9
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 3, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #9
  br label %45

45:                                               ; preds = %32, %39, %42
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %11, i8* bitcast (void (%"class.v8::Object"*, i32, %"class.v8::Value"*, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context44BindBufferOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEjNS3_INS2_5ValueEEERNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_INS4_INS_5ValueEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #9
  %46 = load <2 x i64>, <2 x i64>* %10, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #9
  store <2 x i64> %46, <2 x i64>* bitcast (i8** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 1, i32 0) to <2 x i64>*), align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.434, i64 0, i64 0), i8** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 0), align 8
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27DrawArraysOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 1), align 8
  %47 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 2) to i24*), align 8
  %48 = and i24 %47, -524288
  %49 = or i24 %48, 26627
  store i24 %49, i24* bitcast ([3 x i8]* getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 2) to i24*), align 8
  %50 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %59, !prof !3

53:                                               ; preds = %45
  %54 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #9
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = bitcast i16* %6 to %"class.v8::CTypeInfo"*
  %58 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %58) #9
  store i16 0, i16* %6, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %57, i32 5, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %58) #9
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 3, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 2, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 2, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 4) to i16*), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #9
  br label %59

59:                                               ; preds = %45, %53, %56
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %8, i8* bitcast (void (%"class.v8::Object"*, i32, i32, i32, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context44DrawArraysOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEjiiRNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1859", %"class.v8::internal::CFunctionInfoImpl.1859"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES9_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #9
  %60 = load <2 x i64>, <2 x i64>* %7, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  store <2 x i64> %60, <2 x i64>* bitcast (i8** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 1, i32 0) to <2 x i64>*), align 8
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.435, i64 0, i64 0), i8** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 0), align 16
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DrawElementsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 1), align 8
  %61 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 2) to i24*), align 16
  %62 = and i24 %61, -524288
  %63 = or i24 %62, 26628
  store i24 %63, i24* bitcast ([3 x i8]* getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 2) to i24*), align 16
  %64 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9
  %65 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73, !prof !3

67:                                               ; preds = %59
  %68 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = bitcast i16* %12 to %"class.v8::CTypeInfo"*
  %72 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %72) #9
  store i16 0, i16* %12, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %71, i32 6, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %72) #9
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 3, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 2, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 3, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  store i16 4, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 4) to i16*), align 8
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 5) to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #9
  br label %73

73:                                               ; preds = %59, %67, %70
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %14, i8* bitcast (void (%"class.v8::Object"*, i32, i32, i32, i64, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context46DrawElementsOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEjijlRNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1861", %"class.v8::internal::CFunctionInfoImpl.1861"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IjJEEENS2_IiJEEES8_NS2_IlJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #9
  %74 = load <2 x i64>, <2 x i64>* %13, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9
  store <2 x i64> %74, <2 x i64>* bitcast (i8** getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 1, i32 0) to <2 x i64>*), align 8
  %75 = call {}* @llvm.invariant.start.p0i8(i64 120, i8* bitcast ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0) #9
  br label %76

76:                                               ; preds = %29, %73, %5
  %77 = getelementptr inbounds %"class.base::span.184", %"class.base::span.184"* %18, i64 0, i32 0, i32 0
  store i64 3, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::span.184", %"class.base::span.184"* %18, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"* getelementptr inbounds ([3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [3 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink23V8WebGLRenderingContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0), %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"** %78, align 8
  call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_32NoAllocDirectCallOperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %20, %"class.base::span.184"* nonnull byval(%"class.base::span.184") align 8 %18) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23V8WebGLRenderingContext35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span.182", align 8
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase35is_offscreen_canvas_commit_enabled_E, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %10) #9
  %12 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink23V8WebGLRenderingContext35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %11, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %6) #9
  br label %14

14:                                               ; preds = %5, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26CanvasAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #9
  %7 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %6)
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %24

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #9
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i8* [ %21, %18 ], [ %23, %22 ]
  %26 = bitcast i8* %25 to %"class.blink::WebGLRenderingContextBase"*
  %27 = tail call %"class.blink::V8UnionHTMLCanvasElementOrOffscreenCanvas"* @_ZNK5blink25WebGLRenderingContextBase24getHTMLOrOffscreenCanvasEv(%"class.blink::WebGLRenderingContextBase"* %26) #9
  %28 = icmp eq %"class.blink::V8UnionHTMLCanvasElementOrOffscreenCanvas"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::ScriptState"* %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 176
  %33 = inttoptr i64 %32 to %"class.v8::Value"*
  br label %36

34:                                               ; preds = %24
  %35 = tail call %"class.v8::Value"* @_ZNK5blink41V8UnionHTMLCanvasElementOrOffscreenCanvas9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionHTMLCanvasElementOrOffscreenCanvas"* nonnull %27, %"class.blink::ScriptState"* %7) #9
  br label %36

36:                                               ; preds = %29, %34
  %37 = phi %"class.v8::Value"* [ %33, %29 ], [ %35, %34 ]
  %38 = icmp eq %"class.v8::Value"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 3
  %43 = bitcast %"class.v8::Value"* %37 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context38DrawingBufferWidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call i32 @_ZNK5blink25WebGLRenderingContextBase18drawingBufferWidthEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = sext i32 %25 to i64
  %30 = add nsw i64 %29, 1073741824
  %31 = icmp ult i64 %30, 2147483648
  br i1 %31, label %32, label %34, !prof !4

32:                                               ; preds = %22
  %33 = shl nsw i64 %29, 1
  br label %46

34:                                               ; preds = %22
  %35 = getelementptr inbounds i64, i64* %27, i64 1
  %36 = bitcast i64* %35 to %"class.v8::Isolate"**
  %37 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %38 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %37, i32 %25) #9
  %39 = icmp eq %"class.v8::Integer"* %38, null
  br i1 %39, label %40, label %43, !prof !5

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, i64* %27, i64 2
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %34
  %44 = bitcast %"class.v8::Integer"* %38 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %32, %40, %43
  %47 = phi i64 [ %33, %32 ], [ %42, %40 ], [ %45, %43 ]
  store i64 %47, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context39DrawingBufferHeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call i32 @_ZNK5blink25WebGLRenderingContextBase19drawingBufferHeightEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = sext i32 %25 to i64
  %30 = add nsw i64 %29, 1073741824
  %31 = icmp ult i64 %30, 2147483648
  br i1 %31, label %32, label %34, !prof !4

32:                                               ; preds = %22
  %33 = shl nsw i64 %29, 1
  br label %46

34:                                               ; preds = %22
  %35 = getelementptr inbounds i64, i64* %27, i64 1
  %36 = bitcast i64* %35 to %"class.v8::Isolate"**
  %37 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %38 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %37, i32 %25) #9
  %39 = icmp eq %"class.v8::Integer"* %38, null
  br i1 %39, label %40, label %43, !prof !5

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, i64* %27, i64 2
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %34
  %44 = bitcast %"class.v8::Integer"* %38 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %32, %40, %43
  %47 = phi i64 [ %33, %32 ], [ %42, %40 ], [ %45, %43 ]
  store i64 %47, i64* %28, align 8
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller16InstallConstantsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_19ConstantValueConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30ActiveTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.300, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13activeTextureEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29AttachShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.301, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %158

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %158

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLProgram"* [ %106, %104 ], [ null, %107 ]
  %112 = load i32, i32* %20, align 8
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  %115 = load i64*, i64** %4, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %110
  %121 = load i64*, i64** %44, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 1
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %127 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %128 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %127, %"struct.blink::WrapperTypeInfo"* %126, %"class.v8::Value"* %125) #9
  br i1 %128, label %129, label %151

129:                                              ; preds = %124
  %130 = bitcast %"class.v8::Value"* %125 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, -1
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = and i64 %131, -4294967296
  %136 = zext i32 %134 to i64
  %137 = or i64 %135, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load i16, i16* %139, align 2
  switch i16 %140, label %145 [
    i16 1057, label %141
    i16 1056, label %141
    i16 1040, label %141
  ]

141:                                              ; preds = %129, %129, %129
  %142 = add i64 %131, 19
  %143 = inttoptr i64 %142 to i8**
  %144 = load i8*, i8** %143, align 1
  br label %148

145:                                              ; preds = %129
  %146 = bitcast %"class.v8::Value"* %125 to %"class.v8::Object"*
  %147 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %146, i32 1) #9
  br label %148

148:                                              ; preds = %145, %141
  %149 = phi i8* [ %144, %141 ], [ %147, %145 ]
  %150 = bitcast i8* %149 to %"class.blink::WebGLShader"*
  br label %152

151:                                              ; preds = %124
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %126, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %152

152:                                              ; preds = %148, %151
  %153 = phi %"class.blink::WebGLShader"* [ %150, %148 ], [ null, %151 ]
  %154 = load i32, i32* %17, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12attachShaderEPNS_12WebGLProgramEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"* %157, %"class.blink::WebGLProgram"* %111, %"class.blink::WebGLShader"* %153) #9
  br label %158

158:                                              ; preds = %152, %107, %156, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %160 = load i64*, i64** %159, align 8
  %161 = icmp eq i64* %160, null
  br i1 %161, label %171, label %162

162:                                              ; preds = %158
  %163 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %164 = bitcast %"class.v8::Isolate"* %163 to %"class.v8::internal::Isolate"*
  %165 = load i64, i64* %160, align 8
  %166 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %164, i64 %165) #9
  %167 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %163) #9
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = bitcast i64* %166 to %"class.v8::Value"*
  %170 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %163, %"class.v8::Value"* %169) #9
  br label %171

171:                                              ; preds = %168, %162, %158
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #9
  br label %187

187:                                              ; preds = %171, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35BindAttribLocationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.302, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 3
  br i1 %24, label %25, label %45, !prof !5

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %232

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %74

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %78

74:                                               ; preds = %59, %63
  %75 = phi i8* [ %62, %59 ], [ %65, %63 ]
  %76 = bitcast i64** %46 to %"class.v8::Value"**
  %77 = load %"class.v8::Value"*, %"class.v8::Value"** %76, align 8
  br label %78

78:                                               ; preds = %68, %74
  %79 = phi i8* [ %65, %68 ], [ %75, %74 ]
  %80 = phi %"class.v8::Value"* [ %73, %68 ], [ %77, %74 ]
  %81 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %82 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to %"class.blink::V8PerIsolateData"**
  %85 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %84, align 8
  %86 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %85, %"struct.blink::WrapperTypeInfo"* %81, %"class.v8::Value"* %80) #9
  br i1 %86, label %87, label %109

87:                                               ; preds = %78
  %88 = bitcast %"class.v8::Value"* %80 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i64 %89, -4294967296
  %94 = zext i32 %92 to i64
  %95 = or i64 %93, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load i16, i16* %97, align 2
  switch i16 %98, label %103 [
    i16 1057, label %99
    i16 1056, label %99
    i16 1040, label %99
  ]

99:                                               ; preds = %87, %87, %87
  %100 = add i64 %89, 19
  %101 = inttoptr i64 %100 to i8**
  %102 = load i8*, i8** %101, align 1
  br label %106

103:                                              ; preds = %87
  %104 = bitcast %"class.v8::Value"* %80 to %"class.v8::Object"*
  %105 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %104, i32 1) #9
  br label %106

106:                                              ; preds = %99, %103
  %107 = phi i8* [ %102, %99 ], [ %105, %103 ]
  %108 = bitcast i8* %107 to %"class.blink::WebGLProgram"*
  br label %112

109:                                              ; preds = %78
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %110 = load i32, i32* %19, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %232

112:                                              ; preds = %106, %109
  %113 = phi %"class.blink::WebGLProgram"* [ %108, %106 ], [ null, %109 ]
  %114 = load i32, i32* %22, align 8
  %115 = icmp sgt i32 %114, 1
  br i1 %115, label %122, label %116

116:                                              ; preds = %112
  %117 = load i64*, i64** %6, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %112
  %123 = load i64*, i64** %46, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 1
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %127) #9
  br i1 %128, label %129, label %132, !prof !4

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Uint32"*
  %131 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %130) #9
  br label %139

132:                                              ; preds = %126
  %133 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %127) #9
  br i1 %133, label %134, label %137, !prof !4

134:                                              ; preds = %132
  %135 = bitcast %"class.v8::Value"* %127 to %"class.v8::Int32"*
  %136 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %135) #9
  br label %139

137:                                              ; preds = %132
  %138 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %127, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %139

139:                                              ; preds = %129, %134, %137
  %140 = phi i32 [ %131, %129 ], [ %136, %134 ], [ %138, %137 ]
  %141 = load i32, i32* %19, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %232

143:                                              ; preds = %139
  %144 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %144) #9
  %145 = load i32, i32* %22, align 8
  %146 = icmp sgt i32 %145, 2
  br i1 %146, label %153, label %147

147:                                              ; preds = %143
  %148 = load i64*, i64** %6, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 160
  %152 = inttoptr i64 %151 to %"class.v8::Value"*
  br label %157

153:                                              ; preds = %143
  %154 = load i64*, i64** %46, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 2
  %156 = bitcast i64* %155 to %"class.v8::Value"*
  br label %157

157:                                              ; preds = %147, %153
  %158 = phi %"class.v8::Value"* [ %152, %147 ], [ %156, %153 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %158, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %159 = load i32, i32* %19, align 8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %209

161:                                              ; preds = %157
  %162 = bitcast i8* %79 to %"class.blink::WebGLRenderingContextBase"*
  %163 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #9
  %164 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %165 = load %"class.v8::String"*, %"class.v8::String"** %164, align 8
  %166 = icmp eq %"class.v8::String"* %165, null
  br i1 %166, label %169, label %167, !prof !5

167:                                              ; preds = %161
  %168 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %165, i32 0) #9
  br label %190

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %190, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %190

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i33
  %182 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %181, i33 1) #9
  %183 = extractvalue { i33, i1 } %182, 1
  %184 = extractvalue { i33, i1 } %182, 0
  %185 = icmp slt i33 %184, 0
  %186 = or i1 %183, %185
  br i1 %186, label %187, label %188, !prof !5

187:                                              ; preds = %178
  call void @llvm.trap() #9
  unreachable

188:                                              ; preds = %178
  %189 = trunc i33 %184 to i32
  store i32 %189, i32* %179, align 4
  br label %190

190:                                              ; preds = %167, %169, %173, %188
  %191 = phi %"class.WTF::StringImpl"* [ %168, %167 ], [ null, %169 ], [ %171, %173 ], [ %171, %188 ]
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  call void @_ZN5blink25WebGLRenderingContextBase18bindAttribLocationEPNS_12WebGLProgramEjRKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"* %162, %"class.blink::WebGLProgram"* %113, i32 %140, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #9
  br label %208

208:                                              ; preds = %190, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #9
  br label %209

209:                                              ; preds = %157, %208
  %210 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  store i8* null, i8** %210, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %214, label %213

213:                                              ; preds = %209
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %211) #9
  br label %214

214:                                              ; preds = %213, %209
  %215 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #9
  br label %231

231:                                              ; preds = %214, %227, %230
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %144) #9
  br label %232

232:                                              ; preds = %139, %109, %231, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %233 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %234 = load i64*, i64** %233, align 8
  %235 = icmp eq i64* %234, null
  br i1 %235, label %245, label %236

236:                                              ; preds = %232
  %237 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %238 = bitcast %"class.v8::Isolate"* %237 to %"class.v8::internal::Isolate"*
  %239 = load i64, i64* %234, align 8
  %240 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %238, i64 %239) #9
  %241 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %237) #9
  br i1 %241, label %245, label %242

242:                                              ; preds = %236
  %243 = bitcast i64* %240 to %"class.v8::Value"*
  %244 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %237, %"class.v8::Value"* %243) #9
  br label %245

245:                                              ; preds = %242, %236, %232
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #9
  br label %261

261:                                              ; preds = %245, %257, %260
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32BindFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.303, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %162

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %162

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16WebGLFramebuffer18wrapper_type_info_E, align 8
  %109 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %110 = add i64 %109, 8
  %111 = inttoptr i64 %110 to %"class.blink::V8PerIsolateData"**
  %112 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %111, align 8
  %113 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %112, %"struct.blink::WrapperTypeInfo"* %108, %"class.v8::Value"* %107) #9
  %114 = bitcast %"class.v8::Value"* %107 to i64*
  %115 = load i64, i64* %114, align 8
  br i1 %113, label %116, label %136

116:                                              ; preds = %106
  %117 = add i64 %115, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i64 %115, -4294967296
  %121 = zext i32 %119 to i64
  %122 = or i64 %120, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load i16, i16* %124, align 2
  switch i16 %125, label %130 [
    i16 1057, label %126
    i16 1056, label %126
    i16 1040, label %126
  ]

126:                                              ; preds = %116, %116, %116
  %127 = add i64 %115, 19
  %128 = inttoptr i64 %127 to i8**
  %129 = load i8*, i8** %128, align 1
  br label %133

130:                                              ; preds = %116
  %131 = bitcast %"class.v8::Value"* %107 to %"class.v8::Object"*
  %132 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %131, i32 1) #9
  br label %133

133:                                              ; preds = %130, %126
  %134 = phi i8* [ %129, %126 ], [ %132, %130 ]
  %135 = bitcast i8* %134 to %"class.blink::WebGLFramebuffer"*
  br label %156

136:                                              ; preds = %106
  %137 = and i64 %115, 3
  %138 = icmp eq i64 %137, 1
  br i1 %138, label %139, label %155

139:                                              ; preds = %136
  %140 = add i64 %115, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = and i64 %115, -4294967296
  %144 = zext i32 %142 to i64
  %145 = or i64 %143, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load i16, i16* %147, align 2
  %149 = icmp eq i16 %148, 67
  br i1 %149, label %150, label %155

150:                                              ; preds = %139
  %151 = add i64 %115, 23
  %152 = inttoptr i64 %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = ashr i32 %153, 1
  switch i32 %154, label %155 [
    i32 5, label %156
    i32 3, label %156
  ]

155:                                              ; preds = %150, %139, %136
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %108, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %156

156:                                              ; preds = %133, %150, %150, %155
  %157 = phi %"class.blink::WebGLFramebuffer"* [ %135, %133 ], [ null, %155 ], [ null, %150 ], [ null, %150 ]
  %158 = load i32, i32* %17, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15bindFramebufferEjPNS_16WebGLFramebufferE(%"class.blink::WebGLRenderingContextBase"* %161, i32 %93, %"class.blink::WebGLFramebuffer"* %157) #9
  br label %162

162:                                              ; preds = %156, %88, %160, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  br i1 %165, label %175, label %166

166:                                              ; preds = %162
  %167 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %168 = bitcast %"class.v8::Isolate"* %167 to %"class.v8::internal::Isolate"*
  %169 = load i64, i64* %164, align 8
  %170 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %168, i64 %169) #9
  %171 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %167) #9
  br i1 %171, label %175, label %172

172:                                              ; preds = %166
  %173 = bitcast i64* %170 to %"class.v8::Value"*
  %174 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %167, %"class.v8::Value"* %173) #9
  br label %175

175:                                              ; preds = %172, %166, %162
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #9
  br label %191

191:                                              ; preds = %175, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33BindRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.304, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %162

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %162

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17WebGLRenderbuffer18wrapper_type_info_E, align 8
  %109 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %110 = add i64 %109, 8
  %111 = inttoptr i64 %110 to %"class.blink::V8PerIsolateData"**
  %112 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %111, align 8
  %113 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %112, %"struct.blink::WrapperTypeInfo"* %108, %"class.v8::Value"* %107) #9
  %114 = bitcast %"class.v8::Value"* %107 to i64*
  %115 = load i64, i64* %114, align 8
  br i1 %113, label %116, label %136

116:                                              ; preds = %106
  %117 = add i64 %115, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i64 %115, -4294967296
  %121 = zext i32 %119 to i64
  %122 = or i64 %120, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load i16, i16* %124, align 2
  switch i16 %125, label %130 [
    i16 1057, label %126
    i16 1056, label %126
    i16 1040, label %126
  ]

126:                                              ; preds = %116, %116, %116
  %127 = add i64 %115, 19
  %128 = inttoptr i64 %127 to i8**
  %129 = load i8*, i8** %128, align 1
  br label %133

130:                                              ; preds = %116
  %131 = bitcast %"class.v8::Value"* %107 to %"class.v8::Object"*
  %132 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %131, i32 1) #9
  br label %133

133:                                              ; preds = %130, %126
  %134 = phi i8* [ %129, %126 ], [ %132, %130 ]
  %135 = bitcast i8* %134 to %"class.blink::WebGLRenderbuffer"*
  br label %156

136:                                              ; preds = %106
  %137 = and i64 %115, 3
  %138 = icmp eq i64 %137, 1
  br i1 %138, label %139, label %155

139:                                              ; preds = %136
  %140 = add i64 %115, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = and i64 %115, -4294967296
  %144 = zext i32 %142 to i64
  %145 = or i64 %143, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load i16, i16* %147, align 2
  %149 = icmp eq i16 %148, 67
  br i1 %149, label %150, label %155

150:                                              ; preds = %139
  %151 = add i64 %115, 23
  %152 = inttoptr i64 %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = ashr i32 %153, 1
  switch i32 %154, label %155 [
    i32 5, label %156
    i32 3, label %156
  ]

155:                                              ; preds = %150, %139, %136
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %108, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %156

156:                                              ; preds = %133, %150, %150, %155
  %157 = phi %"class.blink::WebGLRenderbuffer"* [ %135, %133 ], [ null, %155 ], [ null, %150 ], [ null, %150 ]
  %158 = load i32, i32* %17, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase16bindRenderbufferEjPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"* %161, i32 %93, %"class.blink::WebGLRenderbuffer"* %157) #9
  br label %162

162:                                              ; preds = %156, %88, %160, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  br i1 %165, label %175, label %166

166:                                              ; preds = %162
  %167 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %168 = bitcast %"class.v8::Isolate"* %167 to %"class.v8::internal::Isolate"*
  %169 = load i64, i64* %164, align 8
  %170 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %168, i64 %169) #9
  %171 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %167) #9
  br i1 %171, label %175, label %172

172:                                              ; preds = %166
  %173 = bitcast i64* %170 to %"class.v8::Value"*
  %174 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %167, %"class.v8::Value"* %173) #9
  br label %175

175:                                              ; preds = %172, %166, %162
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #9
  br label %191

191:                                              ; preds = %175, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28BindTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.305, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %162

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %162

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLTexture18wrapper_type_info_E, align 8
  %109 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %110 = add i64 %109, 8
  %111 = inttoptr i64 %110 to %"class.blink::V8PerIsolateData"**
  %112 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %111, align 8
  %113 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %112, %"struct.blink::WrapperTypeInfo"* %108, %"class.v8::Value"* %107) #9
  %114 = bitcast %"class.v8::Value"* %107 to i64*
  %115 = load i64, i64* %114, align 8
  br i1 %113, label %116, label %136

116:                                              ; preds = %106
  %117 = add i64 %115, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i64 %115, -4294967296
  %121 = zext i32 %119 to i64
  %122 = or i64 %120, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load i16, i16* %124, align 2
  switch i16 %125, label %130 [
    i16 1057, label %126
    i16 1056, label %126
    i16 1040, label %126
  ]

126:                                              ; preds = %116, %116, %116
  %127 = add i64 %115, 19
  %128 = inttoptr i64 %127 to i8**
  %129 = load i8*, i8** %128, align 1
  br label %133

130:                                              ; preds = %116
  %131 = bitcast %"class.v8::Value"* %107 to %"class.v8::Object"*
  %132 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %131, i32 1) #9
  br label %133

133:                                              ; preds = %130, %126
  %134 = phi i8* [ %129, %126 ], [ %132, %130 ]
  %135 = bitcast i8* %134 to %"class.blink::WebGLTexture"*
  br label %156

136:                                              ; preds = %106
  %137 = and i64 %115, 3
  %138 = icmp eq i64 %137, 1
  br i1 %138, label %139, label %155

139:                                              ; preds = %136
  %140 = add i64 %115, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = and i64 %115, -4294967296
  %144 = zext i32 %142 to i64
  %145 = or i64 %143, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load i16, i16* %147, align 2
  %149 = icmp eq i16 %148, 67
  br i1 %149, label %150, label %155

150:                                              ; preds = %139
  %151 = add i64 %115, 23
  %152 = inttoptr i64 %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = ashr i32 %153, 1
  switch i32 %154, label %155 [
    i32 5, label %156
    i32 3, label %156
  ]

155:                                              ; preds = %150, %139, %136
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %108, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %156

156:                                              ; preds = %133, %150, %150, %155
  %157 = phi %"class.blink::WebGLTexture"* [ %135, %133 ], [ null, %155 ], [ null, %150 ], [ null, %150 ]
  %158 = load i32, i32* %17, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase11bindTextureEjPNS_12WebGLTextureE(%"class.blink::WebGLRenderingContextBase"* %161, i32 %93, %"class.blink::WebGLTexture"* %157) #9
  br label %162

162:                                              ; preds = %156, %88, %160, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  br i1 %165, label %175, label %166

166:                                              ; preds = %162
  %167 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %168 = bitcast %"class.v8::Isolate"* %167 to %"class.v8::internal::Isolate"*
  %169 = load i64, i64* %164, align 8
  %170 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %168, i64 %169) #9
  %171 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %167) #9
  br i1 %171, label %175, label %172

172:                                              ; preds = %166
  %173 = bitcast i64* %170 to %"class.v8::Value"*
  %174 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %167, %"class.v8::Value"* %173) #9
  br label %175

175:                                              ; preds = %172, %166, %162
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #9
  br label %191

191:                                              ; preds = %175, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27BlendColorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.306, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %193

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %193

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = fcmp ogt double %88, 0x47EFFFFFE0000000
  br i1 %89, label %94, label %90, !prof !5

90:                                               ; preds = %87
  %91 = fcmp olt double %88, 0xC7EFFFFFE0000000
  br i1 %91, label %94, label %92, !prof !5

92:                                               ; preds = %90
  %93 = fptrunc double %88 to float
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi float [ 0xFFF0000000000000, %90 ], [ 0x7FF0000000000000, %87 ], [ %93, %92 ]
  %96 = load i32, i32* %20, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load i64*, i64** %4, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %94
  %105 = load i64*, i64** %44, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %109) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::Number"*
  %113 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %112) #9
  br label %116

114:                                              ; preds = %108
  %115 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %109, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %116

116:                                              ; preds = %114, %111
  %117 = phi double [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %17, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %193

120:                                              ; preds = %116
  %121 = fcmp ogt double %117, 0x47EFFFFFE0000000
  br i1 %121, label %126, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fcmp olt double %117, 0xC7EFFFFFE0000000
  br i1 %123, label %126, label %124, !prof !5

124:                                              ; preds = %122
  %125 = fptrunc double %117 to float
  br label %126

126:                                              ; preds = %120, %122, %124
  %127 = phi float [ 0xFFF0000000000000, %122 ], [ 0x7FF0000000000000, %120 ], [ %125, %124 ]
  %128 = load i32, i32* %20, align 8
  %129 = icmp sgt i32 %128, 2
  br i1 %129, label %136, label %130

130:                                              ; preds = %126
  %131 = load i64*, i64** %4, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 1
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 160
  %135 = inttoptr i64 %134 to %"class.v8::Value"*
  br label %140

136:                                              ; preds = %126
  %137 = load i64*, i64** %44, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 2
  %139 = bitcast i64* %138 to %"class.v8::Value"*
  br label %140

140:                                              ; preds = %130, %136
  %141 = phi %"class.v8::Value"* [ %135, %130 ], [ %139, %136 ]
  %142 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %141) #9
  br i1 %142, label %143, label %146, !prof !4

143:                                              ; preds = %140
  %144 = bitcast %"class.v8::Value"* %141 to %"class.v8::Number"*
  %145 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %144) #9
  br label %148

146:                                              ; preds = %140
  %147 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %141, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %148

148:                                              ; preds = %146, %143
  %149 = phi double [ %145, %143 ], [ %147, %146 ]
  %150 = load i32, i32* %17, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %193

152:                                              ; preds = %148
  %153 = fcmp ogt double %149, 0x47EFFFFFE0000000
  br i1 %153, label %158, label %154, !prof !5

154:                                              ; preds = %152
  %155 = fcmp olt double %149, 0xC7EFFFFFE0000000
  br i1 %155, label %158, label %156, !prof !5

156:                                              ; preds = %154
  %157 = fptrunc double %149 to float
  br label %158

158:                                              ; preds = %152, %154, %156
  %159 = phi float [ 0xFFF0000000000000, %154 ], [ 0x7FF0000000000000, %152 ], [ %157, %156 ]
  %160 = load i32, i32* %20, align 8
  %161 = icmp sgt i32 %160, 3
  br i1 %161, label %168, label %162

162:                                              ; preds = %158
  %163 = load i64*, i64** %4, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 1
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, 160
  %167 = inttoptr i64 %166 to %"class.v8::Value"*
  br label %172

168:                                              ; preds = %158
  %169 = load i64*, i64** %44, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 3
  %171 = bitcast i64* %170 to %"class.v8::Value"*
  br label %172

172:                                              ; preds = %162, %168
  %173 = phi %"class.v8::Value"* [ %167, %162 ], [ %171, %168 ]
  %174 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %173) #9
  br i1 %174, label %175, label %178, !prof !4

175:                                              ; preds = %172
  %176 = bitcast %"class.v8::Value"* %173 to %"class.v8::Number"*
  %177 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %176) #9
  br label %180

178:                                              ; preds = %172
  %179 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %173, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %180

180:                                              ; preds = %178, %175
  %181 = phi double [ %177, %175 ], [ %179, %178 ]
  %182 = load i32, i32* %17, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %193

184:                                              ; preds = %180
  %185 = fcmp ogt double %181, 0x47EFFFFFE0000000
  br i1 %185, label %190, label %186, !prof !5

186:                                              ; preds = %184
  %187 = fcmp olt double %181, 0xC7EFFFFFE0000000
  br i1 %187, label %190, label %188, !prof !5

188:                                              ; preds = %186
  %189 = fptrunc double %181 to float
  br label %190

190:                                              ; preds = %184, %186, %188
  %191 = phi float [ 0xFFF0000000000000, %186 ], [ 0x7FF0000000000000, %184 ], [ %189, %188 ]
  %192 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10blendColorEffff(%"class.blink::WebGLRenderingContextBase"* %192, float %95, float %127, float %159, float %191) #9
  br label %193

193:                                              ; preds = %180, %148, %116, %83, %190, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %194 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %195 = load i64*, i64** %194, align 8
  %196 = icmp eq i64* %195, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %193
  %198 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %199 = bitcast %"class.v8::Isolate"* %198 to %"class.v8::internal::Isolate"*
  %200 = load i64, i64* %195, align 8
  %201 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %199, i64 %200) #9
  %202 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %198) #9
  br i1 %202, label %206, label %203

203:                                              ; preds = %197
  %204 = bitcast i64* %201 to %"class.v8::Value"*
  %205 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %198, %"class.v8::Value"* %204) #9
  br label %206

206:                                              ; preds = %203, %197, %193
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #9
  br label %222

222:                                              ; preds = %206, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30BlendEquationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.307, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13blendEquationEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context38BlendEquationSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.308, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %125

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %125

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase21blendEquationSeparateEjj(%"class.blink::WebGLRenderingContextBase"* %124, i32 %93, i32 %120) #9
  br label %125

125:                                              ; preds = %119, %88, %123, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #9
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #9
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #9
  br label %138

138:                                              ; preds = %135, %129, %125
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #9
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26BlendFuncOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.309, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %125

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %125

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9blendFuncEjj(%"class.blink::WebGLRenderingContextBase"* %124, i32 %93, i32 %120) #9
  br label %125

125:                                              ; preds = %119, %88, %123, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #9
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #9
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #9
  br label %138

138:                                              ; preds = %135, %129, %125
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #9
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34BlendFuncSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.310, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %185

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %185

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %185

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Uint32"*
  %141 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %140) #9
  br label %149

142:                                              ; preds = %136
  %143 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %143, label %144, label %147, !prof !4

144:                                              ; preds = %142
  %145 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %146 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %145) #9
  br label %149

147:                                              ; preds = %142
  %148 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %149

149:                                              ; preds = %139, %144, %147
  %150 = phi i32 [ %141, %139 ], [ %146, %144 ], [ %148, %147 ]
  %151 = load i32, i32* %17, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %185

153:                                              ; preds = %149
  %154 = load i32, i32* %20, align 8
  %155 = icmp sgt i32 %154, 3
  br i1 %155, label %162, label %156

156:                                              ; preds = %153
  %157 = load i64*, i64** %4, align 8
  %158 = getelementptr inbounds i64, i64* %157, i64 1
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 160
  %161 = inttoptr i64 %160 to %"class.v8::Value"*
  br label %166

162:                                              ; preds = %153
  %163 = load i64*, i64** %44, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 3
  %165 = bitcast i64* %164 to %"class.v8::Value"*
  br label %166

166:                                              ; preds = %156, %162
  %167 = phi %"class.v8::Value"* [ %161, %156 ], [ %165, %162 ]
  %168 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %167) #9
  br i1 %168, label %169, label %172, !prof !4

169:                                              ; preds = %166
  %170 = bitcast %"class.v8::Value"* %167 to %"class.v8::Uint32"*
  %171 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %170) #9
  br label %179

172:                                              ; preds = %166
  %173 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %167) #9
  br i1 %173, label %174, label %177, !prof !4

174:                                              ; preds = %172
  %175 = bitcast %"class.v8::Value"* %167 to %"class.v8::Int32"*
  %176 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %175) #9
  br label %179

177:                                              ; preds = %172
  %178 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %167, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %179

179:                                              ; preds = %169, %174, %177
  %180 = phi i32 [ %171, %169 ], [ %176, %174 ], [ %178, %177 ]
  %181 = load i32, i32* %17, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase17blendFuncSeparateEjjjj(%"class.blink::WebGLRenderingContextBase"* %184, i32 %93, i32 %120, i32 %150, i32 %180) #9
  br label %185

185:                                              ; preds = %179, %149, %119, %88, %183, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %186 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = icmp eq i64* %187, null
  br i1 %188, label %198, label %189

189:                                              ; preds = %185
  %190 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %191 = bitcast %"class.v8::Isolate"* %190 to %"class.v8::internal::Isolate"*
  %192 = load i64, i64* %187, align 8
  %193 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %191, i64 %192) #9
  %194 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %190) #9
  br i1 %194, label %198, label %195

195:                                              ; preds = %189
  %196 = bitcast i64* %193 to %"class.v8::Value"*
  %197 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %190, %"class.v8::Value"* %196) #9
  br label %198

198:                                              ; preds = %195, %189, %185
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #9
  br label %214

214:                                              ; preds = %198, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27BufferDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::MaybeShared", align 8
  %5 = alloca %"class.blink::MaybeShared", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 2
  br i1 %29, label %30, label %457

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 3
  %36 = icmp eq i64 %35, 1
  br i1 %36, label %37, label %54

37:                                               ; preds = %30
  %38 = add i64 %34, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = and i64 %34, -4294967296
  %42 = zext i32 %40 to i64
  %43 = or i64 %41, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 67
  br i1 %47, label %48, label %54

48:                                               ; preds = %37
  %49 = add i64 %34, 23
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = ashr i32 %51, 1
  switch i32 %52, label %54 [
    i32 5, label %53
    i32 3, label %53
  ]

53:                                               ; preds = %48, %48
  tail call fastcc void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28BufferDataOperationOverload3ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %522

54:                                               ; preds = %30, %37, %48
  %55 = bitcast i64* %33 to %"class.v8::Value"*
  %56 = tail call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %55) #9
  br i1 %56, label %74, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %27, align 8
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %67, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 160
  %66 = inttoptr i64 %65 to %"class.v8::Value"*
  br label %71

67:                                               ; preds = %57
  %68 = load i64*, i64** %31, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = bitcast i64* %69 to %"class.v8::Value"*
  br label %71

71:                                               ; preds = %60, %67
  %72 = phi %"class.v8::Value"* [ %66, %60 ], [ %70, %67 ]
  %73 = tail call zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"* %72) #9
  br i1 %73, label %74, label %75

74:                                               ; preds = %54, %71
  tail call fastcc void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28BufferDataOperationOverload3ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %522

75:                                               ; preds = %71
  %76 = load i32, i32* %27, align 8
  %77 = icmp sgt i32 %76, 1
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %75
  %86 = load i64*, i64** %31, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  %88 = bitcast i64* %87 to %"class.v8::Value"*
  br label %89

89:                                               ; preds = %78, %85
  %90 = phi %"class.v8::Value"* [ %84, %78 ], [ %88, %85 ]
  %91 = tail call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %90) #9
  br i1 %91, label %92, label %265

92:                                               ; preds = %89
  %93 = bitcast %"class.blink::MaybeShared"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Isolate"**
  %98 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %97, align 8
  %99 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %99) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 56, i1 false) #9
  %100 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %101 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %101, align 8
  %102 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %102, align 2
  %103 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %104 = bitcast i8** %103 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.311, i64 0, i64 0)>, <2 x i8*>* %104, align 8
  %105 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %105, align 8
  %106 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %98, %"class.v8::Isolate"** %106, align 8
  %107 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %107, align 8
  %108 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %109 = bitcast %"class.WTF::StringImpl"** %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #9
  %110 = load i32, i32* %27, align 8
  %111 = icmp slt i32 %110, 3
  br i1 %111, label %112, label %131, !prof !5

112:                                              ; preds = %92
  %113 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #9
  %114 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %110) #9
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %115, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %233, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %233

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #9
  br label %233

131:                                              ; preds = %92
  %132 = load i64*, i64** %31, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 -1
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, -1
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = and i64 %134, -4294967296
  %139 = zext i32 %137 to i64
  %140 = or i64 %138, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i16*
  %143 = load i16, i16* %142, align 2
  switch i16 %143, label %149 [
    i16 1057, label %144
    i16 1056, label %144
    i16 1040, label %144
  ]

144:                                              ; preds = %131, %131, %131
  %145 = bitcast i64* %132 to %"class.v8::Value"*
  %146 = add i64 %134, 19
  %147 = inttoptr i64 %146 to i8**
  %148 = load i8*, i8** %147, align 1
  br label %163

149:                                              ; preds = %131
  %150 = bitcast i64* %133 to %"class.v8::Object"*
  %151 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %150, i32 1) #9
  %152 = load i32, i32* %27, align 8
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = bitcast i64** %31 to %"class.v8::Value"**
  %156 = load %"class.v8::Value"*, %"class.v8::Value"** %155, align 8
  br label %163

157:                                              ; preds = %149
  %158 = load i64*, i64** %94, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 1
  %160 = load i64, i64* %159, align 8
  %161 = add i64 %160, 160
  %162 = inttoptr i64 %161 to %"class.v8::Value"*
  br label %163

163:                                              ; preds = %144, %154, %157
  %164 = phi i8* [ %151, %157 ], [ %148, %144 ], [ %151, %154 ]
  %165 = phi %"class.v8::Value"* [ %162, %157 ], [ %145, %144 ], [ %156, %154 ]
  %166 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %165) #9
  br i1 %166, label %167, label %170, !prof !4

167:                                              ; preds = %163
  %168 = bitcast %"class.v8::Value"* %165 to %"class.v8::Uint32"*
  %169 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %168) #9
  br label %179

170:                                              ; preds = %163
  %171 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %165) #9
  br i1 %171, label %172, label %175, !prof !4

172:                                              ; preds = %170
  %173 = bitcast %"class.v8::Value"* %165 to %"class.v8::Int32"*
  %174 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %173) #9
  br label %179

175:                                              ; preds = %170
  %176 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %98, %"class.v8::Value"* %165, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %177 = load i32, i32* %107, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %235

179:                                              ; preds = %175, %172, %167
  %180 = phi i32 [ %176, %175 ], [ %174, %172 ], [ %169, %167 ]
  %181 = bitcast %"class.blink::MaybeShared"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #9
  %182 = load i32, i32* %27, align 8
  %183 = icmp sgt i32 %182, 1
  br i1 %183, label %190, label %184

184:                                              ; preds = %179
  %185 = load i64*, i64** %94, align 8
  %186 = getelementptr inbounds i64, i64* %185, i64 1
  %187 = load i64, i64* %186, align 8
  %188 = add i64 %187, 160
  %189 = inttoptr i64 %188 to %"class.v8::Value"*
  br label %194

190:                                              ; preds = %179
  %191 = load i64*, i64** %31, align 8
  %192 = getelementptr inbounds i64, i64* %191, i64 1
  %193 = bitcast i64* %192 to %"class.v8::Value"*
  br label %194

194:                                              ; preds = %190, %184
  %195 = phi %"class.v8::Value"* [ %189, %184 ], [ %193, %190 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_18DOMArrayBufferViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* nonnull sret %4, %"class.v8::Isolate"* %98, i32 1, %"class.v8::Value"* %195, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %196 = load i32, i32* %107, align 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %233

198:                                              ; preds = %194
  %199 = load i32, i32* %27, align 8
  %200 = icmp sgt i32 %199, 2
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = load i64*, i64** %94, align 8
  %203 = getelementptr inbounds i64, i64* %202, i64 1
  %204 = load i64, i64* %203, align 8
  %205 = add i64 %204, 160
  %206 = inttoptr i64 %205 to %"class.v8::Value"*
  br label %211

207:                                              ; preds = %198
  %208 = load i64*, i64** %31, align 8
  %209 = getelementptr inbounds i64, i64* %208, i64 2
  %210 = bitcast i64* %209 to %"class.v8::Value"*
  br label %211

211:                                              ; preds = %207, %201
  %212 = phi %"class.v8::Value"* [ %206, %201 ], [ %210, %207 ]
  %213 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %212) #9
  br i1 %213, label %214, label %217, !prof !4

214:                                              ; preds = %211
  %215 = bitcast %"class.v8::Value"* %212 to %"class.v8::Uint32"*
  %216 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %215) #9
  br label %224

217:                                              ; preds = %211
  %218 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %212) #9
  br i1 %218, label %219, label %222, !prof !4

219:                                              ; preds = %217
  %220 = bitcast %"class.v8::Value"* %212 to %"class.v8::Int32"*
  %221 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %220) #9
  br label %224

222:                                              ; preds = %217
  %223 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %98, %"class.v8::Value"* %212, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %224

224:                                              ; preds = %222, %219, %214
  %225 = phi i32 [ %216, %214 ], [ %221, %219 ], [ %223, %222 ]
  %226 = load i32, i32* %107, align 8
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %233

228:                                              ; preds = %224
  %229 = bitcast i8* %164 to %"class.blink::WebGLRenderingContextBase"*
  %230 = bitcast %"class.blink::MaybeShared"* %4 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.blink::MaybeShared"* %5 to i64*
  store i64 %231, i64* %232, align 8
  call void @_ZN5blink25WebGLRenderingContextBase10bufferDataEjNS_11MaybeSharedINS_18DOMArrayBufferViewEEEj(%"class.blink::WebGLRenderingContextBase"* %229, i32 %180, %"class.blink::MaybeShared"* nonnull %5, i32 %225) #9
  br label %233

233:                                              ; preds = %194, %224, %228, %112, %127, %130
  %234 = phi i8* [ %113, %130 ], [ %113, %127 ], [ %113, %112 ], [ %181, %228 ], [ %181, %224 ], [ %181, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #9
  br label %235

235:                                              ; preds = %233, %175
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %236 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %237 = load i64*, i64** %236, align 8
  %238 = icmp eq i64* %237, null
  br i1 %238, label %248, label %239

239:                                              ; preds = %235
  %240 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %106, align 8
  %241 = bitcast %"class.v8::Isolate"* %240 to %"class.v8::internal::Isolate"*
  %242 = load i64, i64* %237, align 8
  %243 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %241, i64 %242) #9
  %244 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %240) #9
  br i1 %244, label %248, label %245

245:                                              ; preds = %239
  %246 = bitcast i64* %243 to %"class.v8::Value"*
  %247 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %240, %"class.v8::Value"* %246) #9
  br label %248

248:                                              ; preds = %245, %239, %235
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #9
  br label %264

264:                                              ; preds = %248, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %99) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  br label %522

265:                                              ; preds = %89
  %266 = load i32, i32* %27, align 8
  %267 = icmp sgt i32 %266, 1
  br i1 %267, label %275, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %270 = load i64*, i64** %269, align 8
  %271 = getelementptr inbounds i64, i64* %270, i64 1
  %272 = load i64, i64* %271, align 8
  %273 = add i64 %272, 160
  %274 = inttoptr i64 %273 to %"class.v8::Value"*
  br label %279

275:                                              ; preds = %265
  %276 = load i64*, i64** %31, align 8
  %277 = getelementptr inbounds i64, i64* %276, i64 1
  %278 = bitcast i64* %277 to %"class.v8::Value"*
  br label %279

279:                                              ; preds = %268, %275
  %280 = phi %"class.v8::Value"* [ %274, %268 ], [ %278, %275 ]
  %281 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %280) #9
  %282 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %283 = load i64*, i64** %282, align 8
  %284 = getelementptr inbounds i64, i64* %283, i64 1
  %285 = bitcast i64* %284 to %"class.v8::Isolate"**
  %286 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %285, align 8
  %287 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %287) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %287, i8 -86, i64 56, i1 false) #9
  %288 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %288, align 8
  %289 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %289, align 8
  %290 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %290, align 2
  %291 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %292 = bitcast i8** %291 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.311, i64 0, i64 0)>, <2 x i8*>* %292, align 8
  %293 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %293, align 8
  %294 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %286, %"class.v8::Isolate"** %294, align 8
  %295 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %295, align 8
  %296 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %297 = bitcast %"class.WTF::StringImpl"** %296 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %297, i8 0, i64 16, i1 false) #9
  %298 = load i32, i32* %27, align 8
  %299 = icmp slt i32 %298, 3
  br i1 %299, label %300, label %320, !prof !5

300:                                              ; preds = %279
  %301 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #9
  %302 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %298) #9
  %303 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %302, %"class.WTF::StringImpl"** %303, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %319, label %306

306:                                              ; preds = %300
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %315

313:                                              ; preds = %306
  %314 = add i32 %312, -1
  store i32 %314, i32* %311, align 4
  br label %315

315:                                              ; preds = %313, %306
  %316 = phi i32 [ %314, %313 ], [ %312, %306 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #9
  br label %319

319:                                              ; preds = %318, %315, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #9
  br label %427

320:                                              ; preds = %279
  %321 = load i64*, i64** %31, align 8
  %322 = getelementptr inbounds i64, i64* %321, i64 -1
  %323 = load i64, i64* %322, align 8
  %324 = add i64 %323, -1
  %325 = inttoptr i64 %324 to i32*
  %326 = load i32, i32* %325, align 4
  %327 = and i64 %323, -4294967296
  %328 = zext i32 %326 to i64
  %329 = or i64 %327, %328
  %330 = add i64 %329, 7
  %331 = inttoptr i64 %330 to i16*
  %332 = load i16, i16* %331, align 2
  switch i16 %332, label %338 [
    i16 1057, label %333
    i16 1056, label %333
    i16 1040, label %333
  ]

333:                                              ; preds = %320, %320, %320
  %334 = bitcast i64* %321 to %"class.v8::Value"*
  %335 = add i64 %323, 19
  %336 = inttoptr i64 %335 to i8**
  %337 = load i8*, i8** %336, align 1
  br label %352

338:                                              ; preds = %320
  %339 = bitcast i64* %322 to %"class.v8::Object"*
  %340 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %339, i32 1) #9
  %341 = load i32, i32* %27, align 8
  %342 = icmp sgt i32 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = bitcast i64** %31 to %"class.v8::Value"**
  %345 = load %"class.v8::Value"*, %"class.v8::Value"** %344, align 8
  br label %352

346:                                              ; preds = %338
  %347 = load i64*, i64** %282, align 8
  %348 = getelementptr inbounds i64, i64* %347, i64 1
  %349 = load i64, i64* %348, align 8
  %350 = add i64 %349, 160
  %351 = inttoptr i64 %350 to %"class.v8::Value"*
  br label %352

352:                                              ; preds = %333, %343, %346
  %353 = phi i8* [ %340, %346 ], [ %337, %333 ], [ %340, %343 ]
  %354 = phi %"class.v8::Value"* [ %351, %346 ], [ %334, %333 ], [ %345, %343 ]
  %355 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %354) #9
  br i1 %355, label %356, label %359, !prof !4

356:                                              ; preds = %352
  %357 = bitcast %"class.v8::Value"* %354 to %"class.v8::Uint32"*
  %358 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %357) #9
  br label %368

359:                                              ; preds = %352
  %360 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %354) #9
  br i1 %360, label %361, label %364, !prof !4

361:                                              ; preds = %359
  %362 = bitcast %"class.v8::Value"* %354 to %"class.v8::Int32"*
  %363 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %362) #9
  br label %368

364:                                              ; preds = %359
  %365 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %286, %"class.v8::Value"* %354, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  %366 = load i32, i32* %295, align 8
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %427

368:                                              ; preds = %364, %361, %356
  %369 = phi i32 [ %365, %364 ], [ %363, %361 ], [ %358, %356 ]
  %370 = load i32, i32* %27, align 8
  %371 = icmp sgt i32 %370, 1
  br i1 %371, label %378, label %372

372:                                              ; preds = %368
  %373 = load i64*, i64** %282, align 8
  %374 = getelementptr inbounds i64, i64* %373, i64 1
  %375 = load i64, i64* %374, align 8
  %376 = add i64 %375, 160
  %377 = inttoptr i64 %376 to %"class.v8::Value"*
  br label %382

378:                                              ; preds = %368
  %379 = load i64*, i64** %31, align 8
  %380 = getelementptr inbounds i64, i64* %379, i64 1
  %381 = bitcast i64* %380 to %"class.v8::Value"*
  br label %382

382:                                              ; preds = %378, %372
  %383 = phi %"class.v8::Value"* [ %377, %372 ], [ %381, %378 ]
  %384 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %383) #9
  br i1 %384, label %385, label %389, !prof !4

385:                                              ; preds = %382
  %386 = bitcast %"class.v8::Value"* %383 to %"class.v8::Int32"*
  %387 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %386) #9
  %388 = sext i32 %387 to i64
  br label %391

389:                                              ; preds = %382
  %390 = call i64 @_ZN5blink11ToInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %286, %"class.v8::Value"* %383, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %391

391:                                              ; preds = %389, %385
  %392 = phi i64 [ %388, %385 ], [ %390, %389 ]
  %393 = load i32, i32* %295, align 8
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %427

395:                                              ; preds = %391
  %396 = load i32, i32* %27, align 8
  %397 = icmp sgt i32 %396, 2
  br i1 %397, label %404, label %398

398:                                              ; preds = %395
  %399 = load i64*, i64** %282, align 8
  %400 = getelementptr inbounds i64, i64* %399, i64 1
  %401 = load i64, i64* %400, align 8
  %402 = add i64 %401, 160
  %403 = inttoptr i64 %402 to %"class.v8::Value"*
  br label %408

404:                                              ; preds = %395
  %405 = load i64*, i64** %31, align 8
  %406 = getelementptr inbounds i64, i64* %405, i64 2
  %407 = bitcast i64* %406 to %"class.v8::Value"*
  br label %408

408:                                              ; preds = %404, %398
  %409 = phi %"class.v8::Value"* [ %403, %398 ], [ %407, %404 ]
  %410 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %409) #9
  br i1 %410, label %411, label %414, !prof !4

411:                                              ; preds = %408
  %412 = bitcast %"class.v8::Value"* %409 to %"class.v8::Uint32"*
  %413 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %412) #9
  br label %421

414:                                              ; preds = %408
  %415 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %409) #9
  br i1 %415, label %416, label %419, !prof !4

416:                                              ; preds = %414
  %417 = bitcast %"class.v8::Value"* %409 to %"class.v8::Int32"*
  %418 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %417) #9
  br label %421

419:                                              ; preds = %414
  %420 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %286, %"class.v8::Value"* %409, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %421

421:                                              ; preds = %419, %416, %411
  %422 = phi i32 [ %413, %411 ], [ %418, %416 ], [ %420, %419 ]
  %423 = load i32, i32* %295, align 8
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %421
  %426 = bitcast i8* %353 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10bufferDataEjlj(%"class.blink::WebGLRenderingContextBase"* %426, i32 %369, i64 %392, i32 %422) #9
  br label %427

427:                                              ; preds = %425, %421, %391, %364, %319
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %288, align 8
  %428 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %429 = load i64*, i64** %428, align 8
  %430 = icmp eq i64* %429, null
  br i1 %430, label %440, label %431

431:                                              ; preds = %427
  %432 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %294, align 8
  %433 = bitcast %"class.v8::Isolate"* %432 to %"class.v8::internal::Isolate"*
  %434 = load i64, i64* %429, align 8
  %435 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %433, i64 %434) #9
  %436 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %432) #9
  br i1 %436, label %440, label %437

437:                                              ; preds = %431
  %438 = bitcast i64* %435 to %"class.v8::Value"*
  %439 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %432, %"class.v8::Value"* %438) #9
  br label %440

440:                                              ; preds = %437, %431, %427
  %441 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %442 = icmp eq %"class.WTF::StringImpl"* %441, null
  br i1 %442, label %456, label %443

443:                                              ; preds = %440
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load atomic i32, i32* %444 monotonic, align 4
  %446 = and i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 0, i32 0
  %449 = load i32, i32* %448, align 4
  br i1 %447, label %450, label %452

450:                                              ; preds = %443
  %451 = add i32 %449, -1
  store i32 %451, i32* %448, align 4
  br label %452

452:                                              ; preds = %450, %443
  %453 = phi i32 [ %451, %450 ], [ %449, %443 ]
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %441) #9
  br label %456

456:                                              ; preds = %440, %452, %455
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %287) #9
  br label %522

457:                                              ; preds = %26
  %458 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %459 = load i64*, i64** %458, align 8
  %460 = getelementptr inbounds i64, i64* %459, i64 1
  %461 = load i64, i64* %460, align 8
  %462 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %462) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %462, i8 -86, i64 56, i1 false)
  %463 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %463, align 8
  %464 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %464, align 8
  %465 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %465, align 2
  %466 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %467 = bitcast i8** %466 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.311, i64 0, i64 0)>, <2 x i8*>* %467, align 8
  %468 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %468, align 8
  %469 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  %470 = bitcast %"class.v8::Isolate"** %469 to i64*
  store i64 %461, i64* %470, align 8
  %471 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %471, align 8
  %472 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %473 = bitcast %"class.WTF::StringImpl"** %472 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %473, i8 0, i64 16, i1 false) #9
  %474 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %474) #9
  %475 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %28) #9
  %476 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %475, %"class.WTF::StringImpl"** %476, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  %478 = icmp eq %"class.WTF::StringImpl"* %477, null
  br i1 %478, label %492, label %479

479:                                              ; preds = %457
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = load atomic i32, i32* %480 monotonic, align 4
  %482 = and i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 0
  %485 = load i32, i32* %484, align 4
  br i1 %483, label %486, label %488

486:                                              ; preds = %479
  %487 = add i32 %485, -1
  store i32 %487, i32* %484, align 4
  br label %488

488:                                              ; preds = %486, %479
  %489 = phi i32 [ %487, %486 ], [ %485, %479 ]
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %492

491:                                              ; preds = %488
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %477) #9
  br label %492

492:                                              ; preds = %457, %488, %491
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %474) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %463, align 8
  %493 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %494 = load i64*, i64** %493, align 8
  %495 = icmp eq i64* %494, null
  br i1 %495, label %505, label %496

496:                                              ; preds = %492
  %497 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %469, align 8
  %498 = bitcast %"class.v8::Isolate"* %497 to %"class.v8::internal::Isolate"*
  %499 = load i64, i64* %494, align 8
  %500 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %498, i64 %499) #9
  %501 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %497) #9
  br i1 %501, label %505, label %502

502:                                              ; preds = %496
  %503 = bitcast i64* %500 to %"class.v8::Value"*
  %504 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %497, %"class.v8::Value"* %503) #9
  br label %505

505:                                              ; preds = %502, %496, %492
  %506 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %472, align 8
  %507 = icmp eq %"class.WTF::StringImpl"* %506, null
  br i1 %507, label %521, label %508

508:                                              ; preds = %505
  %509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %510 = load atomic i32, i32* %509 monotonic, align 4
  %511 = and i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 0
  %514 = load i32, i32* %513, align 4
  br i1 %512, label %515, label %517

515:                                              ; preds = %508
  %516 = add i32 %514, -1
  store i32 %516, i32* %513, align 4
  br label %517

517:                                              ; preds = %515, %508
  %518 = phi i32 [ %516, %515 ], [ %514, %508 ]
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %521

520:                                              ; preds = %517
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %506) #9
  br label %521

521:                                              ; preds = %505, %517, %520
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %462) #9
  br label %522

522:                                              ; preds = %456, %521, %264, %74, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30BufferSubDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::FlexibleArrayBufferView", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::ExceptionState", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %10 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %9, i64 0, i32 5
  %15 = load %"class.base::TickClock"*, %"class.base::TickClock"** %14, align 8
  %16 = bitcast %"class.base::TickClock"* %15 to i64 (%"class.base::TickClock"*)***
  %17 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %17, i64 2
  %19 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, align 8
  %20 = tail call i64 %19(%"class.base::TickClock"* %15) #9
  %21 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %9, i64 0, i32 4, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %13
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %9) #9
  br label %25

25:                                               ; preds = %1, %13, %24
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, 2
  br i1 %28, label %29, label %398

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 2
  %33 = bitcast i64* %32 to %"class.v8::Value"*
  %34 = tail call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %33) #9
  br i1 %34, label %52, label %35

35:                                               ; preds = %29
  %36 = load i32, i32* %26, align 8
  %37 = icmp sgt i32 %36, 2
  br i1 %37, label %45, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 160
  %44 = inttoptr i64 %43 to %"class.v8::Value"*
  br label %49

45:                                               ; preds = %35
  %46 = load i64*, i64** %30, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 2
  %48 = bitcast i64* %47 to %"class.v8::Value"*
  br label %49

49:                                               ; preds = %38, %45
  %50 = phi %"class.v8::Value"* [ %44, %38 ], [ %48, %45 ]
  %51 = tail call zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %215

52:                                               ; preds = %29, %49
  %53 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 1
  %56 = bitcast i64* %55 to %"class.v8::Isolate"**
  %57 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %56, align 8
  %58 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %58) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 56, i1 false) #9
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %61, align 2
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %63 = bitcast i8** %62 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.312, i64 0, i64 0)>, <2 x i8*>* %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %57, %"class.v8::Isolate"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %68 = bitcast %"class.WTF::StringImpl"** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #9
  %69 = load i32, i32* %26, align 8
  %70 = icmp slt i32 %69, 3
  br i1 %70, label %71, label %91, !prof !5

71:                                               ; preds = %52
  %72 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  %73 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %69) #9
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %74, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #9
  br label %90

90:                                               ; preds = %89, %86, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %186

91:                                               ; preds = %52
  %92 = load i64*, i64** %30, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 -1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i64 %94, -4294967296
  %99 = zext i32 %97 to i64
  %100 = or i64 %98, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load i16, i16* %102, align 2
  switch i16 %103, label %109 [
    i16 1057, label %104
    i16 1056, label %104
    i16 1040, label %104
  ]

104:                                              ; preds = %91, %91, %91
  %105 = bitcast i64* %92 to %"class.v8::Value"*
  %106 = add i64 %94, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %123

109:                                              ; preds = %91
  %110 = bitcast i64* %93 to %"class.v8::Object"*
  %111 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %110, i32 1) #9
  %112 = load i32, i32* %26, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast i64** %30 to %"class.v8::Value"**
  %116 = load %"class.v8::Value"*, %"class.v8::Value"** %115, align 8
  br label %123

117:                                              ; preds = %109
  %118 = load i64*, i64** %53, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %104, %114, %117
  %124 = phi i8* [ %111, %117 ], [ %108, %104 ], [ %111, %114 ]
  %125 = phi %"class.v8::Value"* [ %122, %117 ], [ %105, %104 ], [ %116, %114 ]
  %126 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %123
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %139

130:                                              ; preds = %123
  %131 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %139

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %57, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %137 = load i32, i32* %66, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %186

139:                                              ; preds = %135, %132, %127
  %140 = phi i32 [ %136, %135 ], [ %134, %132 ], [ %129, %127 ]
  %141 = load i32, i32* %26, align 8
  %142 = icmp sgt i32 %141, 1
  br i1 %142, label %149, label %143

143:                                              ; preds = %139
  %144 = load i64*, i64** %53, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 160
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  br label %153

149:                                              ; preds = %139
  %150 = load i64*, i64** %30, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = bitcast i64* %151 to %"class.v8::Value"*
  br label %153

153:                                              ; preds = %149, %143
  %154 = phi %"class.v8::Value"* [ %148, %143 ], [ %152, %149 ]
  %155 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %154) #9
  br i1 %155, label %156, label %160, !prof !4

156:                                              ; preds = %153
  %157 = bitcast %"class.v8::Value"* %154 to %"class.v8::Int32"*
  %158 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %157) #9
  %159 = sext i32 %158 to i64
  br label %162

160:                                              ; preds = %153
  %161 = call i64 @_ZN5blink11ToInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %57, %"class.v8::Value"* %154, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  br label %162

162:                                              ; preds = %160, %156
  %163 = phi i64 [ %159, %156 ], [ %161, %160 ]
  %164 = load i32, i32* %66, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %186

166:                                              ; preds = %162
  %167 = load i32, i32* %26, align 8
  %168 = icmp sgt i32 %167, 2
  br i1 %168, label %175, label %169

169:                                              ; preds = %166
  %170 = load i64*, i64** %53, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 1
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, 160
  %174 = inttoptr i64 %173 to %"class.v8::Value"*
  br label %179

175:                                              ; preds = %166
  %176 = load i64*, i64** %30, align 8
  %177 = getelementptr inbounds i64, i64* %176, i64 2
  %178 = bitcast i64* %177 to %"class.v8::Value"*
  br label %179

179:                                              ; preds = %175, %169
  %180 = phi %"class.v8::Value"* [ %174, %169 ], [ %178, %175 ]
  %181 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_14DOMArrayBufferEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %57, i32 2, %"class.v8::Value"* %180, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %182 = load i32, i32* %66, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = bitcast i8* %124 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13bufferSubDataEjlPNS_14DOMArrayBufferE(%"class.blink::WebGLRenderingContextBase"* %185, i32 %140, i64 %163, %"class.blink::DOMArrayBuffer"* %181) #9
  br label %186

186:                                              ; preds = %184, %179, %162, %135, %90
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %187 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %188 = load i64*, i64** %187, align 8
  %189 = icmp eq i64* %188, null
  br i1 %189, label %199, label %190

190:                                              ; preds = %186
  %191 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %192 = bitcast %"class.v8::Isolate"* %191 to %"class.v8::internal::Isolate"*
  %193 = load i64, i64* %188, align 8
  %194 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %192, i64 %193) #9
  %195 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %191) #9
  br i1 %195, label %199, label %196

196:                                              ; preds = %190
  %197 = bitcast i64* %194 to %"class.v8::Value"*
  %198 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %191, %"class.v8::Value"* %197) #9
  br label %199

199:                                              ; preds = %196, %190, %186
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %467, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %467

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #9
  br label %467

215:                                              ; preds = %49
  %216 = load i32, i32* %26, align 8
  %217 = icmp sgt i32 %216, 2
  br i1 %217, label %225, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %220 = load i64*, i64** %219, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 1
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, 160
  %224 = inttoptr i64 %223 to %"class.v8::Value"*
  br label %229

225:                                              ; preds = %215
  %226 = load i64*, i64** %30, align 8
  %227 = getelementptr inbounds i64, i64* %226, i64 2
  %228 = bitcast i64* %227 to %"class.v8::Value"*
  br label %229

229:                                              ; preds = %218, %225
  %230 = phi %"class.v8::Value"* [ %224, %218 ], [ %228, %225 ]
  %231 = tail call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %230) #9
  br i1 %231, label %234, label %232

232:                                              ; preds = %229
  %233 = load i32, i32* %26, align 8
  br label %398

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %236 = load i64*, i64** %235, align 8
  %237 = getelementptr inbounds i64, i64* %236, i64 1
  %238 = bitcast i64* %237 to %"class.v8::Isolate"**
  %239 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %238, align 8
  %240 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %240) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %240, i8 -86, i64 56, i1 false) #9
  %241 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %241, align 8
  %242 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %242, align 8
  %243 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %243, align 2
  %244 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %245 = bitcast i8** %244 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.312, i64 0, i64 0)>, <2 x i8*>* %245, align 8
  %246 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %246, align 8
  %247 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %239, %"class.v8::Isolate"** %247, align 8
  %248 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %248, align 8
  %249 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %250 = bitcast %"class.WTF::StringImpl"** %249 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %250, i8 0, i64 16, i1 false) #9
  %251 = load i32, i32* %26, align 8
  %252 = icmp slt i32 %251, 3
  br i1 %252, label %253, label %273, !prof !5

253:                                              ; preds = %234
  %254 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #9
  %255 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %251) #9
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %256, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #9
  br label %272

272:                                              ; preds = %271, %268, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #9
  br label %369

273:                                              ; preds = %234
  %274 = load i64*, i64** %30, align 8
  %275 = getelementptr inbounds i64, i64* %274, i64 -1
  %276 = load i64, i64* %275, align 8
  %277 = add i64 %276, -1
  %278 = inttoptr i64 %277 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = and i64 %276, -4294967296
  %281 = zext i32 %279 to i64
  %282 = or i64 %280, %281
  %283 = add i64 %282, 7
  %284 = inttoptr i64 %283 to i16*
  %285 = load i16, i16* %284, align 2
  switch i16 %285, label %291 [
    i16 1057, label %286
    i16 1056, label %286
    i16 1040, label %286
  ]

286:                                              ; preds = %273, %273, %273
  %287 = bitcast i64* %274 to %"class.v8::Value"*
  %288 = add i64 %276, 19
  %289 = inttoptr i64 %288 to i8**
  %290 = load i8*, i8** %289, align 1
  br label %305

291:                                              ; preds = %273
  %292 = bitcast i64* %275 to %"class.v8::Object"*
  %293 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %292, i32 1) #9
  %294 = load i32, i32* %26, align 8
  %295 = icmp sgt i32 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %291
  %297 = bitcast i64** %30 to %"class.v8::Value"**
  %298 = load %"class.v8::Value"*, %"class.v8::Value"** %297, align 8
  br label %305

299:                                              ; preds = %291
  %300 = load i64*, i64** %235, align 8
  %301 = getelementptr inbounds i64, i64* %300, i64 1
  %302 = load i64, i64* %301, align 8
  %303 = add i64 %302, 160
  %304 = inttoptr i64 %303 to %"class.v8::Value"*
  br label %305

305:                                              ; preds = %286, %296, %299
  %306 = phi i8* [ %293, %299 ], [ %290, %286 ], [ %293, %296 ]
  %307 = phi %"class.v8::Value"* [ %304, %299 ], [ %287, %286 ], [ %298, %296 ]
  %308 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %307) #9
  br i1 %308, label %309, label %312, !prof !4

309:                                              ; preds = %305
  %310 = bitcast %"class.v8::Value"* %307 to %"class.v8::Uint32"*
  %311 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %310) #9
  br label %321

312:                                              ; preds = %305
  %313 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %307) #9
  br i1 %313, label %314, label %317, !prof !4

314:                                              ; preds = %312
  %315 = bitcast %"class.v8::Value"* %307 to %"class.v8::Int32"*
  %316 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %315) #9
  br label %321

317:                                              ; preds = %312
  %318 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %239, %"class.v8::Value"* %307, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %319 = load i32, i32* %248, align 8
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %369

321:                                              ; preds = %317, %314, %309
  %322 = phi i32 [ %318, %317 ], [ %316, %314 ], [ %311, %309 ]
  %323 = load i32, i32* %26, align 8
  %324 = icmp sgt i32 %323, 1
  br i1 %324, label %331, label %325

325:                                              ; preds = %321
  %326 = load i64*, i64** %235, align 8
  %327 = getelementptr inbounds i64, i64* %326, i64 1
  %328 = load i64, i64* %327, align 8
  %329 = add i64 %328, 160
  %330 = inttoptr i64 %329 to %"class.v8::Value"*
  br label %335

331:                                              ; preds = %321
  %332 = load i64*, i64** %30, align 8
  %333 = getelementptr inbounds i64, i64* %332, i64 1
  %334 = bitcast i64* %333 to %"class.v8::Value"*
  br label %335

335:                                              ; preds = %331, %325
  %336 = phi %"class.v8::Value"* [ %330, %325 ], [ %334, %331 ]
  %337 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %336) #9
  br i1 %337, label %338, label %342, !prof !4

338:                                              ; preds = %335
  %339 = bitcast %"class.v8::Value"* %336 to %"class.v8::Int32"*
  %340 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %339) #9
  %341 = sext i32 %340 to i64
  br label %344

342:                                              ; preds = %335
  %343 = call i64 @_ZN5blink11ToInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %239, %"class.v8::Value"* %336, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %344

344:                                              ; preds = %342, %338
  %345 = phi i64 [ %341, %338 ], [ %343, %342 ]
  %346 = load i32, i32* %248, align 8
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %369

348:                                              ; preds = %344
  %349 = bitcast %"class.blink::FlexibleArrayBufferView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %349) #9
  %350 = load i32, i32* %26, align 8
  %351 = icmp sgt i32 %350, 2
  br i1 %351, label %358, label %352

352:                                              ; preds = %348
  %353 = load i64*, i64** %235, align 8
  %354 = getelementptr inbounds i64, i64* %353, i64 1
  %355 = load i64, i64* %354, align 8
  %356 = add i64 %355, 160
  %357 = inttoptr i64 %356 to %"class.v8::Value"*
  br label %362

358:                                              ; preds = %348
  %359 = load i64*, i64** %30, align 8
  %360 = getelementptr inbounds i64, i64* %359, i64 2
  %361 = bitcast i64* %360 to %"class.v8::Value"*
  br label %362

362:                                              ; preds = %358, %352
  %363 = phi %"class.v8::Value"* [ %357, %352 ], [ %361, %358 ]
  call void @_ZN5blink17NativeValueTraitsINS_23FlexibleArrayBufferViewEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::FlexibleArrayBufferView"* nonnull sret %4, %"class.v8::Isolate"* %239, i32 2, %"class.v8::Value"* %363, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %364 = load i32, i32* %248, align 8
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %368

366:                                              ; preds = %362
  %367 = bitcast i8* %306 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13bufferSubDataEjlRKNS_23FlexibleArrayBufferViewE(%"class.blink::WebGLRenderingContextBase"* %367, i32 %322, i64 %345, %"class.blink::FlexibleArrayBufferView"* nonnull dereferenceable(88) %4) #9
  br label %368

368:                                              ; preds = %366, %362
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %349) #9
  br label %369

369:                                              ; preds = %368, %344, %317, %272
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %241, align 8
  %370 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %371 = load i64*, i64** %370, align 8
  %372 = icmp eq i64* %371, null
  br i1 %372, label %382, label %373

373:                                              ; preds = %369
  %374 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %247, align 8
  %375 = bitcast %"class.v8::Isolate"* %374 to %"class.v8::internal::Isolate"*
  %376 = load i64, i64* %371, align 8
  %377 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %375, i64 %376) #9
  %378 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %374) #9
  br i1 %378, label %382, label %379

379:                                              ; preds = %373
  %380 = bitcast i64* %377 to %"class.v8::Value"*
  %381 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %374, %"class.v8::Value"* %380) #9
  br label %382

382:                                              ; preds = %379, %373, %369
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %467, label %385

385:                                              ; preds = %382
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %467

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #9
  br label %467

398:                                              ; preds = %232, %25
  %399 = phi i32 [ %233, %232 ], [ %27, %25 ]
  %400 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %401 = load i64*, i64** %400, align 8
  %402 = getelementptr inbounds i64, i64* %401, i64 1
  %403 = load i64, i64* %402, align 8
  %404 = bitcast %"class.blink::ExceptionState"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %404) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %404, i8 -86, i64 56, i1 false)
  %405 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %405, align 8
  %406 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 0
  store i16 6, i16* %406, align 8
  %407 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 1
  store i16 0, i16* %407, align 2
  %408 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 2
  %409 = bitcast i8** %408 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.312, i64 0, i64 0)>, <2 x i8*>* %409, align 8
  %410 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %410, align 8
  %411 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 3
  %412 = bitcast %"class.v8::Isolate"** %411 to i64*
  store i64 %403, i64* %412, align 8
  %413 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 4
  store i32 0, i32* %413, align 8
  %414 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 5, i32 0, i32 0
  %415 = bitcast %"class.WTF::StringImpl"** %414 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %415, i8 0, i64 16, i1 false) #9
  %416 = icmp slt i32 %399, 3
  br i1 %416, label %417, label %437, !prof !5

417:                                              ; preds = %398
  %418 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %418) #9
  %419 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %399) #9
  %420 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %419, %"class.WTF::StringImpl"** %420, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #9
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %420, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %436, label %423

423:                                              ; preds = %417
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #9
  br label %436

436:                                              ; preds = %417, %432, %435
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %418) #9
  br label %438

437:                                              ; preds = %398
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %438

438:                                              ; preds = %437, %436
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %405, align 8
  %439 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %440 = load i64*, i64** %439, align 8
  %441 = icmp eq i64* %440, null
  br i1 %441, label %451, label %442

442:                                              ; preds = %438
  %443 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %411, align 8
  %444 = bitcast %"class.v8::Isolate"* %443 to %"class.v8::internal::Isolate"*
  %445 = load i64, i64* %440, align 8
  %446 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %444, i64 %445) #9
  %447 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %443) #9
  br i1 %447, label %451, label %448

448:                                              ; preds = %442
  %449 = bitcast i64* %446 to %"class.v8::Value"*
  %450 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %443, %"class.v8::Value"* %449) #9
  br label %451

451:                                              ; preds = %448, %442, %438
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %414, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %467, label %454

454:                                              ; preds = %451
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #9
  br label %467

467:                                              ; preds = %466, %463, %451, %397, %394, %382, %214, %211, %199
  %468 = phi i8* [ %58, %199 ], [ %58, %211 ], [ %58, %214 ], [ %240, %382 ], [ %240, %394 ], [ %240, %397 ], [ %404, %451 ], [ %404, %463 ], [ %404, %466 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %468) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context39CheckFramebufferStatusOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.313, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %128

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %128

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %95 = call i32 @_ZN5blink25WebGLRenderingContextBase22checkFramebufferStatusEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  %96 = load i64*, i64** %4, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 3
  %98 = icmp sgt i32 %95, -1
  br i1 %98, label %99, label %116, !prof !4

99:                                               ; preds = %92
  %100 = icmp ult i32 %95, 1073741824
  br i1 %100, label %101, label %104, !prof !4

101:                                              ; preds = %99
  %102 = sext i32 %95 to i64
  %103 = shl nsw i64 %102, 1
  store i64 %103, i64* %97, align 8
  br label %128

104:                                              ; preds = %99
  %105 = getelementptr inbounds i64, i64* %96, i64 1
  %106 = bitcast i64* %105 to %"class.v8::Isolate"**
  %107 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %106, align 8
  %108 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %107, i32 %95) #9
  %109 = icmp eq %"class.v8::Integer"* %108, null
  br i1 %109, label %110, label %113, !prof !5

110:                                              ; preds = %104
  %111 = getelementptr inbounds i64, i64* %96, i64 2
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %97, align 8
  br label %128

113:                                              ; preds = %104
  %114 = bitcast %"class.v8::Integer"* %108 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %97, align 8
  br label %128

116:                                              ; preds = %92
  %117 = getelementptr inbounds i64, i64* %96, i64 1
  %118 = bitcast i64* %117 to %"class.v8::Isolate"**
  %119 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %118, align 8
  %120 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %119, i32 %95) #9
  %121 = icmp eq %"class.v8::Integer"* %120, null
  br i1 %121, label %122, label %125, !prof !5

122:                                              ; preds = %116
  %123 = getelementptr inbounds i64, i64* %96, i64 2
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %97, align 8
  br label %128

125:                                              ; preds = %116
  %126 = bitcast %"class.v8::Integer"* %120 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %97, align 8
  br label %128

128:                                              ; preds = %88, %125, %122, %113, %110, %101, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %129 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i64* %130, null
  br i1 %131, label %141, label %132

132:                                              ; preds = %128
  %133 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %134 = bitcast %"class.v8::Isolate"* %133 to %"class.v8::internal::Isolate"*
  %135 = load i64, i64* %130, align 8
  %136 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %134, i64 %135) #9
  %137 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %133) #9
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = bitcast i64* %136 to %"class.v8::Value"*
  %140 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %133, %"class.v8::Value"* %139) #9
  br label %141

141:                                              ; preds = %138, %132, %128
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #9
  br label %157

157:                                              ; preds = %141, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context22ClearOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.314, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase5clearEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27ClearColorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.315, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %193

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %193

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = fcmp ogt double %88, 0x47EFFFFFE0000000
  br i1 %89, label %94, label %90, !prof !5

90:                                               ; preds = %87
  %91 = fcmp olt double %88, 0xC7EFFFFFE0000000
  br i1 %91, label %94, label %92, !prof !5

92:                                               ; preds = %90
  %93 = fptrunc double %88 to float
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi float [ 0xFFF0000000000000, %90 ], [ 0x7FF0000000000000, %87 ], [ %93, %92 ]
  %96 = load i32, i32* %20, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load i64*, i64** %4, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %94
  %105 = load i64*, i64** %44, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %109) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::Number"*
  %113 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %112) #9
  br label %116

114:                                              ; preds = %108
  %115 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %109, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %116

116:                                              ; preds = %114, %111
  %117 = phi double [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %17, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %193

120:                                              ; preds = %116
  %121 = fcmp ogt double %117, 0x47EFFFFFE0000000
  br i1 %121, label %126, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fcmp olt double %117, 0xC7EFFFFFE0000000
  br i1 %123, label %126, label %124, !prof !5

124:                                              ; preds = %122
  %125 = fptrunc double %117 to float
  br label %126

126:                                              ; preds = %120, %122, %124
  %127 = phi float [ 0xFFF0000000000000, %122 ], [ 0x7FF0000000000000, %120 ], [ %125, %124 ]
  %128 = load i32, i32* %20, align 8
  %129 = icmp sgt i32 %128, 2
  br i1 %129, label %136, label %130

130:                                              ; preds = %126
  %131 = load i64*, i64** %4, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 1
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 160
  %135 = inttoptr i64 %134 to %"class.v8::Value"*
  br label %140

136:                                              ; preds = %126
  %137 = load i64*, i64** %44, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 2
  %139 = bitcast i64* %138 to %"class.v8::Value"*
  br label %140

140:                                              ; preds = %130, %136
  %141 = phi %"class.v8::Value"* [ %135, %130 ], [ %139, %136 ]
  %142 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %141) #9
  br i1 %142, label %143, label %146, !prof !4

143:                                              ; preds = %140
  %144 = bitcast %"class.v8::Value"* %141 to %"class.v8::Number"*
  %145 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %144) #9
  br label %148

146:                                              ; preds = %140
  %147 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %141, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %148

148:                                              ; preds = %146, %143
  %149 = phi double [ %145, %143 ], [ %147, %146 ]
  %150 = load i32, i32* %17, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %193

152:                                              ; preds = %148
  %153 = fcmp ogt double %149, 0x47EFFFFFE0000000
  br i1 %153, label %158, label %154, !prof !5

154:                                              ; preds = %152
  %155 = fcmp olt double %149, 0xC7EFFFFFE0000000
  br i1 %155, label %158, label %156, !prof !5

156:                                              ; preds = %154
  %157 = fptrunc double %149 to float
  br label %158

158:                                              ; preds = %152, %154, %156
  %159 = phi float [ 0xFFF0000000000000, %154 ], [ 0x7FF0000000000000, %152 ], [ %157, %156 ]
  %160 = load i32, i32* %20, align 8
  %161 = icmp sgt i32 %160, 3
  br i1 %161, label %168, label %162

162:                                              ; preds = %158
  %163 = load i64*, i64** %4, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 1
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, 160
  %167 = inttoptr i64 %166 to %"class.v8::Value"*
  br label %172

168:                                              ; preds = %158
  %169 = load i64*, i64** %44, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 3
  %171 = bitcast i64* %170 to %"class.v8::Value"*
  br label %172

172:                                              ; preds = %162, %168
  %173 = phi %"class.v8::Value"* [ %167, %162 ], [ %171, %168 ]
  %174 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %173) #9
  br i1 %174, label %175, label %178, !prof !4

175:                                              ; preds = %172
  %176 = bitcast %"class.v8::Value"* %173 to %"class.v8::Number"*
  %177 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %176) #9
  br label %180

178:                                              ; preds = %172
  %179 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %173, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %180

180:                                              ; preds = %178, %175
  %181 = phi double [ %177, %175 ], [ %179, %178 ]
  %182 = load i32, i32* %17, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %193

184:                                              ; preds = %180
  %185 = fcmp ogt double %181, 0x47EFFFFFE0000000
  br i1 %185, label %190, label %186, !prof !5

186:                                              ; preds = %184
  %187 = fcmp olt double %181, 0xC7EFFFFFE0000000
  br i1 %187, label %190, label %188, !prof !5

188:                                              ; preds = %186
  %189 = fptrunc double %181 to float
  br label %190

190:                                              ; preds = %184, %186, %188
  %191 = phi float [ 0xFFF0000000000000, %186 ], [ 0x7FF0000000000000, %184 ], [ %189, %188 ]
  %192 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10clearColorEffff(%"class.blink::WebGLRenderingContextBase"* %192, float %95, float %127, float %159, float %191) #9
  br label %193

193:                                              ; preds = %180, %148, %116, %83, %190, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %194 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %195 = load i64*, i64** %194, align 8
  %196 = icmp eq i64* %195, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %193
  %198 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %199 = bitcast %"class.v8::Isolate"* %198 to %"class.v8::internal::Isolate"*
  %200 = load i64, i64* %195, align 8
  %201 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %199, i64 %200) #9
  %202 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %198) #9
  br i1 %202, label %206, label %203

203:                                              ; preds = %197
  %204 = bitcast i64* %201 to %"class.v8::Value"*
  %205 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %198, %"class.v8::Value"* %204) #9
  br label %206

206:                                              ; preds = %203, %197, %193
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #9
  br label %222

222:                                              ; preds = %206, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27ClearDepthOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.316, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %97

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %97

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = fcmp ogt double %88, 0x47EFFFFFE0000000
  br i1 %89, label %94, label %90, !prof !5

90:                                               ; preds = %87
  %91 = fcmp olt double %88, 0xC7EFFFFFE0000000
  br i1 %91, label %94, label %92, !prof !5

92:                                               ; preds = %90
  %93 = fptrunc double %88 to float
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi float [ 0xFFF0000000000000, %90 ], [ 0x7FF0000000000000, %87 ], [ %93, %92 ]
  %96 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10clearDepthEf(%"class.blink::WebGLRenderingContextBase"* %96, float %95) #9
  br label %97

97:                                               ; preds = %83, %94, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %98 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %99, null
  br i1 %100, label %110, label %101

101:                                              ; preds = %97
  %102 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %103 = bitcast %"class.v8::Isolate"* %102 to %"class.v8::internal::Isolate"*
  %104 = load i64, i64* %99, align 8
  %105 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %103, i64 %104) #9
  %106 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %102) #9
  br i1 %106, label %110, label %107

107:                                              ; preds = %101
  %108 = bitcast i64* %105 to %"class.v8::Value"*
  %109 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %102, %"class.v8::Value"* %108) #9
  br label %110

110:                                              ; preds = %107, %101, %97
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #9
  br label %126

126:                                              ; preds = %110, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29ClearStencilOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.317, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %90

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %82 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %80, %83
  %88 = phi i32 [ %82, %80 ], [ %84, %83 ]
  %89 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12clearStencilEi(%"class.blink::WebGLRenderingContextBase"* %89, i32 %88) #9
  br label %90

90:                                               ; preds = %83, %87, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %91 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = icmp eq i64* %92, null
  br i1 %93, label %103, label %94

94:                                               ; preds = %90
  %95 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %96 = bitcast %"class.v8::Isolate"* %95 to %"class.v8::internal::Isolate"*
  %97 = load i64, i64* %92, align 8
  %98 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %96, i64 %97) #9
  %99 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %95) #9
  br i1 %99, label %103, label %100

100:                                              ; preds = %94
  %101 = bitcast i64* %98 to %"class.v8::Value"*
  %102 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %95, %"class.v8::Value"* %101) #9
  br label %103

103:                                              ; preds = %100, %94, %90
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %103, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26ColorMaskOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.318, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %42, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %157, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %157

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %157

42:                                               ; preds = %1
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i64 %46, -4294967296
  %51 = zext i32 %49 to i64
  %52 = or i64 %50, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load i16, i16* %54, align 2
  switch i16 %55, label %60 [
    i16 1057, label %56
    i16 1056, label %56
    i16 1040, label %56
  ]

56:                                               ; preds = %42, %42, %42
  %57 = add i64 %46, 19
  %58 = inttoptr i64 %57 to i8**
  %59 = load i8*, i8** %58, align 1
  br label %71

60:                                               ; preds = %42
  %61 = bitcast i64* %45 to %"class.v8::Object"*
  %62 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %61, i32 1) #9
  %63 = load i32, i32* %20, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = load i64*, i64** %4, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 1
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 160
  %70 = inttoptr i64 %69 to %"class.v8::Value"*
  br label %75

71:                                               ; preds = %56, %60
  %72 = phi i8* [ %59, %56 ], [ %62, %60 ]
  %73 = bitcast i64** %43 to %"class.v8::Value"**
  %74 = load %"class.v8::Value"*, %"class.v8::Value"** %73, align 8
  br label %75

75:                                               ; preds = %65, %71
  %76 = phi i8* [ %62, %65 ], [ %72, %71 ]
  %77 = phi %"class.v8::Value"* [ %70, %65 ], [ %74, %71 ]
  %78 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %77) #9
  br i1 %78, label %79, label %82, !prof !4

79:                                               ; preds = %75
  %80 = bitcast %"class.v8::Value"* %77 to %"class.v8::Boolean"*
  %81 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %80) #9
  br label %84

82:                                               ; preds = %75
  %83 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %77, %"class.v8::Isolate"* %8) #9
  br label %84

84:                                               ; preds = %82, %79
  %85 = phi i1 [ %81, %79 ], [ %83, %82 ]
  %86 = zext i1 %85 to i8
  %87 = load i32, i32* %20, align 8
  %88 = icmp sgt i32 %87, 1
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = load i64*, i64** %4, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 1
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 160
  %94 = inttoptr i64 %93 to %"class.v8::Value"*
  br label %99

95:                                               ; preds = %84
  %96 = load i64*, i64** %43, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 1
  %98 = bitcast i64* %97 to %"class.v8::Value"*
  br label %99

99:                                               ; preds = %89, %95
  %100 = phi %"class.v8::Value"* [ %94, %89 ], [ %98, %95 ]
  %101 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %100) #9
  br i1 %101, label %102, label %105, !prof !4

102:                                              ; preds = %99
  %103 = bitcast %"class.v8::Value"* %100 to %"class.v8::Boolean"*
  %104 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %103) #9
  br label %107

105:                                              ; preds = %99
  %106 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %100, %"class.v8::Isolate"* %8) #9
  br label %107

107:                                              ; preds = %105, %102
  %108 = phi i1 [ %104, %102 ], [ %106, %105 ]
  %109 = zext i1 %108 to i8
  %110 = load i32, i32* %20, align 8
  %111 = icmp sgt i32 %110, 2
  br i1 %111, label %118, label %112

112:                                              ; preds = %107
  %113 = load i64*, i64** %4, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 1
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 160
  %117 = inttoptr i64 %116 to %"class.v8::Value"*
  br label %122

118:                                              ; preds = %107
  %119 = load i64*, i64** %43, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 2
  %121 = bitcast i64* %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %112, %118
  %123 = phi %"class.v8::Value"* [ %117, %112 ], [ %121, %118 ]
  %124 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %123) #9
  br i1 %124, label %125, label %128, !prof !4

125:                                              ; preds = %122
  %126 = bitcast %"class.v8::Value"* %123 to %"class.v8::Boolean"*
  %127 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %126) #9
  br label %130

128:                                              ; preds = %122
  %129 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %123, %"class.v8::Isolate"* %8) #9
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi i1 [ %127, %125 ], [ %129, %128 ]
  %132 = zext i1 %131 to i8
  %133 = load i32, i32* %20, align 8
  %134 = icmp sgt i32 %133, 3
  br i1 %134, label %141, label %135

135:                                              ; preds = %130
  %136 = load i64*, i64** %4, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 1
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 160
  %140 = inttoptr i64 %139 to %"class.v8::Value"*
  br label %145

141:                                              ; preds = %130
  %142 = load i64*, i64** %43, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 3
  %144 = bitcast i64* %143 to %"class.v8::Value"*
  br label %145

145:                                              ; preds = %135, %141
  %146 = phi %"class.v8::Value"* [ %140, %135 ], [ %144, %141 ]
  %147 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %146) #9
  br i1 %147, label %148, label %151, !prof !4

148:                                              ; preds = %145
  %149 = bitcast %"class.v8::Value"* %146 to %"class.v8::Boolean"*
  %150 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %149) #9
  br label %153

151:                                              ; preds = %145
  %152 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %146, %"class.v8::Isolate"* %8) #9
  br label %153

153:                                              ; preds = %148, %151
  %154 = phi i1 [ %150, %148 ], [ %152, %151 ]
  %155 = zext i1 %154 to i8
  %156 = bitcast i8* %76 to %"class.blink::WebGLRenderingContextBase"*
  tail call void @_ZN5blink25WebGLRenderingContextBase9colorMaskEhhhh(%"class.blink::WebGLRenderingContextBase"* %156, i8 zeroext %86, i8 zeroext %109, i8 zeroext %132, i8 zeroext %155) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  br label %170

157:                                              ; preds = %41, %38, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %160 = icmp eq i64* %159, null
  br i1 %160, label %170, label %161

161:                                              ; preds = %157
  %162 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %163 = bitcast %"class.v8::Isolate"* %162 to %"class.v8::internal::Isolate"*
  %164 = load i64, i64* %159, align 8
  %165 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %163, i64 %164) #9
  %166 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %162) #9
  br i1 %166, label %170, label %167

167:                                              ; preds = %161
  %168 = bitcast i64* %165 to %"class.v8::Value"*
  %169 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %162, %"class.v8::Value"* %168) #9
  br label %170

170:                                              ; preds = %153, %167, %161, %157
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #9
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30CompileShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.319, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %113

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLShader"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLShader"* [ %106, %104 ], [ null, %107 ]
  %112 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13compileShaderEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"* %112, %"class.blink::WebGLShader"* %111) #9
  br label %113

113:                                              ; preds = %107, %110, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %115, null
  br i1 %116, label %126, label %117

117:                                              ; preds = %113
  %118 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %119 = bitcast %"class.v8::Isolate"* %118 to %"class.v8::internal::Isolate"*
  %120 = load i64, i64* %115, align 8
  %121 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %119, i64 %120) #9
  %122 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %118) #9
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = bitcast i64* %121 to %"class.v8::Value"*
  %125 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %118, %"class.v8::Value"* %124) #9
  br label %126

126:                                              ; preds = %123, %117, %113
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #9
  br label %142

142:                                              ; preds = %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context37CompressedTexImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::MaybeShared", align 8
  %5 = alloca %"class.blink::MaybeShared", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.320, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 7
  br i1 %24, label %25, label %45, !prof !5

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %249

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %74

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %78

74:                                               ; preds = %59, %63
  %75 = phi i8* [ %62, %59 ], [ %65, %63 ]
  %76 = bitcast i64** %46 to %"class.v8::Value"**
  %77 = load %"class.v8::Value"*, %"class.v8::Value"** %76, align 8
  br label %78

78:                                               ; preds = %68, %74
  %79 = phi i8* [ %65, %68 ], [ %75, %74 ]
  %80 = phi %"class.v8::Value"* [ %73, %68 ], [ %77, %74 ]
  %81 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %80) #9
  br i1 %81, label %82, label %85, !prof !4

82:                                               ; preds = %78
  %83 = bitcast %"class.v8::Value"* %80 to %"class.v8::Uint32"*
  %84 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %83) #9
  br label %94

85:                                               ; preds = %78
  %86 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %80) #9
  br i1 %86, label %87, label %90, !prof !4

87:                                               ; preds = %85
  %88 = bitcast %"class.v8::Value"* %80 to %"class.v8::Int32"*
  %89 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %88) #9
  br label %94

90:                                               ; preds = %85
  %91 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %80, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %92 = load i32, i32* %19, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %249

94:                                               ; preds = %87, %82, %90
  %95 = phi i32 [ %91, %90 ], [ %89, %87 ], [ %84, %82 ]
  %96 = load i32, i32* %22, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load i64*, i64** %6, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %94
  %105 = load i64*, i64** %46, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %109) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::Int32"*
  %113 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %112) #9
  br label %116

114:                                              ; preds = %108
  %115 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %109, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %116

116:                                              ; preds = %111, %114
  %117 = phi i32 [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %19, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %249

120:                                              ; preds = %116
  %121 = load i32, i32* %22, align 8
  %122 = icmp sgt i32 %121, 2
  br i1 %122, label %129, label %123

123:                                              ; preds = %120
  %124 = load i64*, i64** %6, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 160
  %128 = inttoptr i64 %127 to %"class.v8::Value"*
  br label %133

129:                                              ; preds = %120
  %130 = load i64*, i64** %46, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 2
  %132 = bitcast i64* %131 to %"class.v8::Value"*
  br label %133

133:                                              ; preds = %123, %129
  %134 = phi %"class.v8::Value"* [ %128, %123 ], [ %132, %129 ]
  %135 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %134) #9
  br i1 %135, label %136, label %139, !prof !4

136:                                              ; preds = %133
  %137 = bitcast %"class.v8::Value"* %134 to %"class.v8::Uint32"*
  %138 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %137) #9
  br label %146

139:                                              ; preds = %133
  %140 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %134) #9
  br i1 %140, label %141, label %144, !prof !4

141:                                              ; preds = %139
  %142 = bitcast %"class.v8::Value"* %134 to %"class.v8::Int32"*
  %143 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %142) #9
  br label %146

144:                                              ; preds = %139
  %145 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %134, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %146

146:                                              ; preds = %136, %141, %144
  %147 = phi i32 [ %138, %136 ], [ %143, %141 ], [ %145, %144 ]
  %148 = load i32, i32* %19, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %249

150:                                              ; preds = %146
  %151 = load i32, i32* %22, align 8
  %152 = icmp sgt i32 %151, 3
  br i1 %152, label %159, label %153

153:                                              ; preds = %150
  %154 = load i64*, i64** %6, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 160
  %158 = inttoptr i64 %157 to %"class.v8::Value"*
  br label %163

159:                                              ; preds = %150
  %160 = load i64*, i64** %46, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 3
  %162 = bitcast i64* %161 to %"class.v8::Value"*
  br label %163

163:                                              ; preds = %153, %159
  %164 = phi %"class.v8::Value"* [ %158, %153 ], [ %162, %159 ]
  %165 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %164) #9
  br i1 %165, label %166, label %169, !prof !4

166:                                              ; preds = %163
  %167 = bitcast %"class.v8::Value"* %164 to %"class.v8::Int32"*
  %168 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %167) #9
  br label %171

169:                                              ; preds = %163
  %170 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %164, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %171

171:                                              ; preds = %166, %169
  %172 = phi i32 [ %168, %166 ], [ %170, %169 ]
  %173 = load i32, i32* %19, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %249

175:                                              ; preds = %171
  %176 = load i32, i32* %22, align 8
  %177 = icmp sgt i32 %176, 4
  br i1 %177, label %184, label %178

178:                                              ; preds = %175
  %179 = load i64*, i64** %6, align 8
  %180 = getelementptr inbounds i64, i64* %179, i64 1
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 160
  %183 = inttoptr i64 %182 to %"class.v8::Value"*
  br label %188

184:                                              ; preds = %175
  %185 = load i64*, i64** %46, align 8
  %186 = getelementptr inbounds i64, i64* %185, i64 4
  %187 = bitcast i64* %186 to %"class.v8::Value"*
  br label %188

188:                                              ; preds = %178, %184
  %189 = phi %"class.v8::Value"* [ %183, %178 ], [ %187, %184 ]
  %190 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %189) #9
  br i1 %190, label %191, label %194, !prof !4

191:                                              ; preds = %188
  %192 = bitcast %"class.v8::Value"* %189 to %"class.v8::Int32"*
  %193 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %192) #9
  br label %196

194:                                              ; preds = %188
  %195 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %189, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %196

196:                                              ; preds = %191, %194
  %197 = phi i32 [ %193, %191 ], [ %195, %194 ]
  %198 = load i32, i32* %19, align 8
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %249

200:                                              ; preds = %196
  %201 = load i32, i32* %22, align 8
  %202 = icmp sgt i32 %201, 5
  br i1 %202, label %209, label %203

203:                                              ; preds = %200
  %204 = load i64*, i64** %6, align 8
  %205 = getelementptr inbounds i64, i64* %204, i64 1
  %206 = load i64, i64* %205, align 8
  %207 = add i64 %206, 160
  %208 = inttoptr i64 %207 to %"class.v8::Value"*
  br label %213

209:                                              ; preds = %200
  %210 = load i64*, i64** %46, align 8
  %211 = getelementptr inbounds i64, i64* %210, i64 5
  %212 = bitcast i64* %211 to %"class.v8::Value"*
  br label %213

213:                                              ; preds = %203, %209
  %214 = phi %"class.v8::Value"* [ %208, %203 ], [ %212, %209 ]
  %215 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %214) #9
  br i1 %215, label %216, label %219, !prof !4

216:                                              ; preds = %213
  %217 = bitcast %"class.v8::Value"* %214 to %"class.v8::Int32"*
  %218 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %217) #9
  br label %221

219:                                              ; preds = %213
  %220 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %214, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %221

221:                                              ; preds = %216, %219
  %222 = phi i32 [ %218, %216 ], [ %220, %219 ]
  %223 = load i32, i32* %19, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %249

225:                                              ; preds = %221
  %226 = bitcast %"class.blink::MaybeShared"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #9
  %227 = load i32, i32* %22, align 8
  %228 = icmp sgt i32 %227, 6
  br i1 %228, label %235, label %229

229:                                              ; preds = %225
  %230 = load i64*, i64** %6, align 8
  %231 = getelementptr inbounds i64, i64* %230, i64 1
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %232, 160
  %234 = inttoptr i64 %233 to %"class.v8::Value"*
  br label %239

235:                                              ; preds = %225
  %236 = load i64*, i64** %46, align 8
  %237 = getelementptr inbounds i64, i64* %236, i64 6
  %238 = bitcast i64* %237 to %"class.v8::Value"*
  br label %239

239:                                              ; preds = %229, %235
  %240 = phi %"class.v8::Value"* [ %234, %229 ], [ %238, %235 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_18DOMArrayBufferViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* nonnull sret %4, %"class.v8::Isolate"* %10, i32 6, %"class.v8::Value"* %240, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %241 = load i32, i32* %19, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %248

243:                                              ; preds = %239
  %244 = bitcast i8* %79 to %"class.blink::WebGLRenderingContextBase"*
  %245 = bitcast %"class.blink::MaybeShared"* %4 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.blink::MaybeShared"* %5 to i64*
  store i64 %246, i64* %247, align 8
  call void @_ZN5blink25WebGLRenderingContextBase20compressedTexImage2DEjijiiiNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"* %244, i32 %95, i32 %117, i32 %147, i32 %172, i32 %197, i32 %222, %"class.blink::MaybeShared"* nonnull %5) #9
  br label %248

248:                                              ; preds = %239, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #9
  br label %249

249:                                              ; preds = %221, %196, %171, %146, %116, %90, %248, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %250 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %251 = load i64*, i64** %250, align 8
  %252 = icmp eq i64* %251, null
  br i1 %252, label %262, label %253

253:                                              ; preds = %249
  %254 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %255 = bitcast %"class.v8::Isolate"* %254 to %"class.v8::internal::Isolate"*
  %256 = load i64, i64* %251, align 8
  %257 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %255, i64 %256) #9
  %258 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %254) #9
  br i1 %258, label %262, label %259

259:                                              ; preds = %253
  %260 = bitcast i64* %257 to %"class.v8::Value"*
  %261 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %254, %"class.v8::Value"* %260) #9
  br label %262

262:                                              ; preds = %259, %253, %249
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #9
  br label %278

278:                                              ; preds = %262, %274, %277
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context40CompressedTexSubImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::MaybeShared", align 8
  %5 = alloca %"class.blink::MaybeShared", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.321, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 8
  br i1 %24, label %25, label %45, !prof !5

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 8, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %274

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %74

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %78

74:                                               ; preds = %59, %63
  %75 = phi i8* [ %62, %59 ], [ %65, %63 ]
  %76 = bitcast i64** %46 to %"class.v8::Value"**
  %77 = load %"class.v8::Value"*, %"class.v8::Value"** %76, align 8
  br label %78

78:                                               ; preds = %68, %74
  %79 = phi i8* [ %65, %68 ], [ %75, %74 ]
  %80 = phi %"class.v8::Value"* [ %73, %68 ], [ %77, %74 ]
  %81 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %80) #9
  br i1 %81, label %82, label %85, !prof !4

82:                                               ; preds = %78
  %83 = bitcast %"class.v8::Value"* %80 to %"class.v8::Uint32"*
  %84 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %83) #9
  br label %94

85:                                               ; preds = %78
  %86 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %80) #9
  br i1 %86, label %87, label %90, !prof !4

87:                                               ; preds = %85
  %88 = bitcast %"class.v8::Value"* %80 to %"class.v8::Int32"*
  %89 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %88) #9
  br label %94

90:                                               ; preds = %85
  %91 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %80, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %92 = load i32, i32* %19, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %274

94:                                               ; preds = %87, %82, %90
  %95 = phi i32 [ %91, %90 ], [ %89, %87 ], [ %84, %82 ]
  %96 = load i32, i32* %22, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load i64*, i64** %6, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %94
  %105 = load i64*, i64** %46, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %109) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::Int32"*
  %113 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %112) #9
  br label %116

114:                                              ; preds = %108
  %115 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %109, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %116

116:                                              ; preds = %111, %114
  %117 = phi i32 [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %19, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %274

120:                                              ; preds = %116
  %121 = load i32, i32* %22, align 8
  %122 = icmp sgt i32 %121, 2
  br i1 %122, label %129, label %123

123:                                              ; preds = %120
  %124 = load i64*, i64** %6, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 160
  %128 = inttoptr i64 %127 to %"class.v8::Value"*
  br label %133

129:                                              ; preds = %120
  %130 = load i64*, i64** %46, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 2
  %132 = bitcast i64* %131 to %"class.v8::Value"*
  br label %133

133:                                              ; preds = %123, %129
  %134 = phi %"class.v8::Value"* [ %128, %123 ], [ %132, %129 ]
  %135 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %134) #9
  br i1 %135, label %136, label %139, !prof !4

136:                                              ; preds = %133
  %137 = bitcast %"class.v8::Value"* %134 to %"class.v8::Int32"*
  %138 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %137) #9
  br label %141

139:                                              ; preds = %133
  %140 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %134, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %141

141:                                              ; preds = %136, %139
  %142 = phi i32 [ %138, %136 ], [ %140, %139 ]
  %143 = load i32, i32* %19, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %274

145:                                              ; preds = %141
  %146 = load i32, i32* %22, align 8
  %147 = icmp sgt i32 %146, 3
  br i1 %147, label %154, label %148

148:                                              ; preds = %145
  %149 = load i64*, i64** %6, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 1
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 160
  %153 = inttoptr i64 %152 to %"class.v8::Value"*
  br label %158

154:                                              ; preds = %145
  %155 = load i64*, i64** %46, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  %157 = bitcast i64* %156 to %"class.v8::Value"*
  br label %158

158:                                              ; preds = %148, %154
  %159 = phi %"class.v8::Value"* [ %153, %148 ], [ %157, %154 ]
  %160 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %159) #9
  br i1 %160, label %161, label %164, !prof !4

161:                                              ; preds = %158
  %162 = bitcast %"class.v8::Value"* %159 to %"class.v8::Int32"*
  %163 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %162) #9
  br label %166

164:                                              ; preds = %158
  %165 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %159, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %166

166:                                              ; preds = %161, %164
  %167 = phi i32 [ %163, %161 ], [ %165, %164 ]
  %168 = load i32, i32* %19, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %274

170:                                              ; preds = %166
  %171 = load i32, i32* %22, align 8
  %172 = icmp sgt i32 %171, 4
  br i1 %172, label %179, label %173

173:                                              ; preds = %170
  %174 = load i64*, i64** %6, align 8
  %175 = getelementptr inbounds i64, i64* %174, i64 1
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 160
  %178 = inttoptr i64 %177 to %"class.v8::Value"*
  br label %183

179:                                              ; preds = %170
  %180 = load i64*, i64** %46, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 4
  %182 = bitcast i64* %181 to %"class.v8::Value"*
  br label %183

183:                                              ; preds = %173, %179
  %184 = phi %"class.v8::Value"* [ %178, %173 ], [ %182, %179 ]
  %185 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %184) #9
  br i1 %185, label %186, label %189, !prof !4

186:                                              ; preds = %183
  %187 = bitcast %"class.v8::Value"* %184 to %"class.v8::Int32"*
  %188 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %187) #9
  br label %191

189:                                              ; preds = %183
  %190 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %184, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i32 [ %188, %186 ], [ %190, %189 ]
  %193 = load i32, i32* %19, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %274

195:                                              ; preds = %191
  %196 = load i32, i32* %22, align 8
  %197 = icmp sgt i32 %196, 5
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = load i64*, i64** %6, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 1
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 160
  %203 = inttoptr i64 %202 to %"class.v8::Value"*
  br label %208

204:                                              ; preds = %195
  %205 = load i64*, i64** %46, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 5
  %207 = bitcast i64* %206 to %"class.v8::Value"*
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi %"class.v8::Value"* [ %203, %198 ], [ %207, %204 ]
  %210 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %209) #9
  br i1 %210, label %211, label %214, !prof !4

211:                                              ; preds = %208
  %212 = bitcast %"class.v8::Value"* %209 to %"class.v8::Int32"*
  %213 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %212) #9
  br label %216

214:                                              ; preds = %208
  %215 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %209, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %216

216:                                              ; preds = %211, %214
  %217 = phi i32 [ %213, %211 ], [ %215, %214 ]
  %218 = load i32, i32* %19, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %274

220:                                              ; preds = %216
  %221 = load i32, i32* %22, align 8
  %222 = icmp sgt i32 %221, 6
  br i1 %222, label %229, label %223

223:                                              ; preds = %220
  %224 = load i64*, i64** %6, align 8
  %225 = getelementptr inbounds i64, i64* %224, i64 1
  %226 = load i64, i64* %225, align 8
  %227 = add i64 %226, 160
  %228 = inttoptr i64 %227 to %"class.v8::Value"*
  br label %233

229:                                              ; preds = %220
  %230 = load i64*, i64** %46, align 8
  %231 = getelementptr inbounds i64, i64* %230, i64 6
  %232 = bitcast i64* %231 to %"class.v8::Value"*
  br label %233

233:                                              ; preds = %223, %229
  %234 = phi %"class.v8::Value"* [ %228, %223 ], [ %232, %229 ]
  %235 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %234) #9
  br i1 %235, label %236, label %239, !prof !4

236:                                              ; preds = %233
  %237 = bitcast %"class.v8::Value"* %234 to %"class.v8::Uint32"*
  %238 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %237) #9
  br label %246

239:                                              ; preds = %233
  %240 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %234) #9
  br i1 %240, label %241, label %244, !prof !4

241:                                              ; preds = %239
  %242 = bitcast %"class.v8::Value"* %234 to %"class.v8::Int32"*
  %243 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %242) #9
  br label %246

244:                                              ; preds = %239
  %245 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %234, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %246

246:                                              ; preds = %236, %241, %244
  %247 = phi i32 [ %238, %236 ], [ %243, %241 ], [ %245, %244 ]
  %248 = load i32, i32* %19, align 8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %274

250:                                              ; preds = %246
  %251 = bitcast %"class.blink::MaybeShared"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #9
  %252 = load i32, i32* %22, align 8
  %253 = icmp sgt i32 %252, 7
  br i1 %253, label %260, label %254

254:                                              ; preds = %250
  %255 = load i64*, i64** %6, align 8
  %256 = getelementptr inbounds i64, i64* %255, i64 1
  %257 = load i64, i64* %256, align 8
  %258 = add i64 %257, 160
  %259 = inttoptr i64 %258 to %"class.v8::Value"*
  br label %264

260:                                              ; preds = %250
  %261 = load i64*, i64** %46, align 8
  %262 = getelementptr inbounds i64, i64* %261, i64 7
  %263 = bitcast i64* %262 to %"class.v8::Value"*
  br label %264

264:                                              ; preds = %254, %260
  %265 = phi %"class.v8::Value"* [ %259, %254 ], [ %263, %260 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_18DOMArrayBufferViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* nonnull sret %4, %"class.v8::Isolate"* %10, i32 7, %"class.v8::Value"* %265, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %266 = load i32, i32* %19, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %273

268:                                              ; preds = %264
  %269 = bitcast i8* %79 to %"class.blink::WebGLRenderingContextBase"*
  %270 = bitcast %"class.blink::MaybeShared"* %4 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.blink::MaybeShared"* %5 to i64*
  store i64 %271, i64* %272, align 8
  call void @_ZN5blink25WebGLRenderingContextBase23compressedTexSubImage2DEjiiiiijNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"* %269, i32 %95, i32 %117, i32 %142, i32 %167, i32 %192, i32 %217, i32 %247, %"class.blink::MaybeShared"* nonnull %5) #9
  br label %273

273:                                              ; preds = %264, %268
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #9
  br label %274

274:                                              ; preds = %246, %216, %191, %166, %141, %116, %90, %273, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %275 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %276 = load i64*, i64** %275, align 8
  %277 = icmp eq i64* %276, null
  br i1 %277, label %287, label %278

278:                                              ; preds = %274
  %279 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %280 = bitcast %"class.v8::Isolate"* %279 to %"class.v8::internal::Isolate"*
  %281 = load i64, i64* %276, align 8
  %282 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %280, i64 %281) #9
  %283 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %279) #9
  br i1 %283, label %287, label %284

284:                                              ; preds = %278
  %285 = bitcast i64* %282 to %"class.v8::Value"*
  %286 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %279, %"class.v8::Value"* %285) #9
  br label %287

287:                                              ; preds = %284, %278, %274
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %303, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  br i1 %294, label %297, label %299

297:                                              ; preds = %290
  %298 = add i32 %296, -1
  store i32 %298, i32* %295, align 4
  br label %299

299:                                              ; preds = %297, %290
  %300 = phi i32 [ %298, %297 ], [ %296, %290 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #9
  br label %303

303:                                              ; preds = %287, %299, %302
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31CopyTexImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 8
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 8, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %275

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %275

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %111 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i32 [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %275

118:                                              ; preds = %114
  %119 = load i32, i32* %20, align 8
  %120 = icmp sgt i32 %119, 2
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %4, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %44, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 2
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %132) #9
  br i1 %133, label %134, label %137, !prof !4

134:                                              ; preds = %131
  %135 = bitcast %"class.v8::Value"* %132 to %"class.v8::Uint32"*
  %136 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %135) #9
  br label %144

137:                                              ; preds = %131
  %138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %132) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %137
  %140 = bitcast %"class.v8::Value"* %132 to %"class.v8::Int32"*
  %141 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %140) #9
  br label %144

142:                                              ; preds = %137
  %143 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %132, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %144

144:                                              ; preds = %134, %139, %142
  %145 = phi i32 [ %136, %134 ], [ %141, %139 ], [ %143, %142 ]
  %146 = load i32, i32* %17, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %275

148:                                              ; preds = %144
  %149 = load i32, i32* %20, align 8
  %150 = icmp sgt i32 %149, 3
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = load i64*, i64** %4, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 1
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, 160
  %156 = inttoptr i64 %155 to %"class.v8::Value"*
  br label %161

157:                                              ; preds = %148
  %158 = load i64*, i64** %44, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 3
  %160 = bitcast i64* %159 to %"class.v8::Value"*
  br label %161

161:                                              ; preds = %151, %157
  %162 = phi %"class.v8::Value"* [ %156, %151 ], [ %160, %157 ]
  %163 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %162) #9
  br i1 %163, label %164, label %167, !prof !4

164:                                              ; preds = %161
  %165 = bitcast %"class.v8::Value"* %162 to %"class.v8::Int32"*
  %166 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %165) #9
  br label %169

167:                                              ; preds = %161
  %168 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %162, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %169

169:                                              ; preds = %164, %167
  %170 = phi i32 [ %166, %164 ], [ %168, %167 ]
  %171 = load i32, i32* %17, align 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %275

173:                                              ; preds = %169
  %174 = load i32, i32* %20, align 8
  %175 = icmp sgt i32 %174, 4
  br i1 %175, label %182, label %176

176:                                              ; preds = %173
  %177 = load i64*, i64** %4, align 8
  %178 = getelementptr inbounds i64, i64* %177, i64 1
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, 160
  %181 = inttoptr i64 %180 to %"class.v8::Value"*
  br label %186

182:                                              ; preds = %173
  %183 = load i64*, i64** %44, align 8
  %184 = getelementptr inbounds i64, i64* %183, i64 4
  %185 = bitcast i64* %184 to %"class.v8::Value"*
  br label %186

186:                                              ; preds = %176, %182
  %187 = phi %"class.v8::Value"* [ %181, %176 ], [ %185, %182 ]
  %188 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %187) #9
  br i1 %188, label %189, label %192, !prof !4

189:                                              ; preds = %186
  %190 = bitcast %"class.v8::Value"* %187 to %"class.v8::Int32"*
  %191 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %190) #9
  br label %194

192:                                              ; preds = %186
  %193 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %187, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %194

194:                                              ; preds = %189, %192
  %195 = phi i32 [ %191, %189 ], [ %193, %192 ]
  %196 = load i32, i32* %17, align 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %275

198:                                              ; preds = %194
  %199 = load i32, i32* %20, align 8
  %200 = icmp sgt i32 %199, 5
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = load i64*, i64** %4, align 8
  %203 = getelementptr inbounds i64, i64* %202, i64 1
  %204 = load i64, i64* %203, align 8
  %205 = add i64 %204, 160
  %206 = inttoptr i64 %205 to %"class.v8::Value"*
  br label %211

207:                                              ; preds = %198
  %208 = load i64*, i64** %44, align 8
  %209 = getelementptr inbounds i64, i64* %208, i64 5
  %210 = bitcast i64* %209 to %"class.v8::Value"*
  br label %211

211:                                              ; preds = %201, %207
  %212 = phi %"class.v8::Value"* [ %206, %201 ], [ %210, %207 ]
  %213 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %212) #9
  br i1 %213, label %214, label %217, !prof !4

214:                                              ; preds = %211
  %215 = bitcast %"class.v8::Value"* %212 to %"class.v8::Int32"*
  %216 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %215) #9
  br label %219

217:                                              ; preds = %211
  %218 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %212, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %219

219:                                              ; preds = %214, %217
  %220 = phi i32 [ %216, %214 ], [ %218, %217 ]
  %221 = load i32, i32* %17, align 8
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %275

223:                                              ; preds = %219
  %224 = load i32, i32* %20, align 8
  %225 = icmp sgt i32 %224, 6
  br i1 %225, label %232, label %226

226:                                              ; preds = %223
  %227 = load i64*, i64** %4, align 8
  %228 = getelementptr inbounds i64, i64* %227, i64 1
  %229 = load i64, i64* %228, align 8
  %230 = add i64 %229, 160
  %231 = inttoptr i64 %230 to %"class.v8::Value"*
  br label %236

232:                                              ; preds = %223
  %233 = load i64*, i64** %44, align 8
  %234 = getelementptr inbounds i64, i64* %233, i64 6
  %235 = bitcast i64* %234 to %"class.v8::Value"*
  br label %236

236:                                              ; preds = %226, %232
  %237 = phi %"class.v8::Value"* [ %231, %226 ], [ %235, %232 ]
  %238 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %237) #9
  br i1 %238, label %239, label %242, !prof !4

239:                                              ; preds = %236
  %240 = bitcast %"class.v8::Value"* %237 to %"class.v8::Int32"*
  %241 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %240) #9
  br label %244

242:                                              ; preds = %236
  %243 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %237, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %244

244:                                              ; preds = %239, %242
  %245 = phi i32 [ %241, %239 ], [ %243, %242 ]
  %246 = load i32, i32* %17, align 8
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %275

248:                                              ; preds = %244
  %249 = load i32, i32* %20, align 8
  %250 = icmp sgt i32 %249, 7
  br i1 %250, label %257, label %251

251:                                              ; preds = %248
  %252 = load i64*, i64** %4, align 8
  %253 = getelementptr inbounds i64, i64* %252, i64 1
  %254 = load i64, i64* %253, align 8
  %255 = add i64 %254, 160
  %256 = inttoptr i64 %255 to %"class.v8::Value"*
  br label %261

257:                                              ; preds = %248
  %258 = load i64*, i64** %44, align 8
  %259 = getelementptr inbounds i64, i64* %258, i64 7
  %260 = bitcast i64* %259 to %"class.v8::Value"*
  br label %261

261:                                              ; preds = %251, %257
  %262 = phi %"class.v8::Value"* [ %256, %251 ], [ %260, %257 ]
  %263 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %262) #9
  br i1 %263, label %264, label %267, !prof !4

264:                                              ; preds = %261
  %265 = bitcast %"class.v8::Value"* %262 to %"class.v8::Int32"*
  %266 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %265) #9
  br label %269

267:                                              ; preds = %261
  %268 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %262, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %269

269:                                              ; preds = %264, %267
  %270 = phi i32 [ %266, %264 ], [ %268, %267 ]
  %271 = load i32, i32* %17, align 8
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %269
  %274 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase14copyTexImage2DEjijiiiii(%"class.blink::WebGLRenderingContextBase"* %274, i32 %93, i32 %115, i32 %145, i32 %170, i32 %195, i32 %220, i32 %245, i32 %270) #9
  br label %275

275:                                              ; preds = %269, %244, %219, %194, %169, %144, %114, %88, %273, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %276 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %277 = load i64*, i64** %276, align 8
  %278 = icmp eq i64* %277, null
  br i1 %278, label %288, label %279

279:                                              ; preds = %275
  %280 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %281 = bitcast %"class.v8::Isolate"* %280 to %"class.v8::internal::Isolate"*
  %282 = load i64, i64* %277, align 8
  %283 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %281, i64 %282) #9
  %284 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %280) #9
  br i1 %284, label %288, label %285

285:                                              ; preds = %279
  %286 = bitcast i64* %283 to %"class.v8::Value"*
  %287 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %280, %"class.v8::Value"* %286) #9
  br label %288

288:                                              ; preds = %285, %279, %275
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #9
  br label %304

304:                                              ; preds = %288, %300, %303
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34CopyTexSubImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.323, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 8
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 8, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %270

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %270

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %111 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i32 [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %270

118:                                              ; preds = %114
  %119 = load i32, i32* %20, align 8
  %120 = icmp sgt i32 %119, 2
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %4, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %44, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 2
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %132) #9
  br i1 %133, label %134, label %137, !prof !4

134:                                              ; preds = %131
  %135 = bitcast %"class.v8::Value"* %132 to %"class.v8::Int32"*
  %136 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %135) #9
  br label %139

137:                                              ; preds = %131
  %138 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %132, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %139

139:                                              ; preds = %134, %137
  %140 = phi i32 [ %136, %134 ], [ %138, %137 ]
  %141 = load i32, i32* %17, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %270

143:                                              ; preds = %139
  %144 = load i32, i32* %20, align 8
  %145 = icmp sgt i32 %144, 3
  br i1 %145, label %152, label %146

146:                                              ; preds = %143
  %147 = load i64*, i64** %4, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %156

152:                                              ; preds = %143
  %153 = load i64*, i64** %44, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 3
  %155 = bitcast i64* %154 to %"class.v8::Value"*
  br label %156

156:                                              ; preds = %146, %152
  %157 = phi %"class.v8::Value"* [ %151, %146 ], [ %155, %152 ]
  %158 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %157) #9
  br i1 %158, label %159, label %162, !prof !4

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::Value"* %157 to %"class.v8::Int32"*
  %161 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %160) #9
  br label %164

162:                                              ; preds = %156
  %163 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %157, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %164

164:                                              ; preds = %159, %162
  %165 = phi i32 [ %161, %159 ], [ %163, %162 ]
  %166 = load i32, i32* %17, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %270

168:                                              ; preds = %164
  %169 = load i32, i32* %20, align 8
  %170 = icmp sgt i32 %169, 4
  br i1 %170, label %177, label %171

171:                                              ; preds = %168
  %172 = load i64*, i64** %4, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 1
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, 160
  %176 = inttoptr i64 %175 to %"class.v8::Value"*
  br label %181

177:                                              ; preds = %168
  %178 = load i64*, i64** %44, align 8
  %179 = getelementptr inbounds i64, i64* %178, i64 4
  %180 = bitcast i64* %179 to %"class.v8::Value"*
  br label %181

181:                                              ; preds = %171, %177
  %182 = phi %"class.v8::Value"* [ %176, %171 ], [ %180, %177 ]
  %183 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %182) #9
  br i1 %183, label %184, label %187, !prof !4

184:                                              ; preds = %181
  %185 = bitcast %"class.v8::Value"* %182 to %"class.v8::Int32"*
  %186 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %185) #9
  br label %189

187:                                              ; preds = %181
  %188 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %182, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %189

189:                                              ; preds = %184, %187
  %190 = phi i32 [ %186, %184 ], [ %188, %187 ]
  %191 = load i32, i32* %17, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %270

193:                                              ; preds = %189
  %194 = load i32, i32* %20, align 8
  %195 = icmp sgt i32 %194, 5
  br i1 %195, label %202, label %196

196:                                              ; preds = %193
  %197 = load i64*, i64** %4, align 8
  %198 = getelementptr inbounds i64, i64* %197, i64 1
  %199 = load i64, i64* %198, align 8
  %200 = add i64 %199, 160
  %201 = inttoptr i64 %200 to %"class.v8::Value"*
  br label %206

202:                                              ; preds = %193
  %203 = load i64*, i64** %44, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 5
  %205 = bitcast i64* %204 to %"class.v8::Value"*
  br label %206

206:                                              ; preds = %196, %202
  %207 = phi %"class.v8::Value"* [ %201, %196 ], [ %205, %202 ]
  %208 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %207) #9
  br i1 %208, label %209, label %212, !prof !4

209:                                              ; preds = %206
  %210 = bitcast %"class.v8::Value"* %207 to %"class.v8::Int32"*
  %211 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %210) #9
  br label %214

212:                                              ; preds = %206
  %213 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %207, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %214

214:                                              ; preds = %209, %212
  %215 = phi i32 [ %211, %209 ], [ %213, %212 ]
  %216 = load i32, i32* %17, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %270

218:                                              ; preds = %214
  %219 = load i32, i32* %20, align 8
  %220 = icmp sgt i32 %219, 6
  br i1 %220, label %227, label %221

221:                                              ; preds = %218
  %222 = load i64*, i64** %4, align 8
  %223 = getelementptr inbounds i64, i64* %222, i64 1
  %224 = load i64, i64* %223, align 8
  %225 = add i64 %224, 160
  %226 = inttoptr i64 %225 to %"class.v8::Value"*
  br label %231

227:                                              ; preds = %218
  %228 = load i64*, i64** %44, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 6
  %230 = bitcast i64* %229 to %"class.v8::Value"*
  br label %231

231:                                              ; preds = %221, %227
  %232 = phi %"class.v8::Value"* [ %226, %221 ], [ %230, %227 ]
  %233 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %232) #9
  br i1 %233, label %234, label %237, !prof !4

234:                                              ; preds = %231
  %235 = bitcast %"class.v8::Value"* %232 to %"class.v8::Int32"*
  %236 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %235) #9
  br label %239

237:                                              ; preds = %231
  %238 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %232, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %239

239:                                              ; preds = %234, %237
  %240 = phi i32 [ %236, %234 ], [ %238, %237 ]
  %241 = load i32, i32* %17, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %270

243:                                              ; preds = %239
  %244 = load i32, i32* %20, align 8
  %245 = icmp sgt i32 %244, 7
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %4, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %44, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 7
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %257) #9
  br i1 %258, label %259, label %262, !prof !4

259:                                              ; preds = %256
  %260 = bitcast %"class.v8::Value"* %257 to %"class.v8::Int32"*
  %261 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %260) #9
  br label %264

262:                                              ; preds = %256
  %263 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %257, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %264

264:                                              ; preds = %259, %262
  %265 = phi i32 [ %261, %259 ], [ %263, %262 ]
  %266 = load i32, i32* %17, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %264
  %269 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase17copyTexSubImage2DEjiiiiiii(%"class.blink::WebGLRenderingContextBase"* %269, i32 %93, i32 %115, i32 %140, i32 %165, i32 %190, i32 %215, i32 %240, i32 %265) #9
  br label %270

270:                                              ; preds = %264, %239, %214, %189, %164, %139, %114, %88, %268, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %272 = load i64*, i64** %271, align 8
  %273 = icmp eq i64* %272, null
  br i1 %273, label %283, label %274

274:                                              ; preds = %270
  %275 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %276 = bitcast %"class.v8::Isolate"* %275 to %"class.v8::internal::Isolate"*
  %277 = load i64, i64* %272, align 8
  %278 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %276, i64 %277) #9
  %279 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %275) #9
  br i1 %279, label %283, label %280

280:                                              ; preds = %274
  %281 = bitcast i64* %278 to %"class.v8::Value"*
  %282 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %275, %"class.v8::Value"* %281) #9
  br label %283

283:                                              ; preds = %280, %274, %270
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #9
  br label %299

299:                                              ; preds = %283, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29CreateBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call %"class.blink::WebGLBuffer"* @_ZN5blink25WebGLRenderingContextBase12createBufferEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.blink::WebGLBuffer", %"class.blink::WebGLBuffer"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::WebGLBuffer"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !5

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::WebGLBuffer"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34CreateFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call %"class.blink::WebGLFramebuffer"* @_ZN5blink25WebGLRenderingContextBase17createFramebufferEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::WebGLFramebuffer"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !5

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::WebGLFramebuffer"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30CreateProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call %"class.blink::WebGLProgram"* @_ZN5blink25WebGLRenderingContextBase13createProgramEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.blink::WebGLProgram", %"class.blink::WebGLProgram"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::WebGLProgram"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !5

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::WebGLProgram"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35CreateRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call %"class.blink::WebGLRenderbuffer"* @_ZN5blink25WebGLRenderingContextBase18createRenderbufferEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::WebGLRenderbuffer"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !5

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::WebGLRenderbuffer"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29CreateShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.328, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %129

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %129

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %95 = call %"class.blink::WebGLShader"* @_ZN5blink25WebGLRenderingContextBase12createShaderEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  %96 = getelementptr inbounds %"class.blink::WebGLShader", %"class.blink::WebGLShader"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = icmp eq %"class.blink::WebGLShader"* %95, null
  %98 = load i64*, i64** %4, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 3
  br i1 %97, label %100, label %106, !prof !5

100:                                              ; preds = %92
  %101 = getelementptr inbounds i64, i64* %98, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 176
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %99, align 8
  br label %129

106:                                              ; preds = %92
  %107 = bitcast i8* %77 to %"class.blink::ScriptWrappable"*
  %108 = load i64*, i64** %44, align 8
  %109 = getelementptr inbounds i64, i64* %108, i64 -1
  %110 = bitcast i64* %109 to %"class.v8::Object"*
  %111 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %99, %"class.blink::ScriptWrappable"* nonnull %96, %"class.v8::Object"* %110, %"class.blink::ScriptWrappable"* %107) #9
  br i1 %111, label %129, label %112

112:                                              ; preds = %106
  %113 = load i64*, i64** %44, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 -1
  %115 = bitcast i64* %114 to %"class.v8::Object"*
  %116 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %115) #9
  %117 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %116) #9
  %118 = bitcast %"class.blink::WebGLShader"* %95 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %119 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %119, i64 7
  %121 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %120, align 8
  %122 = call %"class.v8::Value"* %121(%"class.blink::ScriptWrappable"* nonnull %96, %"class.blink::ScriptState"* %117) #9
  %123 = icmp eq %"class.v8::Value"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %112
  %125 = load i64*, i64** %4, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 3
  %127 = bitcast %"class.v8::Value"* %122 to i64*
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %126, align 8
  br label %129

129:                                              ; preds = %88, %124, %112, %106, %100, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %131, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #9
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #9
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #9
  br label %142

142:                                              ; preds = %139, %133, %129
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #9
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30CreateTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call %"class.blink::WebGLTexture"* @_ZN5blink25WebGLRenderingContextBase13createTextureEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::WebGLTexture"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !5

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::WebGLTexture"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25CullFaceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.330, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase8cullFaceEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DeleteBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLBuffer18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLBuffer"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLBuffer"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12deleteBufferEPNS_11WebGLBufferE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLBuffer"* %130) #9
  br label %132

132:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34DeleteFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.332, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16WebGLFramebuffer18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLFramebuffer"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLFramebuffer"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase17deleteFramebufferEPNS_16WebGLFramebufferE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLFramebuffer"* %130) #9
  br label %132

132:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30DeleteProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.333, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLProgram"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13deleteProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLProgram"* %130) #9
  br label %132

132:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35DeleteRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.334, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17WebGLRenderbuffer18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLRenderbuffer"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLRenderbuffer"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase18deleteRenderbufferEPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLRenderbuffer"* %130) #9
  br label %132

132:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DeleteShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.335, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLShader"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLShader"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12deleteShaderEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLShader"* %130) #9
  br label %132

132:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30DeleteTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.336, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLTexture18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLTexture"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLTexture"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13deleteTextureEPNS_12WebGLTextureE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLTexture"* %130) #9
  br label %132

132:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26DepthFuncOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.337, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9depthFuncEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26DepthMaskOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.338, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %42, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %88, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %88

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %88

42:                                               ; preds = %1
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i64 %46, -4294967296
  %51 = zext i32 %49 to i64
  %52 = or i64 %50, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load i16, i16* %54, align 2
  switch i16 %55, label %60 [
    i16 1057, label %56
    i16 1056, label %56
    i16 1040, label %56
  ]

56:                                               ; preds = %42, %42, %42
  %57 = add i64 %46, 19
  %58 = inttoptr i64 %57 to i8**
  %59 = load i8*, i8** %58, align 1
  br label %71

60:                                               ; preds = %42
  %61 = bitcast i64* %45 to %"class.v8::Object"*
  %62 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %61, i32 1) #9
  %63 = load i32, i32* %20, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = load i64*, i64** %4, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 1
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 160
  %70 = inttoptr i64 %69 to %"class.v8::Value"*
  br label %75

71:                                               ; preds = %56, %60
  %72 = phi i8* [ %59, %56 ], [ %62, %60 ]
  %73 = bitcast i64** %43 to %"class.v8::Value"**
  %74 = load %"class.v8::Value"*, %"class.v8::Value"** %73, align 8
  br label %75

75:                                               ; preds = %65, %71
  %76 = phi i8* [ %62, %65 ], [ %72, %71 ]
  %77 = phi %"class.v8::Value"* [ %70, %65 ], [ %74, %71 ]
  %78 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %77) #9
  br i1 %78, label %79, label %82, !prof !4

79:                                               ; preds = %75
  %80 = bitcast %"class.v8::Value"* %77 to %"class.v8::Boolean"*
  %81 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %80) #9
  br label %84

82:                                               ; preds = %75
  %83 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %77, %"class.v8::Isolate"* %8) #9
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi i1 [ %81, %79 ], [ %83, %82 ]
  %86 = zext i1 %85 to i8
  %87 = bitcast i8* %76 to %"class.blink::WebGLRenderingContextBase"*
  tail call void @_ZN5blink25WebGLRenderingContextBase9depthMaskEh(%"class.blink::WebGLRenderingContextBase"* %87, i8 zeroext %86) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  br label %101

88:                                               ; preds = %41, %38, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %89 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %101, label %92

92:                                               ; preds = %88
  %93 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %94 = bitcast %"class.v8::Isolate"* %93 to %"class.v8::internal::Isolate"*
  %95 = load i64, i64* %90, align 8
  %96 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %94, i64 %95) #9
  %97 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %93) #9
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = bitcast i64* %96 to %"class.v8::Value"*
  %100 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %93, %"class.v8::Value"* %99) #9
  br label %101

101:                                              ; preds = %84, %98, %92, %88
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #9
  br label %117

117:                                              ; preds = %101, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27DepthRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.339, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %129

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %129

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = fcmp ogt double %88, 0x47EFFFFFE0000000
  br i1 %89, label %94, label %90, !prof !5

90:                                               ; preds = %87
  %91 = fcmp olt double %88, 0xC7EFFFFFE0000000
  br i1 %91, label %94, label %92, !prof !5

92:                                               ; preds = %90
  %93 = fptrunc double %88 to float
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi float [ 0xFFF0000000000000, %90 ], [ 0x7FF0000000000000, %87 ], [ %93, %92 ]
  %96 = load i32, i32* %20, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load i64*, i64** %4, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %94
  %105 = load i64*, i64** %44, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %109) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::Number"*
  %113 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %112) #9
  br label %116

114:                                              ; preds = %108
  %115 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %109, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %116

116:                                              ; preds = %114, %111
  %117 = phi double [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %17, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %129

120:                                              ; preds = %116
  %121 = fcmp ogt double %117, 0x47EFFFFFE0000000
  br i1 %121, label %126, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fcmp olt double %117, 0xC7EFFFFFE0000000
  br i1 %123, label %126, label %124, !prof !5

124:                                              ; preds = %122
  %125 = fptrunc double %117 to float
  br label %126

126:                                              ; preds = %120, %122, %124
  %127 = phi float [ 0xFFF0000000000000, %122 ], [ 0x7FF0000000000000, %120 ], [ %125, %124 ]
  %128 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10depthRangeEff(%"class.blink::WebGLRenderingContextBase"* %128, float %95, float %127) #9
  br label %129

129:                                              ; preds = %116, %83, %126, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %131, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #9
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #9
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #9
  br label %142

142:                                              ; preds = %139, %133, %129
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #9
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DetachShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.340, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %158

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %158

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLProgram"* [ %106, %104 ], [ null, %107 ]
  %112 = load i32, i32* %20, align 8
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  %115 = load i64*, i64** %4, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %110
  %121 = load i64*, i64** %44, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 1
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %127 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %128 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %127, %"struct.blink::WrapperTypeInfo"* %126, %"class.v8::Value"* %125) #9
  br i1 %128, label %129, label %151

129:                                              ; preds = %124
  %130 = bitcast %"class.v8::Value"* %125 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, -1
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = and i64 %131, -4294967296
  %136 = zext i32 %134 to i64
  %137 = or i64 %135, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load i16, i16* %139, align 2
  switch i16 %140, label %145 [
    i16 1057, label %141
    i16 1056, label %141
    i16 1040, label %141
  ]

141:                                              ; preds = %129, %129, %129
  %142 = add i64 %131, 19
  %143 = inttoptr i64 %142 to i8**
  %144 = load i8*, i8** %143, align 1
  br label %148

145:                                              ; preds = %129
  %146 = bitcast %"class.v8::Value"* %125 to %"class.v8::Object"*
  %147 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %146, i32 1) #9
  br label %148

148:                                              ; preds = %145, %141
  %149 = phi i8* [ %144, %141 ], [ %147, %145 ]
  %150 = bitcast i8* %149 to %"class.blink::WebGLShader"*
  br label %152

151:                                              ; preds = %124
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %126, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %152

152:                                              ; preds = %148, %151
  %153 = phi %"class.blink::WebGLShader"* [ %150, %148 ], [ null, %151 ]
  %154 = load i32, i32* %17, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12detachShaderEPNS_12WebGLProgramEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"* %157, %"class.blink::WebGLProgram"* %111, %"class.blink::WebGLShader"* %153) #9
  br label %158

158:                                              ; preds = %152, %107, %156, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %160 = load i64*, i64** %159, align 8
  %161 = icmp eq i64* %160, null
  br i1 %161, label %171, label %162

162:                                              ; preds = %158
  %163 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %164 = bitcast %"class.v8::Isolate"* %163 to %"class.v8::internal::Isolate"*
  %165 = load i64, i64* %160, align 8
  %166 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %164, i64 %165) #9
  %167 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %163) #9
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = bitcast i64* %166 to %"class.v8::Value"*
  %170 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %163, %"class.v8::Value"* %169) #9
  br label %171

171:                                              ; preds = %168, %162, %158
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #9
  br label %187

187:                                              ; preds = %171, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context24DisableOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.341, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase7disableEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context41DisableVertexAttribArrayOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.342, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase24disableVertexAttribArrayEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context23EnableOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.343, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase6enableEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context40EnableVertexAttribArrayOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.344, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase23enableVertexAttribArrayEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context23FinishOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  tail call void @_ZN5blink25WebGLRenderingContextBase6finishEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context22FlushOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  tail call void @_ZN5blink25WebGLRenderingContextBase5flushEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context40FramebufferRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.347, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %222

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %222

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %222

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Uint32"*
  %141 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %140) #9
  br label %149

142:                                              ; preds = %136
  %143 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %143, label %144, label %147, !prof !4

144:                                              ; preds = %142
  %145 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %146 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %145) #9
  br label %149

147:                                              ; preds = %142
  %148 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %149

149:                                              ; preds = %139, %144, %147
  %150 = phi i32 [ %141, %139 ], [ %146, %144 ], [ %148, %147 ]
  %151 = load i32, i32* %17, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %222

153:                                              ; preds = %149
  %154 = load i32, i32* %20, align 8
  %155 = icmp sgt i32 %154, 3
  br i1 %155, label %162, label %156

156:                                              ; preds = %153
  %157 = load i64*, i64** %4, align 8
  %158 = getelementptr inbounds i64, i64* %157, i64 1
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 160
  %161 = inttoptr i64 %160 to %"class.v8::Value"*
  br label %166

162:                                              ; preds = %153
  %163 = load i64*, i64** %44, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 3
  %165 = bitcast i64* %164 to %"class.v8::Value"*
  br label %166

166:                                              ; preds = %156, %162
  %167 = phi %"class.v8::Value"* [ %161, %156 ], [ %165, %162 ]
  %168 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17WebGLRenderbuffer18wrapper_type_info_E, align 8
  %169 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %170 = add i64 %169, 8
  %171 = inttoptr i64 %170 to %"class.blink::V8PerIsolateData"**
  %172 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %171, align 8
  %173 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %172, %"struct.blink::WrapperTypeInfo"* %168, %"class.v8::Value"* %167) #9
  %174 = bitcast %"class.v8::Value"* %167 to i64*
  %175 = load i64, i64* %174, align 8
  br i1 %173, label %176, label %196

176:                                              ; preds = %166
  %177 = add i64 %175, -1
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = and i64 %175, -4294967296
  %181 = zext i32 %179 to i64
  %182 = or i64 %180, %181
  %183 = add i64 %182, 7
  %184 = inttoptr i64 %183 to i16*
  %185 = load i16, i16* %184, align 2
  switch i16 %185, label %190 [
    i16 1057, label %186
    i16 1056, label %186
    i16 1040, label %186
  ]

186:                                              ; preds = %176, %176, %176
  %187 = add i64 %175, 19
  %188 = inttoptr i64 %187 to i8**
  %189 = load i8*, i8** %188, align 1
  br label %193

190:                                              ; preds = %176
  %191 = bitcast %"class.v8::Value"* %167 to %"class.v8::Object"*
  %192 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %191, i32 1) #9
  br label %193

193:                                              ; preds = %190, %186
  %194 = phi i8* [ %189, %186 ], [ %192, %190 ]
  %195 = bitcast i8* %194 to %"class.blink::WebGLRenderbuffer"*
  br label %216

196:                                              ; preds = %166
  %197 = and i64 %175, 3
  %198 = icmp eq i64 %197, 1
  br i1 %198, label %199, label %215

199:                                              ; preds = %196
  %200 = add i64 %175, -1
  %201 = inttoptr i64 %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = and i64 %175, -4294967296
  %204 = zext i32 %202 to i64
  %205 = or i64 %203, %204
  %206 = add i64 %205, 7
  %207 = inttoptr i64 %206 to i16*
  %208 = load i16, i16* %207, align 2
  %209 = icmp eq i16 %208, 67
  br i1 %209, label %210, label %215

210:                                              ; preds = %199
  %211 = add i64 %175, 23
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = ashr i32 %213, 1
  switch i32 %214, label %215 [
    i32 5, label %216
    i32 3, label %216
  ]

215:                                              ; preds = %210, %199, %196
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %168, i32 3, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %216

216:                                              ; preds = %193, %210, %210, %215
  %217 = phi %"class.blink::WebGLRenderbuffer"* [ %195, %193 ], [ null, %215 ], [ null, %210 ], [ null, %210 ]
  %218 = load i32, i32* %17, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %216
  %221 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase23framebufferRenderbufferEjjjPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"* %221, i32 %93, i32 %120, i32 %150, %"class.blink::WebGLRenderbuffer"* %217) #9
  br label %222

222:                                              ; preds = %216, %149, %119, %88, %220, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %223 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %224 = load i64*, i64** %223, align 8
  %225 = icmp eq i64* %224, null
  br i1 %225, label %235, label %226

226:                                              ; preds = %222
  %227 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %228 = bitcast %"class.v8::Isolate"* %227 to %"class.v8::internal::Isolate"*
  %229 = load i64, i64* %224, align 8
  %230 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %228, i64 %229) #9
  %231 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %227) #9
  br i1 %231, label %235, label %232

232:                                              ; preds = %226
  %233 = bitcast i64* %230 to %"class.v8::Value"*
  %234 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %227, %"class.v8::Value"* %233) #9
  br label %235

235:                                              ; preds = %232, %226, %222
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #9
  br label %251

251:                                              ; preds = %235, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context37FramebufferTexture2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.348, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %247

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %247

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %247

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Uint32"*
  %141 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %140) #9
  br label %149

142:                                              ; preds = %136
  %143 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %143, label %144, label %147, !prof !4

144:                                              ; preds = %142
  %145 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %146 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %145) #9
  br label %149

147:                                              ; preds = %142
  %148 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %149

149:                                              ; preds = %139, %144, %147
  %150 = phi i32 [ %141, %139 ], [ %146, %144 ], [ %148, %147 ]
  %151 = load i32, i32* %17, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %247

153:                                              ; preds = %149
  %154 = load i32, i32* %20, align 8
  %155 = icmp sgt i32 %154, 3
  br i1 %155, label %162, label %156

156:                                              ; preds = %153
  %157 = load i64*, i64** %4, align 8
  %158 = getelementptr inbounds i64, i64* %157, i64 1
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 160
  %161 = inttoptr i64 %160 to %"class.v8::Value"*
  br label %166

162:                                              ; preds = %153
  %163 = load i64*, i64** %44, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 3
  %165 = bitcast i64* %164 to %"class.v8::Value"*
  br label %166

166:                                              ; preds = %156, %162
  %167 = phi %"class.v8::Value"* [ %161, %156 ], [ %165, %162 ]
  %168 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLTexture18wrapper_type_info_E, align 8
  %169 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %170 = add i64 %169, 8
  %171 = inttoptr i64 %170 to %"class.blink::V8PerIsolateData"**
  %172 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %171, align 8
  %173 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %172, %"struct.blink::WrapperTypeInfo"* %168, %"class.v8::Value"* %167) #9
  %174 = bitcast %"class.v8::Value"* %167 to i64*
  %175 = load i64, i64* %174, align 8
  br i1 %173, label %176, label %196

176:                                              ; preds = %166
  %177 = add i64 %175, -1
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = and i64 %175, -4294967296
  %181 = zext i32 %179 to i64
  %182 = or i64 %180, %181
  %183 = add i64 %182, 7
  %184 = inttoptr i64 %183 to i16*
  %185 = load i16, i16* %184, align 2
  switch i16 %185, label %190 [
    i16 1057, label %186
    i16 1056, label %186
    i16 1040, label %186
  ]

186:                                              ; preds = %176, %176, %176
  %187 = add i64 %175, 19
  %188 = inttoptr i64 %187 to i8**
  %189 = load i8*, i8** %188, align 1
  br label %193

190:                                              ; preds = %176
  %191 = bitcast %"class.v8::Value"* %167 to %"class.v8::Object"*
  %192 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %191, i32 1) #9
  br label %193

193:                                              ; preds = %190, %186
  %194 = phi i8* [ %189, %186 ], [ %192, %190 ]
  %195 = bitcast i8* %194 to %"class.blink::WebGLTexture"*
  br label %216

196:                                              ; preds = %166
  %197 = and i64 %175, 3
  %198 = icmp eq i64 %197, 1
  br i1 %198, label %199, label %215

199:                                              ; preds = %196
  %200 = add i64 %175, -1
  %201 = inttoptr i64 %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = and i64 %175, -4294967296
  %204 = zext i32 %202 to i64
  %205 = or i64 %203, %204
  %206 = add i64 %205, 7
  %207 = inttoptr i64 %206 to i16*
  %208 = load i16, i16* %207, align 2
  %209 = icmp eq i16 %208, 67
  br i1 %209, label %210, label %215

210:                                              ; preds = %199
  %211 = add i64 %175, 23
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = ashr i32 %213, 1
  switch i32 %214, label %215 [
    i32 5, label %216
    i32 3, label %216
  ]

215:                                              ; preds = %210, %199, %196
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %168, i32 3, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %216

216:                                              ; preds = %193, %210, %210, %215
  %217 = phi %"class.blink::WebGLTexture"* [ %195, %193 ], [ null, %215 ], [ null, %210 ], [ null, %210 ]
  %218 = load i32, i32* %17, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %247

220:                                              ; preds = %216
  %221 = load i32, i32* %20, align 8
  %222 = icmp sgt i32 %221, 4
  br i1 %222, label %229, label %223

223:                                              ; preds = %220
  %224 = load i64*, i64** %4, align 8
  %225 = getelementptr inbounds i64, i64* %224, i64 1
  %226 = load i64, i64* %225, align 8
  %227 = add i64 %226, 160
  %228 = inttoptr i64 %227 to %"class.v8::Value"*
  br label %233

229:                                              ; preds = %220
  %230 = load i64*, i64** %44, align 8
  %231 = getelementptr inbounds i64, i64* %230, i64 4
  %232 = bitcast i64* %231 to %"class.v8::Value"*
  br label %233

233:                                              ; preds = %223, %229
  %234 = phi %"class.v8::Value"* [ %228, %223 ], [ %232, %229 ]
  %235 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %234) #9
  br i1 %235, label %236, label %239, !prof !4

236:                                              ; preds = %233
  %237 = bitcast %"class.v8::Value"* %234 to %"class.v8::Int32"*
  %238 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %237) #9
  br label %241

239:                                              ; preds = %233
  %240 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %234, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %241

241:                                              ; preds = %236, %239
  %242 = phi i32 [ %238, %236 ], [ %240, %239 ]
  %243 = load i32, i32* %17, align 8
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %241
  %246 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase20framebufferTexture2DEjjjPNS_12WebGLTextureEi(%"class.blink::WebGLRenderingContextBase"* %246, i32 %93, i32 %120, i32 %150, %"class.blink::WebGLTexture"* %217, i32 %242) #9
  br label %247

247:                                              ; preds = %241, %216, %149, %119, %88, %245, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %248 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %249 = load i64*, i64** %248, align 8
  %250 = icmp eq i64* %249, null
  br i1 %250, label %260, label %251

251:                                              ; preds = %247
  %252 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %253 = bitcast %"class.v8::Isolate"* %252 to %"class.v8::internal::Isolate"*
  %254 = load i64, i64* %249, align 8
  %255 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %253, i64 %254) #9
  %256 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %252) #9
  br i1 %256, label %260, label %257

257:                                              ; preds = %251
  %258 = bitcast i64* %255 to %"class.v8::Value"*
  %259 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %252, %"class.v8::Value"* %258) #9
  br label %260

260:                                              ; preds = %257, %251, %247
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %276, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  br i1 %267, label %270, label %272

270:                                              ; preds = %263
  %271 = add i32 %269, -1
  store i32 %271, i32* %268, align 4
  br label %272

272:                                              ; preds = %270, %263
  %273 = phi i32 [ %271, %270 ], [ %269, %263 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %261) #9
  br label %276

276:                                              ; preds = %260, %272, %275
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26FrontFaceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9frontFaceEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31GenerateMipmapOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.350, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase14generateMipmapEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetActiveAttribOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.351, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %177

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %177

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLProgram"* [ %106, %104 ], [ null, %107 ]
  %112 = load i32, i32* %20, align 8
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  %115 = load i64*, i64** %4, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %110
  %121 = load i64*, i64** %44, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 1
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %124
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %137

130:                                              ; preds = %124
  %131 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %137

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %137

137:                                              ; preds = %127, %132, %135
  %138 = phi i32 [ %129, %127 ], [ %134, %132 ], [ %136, %135 ]
  %139 = load i32, i32* %17, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %177

141:                                              ; preds = %137
  %142 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %143 = call %"class.blink::WebGLActiveInfo"* @_ZN5blink25WebGLRenderingContextBase15getActiveAttribEPNS_12WebGLProgramEj(%"class.blink::WebGLRenderingContextBase"* %142, %"class.blink::WebGLProgram"* %111, i32 %138) #9
  %144 = getelementptr inbounds %"class.blink::WebGLActiveInfo", %"class.blink::WebGLActiveInfo"* %143, i64 0, i32 0
  %145 = icmp eq %"class.blink::WebGLActiveInfo"* %143, null
  %146 = load i64*, i64** %4, align 8
  %147 = getelementptr inbounds i64, i64* %146, i64 3
  br i1 %145, label %148, label %154, !prof !5

148:                                              ; preds = %141
  %149 = getelementptr inbounds i64, i64* %146, i64 1
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 176
  %152 = inttoptr i64 %151 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %147, align 8
  br label %177

154:                                              ; preds = %141
  %155 = bitcast i8* %77 to %"class.blink::ScriptWrappable"*
  %156 = load i64*, i64** %44, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 -1
  %158 = bitcast i64* %157 to %"class.v8::Object"*
  %159 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %147, %"class.blink::ScriptWrappable"* nonnull %144, %"class.v8::Object"* %158, %"class.blink::ScriptWrappable"* %155) #9
  br i1 %159, label %177, label %160

160:                                              ; preds = %154
  %161 = load i64*, i64** %44, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 -1
  %163 = bitcast i64* %162 to %"class.v8::Object"*
  %164 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %163) #9
  %165 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %164) #9
  %166 = bitcast %"class.blink::WebGLActiveInfo"* %143 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %167 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %166, align 8
  %168 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %167, i64 7
  %169 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %168, align 8
  %170 = call %"class.v8::Value"* %169(%"class.blink::ScriptWrappable"* nonnull %144, %"class.blink::ScriptState"* %165) #9
  %171 = icmp eq %"class.v8::Value"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %160
  %173 = load i64*, i64** %4, align 8
  %174 = getelementptr inbounds i64, i64* %173, i64 3
  %175 = bitcast %"class.v8::Value"* %170 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  br label %177

177:                                              ; preds = %137, %107, %172, %160, %154, %148, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %178 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = icmp eq i64* %179, null
  br i1 %180, label %190, label %181

181:                                              ; preds = %177
  %182 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %183 = bitcast %"class.v8::Isolate"* %182 to %"class.v8::internal::Isolate"*
  %184 = load i64, i64* %179, align 8
  %185 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %183, i64 %184) #9
  %186 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %182) #9
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = bitcast i64* %185 to %"class.v8::Value"*
  %189 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %182, %"class.v8::Value"* %188) #9
  br label %190

190:                                              ; preds = %187, %181, %177
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #9
  br label %206

206:                                              ; preds = %190, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33GetActiveUniformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.352, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %177

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %177

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLProgram"* [ %106, %104 ], [ null, %107 ]
  %112 = load i32, i32* %20, align 8
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  %115 = load i64*, i64** %4, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %110
  %121 = load i64*, i64** %44, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 1
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %124
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %137

130:                                              ; preds = %124
  %131 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %137

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %137

137:                                              ; preds = %127, %132, %135
  %138 = phi i32 [ %129, %127 ], [ %134, %132 ], [ %136, %135 ]
  %139 = load i32, i32* %17, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %177

141:                                              ; preds = %137
  %142 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %143 = call %"class.blink::WebGLActiveInfo"* @_ZN5blink25WebGLRenderingContextBase16getActiveUniformEPNS_12WebGLProgramEj(%"class.blink::WebGLRenderingContextBase"* %142, %"class.blink::WebGLProgram"* %111, i32 %138) #9
  %144 = getelementptr inbounds %"class.blink::WebGLActiveInfo", %"class.blink::WebGLActiveInfo"* %143, i64 0, i32 0
  %145 = icmp eq %"class.blink::WebGLActiveInfo"* %143, null
  %146 = load i64*, i64** %4, align 8
  %147 = getelementptr inbounds i64, i64* %146, i64 3
  br i1 %145, label %148, label %154, !prof !5

148:                                              ; preds = %141
  %149 = getelementptr inbounds i64, i64* %146, i64 1
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 176
  %152 = inttoptr i64 %151 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %147, align 8
  br label %177

154:                                              ; preds = %141
  %155 = bitcast i8* %77 to %"class.blink::ScriptWrappable"*
  %156 = load i64*, i64** %44, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 -1
  %158 = bitcast i64* %157 to %"class.v8::Object"*
  %159 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %147, %"class.blink::ScriptWrappable"* nonnull %144, %"class.v8::Object"* %158, %"class.blink::ScriptWrappable"* %155) #9
  br i1 %159, label %177, label %160

160:                                              ; preds = %154
  %161 = load i64*, i64** %44, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 -1
  %163 = bitcast i64* %162 to %"class.v8::Object"*
  %164 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %163) #9
  %165 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %164) #9
  %166 = bitcast %"class.blink::WebGLActiveInfo"* %143 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %167 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %166, align 8
  %168 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %167, i64 7
  %169 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %168, align 8
  %170 = call %"class.v8::Value"* %169(%"class.blink::ScriptWrappable"* nonnull %144, %"class.blink::ScriptState"* %165) #9
  %171 = icmp eq %"class.v8::Value"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %160
  %173 = load i64*, i64** %4, align 8
  %174 = getelementptr inbounds i64, i64* %173, i64 3
  %175 = bitcast %"class.v8::Value"* %170 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  br label %177

177:                                              ; preds = %137, %107, %172, %160, %154, %148, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %178 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = icmp eq i64* %179, null
  br i1 %180, label %190, label %181

181:                                              ; preds = %177
  %182 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %183 = bitcast %"class.v8::Isolate"* %182 to %"class.v8::internal::Isolate"*
  %184 = load i64, i64* %179, align 8
  %185 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %183, i64 %184) #9
  %186 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %182) #9
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = bitcast i64* %185 to %"class.v8::Value"*
  %189 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %182, %"class.v8::Value"* %188) #9
  br label %190

190:                                              ; preds = %187, %181, %177
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #9
  br label %206

206:                                              ; preds = %190, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetAttachedShadersOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.absl::optional.1535", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.353, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %137

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %50 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %49)
  %51 = load i64, i64* %47, align 8
  %52 = add i64 %51, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i64 %51, -4294967296
  %56 = zext i32 %54 to i64
  %57 = or i64 %55, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load i16, i16* %59, align 2
  switch i16 %60, label %65 [
    i16 1057, label %61
    i16 1056, label %61
    i16 1040, label %61
  ]

61:                                               ; preds = %44, %44, %44
  %62 = add i64 %51, 19
  %63 = inttoptr i64 %62 to i8**
  %64 = load i8*, i8** %63, align 1
  br label %67

65:                                               ; preds = %44
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi i8* [ %64, %61 ], [ %66, %65 ]
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %67
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %83 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to %"class.blink::V8PerIsolateData"**
  %86 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %85, align 8
  %87 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %86, %"struct.blink::WrapperTypeInfo"* %82, %"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %110

88:                                               ; preds = %80
  %89 = bitcast %"class.v8::Value"* %81 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %90, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  switch i16 %99, label %104 [
    i16 1057, label %100
    i16 1056, label %100
    i16 1040, label %100
  ]

100:                                              ; preds = %88, %88, %88
  %101 = add i64 %90, 19
  %102 = inttoptr i64 %101 to i8**
  %103 = load i8*, i8** %102, align 1
  br label %107

104:                                              ; preds = %88
  %105 = bitcast %"class.v8::Value"* %81 to %"class.v8::Object"*
  %106 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %105, i32 1) #9
  br label %107

107:                                              ; preds = %100, %104
  %108 = phi i8* [ %103, %100 ], [ %106, %104 ]
  %109 = bitcast i8* %108 to %"class.blink::WebGLProgram"*
  br label %113

110:                                              ; preds = %80
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %111 = load i32, i32* %18, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %137

113:                                              ; preds = %107, %110
  %114 = phi %"class.blink::WebGLProgram"* [ %109, %107 ], [ null, %110 ]
  %115 = getelementptr inbounds %"class.absl::optional.1535", %"class.absl::optional.1535"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #9
  %116 = bitcast i8* %68 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase18getAttachedShadersEPNS_12WebGLProgramE(%"class.absl::optional.1535"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %116, %"class.blink::WebGLProgram"* %114) #9
  %117 = load i8, i8* %115, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %124

119:                                              ; preds = %113
  %120 = bitcast %"class.blink::ScriptState"* %50 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 176
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %113
  %125 = getelementptr inbounds %"class.absl::optional.1535", %"class.absl::optional.1535"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %126 = bitcast %"class.blink::HeapVector.1540"* %125 to %"class.blink::HeapVector.1547"*
  %127 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %50, %"class.blink::HeapVector.1547"* dereferenceable(16) %126) #9
  br label %128

128:                                              ; preds = %119, %124
  %129 = phi %"class.v8::Value"* [ %127, %124 ], [ %123, %119 ]
  %130 = icmp eq %"class.v8::Value"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %128
  %132 = load i64*, i64** %5, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 3
  %134 = bitcast %"class.v8::Value"* %129 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %133, align 8
  br label %136

136:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #9
  br label %137

137:                                              ; preds = %110, %136, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %138 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = icmp eq i64* %139, null
  br i1 %140, label %150, label %141

141:                                              ; preds = %137
  %142 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %143 = bitcast %"class.v8::Isolate"* %142 to %"class.v8::internal::Isolate"*
  %144 = load i64, i64* %139, align 8
  %145 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %143, i64 %144) #9
  %146 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %142) #9
  br i1 %146, label %150, label %147

147:                                              ; preds = %141
  %148 = bitcast i64* %145 to %"class.v8::Value"*
  %149 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %142, %"class.v8::Value"* %148) #9
  br label %150

150:                                              ; preds = %147, %141, %137
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #9
  br label %166

166:                                              ; preds = %150, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34GetAttribLocationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.354, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !5

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %224

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %74

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %78

74:                                               ; preds = %59, %63
  %75 = phi i8* [ %62, %59 ], [ %65, %63 ]
  %76 = bitcast i64** %46 to %"class.v8::Value"**
  %77 = load %"class.v8::Value"*, %"class.v8::Value"** %76, align 8
  br label %78

78:                                               ; preds = %68, %74
  %79 = phi i8* [ %65, %68 ], [ %75, %74 ]
  %80 = phi %"class.v8::Value"* [ %73, %68 ], [ %77, %74 ]
  %81 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %82 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to %"class.blink::V8PerIsolateData"**
  %85 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %84, align 8
  %86 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %85, %"struct.blink::WrapperTypeInfo"* %81, %"class.v8::Value"* %80) #9
  br i1 %86, label %87, label %109

87:                                               ; preds = %78
  %88 = bitcast %"class.v8::Value"* %80 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i64 %89, -4294967296
  %94 = zext i32 %92 to i64
  %95 = or i64 %93, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load i16, i16* %97, align 2
  switch i16 %98, label %103 [
    i16 1057, label %99
    i16 1056, label %99
    i16 1040, label %99
  ]

99:                                               ; preds = %87, %87, %87
  %100 = add i64 %89, 19
  %101 = inttoptr i64 %100 to i8**
  %102 = load i8*, i8** %101, align 1
  br label %106

103:                                              ; preds = %87
  %104 = bitcast %"class.v8::Value"* %80 to %"class.v8::Object"*
  %105 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %104, i32 1) #9
  br label %106

106:                                              ; preds = %99, %103
  %107 = phi i8* [ %102, %99 ], [ %105, %103 ]
  %108 = bitcast i8* %107 to %"class.blink::WebGLProgram"*
  br label %112

109:                                              ; preds = %78
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %110 = load i32, i32* %19, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %224

112:                                              ; preds = %106, %109
  %113 = phi %"class.blink::WebGLProgram"* [ %108, %106 ], [ null, %109 ]
  %114 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %114) #9
  %115 = load i32, i32* %22, align 8
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %123, label %117

117:                                              ; preds = %112
  %118 = load i64*, i64** %6, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %112
  %124 = load i64*, i64** %46, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %128, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %129 = load i32, i32* %19, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %201

131:                                              ; preds = %127
  %132 = bitcast i8* %79 to %"class.blink::WebGLRenderingContextBase"*
  %133 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #9
  %134 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %135 = load %"class.v8::String"*, %"class.v8::String"** %134, align 8
  %136 = icmp eq %"class.v8::String"* %135, null
  br i1 %136, label %139, label %137, !prof !5

137:                                              ; preds = %131
  %138 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %135, i32 0) #9
  br label %160

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %160, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %160

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #9
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !5

157:                                              ; preds = %148
  call void @llvm.trap() #9
  unreachable

158:                                              ; preds = %148
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %149, align 4
  br label %160

160:                                              ; preds = %137, %139, %143, %158
  %161 = phi %"class.WTF::StringImpl"* [ %138, %137 ], [ null, %139 ], [ %141, %143 ], [ %141, %158 ]
  %162 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %162, align 8
  %163 = call i32 @_ZN5blink25WebGLRenderingContextBase17getAttribLocationEPNS_12WebGLProgramERKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"* %132, %"class.blink::WebGLProgram"* %113, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #9
  br label %179

179:                                              ; preds = %160, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #9
  %180 = load i64*, i64** %6, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 3
  %182 = sext i32 %163 to i64
  %183 = add nsw i64 %182, 1073741824
  %184 = icmp ult i64 %183, 2147483648
  br i1 %184, label %185, label %187, !prof !4

185:                                              ; preds = %179
  %186 = shl nsw i64 %182, 1
  br label %199

187:                                              ; preds = %179
  %188 = getelementptr inbounds i64, i64* %180, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Isolate"**
  %190 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %189, align 8
  %191 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %190, i32 %163) #9
  %192 = icmp eq %"class.v8::Integer"* %191, null
  br i1 %192, label %193, label %196, !prof !5

193:                                              ; preds = %187
  %194 = getelementptr inbounds i64, i64* %180, i64 2
  %195 = load i64, i64* %194, align 8
  br label %199

196:                                              ; preds = %187
  %197 = bitcast %"class.v8::Integer"* %191 to i64*
  %198 = load i64, i64* %197, align 8
  br label %199

199:                                              ; preds = %185, %193, %196
  %200 = phi i64 [ %198, %196 ], [ %195, %193 ], [ %186, %185 ]
  store i64 %200, i64* %181, align 8
  br label %201

201:                                              ; preds = %199, %127
  %202 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  store i8* null, i8** %202, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %201
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %203) #9
  br label %206

206:                                              ; preds = %205, %201
  %207 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #9
  br label %223

223:                                              ; preds = %206, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %114) #9
  br label %224

224:                                              ; preds = %109, %223, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %225 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %226 = load i64*, i64** %225, align 8
  %227 = icmp eq i64* %226, null
  br i1 %227, label %237, label %228

228:                                              ; preds = %224
  %229 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %230 = bitcast %"class.v8::Isolate"* %229 to %"class.v8::internal::Isolate"*
  %231 = load i64, i64* %226, align 8
  %232 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %230, i64 %231) #9
  %233 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %229) #9
  br i1 %233, label %237, label %234

234:                                              ; preds = %228
  %235 = bitcast i64* %232 to %"class.v8::Value"*
  %236 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %229, %"class.v8::Value"* %235) #9
  br label %237

237:                                              ; preds = %234, %228, %224
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #9
  br label %253

253:                                              ; preds = %237, %249, %252
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetBufferParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.355, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %148

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %65
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #9
  br i1 %82, label %83, label %86, !prof !4

83:                                               ; preds = %80
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #9
  br label %95

86:                                               ; preds = %80
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %91, !prof !4

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #9
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %93 = load i32, i32* %18, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %148

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = load i32, i32* %21, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = load i64*, i64** %5, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %95
  %106 = load i64*, i64** %45, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = bitcast i64* %107 to %"class.v8::Value"*
  br label %109

109:                                              ; preds = %99, %105
  %110 = phi %"class.v8::Value"* [ %104, %99 ], [ %108, %105 ]
  %111 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %110) #9
  br i1 %111, label %112, label %115, !prof !4

112:                                              ; preds = %109
  %113 = bitcast %"class.v8::Value"* %110 to %"class.v8::Uint32"*
  %114 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %113) #9
  br label %122

115:                                              ; preds = %109
  %116 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %110) #9
  br i1 %116, label %117, label %120, !prof !4

117:                                              ; preds = %115
  %118 = bitcast %"class.v8::Value"* %110 to %"class.v8::Int32"*
  %119 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %118) #9
  br label %122

120:                                              ; preds = %115
  %121 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %110, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %122

122:                                              ; preds = %112, %117, %120
  %123 = phi i32 [ %114, %112 ], [ %119, %117 ], [ %121, %120 ]
  %124 = load i32, i32* %18, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %148

126:                                              ; preds = %122
  %127 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #9
  %128 = bitcast i8* %66 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase18getBufferParameterEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %128, %"class.blink::ScriptState"* %68, i32 %96, i32 %123) #9
  %129 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %130 = load i64*, i64** %5, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 3
  %132 = icmp eq %"class.v8::Value"* %129, null
  %133 = bitcast %"class.v8::Value"* %129 to i64*
  %134 = getelementptr inbounds i64, i64* %130, i64 2
  %135 = select i1 %132, i64* %134, i64* %133, !prof !5
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %131, align 8
  %137 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %138 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %137, align 8
  %139 = icmp eq %"class.blink::DOMWrapperWorld"* %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %138, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %141) #9
  %142 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %138, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %138) #9
  %146 = bitcast %"class.blink::DOMWrapperWorld"* %138 to i8*
  call void @free(i8* %146) #9
  br label %147

147:                                              ; preds = %126, %140, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #9
  br label %148

148:                                              ; preds = %122, %91, %147, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %148
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #9
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #9
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #9
  br label %161

161:                                              ; preds = %158, %152, %148
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context37GetContextAttributesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #9
  %7 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %6)
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %24

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #9
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i8* [ %21, %18 ], [ %23, %22 ]
  %26 = bitcast i8* %25 to %"class.blink::WebGLRenderingContextBase"*
  %27 = tail call %"class.blink::WebGLContextAttributes"* @_ZNK5blink25WebGLRenderingContextBase20getContextAttributesEv(%"class.blink::WebGLRenderingContextBase"* %26) #9
  %28 = icmp eq %"class.blink::WebGLContextAttributes"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::ScriptState"* %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 176
  %33 = inttoptr i64 %32 to %"class.v8::Value"*
  br label %55

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.v8::Context"*, %"class.v8::Context"** %35, align 8
  %37 = icmp eq %"class.v8::Context"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::ScriptState"* %7 to %"class.v8::internal::Isolate"**
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = bitcast %"class.v8::Context"* %36 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %40, i64 %42) #9
  %44 = bitcast i64* %43 to %"class.v8::Context"*
  br label %45

45:                                               ; preds = %38, %34
  %46 = phi %"class.v8::Context"* [ %44, %38 ], [ null, %34 ]
  %47 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %46) #9
  %48 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %7, i64 0, i32 0
  %49 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %48, align 8
  %50 = bitcast %"class.blink::WebGLContextAttributes"* %27 to %"class.v8::Value"* (%"class.blink::WebGLContextAttributes"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::WebGLContextAttributes"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::WebGLContextAttributes"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::WebGLContextAttributes"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::WebGLContextAttributes"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %51, i64 2
  %53 = load %"class.v8::Value"* (%"class.blink::WebGLContextAttributes"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::WebGLContextAttributes"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::WebGLContextAttributes"* nonnull %27, %"class.v8::Object"* %47, %"class.v8::Isolate"* %49) #9
  br label %55

55:                                               ; preds = %29, %45
  %56 = phi %"class.v8::Value"* [ %33, %29 ], [ %54, %45 ]
  %57 = icmp eq %"class.v8::Value"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  %62 = bitcast %"class.v8::Value"* %56 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %61, align 8
  br label %64

64:                                               ; preds = %55, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25GetErrorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call i32 @_ZN5blink25WebGLRenderingContextBase8getErrorEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = icmp sgt i32 %25, -1
  br i1 %29, label %30, label %47, !prof !4

30:                                               ; preds = %22
  %31 = icmp ult i32 %25, 1073741824
  br i1 %31, label %32, label %35, !prof !4

32:                                               ; preds = %30
  %33 = sext i32 %25 to i64
  %34 = shl nsw i64 %33, 1
  br label %59

35:                                               ; preds = %30
  %36 = getelementptr inbounds i64, i64* %27, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %38, i32 %25) #9
  %40 = icmp eq %"class.v8::Integer"* %39, null
  br i1 %40, label %41, label %44, !prof !5

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %27, i64 2
  %43 = load i64, i64* %42, align 8
  br label %59

44:                                               ; preds = %35
  %45 = bitcast %"class.v8::Integer"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  br label %59

47:                                               ; preds = %22
  %48 = getelementptr inbounds i64, i64* %27, i64 1
  %49 = bitcast i64* %48 to %"class.v8::Isolate"**
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %51 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %50, i32 %25) #9
  %52 = icmp eq %"class.v8::Integer"* %51, null
  br i1 %52, label %53, label %56, !prof !5

53:                                               ; preds = %47
  %54 = getelementptr inbounds i64, i64* %27, i64 2
  %55 = load i64, i64* %54, align 8
  br label %59

56:                                               ; preds = %47
  %57 = bitcast %"class.v8::Integer"* %51 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %32, %41, %44, %53, %56
  %60 = phi i64 [ %34, %32 ], [ %43, %41 ], [ %46, %44 ], [ %55, %53 ], [ %58, %56 ]
  store i64 %60, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29GetExtensionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #9
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #9
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2697) #9
  br label %24

24:                                               ; preds = %1, %19
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %88, !prof !5

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #9
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %26) #9
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #9
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %64 = bitcast %"class.v8::Isolate"* %63 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %60, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #9
  %67 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %63) #9
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = bitcast i64* %66 to %"class.v8::Value"*
  %70 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %63, %"class.v8::Value"* %69) #9
  br label %71

71:                                               ; preds = %68, %62, %58
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %87

87:                                               ; preds = %71, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #9
  br label %320

88:                                               ; preds = %24
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 -1
  %92 = bitcast i64* %91 to %"class.v8::Object"*
  %93 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %92) #9
  %94 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %93)
  %95 = load i64, i64* %91, align 8
  %96 = add i64 %95, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  switch i16 %104, label %109 [
    i16 1057, label %105
    i16 1056, label %105
    i16 1040, label %105
  ]

105:                                              ; preds = %88, %88, %88
  %106 = add i64 %95, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %111

109:                                              ; preds = %88
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %92, i32 1) #9
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi i8* [ %108, %105 ], [ %110, %109 ]
  %113 = load i32, i32* %25, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %121, label %115

115:                                              ; preds = %111
  %116 = load i64*, i64** %8, align 8
  %117 = getelementptr inbounds i64, i64* %116, i64 1
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 160
  %120 = inttoptr i64 %119 to %"class.v8::Value"*
  br label %124

121:                                              ; preds = %111
  %122 = bitcast i64** %89 to %"class.v8::Value"**
  %123 = load %"class.v8::Value"*, %"class.v8::Value"** %122, align 8
  br label %124

124:                                              ; preds = %115, %121
  %125 = phi %"class.v8::Value"* [ %120, %115 ], [ %123, %121 ]
  %126 = bitcast %"class.v8::Value"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %154, !prof !6

130:                                              ; preds = %124
  %131 = add i64 %127, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i64 %127, -4294967296
  %135 = zext i32 %133 to i64
  %136 = or i64 %134, %135
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i16*
  %139 = load i16, i16* %138, align 2
  %140 = icmp ult i16 %139, 64
  br i1 %140, label %141, label %154, !prof !4

141:                                              ; preds = %130
  br i1 %114, label %148, label %142

142:                                              ; preds = %141
  %143 = load i64*, i64** %8, align 8
  %144 = getelementptr inbounds i64, i64* %143, i64 1
  %145 = load i64, i64* %144, align 8
  %146 = add i64 %145, 160
  %147 = inttoptr i64 %146 to %"class.v8::Value"*
  br label %151

148:                                              ; preds = %141
  %149 = bitcast i64** %89 to %"class.v8::Value"**
  %150 = load %"class.v8::Value"*, %"class.v8::Value"** %149, align 8
  br label %151

151:                                              ; preds = %142, %148
  %152 = phi %"class.v8::Value"* [ %147, %142 ], [ %150, %148 ]
  %153 = ptrtoint %"class.v8::Value"* %152 to i64
  br label %218

154:                                              ; preds = %124, %130
  %155 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %155) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 56, i1 false)
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %157, align 8
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %158, align 2
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %160 = bitcast i8** %159 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i64 0, i64 0)>, <2 x i8*>* %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %165 = bitcast %"class.WTF::StringImpl"** %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #9
  %166 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %166) #9
  br i1 %114, label %173, label %167

167:                                              ; preds = %154
  %168 = load i64*, i64** %8, align 8
  %169 = getelementptr inbounds i64, i64* %168, i64 1
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %170, 160
  %172 = inttoptr i64 %171 to %"class.v8::Value"*
  br label %176

173:                                              ; preds = %154
  %174 = bitcast i64** %89 to %"class.v8::Value"**
  %175 = load %"class.v8::Value"*, %"class.v8::Value"** %174, align 8
  br label %176

176:                                              ; preds = %167, %173
  %177 = phi %"class.v8::Value"* [ %172, %167 ], [ %175, %173 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %177, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  %178 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %180, i64 0, i32 0, i32 0
  %182 = bitcast %"class.WTF::String"* %180 to i64*
  %183 = load i64, i64* %182, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %181, align 8
  %184 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %185 = bitcast %"class.std::__1::unique_ptr.1524"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %166) #9
  %187 = load i32, i32* %163, align 8
  %188 = icmp eq i32 %187, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %189 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = icmp eq i64* %190, null
  br i1 %191, label %201, label %192

192:                                              ; preds = %176
  %193 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %162, align 8
  %194 = bitcast %"class.v8::Isolate"* %193 to %"class.v8::internal::Isolate"*
  %195 = load i64, i64* %190, align 8
  %196 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %194, i64 %195) #9
  %197 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %193) #9
  br i1 %197, label %201, label %198

198:                                              ; preds = %192
  %199 = bitcast i64* %196 to %"class.v8::Value"*
  %200 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %193, %"class.v8::Value"* %199) #9
  br label %201

201:                                              ; preds = %198, %192, %176
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #9
  br label %217

217:                                              ; preds = %201, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %155) #9
  br i1 %188, label %218, label %298

218:                                              ; preds = %217, %151
  %219 = phi i64 [ 0, %151 ], [ %186, %217 ]
  %220 = phi i64 [ 0, %151 ], [ %183, %217 ]
  %221 = phi i64 [ %153, %151 ], [ %179, %217 ]
  %222 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #9
  %223 = bitcast i8* %112 to %"class.blink::WebGLRenderingContextBase"*
  %224 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #9
  %225 = icmp eq i64 %221, 0
  br i1 %225, label %229, label %226, !prof !5

226:                                              ; preds = %218
  %227 = inttoptr i64 %221 to %"class.v8::String"*
  %228 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %227, i32 0) #9
  br label %249

229:                                              ; preds = %218
  %230 = inttoptr i64 %220 to %"class.WTF::StringImpl"*
  %231 = icmp eq i64 %220, 0
  br i1 %231, label %249, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %249

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = zext i32 %239 to i33
  %241 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %240, i33 1) #9
  %242 = extractvalue { i33, i1 } %241, 1
  %243 = extractvalue { i33, i1 } %241, 0
  %244 = icmp slt i33 %243, 0
  %245 = or i1 %242, %244
  br i1 %245, label %246, label %247, !prof !5

246:                                              ; preds = %237
  call void @llvm.trap() #9
  unreachable

247:                                              ; preds = %237
  %248 = trunc i33 %243 to i32
  store i32 %248, i32* %238, align 4
  br label %249

249:                                              ; preds = %226, %229, %232, %247
  %250 = phi %"class.WTF::StringImpl"* [ %228, %226 ], [ null, %229 ], [ %230, %232 ], [ %230, %247 ]
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %251, align 8
  call void @_ZN5blink25WebGLRenderingContextBase12getExtensionEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptValue"* nonnull sret %6, %"class.blink::WebGLRenderingContextBase"* %223, %"class.blink::ScriptState"* %94, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %253, label %267, label %254

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  br i1 %258, label %261, label %263

261:                                              ; preds = %254
  %262 = add i32 %260, -1
  store i32 %262, i32* %259, align 4
  br label %263

263:                                              ; preds = %261, %254
  %264 = phi i32 [ %262, %261 ], [ %260, %254 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #9
  br label %267

267:                                              ; preds = %249, %263, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #9
  %268 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = icmp eq i64* %269, null
  br i1 %270, label %271, label %276

271:                                              ; preds = %267
  %272 = bitcast %"class.blink::ScriptState"* %94 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = add i64 %273, 176
  %275 = inttoptr i64 %274 to %"class.v8::Value"*
  br label %278

276:                                              ; preds = %267
  %277 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %6) #9
  br label %278

278:                                              ; preds = %271, %276
  %279 = phi %"class.v8::Value"* [ %275, %271 ], [ %277, %276 ]
  %280 = icmp eq %"class.v8::Value"* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %278
  %282 = load i64*, i64** %8, align 8
  %283 = getelementptr inbounds i64, i64* %282, i64 3
  %284 = bitcast %"class.v8::Value"* %279 to i64*
  %285 = load i64, i64* %284, align 8
  store i64 %285, i64* %283, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %14, i32 2697) #9
  br label %286

286:                                              ; preds = %278, %281
  %287 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %288 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %287, align 8
  %289 = icmp eq %"class.blink::DOMWrapperWorld"* %288, null
  br i1 %289, label %297, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %288, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %291) #9
  %292 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %288, i64 0, i32 0, i32 0, i32 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %297

295:                                              ; preds = %290
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %288) #9
  %296 = bitcast %"class.blink::DOMWrapperWorld"* %288 to i8*
  call void @free(i8* %296) #9
  br label %297

297:                                              ; preds = %286, %290, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #9
  br label %298

298:                                              ; preds = %217, %297
  %299 = phi i64 [ %219, %297 ], [ %186, %217 ]
  %300 = phi i64 [ %220, %297 ], [ %183, %217 ]
  %301 = icmp eq i64 %299, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %298
  %303 = inttoptr i64 %299 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %303) #9
  br label %304

304:                                              ; preds = %302, %298
  %305 = inttoptr i64 %300 to %"class.WTF::StringImpl"*
  %306 = icmp eq i64 %300, 0
  br i1 %306, label %320, label %307

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  br i1 %311, label %314, label %316

314:                                              ; preds = %307
  %315 = add i32 %313, -1
  store i32 %315, i32* %312, align 4
  br label %316

316:                                              ; preds = %314, %307
  %317 = phi i32 [ %315, %314 ], [ %313, %307 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %305) #9
  br label %320

320:                                              ; preds = %319, %316, %304, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context50GetFramebufferAttachmentParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.359, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 3
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %178

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %65
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #9
  br i1 %82, label %83, label %86, !prof !4

83:                                               ; preds = %80
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #9
  br label %95

86:                                               ; preds = %80
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %91, !prof !4

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #9
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %93 = load i32, i32* %18, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %178

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = load i32, i32* %21, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = load i64*, i64** %5, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %95
  %106 = load i64*, i64** %45, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = bitcast i64* %107 to %"class.v8::Value"*
  br label %109

109:                                              ; preds = %99, %105
  %110 = phi %"class.v8::Value"* [ %104, %99 ], [ %108, %105 ]
  %111 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %110) #9
  br i1 %111, label %112, label %115, !prof !4

112:                                              ; preds = %109
  %113 = bitcast %"class.v8::Value"* %110 to %"class.v8::Uint32"*
  %114 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %113) #9
  br label %122

115:                                              ; preds = %109
  %116 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %110) #9
  br i1 %116, label %117, label %120, !prof !4

117:                                              ; preds = %115
  %118 = bitcast %"class.v8::Value"* %110 to %"class.v8::Int32"*
  %119 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %118) #9
  br label %122

120:                                              ; preds = %115
  %121 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %110, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %122

122:                                              ; preds = %112, %117, %120
  %123 = phi i32 [ %114, %112 ], [ %119, %117 ], [ %121, %120 ]
  %124 = load i32, i32* %18, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %178

126:                                              ; preds = %122
  %127 = load i32, i32* %21, align 8
  %128 = icmp sgt i32 %127, 2
  br i1 %128, label %135, label %129

129:                                              ; preds = %126
  %130 = load i64*, i64** %5, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 1
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 160
  %134 = inttoptr i64 %133 to %"class.v8::Value"*
  br label %139

135:                                              ; preds = %126
  %136 = load i64*, i64** %45, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 2
  %138 = bitcast i64* %137 to %"class.v8::Value"*
  br label %139

139:                                              ; preds = %129, %135
  %140 = phi %"class.v8::Value"* [ %134, %129 ], [ %138, %135 ]
  %141 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %140) #9
  br i1 %141, label %142, label %145, !prof !4

142:                                              ; preds = %139
  %143 = bitcast %"class.v8::Value"* %140 to %"class.v8::Uint32"*
  %144 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %143) #9
  br label %152

145:                                              ; preds = %139
  %146 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %140) #9
  br i1 %146, label %147, label %150, !prof !4

147:                                              ; preds = %145
  %148 = bitcast %"class.v8::Value"* %140 to %"class.v8::Int32"*
  %149 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %148) #9
  br label %152

150:                                              ; preds = %145
  %151 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %140, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %152

152:                                              ; preds = %142, %147, %150
  %153 = phi i32 [ %144, %142 ], [ %149, %147 ], [ %151, %150 ]
  %154 = load i32, i32* %18, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %178

156:                                              ; preds = %152
  %157 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #9
  %158 = bitcast i8* %66 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase33getFramebufferAttachmentParameterEPNS_11ScriptStateEjjj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %158, %"class.blink::ScriptState"* %68, i32 %96, i32 %123, i32 %153) #9
  %159 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %160 = load i64*, i64** %5, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 3
  %162 = icmp eq %"class.v8::Value"* %159, null
  %163 = bitcast %"class.v8::Value"* %159 to i64*
  %164 = getelementptr inbounds i64, i64* %160, i64 2
  %165 = select i1 %162, i64* %164, i64* %163, !prof !5
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %161, align 8
  %167 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %168 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %167, align 8
  %169 = icmp eq %"class.blink::DOMWrapperWorld"* %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %156
  %171 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %168, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %171) #9
  %172 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %168, i64 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %170
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %168) #9
  %176 = bitcast %"class.blink::DOMWrapperWorld"* %168 to i8*
  call void @free(i8* %176) #9
  br label %177

177:                                              ; preds = %156, %170, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #9
  br label %178

178:                                              ; preds = %152, %122, %91, %177, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %179 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %180 = load i64*, i64** %179, align 8
  %181 = icmp eq i64* %180, null
  br i1 %181, label %191, label %182

182:                                              ; preds = %178
  %183 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %184 = bitcast %"class.v8::Isolate"* %183 to %"class.v8::internal::Isolate"*
  %185 = load i64, i64* %180, align 8
  %186 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %184, i64 %185) #9
  %187 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %183) #9
  br i1 %187, label %191, label %188

188:                                              ; preds = %182
  %189 = bitcast i64* %186 to %"class.v8::Value"*
  %190 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %183, %"class.v8::Value"* %189) #9
  br label %191

191:                                              ; preds = %188, %182, %178
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #9
  br label %207

207:                                              ; preds = %191, %203, %206
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29GetParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #9
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %10) #9
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 3
  %14 = icmp eq %"class.blink::UseCounter"* %13, null
  %15 = or i1 %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::UseCounter"* %13 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* nonnull %13, i32 3568) #9
  br label %21

21:                                               ; preds = %1, %16
  %22 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 56, i1 false)
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %25, align 2
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %27 = bitcast i8** %26 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.360, i64 0, i64 0)>, <2 x i8*>* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %32 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #9
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %36, label %56, !prof !5

36:                                               ; preds = %21
  %37 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %38 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %34) #9
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #9
  br label %55

55:                                               ; preds = %36, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %130

56:                                               ; preds = %21
  %57 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 -1
  %60 = bitcast i64* %59 to %"class.v8::Object"*
  %61 = load i64, i64* %59, align 8
  %62 = add i64 %61, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i64 %61, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load i16, i16* %69, align 2
  switch i16 %70, label %75 [
    i16 1057, label %71
    i16 1056, label %71
    i16 1040, label %71
  ]

71:                                               ; preds = %56, %56, %56
  %72 = add i64 %61, 19
  %73 = inttoptr i64 %72 to i8**
  %74 = load i8*, i8** %73, align 1
  br label %77

75:                                               ; preds = %56
  %76 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %60, i32 1) #9
  br label %77

77:                                               ; preds = %71, %75
  %78 = phi i8* [ %74, %71 ], [ %76, %75 ]
  %79 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %60) #9
  %80 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %79)
  %81 = load i32, i32* %33, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %77
  %84 = load i64*, i64** %5, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 160
  %88 = inttoptr i64 %87 to %"class.v8::Value"*
  br label %92

89:                                               ; preds = %77
  %90 = bitcast i64** %57 to %"class.v8::Value"**
  %91 = load %"class.v8::Value"*, %"class.v8::Value"** %90, align 8
  br label %92

92:                                               ; preds = %83, %89
  %93 = phi %"class.v8::Value"* [ %88, %83 ], [ %91, %89 ]
  %94 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %93) #9
  br i1 %94, label %95, label %98, !prof !4

95:                                               ; preds = %92
  %96 = bitcast %"class.v8::Value"* %93 to %"class.v8::Uint32"*
  %97 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %96) #9
  br label %107

98:                                               ; preds = %92
  %99 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %93) #9
  br i1 %99, label %100, label %103, !prof !4

100:                                              ; preds = %98
  %101 = bitcast %"class.v8::Value"* %93 to %"class.v8::Int32"*
  %102 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %101) #9
  br label %107

103:                                              ; preds = %98
  %104 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %93, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %105 = load i32, i32* %30, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %130

107:                                              ; preds = %100, %95, %103
  %108 = phi i32 [ %104, %103 ], [ %102, %100 ], [ %97, %95 ]
  %109 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #9
  %110 = bitcast i8* %78 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12getParameterEPNS_11ScriptStateEj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %110, %"class.blink::ScriptState"* %80, i32 %108) #9
  %111 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %112 = load i64*, i64** %5, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 3
  %114 = icmp eq %"class.v8::Value"* %111, null
  %115 = bitcast %"class.v8::Value"* %111 to i64*
  %116 = getelementptr inbounds i64, i64* %112, i64 2
  %117 = select i1 %114, i64* %116, i64* %115, !prof !5
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %113, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %11, i32 3568) #9
  %119 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %120 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %119, align 8
  %121 = icmp eq %"class.blink::DOMWrapperWorld"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %107
  %123 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %120, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #9
  %124 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %120) #9
  %128 = bitcast %"class.blink::DOMWrapperWorld"* %120 to i8*
  call void @free(i8* %128) #9
  br label %129

129:                                              ; preds = %107, %122, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #9
  br label %130

130:                                              ; preds = %103, %129, %55
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %131 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %132, null
  br i1 %133, label %143, label %134

134:                                              ; preds = %130
  %135 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %136 = bitcast %"class.v8::Isolate"* %135 to %"class.v8::internal::Isolate"*
  %137 = load i64, i64* %132, align 8
  %138 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %136, i64 %137) #9
  %139 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %135) #9
  br i1 %139, label %143, label %140

140:                                              ; preds = %134
  %141 = bitcast i64* %138 to %"class.v8::Value"*
  %142 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %135, %"class.v8::Value"* %141) #9
  br label %143

143:                                              ; preds = %140, %134, %130
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #9
  br label %159

159:                                              ; preds = %143, %155, %158
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34GetProgramInfoLogOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.361, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %153

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %153

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLProgram"* [ %106, %104 ], [ null, %107 ]
  %112 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %113 = call %"class.WTF::StringImpl"* @_ZN5blink25WebGLRenderingContextBase17getProgramInfoLogEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"* %112, %"class.blink::WebGLProgram"* %111) #9
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %110
  %116 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %117 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %116, i64 0, i32 5, i32 0, i32 0, i32 0
  %118 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %117, align 8
  %119 = load i64*, i64** %4, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 3
  %121 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %118, i64 0, i32 3, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, %113
  br i1 %123, label %124, label %131

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %118, i64 0, i32 1, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %140, label %128

128:                                              ; preds = %124
  %129 = inttoptr i64 %126 to i64*
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %120, align 8
  br label %140

131:                                              ; preds = %115
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %118, i64* %120, %"class.WTF::StringImpl"* nonnull %113) #9
  br label %140

132:                                              ; preds = %110
  %133 = load i64*, i64** %4, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 3
  %135 = getelementptr inbounds i64, i64* %133, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 176
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %134, align 8
  br label %153

140:                                              ; preds = %124, %128, %131
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #9
  br label %153

153:                                              ; preds = %107, %152, %149, %132, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %154 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = icmp eq i64* %155, null
  br i1 %156, label %166, label %157

157:                                              ; preds = %153
  %158 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %159 = bitcast %"class.v8::Isolate"* %158 to %"class.v8::internal::Isolate"*
  %160 = load i64, i64* %155, align 8
  %161 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %159, i64 %160) #9
  %162 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %158) #9
  br i1 %162, label %166, label %163

163:                                              ; preds = %157
  %164 = bitcast i64* %161 to %"class.v8::Value"*
  %165 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %158, %"class.v8::Value"* %164) #9
  br label %166

166:                                              ; preds = %163, %157, %153
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #9
  br label %182

182:                                              ; preds = %166, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36GetProgramParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.362, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %166

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %65
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %83 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to %"class.blink::V8PerIsolateData"**
  %86 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %85, align 8
  %87 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %86, %"struct.blink::WrapperTypeInfo"* %82, %"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %110

88:                                               ; preds = %80
  %89 = bitcast %"class.v8::Value"* %81 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %90, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  switch i16 %99, label %104 [
    i16 1057, label %100
    i16 1056, label %100
    i16 1040, label %100
  ]

100:                                              ; preds = %88, %88, %88
  %101 = add i64 %90, 19
  %102 = inttoptr i64 %101 to i8**
  %103 = load i8*, i8** %102, align 1
  br label %107

104:                                              ; preds = %88
  %105 = bitcast %"class.v8::Value"* %81 to %"class.v8::Object"*
  %106 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %105, i32 1) #9
  br label %107

107:                                              ; preds = %100, %104
  %108 = phi i8* [ %103, %100 ], [ %106, %104 ]
  %109 = bitcast i8* %108 to %"class.blink::WebGLProgram"*
  br label %113

110:                                              ; preds = %80
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %111 = load i32, i32* %18, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %166

113:                                              ; preds = %107, %110
  %114 = phi %"class.blink::WebGLProgram"* [ %109, %107 ], [ null, %110 ]
  %115 = load i32, i32* %21, align 8
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  %118 = load i64*, i64** %5, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %113
  %124 = load i64*, i64** %45, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  %129 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %128) #9
  br i1 %129, label %130, label %133, !prof !4

130:                                              ; preds = %127
  %131 = bitcast %"class.v8::Value"* %128 to %"class.v8::Uint32"*
  %132 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %131) #9
  br label %140

133:                                              ; preds = %127
  %134 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %128) #9
  br i1 %134, label %135, label %138, !prof !4

135:                                              ; preds = %133
  %136 = bitcast %"class.v8::Value"* %128 to %"class.v8::Int32"*
  %137 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %136) #9
  br label %140

138:                                              ; preds = %133
  %139 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %128, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %140

140:                                              ; preds = %130, %135, %138
  %141 = phi i32 [ %132, %130 ], [ %137, %135 ], [ %139, %138 ]
  %142 = load i32, i32* %18, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %166

144:                                              ; preds = %140
  %145 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #9
  %146 = bitcast i8* %66 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase19getProgramParameterEPNS_11ScriptStateEPNS_12WebGLProgramEj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %146, %"class.blink::ScriptState"* %68, %"class.blink::WebGLProgram"* %114, i32 %141) #9
  %147 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %148 = load i64*, i64** %5, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = icmp eq %"class.v8::Value"* %147, null
  %151 = bitcast %"class.v8::Value"* %147 to i64*
  %152 = getelementptr inbounds i64, i64* %148, i64 2
  %153 = select i1 %150, i64* %152, i64* %151, !prof !5
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %149, align 8
  %155 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %156 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %155, align 8
  %157 = icmp eq %"class.blink::DOMWrapperWorld"* %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %144
  %159 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %156, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %159) #9
  %160 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %156, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %158
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %156) #9
  %164 = bitcast %"class.blink::DOMWrapperWorld"* %156 to i8*
  call void @free(i8* %164) #9
  br label %165

165:                                              ; preds = %144, %158, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #9
  br label %166

166:                                              ; preds = %140, %110, %165, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = icmp eq i64* %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %166
  %171 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %172 = bitcast %"class.v8::Isolate"* %171 to %"class.v8::internal::Isolate"*
  %173 = load i64, i64* %168, align 8
  %174 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %172, i64 %173) #9
  %175 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %171) #9
  br i1 %175, label %179, label %176

176:                                              ; preds = %170
  %177 = bitcast i64* %174 to %"class.v8::Value"*
  %178 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %171, %"class.v8::Value"* %177) #9
  br label %179

179:                                              ; preds = %176, %170, %166
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #9
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context41GetRenderbufferParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #9
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %10) #9
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 3
  %14 = icmp eq %"class.blink::UseCounter"* %13, null
  %15 = or i1 %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::UseCounter"* %13 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* nonnull %13, i32 3569) #9
  br label %21

21:                                               ; preds = %1, %16
  %22 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 56, i1 false)
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %25, align 2
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %27 = bitcast i8** %26 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.363, i64 0, i64 0)>, <2 x i8*>* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %32 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #9
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %34, 2
  br i1 %35, label %36, label %56, !prof !5

36:                                               ; preds = %21
  %37 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %38 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %34) #9
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #9
  br label %55

55:                                               ; preds = %36, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %160

56:                                               ; preds = %21
  %57 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 -1
  %60 = bitcast i64* %59 to %"class.v8::Object"*
  %61 = load i64, i64* %59, align 8
  %62 = add i64 %61, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i64 %61, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load i16, i16* %69, align 2
  switch i16 %70, label %75 [
    i16 1057, label %71
    i16 1056, label %71
    i16 1040, label %71
  ]

71:                                               ; preds = %56, %56, %56
  %72 = add i64 %61, 19
  %73 = inttoptr i64 %72 to i8**
  %74 = load i8*, i8** %73, align 1
  br label %77

75:                                               ; preds = %56
  %76 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %60, i32 1) #9
  br label %77

77:                                               ; preds = %71, %75
  %78 = phi i8* [ %74, %71 ], [ %76, %75 ]
  %79 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %60) #9
  %80 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %79)
  %81 = load i32, i32* %33, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %77
  %84 = load i64*, i64** %5, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 160
  %88 = inttoptr i64 %87 to %"class.v8::Value"*
  br label %92

89:                                               ; preds = %77
  %90 = bitcast i64** %57 to %"class.v8::Value"**
  %91 = load %"class.v8::Value"*, %"class.v8::Value"** %90, align 8
  br label %92

92:                                               ; preds = %83, %89
  %93 = phi %"class.v8::Value"* [ %88, %83 ], [ %91, %89 ]
  %94 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %93) #9
  br i1 %94, label %95, label %98, !prof !4

95:                                               ; preds = %92
  %96 = bitcast %"class.v8::Value"* %93 to %"class.v8::Uint32"*
  %97 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %96) #9
  br label %107

98:                                               ; preds = %92
  %99 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %93) #9
  br i1 %99, label %100, label %103, !prof !4

100:                                              ; preds = %98
  %101 = bitcast %"class.v8::Value"* %93 to %"class.v8::Int32"*
  %102 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %101) #9
  br label %107

103:                                              ; preds = %98
  %104 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %93, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %105 = load i32, i32* %30, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %160

107:                                              ; preds = %100, %95, %103
  %108 = phi i32 [ %104, %103 ], [ %102, %100 ], [ %97, %95 ]
  %109 = load i32, i32* %33, align 8
  %110 = icmp sgt i32 %109, 1
  br i1 %110, label %117, label %111

111:                                              ; preds = %107
  %112 = load i64*, i64** %5, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 1
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 160
  %116 = inttoptr i64 %115 to %"class.v8::Value"*
  br label %121

117:                                              ; preds = %107
  %118 = load i64*, i64** %57, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = bitcast i64* %119 to %"class.v8::Value"*
  br label %121

121:                                              ; preds = %111, %117
  %122 = phi %"class.v8::Value"* [ %116, %111 ], [ %120, %117 ]
  %123 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %122) #9
  br i1 %123, label %124, label %127, !prof !4

124:                                              ; preds = %121
  %125 = bitcast %"class.v8::Value"* %122 to %"class.v8::Uint32"*
  %126 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %125) #9
  br label %134

127:                                              ; preds = %121
  %128 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %122) #9
  br i1 %128, label %129, label %132, !prof !4

129:                                              ; preds = %127
  %130 = bitcast %"class.v8::Value"* %122 to %"class.v8::Int32"*
  %131 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %130) #9
  br label %134

132:                                              ; preds = %127
  %133 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %122, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %134

134:                                              ; preds = %124, %129, %132
  %135 = phi i32 [ %126, %124 ], [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %30, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %134
  %139 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #9
  %140 = bitcast i8* %78 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase24getRenderbufferParameterEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %140, %"class.blink::ScriptState"* %80, i32 %108, i32 %135) #9
  %141 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %142 = load i64*, i64** %5, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 3
  %144 = icmp eq %"class.v8::Value"* %141, null
  %145 = bitcast %"class.v8::Value"* %141 to i64*
  %146 = getelementptr inbounds i64, i64* %142, i64 2
  %147 = select i1 %144, i64* %146, i64* %145, !prof !5
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %143, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %11, i32 3569) #9
  %149 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %150 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %149, align 8
  %151 = icmp eq %"class.blink::DOMWrapperWorld"* %150, null
  br i1 %151, label %159, label %152

152:                                              ; preds = %138
  %153 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %150, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %153) #9
  %154 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %150) #9
  %158 = bitcast %"class.blink::DOMWrapperWorld"* %150 to i8*
  call void @free(i8* %158) #9
  br label %159

159:                                              ; preds = %138, %152, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #9
  br label %160

160:                                              ; preds = %134, %103, %159, %55
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = icmp eq i64* %162, null
  br i1 %163, label %173, label %164

164:                                              ; preds = %160
  %165 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %166 = bitcast %"class.v8::Isolate"* %165 to %"class.v8::internal::Isolate"*
  %167 = load i64, i64* %162, align 8
  %168 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %166, i64 %167) #9
  %169 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %165) #9
  br i1 %169, label %173, label %170

170:                                              ; preds = %164
  %171 = bitcast i64* %168 to %"class.v8::Value"*
  %172 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %165, %"class.v8::Value"* %171) #9
  br label %173

173:                                              ; preds = %170, %164, %160
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #9
  br label %189

189:                                              ; preds = %173, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33GetShaderInfoLogOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.364, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %153

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLShader"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %153

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLShader"* [ %106, %104 ], [ null, %107 ]
  %112 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %113 = call %"class.WTF::StringImpl"* @_ZN5blink25WebGLRenderingContextBase16getShaderInfoLogEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"* %112, %"class.blink::WebGLShader"* %111) #9
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %110
  %116 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %117 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %116, i64 0, i32 5, i32 0, i32 0, i32 0
  %118 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %117, align 8
  %119 = load i64*, i64** %4, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 3
  %121 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %118, i64 0, i32 3, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, %113
  br i1 %123, label %124, label %131

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %118, i64 0, i32 1, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %140, label %128

128:                                              ; preds = %124
  %129 = inttoptr i64 %126 to i64*
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %120, align 8
  br label %140

131:                                              ; preds = %115
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %118, i64* %120, %"class.WTF::StringImpl"* nonnull %113) #9
  br label %140

132:                                              ; preds = %110
  %133 = load i64*, i64** %4, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 3
  %135 = getelementptr inbounds i64, i64* %133, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 176
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %134, align 8
  br label %153

140:                                              ; preds = %124, %128, %131
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #9
  br label %153

153:                                              ; preds = %107, %152, %149, %132, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %154 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = icmp eq i64* %155, null
  br i1 %156, label %166, label %157

157:                                              ; preds = %153
  %158 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %159 = bitcast %"class.v8::Isolate"* %158 to %"class.v8::internal::Isolate"*
  %160 = load i64, i64* %155, align 8
  %161 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %159, i64 %160) #9
  %162 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %158) #9
  br i1 %162, label %166, label %163

163:                                              ; preds = %157
  %164 = bitcast i64* %161 to %"class.v8::Value"*
  %165 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %158, %"class.v8::Value"* %164) #9
  br label %166

166:                                              ; preds = %163, %157, %153
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #9
  br label %182

182:                                              ; preds = %166, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetShaderParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.365, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %166

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %65
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %83 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to %"class.blink::V8PerIsolateData"**
  %86 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %85, align 8
  %87 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %86, %"struct.blink::WrapperTypeInfo"* %82, %"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %110

88:                                               ; preds = %80
  %89 = bitcast %"class.v8::Value"* %81 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %90, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  switch i16 %99, label %104 [
    i16 1057, label %100
    i16 1056, label %100
    i16 1040, label %100
  ]

100:                                              ; preds = %88, %88, %88
  %101 = add i64 %90, 19
  %102 = inttoptr i64 %101 to i8**
  %103 = load i8*, i8** %102, align 1
  br label %107

104:                                              ; preds = %88
  %105 = bitcast %"class.v8::Value"* %81 to %"class.v8::Object"*
  %106 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %105, i32 1) #9
  br label %107

107:                                              ; preds = %100, %104
  %108 = phi i8* [ %103, %100 ], [ %106, %104 ]
  %109 = bitcast i8* %108 to %"class.blink::WebGLShader"*
  br label %113

110:                                              ; preds = %80
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %111 = load i32, i32* %18, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %166

113:                                              ; preds = %107, %110
  %114 = phi %"class.blink::WebGLShader"* [ %109, %107 ], [ null, %110 ]
  %115 = load i32, i32* %21, align 8
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  %118 = load i64*, i64** %5, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %113
  %124 = load i64*, i64** %45, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  %129 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %128) #9
  br i1 %129, label %130, label %133, !prof !4

130:                                              ; preds = %127
  %131 = bitcast %"class.v8::Value"* %128 to %"class.v8::Uint32"*
  %132 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %131) #9
  br label %140

133:                                              ; preds = %127
  %134 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %128) #9
  br i1 %134, label %135, label %138, !prof !4

135:                                              ; preds = %133
  %136 = bitcast %"class.v8::Value"* %128 to %"class.v8::Int32"*
  %137 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %136) #9
  br label %140

138:                                              ; preds = %133
  %139 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %128, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %140

140:                                              ; preds = %130, %135, %138
  %141 = phi i32 [ %132, %130 ], [ %137, %135 ], [ %139, %138 ]
  %142 = load i32, i32* %18, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %166

144:                                              ; preds = %140
  %145 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #9
  %146 = bitcast i8* %66 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase18getShaderParameterEPNS_11ScriptStateEPNS_11WebGLShaderEj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %146, %"class.blink::ScriptState"* %68, %"class.blink::WebGLShader"* %114, i32 %141) #9
  %147 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %148 = load i64*, i64** %5, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = icmp eq %"class.v8::Value"* %147, null
  %151 = bitcast %"class.v8::Value"* %147 to i64*
  %152 = getelementptr inbounds i64, i64* %148, i64 2
  %153 = select i1 %150, i64* %152, i64* %151, !prof !5
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %149, align 8
  %155 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %156 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %155, align 8
  %157 = icmp eq %"class.blink::DOMWrapperWorld"* %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %144
  %159 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %156, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %159) #9
  %160 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %156, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %158
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %156) #9
  %164 = bitcast %"class.blink::DOMWrapperWorld"* %156 to i8*
  call void @free(i8* %164) #9
  br label %165

165:                                              ; preds = %144, %158, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #9
  br label %166

166:                                              ; preds = %140, %110, %165, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = icmp eq i64* %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %166
  %171 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %172 = bitcast %"class.v8::Isolate"* %171 to %"class.v8::internal::Isolate"*
  %173 = load i64, i64* %168, align 8
  %174 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %172, i64 %173) #9
  %175 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %171) #9
  br i1 %175, label %179, label %176

176:                                              ; preds = %170
  %177 = bitcast i64* %174 to %"class.v8::Value"*
  %178 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %171, %"class.v8::Value"* %177) #9
  br label %179

179:                                              ; preds = %176, %170, %166
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #9
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context41GetShaderPrecisionFormatOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #9
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #9
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 3570) #9
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.366, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #9
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 2
  br i1 %34, label %35, label %55, !prof !5

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %33) #9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %172

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to i8**
  %72 = load i8*, i8** %71, align 1
  br label %84

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #9
  %76 = load i32, i32* %32, align 8
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %73
  %79 = load i64*, i64** %4, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 1
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 160
  %83 = inttoptr i64 %82 to %"class.v8::Value"*
  br label %88

84:                                               ; preds = %69, %73
  %85 = phi i8* [ %72, %69 ], [ %75, %73 ]
  %86 = bitcast i64** %56 to %"class.v8::Value"**
  %87 = load %"class.v8::Value"*, %"class.v8::Value"** %86, align 8
  br label %88

88:                                               ; preds = %78, %84
  %89 = phi i8* [ %75, %78 ], [ %85, %84 ]
  %90 = phi %"class.v8::Value"* [ %83, %78 ], [ %87, %84 ]
  %91 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %90) #9
  br i1 %91, label %92, label %95, !prof !4

92:                                               ; preds = %88
  %93 = bitcast %"class.v8::Value"* %90 to %"class.v8::Uint32"*
  %94 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %93) #9
  br label %104

95:                                               ; preds = %88
  %96 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %90) #9
  br i1 %96, label %97, label %100, !prof !4

97:                                               ; preds = %95
  %98 = bitcast %"class.v8::Value"* %90 to %"class.v8::Int32"*
  %99 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %98) #9
  br label %104

100:                                              ; preds = %95
  %101 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %90, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %102 = load i32, i32* %29, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %172

104:                                              ; preds = %97, %92, %100
  %105 = phi i32 [ %101, %100 ], [ %99, %97 ], [ %94, %92 ]
  %106 = load i32, i32* %32, align 8
  %107 = icmp sgt i32 %106, 1
  br i1 %107, label %114, label %108

108:                                              ; preds = %104
  %109 = load i64*, i64** %4, align 8
  %110 = getelementptr inbounds i64, i64* %109, i64 1
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 160
  %113 = inttoptr i64 %112 to %"class.v8::Value"*
  br label %118

114:                                              ; preds = %104
  %115 = load i64*, i64** %56, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = bitcast i64* %116 to %"class.v8::Value"*
  br label %118

118:                                              ; preds = %108, %114
  %119 = phi %"class.v8::Value"* [ %113, %108 ], [ %117, %114 ]
  %120 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %119) #9
  br i1 %120, label %121, label %124, !prof !4

121:                                              ; preds = %118
  %122 = bitcast %"class.v8::Value"* %119 to %"class.v8::Uint32"*
  %123 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %122) #9
  br label %131

124:                                              ; preds = %118
  %125 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %119) #9
  br i1 %125, label %126, label %129, !prof !4

126:                                              ; preds = %124
  %127 = bitcast %"class.v8::Value"* %119 to %"class.v8::Int32"*
  %128 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %127) #9
  br label %131

129:                                              ; preds = %124
  %130 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %119, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %131

131:                                              ; preds = %121, %126, %129
  %132 = phi i32 [ %123, %121 ], [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %29, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %172

135:                                              ; preds = %131
  %136 = bitcast i8* %89 to %"class.blink::WebGLRenderingContextBase"*
  %137 = call %"class.blink::WebGLShaderPrecisionFormat"* @_ZN5blink25WebGLRenderingContextBase24getShaderPrecisionFormatEjj(%"class.blink::WebGLRenderingContextBase"* %136, i32 %105, i32 %132) #9
  %138 = getelementptr inbounds %"class.blink::WebGLShaderPrecisionFormat", %"class.blink::WebGLShaderPrecisionFormat"* %137, i64 0, i32 0
  %139 = icmp eq %"class.blink::WebGLShaderPrecisionFormat"* %137, null
  %140 = load i64*, i64** %4, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 3
  br i1 %139, label %142, label %148, !prof !5

142:                                              ; preds = %135
  %143 = getelementptr inbounds i64, i64* %140, i64 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 176
  %146 = inttoptr i64 %145 to i64*
  %147 = load i64, i64* %146, align 8
  store i64 %147, i64* %141, align 8
  br label %171

148:                                              ; preds = %135
  %149 = bitcast i8* %89 to %"class.blink::ScriptWrappable"*
  %150 = load i64*, i64** %56, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 -1
  %152 = bitcast i64* %151 to %"class.v8::Object"*
  %153 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %141, %"class.blink::ScriptWrappable"* nonnull %138, %"class.v8::Object"* %152, %"class.blink::ScriptWrappable"* %149) #9
  br i1 %153, label %171, label %154

154:                                              ; preds = %148
  %155 = load i64*, i64** %56, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 -1
  %157 = bitcast i64* %156 to %"class.v8::Object"*
  %158 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %157) #9
  %159 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %158) #9
  %160 = bitcast %"class.blink::WebGLShaderPrecisionFormat"* %137 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %161 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %160, align 8
  %162 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %161, i64 7
  %163 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %162, align 8
  %164 = call %"class.v8::Value"* %163(%"class.blink::ScriptWrappable"* nonnull %138, %"class.blink::ScriptState"* %159) #9
  %165 = icmp eq %"class.v8::Value"* %164, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %154
  %167 = load i64*, i64** %4, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 3
  %169 = bitcast %"class.v8::Value"* %164 to i64*
  %170 = load i64, i64* %169, align 8
  store i64 %170, i64* %168, align 8
  br label %171

171:                                              ; preds = %142, %148, %154, %166
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %10, i32 3570) #9
  br label %172

172:                                              ; preds = %131, %100, %171, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %173 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %174 = load i64*, i64** %173, align 8
  %175 = icmp eq i64* %174, null
  br i1 %175, label %185, label %176

176:                                              ; preds = %172
  %177 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %178 = bitcast %"class.v8::Isolate"* %177 to %"class.v8::internal::Isolate"*
  %179 = load i64, i64* %174, align 8
  %180 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %178, i64 %179) #9
  %181 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %177) #9
  br i1 %181, label %185, label %182

182:                                              ; preds = %176
  %183 = bitcast i64* %180 to %"class.v8::Value"*
  %184 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %177, %"class.v8::Value"* %183) #9
  br label %185

185:                                              ; preds = %182, %176, %172
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #9
  br label %201

201:                                              ; preds = %185, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetShaderSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.367, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %153

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLShader"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %153

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLShader"* [ %106, %104 ], [ null, %107 ]
  %112 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %113 = call %"class.WTF::StringImpl"* @_ZN5blink25WebGLRenderingContextBase15getShaderSourceEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"* %112, %"class.blink::WebGLShader"* %111) #9
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %110
  %116 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %117 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %116, i64 0, i32 5, i32 0, i32 0, i32 0
  %118 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %117, align 8
  %119 = load i64*, i64** %4, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 3
  %121 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %118, i64 0, i32 3, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, %113
  br i1 %123, label %124, label %131

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %118, i64 0, i32 1, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %140, label %128

128:                                              ; preds = %124
  %129 = inttoptr i64 %126 to i64*
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %120, align 8
  br label %140

131:                                              ; preds = %115
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %118, i64* %120, %"class.WTF::StringImpl"* nonnull %113) #9
  br label %140

132:                                              ; preds = %110
  %133 = load i64*, i64** %4, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 3
  %135 = getelementptr inbounds i64, i64* %133, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 176
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %134, align 8
  br label %153

140:                                              ; preds = %124, %128, %131
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #9
  br label %153

153:                                              ; preds = %107, %152, %149, %132, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %154 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = icmp eq i64* %155, null
  br i1 %156, label %166, label %157

157:                                              ; preds = %153
  %158 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %159 = bitcast %"class.v8::Isolate"* %158 to %"class.v8::internal::Isolate"*
  %160 = load i64, i64* %155, align 8
  %161 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %159, i64 %160) #9
  %162 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %158) #9
  br i1 %162, label %166, label %163

163:                                              ; preds = %157
  %164 = bitcast i64* %161 to %"class.v8::Value"*
  %165 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %158, %"class.v8::Value"* %164) #9
  br label %166

166:                                              ; preds = %163, %157, %153
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #9
  br label %182

182:                                              ; preds = %166, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context39GetSupportedExtensionsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::IdentifiableToken", align 8
  %3 = alloca %"class.blink::IdentifiableTokenBuilder", align 8
  %4 = alloca %"class.absl::optional.1559", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #9
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %10) #9
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 3
  %14 = icmp eq %"class.blink::UseCounter"* %13, null
  %15 = or i1 %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::UseCounter"* %13 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* nonnull %13, i32 2698) #9
  br label %21

21:                                               ; preds = %1, %16
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 -1
  %25 = bitcast i64* %24 to %"class.v8::Object"*
  %26 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %25) #9
  %27 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %26)
  %28 = load i64, i64* %24, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %21, %21, %21
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %44

42:                                               ; preds = %21
  %43 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %25, i32 1) #9
  br label %44

44:                                               ; preds = %38, %42
  %45 = phi i8* [ %41, %38 ], [ %43, %42 ]
  %46 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #9
  %47 = bitcast i8* %45 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase22getSupportedExtensionsEv(%"class.absl::optional.1559"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %47) #9
  %48 = load i8, i8* %46, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.blink::ScriptState"* %27 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 176
  %54 = inttoptr i64 %53 to %"class.v8::Value"*
  br label %58

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %27, %"class.WTF::Vector.1564"* dereferenceable(16) %56) #9
  br label %58

58:                                               ; preds = %50, %55
  %59 = phi %"class.v8::Value"* [ %57, %55 ], [ %54, %50 ]
  %60 = icmp eq %"class.v8::Value"* %59, null
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = load i64*, i64** %5, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 3
  %64 = bitcast %"class.v8::Value"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  %66 = load i8, i8* %46, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %11, i32 2698, %"class.WTF::Vector.1564"* dereferenceable(16) %69) #9
  br label %75

70:                                               ; preds = %61
  %71 = bitcast %"class.blink::IdentifiableToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %72) #9
  call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* nonnull %3) #9
  %73 = call i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %3) #9
  %74 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %2, i64 0, i32 0
  store i64 %73, i64* %74, align 8
  call void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKNS_17IdentifiableTokenE(%"class.blink::ExecutionContext"* %11, i32 2698, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %75

75:                                               ; preds = %58, %70, %68
  %76 = load i8, i8* %46, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %118, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.WTF::Vector.1564", %"class.WTF::Vector.1564"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** %80, align 8
  %82 = icmp eq %"class.WTF::String"* %81, null
  br i1 %82, label %117, label %83, !prof !4

83:                                               ; preds = %78
  %84 = bitcast %"class.WTF::String"* %81 to i8*
  %85 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %115, label %88, !prof !5

88:                                               ; preds = %83
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %89
  br label %91

91:                                               ; preds = %109, %88
  %92 = phi %"class.WTF::String"* [ %110, %109 ], [ %81, %88 ]
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #9
  br label %109

109:                                              ; preds = %108, %105, %91
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 1
  %111 = icmp eq %"class.WTF::String"* %110, %90
  br i1 %111, label %112, label %91

112:                                              ; preds = %109
  store i32 0, i32* %85, align 4
  %113 = bitcast %"class.WTF::Vector.1564"* %79 to i8**
  %114 = load i8*, i8** %113, align 8
  br label %115

115:                                              ; preds = %112, %83
  %116 = phi i8* [ %114, %112 ], [ %84, %83 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %116) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %80, align 8
  br label %117

117:                                              ; preds = %115, %78
  store i8 0, i8* %46, align 8
  br label %118

118:                                              ; preds = %75, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetTexParameterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.369, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %148

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %65
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #9
  br i1 %82, label %83, label %86, !prof !4

83:                                               ; preds = %80
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #9
  br label %95

86:                                               ; preds = %80
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %91, !prof !4

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #9
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %93 = load i32, i32* %18, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %148

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = load i32, i32* %21, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = load i64*, i64** %5, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %95
  %106 = load i64*, i64** %45, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = bitcast i64* %107 to %"class.v8::Value"*
  br label %109

109:                                              ; preds = %99, %105
  %110 = phi %"class.v8::Value"* [ %104, %99 ], [ %108, %105 ]
  %111 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %110) #9
  br i1 %111, label %112, label %115, !prof !4

112:                                              ; preds = %109
  %113 = bitcast %"class.v8::Value"* %110 to %"class.v8::Uint32"*
  %114 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %113) #9
  br label %122

115:                                              ; preds = %109
  %116 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %110) #9
  br i1 %116, label %117, label %120, !prof !4

117:                                              ; preds = %115
  %118 = bitcast %"class.v8::Value"* %110 to %"class.v8::Int32"*
  %119 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %118) #9
  br label %122

120:                                              ; preds = %115
  %121 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %110, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %122

122:                                              ; preds = %112, %117, %120
  %123 = phi i32 [ %114, %112 ], [ %119, %117 ], [ %121, %120 ]
  %124 = load i32, i32* %18, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %148

126:                                              ; preds = %122
  %127 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #9
  %128 = bitcast i8* %66 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15getTexParameterEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %128, %"class.blink::ScriptState"* %68, i32 %96, i32 %123) #9
  %129 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %130 = load i64*, i64** %5, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 3
  %132 = icmp eq %"class.v8::Value"* %129, null
  %133 = bitcast %"class.v8::Value"* %129 to i64*
  %134 = getelementptr inbounds i64, i64* %130, i64 2
  %135 = select i1 %132, i64* %134, i64* %133, !prof !5
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %131, align 8
  %137 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %138 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %137, align 8
  %139 = icmp eq %"class.blink::DOMWrapperWorld"* %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %138, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %141) #9
  %142 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %138, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %138) #9
  %146 = bitcast %"class.blink::DOMWrapperWorld"* %138 to i8*
  call void @free(i8* %146) #9
  br label %147

147:                                              ; preds = %126, %140, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #9
  br label %148

148:                                              ; preds = %122, %91, %147, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %148
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #9
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #9
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #9
  br label %161

161:                                              ; preds = %158, %152, %148
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27GetUniformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.370, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %181

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %65
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %83 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to %"class.blink::V8PerIsolateData"**
  %86 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %85, align 8
  %87 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %86, %"struct.blink::WrapperTypeInfo"* %82, %"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %110

88:                                               ; preds = %80
  %89 = bitcast %"class.v8::Value"* %81 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %90, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  switch i16 %99, label %104 [
    i16 1057, label %100
    i16 1056, label %100
    i16 1040, label %100
  ]

100:                                              ; preds = %88, %88, %88
  %101 = add i64 %90, 19
  %102 = inttoptr i64 %101 to i8**
  %103 = load i8*, i8** %102, align 1
  br label %107

104:                                              ; preds = %88
  %105 = bitcast %"class.v8::Value"* %81 to %"class.v8::Object"*
  %106 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %105, i32 1) #9
  br label %107

107:                                              ; preds = %100, %104
  %108 = phi i8* [ %103, %100 ], [ %106, %104 ]
  %109 = bitcast i8* %108 to %"class.blink::WebGLProgram"*
  br label %113

110:                                              ; preds = %80
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %111 = load i32, i32* %18, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %181

113:                                              ; preds = %107, %110
  %114 = phi %"class.blink::WebGLProgram"* [ %109, %107 ], [ null, %110 ]
  %115 = load i32, i32* %21, align 8
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  %118 = load i64*, i64** %5, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %113
  %124 = load i64*, i64** %45, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  %129 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %130 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %85, align 8
  %131 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %130, %"struct.blink::WrapperTypeInfo"* %129, %"class.v8::Value"* %128) #9
  br i1 %131, label %132, label %154

132:                                              ; preds = %127
  %133 = bitcast %"class.v8::Value"* %128 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, -1
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = and i64 %134, -4294967296
  %139 = zext i32 %137 to i64
  %140 = or i64 %138, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i16*
  %143 = load i16, i16* %142, align 2
  switch i16 %143, label %148 [
    i16 1057, label %144
    i16 1056, label %144
    i16 1040, label %144
  ]

144:                                              ; preds = %132, %132, %132
  %145 = add i64 %134, 19
  %146 = inttoptr i64 %145 to i8**
  %147 = load i8*, i8** %146, align 1
  br label %151

148:                                              ; preds = %132
  %149 = bitcast %"class.v8::Value"* %128 to %"class.v8::Object"*
  %150 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %149, i32 1) #9
  br label %151

151:                                              ; preds = %148, %144
  %152 = phi i8* [ %147, %144 ], [ %150, %148 ]
  %153 = bitcast i8* %152 to %"class.blink::WebGLUniformLocation"*
  br label %155

154:                                              ; preds = %127
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %129, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %155

155:                                              ; preds = %151, %154
  %156 = phi %"class.blink::WebGLUniformLocation"* [ %153, %151 ], [ null, %154 ]
  %157 = load i32, i32* %18, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %181

159:                                              ; preds = %155
  %160 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #9
  %161 = bitcast i8* %66 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10getUniformEPNS_11ScriptStateEPNS_12WebGLProgramEPKNS_20WebGLUniformLocationE(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %161, %"class.blink::ScriptState"* %68, %"class.blink::WebGLProgram"* %114, %"class.blink::WebGLUniformLocation"* %156) #9
  %162 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %163 = load i64*, i64** %5, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 3
  %165 = icmp eq %"class.v8::Value"* %162, null
  %166 = bitcast %"class.v8::Value"* %162 to i64*
  %167 = getelementptr inbounds i64, i64* %163, i64 2
  %168 = select i1 %165, i64* %167, i64* %166, !prof !5
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %164, align 8
  %170 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %171 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %170, align 8
  %172 = icmp eq %"class.blink::DOMWrapperWorld"* %171, null
  br i1 %172, label %180, label %173

173:                                              ; preds = %159
  %174 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %171, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %174) #9
  %175 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %171, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %171) #9
  %179 = bitcast %"class.blink::DOMWrapperWorld"* %171 to i8*
  call void @free(i8* %179) #9
  br label %180

180:                                              ; preds = %159, %173, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #9
  br label %181

181:                                              ; preds = %155, %110, %180, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %182 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %183 = load i64*, i64** %182, align 8
  %184 = icmp eq i64* %183, null
  br i1 %184, label %194, label %185

185:                                              ; preds = %181
  %186 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %187 = bitcast %"class.v8::Isolate"* %186 to %"class.v8::internal::Isolate"*
  %188 = load i64, i64* %183, align 8
  %189 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %187, i64 %188) #9
  %190 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %186) #9
  br i1 %190, label %194, label %191

191:                                              ; preds = %185
  %192 = bitcast i64* %189 to %"class.v8::Value"*
  %193 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %186, %"class.v8::Value"* %192) #9
  br label %194

194:                                              ; preds = %191, %185, %181
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #9
  br label %210

210:                                              ; preds = %194, %206, %209
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context35GetUniformLocationOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.371, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !5

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %236

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %74

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %78

74:                                               ; preds = %59, %63
  %75 = phi i8* [ %62, %59 ], [ %65, %63 ]
  %76 = bitcast i64** %46 to %"class.v8::Value"**
  %77 = load %"class.v8::Value"*, %"class.v8::Value"** %76, align 8
  br label %78

78:                                               ; preds = %68, %74
  %79 = phi i8* [ %65, %68 ], [ %75, %74 ]
  %80 = phi %"class.v8::Value"* [ %73, %68 ], [ %77, %74 ]
  %81 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %82 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to %"class.blink::V8PerIsolateData"**
  %85 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %84, align 8
  %86 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %85, %"struct.blink::WrapperTypeInfo"* %81, %"class.v8::Value"* %80) #9
  br i1 %86, label %87, label %109

87:                                               ; preds = %78
  %88 = bitcast %"class.v8::Value"* %80 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i64 %89, -4294967296
  %94 = zext i32 %92 to i64
  %95 = or i64 %93, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load i16, i16* %97, align 2
  switch i16 %98, label %103 [
    i16 1057, label %99
    i16 1056, label %99
    i16 1040, label %99
  ]

99:                                               ; preds = %87, %87, %87
  %100 = add i64 %89, 19
  %101 = inttoptr i64 %100 to i8**
  %102 = load i8*, i8** %101, align 1
  br label %106

103:                                              ; preds = %87
  %104 = bitcast %"class.v8::Value"* %80 to %"class.v8::Object"*
  %105 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %104, i32 1) #9
  br label %106

106:                                              ; preds = %99, %103
  %107 = phi i8* [ %102, %99 ], [ %105, %103 ]
  %108 = bitcast i8* %107 to %"class.blink::WebGLProgram"*
  br label %112

109:                                              ; preds = %78
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %110 = load i32, i32* %19, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %236

112:                                              ; preds = %106, %109
  %113 = phi %"class.blink::WebGLProgram"* [ %108, %106 ], [ null, %109 ]
  %114 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %114) #9
  %115 = load i32, i32* %22, align 8
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %123, label %117

117:                                              ; preds = %112
  %118 = load i64*, i64** %6, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %112
  %124 = load i64*, i64** %46, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %128, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %129 = load i32, i32* %19, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %213

131:                                              ; preds = %127
  %132 = bitcast i8* %79 to %"class.blink::WebGLRenderingContextBase"*
  %133 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #9
  %134 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %135 = load %"class.v8::String"*, %"class.v8::String"** %134, align 8
  %136 = icmp eq %"class.v8::String"* %135, null
  br i1 %136, label %139, label %137, !prof !5

137:                                              ; preds = %131
  %138 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %135, i32 0) #9
  br label %160

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %160, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %160

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #9
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !5

157:                                              ; preds = %148
  call void @llvm.trap() #9
  unreachable

158:                                              ; preds = %148
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %149, align 4
  br label %160

160:                                              ; preds = %137, %139, %143, %158
  %161 = phi %"class.WTF::StringImpl"* [ %138, %137 ], [ null, %139 ], [ %141, %143 ], [ %141, %158 ]
  %162 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %162, align 8
  %163 = call %"class.blink::WebGLUniformLocation"* @_ZN5blink25WebGLRenderingContextBase18getUniformLocationEPNS_12WebGLProgramERKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"* %132, %"class.blink::WebGLProgram"* %113, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #9
  br label %179

179:                                              ; preds = %160, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #9
  %180 = getelementptr inbounds %"class.blink::WebGLUniformLocation", %"class.blink::WebGLUniformLocation"* %163, i64 0, i32 0
  %181 = icmp eq %"class.blink::WebGLUniformLocation"* %163, null
  %182 = load i64*, i64** %6, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 3
  br i1 %181, label %184, label %190, !prof !5

184:                                              ; preds = %179
  %185 = getelementptr inbounds i64, i64* %182, i64 1
  %186 = load i64, i64* %185, align 8
  %187 = add i64 %186, 176
  %188 = inttoptr i64 %187 to i64*
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %183, align 8
  br label %213

190:                                              ; preds = %179
  %191 = bitcast i8* %79 to %"class.blink::ScriptWrappable"*
  %192 = load i64*, i64** %46, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 -1
  %194 = bitcast i64* %193 to %"class.v8::Object"*
  %195 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %183, %"class.blink::ScriptWrappable"* nonnull %180, %"class.v8::Object"* %194, %"class.blink::ScriptWrappable"* %191) #9
  br i1 %195, label %213, label %196

196:                                              ; preds = %190
  %197 = load i64*, i64** %46, align 8
  %198 = getelementptr inbounds i64, i64* %197, i64 -1
  %199 = bitcast i64* %198 to %"class.v8::Object"*
  %200 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %199) #9
  %201 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %200) #9
  %202 = bitcast %"class.blink::WebGLUniformLocation"* %163 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %203 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %202, align 8
  %204 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %203, i64 7
  %205 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %204, align 8
  %206 = call %"class.v8::Value"* %205(%"class.blink::ScriptWrappable"* nonnull %180, %"class.blink::ScriptState"* %201) #9
  %207 = icmp eq %"class.v8::Value"* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %196
  %209 = load i64*, i64** %6, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 3
  %211 = bitcast %"class.v8::Value"* %206 to i64*
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %210, align 8
  br label %213

213:                                              ; preds = %127, %208, %196, %190, %184
  %214 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  store i8* null, i8** %214, align 8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %218, label %217

217:                                              ; preds = %213
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %215) #9
  br label %218

218:                                              ; preds = %217, %213
  %219 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #9
  br label %235

235:                                              ; preds = %218, %231, %234
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %114) #9
  br label %236

236:                                              ; preds = %109, %235, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %237 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %238 = load i64*, i64** %237, align 8
  %239 = icmp eq i64* %238, null
  br i1 %239, label %249, label %240

240:                                              ; preds = %236
  %241 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %242 = bitcast %"class.v8::Isolate"* %241 to %"class.v8::internal::Isolate"*
  %243 = load i64, i64* %238, align 8
  %244 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %242, i64 %243) #9
  %245 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %241) #9
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = bitcast i64* %244 to %"class.v8::Value"*
  %248 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %241, %"class.v8::Value"* %247) #9
  br label %249

249:                                              ; preds = %246, %240, %236
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #9
  br label %265

265:                                              ; preds = %249, %261, %264
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32GetVertexAttribOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.372, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !5

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %148

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = bitcast i64* %47 to %"class.v8::Object"*
  %49 = load i64, i64* %47, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %44, %44, %44
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %65

63:                                               ; preds = %44
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #9
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i8* [ %62, %59 ], [ %64, %63 ]
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %48) #9
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = load i32, i32* %21, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = load i64*, i64** %5, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %80

77:                                               ; preds = %65
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %71, %77
  %81 = phi %"class.v8::Value"* [ %76, %71 ], [ %79, %77 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #9
  br i1 %82, label %83, label %86, !prof !4

83:                                               ; preds = %80
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #9
  br label %95

86:                                               ; preds = %80
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #9
  br i1 %87, label %88, label %91, !prof !4

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #9
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %93 = load i32, i32* %18, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %148

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = load i32, i32* %21, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = load i64*, i64** %5, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %95
  %106 = load i64*, i64** %45, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = bitcast i64* %107 to %"class.v8::Value"*
  br label %109

109:                                              ; preds = %99, %105
  %110 = phi %"class.v8::Value"* [ %104, %99 ], [ %108, %105 ]
  %111 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %110) #9
  br i1 %111, label %112, label %115, !prof !4

112:                                              ; preds = %109
  %113 = bitcast %"class.v8::Value"* %110 to %"class.v8::Uint32"*
  %114 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %113) #9
  br label %122

115:                                              ; preds = %109
  %116 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %110) #9
  br i1 %116, label %117, label %120, !prof !4

117:                                              ; preds = %115
  %118 = bitcast %"class.v8::Value"* %110 to %"class.v8::Int32"*
  %119 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %118) #9
  br label %122

120:                                              ; preds = %115
  %121 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %110, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %122

122:                                              ; preds = %112, %117, %120
  %123 = phi i32 [ %114, %112 ], [ %119, %117 ], [ %121, %120 ]
  %124 = load i32, i32* %18, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %148

126:                                              ; preds = %122
  %127 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #9
  %128 = bitcast i8* %66 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15getVertexAttribEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %128, %"class.blink::ScriptState"* %68, i32 %96, i32 %123) #9
  %129 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %130 = load i64*, i64** %5, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 3
  %132 = icmp eq %"class.v8::Value"* %129, null
  %133 = bitcast %"class.v8::Value"* %129 to i64*
  %134 = getelementptr inbounds i64, i64* %130, i64 2
  %135 = select i1 %132, i64* %134, i64* %133, !prof !5
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %131, align 8
  %137 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %138 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %137, align 8
  %139 = icmp eq %"class.blink::DOMWrapperWorld"* %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %138, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %141) #9
  %142 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %138, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %138) #9
  %146 = bitcast %"class.blink::DOMWrapperWorld"* %138 to i8*
  call void @free(i8* %146) #9
  br label %147

147:                                              ; preds = %126, %140, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #9
  br label %148

148:                                              ; preds = %122, %91, %147, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %148
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #9
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #9
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #9
  br label %161

161:                                              ; preds = %158, %152, %148
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context38GetVertexAttribOffsetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.373, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %138

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %138

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %138

123:                                              ; preds = %119
  %124 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %125 = call i64 @_ZN5blink25WebGLRenderingContextBase21getVertexAttribOffsetEjj(%"class.blink::WebGLRenderingContextBase"* %124, i32 %93, i32 %120) #9
  %126 = load i64*, i64** %4, align 8
  %127 = getelementptr inbounds i64, i64* %126, i64 3
  %128 = sitofp i64 %125 to double
  %129 = getelementptr inbounds i64, i64* %126, i64 1
  %130 = bitcast i64* %129 to %"class.v8::Isolate"**
  %131 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %130, align 8
  %132 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %131, double %128) #9
  %133 = icmp eq %"class.v8::Number"* %132, null
  %134 = bitcast %"class.v8::Number"* %132 to i64*
  %135 = getelementptr inbounds i64, i64* %126, i64 2
  %136 = select i1 %133, i64* %135, i64* %134, !prof !5
  %137 = load i64, i64* %136, align 8
  store i64 %137, i64* %127, align 8
  br label %138

138:                                              ; preds = %119, %88, %123, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %139 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %140 = load i64*, i64** %139, align 8
  %141 = icmp eq i64* %140, null
  br i1 %141, label %151, label %142

142:                                              ; preds = %138
  %143 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %144 = bitcast %"class.v8::Isolate"* %143 to %"class.v8::internal::Isolate"*
  %145 = load i64, i64* %140, align 8
  %146 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %144, i64 %145) #9
  %147 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %143) #9
  br i1 %147, label %151, label %148

148:                                              ; preds = %142
  %149 = bitcast i64* %146 to %"class.v8::Value"*
  %150 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %143, %"class.v8::Value"* %149) #9
  br label %151

151:                                              ; preds = %148, %142, %138
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %151, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context21HintOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.374, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %125

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %125

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase4hintEjj(%"class.blink::WebGLRenderingContextBase"* %124, i32 %93, i32 %120) #9
  br label %125

125:                                              ; preds = %119, %88, %123, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #9
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #9
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #9
  br label %138

138:                                              ; preds = %135, %129, %125
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #9
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25IsBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.375, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %142

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLBuffer18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLBuffer"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLBuffer"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %132 = call zeroext i8 @_ZN5blink25WebGLRenderingContextBase8isBufferEPNS_11WebGLBufferE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLBuffer"* %130) #9
  %133 = icmp eq i8 %132, 0
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 3
  %136 = getelementptr inbounds i64, i64* %134, i64 1
  %137 = load i64, i64* %136, align 8
  %138 = select i1 %133, i64 192, i64 184
  %139 = add i64 %137, %138
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %135, align 8
  br label %142

142:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %142
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30IsContextLostOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  %25 = tail call zeroext i1 @_ZNK5blink25WebGLRenderingContextBase13isContextLostEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = select i1 %25, i64 184, i64 192
  %32 = add i64 %30, %31
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26IsEnabledOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.377, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %105

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %105

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %95 = call zeroext i8 @_ZN5blink25WebGLRenderingContextBase9isEnabledEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  %96 = icmp eq i8 %95, 0
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 3
  %99 = getelementptr inbounds i64, i64* %97, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = select i1 %96, i64 192, i64 184
  %102 = add i64 %100, %101
  %103 = inttoptr i64 %102 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %98, align 8
  br label %105

105:                                              ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %106 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = icmp eq i64* %107, null
  br i1 %108, label %118, label %109

109:                                              ; preds = %105
  %110 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %111 = bitcast %"class.v8::Isolate"* %110 to %"class.v8::internal::Isolate"*
  %112 = load i64, i64* %107, align 8
  %113 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %111, i64 %112) #9
  %114 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %110) #9
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast i64* %113 to %"class.v8::Value"*
  %117 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %110, %"class.v8::Value"* %116) #9
  br label %118

118:                                              ; preds = %115, %109, %105
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #9
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30IsFramebufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.378, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %142

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16WebGLFramebuffer18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLFramebuffer"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLFramebuffer"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %132 = call zeroext i8 @_ZN5blink25WebGLRenderingContextBase13isFramebufferEPNS_16WebGLFramebufferE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLFramebuffer"* %130) #9
  %133 = icmp eq i8 %132, 0
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 3
  %136 = getelementptr inbounds i64, i64* %134, i64 1
  %137 = load i64, i64* %136, align 8
  %138 = select i1 %133, i64 192, i64 184
  %139 = add i64 %137, %138
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %135, align 8
  br label %142

142:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %142
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26IsProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.379, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %142

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLProgram"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %132 = call zeroext i8 @_ZN5blink25WebGLRenderingContextBase9isProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLProgram"* %130) #9
  %133 = icmp eq i8 %132, 0
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 3
  %136 = getelementptr inbounds i64, i64* %134, i64 1
  %137 = load i64, i64* %136, align 8
  %138 = select i1 %133, i64 192, i64 184
  %139 = add i64 %137, %138
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %135, align 8
  br label %142

142:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %142
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31IsRenderbufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.380, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %142

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17WebGLRenderbuffer18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLRenderbuffer"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLRenderbuffer"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %132 = call zeroext i8 @_ZN5blink25WebGLRenderingContextBase14isRenderbufferEPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLRenderbuffer"* %130) #9
  %133 = icmp eq i8 %132, 0
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 3
  %136 = getelementptr inbounds i64, i64* %134, i64 1
  %137 = load i64, i64* %136, align 8
  %138 = select i1 %133, i64 192, i64 184
  %139 = add i64 %137, %138
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %135, align 8
  br label %142

142:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %142
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25IsShaderOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.381, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %142

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLShader"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLShader"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %132 = call zeroext i8 @_ZN5blink25WebGLRenderingContextBase8isShaderEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLShader"* %130) #9
  %133 = icmp eq i8 %132, 0
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 3
  %136 = getelementptr inbounds i64, i64* %134, i64 1
  %137 = load i64, i64* %136, align 8
  %138 = select i1 %133, i64 192, i64 184
  %139 = add i64 %137, %138
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %135, align 8
  br label %142

142:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %142
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26IsTextureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.382, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %142

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLTexture18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLTexture"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLTexture"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  %132 = call zeroext i8 @_ZN5blink25WebGLRenderingContextBase9isTextureEPNS_12WebGLTextureE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLTexture"* %130) #9
  %133 = icmp eq i8 %132, 0
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 3
  %136 = getelementptr inbounds i64, i64* %134, i64 1
  %137 = load i64, i64* %136, align 8
  %138 = select i1 %133, i64 192, i64 184
  %139 = add i64 %137, %138
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %135, align 8
  br label %142

142:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %142
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26LineWidthOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.383, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %97

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %97

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = fcmp ogt double %88, 0x47EFFFFFE0000000
  br i1 %89, label %94, label %90, !prof !5

90:                                               ; preds = %87
  %91 = fcmp olt double %88, 0xC7EFFFFFE0000000
  br i1 %91, label %94, label %92, !prof !5

92:                                               ; preds = %90
  %93 = fptrunc double %88 to float
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi float [ 0xFFF0000000000000, %90 ], [ 0x7FF0000000000000, %87 ], [ %93, %92 ]
  %96 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9lineWidthEf(%"class.blink::WebGLRenderingContextBase"* %96, float %95) #9
  br label %97

97:                                               ; preds = %83, %94, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %98 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %99, null
  br i1 %100, label %110, label %101

101:                                              ; preds = %97
  %102 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %103 = bitcast %"class.v8::Isolate"* %102 to %"class.v8::internal::Isolate"*
  %104 = load i64, i64* %99, align 8
  %105 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %103, i64 %104) #9
  %106 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %102) #9
  br i1 %106, label %110, label %107

107:                                              ; preds = %101
  %108 = bitcast i64* %105 to %"class.v8::Value"*
  %109 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %102, %"class.v8::Value"* %108) #9
  br label %110

110:                                              ; preds = %107, %101, %97
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #9
  br label %126

126:                                              ; preds = %110, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28LinkProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.384, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %113

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLProgram"* [ %106, %104 ], [ null, %107 ]
  %112 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase11linkProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"* %112, %"class.blink::WebGLProgram"* %111) #9
  br label %113

113:                                              ; preds = %107, %110, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %115, null
  br i1 %116, label %126, label %117

117:                                              ; preds = %113
  %118 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %119 = bitcast %"class.v8::Isolate"* %118 to %"class.v8::internal::Isolate"*
  %120 = load i64, i64* %115, align 8
  %121 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %119, i64 %120) #9
  %122 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %118) #9
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = bitcast i64* %121 to %"class.v8::Value"*
  %125 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %118, %"class.v8::Value"* %124) #9
  br label %126

126:                                              ; preds = %123, %117, %113
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #9
  br label %142

142:                                              ; preds = %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28PixelStoreiOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.385, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %120

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %120

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %111 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i32 [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase11pixelStoreiEji(%"class.blink::WebGLRenderingContextBase"* %119, i32 %93, i32 %115) #9
  br label %120

120:                                              ; preds = %114, %88, %118, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %121 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %122 = load i64*, i64** %121, align 8
  %123 = icmp eq i64* %122, null
  br i1 %123, label %133, label %124

124:                                              ; preds = %120
  %125 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %126 = bitcast %"class.v8::Isolate"* %125 to %"class.v8::internal::Isolate"*
  %127 = load i64, i64* %122, align 8
  %128 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %126, i64 %127) #9
  %129 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %125) #9
  br i1 %129, label %133, label %130

130:                                              ; preds = %124
  %131 = bitcast i64* %128 to %"class.v8::Value"*
  %132 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %125, %"class.v8::Value"* %131) #9
  br label %133

133:                                              ; preds = %130, %124, %120
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #9
  br label %149

149:                                              ; preds = %133, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30PolygonOffsetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.386, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %129

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %129

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = fcmp ogt double %88, 0x47EFFFFFE0000000
  br i1 %89, label %94, label %90, !prof !5

90:                                               ; preds = %87
  %91 = fcmp olt double %88, 0xC7EFFFFFE0000000
  br i1 %91, label %94, label %92, !prof !5

92:                                               ; preds = %90
  %93 = fptrunc double %88 to float
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi float [ 0xFFF0000000000000, %90 ], [ 0x7FF0000000000000, %87 ], [ %93, %92 ]
  %96 = load i32, i32* %20, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load i64*, i64** %4, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %94
  %105 = load i64*, i64** %44, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %109) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::Number"*
  %113 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %112) #9
  br label %116

114:                                              ; preds = %108
  %115 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %109, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %116

116:                                              ; preds = %114, %111
  %117 = phi double [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %17, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %129

120:                                              ; preds = %116
  %121 = fcmp ogt double %117, 0x47EFFFFFE0000000
  br i1 %121, label %126, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fcmp olt double %117, 0xC7EFFFFFE0000000
  br i1 %123, label %126, label %124, !prof !5

124:                                              ; preds = %122
  %125 = fptrunc double %117 to float
  br label %126

126:                                              ; preds = %120, %122, %124
  %127 = phi float [ 0xFFF0000000000000, %122 ], [ 0x7FF0000000000000, %120 ], [ %125, %124 ]
  %128 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13polygonOffsetEff(%"class.blink::WebGLRenderingContextBase"* %128, float %95, float %127) #9
  br label %129

129:                                              ; preds = %116, %83, %126, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %131, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #9
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #9
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #9
  br label %142

142:                                              ; preds = %139, %133, %129
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #9
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27ReadPixelsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::MaybeShared", align 8
  %5 = alloca %"class.blink::MaybeShared", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.387, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 7
  br i1 %24, label %25, label %45, !prof !5

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %249

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %74

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %78

74:                                               ; preds = %59, %63
  %75 = phi i8* [ %62, %59 ], [ %65, %63 ]
  %76 = bitcast i64** %46 to %"class.v8::Value"**
  %77 = load %"class.v8::Value"*, %"class.v8::Value"** %76, align 8
  br label %78

78:                                               ; preds = %68, %74
  %79 = phi i8* [ %65, %68 ], [ %75, %74 ]
  %80 = phi %"class.v8::Value"* [ %73, %68 ], [ %77, %74 ]
  %81 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %80) #9
  br i1 %81, label %82, label %85, !prof !4

82:                                               ; preds = %78
  %83 = bitcast %"class.v8::Value"* %80 to %"class.v8::Int32"*
  %84 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %83) #9
  br label %89

85:                                               ; preds = %78
  %86 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %80, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %87 = load i32, i32* %19, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %249

89:                                               ; preds = %82, %85
  %90 = phi i32 [ %84, %82 ], [ %86, %85 ]
  %91 = load i32, i32* %22, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load i64*, i64** %6, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %89
  %100 = load i64*, i64** %46, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %93, %99
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %104) #9
  br i1 %105, label %106, label %109, !prof !4

106:                                              ; preds = %103
  %107 = bitcast %"class.v8::Value"* %104 to %"class.v8::Int32"*
  %108 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %107) #9
  br label %111

109:                                              ; preds = %103
  %110 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %104, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %111

111:                                              ; preds = %106, %109
  %112 = phi i32 [ %108, %106 ], [ %110, %109 ]
  %113 = load i32, i32* %19, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %249

115:                                              ; preds = %111
  %116 = load i32, i32* %22, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %6, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %46, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %118, %124
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %129) #9
  br i1 %130, label %131, label %134, !prof !4

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Int32"*
  %133 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %132) #9
  br label %136

134:                                              ; preds = %128
  %135 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %129, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %136

136:                                              ; preds = %131, %134
  %137 = phi i32 [ %133, %131 ], [ %135, %134 ]
  %138 = load i32, i32* %19, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %249

140:                                              ; preds = %136
  %141 = load i32, i32* %22, align 8
  %142 = icmp sgt i32 %141, 3
  br i1 %142, label %149, label %143

143:                                              ; preds = %140
  %144 = load i64*, i64** %6, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 160
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  br label %153

149:                                              ; preds = %140
  %150 = load i64*, i64** %46, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 3
  %152 = bitcast i64* %151 to %"class.v8::Value"*
  br label %153

153:                                              ; preds = %143, %149
  %154 = phi %"class.v8::Value"* [ %148, %143 ], [ %152, %149 ]
  %155 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %154) #9
  br i1 %155, label %156, label %159, !prof !4

156:                                              ; preds = %153
  %157 = bitcast %"class.v8::Value"* %154 to %"class.v8::Int32"*
  %158 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %157) #9
  br label %161

159:                                              ; preds = %153
  %160 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %154, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %161

161:                                              ; preds = %156, %159
  %162 = phi i32 [ %158, %156 ], [ %160, %159 ]
  %163 = load i32, i32* %19, align 8
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %249

165:                                              ; preds = %161
  %166 = load i32, i32* %22, align 8
  %167 = icmp sgt i32 %166, 4
  br i1 %167, label %174, label %168

168:                                              ; preds = %165
  %169 = load i64*, i64** %6, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 1
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %171, 160
  %173 = inttoptr i64 %172 to %"class.v8::Value"*
  br label %178

174:                                              ; preds = %165
  %175 = load i64*, i64** %46, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 4
  %177 = bitcast i64* %176 to %"class.v8::Value"*
  br label %178

178:                                              ; preds = %168, %174
  %179 = phi %"class.v8::Value"* [ %173, %168 ], [ %177, %174 ]
  %180 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %179) #9
  br i1 %180, label %181, label %184, !prof !4

181:                                              ; preds = %178
  %182 = bitcast %"class.v8::Value"* %179 to %"class.v8::Uint32"*
  %183 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %182) #9
  br label %191

184:                                              ; preds = %178
  %185 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %179) #9
  br i1 %185, label %186, label %189, !prof !4

186:                                              ; preds = %184
  %187 = bitcast %"class.v8::Value"* %179 to %"class.v8::Int32"*
  %188 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %187) #9
  br label %191

189:                                              ; preds = %184
  %190 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %179, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %191

191:                                              ; preds = %181, %186, %189
  %192 = phi i32 [ %183, %181 ], [ %188, %186 ], [ %190, %189 ]
  %193 = load i32, i32* %19, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %249

195:                                              ; preds = %191
  %196 = load i32, i32* %22, align 8
  %197 = icmp sgt i32 %196, 5
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = load i64*, i64** %6, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 1
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 160
  %203 = inttoptr i64 %202 to %"class.v8::Value"*
  br label %208

204:                                              ; preds = %195
  %205 = load i64*, i64** %46, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 5
  %207 = bitcast i64* %206 to %"class.v8::Value"*
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi %"class.v8::Value"* [ %203, %198 ], [ %207, %204 ]
  %210 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %209) #9
  br i1 %210, label %211, label %214, !prof !4

211:                                              ; preds = %208
  %212 = bitcast %"class.v8::Value"* %209 to %"class.v8::Uint32"*
  %213 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %212) #9
  br label %221

214:                                              ; preds = %208
  %215 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %209) #9
  br i1 %215, label %216, label %219, !prof !4

216:                                              ; preds = %214
  %217 = bitcast %"class.v8::Value"* %209 to %"class.v8::Int32"*
  %218 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %217) #9
  br label %221

219:                                              ; preds = %214
  %220 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %209, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %221

221:                                              ; preds = %211, %216, %219
  %222 = phi i32 [ %213, %211 ], [ %218, %216 ], [ %220, %219 ]
  %223 = load i32, i32* %19, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %249

225:                                              ; preds = %221
  %226 = bitcast %"class.blink::MaybeShared"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #9
  %227 = load i32, i32* %22, align 8
  %228 = icmp sgt i32 %227, 6
  br i1 %228, label %235, label %229

229:                                              ; preds = %225
  %230 = load i64*, i64** %6, align 8
  %231 = getelementptr inbounds i64, i64* %230, i64 1
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %232, 160
  %234 = inttoptr i64 %233 to %"class.v8::Value"*
  br label %239

235:                                              ; preds = %225
  %236 = load i64*, i64** %46, align 8
  %237 = getelementptr inbounds i64, i64* %236, i64 6
  %238 = bitcast i64* %237 to %"class.v8::Value"*
  br label %239

239:                                              ; preds = %229, %235
  %240 = phi %"class.v8::Value"* [ %234, %229 ], [ %238, %235 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_18DOMArrayBufferViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* nonnull sret %4, %"class.v8::Isolate"* %10, i32 6, %"class.v8::Value"* %240, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %241 = load i32, i32* %19, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %248

243:                                              ; preds = %239
  %244 = bitcast i8* %79 to %"class.blink::WebGLRenderingContextBase"*
  %245 = bitcast %"class.blink::MaybeShared"* %4 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.blink::MaybeShared"* %5 to i64*
  store i64 %246, i64* %247, align 8
  call void @_ZN5blink25WebGLRenderingContextBase10readPixelsEiiiijjNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"* %244, i32 %90, i32 %112, i32 %137, i32 %162, i32 %192, i32 %222, %"class.blink::MaybeShared"* nonnull %5) #9
  br label %248

248:                                              ; preds = %239, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #9
  br label %249

249:                                              ; preds = %221, %191, %161, %136, %111, %85, %248, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %250 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %251 = load i64*, i64** %250, align 8
  %252 = icmp eq i64* %251, null
  br i1 %252, label %262, label %253

253:                                              ; preds = %249
  %254 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %255 = bitcast %"class.v8::Isolate"* %254 to %"class.v8::internal::Isolate"*
  %256 = load i64, i64* %251, align 8
  %257 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %255, i64 %256) #9
  %258 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %254) #9
  br i1 %258, label %262, label %259

259:                                              ; preds = %253
  %260 = bitcast i64* %257 to %"class.v8::Value"*
  %261 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %254, %"class.v8::Value"* %260) #9
  br label %262

262:                                              ; preds = %259, %253, %249
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #9
  br label %278

278:                                              ; preds = %262, %274, %277
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36RenderbufferStorageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.388, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %175

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %175

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %175

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %141 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %140) #9
  br label %144

142:                                              ; preds = %136
  %143 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %144

144:                                              ; preds = %139, %142
  %145 = phi i32 [ %141, %139 ], [ %143, %142 ]
  %146 = load i32, i32* %17, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %175

148:                                              ; preds = %144
  %149 = load i32, i32* %20, align 8
  %150 = icmp sgt i32 %149, 3
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = load i64*, i64** %4, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 1
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, 160
  %156 = inttoptr i64 %155 to %"class.v8::Value"*
  br label %161

157:                                              ; preds = %148
  %158 = load i64*, i64** %44, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 3
  %160 = bitcast i64* %159 to %"class.v8::Value"*
  br label %161

161:                                              ; preds = %151, %157
  %162 = phi %"class.v8::Value"* [ %156, %151 ], [ %160, %157 ]
  %163 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %162) #9
  br i1 %163, label %164, label %167, !prof !4

164:                                              ; preds = %161
  %165 = bitcast %"class.v8::Value"* %162 to %"class.v8::Int32"*
  %166 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %165) #9
  br label %169

167:                                              ; preds = %161
  %168 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %162, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %169

169:                                              ; preds = %164, %167
  %170 = phi i32 [ %166, %164 ], [ %168, %167 ]
  %171 = load i32, i32* %17, align 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  %174 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase19renderbufferStorageEjjii(%"class.blink::WebGLRenderingContextBase"* %174, i32 %93, i32 %120, i32 %145, i32 %170) #9
  br label %175

175:                                              ; preds = %169, %144, %119, %88, %173, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %176 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %177 = load i64*, i64** %176, align 8
  %178 = icmp eq i64* %177, null
  br i1 %178, label %188, label %179

179:                                              ; preds = %175
  %180 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %181 = bitcast %"class.v8::Isolate"* %180 to %"class.v8::internal::Isolate"*
  %182 = load i64, i64* %177, align 8
  %183 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %181, i64 %182) #9
  %184 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %180) #9
  br i1 %184, label %188, label %185

185:                                              ; preds = %179
  %186 = bitcast i64* %183 to %"class.v8::Value"*
  %187 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %180, %"class.v8::Value"* %186) #9
  br label %188

188:                                              ; preds = %185, %179, %175
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #9
  br label %204

204:                                              ; preds = %188, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31SampleCoverageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.389, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %123

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %123

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = fcmp ogt double %88, 0x47EFFFFFE0000000
  br i1 %89, label %94, label %90, !prof !5

90:                                               ; preds = %87
  %91 = fcmp olt double %88, 0xC7EFFFFFE0000000
  br i1 %91, label %94, label %92, !prof !5

92:                                               ; preds = %90
  %93 = fptrunc double %88 to float
  br label %94

94:                                               ; preds = %87, %90, %92
  %95 = phi float [ 0xFFF0000000000000, %90 ], [ 0x7FF0000000000000, %87 ], [ %93, %92 ]
  %96 = load i32, i32* %20, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load i64*, i64** %4, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %94
  %105 = load i64*, i64** %44, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %109) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %108
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::Boolean"*
  %113 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %112) #9
  br label %116

114:                                              ; preds = %108
  %115 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %109, %"class.v8::Isolate"* %8) #9
  br label %116

116:                                              ; preds = %111, %114
  %117 = phi i1 [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %17, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %116
  %121 = zext i1 %117 to i8
  %122 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase14sampleCoverageEfh(%"class.blink::WebGLRenderingContextBase"* %122, float %95, i8 zeroext %121) #9
  br label %123

123:                                              ; preds = %116, %83, %120, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %124 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %125 = load i64*, i64** %124, align 8
  %126 = icmp eq i64* %125, null
  br i1 %126, label %136, label %127

127:                                              ; preds = %123
  %128 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %129 = bitcast %"class.v8::Isolate"* %128 to %"class.v8::internal::Isolate"*
  %130 = load i64, i64* %125, align 8
  %131 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %129, i64 %130) #9
  %132 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %128) #9
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = bitcast i64* %131 to %"class.v8::Value"*
  %135 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %128, %"class.v8::Value"* %134) #9
  br label %136

136:                                              ; preds = %133, %127, %123
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #9
  br label %152

152:                                              ; preds = %136, %148, %151
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context24ScissorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.390, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %165

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %82 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %165

87:                                               ; preds = %80, %83
  %88 = phi i32 [ %82, %80 ], [ %84, %83 ]
  %89 = load i32, i32* %20, align 8
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 160
  %96 = inttoptr i64 %95 to %"class.v8::Value"*
  br label %101

97:                                               ; preds = %87
  %98 = load i64*, i64** %44, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = bitcast i64* %99 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi %"class.v8::Value"* [ %96, %91 ], [ %100, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %102) #9
  br i1 %103, label %104, label %107, !prof !4

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::Value"* %102 to %"class.v8::Int32"*
  %106 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %105) #9
  br label %109

107:                                              ; preds = %101
  %108 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %102, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi i32 [ %106, %104 ], [ %108, %107 ]
  %111 = load i32, i32* %17, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %165

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 8
  %115 = icmp sgt i32 %114, 2
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = load i64*, i64** %4, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %113
  %123 = load i64*, i64** %44, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 2
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %127) #9
  br i1 %128, label %129, label %132, !prof !4

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Int32"*
  %131 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %130) #9
  br label %134

132:                                              ; preds = %126
  %133 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %127, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi i32 [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %165

138:                                              ; preds = %134
  %139 = load i32, i32* %20, align 8
  %140 = icmp sgt i32 %139, 3
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 160
  %146 = inttoptr i64 %145 to %"class.v8::Value"*
  br label %151

147:                                              ; preds = %138
  %148 = load i64*, i64** %44, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = bitcast i64* %149 to %"class.v8::Value"*
  br label %151

151:                                              ; preds = %141, %147
  %152 = phi %"class.v8::Value"* [ %146, %141 ], [ %150, %147 ]
  %153 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %152) #9
  br i1 %153, label %154, label %157, !prof !4

154:                                              ; preds = %151
  %155 = bitcast %"class.v8::Value"* %152 to %"class.v8::Int32"*
  %156 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %155) #9
  br label %159

157:                                              ; preds = %151
  %158 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %152, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %159

159:                                              ; preds = %154, %157
  %160 = phi i32 [ %156, %154 ], [ %158, %157 ]
  %161 = load i32, i32* %17, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase7scissorEiiii(%"class.blink::WebGLRenderingContextBase"* %164, i32 %88, i32 %110, i32 %135, i32 %160) #9
  br label %165

165:                                              ; preds = %159, %134, %109, %83, %163, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %171 = bitcast %"class.v8::Isolate"* %170 to %"class.v8::internal::Isolate"*
  %172 = load i64, i64* %167, align 8
  %173 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %171, i64 %172) #9
  %174 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %170) #9
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = bitcast i64* %173 to %"class.v8::Value"*
  %177 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %170, %"class.v8::Value"* %176) #9
  br label %178

178:                                              ; preds = %175, %169, %165
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #9
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29ShaderSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.391, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !5

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %202

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to i8**
  %62 = load i8*, i8** %61, align 1
  br label %74

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %78

74:                                               ; preds = %59, %63
  %75 = phi i8* [ %62, %59 ], [ %65, %63 ]
  %76 = bitcast i64** %46 to %"class.v8::Value"**
  %77 = load %"class.v8::Value"*, %"class.v8::Value"** %76, align 8
  br label %78

78:                                               ; preds = %68, %74
  %79 = phi i8* [ %65, %68 ], [ %75, %74 ]
  %80 = phi %"class.v8::Value"* [ %73, %68 ], [ %77, %74 ]
  %81 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLShader18wrapper_type_info_E, align 8
  %82 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to %"class.blink::V8PerIsolateData"**
  %85 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %84, align 8
  %86 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %85, %"struct.blink::WrapperTypeInfo"* %81, %"class.v8::Value"* %80) #9
  br i1 %86, label %87, label %109

87:                                               ; preds = %78
  %88 = bitcast %"class.v8::Value"* %80 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i64 %89, -4294967296
  %94 = zext i32 %92 to i64
  %95 = or i64 %93, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load i16, i16* %97, align 2
  switch i16 %98, label %103 [
    i16 1057, label %99
    i16 1056, label %99
    i16 1040, label %99
  ]

99:                                               ; preds = %87, %87, %87
  %100 = add i64 %89, 19
  %101 = inttoptr i64 %100 to i8**
  %102 = load i8*, i8** %101, align 1
  br label %106

103:                                              ; preds = %87
  %104 = bitcast %"class.v8::Value"* %80 to %"class.v8::Object"*
  %105 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %104, i32 1) #9
  br label %106

106:                                              ; preds = %99, %103
  %107 = phi i8* [ %102, %99 ], [ %105, %103 ]
  %108 = bitcast i8* %107 to %"class.blink::WebGLShader"*
  br label %112

109:                                              ; preds = %78
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %110 = load i32, i32* %19, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %202

112:                                              ; preds = %106, %109
  %113 = phi %"class.blink::WebGLShader"* [ %108, %106 ], [ null, %109 ]
  %114 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %114) #9
  %115 = load i32, i32* %22, align 8
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %123, label %117

117:                                              ; preds = %112
  %118 = load i64*, i64** %6, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %112
  %124 = load i64*, i64** %46, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %128, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %129 = load i32, i32* %19, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %179

131:                                              ; preds = %127
  %132 = bitcast i8* %79 to %"class.blink::WebGLRenderingContextBase"*
  %133 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #9
  %134 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %135 = load %"class.v8::String"*, %"class.v8::String"** %134, align 8
  %136 = icmp eq %"class.v8::String"* %135, null
  br i1 %136, label %139, label %137, !prof !5

137:                                              ; preds = %131
  %138 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %135, i32 0) #9
  br label %160

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %160, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %160

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #9
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !5

157:                                              ; preds = %148
  call void @llvm.trap() #9
  unreachable

158:                                              ; preds = %148
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %149, align 4
  br label %160

160:                                              ; preds = %137, %139, %143, %158
  %161 = phi %"class.WTF::StringImpl"* [ %138, %137 ], [ null, %139 ], [ %141, %143 ], [ %141, %158 ]
  %162 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %162, align 8
  call void @_ZN5blink25WebGLRenderingContextBase12shaderSourceEPNS_11WebGLShaderERKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"* %132, %"class.blink::WebGLShader"* %113, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #9
  br label %178

178:                                              ; preds = %160, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #9
  br label %179

179:                                              ; preds = %127, %178
  %180 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  store i8* null, i8** %180, align 8
  %182 = icmp eq i8* %181, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %179
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %181) #9
  br label %184

184:                                              ; preds = %183, %179
  %185 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #9
  br label %201

201:                                              ; preds = %184, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %114) #9
  br label %202

202:                                              ; preds = %109, %201, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %203 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %204 = load i64*, i64** %203, align 8
  %205 = icmp eq i64* %204, null
  br i1 %205, label %215, label %206

206:                                              ; preds = %202
  %207 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %208 = bitcast %"class.v8::Isolate"* %207 to %"class.v8::internal::Isolate"*
  %209 = load i64, i64* %204, align 8
  %210 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %208, i64 %209) #9
  %211 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %207) #9
  br i1 %211, label %215, label %212

212:                                              ; preds = %206
  %213 = bitcast i64* %210 to %"class.v8::Value"*
  %214 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %207, %"class.v8::Value"* %213) #9
  br label %215

215:                                              ; preds = %212, %206, %202
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #9
  br label %231

231:                                              ; preds = %215, %227, %230
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28StencilFuncOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.392, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %150

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %150

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %111 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i32 [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %150

118:                                              ; preds = %114
  %119 = load i32, i32* %20, align 8
  %120 = icmp sgt i32 %119, 2
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %4, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %44, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 2
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %132) #9
  br i1 %133, label %134, label %137, !prof !4

134:                                              ; preds = %131
  %135 = bitcast %"class.v8::Value"* %132 to %"class.v8::Uint32"*
  %136 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %135) #9
  br label %144

137:                                              ; preds = %131
  %138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %132) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %137
  %140 = bitcast %"class.v8::Value"* %132 to %"class.v8::Int32"*
  %141 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %140) #9
  br label %144

142:                                              ; preds = %137
  %143 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %132, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %144

144:                                              ; preds = %134, %139, %142
  %145 = phi i32 [ %136, %134 ], [ %141, %139 ], [ %143, %142 ]
  %146 = load i32, i32* %17, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  %149 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase11stencilFuncEjij(%"class.blink::WebGLRenderingContextBase"* %149, i32 %93, i32 %115, i32 %145) #9
  br label %150

150:                                              ; preds = %144, %114, %88, %148, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %151 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %163, label %154

154:                                              ; preds = %150
  %155 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %156 = bitcast %"class.v8::Isolate"* %155 to %"class.v8::internal::Isolate"*
  %157 = load i64, i64* %152, align 8
  %158 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %156, i64 %157) #9
  %159 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %155) #9
  br i1 %159, label %163, label %160

160:                                              ; preds = %154
  %161 = bitcast i64* %158 to %"class.v8::Value"*
  %162 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %155, %"class.v8::Value"* %161) #9
  br label %163

163:                                              ; preds = %160, %154, %150
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #9
  br label %179

179:                                              ; preds = %163, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36StencilFuncSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.393, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %180

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %180

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %180

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %141 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %140) #9
  br label %144

142:                                              ; preds = %136
  %143 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %144

144:                                              ; preds = %139, %142
  %145 = phi i32 [ %141, %139 ], [ %143, %142 ]
  %146 = load i32, i32* %17, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %180

148:                                              ; preds = %144
  %149 = load i32, i32* %20, align 8
  %150 = icmp sgt i32 %149, 3
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = load i64*, i64** %4, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 1
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, 160
  %156 = inttoptr i64 %155 to %"class.v8::Value"*
  br label %161

157:                                              ; preds = %148
  %158 = load i64*, i64** %44, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 3
  %160 = bitcast i64* %159 to %"class.v8::Value"*
  br label %161

161:                                              ; preds = %151, %157
  %162 = phi %"class.v8::Value"* [ %156, %151 ], [ %160, %157 ]
  %163 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %162) #9
  br i1 %163, label %164, label %167, !prof !4

164:                                              ; preds = %161
  %165 = bitcast %"class.v8::Value"* %162 to %"class.v8::Uint32"*
  %166 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %165) #9
  br label %174

167:                                              ; preds = %161
  %168 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %162) #9
  br i1 %168, label %169, label %172, !prof !4

169:                                              ; preds = %167
  %170 = bitcast %"class.v8::Value"* %162 to %"class.v8::Int32"*
  %171 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %170) #9
  br label %174

172:                                              ; preds = %167
  %173 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %162, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %174

174:                                              ; preds = %164, %169, %172
  %175 = phi i32 [ %166, %164 ], [ %171, %169 ], [ %173, %172 ]
  %176 = load i32, i32* %17, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  %179 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase19stencilFuncSeparateEjjij(%"class.blink::WebGLRenderingContextBase"* %179, i32 %93, i32 %120, i32 %145, i32 %175) #9
  br label %180

180:                                              ; preds = %174, %144, %119, %88, %178, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %181 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %182 = load i64*, i64** %181, align 8
  %183 = icmp eq i64* %182, null
  br i1 %183, label %193, label %184

184:                                              ; preds = %180
  %185 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %186 = bitcast %"class.v8::Isolate"* %185 to %"class.v8::internal::Isolate"*
  %187 = load i64, i64* %182, align 8
  %188 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %186, i64 %187) #9
  %189 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %185) #9
  br i1 %189, label %193, label %190

190:                                              ; preds = %184
  %191 = bitcast i64* %188 to %"class.v8::Value"*
  %192 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %185, %"class.v8::Value"* %191) #9
  br label %193

193:                                              ; preds = %190, %184, %180
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #9
  br label %209

209:                                              ; preds = %193, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28StencilMaskOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.394, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase11stencilMaskEj(%"class.blink::WebGLRenderingContextBase"* %94, i32 %93) #9
  br label %95

95:                                               ; preds = %88, %92, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36StencilMaskSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.395, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %125

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %125

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase19stencilMaskSeparateEjj(%"class.blink::WebGLRenderingContextBase"* %124, i32 %93, i32 %120) #9
  br label %125

125:                                              ; preds = %119, %88, %123, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #9
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #9
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #9
  br label %138

138:                                              ; preds = %135, %129, %125
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #9
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26StencilOpOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.396, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %155

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %155

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %155

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Uint32"*
  %141 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %140) #9
  br label %149

142:                                              ; preds = %136
  %143 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %143, label %144, label %147, !prof !4

144:                                              ; preds = %142
  %145 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %146 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %145) #9
  br label %149

147:                                              ; preds = %142
  %148 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %149

149:                                              ; preds = %139, %144, %147
  %150 = phi i32 [ %141, %139 ], [ %146, %144 ], [ %148, %147 ]
  %151 = load i32, i32* %17, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9stencilOpEjjj(%"class.blink::WebGLRenderingContextBase"* %154, i32 %93, i32 %120, i32 %150) #9
  br label %155

155:                                              ; preds = %149, %119, %88, %153, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %157 = load i64*, i64** %156, align 8
  %158 = icmp eq i64* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %155
  %160 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %161 = bitcast %"class.v8::Isolate"* %160 to %"class.v8::internal::Isolate"*
  %162 = load i64, i64* %157, align 8
  %163 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %161, i64 %162) #9
  %164 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %160) #9
  br i1 %164, label %168, label %165

165:                                              ; preds = %159
  %166 = bitcast i64* %163 to %"class.v8::Value"*
  %167 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %160, %"class.v8::Value"* %166) #9
  br label %168

168:                                              ; preds = %165, %159, %155
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #9
  br label %184

184:                                              ; preds = %168, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context34StencilOpSeparateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.397, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %185

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %185

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %185

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Uint32"*
  %141 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %140) #9
  br label %149

142:                                              ; preds = %136
  %143 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %143, label %144, label %147, !prof !4

144:                                              ; preds = %142
  %145 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %146 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %145) #9
  br label %149

147:                                              ; preds = %142
  %148 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %149

149:                                              ; preds = %139, %144, %147
  %150 = phi i32 [ %141, %139 ], [ %146, %144 ], [ %148, %147 ]
  %151 = load i32, i32* %17, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %185

153:                                              ; preds = %149
  %154 = load i32, i32* %20, align 8
  %155 = icmp sgt i32 %154, 3
  br i1 %155, label %162, label %156

156:                                              ; preds = %153
  %157 = load i64*, i64** %4, align 8
  %158 = getelementptr inbounds i64, i64* %157, i64 1
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 160
  %161 = inttoptr i64 %160 to %"class.v8::Value"*
  br label %166

162:                                              ; preds = %153
  %163 = load i64*, i64** %44, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 3
  %165 = bitcast i64* %164 to %"class.v8::Value"*
  br label %166

166:                                              ; preds = %156, %162
  %167 = phi %"class.v8::Value"* [ %161, %156 ], [ %165, %162 ]
  %168 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %167) #9
  br i1 %168, label %169, label %172, !prof !4

169:                                              ; preds = %166
  %170 = bitcast %"class.v8::Value"* %167 to %"class.v8::Uint32"*
  %171 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %170) #9
  br label %179

172:                                              ; preds = %166
  %173 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %167) #9
  br i1 %173, label %174, label %177, !prof !4

174:                                              ; preds = %172
  %175 = bitcast %"class.v8::Value"* %167 to %"class.v8::Int32"*
  %176 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %175) #9
  br label %179

177:                                              ; preds = %172
  %178 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %167, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %179

179:                                              ; preds = %169, %174, %177
  %180 = phi i32 [ %171, %169 ], [ %176, %174 ], [ %178, %177 ]
  %181 = load i32, i32* %17, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase17stencilOpSeparateEjjjj(%"class.blink::WebGLRenderingContextBase"* %184, i32 %93, i32 %120, i32 %150, i32 %180) #9
  br label %185

185:                                              ; preds = %179, %149, %119, %88, %183, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %186 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = icmp eq i64* %187, null
  br i1 %188, label %198, label %189

189:                                              ; preds = %185
  %190 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %191 = bitcast %"class.v8::Isolate"* %190 to %"class.v8::internal::Isolate"*
  %192 = load i64, i64* %187, align 8
  %193 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %191, i64 %192) #9
  %194 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %190) #9
  br i1 %194, label %198, label %195

195:                                              ; preds = %189
  %196 = bitcast i64* %193 to %"class.v8::Value"*
  %197 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %190, %"class.v8::Value"* %196) #9
  br label %198

198:                                              ; preds = %195, %189, %185
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #9
  br label %214

214:                                              ; preds = %198, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27TexImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::ExceptionState", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::ExceptionState", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::ExceptionState", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::ExceptionState", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.blink::MaybeShared", align 8
  %19 = alloca %"class.blink::MaybeShared", align 8
  %20 = alloca %"class.blink::ExceptionState", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %22, i64 0, i32 5
  %28 = load %"class.base::TickClock"*, %"class.base::TickClock"** %27, align 8
  %29 = bitcast %"class.base::TickClock"* %28 to i64 (%"class.base::TickClock"*)***
  %30 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %30, i64 2
  %32 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %31, align 8
  %33 = tail call i64 %32(%"class.base::TickClock"* %28) #9
  %34 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %22, i64 0, i32 4, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %26
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %22) #9
  br label %38

38:                                               ; preds = %1, %26, %37
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %40, 9
  %42 = select i1 %41, i32 %40, i32 9
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 1
  %46 = bitcast i64* %45 to %"class.v8::Isolate"**
  %47 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %48 = ptrtoint %"class.v8::Isolate"* %47 to i64
  switch i32 %42, label %2464 [
    i32 9, label %49
    i32 6, label %371
  ]

49:                                               ; preds = %38
  %50 = bitcast %"class.blink::MaybeShared"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = bitcast %"class.blink::ExceptionState"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %51) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 56, i1 false) #9
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 1, i32 0
  store i16 6, i16* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 1, i32 1
  store i16 0, i16* %54, align 2
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 1, i32 2
  %56 = bitcast i8** %55 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %56, align 8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 3
  store %"class.v8::Isolate"* %47, %"class.v8::Isolate"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 4
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 5, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringImpl"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #9
  br i1 %41, label %62, label %82, !prof !5

62:                                               ; preds = %49
  %63 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  %64 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 9, i32 %40) #9
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %16, %"class.WTF::String"* nonnull dereferenceable(8) %17) #9
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #9
  br label %81

81:                                               ; preds = %80, %77, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %341

82:                                               ; preds = %49
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 -1
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i64 %86, -4294967296
  %91 = zext i32 %89 to i64
  %92 = or i64 %90, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load i16, i16* %94, align 2
  switch i16 %95, label %101 [
    i16 1057, label %96
    i16 1056, label %96
    i16 1040, label %96
  ]

96:                                               ; preds = %82, %82, %82
  %97 = bitcast i64* %84 to %"class.v8::Value"*
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %115

101:                                              ; preds = %82
  %102 = bitcast i64* %85 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  %104 = load i32, i32* %39, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = bitcast i64** %83 to %"class.v8::Value"**
  %108 = load %"class.v8::Value"*, %"class.v8::Value"** %107, align 8
  br label %115

109:                                              ; preds = %101
  %110 = load i64*, i64** %43, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 1
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 160
  %114 = inttoptr i64 %113 to %"class.v8::Value"*
  br label %115

115:                                              ; preds = %96, %106, %109
  %116 = phi i8* [ %103, %109 ], [ %100, %96 ], [ %103, %106 ]
  %117 = phi %"class.v8::Value"* [ %114, %109 ], [ %97, %96 ], [ %108, %106 ]
  %118 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %117) #9
  br i1 %118, label %119, label %122, !prof !4

119:                                              ; preds = %115
  %120 = bitcast %"class.v8::Value"* %117 to %"class.v8::Uint32"*
  %121 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %120) #9
  br label %131

122:                                              ; preds = %115
  %123 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %117) #9
  br i1 %123, label %124, label %127, !prof !4

124:                                              ; preds = %122
  %125 = bitcast %"class.v8::Value"* %117 to %"class.v8::Int32"*
  %126 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %125) #9
  br label %131

127:                                              ; preds = %122
  %128 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %117, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  %129 = load i32, i32* %59, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %341

131:                                              ; preds = %127, %124, %119
  %132 = phi i32 [ %128, %127 ], [ %126, %124 ], [ %121, %119 ]
  %133 = load i32, i32* %39, align 8
  %134 = icmp sgt i32 %133, 1
  br i1 %134, label %141, label %135

135:                                              ; preds = %131
  %136 = load i64*, i64** %43, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 1
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 160
  %140 = inttoptr i64 %139 to %"class.v8::Value"*
  br label %145

141:                                              ; preds = %131
  %142 = load i64*, i64** %83, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = bitcast i64* %143 to %"class.v8::Value"*
  br label %145

145:                                              ; preds = %141, %135
  %146 = phi %"class.v8::Value"* [ %140, %135 ], [ %144, %141 ]
  %147 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %146) #9
  br i1 %147, label %148, label %151, !prof !4

148:                                              ; preds = %145
  %149 = bitcast %"class.v8::Value"* %146 to %"class.v8::Int32"*
  %150 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %149) #9
  br label %153

151:                                              ; preds = %145
  %152 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %146, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %153

153:                                              ; preds = %151, %148
  %154 = phi i32 [ %150, %148 ], [ %152, %151 ]
  %155 = load i32, i32* %59, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %341

157:                                              ; preds = %153
  %158 = load i32, i32* %39, align 8
  %159 = icmp sgt i32 %158, 2
  br i1 %159, label %166, label %160

160:                                              ; preds = %157
  %161 = load i64*, i64** %43, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 1
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 160
  %165 = inttoptr i64 %164 to %"class.v8::Value"*
  br label %170

166:                                              ; preds = %157
  %167 = load i64*, i64** %83, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 2
  %169 = bitcast i64* %168 to %"class.v8::Value"*
  br label %170

170:                                              ; preds = %166, %160
  %171 = phi %"class.v8::Value"* [ %165, %160 ], [ %169, %166 ]
  %172 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %171) #9
  br i1 %172, label %173, label %176, !prof !4

173:                                              ; preds = %170
  %174 = bitcast %"class.v8::Value"* %171 to %"class.v8::Int32"*
  %175 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %174) #9
  br label %178

176:                                              ; preds = %170
  %177 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %171, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %178

178:                                              ; preds = %176, %173
  %179 = phi i32 [ %175, %173 ], [ %177, %176 ]
  %180 = load i32, i32* %59, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %341

182:                                              ; preds = %178
  %183 = load i32, i32* %39, align 8
  %184 = icmp sgt i32 %183, 3
  br i1 %184, label %191, label %185

185:                                              ; preds = %182
  %186 = load i64*, i64** %43, align 8
  %187 = getelementptr inbounds i64, i64* %186, i64 1
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 160
  %190 = inttoptr i64 %189 to %"class.v8::Value"*
  br label %195

191:                                              ; preds = %182
  %192 = load i64*, i64** %83, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 3
  %194 = bitcast i64* %193 to %"class.v8::Value"*
  br label %195

195:                                              ; preds = %191, %185
  %196 = phi %"class.v8::Value"* [ %190, %185 ], [ %194, %191 ]
  %197 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %196) #9
  br i1 %197, label %198, label %201, !prof !4

198:                                              ; preds = %195
  %199 = bitcast %"class.v8::Value"* %196 to %"class.v8::Int32"*
  %200 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %199) #9
  br label %203

201:                                              ; preds = %195
  %202 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %196, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %203

203:                                              ; preds = %201, %198
  %204 = phi i32 [ %200, %198 ], [ %202, %201 ]
  %205 = load i32, i32* %59, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %341

207:                                              ; preds = %203
  %208 = load i32, i32* %39, align 8
  %209 = icmp sgt i32 %208, 4
  br i1 %209, label %216, label %210

210:                                              ; preds = %207
  %211 = load i64*, i64** %43, align 8
  %212 = getelementptr inbounds i64, i64* %211, i64 1
  %213 = load i64, i64* %212, align 8
  %214 = add i64 %213, 160
  %215 = inttoptr i64 %214 to %"class.v8::Value"*
  br label %220

216:                                              ; preds = %207
  %217 = load i64*, i64** %83, align 8
  %218 = getelementptr inbounds i64, i64* %217, i64 4
  %219 = bitcast i64* %218 to %"class.v8::Value"*
  br label %220

220:                                              ; preds = %216, %210
  %221 = phi %"class.v8::Value"* [ %215, %210 ], [ %219, %216 ]
  %222 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %221) #9
  br i1 %222, label %223, label %226, !prof !4

223:                                              ; preds = %220
  %224 = bitcast %"class.v8::Value"* %221 to %"class.v8::Int32"*
  %225 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %224) #9
  br label %228

226:                                              ; preds = %220
  %227 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %221, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %228

228:                                              ; preds = %226, %223
  %229 = phi i32 [ %225, %223 ], [ %227, %226 ]
  %230 = load i32, i32* %59, align 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %341

232:                                              ; preds = %228
  %233 = load i32, i32* %39, align 8
  %234 = icmp sgt i32 %233, 5
  br i1 %234, label %241, label %235

235:                                              ; preds = %232
  %236 = load i64*, i64** %43, align 8
  %237 = getelementptr inbounds i64, i64* %236, i64 1
  %238 = load i64, i64* %237, align 8
  %239 = add i64 %238, 160
  %240 = inttoptr i64 %239 to %"class.v8::Value"*
  br label %245

241:                                              ; preds = %232
  %242 = load i64*, i64** %83, align 8
  %243 = getelementptr inbounds i64, i64* %242, i64 5
  %244 = bitcast i64* %243 to %"class.v8::Value"*
  br label %245

245:                                              ; preds = %241, %235
  %246 = phi %"class.v8::Value"* [ %240, %235 ], [ %244, %241 ]
  %247 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %246) #9
  br i1 %247, label %248, label %251, !prof !4

248:                                              ; preds = %245
  %249 = bitcast %"class.v8::Value"* %246 to %"class.v8::Int32"*
  %250 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %249) #9
  br label %253

251:                                              ; preds = %245
  %252 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %246, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %253

253:                                              ; preds = %251, %248
  %254 = phi i32 [ %250, %248 ], [ %252, %251 ]
  %255 = load i32, i32* %59, align 8
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %341

257:                                              ; preds = %253
  %258 = load i32, i32* %39, align 8
  %259 = icmp sgt i32 %258, 6
  br i1 %259, label %266, label %260

260:                                              ; preds = %257
  %261 = load i64*, i64** %43, align 8
  %262 = getelementptr inbounds i64, i64* %261, i64 1
  %263 = load i64, i64* %262, align 8
  %264 = add i64 %263, 160
  %265 = inttoptr i64 %264 to %"class.v8::Value"*
  br label %270

266:                                              ; preds = %257
  %267 = load i64*, i64** %83, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 6
  %269 = bitcast i64* %268 to %"class.v8::Value"*
  br label %270

270:                                              ; preds = %266, %260
  %271 = phi %"class.v8::Value"* [ %265, %260 ], [ %269, %266 ]
  %272 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %271) #9
  br i1 %272, label %273, label %276, !prof !4

273:                                              ; preds = %270
  %274 = bitcast %"class.v8::Value"* %271 to %"class.v8::Uint32"*
  %275 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %274) #9
  br label %283

276:                                              ; preds = %270
  %277 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %271) #9
  br i1 %277, label %278, label %281, !prof !4

278:                                              ; preds = %276
  %279 = bitcast %"class.v8::Value"* %271 to %"class.v8::Int32"*
  %280 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %279) #9
  br label %283

281:                                              ; preds = %276
  %282 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %271, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %283

283:                                              ; preds = %281, %278, %273
  %284 = phi i32 [ %275, %273 ], [ %280, %278 ], [ %282, %281 ]
  %285 = load i32, i32* %59, align 8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %341

287:                                              ; preds = %283
  %288 = load i32, i32* %39, align 8
  %289 = icmp sgt i32 %288, 7
  br i1 %289, label %296, label %290

290:                                              ; preds = %287
  %291 = load i64*, i64** %43, align 8
  %292 = getelementptr inbounds i64, i64* %291, i64 1
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %293, 160
  %295 = inttoptr i64 %294 to %"class.v8::Value"*
  br label %300

296:                                              ; preds = %287
  %297 = load i64*, i64** %83, align 8
  %298 = getelementptr inbounds i64, i64* %297, i64 7
  %299 = bitcast i64* %298 to %"class.v8::Value"*
  br label %300

300:                                              ; preds = %296, %290
  %301 = phi %"class.v8::Value"* [ %295, %290 ], [ %299, %296 ]
  %302 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %301) #9
  br i1 %302, label %303, label %306, !prof !4

303:                                              ; preds = %300
  %304 = bitcast %"class.v8::Value"* %301 to %"class.v8::Uint32"*
  %305 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %304) #9
  br label %313

306:                                              ; preds = %300
  %307 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %301) #9
  br i1 %307, label %308, label %311, !prof !4

308:                                              ; preds = %306
  %309 = bitcast %"class.v8::Value"* %301 to %"class.v8::Int32"*
  %310 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %309) #9
  br label %313

311:                                              ; preds = %306
  %312 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %301, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %313

313:                                              ; preds = %311, %308, %303
  %314 = phi i32 [ %305, %303 ], [ %310, %308 ], [ %312, %311 ]
  %315 = load i32, i32* %59, align 8
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %341

317:                                              ; preds = %313
  %318 = bitcast %"class.blink::MaybeShared"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #9
  %319 = load i32, i32* %39, align 8
  %320 = icmp sgt i32 %319, 8
  br i1 %320, label %327, label %321

321:                                              ; preds = %317
  %322 = load i64*, i64** %43, align 8
  %323 = getelementptr inbounds i64, i64* %322, i64 1
  %324 = load i64, i64* %323, align 8
  %325 = add i64 %324, 160
  %326 = inttoptr i64 %325 to %"class.v8::Value"*
  br label %331

327:                                              ; preds = %317
  %328 = load i64*, i64** %83, align 8
  %329 = getelementptr inbounds i64, i64* %328, i64 8
  %330 = bitcast i64* %329 to %"class.v8::Value"*
  br label %331

331:                                              ; preds = %327, %321
  %332 = phi %"class.v8::Value"* [ %326, %321 ], [ %330, %327 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_18DOMArrayBufferViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* nonnull sret %18, %"class.v8::Isolate"* %47, i32 8, %"class.v8::Value"* %332, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  %333 = load i32, i32* %59, align 8
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %331
  %336 = bitcast i8* %116 to %"class.blink::WebGLRenderingContextBase"*
  %337 = bitcast %"class.blink::MaybeShared"* %18 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.blink::MaybeShared"* %19 to i64*
  store i64 %338, i64* %339, align 8
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEjiiiiijjNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"* %336, i32 %132, i32 %154, i32 %179, i32 %204, i32 %229, i32 %254, i32 %284, i32 %314, %"class.blink::MaybeShared"* nonnull %19) #9
  br label %340

340:                                              ; preds = %335, %331
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #9
  br label %341

341:                                              ; preds = %340, %313, %283, %253, %228, %203, %178, %153, %127, %81
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %342 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %343 = load i64*, i64** %342, align 8
  %344 = icmp eq i64* %343, null
  br i1 %344, label %354, label %345

345:                                              ; preds = %341
  %346 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %58, align 8
  %347 = bitcast %"class.v8::Isolate"* %346 to %"class.v8::internal::Isolate"*
  %348 = load i64, i64* %343, align 8
  %349 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %347, i64 %348) #9
  %350 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %346) #9
  br i1 %350, label %354, label %351

351:                                              ; preds = %345
  %352 = bitcast i64* %349 to %"class.v8::Value"*
  %353 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %346, %"class.v8::Value"* %352) #9
  br label %354

354:                                              ; preds = %351, %345, %341
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %370, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  br i1 %361, label %364, label %366

364:                                              ; preds = %357
  %365 = add i32 %363, -1
  store i32 %365, i32* %362, align 4
  br label %366

366:                                              ; preds = %364, %357
  %367 = phi i32 [ %365, %364 ], [ %363, %357 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #9
  br label %370

370:                                              ; preds = %354, %366, %369
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %51) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  br label %2529

371:                                              ; preds = %38
  %372 = icmp sgt i32 %40, 5
  br i1 %372, label %376, label %373

373:                                              ; preds = %371
  %374 = add i64 %48, 160
  %375 = inttoptr i64 %374 to %"class.v8::Value"*
  br label %381

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %378 = load i64*, i64** %377, align 8
  %379 = getelementptr inbounds i64, i64* %378, i64 5
  %380 = bitcast i64* %379 to %"class.v8::Value"*
  br label %381

381:                                              ; preds = %373, %376
  %382 = phi %"class.v8::Value"* [ %375, %373 ], [ %380, %376 ]
  %383 = add i64 %48, 8
  %384 = inttoptr i64 %383 to %"class.blink::V8PerIsolateData"**
  %385 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %386 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %385, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8HTMLVideoElement18wrapper_type_info_E, %"class.v8::Value"* %382) #9
  br i1 %386, label %387, label %667

387:                                              ; preds = %381
  %388 = load i64*, i64** %43, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = bitcast i64* %389 to %"class.v8::Isolate"**
  %391 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %390, align 8
  %392 = bitcast %"class.blink::ExceptionState"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %392, i8 -86, i64 56, i1 false) #9
  %393 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %393, align 8
  %394 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 0
  store i16 6, i16* %394, align 8
  %395 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 1
  store i16 0, i16* %395, align 2
  %396 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 2
  %397 = bitcast i8** %396 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %397, align 8
  %398 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %398, align 8
  %399 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 3
  store %"class.v8::Isolate"* %391, %"class.v8::Isolate"** %399, align 8
  %400 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 4
  store i32 0, i32* %400, align 8
  %401 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 5, i32 0, i32 0
  %402 = bitcast %"class.WTF::StringImpl"** %401 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %402, i8 0, i64 16, i1 false) #9
  %403 = load i32, i32* %39, align 8
  %404 = icmp slt i32 %403, 6
  br i1 %404, label %405, label %425, !prof !5

405:                                              ; preds = %387
  %406 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %406) #9
  %407 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %403) #9
  %408 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %407, %"class.WTF::StringImpl"** %408, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %14, %"class.WTF::String"* nonnull dereferenceable(8) %15) #9
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %409, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %405
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %409) #9
  br label %424

424:                                              ; preds = %423, %420, %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %406) #9
  br label %637

425:                                              ; preds = %387
  %426 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %427 = load i64*, i64** %426, align 8
  %428 = getelementptr inbounds i64, i64* %427, i64 -1
  %429 = bitcast i64* %428 to %"class.v8::Object"*
  %430 = load i64, i64* %428, align 8
  %431 = add i64 %430, -1
  %432 = inttoptr i64 %431 to i32*
  %433 = load i32, i32* %432, align 4
  %434 = and i64 %430, -4294967296
  %435 = zext i32 %433 to i64
  %436 = or i64 %434, %435
  %437 = add i64 %436, 7
  %438 = inttoptr i64 %437 to i16*
  %439 = load i16, i16* %438, align 2
  switch i16 %439, label %444 [
    i16 1057, label %440
    i16 1056, label %440
    i16 1040, label %440
  ]

440:                                              ; preds = %425, %425, %425
  %441 = add i64 %430, 19
  %442 = inttoptr i64 %441 to i8**
  %443 = load i8*, i8** %442, align 1
  br label %446

444:                                              ; preds = %425
  %445 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %429, i32 1) #9
  br label %446

446:                                              ; preds = %444, %440
  %447 = phi i8* [ %443, %440 ], [ %445, %444 ]
  %448 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %429) #9
  %449 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %448) #9
  %450 = load i32, i32* %39, align 8
  %451 = icmp sgt i32 %450, 0
  br i1 %451, label %458, label %452

452:                                              ; preds = %446
  %453 = load i64*, i64** %43, align 8
  %454 = getelementptr inbounds i64, i64* %453, i64 1
  %455 = load i64, i64* %454, align 8
  %456 = add i64 %455, 160
  %457 = inttoptr i64 %456 to %"class.v8::Value"*
  br label %461

458:                                              ; preds = %446
  %459 = bitcast i64** %426 to %"class.v8::Value"**
  %460 = load %"class.v8::Value"*, %"class.v8::Value"** %459, align 8
  br label %461

461:                                              ; preds = %458, %452
  %462 = phi %"class.v8::Value"* [ %457, %452 ], [ %460, %458 ]
  %463 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %462) #9
  br i1 %463, label %464, label %467, !prof !4

464:                                              ; preds = %461
  %465 = bitcast %"class.v8::Value"* %462 to %"class.v8::Uint32"*
  %466 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %465) #9
  br label %476

467:                                              ; preds = %461
  %468 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %462) #9
  br i1 %468, label %469, label %472, !prof !4

469:                                              ; preds = %467
  %470 = bitcast %"class.v8::Value"* %462 to %"class.v8::Int32"*
  %471 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %470) #9
  br label %476

472:                                              ; preds = %467
  %473 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %462, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  %474 = load i32, i32* %400, align 8
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %637

476:                                              ; preds = %472, %469, %464
  %477 = phi i32 [ %473, %472 ], [ %471, %469 ], [ %466, %464 ]
  %478 = load i32, i32* %39, align 8
  %479 = icmp sgt i32 %478, 1
  br i1 %479, label %486, label %480

480:                                              ; preds = %476
  %481 = load i64*, i64** %43, align 8
  %482 = getelementptr inbounds i64, i64* %481, i64 1
  %483 = load i64, i64* %482, align 8
  %484 = add i64 %483, 160
  %485 = inttoptr i64 %484 to %"class.v8::Value"*
  br label %490

486:                                              ; preds = %476
  %487 = load i64*, i64** %426, align 8
  %488 = getelementptr inbounds i64, i64* %487, i64 1
  %489 = bitcast i64* %488 to %"class.v8::Value"*
  br label %490

490:                                              ; preds = %486, %480
  %491 = phi %"class.v8::Value"* [ %485, %480 ], [ %489, %486 ]
  %492 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %491) #9
  br i1 %492, label %493, label %496, !prof !4

493:                                              ; preds = %490
  %494 = bitcast %"class.v8::Value"* %491 to %"class.v8::Int32"*
  %495 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %494) #9
  br label %498

496:                                              ; preds = %490
  %497 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %491, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %498

498:                                              ; preds = %496, %493
  %499 = phi i32 [ %495, %493 ], [ %497, %496 ]
  %500 = load i32, i32* %400, align 8
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %637

502:                                              ; preds = %498
  %503 = load i32, i32* %39, align 8
  %504 = icmp sgt i32 %503, 2
  br i1 %504, label %511, label %505

505:                                              ; preds = %502
  %506 = load i64*, i64** %43, align 8
  %507 = getelementptr inbounds i64, i64* %506, i64 1
  %508 = load i64, i64* %507, align 8
  %509 = add i64 %508, 160
  %510 = inttoptr i64 %509 to %"class.v8::Value"*
  br label %515

511:                                              ; preds = %502
  %512 = load i64*, i64** %426, align 8
  %513 = getelementptr inbounds i64, i64* %512, i64 2
  %514 = bitcast i64* %513 to %"class.v8::Value"*
  br label %515

515:                                              ; preds = %511, %505
  %516 = phi %"class.v8::Value"* [ %510, %505 ], [ %514, %511 ]
  %517 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %516) #9
  br i1 %517, label %518, label %521, !prof !4

518:                                              ; preds = %515
  %519 = bitcast %"class.v8::Value"* %516 to %"class.v8::Int32"*
  %520 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %519) #9
  br label %523

521:                                              ; preds = %515
  %522 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %516, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %523

523:                                              ; preds = %521, %518
  %524 = phi i32 [ %520, %518 ], [ %522, %521 ]
  %525 = load i32, i32* %400, align 8
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %637

527:                                              ; preds = %523
  %528 = load i32, i32* %39, align 8
  %529 = icmp sgt i32 %528, 3
  br i1 %529, label %536, label %530

530:                                              ; preds = %527
  %531 = load i64*, i64** %43, align 8
  %532 = getelementptr inbounds i64, i64* %531, i64 1
  %533 = load i64, i64* %532, align 8
  %534 = add i64 %533, 160
  %535 = inttoptr i64 %534 to %"class.v8::Value"*
  br label %540

536:                                              ; preds = %527
  %537 = load i64*, i64** %426, align 8
  %538 = getelementptr inbounds i64, i64* %537, i64 3
  %539 = bitcast i64* %538 to %"class.v8::Value"*
  br label %540

540:                                              ; preds = %536, %530
  %541 = phi %"class.v8::Value"* [ %535, %530 ], [ %539, %536 ]
  %542 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %541) #9
  br i1 %542, label %543, label %546, !prof !4

543:                                              ; preds = %540
  %544 = bitcast %"class.v8::Value"* %541 to %"class.v8::Uint32"*
  %545 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %544) #9
  br label %553

546:                                              ; preds = %540
  %547 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %541) #9
  br i1 %547, label %548, label %551, !prof !4

548:                                              ; preds = %546
  %549 = bitcast %"class.v8::Value"* %541 to %"class.v8::Int32"*
  %550 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %549) #9
  br label %553

551:                                              ; preds = %546
  %552 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %541, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %553

553:                                              ; preds = %551, %548, %543
  %554 = phi i32 [ %545, %543 ], [ %550, %548 ], [ %552, %551 ]
  %555 = load i32, i32* %400, align 8
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %637

557:                                              ; preds = %553
  %558 = load i32, i32* %39, align 8
  %559 = icmp sgt i32 %558, 4
  br i1 %559, label %566, label %560

560:                                              ; preds = %557
  %561 = load i64*, i64** %43, align 8
  %562 = getelementptr inbounds i64, i64* %561, i64 1
  %563 = load i64, i64* %562, align 8
  %564 = add i64 %563, 160
  %565 = inttoptr i64 %564 to %"class.v8::Value"*
  br label %570

566:                                              ; preds = %557
  %567 = load i64*, i64** %426, align 8
  %568 = getelementptr inbounds i64, i64* %567, i64 4
  %569 = bitcast i64* %568 to %"class.v8::Value"*
  br label %570

570:                                              ; preds = %566, %560
  %571 = phi %"class.v8::Value"* [ %565, %560 ], [ %569, %566 ]
  %572 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %571) #9
  br i1 %572, label %573, label %576, !prof !4

573:                                              ; preds = %570
  %574 = bitcast %"class.v8::Value"* %571 to %"class.v8::Uint32"*
  %575 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %574) #9
  br label %583

576:                                              ; preds = %570
  %577 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %571) #9
  br i1 %577, label %578, label %581, !prof !4

578:                                              ; preds = %576
  %579 = bitcast %"class.v8::Value"* %571 to %"class.v8::Int32"*
  %580 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %579) #9
  br label %583

581:                                              ; preds = %576
  %582 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %571, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %583

583:                                              ; preds = %581, %578, %573
  %584 = phi i32 [ %575, %573 ], [ %580, %578 ], [ %582, %581 ]
  %585 = load i32, i32* %400, align 8
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %637

587:                                              ; preds = %583
  %588 = load i32, i32* %39, align 8
  %589 = icmp sgt i32 %588, 5
  br i1 %589, label %596, label %590

590:                                              ; preds = %587
  %591 = load i64*, i64** %43, align 8
  %592 = getelementptr inbounds i64, i64* %591, i64 1
  %593 = load i64, i64* %592, align 8
  %594 = add i64 %593, 160
  %595 = inttoptr i64 %594 to %"class.v8::Value"*
  br label %600

596:                                              ; preds = %587
  %597 = load i64*, i64** %426, align 8
  %598 = getelementptr inbounds i64, i64* %597, i64 5
  %599 = bitcast i64* %598 to %"class.v8::Value"*
  br label %600

600:                                              ; preds = %596, %590
  %601 = phi %"class.v8::Value"* [ %595, %590 ], [ %599, %596 ]
  %602 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16HTMLVideoElement18wrapper_type_info_E, align 8
  %603 = ptrtoint %"class.v8::Isolate"* %391 to i64
  %604 = add i64 %603, 8
  %605 = inttoptr i64 %604 to %"class.blink::V8PerIsolateData"**
  %606 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %605, align 8
  %607 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %606, %"struct.blink::WrapperTypeInfo"* %602, %"class.v8::Value"* %601) #9
  br i1 %607, label %608, label %630

608:                                              ; preds = %600
  %609 = bitcast %"class.v8::Value"* %601 to i64*
  %610 = load i64, i64* %609, align 8
  %611 = add i64 %610, -1
  %612 = inttoptr i64 %611 to i32*
  %613 = load i32, i32* %612, align 4
  %614 = and i64 %610, -4294967296
  %615 = zext i32 %613 to i64
  %616 = or i64 %614, %615
  %617 = add i64 %616, 7
  %618 = inttoptr i64 %617 to i16*
  %619 = load i16, i16* %618, align 2
  switch i16 %619, label %624 [
    i16 1057, label %620
    i16 1056, label %620
    i16 1040, label %620
  ]

620:                                              ; preds = %608, %608, %608
  %621 = add i64 %610, 19
  %622 = inttoptr i64 %621 to i8**
  %623 = load i8*, i8** %622, align 1
  br label %627

624:                                              ; preds = %608
  %625 = bitcast %"class.v8::Value"* %601 to %"class.v8::Object"*
  %626 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %625, i32 1) #9
  br label %627

627:                                              ; preds = %624, %620
  %628 = phi i8* [ %623, %620 ], [ %626, %624 ]
  %629 = bitcast i8* %628 to %"class.blink::HTMLVideoElement"*
  br label %631

630:                                              ; preds = %600
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %602, i32 5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %631

631:                                              ; preds = %630, %627
  %632 = phi %"class.blink::HTMLVideoElement"* [ %629, %627 ], [ null, %630 ]
  %633 = load i32, i32* %400, align 8
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %637

635:                                              ; preds = %631
  %636 = bitcast i8* %447 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_16HTMLVideoElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %636, %"class.blink::ExecutionContext"* %449, i32 %477, i32 %499, i32 %524, i32 %554, i32 %584, %"class.blink::HTMLVideoElement"* %632, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %637

637:                                              ; preds = %635, %631, %583, %553, %523, %498, %472, %424
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %393, align 8
  %638 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %639 = load i64*, i64** %638, align 8
  %640 = icmp eq i64* %639, null
  br i1 %640, label %650, label %641

641:                                              ; preds = %637
  %642 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %399, align 8
  %643 = bitcast %"class.v8::Isolate"* %642 to %"class.v8::internal::Isolate"*
  %644 = load i64, i64* %639, align 8
  %645 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %643, i64 %644) #9
  %646 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %642) #9
  br i1 %646, label %650, label %647

647:                                              ; preds = %641
  %648 = bitcast i64* %645 to %"class.v8::Value"*
  %649 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %642, %"class.v8::Value"* %648) #9
  br label %650

650:                                              ; preds = %647, %641, %637
  %651 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %652 = icmp eq %"class.WTF::StringImpl"* %651, null
  br i1 %652, label %666, label %653

653:                                              ; preds = %650
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 0
  %659 = load i32, i32* %658, align 4
  br i1 %657, label %660, label %662

660:                                              ; preds = %653
  %661 = add i32 %659, -1
  store i32 %661, i32* %658, align 4
  br label %662

662:                                              ; preds = %660, %653
  %663 = phi i32 [ %661, %660 ], [ %659, %653 ]
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %665, label %666

665:                                              ; preds = %662
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %651) #9
  br label %666

666:                                              ; preds = %650, %662, %665
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %392) #9
  br label %2529

667:                                              ; preds = %381
  %668 = load i32, i32* %39, align 8
  %669 = icmp sgt i32 %668, 5
  br i1 %669, label %676, label %670

670:                                              ; preds = %667
  %671 = load i64*, i64** %43, align 8
  %672 = getelementptr inbounds i64, i64* %671, i64 1
  %673 = load i64, i64* %672, align 8
  %674 = add i64 %673, 160
  %675 = inttoptr i64 %674 to %"class.v8::Value"*
  br label %681

676:                                              ; preds = %667
  %677 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %678 = load i64*, i64** %677, align 8
  %679 = getelementptr inbounds i64, i64* %678, i64 5
  %680 = bitcast i64* %679 to %"class.v8::Value"*
  br label %681

681:                                              ; preds = %670, %676
  %682 = phi %"class.v8::Value"* [ %675, %670 ], [ %680, %676 ]
  %683 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %684 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %683, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8HTMLImageElement18wrapper_type_info_E, %"class.v8::Value"* %682) #9
  br i1 %684, label %685, label %965

685:                                              ; preds = %681
  %686 = load i64*, i64** %43, align 8
  %687 = getelementptr inbounds i64, i64* %686, i64 1
  %688 = bitcast i64* %687 to %"class.v8::Isolate"**
  %689 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %688, align 8
  %690 = bitcast %"class.blink::ExceptionState"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %690) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %690, i8 -86, i64 56, i1 false) #9
  %691 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %691, align 8
  %692 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 1, i32 0
  store i16 6, i16* %692, align 8
  %693 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 1, i32 1
  store i16 0, i16* %693, align 2
  %694 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 1, i32 2
  %695 = bitcast i8** %694 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %695, align 8
  %696 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %696, align 8
  %697 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 3
  store %"class.v8::Isolate"* %689, %"class.v8::Isolate"** %697, align 8
  %698 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 4
  store i32 0, i32* %698, align 8
  %699 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 5, i32 0, i32 0
  %700 = bitcast %"class.WTF::StringImpl"** %699 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %700, i8 0, i64 16, i1 false) #9
  %701 = load i32, i32* %39, align 8
  %702 = icmp slt i32 %701, 6
  br i1 %702, label %703, label %723, !prof !5

703:                                              ; preds = %685
  %704 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %704) #9
  %705 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %701) #9
  %706 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %705, %"class.WTF::StringImpl"** %706, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %13) #9
  %707 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %706, align 8
  %708 = icmp eq %"class.WTF::StringImpl"* %707, null
  br i1 %708, label %722, label %709

709:                                              ; preds = %703
  %710 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load atomic i32, i32* %710 monotonic, align 4
  %712 = and i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 0
  %715 = load i32, i32* %714, align 4
  br i1 %713, label %716, label %718

716:                                              ; preds = %709
  %717 = add i32 %715, -1
  store i32 %717, i32* %714, align 4
  br label %718

718:                                              ; preds = %716, %709
  %719 = phi i32 [ %717, %716 ], [ %715, %709 ]
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %722

721:                                              ; preds = %718
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %707) #9
  br label %722

722:                                              ; preds = %721, %718, %703
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %704) #9
  br label %935

723:                                              ; preds = %685
  %724 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %725 = load i64*, i64** %724, align 8
  %726 = getelementptr inbounds i64, i64* %725, i64 -1
  %727 = bitcast i64* %726 to %"class.v8::Object"*
  %728 = load i64, i64* %726, align 8
  %729 = add i64 %728, -1
  %730 = inttoptr i64 %729 to i32*
  %731 = load i32, i32* %730, align 4
  %732 = and i64 %728, -4294967296
  %733 = zext i32 %731 to i64
  %734 = or i64 %732, %733
  %735 = add i64 %734, 7
  %736 = inttoptr i64 %735 to i16*
  %737 = load i16, i16* %736, align 2
  switch i16 %737, label %742 [
    i16 1057, label %738
    i16 1056, label %738
    i16 1040, label %738
  ]

738:                                              ; preds = %723, %723, %723
  %739 = add i64 %728, 19
  %740 = inttoptr i64 %739 to i8**
  %741 = load i8*, i8** %740, align 1
  br label %744

742:                                              ; preds = %723
  %743 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %727, i32 1) #9
  br label %744

744:                                              ; preds = %742, %738
  %745 = phi i8* [ %741, %738 ], [ %743, %742 ]
  %746 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %727) #9
  %747 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %746) #9
  %748 = load i32, i32* %39, align 8
  %749 = icmp sgt i32 %748, 0
  br i1 %749, label %756, label %750

750:                                              ; preds = %744
  %751 = load i64*, i64** %43, align 8
  %752 = getelementptr inbounds i64, i64* %751, i64 1
  %753 = load i64, i64* %752, align 8
  %754 = add i64 %753, 160
  %755 = inttoptr i64 %754 to %"class.v8::Value"*
  br label %759

756:                                              ; preds = %744
  %757 = bitcast i64** %724 to %"class.v8::Value"**
  %758 = load %"class.v8::Value"*, %"class.v8::Value"** %757, align 8
  br label %759

759:                                              ; preds = %756, %750
  %760 = phi %"class.v8::Value"* [ %755, %750 ], [ %758, %756 ]
  %761 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %760) #9
  br i1 %761, label %762, label %765, !prof !4

762:                                              ; preds = %759
  %763 = bitcast %"class.v8::Value"* %760 to %"class.v8::Uint32"*
  %764 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %763) #9
  br label %774

765:                                              ; preds = %759
  %766 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %760) #9
  br i1 %766, label %767, label %770, !prof !4

767:                                              ; preds = %765
  %768 = bitcast %"class.v8::Value"* %760 to %"class.v8::Int32"*
  %769 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %768) #9
  br label %774

770:                                              ; preds = %765
  %771 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %689, %"class.v8::Value"* %760, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  %772 = load i32, i32* %698, align 8
  %773 = icmp eq i32 %772, 0
  br i1 %773, label %774, label %935

774:                                              ; preds = %770, %767, %762
  %775 = phi i32 [ %771, %770 ], [ %769, %767 ], [ %764, %762 ]
  %776 = load i32, i32* %39, align 8
  %777 = icmp sgt i32 %776, 1
  br i1 %777, label %784, label %778

778:                                              ; preds = %774
  %779 = load i64*, i64** %43, align 8
  %780 = getelementptr inbounds i64, i64* %779, i64 1
  %781 = load i64, i64* %780, align 8
  %782 = add i64 %781, 160
  %783 = inttoptr i64 %782 to %"class.v8::Value"*
  br label %788

784:                                              ; preds = %774
  %785 = load i64*, i64** %724, align 8
  %786 = getelementptr inbounds i64, i64* %785, i64 1
  %787 = bitcast i64* %786 to %"class.v8::Value"*
  br label %788

788:                                              ; preds = %784, %778
  %789 = phi %"class.v8::Value"* [ %783, %778 ], [ %787, %784 ]
  %790 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %789) #9
  br i1 %790, label %791, label %794, !prof !4

791:                                              ; preds = %788
  %792 = bitcast %"class.v8::Value"* %789 to %"class.v8::Int32"*
  %793 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %792) #9
  br label %796

794:                                              ; preds = %788
  %795 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %689, %"class.v8::Value"* %789, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %796

796:                                              ; preds = %794, %791
  %797 = phi i32 [ %793, %791 ], [ %795, %794 ]
  %798 = load i32, i32* %698, align 8
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %800, label %935

800:                                              ; preds = %796
  %801 = load i32, i32* %39, align 8
  %802 = icmp sgt i32 %801, 2
  br i1 %802, label %809, label %803

803:                                              ; preds = %800
  %804 = load i64*, i64** %43, align 8
  %805 = getelementptr inbounds i64, i64* %804, i64 1
  %806 = load i64, i64* %805, align 8
  %807 = add i64 %806, 160
  %808 = inttoptr i64 %807 to %"class.v8::Value"*
  br label %813

809:                                              ; preds = %800
  %810 = load i64*, i64** %724, align 8
  %811 = getelementptr inbounds i64, i64* %810, i64 2
  %812 = bitcast i64* %811 to %"class.v8::Value"*
  br label %813

813:                                              ; preds = %809, %803
  %814 = phi %"class.v8::Value"* [ %808, %803 ], [ %812, %809 ]
  %815 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %814) #9
  br i1 %815, label %816, label %819, !prof !4

816:                                              ; preds = %813
  %817 = bitcast %"class.v8::Value"* %814 to %"class.v8::Int32"*
  %818 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %817) #9
  br label %821

819:                                              ; preds = %813
  %820 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %689, %"class.v8::Value"* %814, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %821

821:                                              ; preds = %819, %816
  %822 = phi i32 [ %818, %816 ], [ %820, %819 ]
  %823 = load i32, i32* %698, align 8
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %825, label %935

825:                                              ; preds = %821
  %826 = load i32, i32* %39, align 8
  %827 = icmp sgt i32 %826, 3
  br i1 %827, label %834, label %828

828:                                              ; preds = %825
  %829 = load i64*, i64** %43, align 8
  %830 = getelementptr inbounds i64, i64* %829, i64 1
  %831 = load i64, i64* %830, align 8
  %832 = add i64 %831, 160
  %833 = inttoptr i64 %832 to %"class.v8::Value"*
  br label %838

834:                                              ; preds = %825
  %835 = load i64*, i64** %724, align 8
  %836 = getelementptr inbounds i64, i64* %835, i64 3
  %837 = bitcast i64* %836 to %"class.v8::Value"*
  br label %838

838:                                              ; preds = %834, %828
  %839 = phi %"class.v8::Value"* [ %833, %828 ], [ %837, %834 ]
  %840 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %839) #9
  br i1 %840, label %841, label %844, !prof !4

841:                                              ; preds = %838
  %842 = bitcast %"class.v8::Value"* %839 to %"class.v8::Uint32"*
  %843 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %842) #9
  br label %851

844:                                              ; preds = %838
  %845 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %839) #9
  br i1 %845, label %846, label %849, !prof !4

846:                                              ; preds = %844
  %847 = bitcast %"class.v8::Value"* %839 to %"class.v8::Int32"*
  %848 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %847) #9
  br label %851

849:                                              ; preds = %844
  %850 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %689, %"class.v8::Value"* %839, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %851

851:                                              ; preds = %849, %846, %841
  %852 = phi i32 [ %843, %841 ], [ %848, %846 ], [ %850, %849 ]
  %853 = load i32, i32* %698, align 8
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %935

855:                                              ; preds = %851
  %856 = load i32, i32* %39, align 8
  %857 = icmp sgt i32 %856, 4
  br i1 %857, label %864, label %858

858:                                              ; preds = %855
  %859 = load i64*, i64** %43, align 8
  %860 = getelementptr inbounds i64, i64* %859, i64 1
  %861 = load i64, i64* %860, align 8
  %862 = add i64 %861, 160
  %863 = inttoptr i64 %862 to %"class.v8::Value"*
  br label %868

864:                                              ; preds = %855
  %865 = load i64*, i64** %724, align 8
  %866 = getelementptr inbounds i64, i64* %865, i64 4
  %867 = bitcast i64* %866 to %"class.v8::Value"*
  br label %868

868:                                              ; preds = %864, %858
  %869 = phi %"class.v8::Value"* [ %863, %858 ], [ %867, %864 ]
  %870 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %869) #9
  br i1 %870, label %871, label %874, !prof !4

871:                                              ; preds = %868
  %872 = bitcast %"class.v8::Value"* %869 to %"class.v8::Uint32"*
  %873 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %872) #9
  br label %881

874:                                              ; preds = %868
  %875 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %869) #9
  br i1 %875, label %876, label %879, !prof !4

876:                                              ; preds = %874
  %877 = bitcast %"class.v8::Value"* %869 to %"class.v8::Int32"*
  %878 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %877) #9
  br label %881

879:                                              ; preds = %874
  %880 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %689, %"class.v8::Value"* %869, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %881

881:                                              ; preds = %879, %876, %871
  %882 = phi i32 [ %873, %871 ], [ %878, %876 ], [ %880, %879 ]
  %883 = load i32, i32* %698, align 8
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %885, label %935

885:                                              ; preds = %881
  %886 = load i32, i32* %39, align 8
  %887 = icmp sgt i32 %886, 5
  br i1 %887, label %894, label %888

888:                                              ; preds = %885
  %889 = load i64*, i64** %43, align 8
  %890 = getelementptr inbounds i64, i64* %889, i64 1
  %891 = load i64, i64* %890, align 8
  %892 = add i64 %891, 160
  %893 = inttoptr i64 %892 to %"class.v8::Value"*
  br label %898

894:                                              ; preds = %885
  %895 = load i64*, i64** %724, align 8
  %896 = getelementptr inbounds i64, i64* %895, i64 5
  %897 = bitcast i64* %896 to %"class.v8::Value"*
  br label %898

898:                                              ; preds = %894, %888
  %899 = phi %"class.v8::Value"* [ %893, %888 ], [ %897, %894 ]
  %900 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16HTMLImageElement18wrapper_type_info_E, align 8
  %901 = ptrtoint %"class.v8::Isolate"* %689 to i64
  %902 = add i64 %901, 8
  %903 = inttoptr i64 %902 to %"class.blink::V8PerIsolateData"**
  %904 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %903, align 8
  %905 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %904, %"struct.blink::WrapperTypeInfo"* %900, %"class.v8::Value"* %899) #9
  br i1 %905, label %906, label %928

906:                                              ; preds = %898
  %907 = bitcast %"class.v8::Value"* %899 to i64*
  %908 = load i64, i64* %907, align 8
  %909 = add i64 %908, -1
  %910 = inttoptr i64 %909 to i32*
  %911 = load i32, i32* %910, align 4
  %912 = and i64 %908, -4294967296
  %913 = zext i32 %911 to i64
  %914 = or i64 %912, %913
  %915 = add i64 %914, 7
  %916 = inttoptr i64 %915 to i16*
  %917 = load i16, i16* %916, align 2
  switch i16 %917, label %922 [
    i16 1057, label %918
    i16 1056, label %918
    i16 1040, label %918
  ]

918:                                              ; preds = %906, %906, %906
  %919 = add i64 %908, 19
  %920 = inttoptr i64 %919 to i8**
  %921 = load i8*, i8** %920, align 1
  br label %925

922:                                              ; preds = %906
  %923 = bitcast %"class.v8::Value"* %899 to %"class.v8::Object"*
  %924 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %923, i32 1) #9
  br label %925

925:                                              ; preds = %922, %918
  %926 = phi i8* [ %921, %918 ], [ %924, %922 ]
  %927 = bitcast i8* %926 to %"class.blink::HTMLImageElement"*
  br label %929

928:                                              ; preds = %898
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %900, i32 5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %929

929:                                              ; preds = %928, %925
  %930 = phi %"class.blink::HTMLImageElement"* [ %927, %925 ], [ null, %928 ]
  %931 = load i32, i32* %698, align 8
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %935

933:                                              ; preds = %929
  %934 = bitcast i8* %745 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_16HTMLImageElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %934, %"class.blink::ExecutionContext"* %747, i32 %775, i32 %797, i32 %822, i32 %852, i32 %882, %"class.blink::HTMLImageElement"* %930, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %935

935:                                              ; preds = %933, %929, %881, %851, %821, %796, %770, %722
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %691, align 8
  %936 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %937 = load i64*, i64** %936, align 8
  %938 = icmp eq i64* %937, null
  br i1 %938, label %948, label %939

939:                                              ; preds = %935
  %940 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %697, align 8
  %941 = bitcast %"class.v8::Isolate"* %940 to %"class.v8::internal::Isolate"*
  %942 = load i64, i64* %937, align 8
  %943 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %941, i64 %942) #9
  %944 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %940) #9
  br i1 %944, label %948, label %945

945:                                              ; preds = %939
  %946 = bitcast i64* %943 to %"class.v8::Value"*
  %947 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %940, %"class.v8::Value"* %946) #9
  br label %948

948:                                              ; preds = %945, %939, %935
  %949 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %699, align 8
  %950 = icmp eq %"class.WTF::StringImpl"* %949, null
  br i1 %950, label %964, label %951

951:                                              ; preds = %948
  %952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %953 = load atomic i32, i32* %952 monotonic, align 4
  %954 = and i32 %953, 2
  %955 = icmp eq i32 %954, 0
  %956 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 0, i32 0
  %957 = load i32, i32* %956, align 4
  br i1 %955, label %958, label %960

958:                                              ; preds = %951
  %959 = add i32 %957, -1
  store i32 %959, i32* %956, align 4
  br label %960

960:                                              ; preds = %958, %951
  %961 = phi i32 [ %959, %958 ], [ %957, %951 ]
  %962 = icmp eq i32 %961, 0
  br i1 %962, label %963, label %964

963:                                              ; preds = %960
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %949) #9
  br label %964

964:                                              ; preds = %948, %960, %963
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %690) #9
  br label %2529

965:                                              ; preds = %681
  %966 = load i32, i32* %39, align 8
  %967 = icmp sgt i32 %966, 5
  br i1 %967, label %974, label %968

968:                                              ; preds = %965
  %969 = load i64*, i64** %43, align 8
  %970 = getelementptr inbounds i64, i64* %969, i64 1
  %971 = load i64, i64* %970, align 8
  %972 = add i64 %971, 160
  %973 = inttoptr i64 %972 to %"class.v8::Value"*
  br label %979

974:                                              ; preds = %965
  %975 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %976 = load i64*, i64** %975, align 8
  %977 = getelementptr inbounds i64, i64* %976, i64 5
  %978 = bitcast i64* %977 to %"class.v8::Value"*
  br label %979

979:                                              ; preds = %968, %974
  %980 = phi %"class.v8::Value"* [ %973, %968 ], [ %978, %974 ]
  %981 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %982 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %981, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink19V8HTMLCanvasElement18wrapper_type_info_E, %"class.v8::Value"* %980) #9
  br i1 %982, label %983, label %1266

983:                                              ; preds = %979
  %984 = load i64*, i64** %43, align 8
  %985 = getelementptr inbounds i64, i64* %984, i64 1
  %986 = bitcast i64* %985 to %"class.v8::Isolate"**
  %987 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %986, align 8
  %988 = bitcast %"class.blink::ExceptionState"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %988) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %988, i8 -86, i64 56, i1 false) #9
  %989 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %989, align 8
  %990 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 0
  store i16 6, i16* %990, align 8
  %991 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 1
  store i16 0, i16* %991, align 2
  %992 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 2
  %993 = bitcast i8** %992 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %993, align 8
  %994 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %994, align 8
  %995 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 3
  store %"class.v8::Isolate"* %987, %"class.v8::Isolate"** %995, align 8
  %996 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 4
  store i32 0, i32* %996, align 8
  %997 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 5, i32 0, i32 0
  %998 = bitcast %"class.WTF::StringImpl"** %997 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %998, i8 0, i64 16, i1 false) #9
  %999 = load i32, i32* %39, align 8
  %1000 = icmp slt i32 %999, 6
  br i1 %1000, label %1001, label %1021, !prof !5

1001:                                             ; preds = %983
  %1002 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1002) #9
  %1003 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %999) #9
  %1004 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1003, %"class.WTF::StringImpl"** %1004, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #9
  %1005 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1004, align 8
  %1006 = icmp eq %"class.WTF::StringImpl"* %1005, null
  br i1 %1006, label %1020, label %1007

1007:                                             ; preds = %1001
  %1008 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1005, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1009 = load atomic i32, i32* %1008 monotonic, align 4
  %1010 = and i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1005, i64 0, i32 0
  %1013 = load i32, i32* %1012, align 4
  br i1 %1011, label %1014, label %1016

1014:                                             ; preds = %1007
  %1015 = add i32 %1013, -1
  store i32 %1015, i32* %1012, align 4
  br label %1016

1016:                                             ; preds = %1014, %1007
  %1017 = phi i32 [ %1015, %1014 ], [ %1013, %1007 ]
  %1018 = icmp eq i32 %1017, 0
  br i1 %1018, label %1019, label %1020

1019:                                             ; preds = %1016
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1005) #9
  br label %1020

1020:                                             ; preds = %1019, %1016, %1001
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1002) #9
  br label %1236

1021:                                             ; preds = %983
  %1022 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1023 = load i64*, i64** %1022, align 8
  %1024 = getelementptr inbounds i64, i64* %1023, i64 -1
  %1025 = bitcast i64* %1024 to %"class.v8::Object"*
  %1026 = load i64, i64* %1024, align 8
  %1027 = add i64 %1026, -1
  %1028 = inttoptr i64 %1027 to i32*
  %1029 = load i32, i32* %1028, align 4
  %1030 = and i64 %1026, -4294967296
  %1031 = zext i32 %1029 to i64
  %1032 = or i64 %1030, %1031
  %1033 = add i64 %1032, 7
  %1034 = inttoptr i64 %1033 to i16*
  %1035 = load i16, i16* %1034, align 2
  switch i16 %1035, label %1040 [
    i16 1057, label %1036
    i16 1056, label %1036
    i16 1040, label %1036
  ]

1036:                                             ; preds = %1021, %1021, %1021
  %1037 = add i64 %1026, 19
  %1038 = inttoptr i64 %1037 to i8**
  %1039 = load i8*, i8** %1038, align 1
  br label %1042

1040:                                             ; preds = %1021
  %1041 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1025, i32 1) #9
  br label %1042

1042:                                             ; preds = %1040, %1036
  %1043 = phi i8* [ %1039, %1036 ], [ %1041, %1040 ]
  %1044 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1025) #9
  %1045 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1044) #9
  %1046 = load i32, i32* %39, align 8
  %1047 = icmp sgt i32 %1046, 0
  br i1 %1047, label %1054, label %1048

1048:                                             ; preds = %1042
  %1049 = load i64*, i64** %43, align 8
  %1050 = getelementptr inbounds i64, i64* %1049, i64 1
  %1051 = load i64, i64* %1050, align 8
  %1052 = add i64 %1051, 160
  %1053 = inttoptr i64 %1052 to %"class.v8::Value"*
  br label %1057

1054:                                             ; preds = %1042
  %1055 = bitcast i64** %1022 to %"class.v8::Value"**
  %1056 = load %"class.v8::Value"*, %"class.v8::Value"** %1055, align 8
  br label %1057

1057:                                             ; preds = %1054, %1048
  %1058 = phi %"class.v8::Value"* [ %1053, %1048 ], [ %1056, %1054 ]
  %1059 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1058) #9
  br i1 %1059, label %1060, label %1063, !prof !4

1060:                                             ; preds = %1057
  %1061 = bitcast %"class.v8::Value"* %1058 to %"class.v8::Uint32"*
  %1062 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1061) #9
  br label %1072

1063:                                             ; preds = %1057
  %1064 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1058) #9
  br i1 %1064, label %1065, label %1068, !prof !4

1065:                                             ; preds = %1063
  %1066 = bitcast %"class.v8::Value"* %1058 to %"class.v8::Int32"*
  %1067 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1066) #9
  br label %1072

1068:                                             ; preds = %1063
  %1069 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %987, %"class.v8::Value"* %1058, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  %1070 = load i32, i32* %996, align 8
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1072, label %1236

1072:                                             ; preds = %1068, %1065, %1060
  %1073 = phi i32 [ %1069, %1068 ], [ %1067, %1065 ], [ %1062, %1060 ]
  %1074 = load i32, i32* %39, align 8
  %1075 = icmp sgt i32 %1074, 1
  br i1 %1075, label %1082, label %1076

1076:                                             ; preds = %1072
  %1077 = load i64*, i64** %43, align 8
  %1078 = getelementptr inbounds i64, i64* %1077, i64 1
  %1079 = load i64, i64* %1078, align 8
  %1080 = add i64 %1079, 160
  %1081 = inttoptr i64 %1080 to %"class.v8::Value"*
  br label %1086

1082:                                             ; preds = %1072
  %1083 = load i64*, i64** %1022, align 8
  %1084 = getelementptr inbounds i64, i64* %1083, i64 1
  %1085 = bitcast i64* %1084 to %"class.v8::Value"*
  br label %1086

1086:                                             ; preds = %1082, %1076
  %1087 = phi %"class.v8::Value"* [ %1081, %1076 ], [ %1085, %1082 ]
  %1088 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1087) #9
  br i1 %1088, label %1089, label %1092, !prof !4

1089:                                             ; preds = %1086
  %1090 = bitcast %"class.v8::Value"* %1087 to %"class.v8::Int32"*
  %1091 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1090) #9
  br label %1094

1092:                                             ; preds = %1086
  %1093 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %987, %"class.v8::Value"* %1087, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1094

1094:                                             ; preds = %1092, %1089
  %1095 = phi i32 [ %1091, %1089 ], [ %1093, %1092 ]
  %1096 = load i32, i32* %996, align 8
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1098, label %1236

1098:                                             ; preds = %1094
  %1099 = load i32, i32* %39, align 8
  %1100 = icmp sgt i32 %1099, 2
  br i1 %1100, label %1107, label %1101

1101:                                             ; preds = %1098
  %1102 = load i64*, i64** %43, align 8
  %1103 = getelementptr inbounds i64, i64* %1102, i64 1
  %1104 = load i64, i64* %1103, align 8
  %1105 = add i64 %1104, 160
  %1106 = inttoptr i64 %1105 to %"class.v8::Value"*
  br label %1111

1107:                                             ; preds = %1098
  %1108 = load i64*, i64** %1022, align 8
  %1109 = getelementptr inbounds i64, i64* %1108, i64 2
  %1110 = bitcast i64* %1109 to %"class.v8::Value"*
  br label %1111

1111:                                             ; preds = %1107, %1101
  %1112 = phi %"class.v8::Value"* [ %1106, %1101 ], [ %1110, %1107 ]
  %1113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1112) #9
  br i1 %1113, label %1114, label %1117, !prof !4

1114:                                             ; preds = %1111
  %1115 = bitcast %"class.v8::Value"* %1112 to %"class.v8::Int32"*
  %1116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1115) #9
  br label %1119

1117:                                             ; preds = %1111
  %1118 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %987, %"class.v8::Value"* %1112, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1119

1119:                                             ; preds = %1117, %1114
  %1120 = phi i32 [ %1116, %1114 ], [ %1118, %1117 ]
  %1121 = load i32, i32* %996, align 8
  %1122 = icmp eq i32 %1121, 0
  br i1 %1122, label %1123, label %1236

1123:                                             ; preds = %1119
  %1124 = load i32, i32* %39, align 8
  %1125 = icmp sgt i32 %1124, 3
  br i1 %1125, label %1132, label %1126

1126:                                             ; preds = %1123
  %1127 = load i64*, i64** %43, align 8
  %1128 = getelementptr inbounds i64, i64* %1127, i64 1
  %1129 = load i64, i64* %1128, align 8
  %1130 = add i64 %1129, 160
  %1131 = inttoptr i64 %1130 to %"class.v8::Value"*
  br label %1136

1132:                                             ; preds = %1123
  %1133 = load i64*, i64** %1022, align 8
  %1134 = getelementptr inbounds i64, i64* %1133, i64 3
  %1135 = bitcast i64* %1134 to %"class.v8::Value"*
  br label %1136

1136:                                             ; preds = %1132, %1126
  %1137 = phi %"class.v8::Value"* [ %1131, %1126 ], [ %1135, %1132 ]
  %1138 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1137) #9
  br i1 %1138, label %1139, label %1142, !prof !4

1139:                                             ; preds = %1136
  %1140 = bitcast %"class.v8::Value"* %1137 to %"class.v8::Uint32"*
  %1141 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1140) #9
  br label %1149

1142:                                             ; preds = %1136
  %1143 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1137) #9
  br i1 %1143, label %1144, label %1147, !prof !4

1144:                                             ; preds = %1142
  %1145 = bitcast %"class.v8::Value"* %1137 to %"class.v8::Int32"*
  %1146 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1145) #9
  br label %1149

1147:                                             ; preds = %1142
  %1148 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %987, %"class.v8::Value"* %1137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1149

1149:                                             ; preds = %1147, %1144, %1139
  %1150 = phi i32 [ %1141, %1139 ], [ %1146, %1144 ], [ %1148, %1147 ]
  %1151 = load i32, i32* %996, align 8
  %1152 = icmp eq i32 %1151, 0
  br i1 %1152, label %1153, label %1236

1153:                                             ; preds = %1149
  %1154 = load i32, i32* %39, align 8
  %1155 = icmp sgt i32 %1154, 4
  br i1 %1155, label %1162, label %1156

1156:                                             ; preds = %1153
  %1157 = load i64*, i64** %43, align 8
  %1158 = getelementptr inbounds i64, i64* %1157, i64 1
  %1159 = load i64, i64* %1158, align 8
  %1160 = add i64 %1159, 160
  %1161 = inttoptr i64 %1160 to %"class.v8::Value"*
  br label %1166

1162:                                             ; preds = %1153
  %1163 = load i64*, i64** %1022, align 8
  %1164 = getelementptr inbounds i64, i64* %1163, i64 4
  %1165 = bitcast i64* %1164 to %"class.v8::Value"*
  br label %1166

1166:                                             ; preds = %1162, %1156
  %1167 = phi %"class.v8::Value"* [ %1161, %1156 ], [ %1165, %1162 ]
  %1168 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1167) #9
  br i1 %1168, label %1169, label %1172, !prof !4

1169:                                             ; preds = %1166
  %1170 = bitcast %"class.v8::Value"* %1167 to %"class.v8::Uint32"*
  %1171 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1170) #9
  br label %1179

1172:                                             ; preds = %1166
  %1173 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1167) #9
  br i1 %1173, label %1174, label %1177, !prof !4

1174:                                             ; preds = %1172
  %1175 = bitcast %"class.v8::Value"* %1167 to %"class.v8::Int32"*
  %1176 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1175) #9
  br label %1179

1177:                                             ; preds = %1172
  %1178 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %987, %"class.v8::Value"* %1167, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1179

1179:                                             ; preds = %1177, %1174, %1169
  %1180 = phi i32 [ %1171, %1169 ], [ %1176, %1174 ], [ %1178, %1177 ]
  %1181 = load i32, i32* %996, align 8
  %1182 = icmp eq i32 %1181, 0
  br i1 %1182, label %1183, label %1236

1183:                                             ; preds = %1179
  %1184 = load i32, i32* %39, align 8
  %1185 = icmp sgt i32 %1184, 5
  br i1 %1185, label %1192, label %1186

1186:                                             ; preds = %1183
  %1187 = load i64*, i64** %43, align 8
  %1188 = getelementptr inbounds i64, i64* %1187, i64 1
  %1189 = load i64, i64* %1188, align 8
  %1190 = add i64 %1189, 160
  %1191 = inttoptr i64 %1190 to %"class.v8::Value"*
  br label %1196

1192:                                             ; preds = %1183
  %1193 = load i64*, i64** %1022, align 8
  %1194 = getelementptr inbounds i64, i64* %1193, i64 5
  %1195 = bitcast i64* %1194 to %"class.v8::Value"*
  br label %1196

1196:                                             ; preds = %1192, %1186
  %1197 = phi %"class.v8::Value"* [ %1191, %1186 ], [ %1195, %1192 ]
  %1198 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17HTMLCanvasElement18wrapper_type_info_E, align 8
  %1199 = ptrtoint %"class.v8::Isolate"* %987 to i64
  %1200 = add i64 %1199, 8
  %1201 = inttoptr i64 %1200 to %"class.blink::V8PerIsolateData"**
  %1202 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %1201, align 8
  %1203 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1202, %"struct.blink::WrapperTypeInfo"* %1198, %"class.v8::Value"* %1197) #9
  br i1 %1203, label %1204, label %1226

1204:                                             ; preds = %1196
  %1205 = bitcast %"class.v8::Value"* %1197 to i64*
  %1206 = load i64, i64* %1205, align 8
  %1207 = add i64 %1206, -1
  %1208 = inttoptr i64 %1207 to i32*
  %1209 = load i32, i32* %1208, align 4
  %1210 = and i64 %1206, -4294967296
  %1211 = zext i32 %1209 to i64
  %1212 = or i64 %1210, %1211
  %1213 = add i64 %1212, 7
  %1214 = inttoptr i64 %1213 to i16*
  %1215 = load i16, i16* %1214, align 2
  switch i16 %1215, label %1220 [
    i16 1057, label %1216
    i16 1056, label %1216
    i16 1040, label %1216
  ]

1216:                                             ; preds = %1204, %1204, %1204
  %1217 = add i64 %1206, 19
  %1218 = inttoptr i64 %1217 to i8**
  %1219 = load i8*, i8** %1218, align 1
  br label %1223

1220:                                             ; preds = %1204
  %1221 = bitcast %"class.v8::Value"* %1197 to %"class.v8::Object"*
  %1222 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1221, i32 1) #9
  br label %1223

1223:                                             ; preds = %1220, %1216
  %1224 = phi i8* [ %1219, %1216 ], [ %1222, %1220 ]
  %1225 = bitcast i8* %1224 to %"class.blink::HTMLCanvasElement"*
  br label %1227

1226:                                             ; preds = %1196
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %1198, i32 5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1227

1227:                                             ; preds = %1226, %1223
  %1228 = phi %"class.blink::HTMLCanvasElement"* [ %1225, %1223 ], [ null, %1226 ]
  %1229 = load i32, i32* %996, align 8
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1231, label %1236

1231:                                             ; preds = %1227
  %1232 = bitcast i8* %1043 to %"class.blink::WebGLRenderingContextBase"*
  %1233 = icmp eq %"class.blink::HTMLCanvasElement"* %1228, null
  %1234 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %1228, i64 0, i32 3
  %1235 = select i1 %1233, %"class.blink::CanvasRenderingContextHost"* null, %"class.blink::CanvasRenderingContextHost"* %1234
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_26CanvasRenderingContextHostERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %1232, %"class.blink::ExecutionContext"* %1045, i32 %1073, i32 %1095, i32 %1120, i32 %1150, i32 %1180, %"class.blink::CanvasRenderingContextHost"* %1235, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1236

1236:                                             ; preds = %1231, %1227, %1179, %1149, %1119, %1094, %1068, %1020
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %989, align 8
  %1237 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %1238 = load i64*, i64** %1237, align 8
  %1239 = icmp eq i64* %1238, null
  br i1 %1239, label %1249, label %1240

1240:                                             ; preds = %1236
  %1241 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %995, align 8
  %1242 = bitcast %"class.v8::Isolate"* %1241 to %"class.v8::internal::Isolate"*
  %1243 = load i64, i64* %1238, align 8
  %1244 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %1242, i64 %1243) #9
  %1245 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %1241) #9
  br i1 %1245, label %1249, label %1246

1246:                                             ; preds = %1240
  %1247 = bitcast i64* %1244 to %"class.v8::Value"*
  %1248 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %1241, %"class.v8::Value"* %1247) #9
  br label %1249

1249:                                             ; preds = %1246, %1240, %1236
  %1250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %997, align 8
  %1251 = icmp eq %"class.WTF::StringImpl"* %1250, null
  br i1 %1251, label %1265, label %1252

1252:                                             ; preds = %1249
  %1253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1254 = load atomic i32, i32* %1253 monotonic, align 4
  %1255 = and i32 %1254, 2
  %1256 = icmp eq i32 %1255, 0
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1250, i64 0, i32 0
  %1258 = load i32, i32* %1257, align 4
  br i1 %1256, label %1259, label %1261

1259:                                             ; preds = %1252
  %1260 = add i32 %1258, -1
  store i32 %1260, i32* %1257, align 4
  br label %1261

1261:                                             ; preds = %1259, %1252
  %1262 = phi i32 [ %1260, %1259 ], [ %1258, %1252 ]
  %1263 = icmp eq i32 %1262, 0
  br i1 %1263, label %1264, label %1265

1264:                                             ; preds = %1261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1250) #9
  br label %1265

1265:                                             ; preds = %1249, %1261, %1264
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %988) #9
  br label %2529

1266:                                             ; preds = %979
  %1267 = load i32, i32* %39, align 8
  %1268 = icmp sgt i32 %1267, 5
  br i1 %1268, label %1275, label %1269

1269:                                             ; preds = %1266
  %1270 = load i64*, i64** %43, align 8
  %1271 = getelementptr inbounds i64, i64* %1270, i64 1
  %1272 = load i64, i64* %1271, align 8
  %1273 = add i64 %1272, 160
  %1274 = inttoptr i64 %1273 to %"class.v8::Value"*
  br label %1280

1275:                                             ; preds = %1266
  %1276 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1277 = load i64*, i64** %1276, align 8
  %1278 = getelementptr inbounds i64, i64* %1277, i64 5
  %1279 = bitcast i64* %1278 to %"class.v8::Value"*
  br label %1280

1280:                                             ; preds = %1269, %1275
  %1281 = phi %"class.v8::Value"* [ %1274, %1269 ], [ %1279, %1275 ]
  %1282 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %1283 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1282, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8OffscreenCanvas18wrapper_type_info_E, %"class.v8::Value"* %1281) #9
  br i1 %1283, label %1284, label %1567

1284:                                             ; preds = %1280
  %1285 = load i64*, i64** %43, align 8
  %1286 = getelementptr inbounds i64, i64* %1285, i64 1
  %1287 = bitcast i64* %1286 to %"class.v8::Isolate"**
  %1288 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1287, align 8
  %1289 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1289) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1289, i8 -86, i64 56, i1 false) #9
  %1290 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1290, align 8
  %1291 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %1291, align 8
  %1292 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %1292, align 2
  %1293 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %1294 = bitcast i8** %1293 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %1294, align 8
  %1295 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %1295, align 8
  %1296 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %1288, %"class.v8::Isolate"** %1296, align 8
  %1297 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %1297, align 8
  %1298 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %1299 = bitcast %"class.WTF::StringImpl"** %1298 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1299, i8 0, i64 16, i1 false) #9
  %1300 = load i32, i32* %39, align 8
  %1301 = icmp slt i32 %1300, 6
  br i1 %1301, label %1302, label %1322, !prof !5

1302:                                             ; preds = %1284
  %1303 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1303) #9
  %1304 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %1300) #9
  %1305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1304, %"class.WTF::StringImpl"** %1305, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %1306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1305, align 8
  %1307 = icmp eq %"class.WTF::StringImpl"* %1306, null
  br i1 %1307, label %1321, label %1308

1308:                                             ; preds = %1302
  %1309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1310 = load atomic i32, i32* %1309 monotonic, align 4
  %1311 = and i32 %1310, 2
  %1312 = icmp eq i32 %1311, 0
  %1313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1306, i64 0, i32 0
  %1314 = load i32, i32* %1313, align 4
  br i1 %1312, label %1315, label %1317

1315:                                             ; preds = %1308
  %1316 = add i32 %1314, -1
  store i32 %1316, i32* %1313, align 4
  br label %1317

1317:                                             ; preds = %1315, %1308
  %1318 = phi i32 [ %1316, %1315 ], [ %1314, %1308 ]
  %1319 = icmp eq i32 %1318, 0
  br i1 %1319, label %1320, label %1321

1320:                                             ; preds = %1317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1306) #9
  br label %1321

1321:                                             ; preds = %1320, %1317, %1302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1303) #9
  br label %1537

1322:                                             ; preds = %1284
  %1323 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1324 = load i64*, i64** %1323, align 8
  %1325 = getelementptr inbounds i64, i64* %1324, i64 -1
  %1326 = bitcast i64* %1325 to %"class.v8::Object"*
  %1327 = load i64, i64* %1325, align 8
  %1328 = add i64 %1327, -1
  %1329 = inttoptr i64 %1328 to i32*
  %1330 = load i32, i32* %1329, align 4
  %1331 = and i64 %1327, -4294967296
  %1332 = zext i32 %1330 to i64
  %1333 = or i64 %1331, %1332
  %1334 = add i64 %1333, 7
  %1335 = inttoptr i64 %1334 to i16*
  %1336 = load i16, i16* %1335, align 2
  switch i16 %1336, label %1341 [
    i16 1057, label %1337
    i16 1056, label %1337
    i16 1040, label %1337
  ]

1337:                                             ; preds = %1322, %1322, %1322
  %1338 = add i64 %1327, 19
  %1339 = inttoptr i64 %1338 to i8**
  %1340 = load i8*, i8** %1339, align 1
  br label %1343

1341:                                             ; preds = %1322
  %1342 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1326, i32 1) #9
  br label %1343

1343:                                             ; preds = %1341, %1337
  %1344 = phi i8* [ %1340, %1337 ], [ %1342, %1341 ]
  %1345 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1326) #9
  %1346 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1345) #9
  %1347 = load i32, i32* %39, align 8
  %1348 = icmp sgt i32 %1347, 0
  br i1 %1348, label %1355, label %1349

1349:                                             ; preds = %1343
  %1350 = load i64*, i64** %43, align 8
  %1351 = getelementptr inbounds i64, i64* %1350, i64 1
  %1352 = load i64, i64* %1351, align 8
  %1353 = add i64 %1352, 160
  %1354 = inttoptr i64 %1353 to %"class.v8::Value"*
  br label %1358

1355:                                             ; preds = %1343
  %1356 = bitcast i64** %1323 to %"class.v8::Value"**
  %1357 = load %"class.v8::Value"*, %"class.v8::Value"** %1356, align 8
  br label %1358

1358:                                             ; preds = %1355, %1349
  %1359 = phi %"class.v8::Value"* [ %1354, %1349 ], [ %1357, %1355 ]
  %1360 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1359) #9
  br i1 %1360, label %1361, label %1364, !prof !4

1361:                                             ; preds = %1358
  %1362 = bitcast %"class.v8::Value"* %1359 to %"class.v8::Uint32"*
  %1363 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1362) #9
  br label %1373

1364:                                             ; preds = %1358
  %1365 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1359) #9
  br i1 %1365, label %1366, label %1369, !prof !4

1366:                                             ; preds = %1364
  %1367 = bitcast %"class.v8::Value"* %1359 to %"class.v8::Int32"*
  %1368 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1367) #9
  br label %1373

1369:                                             ; preds = %1364
  %1370 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1288, %"class.v8::Value"* %1359, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  %1371 = load i32, i32* %1297, align 8
  %1372 = icmp eq i32 %1371, 0
  br i1 %1372, label %1373, label %1537

1373:                                             ; preds = %1369, %1366, %1361
  %1374 = phi i32 [ %1370, %1369 ], [ %1368, %1366 ], [ %1363, %1361 ]
  %1375 = load i32, i32* %39, align 8
  %1376 = icmp sgt i32 %1375, 1
  br i1 %1376, label %1383, label %1377

1377:                                             ; preds = %1373
  %1378 = load i64*, i64** %43, align 8
  %1379 = getelementptr inbounds i64, i64* %1378, i64 1
  %1380 = load i64, i64* %1379, align 8
  %1381 = add i64 %1380, 160
  %1382 = inttoptr i64 %1381 to %"class.v8::Value"*
  br label %1387

1383:                                             ; preds = %1373
  %1384 = load i64*, i64** %1323, align 8
  %1385 = getelementptr inbounds i64, i64* %1384, i64 1
  %1386 = bitcast i64* %1385 to %"class.v8::Value"*
  br label %1387

1387:                                             ; preds = %1383, %1377
  %1388 = phi %"class.v8::Value"* [ %1382, %1377 ], [ %1386, %1383 ]
  %1389 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1388) #9
  br i1 %1389, label %1390, label %1393, !prof !4

1390:                                             ; preds = %1387
  %1391 = bitcast %"class.v8::Value"* %1388 to %"class.v8::Int32"*
  %1392 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1391) #9
  br label %1395

1393:                                             ; preds = %1387
  %1394 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1288, %"class.v8::Value"* %1388, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1395

1395:                                             ; preds = %1393, %1390
  %1396 = phi i32 [ %1392, %1390 ], [ %1394, %1393 ]
  %1397 = load i32, i32* %1297, align 8
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1399, label %1537

1399:                                             ; preds = %1395
  %1400 = load i32, i32* %39, align 8
  %1401 = icmp sgt i32 %1400, 2
  br i1 %1401, label %1408, label %1402

1402:                                             ; preds = %1399
  %1403 = load i64*, i64** %43, align 8
  %1404 = getelementptr inbounds i64, i64* %1403, i64 1
  %1405 = load i64, i64* %1404, align 8
  %1406 = add i64 %1405, 160
  %1407 = inttoptr i64 %1406 to %"class.v8::Value"*
  br label %1412

1408:                                             ; preds = %1399
  %1409 = load i64*, i64** %1323, align 8
  %1410 = getelementptr inbounds i64, i64* %1409, i64 2
  %1411 = bitcast i64* %1410 to %"class.v8::Value"*
  br label %1412

1412:                                             ; preds = %1408, %1402
  %1413 = phi %"class.v8::Value"* [ %1407, %1402 ], [ %1411, %1408 ]
  %1414 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1413) #9
  br i1 %1414, label %1415, label %1418, !prof !4

1415:                                             ; preds = %1412
  %1416 = bitcast %"class.v8::Value"* %1413 to %"class.v8::Int32"*
  %1417 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1416) #9
  br label %1420

1418:                                             ; preds = %1412
  %1419 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1288, %"class.v8::Value"* %1413, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1420

1420:                                             ; preds = %1418, %1415
  %1421 = phi i32 [ %1417, %1415 ], [ %1419, %1418 ]
  %1422 = load i32, i32* %1297, align 8
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1424, label %1537

1424:                                             ; preds = %1420
  %1425 = load i32, i32* %39, align 8
  %1426 = icmp sgt i32 %1425, 3
  br i1 %1426, label %1433, label %1427

1427:                                             ; preds = %1424
  %1428 = load i64*, i64** %43, align 8
  %1429 = getelementptr inbounds i64, i64* %1428, i64 1
  %1430 = load i64, i64* %1429, align 8
  %1431 = add i64 %1430, 160
  %1432 = inttoptr i64 %1431 to %"class.v8::Value"*
  br label %1437

1433:                                             ; preds = %1424
  %1434 = load i64*, i64** %1323, align 8
  %1435 = getelementptr inbounds i64, i64* %1434, i64 3
  %1436 = bitcast i64* %1435 to %"class.v8::Value"*
  br label %1437

1437:                                             ; preds = %1433, %1427
  %1438 = phi %"class.v8::Value"* [ %1432, %1427 ], [ %1436, %1433 ]
  %1439 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1438) #9
  br i1 %1439, label %1440, label %1443, !prof !4

1440:                                             ; preds = %1437
  %1441 = bitcast %"class.v8::Value"* %1438 to %"class.v8::Uint32"*
  %1442 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1441) #9
  br label %1450

1443:                                             ; preds = %1437
  %1444 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1438) #9
  br i1 %1444, label %1445, label %1448, !prof !4

1445:                                             ; preds = %1443
  %1446 = bitcast %"class.v8::Value"* %1438 to %"class.v8::Int32"*
  %1447 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1446) #9
  br label %1450

1448:                                             ; preds = %1443
  %1449 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1288, %"class.v8::Value"* %1438, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1450

1450:                                             ; preds = %1448, %1445, %1440
  %1451 = phi i32 [ %1442, %1440 ], [ %1447, %1445 ], [ %1449, %1448 ]
  %1452 = load i32, i32* %1297, align 8
  %1453 = icmp eq i32 %1452, 0
  br i1 %1453, label %1454, label %1537

1454:                                             ; preds = %1450
  %1455 = load i32, i32* %39, align 8
  %1456 = icmp sgt i32 %1455, 4
  br i1 %1456, label %1463, label %1457

1457:                                             ; preds = %1454
  %1458 = load i64*, i64** %43, align 8
  %1459 = getelementptr inbounds i64, i64* %1458, i64 1
  %1460 = load i64, i64* %1459, align 8
  %1461 = add i64 %1460, 160
  %1462 = inttoptr i64 %1461 to %"class.v8::Value"*
  br label %1467

1463:                                             ; preds = %1454
  %1464 = load i64*, i64** %1323, align 8
  %1465 = getelementptr inbounds i64, i64* %1464, i64 4
  %1466 = bitcast i64* %1465 to %"class.v8::Value"*
  br label %1467

1467:                                             ; preds = %1463, %1457
  %1468 = phi %"class.v8::Value"* [ %1462, %1457 ], [ %1466, %1463 ]
  %1469 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1468) #9
  br i1 %1469, label %1470, label %1473, !prof !4

1470:                                             ; preds = %1467
  %1471 = bitcast %"class.v8::Value"* %1468 to %"class.v8::Uint32"*
  %1472 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1471) #9
  br label %1480

1473:                                             ; preds = %1467
  %1474 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1468) #9
  br i1 %1474, label %1475, label %1478, !prof !4

1475:                                             ; preds = %1473
  %1476 = bitcast %"class.v8::Value"* %1468 to %"class.v8::Int32"*
  %1477 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1476) #9
  br label %1480

1478:                                             ; preds = %1473
  %1479 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1288, %"class.v8::Value"* %1468, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1480

1480:                                             ; preds = %1478, %1475, %1470
  %1481 = phi i32 [ %1472, %1470 ], [ %1477, %1475 ], [ %1479, %1478 ]
  %1482 = load i32, i32* %1297, align 8
  %1483 = icmp eq i32 %1482, 0
  br i1 %1483, label %1484, label %1537

1484:                                             ; preds = %1480
  %1485 = load i32, i32* %39, align 8
  %1486 = icmp sgt i32 %1485, 5
  br i1 %1486, label %1493, label %1487

1487:                                             ; preds = %1484
  %1488 = load i64*, i64** %43, align 8
  %1489 = getelementptr inbounds i64, i64* %1488, i64 1
  %1490 = load i64, i64* %1489, align 8
  %1491 = add i64 %1490, 160
  %1492 = inttoptr i64 %1491 to %"class.v8::Value"*
  br label %1497

1493:                                             ; preds = %1484
  %1494 = load i64*, i64** %1323, align 8
  %1495 = getelementptr inbounds i64, i64* %1494, i64 5
  %1496 = bitcast i64* %1495 to %"class.v8::Value"*
  br label %1497

1497:                                             ; preds = %1493, %1487
  %1498 = phi %"class.v8::Value"* [ %1492, %1487 ], [ %1496, %1493 ]
  %1499 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15OffscreenCanvas18wrapper_type_info_E, align 8
  %1500 = ptrtoint %"class.v8::Isolate"* %1288 to i64
  %1501 = add i64 %1500, 8
  %1502 = inttoptr i64 %1501 to %"class.blink::V8PerIsolateData"**
  %1503 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %1502, align 8
  %1504 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1503, %"struct.blink::WrapperTypeInfo"* %1499, %"class.v8::Value"* %1498) #9
  br i1 %1504, label %1505, label %1527

1505:                                             ; preds = %1497
  %1506 = bitcast %"class.v8::Value"* %1498 to i64*
  %1507 = load i64, i64* %1506, align 8
  %1508 = add i64 %1507, -1
  %1509 = inttoptr i64 %1508 to i32*
  %1510 = load i32, i32* %1509, align 4
  %1511 = and i64 %1507, -4294967296
  %1512 = zext i32 %1510 to i64
  %1513 = or i64 %1511, %1512
  %1514 = add i64 %1513, 7
  %1515 = inttoptr i64 %1514 to i16*
  %1516 = load i16, i16* %1515, align 2
  switch i16 %1516, label %1521 [
    i16 1057, label %1517
    i16 1056, label %1517
    i16 1040, label %1517
  ]

1517:                                             ; preds = %1505, %1505, %1505
  %1518 = add i64 %1507, 19
  %1519 = inttoptr i64 %1518 to i8**
  %1520 = load i8*, i8** %1519, align 1
  br label %1524

1521:                                             ; preds = %1505
  %1522 = bitcast %"class.v8::Value"* %1498 to %"class.v8::Object"*
  %1523 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1522, i32 1) #9
  br label %1524

1524:                                             ; preds = %1521, %1517
  %1525 = phi i8* [ %1520, %1517 ], [ %1523, %1521 ]
  %1526 = bitcast i8* %1525 to %"class.blink::OffscreenCanvas"*
  br label %1528

1527:                                             ; preds = %1497
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %1499, i32 5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1528

1528:                                             ; preds = %1527, %1524
  %1529 = phi %"class.blink::OffscreenCanvas"* [ %1526, %1524 ], [ null, %1527 ]
  %1530 = load i32, i32* %1297, align 8
  %1531 = icmp eq i32 %1530, 0
  br i1 %1531, label %1532, label %1537

1532:                                             ; preds = %1528
  %1533 = bitcast i8* %1344 to %"class.blink::WebGLRenderingContextBase"*
  %1534 = icmp eq %"class.blink::OffscreenCanvas"* %1529, null
  %1535 = getelementptr inbounds %"class.blink::OffscreenCanvas", %"class.blink::OffscreenCanvas"* %1529, i64 0, i32 2
  %1536 = select i1 %1534, %"class.blink::CanvasRenderingContextHost"* null, %"class.blink::CanvasRenderingContextHost"* %1535
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_26CanvasRenderingContextHostERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %1533, %"class.blink::ExecutionContext"* %1346, i32 %1374, i32 %1396, i32 %1421, i32 %1451, i32 %1481, %"class.blink::CanvasRenderingContextHost"* %1536, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1537

1537:                                             ; preds = %1532, %1528, %1480, %1450, %1420, %1395, %1369, %1321
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1290, align 8
  %1538 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %1539 = load i64*, i64** %1538, align 8
  %1540 = icmp eq i64* %1539, null
  br i1 %1540, label %1550, label %1541

1541:                                             ; preds = %1537
  %1542 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1296, align 8
  %1543 = bitcast %"class.v8::Isolate"* %1542 to %"class.v8::internal::Isolate"*
  %1544 = load i64, i64* %1539, align 8
  %1545 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %1543, i64 %1544) #9
  %1546 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %1542) #9
  br i1 %1546, label %1550, label %1547

1547:                                             ; preds = %1541
  %1548 = bitcast i64* %1545 to %"class.v8::Value"*
  %1549 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %1542, %"class.v8::Value"* %1548) #9
  br label %1550

1550:                                             ; preds = %1547, %1541, %1537
  %1551 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1298, align 8
  %1552 = icmp eq %"class.WTF::StringImpl"* %1551, null
  br i1 %1552, label %1566, label %1553

1553:                                             ; preds = %1550
  %1554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1555 = load atomic i32, i32* %1554 monotonic, align 4
  %1556 = and i32 %1555, 2
  %1557 = icmp eq i32 %1556, 0
  %1558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1551, i64 0, i32 0
  %1559 = load i32, i32* %1558, align 4
  br i1 %1557, label %1560, label %1562

1560:                                             ; preds = %1553
  %1561 = add i32 %1559, -1
  store i32 %1561, i32* %1558, align 4
  br label %1562

1562:                                             ; preds = %1560, %1553
  %1563 = phi i32 [ %1561, %1560 ], [ %1559, %1553 ]
  %1564 = icmp eq i32 %1563, 0
  br i1 %1564, label %1565, label %1566

1565:                                             ; preds = %1562
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1551) #9
  br label %1566

1566:                                             ; preds = %1550, %1562, %1565
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1289) #9
  br label %2529

1567:                                             ; preds = %1280
  %1568 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1569 = load i64*, i64** %1568, align 8
  %1570 = getelementptr inbounds i64, i64* %1569, i64 -1
  %1571 = bitcast i64* %1570 to %"class.v8::Object"*
  %1572 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1571) #9
  %1573 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1572) #9
  %1574 = icmp eq %"class.blink::ExecutionContext"* %1573, null
  %1575 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1573, i64 0, i32 4
  %1576 = select i1 %1574, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %1575
  %1577 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase16WebCodecsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %1576) #9
  br i1 %1577, label %1578, label %1874

1578:                                             ; preds = %1567
  %1579 = load i32, i32* %39, align 8
  %1580 = icmp sgt i32 %1579, 5
  br i1 %1580, label %1587, label %1581

1581:                                             ; preds = %1578
  %1582 = load i64*, i64** %43, align 8
  %1583 = getelementptr inbounds i64, i64* %1582, i64 1
  %1584 = load i64, i64* %1583, align 8
  %1585 = add i64 %1584, 160
  %1586 = inttoptr i64 %1585 to %"class.v8::Value"*
  br label %1591

1587:                                             ; preds = %1578
  %1588 = load i64*, i64** %1568, align 8
  %1589 = getelementptr inbounds i64, i64* %1588, i64 5
  %1590 = bitcast i64* %1589 to %"class.v8::Value"*
  br label %1591

1591:                                             ; preds = %1581, %1587
  %1592 = phi %"class.v8::Value"* [ %1586, %1581 ], [ %1590, %1587 ]
  %1593 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %1594 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1593, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink12V8VideoFrame18wrapper_type_info_E, %"class.v8::Value"* %1592) #9
  br i1 %1594, label %1595, label %1874

1595:                                             ; preds = %1591
  %1596 = load i64*, i64** %43, align 8
  %1597 = getelementptr inbounds i64, i64* %1596, i64 1
  %1598 = bitcast i64* %1597 to %"class.v8::Isolate"**
  %1599 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1598, align 8
  %1600 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1600) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1600, i8 -86, i64 56, i1 false) #9
  %1601 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1601, align 8
  %1602 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %1602, align 8
  %1603 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %1603, align 2
  %1604 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %1605 = bitcast i8** %1604 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %1605, align 8
  %1606 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %1606, align 8
  %1607 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %1599, %"class.v8::Isolate"** %1607, align 8
  %1608 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %1608, align 8
  %1609 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %1610 = bitcast %"class.WTF::StringImpl"** %1609 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1610, i8 0, i64 16, i1 false) #9
  %1611 = load i32, i32* %39, align 8
  %1612 = icmp slt i32 %1611, 6
  br i1 %1612, label %1613, label %1633, !prof !5

1613:                                             ; preds = %1595
  %1614 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1614) #9
  %1615 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %1611) #9
  %1616 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1615, %"class.WTF::StringImpl"** %1616, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %1617 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1616, align 8
  %1618 = icmp eq %"class.WTF::StringImpl"* %1617, null
  br i1 %1618, label %1632, label %1619

1619:                                             ; preds = %1613
  %1620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1617, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1621 = load atomic i32, i32* %1620 monotonic, align 4
  %1622 = and i32 %1621, 2
  %1623 = icmp eq i32 %1622, 0
  %1624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1617, i64 0, i32 0
  %1625 = load i32, i32* %1624, align 4
  br i1 %1623, label %1626, label %1628

1626:                                             ; preds = %1619
  %1627 = add i32 %1625, -1
  store i32 %1627, i32* %1624, align 4
  br label %1628

1628:                                             ; preds = %1626, %1619
  %1629 = phi i32 [ %1627, %1626 ], [ %1625, %1619 ]
  %1630 = icmp eq i32 %1629, 0
  br i1 %1630, label %1631, label %1632

1631:                                             ; preds = %1628
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1617) #9
  br label %1632

1632:                                             ; preds = %1631, %1628, %1613
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1614) #9
  br label %1844

1633:                                             ; preds = %1595
  %1634 = load i64*, i64** %1568, align 8
  %1635 = getelementptr inbounds i64, i64* %1634, i64 -1
  %1636 = bitcast i64* %1635 to %"class.v8::Object"*
  %1637 = load i64, i64* %1635, align 8
  %1638 = add i64 %1637, -1
  %1639 = inttoptr i64 %1638 to i32*
  %1640 = load i32, i32* %1639, align 4
  %1641 = and i64 %1637, -4294967296
  %1642 = zext i32 %1640 to i64
  %1643 = or i64 %1641, %1642
  %1644 = add i64 %1643, 7
  %1645 = inttoptr i64 %1644 to i16*
  %1646 = load i16, i16* %1645, align 2
  switch i16 %1646, label %1651 [
    i16 1057, label %1647
    i16 1056, label %1647
    i16 1040, label %1647
  ]

1647:                                             ; preds = %1633, %1633, %1633
  %1648 = add i64 %1637, 19
  %1649 = inttoptr i64 %1648 to i8**
  %1650 = load i8*, i8** %1649, align 1
  br label %1653

1651:                                             ; preds = %1633
  %1652 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1636, i32 1) #9
  br label %1653

1653:                                             ; preds = %1651, %1647
  %1654 = phi i8* [ %1650, %1647 ], [ %1652, %1651 ]
  %1655 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1636) #9
  %1656 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1655) #9
  %1657 = load i32, i32* %39, align 8
  %1658 = icmp sgt i32 %1657, 0
  br i1 %1658, label %1665, label %1659

1659:                                             ; preds = %1653
  %1660 = load i64*, i64** %43, align 8
  %1661 = getelementptr inbounds i64, i64* %1660, i64 1
  %1662 = load i64, i64* %1661, align 8
  %1663 = add i64 %1662, 160
  %1664 = inttoptr i64 %1663 to %"class.v8::Value"*
  br label %1668

1665:                                             ; preds = %1653
  %1666 = bitcast i64** %1568 to %"class.v8::Value"**
  %1667 = load %"class.v8::Value"*, %"class.v8::Value"** %1666, align 8
  br label %1668

1668:                                             ; preds = %1665, %1659
  %1669 = phi %"class.v8::Value"* [ %1664, %1659 ], [ %1667, %1665 ]
  %1670 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1669) #9
  br i1 %1670, label %1671, label %1674, !prof !4

1671:                                             ; preds = %1668
  %1672 = bitcast %"class.v8::Value"* %1669 to %"class.v8::Uint32"*
  %1673 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1672) #9
  br label %1683

1674:                                             ; preds = %1668
  %1675 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1669) #9
  br i1 %1675, label %1676, label %1679, !prof !4

1676:                                             ; preds = %1674
  %1677 = bitcast %"class.v8::Value"* %1669 to %"class.v8::Int32"*
  %1678 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1677) #9
  br label %1683

1679:                                             ; preds = %1674
  %1680 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1599, %"class.v8::Value"* %1669, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  %1681 = load i32, i32* %1608, align 8
  %1682 = icmp eq i32 %1681, 0
  br i1 %1682, label %1683, label %1844

1683:                                             ; preds = %1679, %1676, %1671
  %1684 = phi i32 [ %1680, %1679 ], [ %1678, %1676 ], [ %1673, %1671 ]
  %1685 = load i32, i32* %39, align 8
  %1686 = icmp sgt i32 %1685, 1
  br i1 %1686, label %1693, label %1687

1687:                                             ; preds = %1683
  %1688 = load i64*, i64** %43, align 8
  %1689 = getelementptr inbounds i64, i64* %1688, i64 1
  %1690 = load i64, i64* %1689, align 8
  %1691 = add i64 %1690, 160
  %1692 = inttoptr i64 %1691 to %"class.v8::Value"*
  br label %1697

1693:                                             ; preds = %1683
  %1694 = load i64*, i64** %1568, align 8
  %1695 = getelementptr inbounds i64, i64* %1694, i64 1
  %1696 = bitcast i64* %1695 to %"class.v8::Value"*
  br label %1697

1697:                                             ; preds = %1693, %1687
  %1698 = phi %"class.v8::Value"* [ %1692, %1687 ], [ %1696, %1693 ]
  %1699 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1698) #9
  br i1 %1699, label %1700, label %1703, !prof !4

1700:                                             ; preds = %1697
  %1701 = bitcast %"class.v8::Value"* %1698 to %"class.v8::Int32"*
  %1702 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1701) #9
  br label %1705

1703:                                             ; preds = %1697
  %1704 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1599, %"class.v8::Value"* %1698, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1705

1705:                                             ; preds = %1703, %1700
  %1706 = phi i32 [ %1702, %1700 ], [ %1704, %1703 ]
  %1707 = load i32, i32* %1608, align 8
  %1708 = icmp eq i32 %1707, 0
  br i1 %1708, label %1709, label %1844

1709:                                             ; preds = %1705
  %1710 = load i32, i32* %39, align 8
  %1711 = icmp sgt i32 %1710, 2
  br i1 %1711, label %1718, label %1712

1712:                                             ; preds = %1709
  %1713 = load i64*, i64** %43, align 8
  %1714 = getelementptr inbounds i64, i64* %1713, i64 1
  %1715 = load i64, i64* %1714, align 8
  %1716 = add i64 %1715, 160
  %1717 = inttoptr i64 %1716 to %"class.v8::Value"*
  br label %1722

1718:                                             ; preds = %1709
  %1719 = load i64*, i64** %1568, align 8
  %1720 = getelementptr inbounds i64, i64* %1719, i64 2
  %1721 = bitcast i64* %1720 to %"class.v8::Value"*
  br label %1722

1722:                                             ; preds = %1718, %1712
  %1723 = phi %"class.v8::Value"* [ %1717, %1712 ], [ %1721, %1718 ]
  %1724 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1723) #9
  br i1 %1724, label %1725, label %1728, !prof !4

1725:                                             ; preds = %1722
  %1726 = bitcast %"class.v8::Value"* %1723 to %"class.v8::Int32"*
  %1727 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1726) #9
  br label %1730

1728:                                             ; preds = %1722
  %1729 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1599, %"class.v8::Value"* %1723, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1730

1730:                                             ; preds = %1728, %1725
  %1731 = phi i32 [ %1727, %1725 ], [ %1729, %1728 ]
  %1732 = load i32, i32* %1608, align 8
  %1733 = icmp eq i32 %1732, 0
  br i1 %1733, label %1734, label %1844

1734:                                             ; preds = %1730
  %1735 = load i32, i32* %39, align 8
  %1736 = icmp sgt i32 %1735, 3
  br i1 %1736, label %1743, label %1737

1737:                                             ; preds = %1734
  %1738 = load i64*, i64** %43, align 8
  %1739 = getelementptr inbounds i64, i64* %1738, i64 1
  %1740 = load i64, i64* %1739, align 8
  %1741 = add i64 %1740, 160
  %1742 = inttoptr i64 %1741 to %"class.v8::Value"*
  br label %1747

1743:                                             ; preds = %1734
  %1744 = load i64*, i64** %1568, align 8
  %1745 = getelementptr inbounds i64, i64* %1744, i64 3
  %1746 = bitcast i64* %1745 to %"class.v8::Value"*
  br label %1747

1747:                                             ; preds = %1743, %1737
  %1748 = phi %"class.v8::Value"* [ %1742, %1737 ], [ %1746, %1743 ]
  %1749 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1748) #9
  br i1 %1749, label %1750, label %1753, !prof !4

1750:                                             ; preds = %1747
  %1751 = bitcast %"class.v8::Value"* %1748 to %"class.v8::Uint32"*
  %1752 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1751) #9
  br label %1760

1753:                                             ; preds = %1747
  %1754 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1748) #9
  br i1 %1754, label %1755, label %1758, !prof !4

1755:                                             ; preds = %1753
  %1756 = bitcast %"class.v8::Value"* %1748 to %"class.v8::Int32"*
  %1757 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1756) #9
  br label %1760

1758:                                             ; preds = %1753
  %1759 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1599, %"class.v8::Value"* %1748, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1760

1760:                                             ; preds = %1758, %1755, %1750
  %1761 = phi i32 [ %1752, %1750 ], [ %1757, %1755 ], [ %1759, %1758 ]
  %1762 = load i32, i32* %1608, align 8
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1764, label %1844

1764:                                             ; preds = %1760
  %1765 = load i32, i32* %39, align 8
  %1766 = icmp sgt i32 %1765, 4
  br i1 %1766, label %1773, label %1767

1767:                                             ; preds = %1764
  %1768 = load i64*, i64** %43, align 8
  %1769 = getelementptr inbounds i64, i64* %1768, i64 1
  %1770 = load i64, i64* %1769, align 8
  %1771 = add i64 %1770, 160
  %1772 = inttoptr i64 %1771 to %"class.v8::Value"*
  br label %1777

1773:                                             ; preds = %1764
  %1774 = load i64*, i64** %1568, align 8
  %1775 = getelementptr inbounds i64, i64* %1774, i64 4
  %1776 = bitcast i64* %1775 to %"class.v8::Value"*
  br label %1777

1777:                                             ; preds = %1773, %1767
  %1778 = phi %"class.v8::Value"* [ %1772, %1767 ], [ %1776, %1773 ]
  %1779 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1778) #9
  br i1 %1779, label %1780, label %1783, !prof !4

1780:                                             ; preds = %1777
  %1781 = bitcast %"class.v8::Value"* %1778 to %"class.v8::Uint32"*
  %1782 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1781) #9
  br label %1790

1783:                                             ; preds = %1777
  %1784 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1778) #9
  br i1 %1784, label %1785, label %1788, !prof !4

1785:                                             ; preds = %1783
  %1786 = bitcast %"class.v8::Value"* %1778 to %"class.v8::Int32"*
  %1787 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1786) #9
  br label %1790

1788:                                             ; preds = %1783
  %1789 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1599, %"class.v8::Value"* %1778, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1790

1790:                                             ; preds = %1788, %1785, %1780
  %1791 = phi i32 [ %1782, %1780 ], [ %1787, %1785 ], [ %1789, %1788 ]
  %1792 = load i32, i32* %1608, align 8
  %1793 = icmp eq i32 %1792, 0
  br i1 %1793, label %1794, label %1844

1794:                                             ; preds = %1790
  %1795 = load i32, i32* %39, align 8
  %1796 = icmp sgt i32 %1795, 5
  br i1 %1796, label %1803, label %1797

1797:                                             ; preds = %1794
  %1798 = load i64*, i64** %43, align 8
  %1799 = getelementptr inbounds i64, i64* %1798, i64 1
  %1800 = load i64, i64* %1799, align 8
  %1801 = add i64 %1800, 160
  %1802 = inttoptr i64 %1801 to %"class.v8::Value"*
  br label %1807

1803:                                             ; preds = %1794
  %1804 = load i64*, i64** %1568, align 8
  %1805 = getelementptr inbounds i64, i64* %1804, i64 5
  %1806 = bitcast i64* %1805 to %"class.v8::Value"*
  br label %1807

1807:                                             ; preds = %1803, %1797
  %1808 = phi %"class.v8::Value"* [ %1802, %1797 ], [ %1806, %1803 ]
  %1809 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10VideoFrame18wrapper_type_info_E, align 8
  %1810 = ptrtoint %"class.v8::Isolate"* %1599 to i64
  %1811 = add i64 %1810, 8
  %1812 = inttoptr i64 %1811 to %"class.blink::V8PerIsolateData"**
  %1813 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %1812, align 8
  %1814 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1813, %"struct.blink::WrapperTypeInfo"* %1809, %"class.v8::Value"* %1808) #9
  br i1 %1814, label %1815, label %1837

1815:                                             ; preds = %1807
  %1816 = bitcast %"class.v8::Value"* %1808 to i64*
  %1817 = load i64, i64* %1816, align 8
  %1818 = add i64 %1817, -1
  %1819 = inttoptr i64 %1818 to i32*
  %1820 = load i32, i32* %1819, align 4
  %1821 = and i64 %1817, -4294967296
  %1822 = zext i32 %1820 to i64
  %1823 = or i64 %1821, %1822
  %1824 = add i64 %1823, 7
  %1825 = inttoptr i64 %1824 to i16*
  %1826 = load i16, i16* %1825, align 2
  switch i16 %1826, label %1831 [
    i16 1057, label %1827
    i16 1056, label %1827
    i16 1040, label %1827
  ]

1827:                                             ; preds = %1815, %1815, %1815
  %1828 = add i64 %1817, 19
  %1829 = inttoptr i64 %1828 to i8**
  %1830 = load i8*, i8** %1829, align 1
  br label %1834

1831:                                             ; preds = %1815
  %1832 = bitcast %"class.v8::Value"* %1808 to %"class.v8::Object"*
  %1833 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1832, i32 1) #9
  br label %1834

1834:                                             ; preds = %1831, %1827
  %1835 = phi i8* [ %1830, %1827 ], [ %1833, %1831 ]
  %1836 = bitcast i8* %1835 to %"class.blink::VideoFrame"*
  br label %1838

1837:                                             ; preds = %1807
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %1809, i32 5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1838

1838:                                             ; preds = %1837, %1834
  %1839 = phi %"class.blink::VideoFrame"* [ %1836, %1834 ], [ null, %1837 ]
  %1840 = load i32, i32* %1608, align 8
  %1841 = icmp eq i32 %1840, 0
  br i1 %1841, label %1842, label %1844

1842:                                             ; preds = %1838
  %1843 = bitcast i8* %1654 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_10VideoFrameERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %1843, %"class.blink::ExecutionContext"* %1656, i32 %1684, i32 %1706, i32 %1731, i32 %1761, i32 %1791, %"class.blink::VideoFrame"* %1839, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1844

1844:                                             ; preds = %1842, %1838, %1790, %1760, %1730, %1705, %1679, %1632
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1601, align 8
  %1845 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %1846 = load i64*, i64** %1845, align 8
  %1847 = icmp eq i64* %1846, null
  br i1 %1847, label %1857, label %1848

1848:                                             ; preds = %1844
  %1849 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1607, align 8
  %1850 = bitcast %"class.v8::Isolate"* %1849 to %"class.v8::internal::Isolate"*
  %1851 = load i64, i64* %1846, align 8
  %1852 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %1850, i64 %1851) #9
  %1853 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %1849) #9
  br i1 %1853, label %1857, label %1854

1854:                                             ; preds = %1848
  %1855 = bitcast i64* %1852 to %"class.v8::Value"*
  %1856 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %1849, %"class.v8::Value"* %1855) #9
  br label %1857

1857:                                             ; preds = %1854, %1848, %1844
  %1858 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1609, align 8
  %1859 = icmp eq %"class.WTF::StringImpl"* %1858, null
  br i1 %1859, label %1873, label %1860

1860:                                             ; preds = %1857
  %1861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1858, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1862 = load atomic i32, i32* %1861 monotonic, align 4
  %1863 = and i32 %1862, 2
  %1864 = icmp eq i32 %1863, 0
  %1865 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1858, i64 0, i32 0
  %1866 = load i32, i32* %1865, align 4
  br i1 %1864, label %1867, label %1869

1867:                                             ; preds = %1860
  %1868 = add i32 %1866, -1
  store i32 %1868, i32* %1865, align 4
  br label %1869

1869:                                             ; preds = %1867, %1860
  %1870 = phi i32 [ %1868, %1867 ], [ %1866, %1860 ]
  %1871 = icmp eq i32 %1870, 0
  br i1 %1871, label %1872, label %1873

1872:                                             ; preds = %1869
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1858) #9
  br label %1873

1873:                                             ; preds = %1857, %1869, %1872
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1600) #9
  br label %2529

1874:                                             ; preds = %1591, %1567
  %1875 = load i32, i32* %39, align 8
  %1876 = icmp sgt i32 %1875, 5
  br i1 %1876, label %1883, label %1877

1877:                                             ; preds = %1874
  %1878 = load i64*, i64** %43, align 8
  %1879 = getelementptr inbounds i64, i64* %1878, i64 1
  %1880 = load i64, i64* %1879, align 8
  %1881 = add i64 %1880, 160
  %1882 = inttoptr i64 %1881 to %"class.v8::Value"*
  br label %1887

1883:                                             ; preds = %1874
  %1884 = load i64*, i64** %1568, align 8
  %1885 = getelementptr inbounds i64, i64* %1884, i64 5
  %1886 = bitcast i64* %1885 to %"class.v8::Value"*
  br label %1887

1887:                                             ; preds = %1877, %1883
  %1888 = phi %"class.v8::Value"* [ %1882, %1877 ], [ %1886, %1883 ]
  %1889 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %1890 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1889, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink11V8ImageData18wrapper_type_info_E, %"class.v8::Value"* %1888) #9
  br i1 %1890, label %1891, label %2168

1891:                                             ; preds = %1887
  %1892 = load i64*, i64** %43, align 8
  %1893 = getelementptr inbounds i64, i64* %1892, i64 1
  %1894 = bitcast i64* %1893 to %"class.v8::Isolate"**
  %1895 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1894, align 8
  %1896 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1896) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1896, i8 -86, i64 56, i1 false) #9
  %1897 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1897, align 8
  %1898 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %1898, align 8
  %1899 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %1899, align 2
  %1900 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %1901 = bitcast i8** %1900 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %1901, align 8
  %1902 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %1902, align 8
  %1903 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %1895, %"class.v8::Isolate"** %1903, align 8
  %1904 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %1904, align 8
  %1905 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %1906 = bitcast %"class.WTF::StringImpl"** %1905 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1906, i8 0, i64 16, i1 false) #9
  %1907 = load i32, i32* %39, align 8
  %1908 = icmp slt i32 %1907, 6
  br i1 %1908, label %1909, label %1929, !prof !5

1909:                                             ; preds = %1891
  %1910 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1910) #9
  %1911 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %1907) #9
  %1912 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1911, %"class.WTF::StringImpl"** %1912, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %1913 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1912, align 8
  %1914 = icmp eq %"class.WTF::StringImpl"* %1913, null
  br i1 %1914, label %1928, label %1915

1915:                                             ; preds = %1909
  %1916 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1913, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1917 = load atomic i32, i32* %1916 monotonic, align 4
  %1918 = and i32 %1917, 2
  %1919 = icmp eq i32 %1918, 0
  %1920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1913, i64 0, i32 0
  %1921 = load i32, i32* %1920, align 4
  br i1 %1919, label %1922, label %1924

1922:                                             ; preds = %1915
  %1923 = add i32 %1921, -1
  store i32 %1923, i32* %1920, align 4
  br label %1924

1924:                                             ; preds = %1922, %1915
  %1925 = phi i32 [ %1923, %1922 ], [ %1921, %1915 ]
  %1926 = icmp eq i32 %1925, 0
  br i1 %1926, label %1927, label %1928

1927:                                             ; preds = %1924
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1913) #9
  br label %1928

1928:                                             ; preds = %1927, %1924, %1909
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1910) #9
  br label %2138

1929:                                             ; preds = %1891
  %1930 = load i64*, i64** %1568, align 8
  %1931 = getelementptr inbounds i64, i64* %1930, i64 -1
  %1932 = load i64, i64* %1931, align 8
  %1933 = add i64 %1932, -1
  %1934 = inttoptr i64 %1933 to i32*
  %1935 = load i32, i32* %1934, align 4
  %1936 = and i64 %1932, -4294967296
  %1937 = zext i32 %1935 to i64
  %1938 = or i64 %1936, %1937
  %1939 = add i64 %1938, 7
  %1940 = inttoptr i64 %1939 to i16*
  %1941 = load i16, i16* %1940, align 2
  switch i16 %1941, label %1947 [
    i16 1057, label %1942
    i16 1056, label %1942
    i16 1040, label %1942
  ]

1942:                                             ; preds = %1929, %1929, %1929
  %1943 = bitcast i64* %1930 to %"class.v8::Value"*
  %1944 = add i64 %1932, 19
  %1945 = inttoptr i64 %1944 to i8**
  %1946 = load i8*, i8** %1945, align 1
  br label %1961

1947:                                             ; preds = %1929
  %1948 = bitcast i64* %1931 to %"class.v8::Object"*
  %1949 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1948, i32 1) #9
  %1950 = load i32, i32* %39, align 8
  %1951 = icmp sgt i32 %1950, 0
  br i1 %1951, label %1952, label %1955

1952:                                             ; preds = %1947
  %1953 = bitcast i64** %1568 to %"class.v8::Value"**
  %1954 = load %"class.v8::Value"*, %"class.v8::Value"** %1953, align 8
  br label %1961

1955:                                             ; preds = %1947
  %1956 = load i64*, i64** %43, align 8
  %1957 = getelementptr inbounds i64, i64* %1956, i64 1
  %1958 = load i64, i64* %1957, align 8
  %1959 = add i64 %1958, 160
  %1960 = inttoptr i64 %1959 to %"class.v8::Value"*
  br label %1961

1961:                                             ; preds = %1942, %1952, %1955
  %1962 = phi i8* [ %1949, %1955 ], [ %1946, %1942 ], [ %1949, %1952 ]
  %1963 = phi %"class.v8::Value"* [ %1960, %1955 ], [ %1943, %1942 ], [ %1954, %1952 ]
  %1964 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1963) #9
  br i1 %1964, label %1965, label %1968, !prof !4

1965:                                             ; preds = %1961
  %1966 = bitcast %"class.v8::Value"* %1963 to %"class.v8::Uint32"*
  %1967 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1966) #9
  br label %1977

1968:                                             ; preds = %1961
  %1969 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1963) #9
  br i1 %1969, label %1970, label %1973, !prof !4

1970:                                             ; preds = %1968
  %1971 = bitcast %"class.v8::Value"* %1963 to %"class.v8::Int32"*
  %1972 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1971) #9
  br label %1977

1973:                                             ; preds = %1968
  %1974 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1895, %"class.v8::Value"* %1963, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  %1975 = load i32, i32* %1904, align 8
  %1976 = icmp eq i32 %1975, 0
  br i1 %1976, label %1977, label %2138

1977:                                             ; preds = %1973, %1970, %1965
  %1978 = phi i32 [ %1974, %1973 ], [ %1972, %1970 ], [ %1967, %1965 ]
  %1979 = load i32, i32* %39, align 8
  %1980 = icmp sgt i32 %1979, 1
  br i1 %1980, label %1987, label %1981

1981:                                             ; preds = %1977
  %1982 = load i64*, i64** %43, align 8
  %1983 = getelementptr inbounds i64, i64* %1982, i64 1
  %1984 = load i64, i64* %1983, align 8
  %1985 = add i64 %1984, 160
  %1986 = inttoptr i64 %1985 to %"class.v8::Value"*
  br label %1991

1987:                                             ; preds = %1977
  %1988 = load i64*, i64** %1568, align 8
  %1989 = getelementptr inbounds i64, i64* %1988, i64 1
  %1990 = bitcast i64* %1989 to %"class.v8::Value"*
  br label %1991

1991:                                             ; preds = %1987, %1981
  %1992 = phi %"class.v8::Value"* [ %1986, %1981 ], [ %1990, %1987 ]
  %1993 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1992) #9
  br i1 %1993, label %1994, label %1997, !prof !4

1994:                                             ; preds = %1991
  %1995 = bitcast %"class.v8::Value"* %1992 to %"class.v8::Int32"*
  %1996 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1995) #9
  br label %1999

1997:                                             ; preds = %1991
  %1998 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1895, %"class.v8::Value"* %1992, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %1999

1999:                                             ; preds = %1997, %1994
  %2000 = phi i32 [ %1996, %1994 ], [ %1998, %1997 ]
  %2001 = load i32, i32* %1904, align 8
  %2002 = icmp eq i32 %2001, 0
  br i1 %2002, label %2003, label %2138

2003:                                             ; preds = %1999
  %2004 = load i32, i32* %39, align 8
  %2005 = icmp sgt i32 %2004, 2
  br i1 %2005, label %2012, label %2006

2006:                                             ; preds = %2003
  %2007 = load i64*, i64** %43, align 8
  %2008 = getelementptr inbounds i64, i64* %2007, i64 1
  %2009 = load i64, i64* %2008, align 8
  %2010 = add i64 %2009, 160
  %2011 = inttoptr i64 %2010 to %"class.v8::Value"*
  br label %2016

2012:                                             ; preds = %2003
  %2013 = load i64*, i64** %1568, align 8
  %2014 = getelementptr inbounds i64, i64* %2013, i64 2
  %2015 = bitcast i64* %2014 to %"class.v8::Value"*
  br label %2016

2016:                                             ; preds = %2012, %2006
  %2017 = phi %"class.v8::Value"* [ %2011, %2006 ], [ %2015, %2012 ]
  %2018 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2017) #9
  br i1 %2018, label %2019, label %2022, !prof !4

2019:                                             ; preds = %2016
  %2020 = bitcast %"class.v8::Value"* %2017 to %"class.v8::Int32"*
  %2021 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2020) #9
  br label %2024

2022:                                             ; preds = %2016
  %2023 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1895, %"class.v8::Value"* %2017, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2024

2024:                                             ; preds = %2022, %2019
  %2025 = phi i32 [ %2021, %2019 ], [ %2023, %2022 ]
  %2026 = load i32, i32* %1904, align 8
  %2027 = icmp eq i32 %2026, 0
  br i1 %2027, label %2028, label %2138

2028:                                             ; preds = %2024
  %2029 = load i32, i32* %39, align 8
  %2030 = icmp sgt i32 %2029, 3
  br i1 %2030, label %2037, label %2031

2031:                                             ; preds = %2028
  %2032 = load i64*, i64** %43, align 8
  %2033 = getelementptr inbounds i64, i64* %2032, i64 1
  %2034 = load i64, i64* %2033, align 8
  %2035 = add i64 %2034, 160
  %2036 = inttoptr i64 %2035 to %"class.v8::Value"*
  br label %2041

2037:                                             ; preds = %2028
  %2038 = load i64*, i64** %1568, align 8
  %2039 = getelementptr inbounds i64, i64* %2038, i64 3
  %2040 = bitcast i64* %2039 to %"class.v8::Value"*
  br label %2041

2041:                                             ; preds = %2037, %2031
  %2042 = phi %"class.v8::Value"* [ %2036, %2031 ], [ %2040, %2037 ]
  %2043 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2042) #9
  br i1 %2043, label %2044, label %2047, !prof !4

2044:                                             ; preds = %2041
  %2045 = bitcast %"class.v8::Value"* %2042 to %"class.v8::Uint32"*
  %2046 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2045) #9
  br label %2054

2047:                                             ; preds = %2041
  %2048 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2042) #9
  br i1 %2048, label %2049, label %2052, !prof !4

2049:                                             ; preds = %2047
  %2050 = bitcast %"class.v8::Value"* %2042 to %"class.v8::Int32"*
  %2051 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2050) #9
  br label %2054

2052:                                             ; preds = %2047
  %2053 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1895, %"class.v8::Value"* %2042, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2054

2054:                                             ; preds = %2052, %2049, %2044
  %2055 = phi i32 [ %2046, %2044 ], [ %2051, %2049 ], [ %2053, %2052 ]
  %2056 = load i32, i32* %1904, align 8
  %2057 = icmp eq i32 %2056, 0
  br i1 %2057, label %2058, label %2138

2058:                                             ; preds = %2054
  %2059 = load i32, i32* %39, align 8
  %2060 = icmp sgt i32 %2059, 4
  br i1 %2060, label %2067, label %2061

2061:                                             ; preds = %2058
  %2062 = load i64*, i64** %43, align 8
  %2063 = getelementptr inbounds i64, i64* %2062, i64 1
  %2064 = load i64, i64* %2063, align 8
  %2065 = add i64 %2064, 160
  %2066 = inttoptr i64 %2065 to %"class.v8::Value"*
  br label %2071

2067:                                             ; preds = %2058
  %2068 = load i64*, i64** %1568, align 8
  %2069 = getelementptr inbounds i64, i64* %2068, i64 4
  %2070 = bitcast i64* %2069 to %"class.v8::Value"*
  br label %2071

2071:                                             ; preds = %2067, %2061
  %2072 = phi %"class.v8::Value"* [ %2066, %2061 ], [ %2070, %2067 ]
  %2073 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2072) #9
  br i1 %2073, label %2074, label %2077, !prof !4

2074:                                             ; preds = %2071
  %2075 = bitcast %"class.v8::Value"* %2072 to %"class.v8::Uint32"*
  %2076 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2075) #9
  br label %2084

2077:                                             ; preds = %2071
  %2078 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2072) #9
  br i1 %2078, label %2079, label %2082, !prof !4

2079:                                             ; preds = %2077
  %2080 = bitcast %"class.v8::Value"* %2072 to %"class.v8::Int32"*
  %2081 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2080) #9
  br label %2084

2082:                                             ; preds = %2077
  %2083 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1895, %"class.v8::Value"* %2072, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2084

2084:                                             ; preds = %2082, %2079, %2074
  %2085 = phi i32 [ %2076, %2074 ], [ %2081, %2079 ], [ %2083, %2082 ]
  %2086 = load i32, i32* %1904, align 8
  %2087 = icmp eq i32 %2086, 0
  br i1 %2087, label %2088, label %2138

2088:                                             ; preds = %2084
  %2089 = load i32, i32* %39, align 8
  %2090 = icmp sgt i32 %2089, 5
  br i1 %2090, label %2097, label %2091

2091:                                             ; preds = %2088
  %2092 = load i64*, i64** %43, align 8
  %2093 = getelementptr inbounds i64, i64* %2092, i64 1
  %2094 = load i64, i64* %2093, align 8
  %2095 = add i64 %2094, 160
  %2096 = inttoptr i64 %2095 to %"class.v8::Value"*
  br label %2101

2097:                                             ; preds = %2088
  %2098 = load i64*, i64** %1568, align 8
  %2099 = getelementptr inbounds i64, i64* %2098, i64 5
  %2100 = bitcast i64* %2099 to %"class.v8::Value"*
  br label %2101

2101:                                             ; preds = %2097, %2091
  %2102 = phi %"class.v8::Value"* [ %2096, %2091 ], [ %2100, %2097 ]
  %2103 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink9ImageData18wrapper_type_info_E, align 8
  %2104 = ptrtoint %"class.v8::Isolate"* %1895 to i64
  %2105 = add i64 %2104, 8
  %2106 = inttoptr i64 %2105 to %"class.blink::V8PerIsolateData"**
  %2107 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2106, align 8
  %2108 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2107, %"struct.blink::WrapperTypeInfo"* %2103, %"class.v8::Value"* %2102) #9
  br i1 %2108, label %2109, label %2131

2109:                                             ; preds = %2101
  %2110 = bitcast %"class.v8::Value"* %2102 to i64*
  %2111 = load i64, i64* %2110, align 8
  %2112 = add i64 %2111, -1
  %2113 = inttoptr i64 %2112 to i32*
  %2114 = load i32, i32* %2113, align 4
  %2115 = and i64 %2111, -4294967296
  %2116 = zext i32 %2114 to i64
  %2117 = or i64 %2115, %2116
  %2118 = add i64 %2117, 7
  %2119 = inttoptr i64 %2118 to i16*
  %2120 = load i16, i16* %2119, align 2
  switch i16 %2120, label %2125 [
    i16 1057, label %2121
    i16 1056, label %2121
    i16 1040, label %2121
  ]

2121:                                             ; preds = %2109, %2109, %2109
  %2122 = add i64 %2111, 19
  %2123 = inttoptr i64 %2122 to i8**
  %2124 = load i8*, i8** %2123, align 1
  br label %2128

2125:                                             ; preds = %2109
  %2126 = bitcast %"class.v8::Value"* %2102 to %"class.v8::Object"*
  %2127 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2126, i32 1) #9
  br label %2128

2128:                                             ; preds = %2125, %2121
  %2129 = phi i8* [ %2124, %2121 ], [ %2127, %2125 ]
  %2130 = bitcast i8* %2129 to %"class.blink::ImageData"*
  br label %2132

2131:                                             ; preds = %2101
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %2103, i32 5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2132

2132:                                             ; preds = %2131, %2128
  %2133 = phi %"class.blink::ImageData"* [ %2130, %2128 ], [ null, %2131 ]
  %2134 = load i32, i32* %1904, align 8
  %2135 = icmp eq i32 %2134, 0
  br i1 %2135, label %2136, label %2138

2136:                                             ; preds = %2132
  %2137 = bitcast i8* %1962 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEjiijjPNS_9ImageDataE(%"class.blink::WebGLRenderingContextBase"* %2137, i32 %1978, i32 %2000, i32 %2025, i32 %2055, i32 %2085, %"class.blink::ImageData"* %2133) #9
  br label %2138

2138:                                             ; preds = %2136, %2132, %2084, %2054, %2024, %1999, %1973, %1928
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1897, align 8
  %2139 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %2140 = load i64*, i64** %2139, align 8
  %2141 = icmp eq i64* %2140, null
  br i1 %2141, label %2151, label %2142

2142:                                             ; preds = %2138
  %2143 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1903, align 8
  %2144 = bitcast %"class.v8::Isolate"* %2143 to %"class.v8::internal::Isolate"*
  %2145 = load i64, i64* %2140, align 8
  %2146 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %2144, i64 %2145) #9
  %2147 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %2143) #9
  br i1 %2147, label %2151, label %2148

2148:                                             ; preds = %2142
  %2149 = bitcast i64* %2146 to %"class.v8::Value"*
  %2150 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %2143, %"class.v8::Value"* %2149) #9
  br label %2151

2151:                                             ; preds = %2148, %2142, %2138
  %2152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1905, align 8
  %2153 = icmp eq %"class.WTF::StringImpl"* %2152, null
  br i1 %2153, label %2167, label %2154

2154:                                             ; preds = %2151
  %2155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2156 = load atomic i32, i32* %2155 monotonic, align 4
  %2157 = and i32 %2156, 2
  %2158 = icmp eq i32 %2157, 0
  %2159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2152, i64 0, i32 0
  %2160 = load i32, i32* %2159, align 4
  br i1 %2158, label %2161, label %2163

2161:                                             ; preds = %2154
  %2162 = add i32 %2160, -1
  store i32 %2162, i32* %2159, align 4
  br label %2163

2163:                                             ; preds = %2161, %2154
  %2164 = phi i32 [ %2162, %2161 ], [ %2160, %2154 ]
  %2165 = icmp eq i32 %2164, 0
  br i1 %2165, label %2166, label %2167

2166:                                             ; preds = %2163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2152) #9
  br label %2167

2167:                                             ; preds = %2151, %2163, %2166
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1896) #9
  br label %2529

2168:                                             ; preds = %1887
  %2169 = load i32, i32* %39, align 8
  %2170 = icmp sgt i32 %2169, 5
  br i1 %2170, label %2177, label %2171

2171:                                             ; preds = %2168
  %2172 = load i64*, i64** %43, align 8
  %2173 = getelementptr inbounds i64, i64* %2172, i64 1
  %2174 = load i64, i64* %2173, align 8
  %2175 = add i64 %2174, 160
  %2176 = inttoptr i64 %2175 to %"class.v8::Value"*
  br label %2181

2177:                                             ; preds = %2168
  %2178 = load i64*, i64** %1568, align 8
  %2179 = getelementptr inbounds i64, i64* %2178, i64 5
  %2180 = bitcast i64* %2179 to %"class.v8::Value"*
  br label %2181

2181:                                             ; preds = %2171, %2177
  %2182 = phi %"class.v8::Value"* [ %2176, %2171 ], [ %2180, %2177 ]
  %2183 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %2184 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2183, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8ImageBitmap18wrapper_type_info_E, %"class.v8::Value"* %2182) #9
  br i1 %2184, label %2187, label %2185

2185:                                             ; preds = %2181
  %2186 = load i32, i32* %39, align 8
  br label %2464

2187:                                             ; preds = %2181
  %2188 = load i64*, i64** %43, align 8
  %2189 = getelementptr inbounds i64, i64* %2188, i64 1
  %2190 = bitcast i64* %2189 to %"class.v8::Isolate"**
  %2191 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2190, align 8
  %2192 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2192) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2192, i8 -86, i64 56, i1 false) #9
  %2193 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2193, align 8
  %2194 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %2194, align 8
  %2195 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %2195, align 2
  %2196 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %2197 = bitcast i8** %2196 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %2197, align 8
  %2198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %2198, align 8
  %2199 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %2191, %"class.v8::Isolate"** %2199, align 8
  %2200 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %2200, align 8
  %2201 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %2202 = bitcast %"class.WTF::StringImpl"** %2201 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2202, i8 0, i64 16, i1 false) #9
  %2203 = load i32, i32* %39, align 8
  %2204 = icmp slt i32 %2203, 6
  br i1 %2204, label %2205, label %2225, !prof !5

2205:                                             ; preds = %2187
  %2206 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2206) #9
  %2207 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %2203) #9
  %2208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2207, %"class.WTF::StringImpl"** %2208, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %2209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2208, align 8
  %2210 = icmp eq %"class.WTF::StringImpl"* %2209, null
  br i1 %2210, label %2224, label %2211

2211:                                             ; preds = %2205
  %2212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2213 = load atomic i32, i32* %2212 monotonic, align 4
  %2214 = and i32 %2213, 2
  %2215 = icmp eq i32 %2214, 0
  %2216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2209, i64 0, i32 0
  %2217 = load i32, i32* %2216, align 4
  br i1 %2215, label %2218, label %2220

2218:                                             ; preds = %2211
  %2219 = add i32 %2217, -1
  store i32 %2219, i32* %2216, align 4
  br label %2220

2220:                                             ; preds = %2218, %2211
  %2221 = phi i32 [ %2219, %2218 ], [ %2217, %2211 ]
  %2222 = icmp eq i32 %2221, 0
  br i1 %2222, label %2223, label %2224

2223:                                             ; preds = %2220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2209) #9
  br label %2224

2224:                                             ; preds = %2223, %2220, %2205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2206) #9
  br label %2434

2225:                                             ; preds = %2187
  %2226 = load i64*, i64** %1568, align 8
  %2227 = getelementptr inbounds i64, i64* %2226, i64 -1
  %2228 = load i64, i64* %2227, align 8
  %2229 = add i64 %2228, -1
  %2230 = inttoptr i64 %2229 to i32*
  %2231 = load i32, i32* %2230, align 4
  %2232 = and i64 %2228, -4294967296
  %2233 = zext i32 %2231 to i64
  %2234 = or i64 %2232, %2233
  %2235 = add i64 %2234, 7
  %2236 = inttoptr i64 %2235 to i16*
  %2237 = load i16, i16* %2236, align 2
  switch i16 %2237, label %2243 [
    i16 1057, label %2238
    i16 1056, label %2238
    i16 1040, label %2238
  ]

2238:                                             ; preds = %2225, %2225, %2225
  %2239 = bitcast i64* %2226 to %"class.v8::Value"*
  %2240 = add i64 %2228, 19
  %2241 = inttoptr i64 %2240 to i8**
  %2242 = load i8*, i8** %2241, align 1
  br label %2257

2243:                                             ; preds = %2225
  %2244 = bitcast i64* %2227 to %"class.v8::Object"*
  %2245 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2244, i32 1) #9
  %2246 = load i32, i32* %39, align 8
  %2247 = icmp sgt i32 %2246, 0
  br i1 %2247, label %2248, label %2251

2248:                                             ; preds = %2243
  %2249 = bitcast i64** %1568 to %"class.v8::Value"**
  %2250 = load %"class.v8::Value"*, %"class.v8::Value"** %2249, align 8
  br label %2257

2251:                                             ; preds = %2243
  %2252 = load i64*, i64** %43, align 8
  %2253 = getelementptr inbounds i64, i64* %2252, i64 1
  %2254 = load i64, i64* %2253, align 8
  %2255 = add i64 %2254, 160
  %2256 = inttoptr i64 %2255 to %"class.v8::Value"*
  br label %2257

2257:                                             ; preds = %2238, %2248, %2251
  %2258 = phi i8* [ %2245, %2251 ], [ %2242, %2238 ], [ %2245, %2248 ]
  %2259 = phi %"class.v8::Value"* [ %2256, %2251 ], [ %2239, %2238 ], [ %2250, %2248 ]
  %2260 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2259) #9
  br i1 %2260, label %2261, label %2264, !prof !4

2261:                                             ; preds = %2257
  %2262 = bitcast %"class.v8::Value"* %2259 to %"class.v8::Uint32"*
  %2263 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2262) #9
  br label %2273

2264:                                             ; preds = %2257
  %2265 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2259) #9
  br i1 %2265, label %2266, label %2269, !prof !4

2266:                                             ; preds = %2264
  %2267 = bitcast %"class.v8::Value"* %2259 to %"class.v8::Int32"*
  %2268 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2267) #9
  br label %2273

2269:                                             ; preds = %2264
  %2270 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2191, %"class.v8::Value"* %2259, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %2271 = load i32, i32* %2200, align 8
  %2272 = icmp eq i32 %2271, 0
  br i1 %2272, label %2273, label %2434

2273:                                             ; preds = %2269, %2266, %2261
  %2274 = phi i32 [ %2270, %2269 ], [ %2268, %2266 ], [ %2263, %2261 ]
  %2275 = load i32, i32* %39, align 8
  %2276 = icmp sgt i32 %2275, 1
  br i1 %2276, label %2283, label %2277

2277:                                             ; preds = %2273
  %2278 = load i64*, i64** %43, align 8
  %2279 = getelementptr inbounds i64, i64* %2278, i64 1
  %2280 = load i64, i64* %2279, align 8
  %2281 = add i64 %2280, 160
  %2282 = inttoptr i64 %2281 to %"class.v8::Value"*
  br label %2287

2283:                                             ; preds = %2273
  %2284 = load i64*, i64** %1568, align 8
  %2285 = getelementptr inbounds i64, i64* %2284, i64 1
  %2286 = bitcast i64* %2285 to %"class.v8::Value"*
  br label %2287

2287:                                             ; preds = %2283, %2277
  %2288 = phi %"class.v8::Value"* [ %2282, %2277 ], [ %2286, %2283 ]
  %2289 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2288) #9
  br i1 %2289, label %2290, label %2293, !prof !4

2290:                                             ; preds = %2287
  %2291 = bitcast %"class.v8::Value"* %2288 to %"class.v8::Int32"*
  %2292 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2291) #9
  br label %2295

2293:                                             ; preds = %2287
  %2294 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2191, %"class.v8::Value"* %2288, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2295

2295:                                             ; preds = %2293, %2290
  %2296 = phi i32 [ %2292, %2290 ], [ %2294, %2293 ]
  %2297 = load i32, i32* %2200, align 8
  %2298 = icmp eq i32 %2297, 0
  br i1 %2298, label %2299, label %2434

2299:                                             ; preds = %2295
  %2300 = load i32, i32* %39, align 8
  %2301 = icmp sgt i32 %2300, 2
  br i1 %2301, label %2308, label %2302

2302:                                             ; preds = %2299
  %2303 = load i64*, i64** %43, align 8
  %2304 = getelementptr inbounds i64, i64* %2303, i64 1
  %2305 = load i64, i64* %2304, align 8
  %2306 = add i64 %2305, 160
  %2307 = inttoptr i64 %2306 to %"class.v8::Value"*
  br label %2312

2308:                                             ; preds = %2299
  %2309 = load i64*, i64** %1568, align 8
  %2310 = getelementptr inbounds i64, i64* %2309, i64 2
  %2311 = bitcast i64* %2310 to %"class.v8::Value"*
  br label %2312

2312:                                             ; preds = %2308, %2302
  %2313 = phi %"class.v8::Value"* [ %2307, %2302 ], [ %2311, %2308 ]
  %2314 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2313) #9
  br i1 %2314, label %2315, label %2318, !prof !4

2315:                                             ; preds = %2312
  %2316 = bitcast %"class.v8::Value"* %2313 to %"class.v8::Int32"*
  %2317 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2316) #9
  br label %2320

2318:                                             ; preds = %2312
  %2319 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2191, %"class.v8::Value"* %2313, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2320

2320:                                             ; preds = %2318, %2315
  %2321 = phi i32 [ %2317, %2315 ], [ %2319, %2318 ]
  %2322 = load i32, i32* %2200, align 8
  %2323 = icmp eq i32 %2322, 0
  br i1 %2323, label %2324, label %2434

2324:                                             ; preds = %2320
  %2325 = load i32, i32* %39, align 8
  %2326 = icmp sgt i32 %2325, 3
  br i1 %2326, label %2333, label %2327

2327:                                             ; preds = %2324
  %2328 = load i64*, i64** %43, align 8
  %2329 = getelementptr inbounds i64, i64* %2328, i64 1
  %2330 = load i64, i64* %2329, align 8
  %2331 = add i64 %2330, 160
  %2332 = inttoptr i64 %2331 to %"class.v8::Value"*
  br label %2337

2333:                                             ; preds = %2324
  %2334 = load i64*, i64** %1568, align 8
  %2335 = getelementptr inbounds i64, i64* %2334, i64 3
  %2336 = bitcast i64* %2335 to %"class.v8::Value"*
  br label %2337

2337:                                             ; preds = %2333, %2327
  %2338 = phi %"class.v8::Value"* [ %2332, %2327 ], [ %2336, %2333 ]
  %2339 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2338) #9
  br i1 %2339, label %2340, label %2343, !prof !4

2340:                                             ; preds = %2337
  %2341 = bitcast %"class.v8::Value"* %2338 to %"class.v8::Uint32"*
  %2342 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2341) #9
  br label %2350

2343:                                             ; preds = %2337
  %2344 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2338) #9
  br i1 %2344, label %2345, label %2348, !prof !4

2345:                                             ; preds = %2343
  %2346 = bitcast %"class.v8::Value"* %2338 to %"class.v8::Int32"*
  %2347 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2346) #9
  br label %2350

2348:                                             ; preds = %2343
  %2349 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2191, %"class.v8::Value"* %2338, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2350

2350:                                             ; preds = %2348, %2345, %2340
  %2351 = phi i32 [ %2342, %2340 ], [ %2347, %2345 ], [ %2349, %2348 ]
  %2352 = load i32, i32* %2200, align 8
  %2353 = icmp eq i32 %2352, 0
  br i1 %2353, label %2354, label %2434

2354:                                             ; preds = %2350
  %2355 = load i32, i32* %39, align 8
  %2356 = icmp sgt i32 %2355, 4
  br i1 %2356, label %2363, label %2357

2357:                                             ; preds = %2354
  %2358 = load i64*, i64** %43, align 8
  %2359 = getelementptr inbounds i64, i64* %2358, i64 1
  %2360 = load i64, i64* %2359, align 8
  %2361 = add i64 %2360, 160
  %2362 = inttoptr i64 %2361 to %"class.v8::Value"*
  br label %2367

2363:                                             ; preds = %2354
  %2364 = load i64*, i64** %1568, align 8
  %2365 = getelementptr inbounds i64, i64* %2364, i64 4
  %2366 = bitcast i64* %2365 to %"class.v8::Value"*
  br label %2367

2367:                                             ; preds = %2363, %2357
  %2368 = phi %"class.v8::Value"* [ %2362, %2357 ], [ %2366, %2363 ]
  %2369 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2368) #9
  br i1 %2369, label %2370, label %2373, !prof !4

2370:                                             ; preds = %2367
  %2371 = bitcast %"class.v8::Value"* %2368 to %"class.v8::Uint32"*
  %2372 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2371) #9
  br label %2380

2373:                                             ; preds = %2367
  %2374 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2368) #9
  br i1 %2374, label %2375, label %2378, !prof !4

2375:                                             ; preds = %2373
  %2376 = bitcast %"class.v8::Value"* %2368 to %"class.v8::Int32"*
  %2377 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2376) #9
  br label %2380

2378:                                             ; preds = %2373
  %2379 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2191, %"class.v8::Value"* %2368, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2380

2380:                                             ; preds = %2378, %2375, %2370
  %2381 = phi i32 [ %2372, %2370 ], [ %2377, %2375 ], [ %2379, %2378 ]
  %2382 = load i32, i32* %2200, align 8
  %2383 = icmp eq i32 %2382, 0
  br i1 %2383, label %2384, label %2434

2384:                                             ; preds = %2380
  %2385 = load i32, i32* %39, align 8
  %2386 = icmp sgt i32 %2385, 5
  br i1 %2386, label %2393, label %2387

2387:                                             ; preds = %2384
  %2388 = load i64*, i64** %43, align 8
  %2389 = getelementptr inbounds i64, i64* %2388, i64 1
  %2390 = load i64, i64* %2389, align 8
  %2391 = add i64 %2390, 160
  %2392 = inttoptr i64 %2391 to %"class.v8::Value"*
  br label %2397

2393:                                             ; preds = %2384
  %2394 = load i64*, i64** %1568, align 8
  %2395 = getelementptr inbounds i64, i64* %2394, i64 5
  %2396 = bitcast i64* %2395 to %"class.v8::Value"*
  br label %2397

2397:                                             ; preds = %2393, %2387
  %2398 = phi %"class.v8::Value"* [ %2392, %2387 ], [ %2396, %2393 ]
  %2399 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11ImageBitmap18wrapper_type_info_E, align 8
  %2400 = ptrtoint %"class.v8::Isolate"* %2191 to i64
  %2401 = add i64 %2400, 8
  %2402 = inttoptr i64 %2401 to %"class.blink::V8PerIsolateData"**
  %2403 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2402, align 8
  %2404 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2403, %"struct.blink::WrapperTypeInfo"* %2399, %"class.v8::Value"* %2398) #9
  br i1 %2404, label %2405, label %2427

2405:                                             ; preds = %2397
  %2406 = bitcast %"class.v8::Value"* %2398 to i64*
  %2407 = load i64, i64* %2406, align 8
  %2408 = add i64 %2407, -1
  %2409 = inttoptr i64 %2408 to i32*
  %2410 = load i32, i32* %2409, align 4
  %2411 = and i64 %2407, -4294967296
  %2412 = zext i32 %2410 to i64
  %2413 = or i64 %2411, %2412
  %2414 = add i64 %2413, 7
  %2415 = inttoptr i64 %2414 to i16*
  %2416 = load i16, i16* %2415, align 2
  switch i16 %2416, label %2421 [
    i16 1057, label %2417
    i16 1056, label %2417
    i16 1040, label %2417
  ]

2417:                                             ; preds = %2405, %2405, %2405
  %2418 = add i64 %2407, 19
  %2419 = inttoptr i64 %2418 to i8**
  %2420 = load i8*, i8** %2419, align 1
  br label %2424

2421:                                             ; preds = %2405
  %2422 = bitcast %"class.v8::Value"* %2398 to %"class.v8::Object"*
  %2423 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2422, i32 1) #9
  br label %2424

2424:                                             ; preds = %2421, %2417
  %2425 = phi i8* [ %2420, %2417 ], [ %2423, %2421 ]
  %2426 = bitcast i8* %2425 to %"class.blink::ImageBitmap"*
  br label %2428

2427:                                             ; preds = %2397
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %2399, i32 5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2428

2428:                                             ; preds = %2427, %2424
  %2429 = phi %"class.blink::ImageBitmap"* [ %2426, %2424 ], [ null, %2427 ]
  %2430 = load i32, i32* %2200, align 8
  %2431 = icmp eq i32 %2430, 0
  br i1 %2431, label %2432, label %2434

2432:                                             ; preds = %2428
  %2433 = bitcast i8* %2258 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10texImage2DEjiijjPNS_11ImageBitmapERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %2433, i32 %2274, i32 %2296, i32 %2321, i32 %2351, i32 %2381, %"class.blink::ImageBitmap"* %2429, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2434

2434:                                             ; preds = %2432, %2428, %2380, %2350, %2320, %2295, %2269, %2224
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2193, align 8
  %2435 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %2436 = load i64*, i64** %2435, align 8
  %2437 = icmp eq i64* %2436, null
  br i1 %2437, label %2447, label %2438

2438:                                             ; preds = %2434
  %2439 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2199, align 8
  %2440 = bitcast %"class.v8::Isolate"* %2439 to %"class.v8::internal::Isolate"*
  %2441 = load i64, i64* %2436, align 8
  %2442 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %2440, i64 %2441) #9
  %2443 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %2439) #9
  br i1 %2443, label %2447, label %2444

2444:                                             ; preds = %2438
  %2445 = bitcast i64* %2442 to %"class.v8::Value"*
  %2446 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %2439, %"class.v8::Value"* %2445) #9
  br label %2447

2447:                                             ; preds = %2444, %2438, %2434
  %2448 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2201, align 8
  %2449 = icmp eq %"class.WTF::StringImpl"* %2448, null
  br i1 %2449, label %2463, label %2450

2450:                                             ; preds = %2447
  %2451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2448, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2452 = load atomic i32, i32* %2451 monotonic, align 4
  %2453 = and i32 %2452, 2
  %2454 = icmp eq i32 %2453, 0
  %2455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2448, i64 0, i32 0
  %2456 = load i32, i32* %2455, align 4
  br i1 %2454, label %2457, label %2459

2457:                                             ; preds = %2450
  %2458 = add i32 %2456, -1
  store i32 %2458, i32* %2455, align 4
  br label %2459

2459:                                             ; preds = %2457, %2450
  %2460 = phi i32 [ %2458, %2457 ], [ %2456, %2450 ]
  %2461 = icmp eq i32 %2460, 0
  br i1 %2461, label %2462, label %2463

2462:                                             ; preds = %2459
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2448) #9
  br label %2463

2463:                                             ; preds = %2447, %2459, %2462
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2192) #9
  br label %2529

2464:                                             ; preds = %2185, %38
  %2465 = phi i32 [ %2186, %2185 ], [ %40, %38 ]
  %2466 = bitcast %"class.blink::ExceptionState"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2466) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2466, i8 -86, i64 56, i1 false)
  %2467 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2467, align 8
  %2468 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 1, i32 0
  store i16 6, i16* %2468, align 8
  %2469 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 1, i32 1
  store i16 0, i16* %2469, align 2
  %2470 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 1, i32 2
  %2471 = bitcast i8** %2470 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i64 0, i64 0)>, <2 x i8*>* %2471, align 8
  %2472 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %2472, align 8
  %2473 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 3
  store %"class.v8::Isolate"* %47, %"class.v8::Isolate"** %2473, align 8
  %2474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 4
  store i32 0, i32* %2474, align 8
  %2475 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 5, i32 0, i32 0
  %2476 = bitcast %"class.WTF::StringImpl"** %2475 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2476, i8 0, i64 16, i1 false) #9
  %2477 = icmp slt i32 %2465, 6
  br i1 %2477, label %2478, label %2498, !prof !5

2478:                                             ; preds = %2464
  %2479 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2479) #9
  %2480 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %2465) #9
  %2481 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2480, %"class.WTF::StringImpl"** %2481, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %21) #9
  %2482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2481, align 8
  %2483 = icmp eq %"class.WTF::StringImpl"* %2482, null
  br i1 %2483, label %2497, label %2484

2484:                                             ; preds = %2478
  %2485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2486 = load atomic i32, i32* %2485 monotonic, align 4
  %2487 = and i32 %2486, 2
  %2488 = icmp eq i32 %2487, 0
  %2489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2482, i64 0, i32 0
  %2490 = load i32, i32* %2489, align 4
  br i1 %2488, label %2491, label %2493

2491:                                             ; preds = %2484
  %2492 = add i32 %2490, -1
  store i32 %2492, i32* %2489, align 4
  br label %2493

2493:                                             ; preds = %2491, %2484
  %2494 = phi i32 [ %2492, %2491 ], [ %2490, %2484 ]
  %2495 = icmp eq i32 %2494, 0
  br i1 %2495, label %2496, label %2497

2496:                                             ; preds = %2493
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2482) #9
  br label %2497

2497:                                             ; preds = %2478, %2493, %2496
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2479) #9
  br label %2499

2498:                                             ; preds = %2464
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %2499

2499:                                             ; preds = %2498, %2497
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2467, align 8
  %2500 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %2501 = load i64*, i64** %2500, align 8
  %2502 = icmp eq i64* %2501, null
  br i1 %2502, label %2512, label %2503

2503:                                             ; preds = %2499
  %2504 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2473, align 8
  %2505 = bitcast %"class.v8::Isolate"* %2504 to %"class.v8::internal::Isolate"*
  %2506 = load i64, i64* %2501, align 8
  %2507 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %2505, i64 %2506) #9
  %2508 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %2504) #9
  br i1 %2508, label %2512, label %2509

2509:                                             ; preds = %2503
  %2510 = bitcast i64* %2507 to %"class.v8::Value"*
  %2511 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %2504, %"class.v8::Value"* %2510) #9
  br label %2512

2512:                                             ; preds = %2509, %2503, %2499
  %2513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2475, align 8
  %2514 = icmp eq %"class.WTF::StringImpl"* %2513, null
  br i1 %2514, label %2528, label %2515

2515:                                             ; preds = %2512
  %2516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2517 = load atomic i32, i32* %2516 monotonic, align 4
  %2518 = and i32 %2517, 2
  %2519 = icmp eq i32 %2518, 0
  %2520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2513, i64 0, i32 0
  %2521 = load i32, i32* %2520, align 4
  br i1 %2519, label %2522, label %2524

2522:                                             ; preds = %2515
  %2523 = add i32 %2521, -1
  store i32 %2523, i32* %2520, align 4
  br label %2524

2524:                                             ; preds = %2522, %2515
  %2525 = phi i32 [ %2523, %2522 ], [ %2521, %2515 ]
  %2526 = icmp eq i32 %2525, 0
  br i1 %2526, label %2527, label %2528

2527:                                             ; preds = %2524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2513) #9
  br label %2528

2528:                                             ; preds = %2512, %2524, %2527
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2466) #9
  br label %2529

2529:                                             ; preds = %2463, %2167, %1873, %2528, %1566, %1265, %964, %666, %370
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30TexParameterfOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.399, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %157

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %157

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %157

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Number"*
  %141 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %140) #9
  br label %144

142:                                              ; preds = %136
  %143 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %144

144:                                              ; preds = %142, %139
  %145 = phi double [ %141, %139 ], [ %143, %142 ]
  %146 = load i32, i32* %17, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %157

148:                                              ; preds = %144
  %149 = fcmp ogt double %145, 0x47EFFFFFE0000000
  br i1 %149, label %154, label %150, !prof !5

150:                                              ; preds = %148
  %151 = fcmp olt double %145, 0xC7EFFFFFE0000000
  br i1 %151, label %154, label %152, !prof !5

152:                                              ; preds = %150
  %153 = fptrunc double %145 to float
  br label %154

154:                                              ; preds = %148, %150, %152
  %155 = phi float [ 0xFFF0000000000000, %150 ], [ 0x7FF0000000000000, %148 ], [ %153, %152 ]
  %156 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13texParameterfEjjf(%"class.blink::WebGLRenderingContextBase"* %156, i32 %93, i32 %120, float %155) #9
  br label %157

157:                                              ; preds = %119, %88, %144, %154, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = icmp eq i64* %159, null
  br i1 %160, label %170, label %161

161:                                              ; preds = %157
  %162 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %163 = bitcast %"class.v8::Isolate"* %162 to %"class.v8::internal::Isolate"*
  %164 = load i64, i64* %159, align 8
  %165 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %163, i64 %164) #9
  %166 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %162) #9
  br i1 %166, label %170, label %167

167:                                              ; preds = %161
  %168 = bitcast i64* %165 to %"class.v8::Value"*
  %169 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %162, %"class.v8::Value"* %168) #9
  br label %170

170:                                              ; preds = %167, %161, %157
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #9
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30TexParameteriOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.400, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %150

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %150

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Uint32"*
  %111 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %110) #9
  br label %119

112:                                              ; preds = %106
  %113 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %113, label %114, label %117, !prof !4

114:                                              ; preds = %112
  %115 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %116 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %115) #9
  br label %119

117:                                              ; preds = %112
  %118 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %119

119:                                              ; preds = %109, %114, %117
  %120 = phi i32 [ %111, %109 ], [ %116, %114 ], [ %118, %117 ]
  %121 = load i32, i32* %17, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %150

123:                                              ; preds = %119
  %124 = load i32, i32* %20, align 8
  %125 = icmp sgt i32 %124, 2
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = load i64*, i64** %4, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 160
  %131 = inttoptr i64 %130 to %"class.v8::Value"*
  br label %136

132:                                              ; preds = %123
  %133 = load i64*, i64** %44, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 2
  %135 = bitcast i64* %134 to %"class.v8::Value"*
  br label %136

136:                                              ; preds = %126, %132
  %137 = phi %"class.v8::Value"* [ %131, %126 ], [ %135, %132 ]
  %138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %137) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %136
  %140 = bitcast %"class.v8::Value"* %137 to %"class.v8::Int32"*
  %141 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %140) #9
  br label %144

142:                                              ; preds = %136
  %143 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %144

144:                                              ; preds = %139, %142
  %145 = phi i32 [ %141, %139 ], [ %143, %142 ]
  %146 = load i32, i32* %17, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  %149 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13texParameteriEjji(%"class.blink::WebGLRenderingContextBase"* %149, i32 %93, i32 %120, i32 %145) #9
  br label %150

150:                                              ; preds = %144, %119, %88, %148, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %151 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %163, label %154

154:                                              ; preds = %150
  %155 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %156 = bitcast %"class.v8::Isolate"* %155 to %"class.v8::internal::Isolate"*
  %157 = load i64, i64* %152, align 8
  %158 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %156, i64 %157) #9
  %159 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %155) #9
  br i1 %159, label %163, label %160

160:                                              ; preds = %154
  %161 = bitcast i64* %158 to %"class.v8::Value"*
  %162 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %155, %"class.v8::Value"* %161) #9
  br label %163

163:                                              ; preds = %160, %154, %150
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #9
  br label %179

179:                                              ; preds = %163, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context30TexSubImage2DOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::ExceptionState", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::ExceptionState", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::ExceptionState", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::ExceptionState", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.blink::MaybeShared", align 8
  %19 = alloca %"class.blink::MaybeShared", align 8
  %20 = alloca %"class.blink::ExceptionState", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %22, i64 0, i32 5
  %28 = load %"class.base::TickClock"*, %"class.base::TickClock"** %27, align 8
  %29 = bitcast %"class.base::TickClock"* %28 to i64 (%"class.base::TickClock"*)***
  %30 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %30, i64 2
  %32 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %31, align 8
  %33 = tail call i64 %32(%"class.base::TickClock"* %28) #9
  %34 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %22, i64 0, i32 4, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %26
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %22) #9
  br label %38

38:                                               ; preds = %1, %26, %37
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %40, 9
  %42 = select i1 %41, i32 %40, i32 9
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 1
  %46 = bitcast i64* %45 to %"class.v8::Isolate"**
  %47 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %48 = ptrtoint %"class.v8::Isolate"* %47 to i64
  switch i32 %42, label %2639 [
    i32 9, label %49
    i32 7, label %371
  ]

49:                                               ; preds = %38
  %50 = bitcast %"class.blink::MaybeShared"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = bitcast %"class.blink::ExceptionState"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %51) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 56, i1 false) #9
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 1, i32 0
  store i16 6, i16* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 1, i32 1
  store i16 0, i16* %54, align 2
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 1, i32 2
  %56 = bitcast i8** %55 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %56, align 8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 3
  store %"class.v8::Isolate"* %47, %"class.v8::Isolate"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 4
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 5, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringImpl"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #9
  br i1 %41, label %62, label %82, !prof !5

62:                                               ; preds = %49
  %63 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  %64 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 9, i32 %40) #9
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %16, %"class.WTF::String"* nonnull dereferenceable(8) %17) #9
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #9
  br label %81

81:                                               ; preds = %80, %77, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %341

82:                                               ; preds = %49
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 -1
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i64 %86, -4294967296
  %91 = zext i32 %89 to i64
  %92 = or i64 %90, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load i16, i16* %94, align 2
  switch i16 %95, label %101 [
    i16 1057, label %96
    i16 1056, label %96
    i16 1040, label %96
  ]

96:                                               ; preds = %82, %82, %82
  %97 = bitcast i64* %84 to %"class.v8::Value"*
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %115

101:                                              ; preds = %82
  %102 = bitcast i64* %85 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  %104 = load i32, i32* %39, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = bitcast i64** %83 to %"class.v8::Value"**
  %108 = load %"class.v8::Value"*, %"class.v8::Value"** %107, align 8
  br label %115

109:                                              ; preds = %101
  %110 = load i64*, i64** %43, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 1
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 160
  %114 = inttoptr i64 %113 to %"class.v8::Value"*
  br label %115

115:                                              ; preds = %96, %106, %109
  %116 = phi i8* [ %103, %109 ], [ %100, %96 ], [ %103, %106 ]
  %117 = phi %"class.v8::Value"* [ %114, %109 ], [ %97, %96 ], [ %108, %106 ]
  %118 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %117) #9
  br i1 %118, label %119, label %122, !prof !4

119:                                              ; preds = %115
  %120 = bitcast %"class.v8::Value"* %117 to %"class.v8::Uint32"*
  %121 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %120) #9
  br label %131

122:                                              ; preds = %115
  %123 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %117) #9
  br i1 %123, label %124, label %127, !prof !4

124:                                              ; preds = %122
  %125 = bitcast %"class.v8::Value"* %117 to %"class.v8::Int32"*
  %126 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %125) #9
  br label %131

127:                                              ; preds = %122
  %128 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %117, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  %129 = load i32, i32* %59, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %341

131:                                              ; preds = %127, %124, %119
  %132 = phi i32 [ %128, %127 ], [ %126, %124 ], [ %121, %119 ]
  %133 = load i32, i32* %39, align 8
  %134 = icmp sgt i32 %133, 1
  br i1 %134, label %141, label %135

135:                                              ; preds = %131
  %136 = load i64*, i64** %43, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 1
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 160
  %140 = inttoptr i64 %139 to %"class.v8::Value"*
  br label %145

141:                                              ; preds = %131
  %142 = load i64*, i64** %83, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = bitcast i64* %143 to %"class.v8::Value"*
  br label %145

145:                                              ; preds = %141, %135
  %146 = phi %"class.v8::Value"* [ %140, %135 ], [ %144, %141 ]
  %147 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %146) #9
  br i1 %147, label %148, label %151, !prof !4

148:                                              ; preds = %145
  %149 = bitcast %"class.v8::Value"* %146 to %"class.v8::Int32"*
  %150 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %149) #9
  br label %153

151:                                              ; preds = %145
  %152 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %146, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %153

153:                                              ; preds = %151, %148
  %154 = phi i32 [ %150, %148 ], [ %152, %151 ]
  %155 = load i32, i32* %59, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %341

157:                                              ; preds = %153
  %158 = load i32, i32* %39, align 8
  %159 = icmp sgt i32 %158, 2
  br i1 %159, label %166, label %160

160:                                              ; preds = %157
  %161 = load i64*, i64** %43, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 1
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 160
  %165 = inttoptr i64 %164 to %"class.v8::Value"*
  br label %170

166:                                              ; preds = %157
  %167 = load i64*, i64** %83, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 2
  %169 = bitcast i64* %168 to %"class.v8::Value"*
  br label %170

170:                                              ; preds = %166, %160
  %171 = phi %"class.v8::Value"* [ %165, %160 ], [ %169, %166 ]
  %172 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %171) #9
  br i1 %172, label %173, label %176, !prof !4

173:                                              ; preds = %170
  %174 = bitcast %"class.v8::Value"* %171 to %"class.v8::Int32"*
  %175 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %174) #9
  br label %178

176:                                              ; preds = %170
  %177 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %171, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %178

178:                                              ; preds = %176, %173
  %179 = phi i32 [ %175, %173 ], [ %177, %176 ]
  %180 = load i32, i32* %59, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %341

182:                                              ; preds = %178
  %183 = load i32, i32* %39, align 8
  %184 = icmp sgt i32 %183, 3
  br i1 %184, label %191, label %185

185:                                              ; preds = %182
  %186 = load i64*, i64** %43, align 8
  %187 = getelementptr inbounds i64, i64* %186, i64 1
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 160
  %190 = inttoptr i64 %189 to %"class.v8::Value"*
  br label %195

191:                                              ; preds = %182
  %192 = load i64*, i64** %83, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 3
  %194 = bitcast i64* %193 to %"class.v8::Value"*
  br label %195

195:                                              ; preds = %191, %185
  %196 = phi %"class.v8::Value"* [ %190, %185 ], [ %194, %191 ]
  %197 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %196) #9
  br i1 %197, label %198, label %201, !prof !4

198:                                              ; preds = %195
  %199 = bitcast %"class.v8::Value"* %196 to %"class.v8::Int32"*
  %200 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %199) #9
  br label %203

201:                                              ; preds = %195
  %202 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %196, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %203

203:                                              ; preds = %201, %198
  %204 = phi i32 [ %200, %198 ], [ %202, %201 ]
  %205 = load i32, i32* %59, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %341

207:                                              ; preds = %203
  %208 = load i32, i32* %39, align 8
  %209 = icmp sgt i32 %208, 4
  br i1 %209, label %216, label %210

210:                                              ; preds = %207
  %211 = load i64*, i64** %43, align 8
  %212 = getelementptr inbounds i64, i64* %211, i64 1
  %213 = load i64, i64* %212, align 8
  %214 = add i64 %213, 160
  %215 = inttoptr i64 %214 to %"class.v8::Value"*
  br label %220

216:                                              ; preds = %207
  %217 = load i64*, i64** %83, align 8
  %218 = getelementptr inbounds i64, i64* %217, i64 4
  %219 = bitcast i64* %218 to %"class.v8::Value"*
  br label %220

220:                                              ; preds = %216, %210
  %221 = phi %"class.v8::Value"* [ %215, %210 ], [ %219, %216 ]
  %222 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %221) #9
  br i1 %222, label %223, label %226, !prof !4

223:                                              ; preds = %220
  %224 = bitcast %"class.v8::Value"* %221 to %"class.v8::Int32"*
  %225 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %224) #9
  br label %228

226:                                              ; preds = %220
  %227 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %221, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %228

228:                                              ; preds = %226, %223
  %229 = phi i32 [ %225, %223 ], [ %227, %226 ]
  %230 = load i32, i32* %59, align 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %341

232:                                              ; preds = %228
  %233 = load i32, i32* %39, align 8
  %234 = icmp sgt i32 %233, 5
  br i1 %234, label %241, label %235

235:                                              ; preds = %232
  %236 = load i64*, i64** %43, align 8
  %237 = getelementptr inbounds i64, i64* %236, i64 1
  %238 = load i64, i64* %237, align 8
  %239 = add i64 %238, 160
  %240 = inttoptr i64 %239 to %"class.v8::Value"*
  br label %245

241:                                              ; preds = %232
  %242 = load i64*, i64** %83, align 8
  %243 = getelementptr inbounds i64, i64* %242, i64 5
  %244 = bitcast i64* %243 to %"class.v8::Value"*
  br label %245

245:                                              ; preds = %241, %235
  %246 = phi %"class.v8::Value"* [ %240, %235 ], [ %244, %241 ]
  %247 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %246) #9
  br i1 %247, label %248, label %251, !prof !4

248:                                              ; preds = %245
  %249 = bitcast %"class.v8::Value"* %246 to %"class.v8::Int32"*
  %250 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %249) #9
  br label %253

251:                                              ; preds = %245
  %252 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %246, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %253

253:                                              ; preds = %251, %248
  %254 = phi i32 [ %250, %248 ], [ %252, %251 ]
  %255 = load i32, i32* %59, align 8
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %341

257:                                              ; preds = %253
  %258 = load i32, i32* %39, align 8
  %259 = icmp sgt i32 %258, 6
  br i1 %259, label %266, label %260

260:                                              ; preds = %257
  %261 = load i64*, i64** %43, align 8
  %262 = getelementptr inbounds i64, i64* %261, i64 1
  %263 = load i64, i64* %262, align 8
  %264 = add i64 %263, 160
  %265 = inttoptr i64 %264 to %"class.v8::Value"*
  br label %270

266:                                              ; preds = %257
  %267 = load i64*, i64** %83, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 6
  %269 = bitcast i64* %268 to %"class.v8::Value"*
  br label %270

270:                                              ; preds = %266, %260
  %271 = phi %"class.v8::Value"* [ %265, %260 ], [ %269, %266 ]
  %272 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %271) #9
  br i1 %272, label %273, label %276, !prof !4

273:                                              ; preds = %270
  %274 = bitcast %"class.v8::Value"* %271 to %"class.v8::Uint32"*
  %275 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %274) #9
  br label %283

276:                                              ; preds = %270
  %277 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %271) #9
  br i1 %277, label %278, label %281, !prof !4

278:                                              ; preds = %276
  %279 = bitcast %"class.v8::Value"* %271 to %"class.v8::Int32"*
  %280 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %279) #9
  br label %283

281:                                              ; preds = %276
  %282 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %271, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %283

283:                                              ; preds = %281, %278, %273
  %284 = phi i32 [ %275, %273 ], [ %280, %278 ], [ %282, %281 ]
  %285 = load i32, i32* %59, align 8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %341

287:                                              ; preds = %283
  %288 = load i32, i32* %39, align 8
  %289 = icmp sgt i32 %288, 7
  br i1 %289, label %296, label %290

290:                                              ; preds = %287
  %291 = load i64*, i64** %43, align 8
  %292 = getelementptr inbounds i64, i64* %291, i64 1
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %293, 160
  %295 = inttoptr i64 %294 to %"class.v8::Value"*
  br label %300

296:                                              ; preds = %287
  %297 = load i64*, i64** %83, align 8
  %298 = getelementptr inbounds i64, i64* %297, i64 7
  %299 = bitcast i64* %298 to %"class.v8::Value"*
  br label %300

300:                                              ; preds = %296, %290
  %301 = phi %"class.v8::Value"* [ %295, %290 ], [ %299, %296 ]
  %302 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %301) #9
  br i1 %302, label %303, label %306, !prof !4

303:                                              ; preds = %300
  %304 = bitcast %"class.v8::Value"* %301 to %"class.v8::Uint32"*
  %305 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %304) #9
  br label %313

306:                                              ; preds = %300
  %307 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %301) #9
  br i1 %307, label %308, label %311, !prof !4

308:                                              ; preds = %306
  %309 = bitcast %"class.v8::Value"* %301 to %"class.v8::Int32"*
  %310 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %309) #9
  br label %313

311:                                              ; preds = %306
  %312 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %301, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  br label %313

313:                                              ; preds = %311, %308, %303
  %314 = phi i32 [ %305, %303 ], [ %310, %308 ], [ %312, %311 ]
  %315 = load i32, i32* %59, align 8
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %341

317:                                              ; preds = %313
  %318 = bitcast %"class.blink::MaybeShared"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #9
  %319 = load i32, i32* %39, align 8
  %320 = icmp sgt i32 %319, 8
  br i1 %320, label %327, label %321

321:                                              ; preds = %317
  %322 = load i64*, i64** %43, align 8
  %323 = getelementptr inbounds i64, i64* %322, i64 1
  %324 = load i64, i64* %323, align 8
  %325 = add i64 %324, 160
  %326 = inttoptr i64 %325 to %"class.v8::Value"*
  br label %331

327:                                              ; preds = %317
  %328 = load i64*, i64** %83, align 8
  %329 = getelementptr inbounds i64, i64* %328, i64 8
  %330 = bitcast i64* %329 to %"class.v8::Value"*
  br label %331

331:                                              ; preds = %327, %321
  %332 = phi %"class.v8::Value"* [ %326, %321 ], [ %330, %327 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_18DOMArrayBufferViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* nonnull sret %18, %"class.v8::Isolate"* %47, i32 8, %"class.v8::Value"* %332, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #9
  %333 = load i32, i32* %59, align 8
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %331
  %336 = bitcast i8* %116 to %"class.blink::WebGLRenderingContextBase"*
  %337 = bitcast %"class.blink::MaybeShared"* %18 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.blink::MaybeShared"* %19 to i64*
  store i64 %338, i64* %339, align 8
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEjiiiiijjNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"* %336, i32 %132, i32 %154, i32 %179, i32 %204, i32 %229, i32 %254, i32 %284, i32 %314, %"class.blink::MaybeShared"* nonnull %19) #9
  br label %340

340:                                              ; preds = %335, %331
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #9
  br label %341

341:                                              ; preds = %340, %313, %283, %253, %228, %203, %178, %153, %127, %81
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %342 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %16, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %343 = load i64*, i64** %342, align 8
  %344 = icmp eq i64* %343, null
  br i1 %344, label %354, label %345

345:                                              ; preds = %341
  %346 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %58, align 8
  %347 = bitcast %"class.v8::Isolate"* %346 to %"class.v8::internal::Isolate"*
  %348 = load i64, i64* %343, align 8
  %349 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %347, i64 %348) #9
  %350 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %346) #9
  br i1 %350, label %354, label %351

351:                                              ; preds = %345
  %352 = bitcast i64* %349 to %"class.v8::Value"*
  %353 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %346, %"class.v8::Value"* %352) #9
  br label %354

354:                                              ; preds = %351, %345, %341
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %370, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  br i1 %361, label %364, label %366

364:                                              ; preds = %357
  %365 = add i32 %363, -1
  store i32 %365, i32* %362, align 4
  br label %366

366:                                              ; preds = %364, %357
  %367 = phi i32 [ %365, %364 ], [ %363, %357 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #9
  br label %370

370:                                              ; preds = %354, %366, %369
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %51) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  br label %2704

371:                                              ; preds = %38
  %372 = icmp sgt i32 %40, 6
  br i1 %372, label %376, label %373

373:                                              ; preds = %371
  %374 = add i64 %48, 160
  %375 = inttoptr i64 %374 to %"class.v8::Value"*
  br label %381

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %378 = load i64*, i64** %377, align 8
  %379 = getelementptr inbounds i64, i64* %378, i64 6
  %380 = bitcast i64* %379 to %"class.v8::Value"*
  br label %381

381:                                              ; preds = %373, %376
  %382 = phi %"class.v8::Value"* [ %375, %373 ], [ %380, %376 ]
  %383 = add i64 %48, 8
  %384 = inttoptr i64 %383 to %"class.blink::V8PerIsolateData"**
  %385 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %386 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %385, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8HTMLVideoElement18wrapper_type_info_E, %"class.v8::Value"* %382) #9
  br i1 %386, label %387, label %692

387:                                              ; preds = %381
  %388 = load i64*, i64** %43, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = bitcast i64* %389 to %"class.v8::Isolate"**
  %391 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %390, align 8
  %392 = bitcast %"class.blink::ExceptionState"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %392, i8 -86, i64 56, i1 false) #9
  %393 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %393, align 8
  %394 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 0
  store i16 6, i16* %394, align 8
  %395 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 1
  store i16 0, i16* %395, align 2
  %396 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 2
  %397 = bitcast i8** %396 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %397, align 8
  %398 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %398, align 8
  %399 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 3
  store %"class.v8::Isolate"* %391, %"class.v8::Isolate"** %399, align 8
  %400 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 4
  store i32 0, i32* %400, align 8
  %401 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 5, i32 0, i32 0
  %402 = bitcast %"class.WTF::StringImpl"** %401 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %402, i8 0, i64 16, i1 false) #9
  %403 = load i32, i32* %39, align 8
  %404 = icmp slt i32 %403, 7
  br i1 %404, label %405, label %425, !prof !5

405:                                              ; preds = %387
  %406 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %406) #9
  %407 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %403) #9
  %408 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %407, %"class.WTF::StringImpl"** %408, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %14, %"class.WTF::String"* nonnull dereferenceable(8) %15) #9
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %409, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %405
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %409) #9
  br label %424

424:                                              ; preds = %423, %420, %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %406) #9
  br label %662

425:                                              ; preds = %387
  %426 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %427 = load i64*, i64** %426, align 8
  %428 = getelementptr inbounds i64, i64* %427, i64 -1
  %429 = bitcast i64* %428 to %"class.v8::Object"*
  %430 = load i64, i64* %428, align 8
  %431 = add i64 %430, -1
  %432 = inttoptr i64 %431 to i32*
  %433 = load i32, i32* %432, align 4
  %434 = and i64 %430, -4294967296
  %435 = zext i32 %433 to i64
  %436 = or i64 %434, %435
  %437 = add i64 %436, 7
  %438 = inttoptr i64 %437 to i16*
  %439 = load i16, i16* %438, align 2
  switch i16 %439, label %444 [
    i16 1057, label %440
    i16 1056, label %440
    i16 1040, label %440
  ]

440:                                              ; preds = %425, %425, %425
  %441 = add i64 %430, 19
  %442 = inttoptr i64 %441 to i8**
  %443 = load i8*, i8** %442, align 1
  br label %446

444:                                              ; preds = %425
  %445 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %429, i32 1) #9
  br label %446

446:                                              ; preds = %444, %440
  %447 = phi i8* [ %443, %440 ], [ %445, %444 ]
  %448 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %429) #9
  %449 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %448) #9
  %450 = load i32, i32* %39, align 8
  %451 = icmp sgt i32 %450, 0
  br i1 %451, label %458, label %452

452:                                              ; preds = %446
  %453 = load i64*, i64** %43, align 8
  %454 = getelementptr inbounds i64, i64* %453, i64 1
  %455 = load i64, i64* %454, align 8
  %456 = add i64 %455, 160
  %457 = inttoptr i64 %456 to %"class.v8::Value"*
  br label %461

458:                                              ; preds = %446
  %459 = bitcast i64** %426 to %"class.v8::Value"**
  %460 = load %"class.v8::Value"*, %"class.v8::Value"** %459, align 8
  br label %461

461:                                              ; preds = %458, %452
  %462 = phi %"class.v8::Value"* [ %457, %452 ], [ %460, %458 ]
  %463 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %462) #9
  br i1 %463, label %464, label %467, !prof !4

464:                                              ; preds = %461
  %465 = bitcast %"class.v8::Value"* %462 to %"class.v8::Uint32"*
  %466 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %465) #9
  br label %476

467:                                              ; preds = %461
  %468 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %462) #9
  br i1 %468, label %469, label %472, !prof !4

469:                                              ; preds = %467
  %470 = bitcast %"class.v8::Value"* %462 to %"class.v8::Int32"*
  %471 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %470) #9
  br label %476

472:                                              ; preds = %467
  %473 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %462, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  %474 = load i32, i32* %400, align 8
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %662

476:                                              ; preds = %472, %469, %464
  %477 = phi i32 [ %473, %472 ], [ %471, %469 ], [ %466, %464 ]
  %478 = load i32, i32* %39, align 8
  %479 = icmp sgt i32 %478, 1
  br i1 %479, label %486, label %480

480:                                              ; preds = %476
  %481 = load i64*, i64** %43, align 8
  %482 = getelementptr inbounds i64, i64* %481, i64 1
  %483 = load i64, i64* %482, align 8
  %484 = add i64 %483, 160
  %485 = inttoptr i64 %484 to %"class.v8::Value"*
  br label %490

486:                                              ; preds = %476
  %487 = load i64*, i64** %426, align 8
  %488 = getelementptr inbounds i64, i64* %487, i64 1
  %489 = bitcast i64* %488 to %"class.v8::Value"*
  br label %490

490:                                              ; preds = %486, %480
  %491 = phi %"class.v8::Value"* [ %485, %480 ], [ %489, %486 ]
  %492 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %491) #9
  br i1 %492, label %493, label %496, !prof !4

493:                                              ; preds = %490
  %494 = bitcast %"class.v8::Value"* %491 to %"class.v8::Int32"*
  %495 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %494) #9
  br label %498

496:                                              ; preds = %490
  %497 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %491, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %498

498:                                              ; preds = %496, %493
  %499 = phi i32 [ %495, %493 ], [ %497, %496 ]
  %500 = load i32, i32* %400, align 8
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %662

502:                                              ; preds = %498
  %503 = load i32, i32* %39, align 8
  %504 = icmp sgt i32 %503, 2
  br i1 %504, label %511, label %505

505:                                              ; preds = %502
  %506 = load i64*, i64** %43, align 8
  %507 = getelementptr inbounds i64, i64* %506, i64 1
  %508 = load i64, i64* %507, align 8
  %509 = add i64 %508, 160
  %510 = inttoptr i64 %509 to %"class.v8::Value"*
  br label %515

511:                                              ; preds = %502
  %512 = load i64*, i64** %426, align 8
  %513 = getelementptr inbounds i64, i64* %512, i64 2
  %514 = bitcast i64* %513 to %"class.v8::Value"*
  br label %515

515:                                              ; preds = %511, %505
  %516 = phi %"class.v8::Value"* [ %510, %505 ], [ %514, %511 ]
  %517 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %516) #9
  br i1 %517, label %518, label %521, !prof !4

518:                                              ; preds = %515
  %519 = bitcast %"class.v8::Value"* %516 to %"class.v8::Int32"*
  %520 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %519) #9
  br label %523

521:                                              ; preds = %515
  %522 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %516, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %523

523:                                              ; preds = %521, %518
  %524 = phi i32 [ %520, %518 ], [ %522, %521 ]
  %525 = load i32, i32* %400, align 8
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %662

527:                                              ; preds = %523
  %528 = load i32, i32* %39, align 8
  %529 = icmp sgt i32 %528, 3
  br i1 %529, label %536, label %530

530:                                              ; preds = %527
  %531 = load i64*, i64** %43, align 8
  %532 = getelementptr inbounds i64, i64* %531, i64 1
  %533 = load i64, i64* %532, align 8
  %534 = add i64 %533, 160
  %535 = inttoptr i64 %534 to %"class.v8::Value"*
  br label %540

536:                                              ; preds = %527
  %537 = load i64*, i64** %426, align 8
  %538 = getelementptr inbounds i64, i64* %537, i64 3
  %539 = bitcast i64* %538 to %"class.v8::Value"*
  br label %540

540:                                              ; preds = %536, %530
  %541 = phi %"class.v8::Value"* [ %535, %530 ], [ %539, %536 ]
  %542 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %541) #9
  br i1 %542, label %543, label %546, !prof !4

543:                                              ; preds = %540
  %544 = bitcast %"class.v8::Value"* %541 to %"class.v8::Int32"*
  %545 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %544) #9
  br label %548

546:                                              ; preds = %540
  %547 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %541, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %548

548:                                              ; preds = %546, %543
  %549 = phi i32 [ %545, %543 ], [ %547, %546 ]
  %550 = load i32, i32* %400, align 8
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %662

552:                                              ; preds = %548
  %553 = load i32, i32* %39, align 8
  %554 = icmp sgt i32 %553, 4
  br i1 %554, label %561, label %555

555:                                              ; preds = %552
  %556 = load i64*, i64** %43, align 8
  %557 = getelementptr inbounds i64, i64* %556, i64 1
  %558 = load i64, i64* %557, align 8
  %559 = add i64 %558, 160
  %560 = inttoptr i64 %559 to %"class.v8::Value"*
  br label %565

561:                                              ; preds = %552
  %562 = load i64*, i64** %426, align 8
  %563 = getelementptr inbounds i64, i64* %562, i64 4
  %564 = bitcast i64* %563 to %"class.v8::Value"*
  br label %565

565:                                              ; preds = %561, %555
  %566 = phi %"class.v8::Value"* [ %560, %555 ], [ %564, %561 ]
  %567 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %566) #9
  br i1 %567, label %568, label %571, !prof !4

568:                                              ; preds = %565
  %569 = bitcast %"class.v8::Value"* %566 to %"class.v8::Uint32"*
  %570 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %569) #9
  br label %578

571:                                              ; preds = %565
  %572 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %566) #9
  br i1 %572, label %573, label %576, !prof !4

573:                                              ; preds = %571
  %574 = bitcast %"class.v8::Value"* %566 to %"class.v8::Int32"*
  %575 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %574) #9
  br label %578

576:                                              ; preds = %571
  %577 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %566, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %578

578:                                              ; preds = %576, %573, %568
  %579 = phi i32 [ %570, %568 ], [ %575, %573 ], [ %577, %576 ]
  %580 = load i32, i32* %400, align 8
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %582, label %662

582:                                              ; preds = %578
  %583 = load i32, i32* %39, align 8
  %584 = icmp sgt i32 %583, 5
  br i1 %584, label %591, label %585

585:                                              ; preds = %582
  %586 = load i64*, i64** %43, align 8
  %587 = getelementptr inbounds i64, i64* %586, i64 1
  %588 = load i64, i64* %587, align 8
  %589 = add i64 %588, 160
  %590 = inttoptr i64 %589 to %"class.v8::Value"*
  br label %595

591:                                              ; preds = %582
  %592 = load i64*, i64** %426, align 8
  %593 = getelementptr inbounds i64, i64* %592, i64 5
  %594 = bitcast i64* %593 to %"class.v8::Value"*
  br label %595

595:                                              ; preds = %591, %585
  %596 = phi %"class.v8::Value"* [ %590, %585 ], [ %594, %591 ]
  %597 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %596) #9
  br i1 %597, label %598, label %601, !prof !4

598:                                              ; preds = %595
  %599 = bitcast %"class.v8::Value"* %596 to %"class.v8::Uint32"*
  %600 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %599) #9
  br label %608

601:                                              ; preds = %595
  %602 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %596) #9
  br i1 %602, label %603, label %606, !prof !4

603:                                              ; preds = %601
  %604 = bitcast %"class.v8::Value"* %596 to %"class.v8::Int32"*
  %605 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %604) #9
  br label %608

606:                                              ; preds = %601
  %607 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %391, %"class.v8::Value"* %596, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %608

608:                                              ; preds = %606, %603, %598
  %609 = phi i32 [ %600, %598 ], [ %605, %603 ], [ %607, %606 ]
  %610 = load i32, i32* %400, align 8
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %662

612:                                              ; preds = %608
  %613 = load i32, i32* %39, align 8
  %614 = icmp sgt i32 %613, 6
  br i1 %614, label %621, label %615

615:                                              ; preds = %612
  %616 = load i64*, i64** %43, align 8
  %617 = getelementptr inbounds i64, i64* %616, i64 1
  %618 = load i64, i64* %617, align 8
  %619 = add i64 %618, 160
  %620 = inttoptr i64 %619 to %"class.v8::Value"*
  br label %625

621:                                              ; preds = %612
  %622 = load i64*, i64** %426, align 8
  %623 = getelementptr inbounds i64, i64* %622, i64 6
  %624 = bitcast i64* %623 to %"class.v8::Value"*
  br label %625

625:                                              ; preds = %621, %615
  %626 = phi %"class.v8::Value"* [ %620, %615 ], [ %624, %621 ]
  %627 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16HTMLVideoElement18wrapper_type_info_E, align 8
  %628 = ptrtoint %"class.v8::Isolate"* %391 to i64
  %629 = add i64 %628, 8
  %630 = inttoptr i64 %629 to %"class.blink::V8PerIsolateData"**
  %631 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %630, align 8
  %632 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %631, %"struct.blink::WrapperTypeInfo"* %627, %"class.v8::Value"* %626) #9
  br i1 %632, label %633, label %655

633:                                              ; preds = %625
  %634 = bitcast %"class.v8::Value"* %626 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = add i64 %635, -1
  %637 = inttoptr i64 %636 to i32*
  %638 = load i32, i32* %637, align 4
  %639 = and i64 %635, -4294967296
  %640 = zext i32 %638 to i64
  %641 = or i64 %639, %640
  %642 = add i64 %641, 7
  %643 = inttoptr i64 %642 to i16*
  %644 = load i16, i16* %643, align 2
  switch i16 %644, label %649 [
    i16 1057, label %645
    i16 1056, label %645
    i16 1040, label %645
  ]

645:                                              ; preds = %633, %633, %633
  %646 = add i64 %635, 19
  %647 = inttoptr i64 %646 to i8**
  %648 = load i8*, i8** %647, align 1
  br label %652

649:                                              ; preds = %633
  %650 = bitcast %"class.v8::Value"* %626 to %"class.v8::Object"*
  %651 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %650, i32 1) #9
  br label %652

652:                                              ; preds = %649, %645
  %653 = phi i8* [ %648, %645 ], [ %651, %649 ]
  %654 = bitcast i8* %653 to %"class.blink::HTMLVideoElement"*
  br label %656

655:                                              ; preds = %625
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %627, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %656

656:                                              ; preds = %655, %652
  %657 = phi %"class.blink::HTMLVideoElement"* [ %654, %652 ], [ null, %655 ]
  %658 = load i32, i32* %400, align 8
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %660, label %662

660:                                              ; preds = %656
  %661 = bitcast i8* %447 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_16HTMLVideoElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %661, %"class.blink::ExecutionContext"* %449, i32 %477, i32 %499, i32 %524, i32 %549, i32 %579, i32 %609, %"class.blink::HTMLVideoElement"* %657, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #9
  br label %662

662:                                              ; preds = %660, %656, %608, %578, %548, %523, %498, %472, %424
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %393, align 8
  %663 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %664 = load i64*, i64** %663, align 8
  %665 = icmp eq i64* %664, null
  br i1 %665, label %675, label %666

666:                                              ; preds = %662
  %667 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %399, align 8
  %668 = bitcast %"class.v8::Isolate"* %667 to %"class.v8::internal::Isolate"*
  %669 = load i64, i64* %664, align 8
  %670 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %668, i64 %669) #9
  %671 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %667) #9
  br i1 %671, label %675, label %672

672:                                              ; preds = %666
  %673 = bitcast i64* %670 to %"class.v8::Value"*
  %674 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %667, %"class.v8::Value"* %673) #9
  br label %675

675:                                              ; preds = %672, %666, %662
  %676 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %677 = icmp eq %"class.WTF::StringImpl"* %676, null
  br i1 %677, label %691, label %678

678:                                              ; preds = %675
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %680 = load atomic i32, i32* %679 monotonic, align 4
  %681 = and i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 0
  %684 = load i32, i32* %683, align 4
  br i1 %682, label %685, label %687

685:                                              ; preds = %678
  %686 = add i32 %684, -1
  store i32 %686, i32* %683, align 4
  br label %687

687:                                              ; preds = %685, %678
  %688 = phi i32 [ %686, %685 ], [ %684, %678 ]
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %691

690:                                              ; preds = %687
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %676) #9
  br label %691

691:                                              ; preds = %675, %687, %690
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %392) #9
  br label %2704

692:                                              ; preds = %381
  %693 = load i32, i32* %39, align 8
  %694 = icmp sgt i32 %693, 6
  br i1 %694, label %701, label %695

695:                                              ; preds = %692
  %696 = load i64*, i64** %43, align 8
  %697 = getelementptr inbounds i64, i64* %696, i64 1
  %698 = load i64, i64* %697, align 8
  %699 = add i64 %698, 160
  %700 = inttoptr i64 %699 to %"class.v8::Value"*
  br label %706

701:                                              ; preds = %692
  %702 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %703 = load i64*, i64** %702, align 8
  %704 = getelementptr inbounds i64, i64* %703, i64 6
  %705 = bitcast i64* %704 to %"class.v8::Value"*
  br label %706

706:                                              ; preds = %695, %701
  %707 = phi %"class.v8::Value"* [ %700, %695 ], [ %705, %701 ]
  %708 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %709 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %708, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8HTMLImageElement18wrapper_type_info_E, %"class.v8::Value"* %707) #9
  br i1 %709, label %710, label %1015

710:                                              ; preds = %706
  %711 = load i64*, i64** %43, align 8
  %712 = getelementptr inbounds i64, i64* %711, i64 1
  %713 = bitcast i64* %712 to %"class.v8::Isolate"**
  %714 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %713, align 8
  %715 = bitcast %"class.blink::ExceptionState"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %715) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %715, i8 -86, i64 56, i1 false) #9
  %716 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %716, align 8
  %717 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 1, i32 0
  store i16 6, i16* %717, align 8
  %718 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 1, i32 1
  store i16 0, i16* %718, align 2
  %719 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 1, i32 2
  %720 = bitcast i8** %719 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %720, align 8
  %721 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %721, align 8
  %722 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 3
  store %"class.v8::Isolate"* %714, %"class.v8::Isolate"** %722, align 8
  %723 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 4
  store i32 0, i32* %723, align 8
  %724 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 5, i32 0, i32 0
  %725 = bitcast %"class.WTF::StringImpl"** %724 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %725, i8 0, i64 16, i1 false) #9
  %726 = load i32, i32* %39, align 8
  %727 = icmp slt i32 %726, 7
  br i1 %727, label %728, label %748, !prof !5

728:                                              ; preds = %710
  %729 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %729) #9
  %730 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %726) #9
  %731 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %730, %"class.WTF::StringImpl"** %731, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %13) #9
  %732 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %731, align 8
  %733 = icmp eq %"class.WTF::StringImpl"* %732, null
  br i1 %733, label %747, label %734

734:                                              ; preds = %728
  %735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %732, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = load atomic i32, i32* %735 monotonic, align 4
  %737 = and i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %732, i64 0, i32 0
  %740 = load i32, i32* %739, align 4
  br i1 %738, label %741, label %743

741:                                              ; preds = %734
  %742 = add i32 %740, -1
  store i32 %742, i32* %739, align 4
  br label %743

743:                                              ; preds = %741, %734
  %744 = phi i32 [ %742, %741 ], [ %740, %734 ]
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %747

746:                                              ; preds = %743
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %732) #9
  br label %747

747:                                              ; preds = %746, %743, %728
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %729) #9
  br label %985

748:                                              ; preds = %710
  %749 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %750 = load i64*, i64** %749, align 8
  %751 = getelementptr inbounds i64, i64* %750, i64 -1
  %752 = bitcast i64* %751 to %"class.v8::Object"*
  %753 = load i64, i64* %751, align 8
  %754 = add i64 %753, -1
  %755 = inttoptr i64 %754 to i32*
  %756 = load i32, i32* %755, align 4
  %757 = and i64 %753, -4294967296
  %758 = zext i32 %756 to i64
  %759 = or i64 %757, %758
  %760 = add i64 %759, 7
  %761 = inttoptr i64 %760 to i16*
  %762 = load i16, i16* %761, align 2
  switch i16 %762, label %767 [
    i16 1057, label %763
    i16 1056, label %763
    i16 1040, label %763
  ]

763:                                              ; preds = %748, %748, %748
  %764 = add i64 %753, 19
  %765 = inttoptr i64 %764 to i8**
  %766 = load i8*, i8** %765, align 1
  br label %769

767:                                              ; preds = %748
  %768 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %752, i32 1) #9
  br label %769

769:                                              ; preds = %767, %763
  %770 = phi i8* [ %766, %763 ], [ %768, %767 ]
  %771 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %752) #9
  %772 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %771) #9
  %773 = load i32, i32* %39, align 8
  %774 = icmp sgt i32 %773, 0
  br i1 %774, label %781, label %775

775:                                              ; preds = %769
  %776 = load i64*, i64** %43, align 8
  %777 = getelementptr inbounds i64, i64* %776, i64 1
  %778 = load i64, i64* %777, align 8
  %779 = add i64 %778, 160
  %780 = inttoptr i64 %779 to %"class.v8::Value"*
  br label %784

781:                                              ; preds = %769
  %782 = bitcast i64** %749 to %"class.v8::Value"**
  %783 = load %"class.v8::Value"*, %"class.v8::Value"** %782, align 8
  br label %784

784:                                              ; preds = %781, %775
  %785 = phi %"class.v8::Value"* [ %780, %775 ], [ %783, %781 ]
  %786 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %785) #9
  br i1 %786, label %787, label %790, !prof !4

787:                                              ; preds = %784
  %788 = bitcast %"class.v8::Value"* %785 to %"class.v8::Uint32"*
  %789 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %788) #9
  br label %799

790:                                              ; preds = %784
  %791 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %785) #9
  br i1 %791, label %792, label %795, !prof !4

792:                                              ; preds = %790
  %793 = bitcast %"class.v8::Value"* %785 to %"class.v8::Int32"*
  %794 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %793) #9
  br label %799

795:                                              ; preds = %790
  %796 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %714, %"class.v8::Value"* %785, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  %797 = load i32, i32* %723, align 8
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %799, label %985

799:                                              ; preds = %795, %792, %787
  %800 = phi i32 [ %796, %795 ], [ %794, %792 ], [ %789, %787 ]
  %801 = load i32, i32* %39, align 8
  %802 = icmp sgt i32 %801, 1
  br i1 %802, label %809, label %803

803:                                              ; preds = %799
  %804 = load i64*, i64** %43, align 8
  %805 = getelementptr inbounds i64, i64* %804, i64 1
  %806 = load i64, i64* %805, align 8
  %807 = add i64 %806, 160
  %808 = inttoptr i64 %807 to %"class.v8::Value"*
  br label %813

809:                                              ; preds = %799
  %810 = load i64*, i64** %749, align 8
  %811 = getelementptr inbounds i64, i64* %810, i64 1
  %812 = bitcast i64* %811 to %"class.v8::Value"*
  br label %813

813:                                              ; preds = %809, %803
  %814 = phi %"class.v8::Value"* [ %808, %803 ], [ %812, %809 ]
  %815 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %814) #9
  br i1 %815, label %816, label %819, !prof !4

816:                                              ; preds = %813
  %817 = bitcast %"class.v8::Value"* %814 to %"class.v8::Int32"*
  %818 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %817) #9
  br label %821

819:                                              ; preds = %813
  %820 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %714, %"class.v8::Value"* %814, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %821

821:                                              ; preds = %819, %816
  %822 = phi i32 [ %818, %816 ], [ %820, %819 ]
  %823 = load i32, i32* %723, align 8
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %825, label %985

825:                                              ; preds = %821
  %826 = load i32, i32* %39, align 8
  %827 = icmp sgt i32 %826, 2
  br i1 %827, label %834, label %828

828:                                              ; preds = %825
  %829 = load i64*, i64** %43, align 8
  %830 = getelementptr inbounds i64, i64* %829, i64 1
  %831 = load i64, i64* %830, align 8
  %832 = add i64 %831, 160
  %833 = inttoptr i64 %832 to %"class.v8::Value"*
  br label %838

834:                                              ; preds = %825
  %835 = load i64*, i64** %749, align 8
  %836 = getelementptr inbounds i64, i64* %835, i64 2
  %837 = bitcast i64* %836 to %"class.v8::Value"*
  br label %838

838:                                              ; preds = %834, %828
  %839 = phi %"class.v8::Value"* [ %833, %828 ], [ %837, %834 ]
  %840 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %839) #9
  br i1 %840, label %841, label %844, !prof !4

841:                                              ; preds = %838
  %842 = bitcast %"class.v8::Value"* %839 to %"class.v8::Int32"*
  %843 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %842) #9
  br label %846

844:                                              ; preds = %838
  %845 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %714, %"class.v8::Value"* %839, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %846

846:                                              ; preds = %844, %841
  %847 = phi i32 [ %843, %841 ], [ %845, %844 ]
  %848 = load i32, i32* %723, align 8
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %985

850:                                              ; preds = %846
  %851 = load i32, i32* %39, align 8
  %852 = icmp sgt i32 %851, 3
  br i1 %852, label %859, label %853

853:                                              ; preds = %850
  %854 = load i64*, i64** %43, align 8
  %855 = getelementptr inbounds i64, i64* %854, i64 1
  %856 = load i64, i64* %855, align 8
  %857 = add i64 %856, 160
  %858 = inttoptr i64 %857 to %"class.v8::Value"*
  br label %863

859:                                              ; preds = %850
  %860 = load i64*, i64** %749, align 8
  %861 = getelementptr inbounds i64, i64* %860, i64 3
  %862 = bitcast i64* %861 to %"class.v8::Value"*
  br label %863

863:                                              ; preds = %859, %853
  %864 = phi %"class.v8::Value"* [ %858, %853 ], [ %862, %859 ]
  %865 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %864) #9
  br i1 %865, label %866, label %869, !prof !4

866:                                              ; preds = %863
  %867 = bitcast %"class.v8::Value"* %864 to %"class.v8::Int32"*
  %868 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %867) #9
  br label %871

869:                                              ; preds = %863
  %870 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %714, %"class.v8::Value"* %864, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %871

871:                                              ; preds = %869, %866
  %872 = phi i32 [ %868, %866 ], [ %870, %869 ]
  %873 = load i32, i32* %723, align 8
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %985

875:                                              ; preds = %871
  %876 = load i32, i32* %39, align 8
  %877 = icmp sgt i32 %876, 4
  br i1 %877, label %884, label %878

878:                                              ; preds = %875
  %879 = load i64*, i64** %43, align 8
  %880 = getelementptr inbounds i64, i64* %879, i64 1
  %881 = load i64, i64* %880, align 8
  %882 = add i64 %881, 160
  %883 = inttoptr i64 %882 to %"class.v8::Value"*
  br label %888

884:                                              ; preds = %875
  %885 = load i64*, i64** %749, align 8
  %886 = getelementptr inbounds i64, i64* %885, i64 4
  %887 = bitcast i64* %886 to %"class.v8::Value"*
  br label %888

888:                                              ; preds = %884, %878
  %889 = phi %"class.v8::Value"* [ %883, %878 ], [ %887, %884 ]
  %890 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %889) #9
  br i1 %890, label %891, label %894, !prof !4

891:                                              ; preds = %888
  %892 = bitcast %"class.v8::Value"* %889 to %"class.v8::Uint32"*
  %893 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %892) #9
  br label %901

894:                                              ; preds = %888
  %895 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %889) #9
  br i1 %895, label %896, label %899, !prof !4

896:                                              ; preds = %894
  %897 = bitcast %"class.v8::Value"* %889 to %"class.v8::Int32"*
  %898 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %897) #9
  br label %901

899:                                              ; preds = %894
  %900 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %714, %"class.v8::Value"* %889, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %901

901:                                              ; preds = %899, %896, %891
  %902 = phi i32 [ %893, %891 ], [ %898, %896 ], [ %900, %899 ]
  %903 = load i32, i32* %723, align 8
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %985

905:                                              ; preds = %901
  %906 = load i32, i32* %39, align 8
  %907 = icmp sgt i32 %906, 5
  br i1 %907, label %914, label %908

908:                                              ; preds = %905
  %909 = load i64*, i64** %43, align 8
  %910 = getelementptr inbounds i64, i64* %909, i64 1
  %911 = load i64, i64* %910, align 8
  %912 = add i64 %911, 160
  %913 = inttoptr i64 %912 to %"class.v8::Value"*
  br label %918

914:                                              ; preds = %905
  %915 = load i64*, i64** %749, align 8
  %916 = getelementptr inbounds i64, i64* %915, i64 5
  %917 = bitcast i64* %916 to %"class.v8::Value"*
  br label %918

918:                                              ; preds = %914, %908
  %919 = phi %"class.v8::Value"* [ %913, %908 ], [ %917, %914 ]
  %920 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %919) #9
  br i1 %920, label %921, label %924, !prof !4

921:                                              ; preds = %918
  %922 = bitcast %"class.v8::Value"* %919 to %"class.v8::Uint32"*
  %923 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %922) #9
  br label %931

924:                                              ; preds = %918
  %925 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %919) #9
  br i1 %925, label %926, label %929, !prof !4

926:                                              ; preds = %924
  %927 = bitcast %"class.v8::Value"* %919 to %"class.v8::Int32"*
  %928 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %927) #9
  br label %931

929:                                              ; preds = %924
  %930 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %714, %"class.v8::Value"* %919, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %931

931:                                              ; preds = %929, %926, %921
  %932 = phi i32 [ %923, %921 ], [ %928, %926 ], [ %930, %929 ]
  %933 = load i32, i32* %723, align 8
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %935, label %985

935:                                              ; preds = %931
  %936 = load i32, i32* %39, align 8
  %937 = icmp sgt i32 %936, 6
  br i1 %937, label %944, label %938

938:                                              ; preds = %935
  %939 = load i64*, i64** %43, align 8
  %940 = getelementptr inbounds i64, i64* %939, i64 1
  %941 = load i64, i64* %940, align 8
  %942 = add i64 %941, 160
  %943 = inttoptr i64 %942 to %"class.v8::Value"*
  br label %948

944:                                              ; preds = %935
  %945 = load i64*, i64** %749, align 8
  %946 = getelementptr inbounds i64, i64* %945, i64 6
  %947 = bitcast i64* %946 to %"class.v8::Value"*
  br label %948

948:                                              ; preds = %944, %938
  %949 = phi %"class.v8::Value"* [ %943, %938 ], [ %947, %944 ]
  %950 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16HTMLImageElement18wrapper_type_info_E, align 8
  %951 = ptrtoint %"class.v8::Isolate"* %714 to i64
  %952 = add i64 %951, 8
  %953 = inttoptr i64 %952 to %"class.blink::V8PerIsolateData"**
  %954 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %953, align 8
  %955 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %954, %"struct.blink::WrapperTypeInfo"* %950, %"class.v8::Value"* %949) #9
  br i1 %955, label %956, label %978

956:                                              ; preds = %948
  %957 = bitcast %"class.v8::Value"* %949 to i64*
  %958 = load i64, i64* %957, align 8
  %959 = add i64 %958, -1
  %960 = inttoptr i64 %959 to i32*
  %961 = load i32, i32* %960, align 4
  %962 = and i64 %958, -4294967296
  %963 = zext i32 %961 to i64
  %964 = or i64 %962, %963
  %965 = add i64 %964, 7
  %966 = inttoptr i64 %965 to i16*
  %967 = load i16, i16* %966, align 2
  switch i16 %967, label %972 [
    i16 1057, label %968
    i16 1056, label %968
    i16 1040, label %968
  ]

968:                                              ; preds = %956, %956, %956
  %969 = add i64 %958, 19
  %970 = inttoptr i64 %969 to i8**
  %971 = load i8*, i8** %970, align 1
  br label %975

972:                                              ; preds = %956
  %973 = bitcast %"class.v8::Value"* %949 to %"class.v8::Object"*
  %974 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %973, i32 1) #9
  br label %975

975:                                              ; preds = %972, %968
  %976 = phi i8* [ %971, %968 ], [ %974, %972 ]
  %977 = bitcast i8* %976 to %"class.blink::HTMLImageElement"*
  br label %979

978:                                              ; preds = %948
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %950, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %979

979:                                              ; preds = %978, %975
  %980 = phi %"class.blink::HTMLImageElement"* [ %977, %975 ], [ null, %978 ]
  %981 = load i32, i32* %723, align 8
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %983, label %985

983:                                              ; preds = %979
  %984 = bitcast i8* %770 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_16HTMLImageElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %984, %"class.blink::ExecutionContext"* %772, i32 %800, i32 %822, i32 %847, i32 %872, i32 %902, i32 %932, %"class.blink::HTMLImageElement"* %980, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #9
  br label %985

985:                                              ; preds = %983, %979, %931, %901, %871, %846, %821, %795, %747
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %716, align 8
  %986 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %12, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %987 = load i64*, i64** %986, align 8
  %988 = icmp eq i64* %987, null
  br i1 %988, label %998, label %989

989:                                              ; preds = %985
  %990 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %722, align 8
  %991 = bitcast %"class.v8::Isolate"* %990 to %"class.v8::internal::Isolate"*
  %992 = load i64, i64* %987, align 8
  %993 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %991, i64 %992) #9
  %994 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %990) #9
  br i1 %994, label %998, label %995

995:                                              ; preds = %989
  %996 = bitcast i64* %993 to %"class.v8::Value"*
  %997 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %990, %"class.v8::Value"* %996) #9
  br label %998

998:                                              ; preds = %995, %989, %985
  %999 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %724, align 8
  %1000 = icmp eq %"class.WTF::StringImpl"* %999, null
  br i1 %1000, label %1014, label %1001

1001:                                             ; preds = %998
  %1002 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %999, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1003 = load atomic i32, i32* %1002 monotonic, align 4
  %1004 = and i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %999, i64 0, i32 0
  %1007 = load i32, i32* %1006, align 4
  br i1 %1005, label %1008, label %1010

1008:                                             ; preds = %1001
  %1009 = add i32 %1007, -1
  store i32 %1009, i32* %1006, align 4
  br label %1010

1010:                                             ; preds = %1008, %1001
  %1011 = phi i32 [ %1009, %1008 ], [ %1007, %1001 ]
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %1014

1013:                                             ; preds = %1010
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %999) #9
  br label %1014

1014:                                             ; preds = %998, %1010, %1013
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %715) #9
  br label %2704

1015:                                             ; preds = %706
  %1016 = load i32, i32* %39, align 8
  %1017 = icmp sgt i32 %1016, 6
  br i1 %1017, label %1024, label %1018

1018:                                             ; preds = %1015
  %1019 = load i64*, i64** %43, align 8
  %1020 = getelementptr inbounds i64, i64* %1019, i64 1
  %1021 = load i64, i64* %1020, align 8
  %1022 = add i64 %1021, 160
  %1023 = inttoptr i64 %1022 to %"class.v8::Value"*
  br label %1029

1024:                                             ; preds = %1015
  %1025 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1026 = load i64*, i64** %1025, align 8
  %1027 = getelementptr inbounds i64, i64* %1026, i64 6
  %1028 = bitcast i64* %1027 to %"class.v8::Value"*
  br label %1029

1029:                                             ; preds = %1018, %1024
  %1030 = phi %"class.v8::Value"* [ %1023, %1018 ], [ %1028, %1024 ]
  %1031 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %1032 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1031, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink19V8HTMLCanvasElement18wrapper_type_info_E, %"class.v8::Value"* %1030) #9
  br i1 %1032, label %1033, label %1341

1033:                                             ; preds = %1029
  %1034 = load i64*, i64** %43, align 8
  %1035 = getelementptr inbounds i64, i64* %1034, i64 1
  %1036 = bitcast i64* %1035 to %"class.v8::Isolate"**
  %1037 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1036, align 8
  %1038 = bitcast %"class.blink::ExceptionState"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1038) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1038, i8 -86, i64 56, i1 false) #9
  %1039 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1039, align 8
  %1040 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 0
  store i16 6, i16* %1040, align 8
  %1041 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 1
  store i16 0, i16* %1041, align 2
  %1042 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 1, i32 2
  %1043 = bitcast i8** %1042 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %1043, align 8
  %1044 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %1044, align 8
  %1045 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 3
  store %"class.v8::Isolate"* %1037, %"class.v8::Isolate"** %1045, align 8
  %1046 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 4
  store i32 0, i32* %1046, align 8
  %1047 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 5, i32 0, i32 0
  %1048 = bitcast %"class.WTF::StringImpl"** %1047 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1048, i8 0, i64 16, i1 false) #9
  %1049 = load i32, i32* %39, align 8
  %1050 = icmp slt i32 %1049, 7
  br i1 %1050, label %1051, label %1071, !prof !5

1051:                                             ; preds = %1033
  %1052 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1052) #9
  %1053 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %1049) #9
  %1054 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1053, %"class.WTF::StringImpl"** %1054, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #9
  %1055 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1054, align 8
  %1056 = icmp eq %"class.WTF::StringImpl"* %1055, null
  br i1 %1056, label %1070, label %1057

1057:                                             ; preds = %1051
  %1058 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1055, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1059 = load atomic i32, i32* %1058 monotonic, align 4
  %1060 = and i32 %1059, 2
  %1061 = icmp eq i32 %1060, 0
  %1062 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1055, i64 0, i32 0
  %1063 = load i32, i32* %1062, align 4
  br i1 %1061, label %1064, label %1066

1064:                                             ; preds = %1057
  %1065 = add i32 %1063, -1
  store i32 %1065, i32* %1062, align 4
  br label %1066

1066:                                             ; preds = %1064, %1057
  %1067 = phi i32 [ %1065, %1064 ], [ %1063, %1057 ]
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1069, label %1070

1069:                                             ; preds = %1066
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1055) #9
  br label %1070

1070:                                             ; preds = %1069, %1066, %1051
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1052) #9
  br label %1311

1071:                                             ; preds = %1033
  %1072 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1073 = load i64*, i64** %1072, align 8
  %1074 = getelementptr inbounds i64, i64* %1073, i64 -1
  %1075 = bitcast i64* %1074 to %"class.v8::Object"*
  %1076 = load i64, i64* %1074, align 8
  %1077 = add i64 %1076, -1
  %1078 = inttoptr i64 %1077 to i32*
  %1079 = load i32, i32* %1078, align 4
  %1080 = and i64 %1076, -4294967296
  %1081 = zext i32 %1079 to i64
  %1082 = or i64 %1080, %1081
  %1083 = add i64 %1082, 7
  %1084 = inttoptr i64 %1083 to i16*
  %1085 = load i16, i16* %1084, align 2
  switch i16 %1085, label %1090 [
    i16 1057, label %1086
    i16 1056, label %1086
    i16 1040, label %1086
  ]

1086:                                             ; preds = %1071, %1071, %1071
  %1087 = add i64 %1076, 19
  %1088 = inttoptr i64 %1087 to i8**
  %1089 = load i8*, i8** %1088, align 1
  br label %1092

1090:                                             ; preds = %1071
  %1091 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1075, i32 1) #9
  br label %1092

1092:                                             ; preds = %1090, %1086
  %1093 = phi i8* [ %1089, %1086 ], [ %1091, %1090 ]
  %1094 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1075) #9
  %1095 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1094) #9
  %1096 = load i32, i32* %39, align 8
  %1097 = icmp sgt i32 %1096, 0
  br i1 %1097, label %1104, label %1098

1098:                                             ; preds = %1092
  %1099 = load i64*, i64** %43, align 8
  %1100 = getelementptr inbounds i64, i64* %1099, i64 1
  %1101 = load i64, i64* %1100, align 8
  %1102 = add i64 %1101, 160
  %1103 = inttoptr i64 %1102 to %"class.v8::Value"*
  br label %1107

1104:                                             ; preds = %1092
  %1105 = bitcast i64** %1072 to %"class.v8::Value"**
  %1106 = load %"class.v8::Value"*, %"class.v8::Value"** %1105, align 8
  br label %1107

1107:                                             ; preds = %1104, %1098
  %1108 = phi %"class.v8::Value"* [ %1103, %1098 ], [ %1106, %1104 ]
  %1109 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1108) #9
  br i1 %1109, label %1110, label %1113, !prof !4

1110:                                             ; preds = %1107
  %1111 = bitcast %"class.v8::Value"* %1108 to %"class.v8::Uint32"*
  %1112 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1111) #9
  br label %1122

1113:                                             ; preds = %1107
  %1114 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1108) #9
  br i1 %1114, label %1115, label %1118, !prof !4

1115:                                             ; preds = %1113
  %1116 = bitcast %"class.v8::Value"* %1108 to %"class.v8::Int32"*
  %1117 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1116) #9
  br label %1122

1118:                                             ; preds = %1113
  %1119 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1037, %"class.v8::Value"* %1108, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  %1120 = load i32, i32* %1046, align 8
  %1121 = icmp eq i32 %1120, 0
  br i1 %1121, label %1122, label %1311

1122:                                             ; preds = %1118, %1115, %1110
  %1123 = phi i32 [ %1119, %1118 ], [ %1117, %1115 ], [ %1112, %1110 ]
  %1124 = load i32, i32* %39, align 8
  %1125 = icmp sgt i32 %1124, 1
  br i1 %1125, label %1132, label %1126

1126:                                             ; preds = %1122
  %1127 = load i64*, i64** %43, align 8
  %1128 = getelementptr inbounds i64, i64* %1127, i64 1
  %1129 = load i64, i64* %1128, align 8
  %1130 = add i64 %1129, 160
  %1131 = inttoptr i64 %1130 to %"class.v8::Value"*
  br label %1136

1132:                                             ; preds = %1122
  %1133 = load i64*, i64** %1072, align 8
  %1134 = getelementptr inbounds i64, i64* %1133, i64 1
  %1135 = bitcast i64* %1134 to %"class.v8::Value"*
  br label %1136

1136:                                             ; preds = %1132, %1126
  %1137 = phi %"class.v8::Value"* [ %1131, %1126 ], [ %1135, %1132 ]
  %1138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1137) #9
  br i1 %1138, label %1139, label %1142, !prof !4

1139:                                             ; preds = %1136
  %1140 = bitcast %"class.v8::Value"* %1137 to %"class.v8::Int32"*
  %1141 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1140) #9
  br label %1144

1142:                                             ; preds = %1136
  %1143 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1037, %"class.v8::Value"* %1137, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1144

1144:                                             ; preds = %1142, %1139
  %1145 = phi i32 [ %1141, %1139 ], [ %1143, %1142 ]
  %1146 = load i32, i32* %1046, align 8
  %1147 = icmp eq i32 %1146, 0
  br i1 %1147, label %1148, label %1311

1148:                                             ; preds = %1144
  %1149 = load i32, i32* %39, align 8
  %1150 = icmp sgt i32 %1149, 2
  br i1 %1150, label %1157, label %1151

1151:                                             ; preds = %1148
  %1152 = load i64*, i64** %43, align 8
  %1153 = getelementptr inbounds i64, i64* %1152, i64 1
  %1154 = load i64, i64* %1153, align 8
  %1155 = add i64 %1154, 160
  %1156 = inttoptr i64 %1155 to %"class.v8::Value"*
  br label %1161

1157:                                             ; preds = %1148
  %1158 = load i64*, i64** %1072, align 8
  %1159 = getelementptr inbounds i64, i64* %1158, i64 2
  %1160 = bitcast i64* %1159 to %"class.v8::Value"*
  br label %1161

1161:                                             ; preds = %1157, %1151
  %1162 = phi %"class.v8::Value"* [ %1156, %1151 ], [ %1160, %1157 ]
  %1163 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1162) #9
  br i1 %1163, label %1164, label %1167, !prof !4

1164:                                             ; preds = %1161
  %1165 = bitcast %"class.v8::Value"* %1162 to %"class.v8::Int32"*
  %1166 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1165) #9
  br label %1169

1167:                                             ; preds = %1161
  %1168 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1037, %"class.v8::Value"* %1162, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1169

1169:                                             ; preds = %1167, %1164
  %1170 = phi i32 [ %1166, %1164 ], [ %1168, %1167 ]
  %1171 = load i32, i32* %1046, align 8
  %1172 = icmp eq i32 %1171, 0
  br i1 %1172, label %1173, label %1311

1173:                                             ; preds = %1169
  %1174 = load i32, i32* %39, align 8
  %1175 = icmp sgt i32 %1174, 3
  br i1 %1175, label %1182, label %1176

1176:                                             ; preds = %1173
  %1177 = load i64*, i64** %43, align 8
  %1178 = getelementptr inbounds i64, i64* %1177, i64 1
  %1179 = load i64, i64* %1178, align 8
  %1180 = add i64 %1179, 160
  %1181 = inttoptr i64 %1180 to %"class.v8::Value"*
  br label %1186

1182:                                             ; preds = %1173
  %1183 = load i64*, i64** %1072, align 8
  %1184 = getelementptr inbounds i64, i64* %1183, i64 3
  %1185 = bitcast i64* %1184 to %"class.v8::Value"*
  br label %1186

1186:                                             ; preds = %1182, %1176
  %1187 = phi %"class.v8::Value"* [ %1181, %1176 ], [ %1185, %1182 ]
  %1188 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1187) #9
  br i1 %1188, label %1189, label %1192, !prof !4

1189:                                             ; preds = %1186
  %1190 = bitcast %"class.v8::Value"* %1187 to %"class.v8::Int32"*
  %1191 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1190) #9
  br label %1194

1192:                                             ; preds = %1186
  %1193 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1037, %"class.v8::Value"* %1187, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1194

1194:                                             ; preds = %1192, %1189
  %1195 = phi i32 [ %1191, %1189 ], [ %1193, %1192 ]
  %1196 = load i32, i32* %1046, align 8
  %1197 = icmp eq i32 %1196, 0
  br i1 %1197, label %1198, label %1311

1198:                                             ; preds = %1194
  %1199 = load i32, i32* %39, align 8
  %1200 = icmp sgt i32 %1199, 4
  br i1 %1200, label %1207, label %1201

1201:                                             ; preds = %1198
  %1202 = load i64*, i64** %43, align 8
  %1203 = getelementptr inbounds i64, i64* %1202, i64 1
  %1204 = load i64, i64* %1203, align 8
  %1205 = add i64 %1204, 160
  %1206 = inttoptr i64 %1205 to %"class.v8::Value"*
  br label %1211

1207:                                             ; preds = %1198
  %1208 = load i64*, i64** %1072, align 8
  %1209 = getelementptr inbounds i64, i64* %1208, i64 4
  %1210 = bitcast i64* %1209 to %"class.v8::Value"*
  br label %1211

1211:                                             ; preds = %1207, %1201
  %1212 = phi %"class.v8::Value"* [ %1206, %1201 ], [ %1210, %1207 ]
  %1213 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1212) #9
  br i1 %1213, label %1214, label %1217, !prof !4

1214:                                             ; preds = %1211
  %1215 = bitcast %"class.v8::Value"* %1212 to %"class.v8::Uint32"*
  %1216 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1215) #9
  br label %1224

1217:                                             ; preds = %1211
  %1218 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1212) #9
  br i1 %1218, label %1219, label %1222, !prof !4

1219:                                             ; preds = %1217
  %1220 = bitcast %"class.v8::Value"* %1212 to %"class.v8::Int32"*
  %1221 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1220) #9
  br label %1224

1222:                                             ; preds = %1217
  %1223 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1037, %"class.v8::Value"* %1212, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1224

1224:                                             ; preds = %1222, %1219, %1214
  %1225 = phi i32 [ %1216, %1214 ], [ %1221, %1219 ], [ %1223, %1222 ]
  %1226 = load i32, i32* %1046, align 8
  %1227 = icmp eq i32 %1226, 0
  br i1 %1227, label %1228, label %1311

1228:                                             ; preds = %1224
  %1229 = load i32, i32* %39, align 8
  %1230 = icmp sgt i32 %1229, 5
  br i1 %1230, label %1237, label %1231

1231:                                             ; preds = %1228
  %1232 = load i64*, i64** %43, align 8
  %1233 = getelementptr inbounds i64, i64* %1232, i64 1
  %1234 = load i64, i64* %1233, align 8
  %1235 = add i64 %1234, 160
  %1236 = inttoptr i64 %1235 to %"class.v8::Value"*
  br label %1241

1237:                                             ; preds = %1228
  %1238 = load i64*, i64** %1072, align 8
  %1239 = getelementptr inbounds i64, i64* %1238, i64 5
  %1240 = bitcast i64* %1239 to %"class.v8::Value"*
  br label %1241

1241:                                             ; preds = %1237, %1231
  %1242 = phi %"class.v8::Value"* [ %1236, %1231 ], [ %1240, %1237 ]
  %1243 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1242) #9
  br i1 %1243, label %1244, label %1247, !prof !4

1244:                                             ; preds = %1241
  %1245 = bitcast %"class.v8::Value"* %1242 to %"class.v8::Uint32"*
  %1246 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1245) #9
  br label %1254

1247:                                             ; preds = %1241
  %1248 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1242) #9
  br i1 %1248, label %1249, label %1252, !prof !4

1249:                                             ; preds = %1247
  %1250 = bitcast %"class.v8::Value"* %1242 to %"class.v8::Int32"*
  %1251 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1250) #9
  br label %1254

1252:                                             ; preds = %1247
  %1253 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1037, %"class.v8::Value"* %1242, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1254

1254:                                             ; preds = %1252, %1249, %1244
  %1255 = phi i32 [ %1246, %1244 ], [ %1251, %1249 ], [ %1253, %1252 ]
  %1256 = load i32, i32* %1046, align 8
  %1257 = icmp eq i32 %1256, 0
  br i1 %1257, label %1258, label %1311

1258:                                             ; preds = %1254
  %1259 = load i32, i32* %39, align 8
  %1260 = icmp sgt i32 %1259, 6
  br i1 %1260, label %1267, label %1261

1261:                                             ; preds = %1258
  %1262 = load i64*, i64** %43, align 8
  %1263 = getelementptr inbounds i64, i64* %1262, i64 1
  %1264 = load i64, i64* %1263, align 8
  %1265 = add i64 %1264, 160
  %1266 = inttoptr i64 %1265 to %"class.v8::Value"*
  br label %1271

1267:                                             ; preds = %1258
  %1268 = load i64*, i64** %1072, align 8
  %1269 = getelementptr inbounds i64, i64* %1268, i64 6
  %1270 = bitcast i64* %1269 to %"class.v8::Value"*
  br label %1271

1271:                                             ; preds = %1267, %1261
  %1272 = phi %"class.v8::Value"* [ %1266, %1261 ], [ %1270, %1267 ]
  %1273 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17HTMLCanvasElement18wrapper_type_info_E, align 8
  %1274 = ptrtoint %"class.v8::Isolate"* %1037 to i64
  %1275 = add i64 %1274, 8
  %1276 = inttoptr i64 %1275 to %"class.blink::V8PerIsolateData"**
  %1277 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %1276, align 8
  %1278 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1277, %"struct.blink::WrapperTypeInfo"* %1273, %"class.v8::Value"* %1272) #9
  br i1 %1278, label %1279, label %1301

1279:                                             ; preds = %1271
  %1280 = bitcast %"class.v8::Value"* %1272 to i64*
  %1281 = load i64, i64* %1280, align 8
  %1282 = add i64 %1281, -1
  %1283 = inttoptr i64 %1282 to i32*
  %1284 = load i32, i32* %1283, align 4
  %1285 = and i64 %1281, -4294967296
  %1286 = zext i32 %1284 to i64
  %1287 = or i64 %1285, %1286
  %1288 = add i64 %1287, 7
  %1289 = inttoptr i64 %1288 to i16*
  %1290 = load i16, i16* %1289, align 2
  switch i16 %1290, label %1295 [
    i16 1057, label %1291
    i16 1056, label %1291
    i16 1040, label %1291
  ]

1291:                                             ; preds = %1279, %1279, %1279
  %1292 = add i64 %1281, 19
  %1293 = inttoptr i64 %1292 to i8**
  %1294 = load i8*, i8** %1293, align 1
  br label %1298

1295:                                             ; preds = %1279
  %1296 = bitcast %"class.v8::Value"* %1272 to %"class.v8::Object"*
  %1297 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1296, i32 1) #9
  br label %1298

1298:                                             ; preds = %1295, %1291
  %1299 = phi i8* [ %1294, %1291 ], [ %1297, %1295 ]
  %1300 = bitcast i8* %1299 to %"class.blink::HTMLCanvasElement"*
  br label %1302

1301:                                             ; preds = %1271
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %1273, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1302

1302:                                             ; preds = %1301, %1298
  %1303 = phi %"class.blink::HTMLCanvasElement"* [ %1300, %1298 ], [ null, %1301 ]
  %1304 = load i32, i32* %1046, align 8
  %1305 = icmp eq i32 %1304, 0
  br i1 %1305, label %1306, label %1311

1306:                                             ; preds = %1302
  %1307 = bitcast i8* %1093 to %"class.blink::WebGLRenderingContextBase"*
  %1308 = icmp eq %"class.blink::HTMLCanvasElement"* %1303, null
  %1309 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %1303, i64 0, i32 3
  %1310 = select i1 %1308, %"class.blink::CanvasRenderingContextHost"* null, %"class.blink::CanvasRenderingContextHost"* %1309
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_26CanvasRenderingContextHostERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %1307, %"class.blink::ExecutionContext"* %1095, i32 %1123, i32 %1145, i32 %1170, i32 %1195, i32 %1225, i32 %1255, %"class.blink::CanvasRenderingContextHost"* %1310, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %10) #9
  br label %1311

1311:                                             ; preds = %1306, %1302, %1254, %1224, %1194, %1169, %1144, %1118, %1070
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1039, align 8
  %1312 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %10, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %1313 = load i64*, i64** %1312, align 8
  %1314 = icmp eq i64* %1313, null
  br i1 %1314, label %1324, label %1315

1315:                                             ; preds = %1311
  %1316 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1045, align 8
  %1317 = bitcast %"class.v8::Isolate"* %1316 to %"class.v8::internal::Isolate"*
  %1318 = load i64, i64* %1313, align 8
  %1319 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %1317, i64 %1318) #9
  %1320 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %1316) #9
  br i1 %1320, label %1324, label %1321

1321:                                             ; preds = %1315
  %1322 = bitcast i64* %1319 to %"class.v8::Value"*
  %1323 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %1316, %"class.v8::Value"* %1322) #9
  br label %1324

1324:                                             ; preds = %1321, %1315, %1311
  %1325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1047, align 8
  %1326 = icmp eq %"class.WTF::StringImpl"* %1325, null
  br i1 %1326, label %1340, label %1327

1327:                                             ; preds = %1324
  %1328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1329 = load atomic i32, i32* %1328 monotonic, align 4
  %1330 = and i32 %1329, 2
  %1331 = icmp eq i32 %1330, 0
  %1332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1325, i64 0, i32 0
  %1333 = load i32, i32* %1332, align 4
  br i1 %1331, label %1334, label %1336

1334:                                             ; preds = %1327
  %1335 = add i32 %1333, -1
  store i32 %1335, i32* %1332, align 4
  br label %1336

1336:                                             ; preds = %1334, %1327
  %1337 = phi i32 [ %1335, %1334 ], [ %1333, %1327 ]
  %1338 = icmp eq i32 %1337, 0
  br i1 %1338, label %1339, label %1340

1339:                                             ; preds = %1336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1325) #9
  br label %1340

1340:                                             ; preds = %1324, %1336, %1339
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1038) #9
  br label %2704

1341:                                             ; preds = %1029
  %1342 = load i32, i32* %39, align 8
  %1343 = icmp sgt i32 %1342, 6
  br i1 %1343, label %1350, label %1344

1344:                                             ; preds = %1341
  %1345 = load i64*, i64** %43, align 8
  %1346 = getelementptr inbounds i64, i64* %1345, i64 1
  %1347 = load i64, i64* %1346, align 8
  %1348 = add i64 %1347, 160
  %1349 = inttoptr i64 %1348 to %"class.v8::Value"*
  br label %1355

1350:                                             ; preds = %1341
  %1351 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1352 = load i64*, i64** %1351, align 8
  %1353 = getelementptr inbounds i64, i64* %1352, i64 6
  %1354 = bitcast i64* %1353 to %"class.v8::Value"*
  br label %1355

1355:                                             ; preds = %1344, %1350
  %1356 = phi %"class.v8::Value"* [ %1349, %1344 ], [ %1354, %1350 ]
  %1357 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %1358 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1357, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8OffscreenCanvas18wrapper_type_info_E, %"class.v8::Value"* %1356) #9
  br i1 %1358, label %1359, label %1667

1359:                                             ; preds = %1355
  %1360 = load i64*, i64** %43, align 8
  %1361 = getelementptr inbounds i64, i64* %1360, i64 1
  %1362 = bitcast i64* %1361 to %"class.v8::Isolate"**
  %1363 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1362, align 8
  %1364 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1364) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1364, i8 -86, i64 56, i1 false) #9
  %1365 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1365, align 8
  %1366 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %1366, align 8
  %1367 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %1367, align 2
  %1368 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %1369 = bitcast i8** %1368 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %1369, align 8
  %1370 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %1370, align 8
  %1371 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %1363, %"class.v8::Isolate"** %1371, align 8
  %1372 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %1372, align 8
  %1373 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %1374 = bitcast %"class.WTF::StringImpl"** %1373 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1374, i8 0, i64 16, i1 false) #9
  %1375 = load i32, i32* %39, align 8
  %1376 = icmp slt i32 %1375, 7
  br i1 %1376, label %1377, label %1397, !prof !5

1377:                                             ; preds = %1359
  %1378 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1378) #9
  %1379 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %1375) #9
  %1380 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1379, %"class.WTF::StringImpl"** %1380, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %1381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1380, align 8
  %1382 = icmp eq %"class.WTF::StringImpl"* %1381, null
  br i1 %1382, label %1396, label %1383

1383:                                             ; preds = %1377
  %1384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1385 = load atomic i32, i32* %1384 monotonic, align 4
  %1386 = and i32 %1385, 2
  %1387 = icmp eq i32 %1386, 0
  %1388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1381, i64 0, i32 0
  %1389 = load i32, i32* %1388, align 4
  br i1 %1387, label %1390, label %1392

1390:                                             ; preds = %1383
  %1391 = add i32 %1389, -1
  store i32 %1391, i32* %1388, align 4
  br label %1392

1392:                                             ; preds = %1390, %1383
  %1393 = phi i32 [ %1391, %1390 ], [ %1389, %1383 ]
  %1394 = icmp eq i32 %1393, 0
  br i1 %1394, label %1395, label %1396

1395:                                             ; preds = %1392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1381) #9
  br label %1396

1396:                                             ; preds = %1395, %1392, %1377
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1378) #9
  br label %1637

1397:                                             ; preds = %1359
  %1398 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1399 = load i64*, i64** %1398, align 8
  %1400 = getelementptr inbounds i64, i64* %1399, i64 -1
  %1401 = bitcast i64* %1400 to %"class.v8::Object"*
  %1402 = load i64, i64* %1400, align 8
  %1403 = add i64 %1402, -1
  %1404 = inttoptr i64 %1403 to i32*
  %1405 = load i32, i32* %1404, align 4
  %1406 = and i64 %1402, -4294967296
  %1407 = zext i32 %1405 to i64
  %1408 = or i64 %1406, %1407
  %1409 = add i64 %1408, 7
  %1410 = inttoptr i64 %1409 to i16*
  %1411 = load i16, i16* %1410, align 2
  switch i16 %1411, label %1416 [
    i16 1057, label %1412
    i16 1056, label %1412
    i16 1040, label %1412
  ]

1412:                                             ; preds = %1397, %1397, %1397
  %1413 = add i64 %1402, 19
  %1414 = inttoptr i64 %1413 to i8**
  %1415 = load i8*, i8** %1414, align 1
  br label %1418

1416:                                             ; preds = %1397
  %1417 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1401, i32 1) #9
  br label %1418

1418:                                             ; preds = %1416, %1412
  %1419 = phi i8* [ %1415, %1412 ], [ %1417, %1416 ]
  %1420 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1401) #9
  %1421 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1420) #9
  %1422 = load i32, i32* %39, align 8
  %1423 = icmp sgt i32 %1422, 0
  br i1 %1423, label %1430, label %1424

1424:                                             ; preds = %1418
  %1425 = load i64*, i64** %43, align 8
  %1426 = getelementptr inbounds i64, i64* %1425, i64 1
  %1427 = load i64, i64* %1426, align 8
  %1428 = add i64 %1427, 160
  %1429 = inttoptr i64 %1428 to %"class.v8::Value"*
  br label %1433

1430:                                             ; preds = %1418
  %1431 = bitcast i64** %1398 to %"class.v8::Value"**
  %1432 = load %"class.v8::Value"*, %"class.v8::Value"** %1431, align 8
  br label %1433

1433:                                             ; preds = %1430, %1424
  %1434 = phi %"class.v8::Value"* [ %1429, %1424 ], [ %1432, %1430 ]
  %1435 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1434) #9
  br i1 %1435, label %1436, label %1439, !prof !4

1436:                                             ; preds = %1433
  %1437 = bitcast %"class.v8::Value"* %1434 to %"class.v8::Uint32"*
  %1438 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1437) #9
  br label %1448

1439:                                             ; preds = %1433
  %1440 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1434) #9
  br i1 %1440, label %1441, label %1444, !prof !4

1441:                                             ; preds = %1439
  %1442 = bitcast %"class.v8::Value"* %1434 to %"class.v8::Int32"*
  %1443 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1442) #9
  br label %1448

1444:                                             ; preds = %1439
  %1445 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1363, %"class.v8::Value"* %1434, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  %1446 = load i32, i32* %1372, align 8
  %1447 = icmp eq i32 %1446, 0
  br i1 %1447, label %1448, label %1637

1448:                                             ; preds = %1444, %1441, %1436
  %1449 = phi i32 [ %1445, %1444 ], [ %1443, %1441 ], [ %1438, %1436 ]
  %1450 = load i32, i32* %39, align 8
  %1451 = icmp sgt i32 %1450, 1
  br i1 %1451, label %1458, label %1452

1452:                                             ; preds = %1448
  %1453 = load i64*, i64** %43, align 8
  %1454 = getelementptr inbounds i64, i64* %1453, i64 1
  %1455 = load i64, i64* %1454, align 8
  %1456 = add i64 %1455, 160
  %1457 = inttoptr i64 %1456 to %"class.v8::Value"*
  br label %1462

1458:                                             ; preds = %1448
  %1459 = load i64*, i64** %1398, align 8
  %1460 = getelementptr inbounds i64, i64* %1459, i64 1
  %1461 = bitcast i64* %1460 to %"class.v8::Value"*
  br label %1462

1462:                                             ; preds = %1458, %1452
  %1463 = phi %"class.v8::Value"* [ %1457, %1452 ], [ %1461, %1458 ]
  %1464 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1463) #9
  br i1 %1464, label %1465, label %1468, !prof !4

1465:                                             ; preds = %1462
  %1466 = bitcast %"class.v8::Value"* %1463 to %"class.v8::Int32"*
  %1467 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1466) #9
  br label %1470

1468:                                             ; preds = %1462
  %1469 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1363, %"class.v8::Value"* %1463, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1470

1470:                                             ; preds = %1468, %1465
  %1471 = phi i32 [ %1467, %1465 ], [ %1469, %1468 ]
  %1472 = load i32, i32* %1372, align 8
  %1473 = icmp eq i32 %1472, 0
  br i1 %1473, label %1474, label %1637

1474:                                             ; preds = %1470
  %1475 = load i32, i32* %39, align 8
  %1476 = icmp sgt i32 %1475, 2
  br i1 %1476, label %1483, label %1477

1477:                                             ; preds = %1474
  %1478 = load i64*, i64** %43, align 8
  %1479 = getelementptr inbounds i64, i64* %1478, i64 1
  %1480 = load i64, i64* %1479, align 8
  %1481 = add i64 %1480, 160
  %1482 = inttoptr i64 %1481 to %"class.v8::Value"*
  br label %1487

1483:                                             ; preds = %1474
  %1484 = load i64*, i64** %1398, align 8
  %1485 = getelementptr inbounds i64, i64* %1484, i64 2
  %1486 = bitcast i64* %1485 to %"class.v8::Value"*
  br label %1487

1487:                                             ; preds = %1483, %1477
  %1488 = phi %"class.v8::Value"* [ %1482, %1477 ], [ %1486, %1483 ]
  %1489 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1488) #9
  br i1 %1489, label %1490, label %1493, !prof !4

1490:                                             ; preds = %1487
  %1491 = bitcast %"class.v8::Value"* %1488 to %"class.v8::Int32"*
  %1492 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1491) #9
  br label %1495

1493:                                             ; preds = %1487
  %1494 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1363, %"class.v8::Value"* %1488, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1495

1495:                                             ; preds = %1493, %1490
  %1496 = phi i32 [ %1492, %1490 ], [ %1494, %1493 ]
  %1497 = load i32, i32* %1372, align 8
  %1498 = icmp eq i32 %1497, 0
  br i1 %1498, label %1499, label %1637

1499:                                             ; preds = %1495
  %1500 = load i32, i32* %39, align 8
  %1501 = icmp sgt i32 %1500, 3
  br i1 %1501, label %1508, label %1502

1502:                                             ; preds = %1499
  %1503 = load i64*, i64** %43, align 8
  %1504 = getelementptr inbounds i64, i64* %1503, i64 1
  %1505 = load i64, i64* %1504, align 8
  %1506 = add i64 %1505, 160
  %1507 = inttoptr i64 %1506 to %"class.v8::Value"*
  br label %1512

1508:                                             ; preds = %1499
  %1509 = load i64*, i64** %1398, align 8
  %1510 = getelementptr inbounds i64, i64* %1509, i64 3
  %1511 = bitcast i64* %1510 to %"class.v8::Value"*
  br label %1512

1512:                                             ; preds = %1508, %1502
  %1513 = phi %"class.v8::Value"* [ %1507, %1502 ], [ %1511, %1508 ]
  %1514 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1513) #9
  br i1 %1514, label %1515, label %1518, !prof !4

1515:                                             ; preds = %1512
  %1516 = bitcast %"class.v8::Value"* %1513 to %"class.v8::Int32"*
  %1517 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1516) #9
  br label %1520

1518:                                             ; preds = %1512
  %1519 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1363, %"class.v8::Value"* %1513, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1520

1520:                                             ; preds = %1518, %1515
  %1521 = phi i32 [ %1517, %1515 ], [ %1519, %1518 ]
  %1522 = load i32, i32* %1372, align 8
  %1523 = icmp eq i32 %1522, 0
  br i1 %1523, label %1524, label %1637

1524:                                             ; preds = %1520
  %1525 = load i32, i32* %39, align 8
  %1526 = icmp sgt i32 %1525, 4
  br i1 %1526, label %1533, label %1527

1527:                                             ; preds = %1524
  %1528 = load i64*, i64** %43, align 8
  %1529 = getelementptr inbounds i64, i64* %1528, i64 1
  %1530 = load i64, i64* %1529, align 8
  %1531 = add i64 %1530, 160
  %1532 = inttoptr i64 %1531 to %"class.v8::Value"*
  br label %1537

1533:                                             ; preds = %1524
  %1534 = load i64*, i64** %1398, align 8
  %1535 = getelementptr inbounds i64, i64* %1534, i64 4
  %1536 = bitcast i64* %1535 to %"class.v8::Value"*
  br label %1537

1537:                                             ; preds = %1533, %1527
  %1538 = phi %"class.v8::Value"* [ %1532, %1527 ], [ %1536, %1533 ]
  %1539 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1538) #9
  br i1 %1539, label %1540, label %1543, !prof !4

1540:                                             ; preds = %1537
  %1541 = bitcast %"class.v8::Value"* %1538 to %"class.v8::Uint32"*
  %1542 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1541) #9
  br label %1550

1543:                                             ; preds = %1537
  %1544 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1538) #9
  br i1 %1544, label %1545, label %1548, !prof !4

1545:                                             ; preds = %1543
  %1546 = bitcast %"class.v8::Value"* %1538 to %"class.v8::Int32"*
  %1547 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1546) #9
  br label %1550

1548:                                             ; preds = %1543
  %1549 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1363, %"class.v8::Value"* %1538, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1550

1550:                                             ; preds = %1548, %1545, %1540
  %1551 = phi i32 [ %1542, %1540 ], [ %1547, %1545 ], [ %1549, %1548 ]
  %1552 = load i32, i32* %1372, align 8
  %1553 = icmp eq i32 %1552, 0
  br i1 %1553, label %1554, label %1637

1554:                                             ; preds = %1550
  %1555 = load i32, i32* %39, align 8
  %1556 = icmp sgt i32 %1555, 5
  br i1 %1556, label %1563, label %1557

1557:                                             ; preds = %1554
  %1558 = load i64*, i64** %43, align 8
  %1559 = getelementptr inbounds i64, i64* %1558, i64 1
  %1560 = load i64, i64* %1559, align 8
  %1561 = add i64 %1560, 160
  %1562 = inttoptr i64 %1561 to %"class.v8::Value"*
  br label %1567

1563:                                             ; preds = %1554
  %1564 = load i64*, i64** %1398, align 8
  %1565 = getelementptr inbounds i64, i64* %1564, i64 5
  %1566 = bitcast i64* %1565 to %"class.v8::Value"*
  br label %1567

1567:                                             ; preds = %1563, %1557
  %1568 = phi %"class.v8::Value"* [ %1562, %1557 ], [ %1566, %1563 ]
  %1569 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1568) #9
  br i1 %1569, label %1570, label %1573, !prof !4

1570:                                             ; preds = %1567
  %1571 = bitcast %"class.v8::Value"* %1568 to %"class.v8::Uint32"*
  %1572 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1571) #9
  br label %1580

1573:                                             ; preds = %1567
  %1574 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1568) #9
  br i1 %1574, label %1575, label %1578, !prof !4

1575:                                             ; preds = %1573
  %1576 = bitcast %"class.v8::Value"* %1568 to %"class.v8::Int32"*
  %1577 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1576) #9
  br label %1580

1578:                                             ; preds = %1573
  %1579 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1363, %"class.v8::Value"* %1568, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1580

1580:                                             ; preds = %1578, %1575, %1570
  %1581 = phi i32 [ %1572, %1570 ], [ %1577, %1575 ], [ %1579, %1578 ]
  %1582 = load i32, i32* %1372, align 8
  %1583 = icmp eq i32 %1582, 0
  br i1 %1583, label %1584, label %1637

1584:                                             ; preds = %1580
  %1585 = load i32, i32* %39, align 8
  %1586 = icmp sgt i32 %1585, 6
  br i1 %1586, label %1593, label %1587

1587:                                             ; preds = %1584
  %1588 = load i64*, i64** %43, align 8
  %1589 = getelementptr inbounds i64, i64* %1588, i64 1
  %1590 = load i64, i64* %1589, align 8
  %1591 = add i64 %1590, 160
  %1592 = inttoptr i64 %1591 to %"class.v8::Value"*
  br label %1597

1593:                                             ; preds = %1584
  %1594 = load i64*, i64** %1398, align 8
  %1595 = getelementptr inbounds i64, i64* %1594, i64 6
  %1596 = bitcast i64* %1595 to %"class.v8::Value"*
  br label %1597

1597:                                             ; preds = %1593, %1587
  %1598 = phi %"class.v8::Value"* [ %1592, %1587 ], [ %1596, %1593 ]
  %1599 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15OffscreenCanvas18wrapper_type_info_E, align 8
  %1600 = ptrtoint %"class.v8::Isolate"* %1363 to i64
  %1601 = add i64 %1600, 8
  %1602 = inttoptr i64 %1601 to %"class.blink::V8PerIsolateData"**
  %1603 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %1602, align 8
  %1604 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1603, %"struct.blink::WrapperTypeInfo"* %1599, %"class.v8::Value"* %1598) #9
  br i1 %1604, label %1605, label %1627

1605:                                             ; preds = %1597
  %1606 = bitcast %"class.v8::Value"* %1598 to i64*
  %1607 = load i64, i64* %1606, align 8
  %1608 = add i64 %1607, -1
  %1609 = inttoptr i64 %1608 to i32*
  %1610 = load i32, i32* %1609, align 4
  %1611 = and i64 %1607, -4294967296
  %1612 = zext i32 %1610 to i64
  %1613 = or i64 %1611, %1612
  %1614 = add i64 %1613, 7
  %1615 = inttoptr i64 %1614 to i16*
  %1616 = load i16, i16* %1615, align 2
  switch i16 %1616, label %1621 [
    i16 1057, label %1617
    i16 1056, label %1617
    i16 1040, label %1617
  ]

1617:                                             ; preds = %1605, %1605, %1605
  %1618 = add i64 %1607, 19
  %1619 = inttoptr i64 %1618 to i8**
  %1620 = load i8*, i8** %1619, align 1
  br label %1624

1621:                                             ; preds = %1605
  %1622 = bitcast %"class.v8::Value"* %1598 to %"class.v8::Object"*
  %1623 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1622, i32 1) #9
  br label %1624

1624:                                             ; preds = %1621, %1617
  %1625 = phi i8* [ %1620, %1617 ], [ %1623, %1621 ]
  %1626 = bitcast i8* %1625 to %"class.blink::OffscreenCanvas"*
  br label %1628

1627:                                             ; preds = %1597
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %1599, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1628

1628:                                             ; preds = %1627, %1624
  %1629 = phi %"class.blink::OffscreenCanvas"* [ %1626, %1624 ], [ null, %1627 ]
  %1630 = load i32, i32* %1372, align 8
  %1631 = icmp eq i32 %1630, 0
  br i1 %1631, label %1632, label %1637

1632:                                             ; preds = %1628
  %1633 = bitcast i8* %1419 to %"class.blink::WebGLRenderingContextBase"*
  %1634 = icmp eq %"class.blink::OffscreenCanvas"* %1629, null
  %1635 = getelementptr inbounds %"class.blink::OffscreenCanvas", %"class.blink::OffscreenCanvas"* %1629, i64 0, i32 2
  %1636 = select i1 %1634, %"class.blink::CanvasRenderingContextHost"* null, %"class.blink::CanvasRenderingContextHost"* %1635
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_26CanvasRenderingContextHostERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %1633, %"class.blink::ExecutionContext"* %1421, i32 %1449, i32 %1471, i32 %1496, i32 %1521, i32 %1551, i32 %1581, %"class.blink::CanvasRenderingContextHost"* %1636, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br label %1637

1637:                                             ; preds = %1632, %1628, %1580, %1550, %1520, %1495, %1470, %1444, %1396
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1365, align 8
  %1638 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %1639 = load i64*, i64** %1638, align 8
  %1640 = icmp eq i64* %1639, null
  br i1 %1640, label %1650, label %1641

1641:                                             ; preds = %1637
  %1642 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1371, align 8
  %1643 = bitcast %"class.v8::Isolate"* %1642 to %"class.v8::internal::Isolate"*
  %1644 = load i64, i64* %1639, align 8
  %1645 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %1643, i64 %1644) #9
  %1646 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %1642) #9
  br i1 %1646, label %1650, label %1647

1647:                                             ; preds = %1641
  %1648 = bitcast i64* %1645 to %"class.v8::Value"*
  %1649 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %1642, %"class.v8::Value"* %1648) #9
  br label %1650

1650:                                             ; preds = %1647, %1641, %1637
  %1651 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1373, align 8
  %1652 = icmp eq %"class.WTF::StringImpl"* %1651, null
  br i1 %1652, label %1666, label %1653

1653:                                             ; preds = %1650
  %1654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1651, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1655 = load atomic i32, i32* %1654 monotonic, align 4
  %1656 = and i32 %1655, 2
  %1657 = icmp eq i32 %1656, 0
  %1658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1651, i64 0, i32 0
  %1659 = load i32, i32* %1658, align 4
  br i1 %1657, label %1660, label %1662

1660:                                             ; preds = %1653
  %1661 = add i32 %1659, -1
  store i32 %1661, i32* %1658, align 4
  br label %1662

1662:                                             ; preds = %1660, %1653
  %1663 = phi i32 [ %1661, %1660 ], [ %1659, %1653 ]
  %1664 = icmp eq i32 %1663, 0
  br i1 %1664, label %1665, label %1666

1665:                                             ; preds = %1662
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1651) #9
  br label %1666

1666:                                             ; preds = %1650, %1662, %1665
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1364) #9
  br label %2704

1667:                                             ; preds = %1355
  %1668 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %1669 = load i64*, i64** %1668, align 8
  %1670 = getelementptr inbounds i64, i64* %1669, i64 -1
  %1671 = bitcast i64* %1670 to %"class.v8::Object"*
  %1672 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1671) #9
  %1673 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1672) #9
  %1674 = icmp eq %"class.blink::ExecutionContext"* %1673, null
  %1675 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1673, i64 0, i32 4
  %1676 = select i1 %1674, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %1675
  %1677 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase16WebCodecsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %1676) #9
  br i1 %1677, label %1678, label %1999

1678:                                             ; preds = %1667
  %1679 = load i32, i32* %39, align 8
  %1680 = icmp sgt i32 %1679, 6
  br i1 %1680, label %1687, label %1681

1681:                                             ; preds = %1678
  %1682 = load i64*, i64** %43, align 8
  %1683 = getelementptr inbounds i64, i64* %1682, i64 1
  %1684 = load i64, i64* %1683, align 8
  %1685 = add i64 %1684, 160
  %1686 = inttoptr i64 %1685 to %"class.v8::Value"*
  br label %1691

1687:                                             ; preds = %1678
  %1688 = load i64*, i64** %1668, align 8
  %1689 = getelementptr inbounds i64, i64* %1688, i64 6
  %1690 = bitcast i64* %1689 to %"class.v8::Value"*
  br label %1691

1691:                                             ; preds = %1681, %1687
  %1692 = phi %"class.v8::Value"* [ %1686, %1681 ], [ %1690, %1687 ]
  %1693 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %1694 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1693, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink12V8VideoFrame18wrapper_type_info_E, %"class.v8::Value"* %1692) #9
  br i1 %1694, label %1695, label %1999

1695:                                             ; preds = %1691
  %1696 = load i64*, i64** %43, align 8
  %1697 = getelementptr inbounds i64, i64* %1696, i64 1
  %1698 = bitcast i64* %1697 to %"class.v8::Isolate"**
  %1699 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1698, align 8
  %1700 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1700) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1700, i8 -86, i64 56, i1 false) #9
  %1701 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1701, align 8
  %1702 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %1702, align 8
  %1703 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %1703, align 2
  %1704 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %1705 = bitcast i8** %1704 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %1705, align 8
  %1706 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %1706, align 8
  %1707 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %1699, %"class.v8::Isolate"** %1707, align 8
  %1708 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %1708, align 8
  %1709 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %1710 = bitcast %"class.WTF::StringImpl"** %1709 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1710, i8 0, i64 16, i1 false) #9
  %1711 = load i32, i32* %39, align 8
  %1712 = icmp slt i32 %1711, 7
  br i1 %1712, label %1713, label %1733, !prof !5

1713:                                             ; preds = %1695
  %1714 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1714) #9
  %1715 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %1711) #9
  %1716 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1715, %"class.WTF::StringImpl"** %1716, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %1717 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1716, align 8
  %1718 = icmp eq %"class.WTF::StringImpl"* %1717, null
  br i1 %1718, label %1732, label %1719

1719:                                             ; preds = %1713
  %1720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1717, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1721 = load atomic i32, i32* %1720 monotonic, align 4
  %1722 = and i32 %1721, 2
  %1723 = icmp eq i32 %1722, 0
  %1724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1717, i64 0, i32 0
  %1725 = load i32, i32* %1724, align 4
  br i1 %1723, label %1726, label %1728

1726:                                             ; preds = %1719
  %1727 = add i32 %1725, -1
  store i32 %1727, i32* %1724, align 4
  br label %1728

1728:                                             ; preds = %1726, %1719
  %1729 = phi i32 [ %1727, %1726 ], [ %1725, %1719 ]
  %1730 = icmp eq i32 %1729, 0
  br i1 %1730, label %1731, label %1732

1731:                                             ; preds = %1728
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1717) #9
  br label %1732

1732:                                             ; preds = %1731, %1728, %1713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1714) #9
  br label %1969

1733:                                             ; preds = %1695
  %1734 = load i64*, i64** %1668, align 8
  %1735 = getelementptr inbounds i64, i64* %1734, i64 -1
  %1736 = bitcast i64* %1735 to %"class.v8::Object"*
  %1737 = load i64, i64* %1735, align 8
  %1738 = add i64 %1737, -1
  %1739 = inttoptr i64 %1738 to i32*
  %1740 = load i32, i32* %1739, align 4
  %1741 = and i64 %1737, -4294967296
  %1742 = zext i32 %1740 to i64
  %1743 = or i64 %1741, %1742
  %1744 = add i64 %1743, 7
  %1745 = inttoptr i64 %1744 to i16*
  %1746 = load i16, i16* %1745, align 2
  switch i16 %1746, label %1751 [
    i16 1057, label %1747
    i16 1056, label %1747
    i16 1040, label %1747
  ]

1747:                                             ; preds = %1733, %1733, %1733
  %1748 = add i64 %1737, 19
  %1749 = inttoptr i64 %1748 to i8**
  %1750 = load i8*, i8** %1749, align 1
  br label %1753

1751:                                             ; preds = %1733
  %1752 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1736, i32 1) #9
  br label %1753

1753:                                             ; preds = %1751, %1747
  %1754 = phi i8* [ %1750, %1747 ], [ %1752, %1751 ]
  %1755 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1736) #9
  %1756 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1755) #9
  %1757 = load i32, i32* %39, align 8
  %1758 = icmp sgt i32 %1757, 0
  br i1 %1758, label %1765, label %1759

1759:                                             ; preds = %1753
  %1760 = load i64*, i64** %43, align 8
  %1761 = getelementptr inbounds i64, i64* %1760, i64 1
  %1762 = load i64, i64* %1761, align 8
  %1763 = add i64 %1762, 160
  %1764 = inttoptr i64 %1763 to %"class.v8::Value"*
  br label %1768

1765:                                             ; preds = %1753
  %1766 = bitcast i64** %1668 to %"class.v8::Value"**
  %1767 = load %"class.v8::Value"*, %"class.v8::Value"** %1766, align 8
  br label %1768

1768:                                             ; preds = %1765, %1759
  %1769 = phi %"class.v8::Value"* [ %1764, %1759 ], [ %1767, %1765 ]
  %1770 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1769) #9
  br i1 %1770, label %1771, label %1774, !prof !4

1771:                                             ; preds = %1768
  %1772 = bitcast %"class.v8::Value"* %1769 to %"class.v8::Uint32"*
  %1773 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1772) #9
  br label %1783

1774:                                             ; preds = %1768
  %1775 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1769) #9
  br i1 %1775, label %1776, label %1779, !prof !4

1776:                                             ; preds = %1774
  %1777 = bitcast %"class.v8::Value"* %1769 to %"class.v8::Int32"*
  %1778 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1777) #9
  br label %1783

1779:                                             ; preds = %1774
  %1780 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1699, %"class.v8::Value"* %1769, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  %1781 = load i32, i32* %1708, align 8
  %1782 = icmp eq i32 %1781, 0
  br i1 %1782, label %1783, label %1969

1783:                                             ; preds = %1779, %1776, %1771
  %1784 = phi i32 [ %1780, %1779 ], [ %1778, %1776 ], [ %1773, %1771 ]
  %1785 = load i32, i32* %39, align 8
  %1786 = icmp sgt i32 %1785, 1
  br i1 %1786, label %1793, label %1787

1787:                                             ; preds = %1783
  %1788 = load i64*, i64** %43, align 8
  %1789 = getelementptr inbounds i64, i64* %1788, i64 1
  %1790 = load i64, i64* %1789, align 8
  %1791 = add i64 %1790, 160
  %1792 = inttoptr i64 %1791 to %"class.v8::Value"*
  br label %1797

1793:                                             ; preds = %1783
  %1794 = load i64*, i64** %1668, align 8
  %1795 = getelementptr inbounds i64, i64* %1794, i64 1
  %1796 = bitcast i64* %1795 to %"class.v8::Value"*
  br label %1797

1797:                                             ; preds = %1793, %1787
  %1798 = phi %"class.v8::Value"* [ %1792, %1787 ], [ %1796, %1793 ]
  %1799 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1798) #9
  br i1 %1799, label %1800, label %1803, !prof !4

1800:                                             ; preds = %1797
  %1801 = bitcast %"class.v8::Value"* %1798 to %"class.v8::Int32"*
  %1802 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1801) #9
  br label %1805

1803:                                             ; preds = %1797
  %1804 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1699, %"class.v8::Value"* %1798, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1805

1805:                                             ; preds = %1803, %1800
  %1806 = phi i32 [ %1802, %1800 ], [ %1804, %1803 ]
  %1807 = load i32, i32* %1708, align 8
  %1808 = icmp eq i32 %1807, 0
  br i1 %1808, label %1809, label %1969

1809:                                             ; preds = %1805
  %1810 = load i32, i32* %39, align 8
  %1811 = icmp sgt i32 %1810, 2
  br i1 %1811, label %1818, label %1812

1812:                                             ; preds = %1809
  %1813 = load i64*, i64** %43, align 8
  %1814 = getelementptr inbounds i64, i64* %1813, i64 1
  %1815 = load i64, i64* %1814, align 8
  %1816 = add i64 %1815, 160
  %1817 = inttoptr i64 %1816 to %"class.v8::Value"*
  br label %1822

1818:                                             ; preds = %1809
  %1819 = load i64*, i64** %1668, align 8
  %1820 = getelementptr inbounds i64, i64* %1819, i64 2
  %1821 = bitcast i64* %1820 to %"class.v8::Value"*
  br label %1822

1822:                                             ; preds = %1818, %1812
  %1823 = phi %"class.v8::Value"* [ %1817, %1812 ], [ %1821, %1818 ]
  %1824 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1823) #9
  br i1 %1824, label %1825, label %1828, !prof !4

1825:                                             ; preds = %1822
  %1826 = bitcast %"class.v8::Value"* %1823 to %"class.v8::Int32"*
  %1827 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1826) #9
  br label %1830

1828:                                             ; preds = %1822
  %1829 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1699, %"class.v8::Value"* %1823, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1830

1830:                                             ; preds = %1828, %1825
  %1831 = phi i32 [ %1827, %1825 ], [ %1829, %1828 ]
  %1832 = load i32, i32* %1708, align 8
  %1833 = icmp eq i32 %1832, 0
  br i1 %1833, label %1834, label %1969

1834:                                             ; preds = %1830
  %1835 = load i32, i32* %39, align 8
  %1836 = icmp sgt i32 %1835, 3
  br i1 %1836, label %1843, label %1837

1837:                                             ; preds = %1834
  %1838 = load i64*, i64** %43, align 8
  %1839 = getelementptr inbounds i64, i64* %1838, i64 1
  %1840 = load i64, i64* %1839, align 8
  %1841 = add i64 %1840, 160
  %1842 = inttoptr i64 %1841 to %"class.v8::Value"*
  br label %1847

1843:                                             ; preds = %1834
  %1844 = load i64*, i64** %1668, align 8
  %1845 = getelementptr inbounds i64, i64* %1844, i64 3
  %1846 = bitcast i64* %1845 to %"class.v8::Value"*
  br label %1847

1847:                                             ; preds = %1843, %1837
  %1848 = phi %"class.v8::Value"* [ %1842, %1837 ], [ %1846, %1843 ]
  %1849 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1848) #9
  br i1 %1849, label %1850, label %1853, !prof !4

1850:                                             ; preds = %1847
  %1851 = bitcast %"class.v8::Value"* %1848 to %"class.v8::Int32"*
  %1852 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1851) #9
  br label %1855

1853:                                             ; preds = %1847
  %1854 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1699, %"class.v8::Value"* %1848, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1855

1855:                                             ; preds = %1853, %1850
  %1856 = phi i32 [ %1852, %1850 ], [ %1854, %1853 ]
  %1857 = load i32, i32* %1708, align 8
  %1858 = icmp eq i32 %1857, 0
  br i1 %1858, label %1859, label %1969

1859:                                             ; preds = %1855
  %1860 = load i32, i32* %39, align 8
  %1861 = icmp sgt i32 %1860, 4
  br i1 %1861, label %1868, label %1862

1862:                                             ; preds = %1859
  %1863 = load i64*, i64** %43, align 8
  %1864 = getelementptr inbounds i64, i64* %1863, i64 1
  %1865 = load i64, i64* %1864, align 8
  %1866 = add i64 %1865, 160
  %1867 = inttoptr i64 %1866 to %"class.v8::Value"*
  br label %1872

1868:                                             ; preds = %1859
  %1869 = load i64*, i64** %1668, align 8
  %1870 = getelementptr inbounds i64, i64* %1869, i64 4
  %1871 = bitcast i64* %1870 to %"class.v8::Value"*
  br label %1872

1872:                                             ; preds = %1868, %1862
  %1873 = phi %"class.v8::Value"* [ %1867, %1862 ], [ %1871, %1868 ]
  %1874 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1873) #9
  br i1 %1874, label %1875, label %1878, !prof !4

1875:                                             ; preds = %1872
  %1876 = bitcast %"class.v8::Value"* %1873 to %"class.v8::Uint32"*
  %1877 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1876) #9
  br label %1885

1878:                                             ; preds = %1872
  %1879 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1873) #9
  br i1 %1879, label %1880, label %1883, !prof !4

1880:                                             ; preds = %1878
  %1881 = bitcast %"class.v8::Value"* %1873 to %"class.v8::Int32"*
  %1882 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1881) #9
  br label %1885

1883:                                             ; preds = %1878
  %1884 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1699, %"class.v8::Value"* %1873, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1885

1885:                                             ; preds = %1883, %1880, %1875
  %1886 = phi i32 [ %1877, %1875 ], [ %1882, %1880 ], [ %1884, %1883 ]
  %1887 = load i32, i32* %1708, align 8
  %1888 = icmp eq i32 %1887, 0
  br i1 %1888, label %1889, label %1969

1889:                                             ; preds = %1885
  %1890 = load i32, i32* %39, align 8
  %1891 = icmp sgt i32 %1890, 5
  br i1 %1891, label %1898, label %1892

1892:                                             ; preds = %1889
  %1893 = load i64*, i64** %43, align 8
  %1894 = getelementptr inbounds i64, i64* %1893, i64 1
  %1895 = load i64, i64* %1894, align 8
  %1896 = add i64 %1895, 160
  %1897 = inttoptr i64 %1896 to %"class.v8::Value"*
  br label %1902

1898:                                             ; preds = %1889
  %1899 = load i64*, i64** %1668, align 8
  %1900 = getelementptr inbounds i64, i64* %1899, i64 5
  %1901 = bitcast i64* %1900 to %"class.v8::Value"*
  br label %1902

1902:                                             ; preds = %1898, %1892
  %1903 = phi %"class.v8::Value"* [ %1897, %1892 ], [ %1901, %1898 ]
  %1904 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1903) #9
  br i1 %1904, label %1905, label %1908, !prof !4

1905:                                             ; preds = %1902
  %1906 = bitcast %"class.v8::Value"* %1903 to %"class.v8::Uint32"*
  %1907 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %1906) #9
  br label %1915

1908:                                             ; preds = %1902
  %1909 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1903) #9
  br i1 %1909, label %1910, label %1913, !prof !4

1910:                                             ; preds = %1908
  %1911 = bitcast %"class.v8::Value"* %1903 to %"class.v8::Int32"*
  %1912 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %1911) #9
  br label %1915

1913:                                             ; preds = %1908
  %1914 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1699, %"class.v8::Value"* %1903, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1915

1915:                                             ; preds = %1913, %1910, %1905
  %1916 = phi i32 [ %1907, %1905 ], [ %1912, %1910 ], [ %1914, %1913 ]
  %1917 = load i32, i32* %1708, align 8
  %1918 = icmp eq i32 %1917, 0
  br i1 %1918, label %1919, label %1969

1919:                                             ; preds = %1915
  %1920 = load i32, i32* %39, align 8
  %1921 = icmp sgt i32 %1920, 6
  br i1 %1921, label %1928, label %1922

1922:                                             ; preds = %1919
  %1923 = load i64*, i64** %43, align 8
  %1924 = getelementptr inbounds i64, i64* %1923, i64 1
  %1925 = load i64, i64* %1924, align 8
  %1926 = add i64 %1925, 160
  %1927 = inttoptr i64 %1926 to %"class.v8::Value"*
  br label %1932

1928:                                             ; preds = %1919
  %1929 = load i64*, i64** %1668, align 8
  %1930 = getelementptr inbounds i64, i64* %1929, i64 6
  %1931 = bitcast i64* %1930 to %"class.v8::Value"*
  br label %1932

1932:                                             ; preds = %1928, %1922
  %1933 = phi %"class.v8::Value"* [ %1927, %1922 ], [ %1931, %1928 ]
  %1934 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10VideoFrame18wrapper_type_info_E, align 8
  %1935 = ptrtoint %"class.v8::Isolate"* %1699 to i64
  %1936 = add i64 %1935, 8
  %1937 = inttoptr i64 %1936 to %"class.blink::V8PerIsolateData"**
  %1938 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %1937, align 8
  %1939 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1938, %"struct.blink::WrapperTypeInfo"* %1934, %"class.v8::Value"* %1933) #9
  br i1 %1939, label %1940, label %1962

1940:                                             ; preds = %1932
  %1941 = bitcast %"class.v8::Value"* %1933 to i64*
  %1942 = load i64, i64* %1941, align 8
  %1943 = add i64 %1942, -1
  %1944 = inttoptr i64 %1943 to i32*
  %1945 = load i32, i32* %1944, align 4
  %1946 = and i64 %1942, -4294967296
  %1947 = zext i32 %1945 to i64
  %1948 = or i64 %1946, %1947
  %1949 = add i64 %1948, 7
  %1950 = inttoptr i64 %1949 to i16*
  %1951 = load i16, i16* %1950, align 2
  switch i16 %1951, label %1956 [
    i16 1057, label %1952
    i16 1056, label %1952
    i16 1040, label %1952
  ]

1952:                                             ; preds = %1940, %1940, %1940
  %1953 = add i64 %1942, 19
  %1954 = inttoptr i64 %1953 to i8**
  %1955 = load i8*, i8** %1954, align 1
  br label %1959

1956:                                             ; preds = %1940
  %1957 = bitcast %"class.v8::Value"* %1933 to %"class.v8::Object"*
  %1958 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1957, i32 1) #9
  br label %1959

1959:                                             ; preds = %1956, %1952
  %1960 = phi i8* [ %1955, %1952 ], [ %1958, %1956 ]
  %1961 = bitcast i8* %1960 to %"class.blink::VideoFrame"*
  br label %1963

1962:                                             ; preds = %1932
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %1934, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1963

1963:                                             ; preds = %1962, %1959
  %1964 = phi %"class.blink::VideoFrame"* [ %1961, %1959 ], [ null, %1962 ]
  %1965 = load i32, i32* %1708, align 8
  %1966 = icmp eq i32 %1965, 0
  br i1 %1966, label %1967, label %1969

1967:                                             ; preds = %1963
  %1968 = bitcast i8* %1754 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_10VideoFrameERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %1968, %"class.blink::ExecutionContext"* %1756, i32 %1784, i32 %1806, i32 %1831, i32 %1856, i32 %1886, i32 %1916, %"class.blink::VideoFrame"* %1964, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #9
  br label %1969

1969:                                             ; preds = %1967, %1963, %1915, %1885, %1855, %1830, %1805, %1779, %1732
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1701, align 8
  %1970 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %1971 = load i64*, i64** %1970, align 8
  %1972 = icmp eq i64* %1971, null
  br i1 %1972, label %1982, label %1973

1973:                                             ; preds = %1969
  %1974 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %1707, align 8
  %1975 = bitcast %"class.v8::Isolate"* %1974 to %"class.v8::internal::Isolate"*
  %1976 = load i64, i64* %1971, align 8
  %1977 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %1975, i64 %1976) #9
  %1978 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %1974) #9
  br i1 %1978, label %1982, label %1979

1979:                                             ; preds = %1973
  %1980 = bitcast i64* %1977 to %"class.v8::Value"*
  %1981 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %1974, %"class.v8::Value"* %1980) #9
  br label %1982

1982:                                             ; preds = %1979, %1973, %1969
  %1983 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1709, align 8
  %1984 = icmp eq %"class.WTF::StringImpl"* %1983, null
  br i1 %1984, label %1998, label %1985

1985:                                             ; preds = %1982
  %1986 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1983, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1987 = load atomic i32, i32* %1986 monotonic, align 4
  %1988 = and i32 %1987, 2
  %1989 = icmp eq i32 %1988, 0
  %1990 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1983, i64 0, i32 0
  %1991 = load i32, i32* %1990, align 4
  br i1 %1989, label %1992, label %1994

1992:                                             ; preds = %1985
  %1993 = add i32 %1991, -1
  store i32 %1993, i32* %1990, align 4
  br label %1994

1994:                                             ; preds = %1992, %1985
  %1995 = phi i32 [ %1993, %1992 ], [ %1991, %1985 ]
  %1996 = icmp eq i32 %1995, 0
  br i1 %1996, label %1997, label %1998

1997:                                             ; preds = %1994
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1983) #9
  br label %1998

1998:                                             ; preds = %1982, %1994, %1997
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1700) #9
  br label %2704

1999:                                             ; preds = %1691, %1667
  %2000 = load i32, i32* %39, align 8
  %2001 = icmp sgt i32 %2000, 6
  br i1 %2001, label %2008, label %2002

2002:                                             ; preds = %1999
  %2003 = load i64*, i64** %43, align 8
  %2004 = getelementptr inbounds i64, i64* %2003, i64 1
  %2005 = load i64, i64* %2004, align 8
  %2006 = add i64 %2005, 160
  %2007 = inttoptr i64 %2006 to %"class.v8::Value"*
  br label %2012

2008:                                             ; preds = %1999
  %2009 = load i64*, i64** %1668, align 8
  %2010 = getelementptr inbounds i64, i64* %2009, i64 6
  %2011 = bitcast i64* %2010 to %"class.v8::Value"*
  br label %2012

2012:                                             ; preds = %2002, %2008
  %2013 = phi %"class.v8::Value"* [ %2007, %2002 ], [ %2011, %2008 ]
  %2014 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %2015 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2014, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink11V8ImageData18wrapper_type_info_E, %"class.v8::Value"* %2013) #9
  br i1 %2015, label %2016, label %2318

2016:                                             ; preds = %2012
  %2017 = load i64*, i64** %43, align 8
  %2018 = getelementptr inbounds i64, i64* %2017, i64 1
  %2019 = bitcast i64* %2018 to %"class.v8::Isolate"**
  %2020 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2019, align 8
  %2021 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2021) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2021, i8 -86, i64 56, i1 false) #9
  %2022 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2022, align 8
  %2023 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %2023, align 8
  %2024 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %2024, align 2
  %2025 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %2026 = bitcast i8** %2025 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %2026, align 8
  %2027 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %2027, align 8
  %2028 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %2020, %"class.v8::Isolate"** %2028, align 8
  %2029 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %2029, align 8
  %2030 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %2031 = bitcast %"class.WTF::StringImpl"** %2030 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2031, i8 0, i64 16, i1 false) #9
  %2032 = load i32, i32* %39, align 8
  %2033 = icmp slt i32 %2032, 7
  br i1 %2033, label %2034, label %2054, !prof !5

2034:                                             ; preds = %2016
  %2035 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2035) #9
  %2036 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %2032) #9
  %2037 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2036, %"class.WTF::StringImpl"** %2037, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %2038 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2037, align 8
  %2039 = icmp eq %"class.WTF::StringImpl"* %2038, null
  br i1 %2039, label %2053, label %2040

2040:                                             ; preds = %2034
  %2041 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2038, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2042 = load atomic i32, i32* %2041 monotonic, align 4
  %2043 = and i32 %2042, 2
  %2044 = icmp eq i32 %2043, 0
  %2045 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2038, i64 0, i32 0
  %2046 = load i32, i32* %2045, align 4
  br i1 %2044, label %2047, label %2049

2047:                                             ; preds = %2040
  %2048 = add i32 %2046, -1
  store i32 %2048, i32* %2045, align 4
  br label %2049

2049:                                             ; preds = %2047, %2040
  %2050 = phi i32 [ %2048, %2047 ], [ %2046, %2040 ]
  %2051 = icmp eq i32 %2050, 0
  br i1 %2051, label %2052, label %2053

2052:                                             ; preds = %2049
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2038) #9
  br label %2053

2053:                                             ; preds = %2052, %2049, %2034
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2035) #9
  br label %2288

2054:                                             ; preds = %2016
  %2055 = load i64*, i64** %1668, align 8
  %2056 = getelementptr inbounds i64, i64* %2055, i64 -1
  %2057 = load i64, i64* %2056, align 8
  %2058 = add i64 %2057, -1
  %2059 = inttoptr i64 %2058 to i32*
  %2060 = load i32, i32* %2059, align 4
  %2061 = and i64 %2057, -4294967296
  %2062 = zext i32 %2060 to i64
  %2063 = or i64 %2061, %2062
  %2064 = add i64 %2063, 7
  %2065 = inttoptr i64 %2064 to i16*
  %2066 = load i16, i16* %2065, align 2
  switch i16 %2066, label %2072 [
    i16 1057, label %2067
    i16 1056, label %2067
    i16 1040, label %2067
  ]

2067:                                             ; preds = %2054, %2054, %2054
  %2068 = bitcast i64* %2055 to %"class.v8::Value"*
  %2069 = add i64 %2057, 19
  %2070 = inttoptr i64 %2069 to i8**
  %2071 = load i8*, i8** %2070, align 1
  br label %2086

2072:                                             ; preds = %2054
  %2073 = bitcast i64* %2056 to %"class.v8::Object"*
  %2074 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2073, i32 1) #9
  %2075 = load i32, i32* %39, align 8
  %2076 = icmp sgt i32 %2075, 0
  br i1 %2076, label %2077, label %2080

2077:                                             ; preds = %2072
  %2078 = bitcast i64** %1668 to %"class.v8::Value"**
  %2079 = load %"class.v8::Value"*, %"class.v8::Value"** %2078, align 8
  br label %2086

2080:                                             ; preds = %2072
  %2081 = load i64*, i64** %43, align 8
  %2082 = getelementptr inbounds i64, i64* %2081, i64 1
  %2083 = load i64, i64* %2082, align 8
  %2084 = add i64 %2083, 160
  %2085 = inttoptr i64 %2084 to %"class.v8::Value"*
  br label %2086

2086:                                             ; preds = %2067, %2077, %2080
  %2087 = phi i8* [ %2074, %2080 ], [ %2071, %2067 ], [ %2074, %2077 ]
  %2088 = phi %"class.v8::Value"* [ %2085, %2080 ], [ %2068, %2067 ], [ %2079, %2077 ]
  %2089 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2088) #9
  br i1 %2089, label %2090, label %2093, !prof !4

2090:                                             ; preds = %2086
  %2091 = bitcast %"class.v8::Value"* %2088 to %"class.v8::Uint32"*
  %2092 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2091) #9
  br label %2102

2093:                                             ; preds = %2086
  %2094 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2088) #9
  br i1 %2094, label %2095, label %2098, !prof !4

2095:                                             ; preds = %2093
  %2096 = bitcast %"class.v8::Value"* %2088 to %"class.v8::Int32"*
  %2097 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2096) #9
  br label %2102

2098:                                             ; preds = %2093
  %2099 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2020, %"class.v8::Value"* %2088, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  %2100 = load i32, i32* %2029, align 8
  %2101 = icmp eq i32 %2100, 0
  br i1 %2101, label %2102, label %2288

2102:                                             ; preds = %2098, %2095, %2090
  %2103 = phi i32 [ %2099, %2098 ], [ %2097, %2095 ], [ %2092, %2090 ]
  %2104 = load i32, i32* %39, align 8
  %2105 = icmp sgt i32 %2104, 1
  br i1 %2105, label %2112, label %2106

2106:                                             ; preds = %2102
  %2107 = load i64*, i64** %43, align 8
  %2108 = getelementptr inbounds i64, i64* %2107, i64 1
  %2109 = load i64, i64* %2108, align 8
  %2110 = add i64 %2109, 160
  %2111 = inttoptr i64 %2110 to %"class.v8::Value"*
  br label %2116

2112:                                             ; preds = %2102
  %2113 = load i64*, i64** %1668, align 8
  %2114 = getelementptr inbounds i64, i64* %2113, i64 1
  %2115 = bitcast i64* %2114 to %"class.v8::Value"*
  br label %2116

2116:                                             ; preds = %2112, %2106
  %2117 = phi %"class.v8::Value"* [ %2111, %2106 ], [ %2115, %2112 ]
  %2118 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2117) #9
  br i1 %2118, label %2119, label %2122, !prof !4

2119:                                             ; preds = %2116
  %2120 = bitcast %"class.v8::Value"* %2117 to %"class.v8::Int32"*
  %2121 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2120) #9
  br label %2124

2122:                                             ; preds = %2116
  %2123 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2020, %"class.v8::Value"* %2117, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2124

2124:                                             ; preds = %2122, %2119
  %2125 = phi i32 [ %2121, %2119 ], [ %2123, %2122 ]
  %2126 = load i32, i32* %2029, align 8
  %2127 = icmp eq i32 %2126, 0
  br i1 %2127, label %2128, label %2288

2128:                                             ; preds = %2124
  %2129 = load i32, i32* %39, align 8
  %2130 = icmp sgt i32 %2129, 2
  br i1 %2130, label %2137, label %2131

2131:                                             ; preds = %2128
  %2132 = load i64*, i64** %43, align 8
  %2133 = getelementptr inbounds i64, i64* %2132, i64 1
  %2134 = load i64, i64* %2133, align 8
  %2135 = add i64 %2134, 160
  %2136 = inttoptr i64 %2135 to %"class.v8::Value"*
  br label %2141

2137:                                             ; preds = %2128
  %2138 = load i64*, i64** %1668, align 8
  %2139 = getelementptr inbounds i64, i64* %2138, i64 2
  %2140 = bitcast i64* %2139 to %"class.v8::Value"*
  br label %2141

2141:                                             ; preds = %2137, %2131
  %2142 = phi %"class.v8::Value"* [ %2136, %2131 ], [ %2140, %2137 ]
  %2143 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2142) #9
  br i1 %2143, label %2144, label %2147, !prof !4

2144:                                             ; preds = %2141
  %2145 = bitcast %"class.v8::Value"* %2142 to %"class.v8::Int32"*
  %2146 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2145) #9
  br label %2149

2147:                                             ; preds = %2141
  %2148 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2020, %"class.v8::Value"* %2142, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2149

2149:                                             ; preds = %2147, %2144
  %2150 = phi i32 [ %2146, %2144 ], [ %2148, %2147 ]
  %2151 = load i32, i32* %2029, align 8
  %2152 = icmp eq i32 %2151, 0
  br i1 %2152, label %2153, label %2288

2153:                                             ; preds = %2149
  %2154 = load i32, i32* %39, align 8
  %2155 = icmp sgt i32 %2154, 3
  br i1 %2155, label %2162, label %2156

2156:                                             ; preds = %2153
  %2157 = load i64*, i64** %43, align 8
  %2158 = getelementptr inbounds i64, i64* %2157, i64 1
  %2159 = load i64, i64* %2158, align 8
  %2160 = add i64 %2159, 160
  %2161 = inttoptr i64 %2160 to %"class.v8::Value"*
  br label %2166

2162:                                             ; preds = %2153
  %2163 = load i64*, i64** %1668, align 8
  %2164 = getelementptr inbounds i64, i64* %2163, i64 3
  %2165 = bitcast i64* %2164 to %"class.v8::Value"*
  br label %2166

2166:                                             ; preds = %2162, %2156
  %2167 = phi %"class.v8::Value"* [ %2161, %2156 ], [ %2165, %2162 ]
  %2168 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2167) #9
  br i1 %2168, label %2169, label %2172, !prof !4

2169:                                             ; preds = %2166
  %2170 = bitcast %"class.v8::Value"* %2167 to %"class.v8::Int32"*
  %2171 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2170) #9
  br label %2174

2172:                                             ; preds = %2166
  %2173 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2020, %"class.v8::Value"* %2167, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2174

2174:                                             ; preds = %2172, %2169
  %2175 = phi i32 [ %2171, %2169 ], [ %2173, %2172 ]
  %2176 = load i32, i32* %2029, align 8
  %2177 = icmp eq i32 %2176, 0
  br i1 %2177, label %2178, label %2288

2178:                                             ; preds = %2174
  %2179 = load i32, i32* %39, align 8
  %2180 = icmp sgt i32 %2179, 4
  br i1 %2180, label %2187, label %2181

2181:                                             ; preds = %2178
  %2182 = load i64*, i64** %43, align 8
  %2183 = getelementptr inbounds i64, i64* %2182, i64 1
  %2184 = load i64, i64* %2183, align 8
  %2185 = add i64 %2184, 160
  %2186 = inttoptr i64 %2185 to %"class.v8::Value"*
  br label %2191

2187:                                             ; preds = %2178
  %2188 = load i64*, i64** %1668, align 8
  %2189 = getelementptr inbounds i64, i64* %2188, i64 4
  %2190 = bitcast i64* %2189 to %"class.v8::Value"*
  br label %2191

2191:                                             ; preds = %2187, %2181
  %2192 = phi %"class.v8::Value"* [ %2186, %2181 ], [ %2190, %2187 ]
  %2193 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2192) #9
  br i1 %2193, label %2194, label %2197, !prof !4

2194:                                             ; preds = %2191
  %2195 = bitcast %"class.v8::Value"* %2192 to %"class.v8::Uint32"*
  %2196 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2195) #9
  br label %2204

2197:                                             ; preds = %2191
  %2198 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2192) #9
  br i1 %2198, label %2199, label %2202, !prof !4

2199:                                             ; preds = %2197
  %2200 = bitcast %"class.v8::Value"* %2192 to %"class.v8::Int32"*
  %2201 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2200) #9
  br label %2204

2202:                                             ; preds = %2197
  %2203 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2020, %"class.v8::Value"* %2192, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2204

2204:                                             ; preds = %2202, %2199, %2194
  %2205 = phi i32 [ %2196, %2194 ], [ %2201, %2199 ], [ %2203, %2202 ]
  %2206 = load i32, i32* %2029, align 8
  %2207 = icmp eq i32 %2206, 0
  br i1 %2207, label %2208, label %2288

2208:                                             ; preds = %2204
  %2209 = load i32, i32* %39, align 8
  %2210 = icmp sgt i32 %2209, 5
  br i1 %2210, label %2217, label %2211

2211:                                             ; preds = %2208
  %2212 = load i64*, i64** %43, align 8
  %2213 = getelementptr inbounds i64, i64* %2212, i64 1
  %2214 = load i64, i64* %2213, align 8
  %2215 = add i64 %2214, 160
  %2216 = inttoptr i64 %2215 to %"class.v8::Value"*
  br label %2221

2217:                                             ; preds = %2208
  %2218 = load i64*, i64** %1668, align 8
  %2219 = getelementptr inbounds i64, i64* %2218, i64 5
  %2220 = bitcast i64* %2219 to %"class.v8::Value"*
  br label %2221

2221:                                             ; preds = %2217, %2211
  %2222 = phi %"class.v8::Value"* [ %2216, %2211 ], [ %2220, %2217 ]
  %2223 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2222) #9
  br i1 %2223, label %2224, label %2227, !prof !4

2224:                                             ; preds = %2221
  %2225 = bitcast %"class.v8::Value"* %2222 to %"class.v8::Uint32"*
  %2226 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2225) #9
  br label %2234

2227:                                             ; preds = %2221
  %2228 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2222) #9
  br i1 %2228, label %2229, label %2232, !prof !4

2229:                                             ; preds = %2227
  %2230 = bitcast %"class.v8::Value"* %2222 to %"class.v8::Int32"*
  %2231 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2230) #9
  br label %2234

2232:                                             ; preds = %2227
  %2233 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2020, %"class.v8::Value"* %2222, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2234

2234:                                             ; preds = %2232, %2229, %2224
  %2235 = phi i32 [ %2226, %2224 ], [ %2231, %2229 ], [ %2233, %2232 ]
  %2236 = load i32, i32* %2029, align 8
  %2237 = icmp eq i32 %2236, 0
  br i1 %2237, label %2238, label %2288

2238:                                             ; preds = %2234
  %2239 = load i32, i32* %39, align 8
  %2240 = icmp sgt i32 %2239, 6
  br i1 %2240, label %2247, label %2241

2241:                                             ; preds = %2238
  %2242 = load i64*, i64** %43, align 8
  %2243 = getelementptr inbounds i64, i64* %2242, i64 1
  %2244 = load i64, i64* %2243, align 8
  %2245 = add i64 %2244, 160
  %2246 = inttoptr i64 %2245 to %"class.v8::Value"*
  br label %2251

2247:                                             ; preds = %2238
  %2248 = load i64*, i64** %1668, align 8
  %2249 = getelementptr inbounds i64, i64* %2248, i64 6
  %2250 = bitcast i64* %2249 to %"class.v8::Value"*
  br label %2251

2251:                                             ; preds = %2247, %2241
  %2252 = phi %"class.v8::Value"* [ %2246, %2241 ], [ %2250, %2247 ]
  %2253 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink9ImageData18wrapper_type_info_E, align 8
  %2254 = ptrtoint %"class.v8::Isolate"* %2020 to i64
  %2255 = add i64 %2254, 8
  %2256 = inttoptr i64 %2255 to %"class.blink::V8PerIsolateData"**
  %2257 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2256, align 8
  %2258 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2257, %"struct.blink::WrapperTypeInfo"* %2253, %"class.v8::Value"* %2252) #9
  br i1 %2258, label %2259, label %2281

2259:                                             ; preds = %2251
  %2260 = bitcast %"class.v8::Value"* %2252 to i64*
  %2261 = load i64, i64* %2260, align 8
  %2262 = add i64 %2261, -1
  %2263 = inttoptr i64 %2262 to i32*
  %2264 = load i32, i32* %2263, align 4
  %2265 = and i64 %2261, -4294967296
  %2266 = zext i32 %2264 to i64
  %2267 = or i64 %2265, %2266
  %2268 = add i64 %2267, 7
  %2269 = inttoptr i64 %2268 to i16*
  %2270 = load i16, i16* %2269, align 2
  switch i16 %2270, label %2275 [
    i16 1057, label %2271
    i16 1056, label %2271
    i16 1040, label %2271
  ]

2271:                                             ; preds = %2259, %2259, %2259
  %2272 = add i64 %2261, 19
  %2273 = inttoptr i64 %2272 to i8**
  %2274 = load i8*, i8** %2273, align 1
  br label %2278

2275:                                             ; preds = %2259
  %2276 = bitcast %"class.v8::Value"* %2252 to %"class.v8::Object"*
  %2277 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2276, i32 1) #9
  br label %2278

2278:                                             ; preds = %2275, %2271
  %2279 = phi i8* [ %2274, %2271 ], [ %2277, %2275 ]
  %2280 = bitcast i8* %2279 to %"class.blink::ImageData"*
  br label %2282

2281:                                             ; preds = %2251
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %2253, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  br label %2282

2282:                                             ; preds = %2281, %2278
  %2283 = phi %"class.blink::ImageData"* [ %2280, %2278 ], [ null, %2281 ]
  %2284 = load i32, i32* %2029, align 8
  %2285 = icmp eq i32 %2284, 0
  br i1 %2285, label %2286, label %2288

2286:                                             ; preds = %2282
  %2287 = bitcast i8* %2087 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEjiiijjPNS_9ImageDataE(%"class.blink::WebGLRenderingContextBase"* %2287, i32 %2103, i32 %2125, i32 %2150, i32 %2175, i32 %2205, i32 %2235, %"class.blink::ImageData"* %2283) #9
  br label %2288

2288:                                             ; preds = %2286, %2282, %2234, %2204, %2174, %2149, %2124, %2098, %2053
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2022, align 8
  %2289 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %2290 = load i64*, i64** %2289, align 8
  %2291 = icmp eq i64* %2290, null
  br i1 %2291, label %2301, label %2292

2292:                                             ; preds = %2288
  %2293 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2028, align 8
  %2294 = bitcast %"class.v8::Isolate"* %2293 to %"class.v8::internal::Isolate"*
  %2295 = load i64, i64* %2290, align 8
  %2296 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %2294, i64 %2295) #9
  %2297 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %2293) #9
  br i1 %2297, label %2301, label %2298

2298:                                             ; preds = %2292
  %2299 = bitcast i64* %2296 to %"class.v8::Value"*
  %2300 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %2293, %"class.v8::Value"* %2299) #9
  br label %2301

2301:                                             ; preds = %2298, %2292, %2288
  %2302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2030, align 8
  %2303 = icmp eq %"class.WTF::StringImpl"* %2302, null
  br i1 %2303, label %2317, label %2304

2304:                                             ; preds = %2301
  %2305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2306 = load atomic i32, i32* %2305 monotonic, align 4
  %2307 = and i32 %2306, 2
  %2308 = icmp eq i32 %2307, 0
  %2309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2302, i64 0, i32 0
  %2310 = load i32, i32* %2309, align 4
  br i1 %2308, label %2311, label %2313

2311:                                             ; preds = %2304
  %2312 = add i32 %2310, -1
  store i32 %2312, i32* %2309, align 4
  br label %2313

2313:                                             ; preds = %2311, %2304
  %2314 = phi i32 [ %2312, %2311 ], [ %2310, %2304 ]
  %2315 = icmp eq i32 %2314, 0
  br i1 %2315, label %2316, label %2317

2316:                                             ; preds = %2313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2302) #9
  br label %2317

2317:                                             ; preds = %2301, %2313, %2316
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2021) #9
  br label %2704

2318:                                             ; preds = %2012
  %2319 = load i32, i32* %39, align 8
  %2320 = icmp sgt i32 %2319, 6
  br i1 %2320, label %2327, label %2321

2321:                                             ; preds = %2318
  %2322 = load i64*, i64** %43, align 8
  %2323 = getelementptr inbounds i64, i64* %2322, i64 1
  %2324 = load i64, i64* %2323, align 8
  %2325 = add i64 %2324, 160
  %2326 = inttoptr i64 %2325 to %"class.v8::Value"*
  br label %2331

2327:                                             ; preds = %2318
  %2328 = load i64*, i64** %1668, align 8
  %2329 = getelementptr inbounds i64, i64* %2328, i64 6
  %2330 = bitcast i64* %2329 to %"class.v8::Value"*
  br label %2331

2331:                                             ; preds = %2321, %2327
  %2332 = phi %"class.v8::Value"* [ %2326, %2321 ], [ %2330, %2327 ]
  %2333 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %384, align 8
  %2334 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2333, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8ImageBitmap18wrapper_type_info_E, %"class.v8::Value"* %2332) #9
  br i1 %2334, label %2337, label %2335

2335:                                             ; preds = %2331
  %2336 = load i32, i32* %39, align 8
  br label %2639

2337:                                             ; preds = %2331
  %2338 = load i64*, i64** %43, align 8
  %2339 = getelementptr inbounds i64, i64* %2338, i64 1
  %2340 = bitcast i64* %2339 to %"class.v8::Isolate"**
  %2341 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2340, align 8
  %2342 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2342) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2342, i8 -86, i64 56, i1 false) #9
  %2343 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2343, align 8
  %2344 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %2344, align 8
  %2345 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %2345, align 2
  %2346 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %2347 = bitcast i8** %2346 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %2347, align 8
  %2348 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %2348, align 8
  %2349 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %2341, %"class.v8::Isolate"** %2349, align 8
  %2350 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %2350, align 8
  %2351 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %2352 = bitcast %"class.WTF::StringImpl"** %2351 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2352, i8 0, i64 16, i1 false) #9
  %2353 = load i32, i32* %39, align 8
  %2354 = icmp slt i32 %2353, 7
  br i1 %2354, label %2355, label %2375, !prof !5

2355:                                             ; preds = %2337
  %2356 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2356) #9
  %2357 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %2353) #9
  %2358 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2357, %"class.WTF::StringImpl"** %2358, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %2359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2358, align 8
  %2360 = icmp eq %"class.WTF::StringImpl"* %2359, null
  br i1 %2360, label %2374, label %2361

2361:                                             ; preds = %2355
  %2362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2363 = load atomic i32, i32* %2362 monotonic, align 4
  %2364 = and i32 %2363, 2
  %2365 = icmp eq i32 %2364, 0
  %2366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2359, i64 0, i32 0
  %2367 = load i32, i32* %2366, align 4
  br i1 %2365, label %2368, label %2370

2368:                                             ; preds = %2361
  %2369 = add i32 %2367, -1
  store i32 %2369, i32* %2366, align 4
  br label %2370

2370:                                             ; preds = %2368, %2361
  %2371 = phi i32 [ %2369, %2368 ], [ %2367, %2361 ]
  %2372 = icmp eq i32 %2371, 0
  br i1 %2372, label %2373, label %2374

2373:                                             ; preds = %2370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2359) #9
  br label %2374

2374:                                             ; preds = %2373, %2370, %2355
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2356) #9
  br label %2609

2375:                                             ; preds = %2337
  %2376 = load i64*, i64** %1668, align 8
  %2377 = getelementptr inbounds i64, i64* %2376, i64 -1
  %2378 = load i64, i64* %2377, align 8
  %2379 = add i64 %2378, -1
  %2380 = inttoptr i64 %2379 to i32*
  %2381 = load i32, i32* %2380, align 4
  %2382 = and i64 %2378, -4294967296
  %2383 = zext i32 %2381 to i64
  %2384 = or i64 %2382, %2383
  %2385 = add i64 %2384, 7
  %2386 = inttoptr i64 %2385 to i16*
  %2387 = load i16, i16* %2386, align 2
  switch i16 %2387, label %2393 [
    i16 1057, label %2388
    i16 1056, label %2388
    i16 1040, label %2388
  ]

2388:                                             ; preds = %2375, %2375, %2375
  %2389 = bitcast i64* %2376 to %"class.v8::Value"*
  %2390 = add i64 %2378, 19
  %2391 = inttoptr i64 %2390 to i8**
  %2392 = load i8*, i8** %2391, align 1
  br label %2407

2393:                                             ; preds = %2375
  %2394 = bitcast i64* %2377 to %"class.v8::Object"*
  %2395 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2394, i32 1) #9
  %2396 = load i32, i32* %39, align 8
  %2397 = icmp sgt i32 %2396, 0
  br i1 %2397, label %2398, label %2401

2398:                                             ; preds = %2393
  %2399 = bitcast i64** %1668 to %"class.v8::Value"**
  %2400 = load %"class.v8::Value"*, %"class.v8::Value"** %2399, align 8
  br label %2407

2401:                                             ; preds = %2393
  %2402 = load i64*, i64** %43, align 8
  %2403 = getelementptr inbounds i64, i64* %2402, i64 1
  %2404 = load i64, i64* %2403, align 8
  %2405 = add i64 %2404, 160
  %2406 = inttoptr i64 %2405 to %"class.v8::Value"*
  br label %2407

2407:                                             ; preds = %2388, %2398, %2401
  %2408 = phi i8* [ %2395, %2401 ], [ %2392, %2388 ], [ %2395, %2398 ]
  %2409 = phi %"class.v8::Value"* [ %2406, %2401 ], [ %2389, %2388 ], [ %2400, %2398 ]
  %2410 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2409) #9
  br i1 %2410, label %2411, label %2414, !prof !4

2411:                                             ; preds = %2407
  %2412 = bitcast %"class.v8::Value"* %2409 to %"class.v8::Uint32"*
  %2413 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2412) #9
  br label %2423

2414:                                             ; preds = %2407
  %2415 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2409) #9
  br i1 %2415, label %2416, label %2419, !prof !4

2416:                                             ; preds = %2414
  %2417 = bitcast %"class.v8::Value"* %2409 to %"class.v8::Int32"*
  %2418 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2417) #9
  br label %2423

2419:                                             ; preds = %2414
  %2420 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2341, %"class.v8::Value"* %2409, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %2421 = load i32, i32* %2350, align 8
  %2422 = icmp eq i32 %2421, 0
  br i1 %2422, label %2423, label %2609

2423:                                             ; preds = %2419, %2416, %2411
  %2424 = phi i32 [ %2420, %2419 ], [ %2418, %2416 ], [ %2413, %2411 ]
  %2425 = load i32, i32* %39, align 8
  %2426 = icmp sgt i32 %2425, 1
  br i1 %2426, label %2433, label %2427

2427:                                             ; preds = %2423
  %2428 = load i64*, i64** %43, align 8
  %2429 = getelementptr inbounds i64, i64* %2428, i64 1
  %2430 = load i64, i64* %2429, align 8
  %2431 = add i64 %2430, 160
  %2432 = inttoptr i64 %2431 to %"class.v8::Value"*
  br label %2437

2433:                                             ; preds = %2423
  %2434 = load i64*, i64** %1668, align 8
  %2435 = getelementptr inbounds i64, i64* %2434, i64 1
  %2436 = bitcast i64* %2435 to %"class.v8::Value"*
  br label %2437

2437:                                             ; preds = %2433, %2427
  %2438 = phi %"class.v8::Value"* [ %2432, %2427 ], [ %2436, %2433 ]
  %2439 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2438) #9
  br i1 %2439, label %2440, label %2443, !prof !4

2440:                                             ; preds = %2437
  %2441 = bitcast %"class.v8::Value"* %2438 to %"class.v8::Int32"*
  %2442 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2441) #9
  br label %2445

2443:                                             ; preds = %2437
  %2444 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2341, %"class.v8::Value"* %2438, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2445

2445:                                             ; preds = %2443, %2440
  %2446 = phi i32 [ %2442, %2440 ], [ %2444, %2443 ]
  %2447 = load i32, i32* %2350, align 8
  %2448 = icmp eq i32 %2447, 0
  br i1 %2448, label %2449, label %2609

2449:                                             ; preds = %2445
  %2450 = load i32, i32* %39, align 8
  %2451 = icmp sgt i32 %2450, 2
  br i1 %2451, label %2458, label %2452

2452:                                             ; preds = %2449
  %2453 = load i64*, i64** %43, align 8
  %2454 = getelementptr inbounds i64, i64* %2453, i64 1
  %2455 = load i64, i64* %2454, align 8
  %2456 = add i64 %2455, 160
  %2457 = inttoptr i64 %2456 to %"class.v8::Value"*
  br label %2462

2458:                                             ; preds = %2449
  %2459 = load i64*, i64** %1668, align 8
  %2460 = getelementptr inbounds i64, i64* %2459, i64 2
  %2461 = bitcast i64* %2460 to %"class.v8::Value"*
  br label %2462

2462:                                             ; preds = %2458, %2452
  %2463 = phi %"class.v8::Value"* [ %2457, %2452 ], [ %2461, %2458 ]
  %2464 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2463) #9
  br i1 %2464, label %2465, label %2468, !prof !4

2465:                                             ; preds = %2462
  %2466 = bitcast %"class.v8::Value"* %2463 to %"class.v8::Int32"*
  %2467 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2466) #9
  br label %2470

2468:                                             ; preds = %2462
  %2469 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2341, %"class.v8::Value"* %2463, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2470

2470:                                             ; preds = %2468, %2465
  %2471 = phi i32 [ %2467, %2465 ], [ %2469, %2468 ]
  %2472 = load i32, i32* %2350, align 8
  %2473 = icmp eq i32 %2472, 0
  br i1 %2473, label %2474, label %2609

2474:                                             ; preds = %2470
  %2475 = load i32, i32* %39, align 8
  %2476 = icmp sgt i32 %2475, 3
  br i1 %2476, label %2483, label %2477

2477:                                             ; preds = %2474
  %2478 = load i64*, i64** %43, align 8
  %2479 = getelementptr inbounds i64, i64* %2478, i64 1
  %2480 = load i64, i64* %2479, align 8
  %2481 = add i64 %2480, 160
  %2482 = inttoptr i64 %2481 to %"class.v8::Value"*
  br label %2487

2483:                                             ; preds = %2474
  %2484 = load i64*, i64** %1668, align 8
  %2485 = getelementptr inbounds i64, i64* %2484, i64 3
  %2486 = bitcast i64* %2485 to %"class.v8::Value"*
  br label %2487

2487:                                             ; preds = %2483, %2477
  %2488 = phi %"class.v8::Value"* [ %2482, %2477 ], [ %2486, %2483 ]
  %2489 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2488) #9
  br i1 %2489, label %2490, label %2493, !prof !4

2490:                                             ; preds = %2487
  %2491 = bitcast %"class.v8::Value"* %2488 to %"class.v8::Int32"*
  %2492 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2491) #9
  br label %2495

2493:                                             ; preds = %2487
  %2494 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2341, %"class.v8::Value"* %2488, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2495

2495:                                             ; preds = %2493, %2490
  %2496 = phi i32 [ %2492, %2490 ], [ %2494, %2493 ]
  %2497 = load i32, i32* %2350, align 8
  %2498 = icmp eq i32 %2497, 0
  br i1 %2498, label %2499, label %2609

2499:                                             ; preds = %2495
  %2500 = load i32, i32* %39, align 8
  %2501 = icmp sgt i32 %2500, 4
  br i1 %2501, label %2508, label %2502

2502:                                             ; preds = %2499
  %2503 = load i64*, i64** %43, align 8
  %2504 = getelementptr inbounds i64, i64* %2503, i64 1
  %2505 = load i64, i64* %2504, align 8
  %2506 = add i64 %2505, 160
  %2507 = inttoptr i64 %2506 to %"class.v8::Value"*
  br label %2512

2508:                                             ; preds = %2499
  %2509 = load i64*, i64** %1668, align 8
  %2510 = getelementptr inbounds i64, i64* %2509, i64 4
  %2511 = bitcast i64* %2510 to %"class.v8::Value"*
  br label %2512

2512:                                             ; preds = %2508, %2502
  %2513 = phi %"class.v8::Value"* [ %2507, %2502 ], [ %2511, %2508 ]
  %2514 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2513) #9
  br i1 %2514, label %2515, label %2518, !prof !4

2515:                                             ; preds = %2512
  %2516 = bitcast %"class.v8::Value"* %2513 to %"class.v8::Uint32"*
  %2517 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2516) #9
  br label %2525

2518:                                             ; preds = %2512
  %2519 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2513) #9
  br i1 %2519, label %2520, label %2523, !prof !4

2520:                                             ; preds = %2518
  %2521 = bitcast %"class.v8::Value"* %2513 to %"class.v8::Int32"*
  %2522 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2521) #9
  br label %2525

2523:                                             ; preds = %2518
  %2524 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2341, %"class.v8::Value"* %2513, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2525

2525:                                             ; preds = %2523, %2520, %2515
  %2526 = phi i32 [ %2517, %2515 ], [ %2522, %2520 ], [ %2524, %2523 ]
  %2527 = load i32, i32* %2350, align 8
  %2528 = icmp eq i32 %2527, 0
  br i1 %2528, label %2529, label %2609

2529:                                             ; preds = %2525
  %2530 = load i32, i32* %39, align 8
  %2531 = icmp sgt i32 %2530, 5
  br i1 %2531, label %2538, label %2532

2532:                                             ; preds = %2529
  %2533 = load i64*, i64** %43, align 8
  %2534 = getelementptr inbounds i64, i64* %2533, i64 1
  %2535 = load i64, i64* %2534, align 8
  %2536 = add i64 %2535, 160
  %2537 = inttoptr i64 %2536 to %"class.v8::Value"*
  br label %2542

2538:                                             ; preds = %2529
  %2539 = load i64*, i64** %1668, align 8
  %2540 = getelementptr inbounds i64, i64* %2539, i64 5
  %2541 = bitcast i64* %2540 to %"class.v8::Value"*
  br label %2542

2542:                                             ; preds = %2538, %2532
  %2543 = phi %"class.v8::Value"* [ %2537, %2532 ], [ %2541, %2538 ]
  %2544 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %2543) #9
  br i1 %2544, label %2545, label %2548, !prof !4

2545:                                             ; preds = %2542
  %2546 = bitcast %"class.v8::Value"* %2543 to %"class.v8::Uint32"*
  %2547 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %2546) #9
  br label %2555

2548:                                             ; preds = %2542
  %2549 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2543) #9
  br i1 %2549, label %2550, label %2553, !prof !4

2550:                                             ; preds = %2548
  %2551 = bitcast %"class.v8::Value"* %2543 to %"class.v8::Int32"*
  %2552 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %2551) #9
  br label %2555

2553:                                             ; preds = %2548
  %2554 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %2341, %"class.v8::Value"* %2543, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2555

2555:                                             ; preds = %2553, %2550, %2545
  %2556 = phi i32 [ %2547, %2545 ], [ %2552, %2550 ], [ %2554, %2553 ]
  %2557 = load i32, i32* %2350, align 8
  %2558 = icmp eq i32 %2557, 0
  br i1 %2558, label %2559, label %2609

2559:                                             ; preds = %2555
  %2560 = load i32, i32* %39, align 8
  %2561 = icmp sgt i32 %2560, 6
  br i1 %2561, label %2568, label %2562

2562:                                             ; preds = %2559
  %2563 = load i64*, i64** %43, align 8
  %2564 = getelementptr inbounds i64, i64* %2563, i64 1
  %2565 = load i64, i64* %2564, align 8
  %2566 = add i64 %2565, 160
  %2567 = inttoptr i64 %2566 to %"class.v8::Value"*
  br label %2572

2568:                                             ; preds = %2559
  %2569 = load i64*, i64** %1668, align 8
  %2570 = getelementptr inbounds i64, i64* %2569, i64 6
  %2571 = bitcast i64* %2570 to %"class.v8::Value"*
  br label %2572

2572:                                             ; preds = %2568, %2562
  %2573 = phi %"class.v8::Value"* [ %2567, %2562 ], [ %2571, %2568 ]
  %2574 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11ImageBitmap18wrapper_type_info_E, align 8
  %2575 = ptrtoint %"class.v8::Isolate"* %2341 to i64
  %2576 = add i64 %2575, 8
  %2577 = inttoptr i64 %2576 to %"class.blink::V8PerIsolateData"**
  %2578 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %2577, align 8
  %2579 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %2578, %"struct.blink::WrapperTypeInfo"* %2574, %"class.v8::Value"* %2573) #9
  br i1 %2579, label %2580, label %2602

2580:                                             ; preds = %2572
  %2581 = bitcast %"class.v8::Value"* %2573 to i64*
  %2582 = load i64, i64* %2581, align 8
  %2583 = add i64 %2582, -1
  %2584 = inttoptr i64 %2583 to i32*
  %2585 = load i32, i32* %2584, align 4
  %2586 = and i64 %2582, -4294967296
  %2587 = zext i32 %2585 to i64
  %2588 = or i64 %2586, %2587
  %2589 = add i64 %2588, 7
  %2590 = inttoptr i64 %2589 to i16*
  %2591 = load i16, i16* %2590, align 2
  switch i16 %2591, label %2596 [
    i16 1057, label %2592
    i16 1056, label %2592
    i16 1040, label %2592
  ]

2592:                                             ; preds = %2580, %2580, %2580
  %2593 = add i64 %2582, 19
  %2594 = inttoptr i64 %2593 to i8**
  %2595 = load i8*, i8** %2594, align 1
  br label %2599

2596:                                             ; preds = %2580
  %2597 = bitcast %"class.v8::Value"* %2573 to %"class.v8::Object"*
  %2598 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %2597, i32 1) #9
  br label %2599

2599:                                             ; preds = %2596, %2592
  %2600 = phi i8* [ %2595, %2592 ], [ %2598, %2596 ]
  %2601 = bitcast i8* %2600 to %"class.blink::ImageBitmap"*
  br label %2603

2602:                                             ; preds = %2572
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %2574, i32 6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2603

2603:                                             ; preds = %2602, %2599
  %2604 = phi %"class.blink::ImageBitmap"* [ %2601, %2599 ], [ null, %2602 ]
  %2605 = load i32, i32* %2350, align 8
  %2606 = icmp eq i32 %2605, 0
  br i1 %2606, label %2607, label %2609

2607:                                             ; preds = %2603
  %2608 = bitcast i8* %2408 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEjiiijjPNS_11ImageBitmapERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"* %2608, i32 %2424, i32 %2446, i32 %2471, i32 %2496, i32 %2526, i32 %2556, %"class.blink::ImageBitmap"* %2604, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %2609

2609:                                             ; preds = %2607, %2603, %2555, %2525, %2495, %2470, %2445, %2419, %2374
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2343, align 8
  %2610 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %2611 = load i64*, i64** %2610, align 8
  %2612 = icmp eq i64* %2611, null
  br i1 %2612, label %2622, label %2613

2613:                                             ; preds = %2609
  %2614 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2349, align 8
  %2615 = bitcast %"class.v8::Isolate"* %2614 to %"class.v8::internal::Isolate"*
  %2616 = load i64, i64* %2611, align 8
  %2617 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %2615, i64 %2616) #9
  %2618 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %2614) #9
  br i1 %2618, label %2622, label %2619

2619:                                             ; preds = %2613
  %2620 = bitcast i64* %2617 to %"class.v8::Value"*
  %2621 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %2614, %"class.v8::Value"* %2620) #9
  br label %2622

2622:                                             ; preds = %2619, %2613, %2609
  %2623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2351, align 8
  %2624 = icmp eq %"class.WTF::StringImpl"* %2623, null
  br i1 %2624, label %2638, label %2625

2625:                                             ; preds = %2622
  %2626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2627 = load atomic i32, i32* %2626 monotonic, align 4
  %2628 = and i32 %2627, 2
  %2629 = icmp eq i32 %2628, 0
  %2630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2623, i64 0, i32 0
  %2631 = load i32, i32* %2630, align 4
  br i1 %2629, label %2632, label %2634

2632:                                             ; preds = %2625
  %2633 = add i32 %2631, -1
  store i32 %2633, i32* %2630, align 4
  br label %2634

2634:                                             ; preds = %2632, %2625
  %2635 = phi i32 [ %2633, %2632 ], [ %2631, %2625 ]
  %2636 = icmp eq i32 %2635, 0
  br i1 %2636, label %2637, label %2638

2637:                                             ; preds = %2634
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2623) #9
  br label %2638

2638:                                             ; preds = %2622, %2634, %2637
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2342) #9
  br label %2704

2639:                                             ; preds = %2335, %38
  %2640 = phi i32 [ %2336, %2335 ], [ %40, %38 ]
  %2641 = bitcast %"class.blink::ExceptionState"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2641) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2641, i8 -86, i64 56, i1 false)
  %2642 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2642, align 8
  %2643 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 1, i32 0
  store i16 6, i16* %2643, align 8
  %2644 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 1, i32 1
  store i16 0, i16* %2644, align 2
  %2645 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 1, i32 2
  %2646 = bitcast i8** %2645 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.401, i64 0, i64 0)>, <2 x i8*>* %2646, align 8
  %2647 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %2647, align 8
  %2648 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 3
  store %"class.v8::Isolate"* %47, %"class.v8::Isolate"** %2648, align 8
  %2649 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 4
  store i32 0, i32* %2649, align 8
  %2650 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 5, i32 0, i32 0
  %2651 = bitcast %"class.WTF::StringImpl"** %2650 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2651, i8 0, i64 16, i1 false) #9
  %2652 = icmp slt i32 %2640, 7
  br i1 %2652, label %2653, label %2673, !prof !5

2653:                                             ; preds = %2639
  %2654 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2654) #9
  %2655 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %2640) #9
  %2656 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2655, %"class.WTF::StringImpl"** %2656, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %21) #9
  %2657 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2656, align 8
  %2658 = icmp eq %"class.WTF::StringImpl"* %2657, null
  br i1 %2658, label %2672, label %2659

2659:                                             ; preds = %2653
  %2660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2657, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2661 = load atomic i32, i32* %2660 monotonic, align 4
  %2662 = and i32 %2661, 2
  %2663 = icmp eq i32 %2662, 0
  %2664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2657, i64 0, i32 0
  %2665 = load i32, i32* %2664, align 4
  br i1 %2663, label %2666, label %2668

2666:                                             ; preds = %2659
  %2667 = add i32 %2665, -1
  store i32 %2667, i32* %2664, align 4
  br label %2668

2668:                                             ; preds = %2666, %2659
  %2669 = phi i32 [ %2667, %2666 ], [ %2665, %2659 ]
  %2670 = icmp eq i32 %2669, 0
  br i1 %2670, label %2671, label %2672

2671:                                             ; preds = %2668
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2657) #9
  br label %2672

2672:                                             ; preds = %2653, %2668, %2671
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2654) #9
  br label %2674

2673:                                             ; preds = %2639
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %2674

2674:                                             ; preds = %2673, %2672
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2642, align 8
  %2675 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %20, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %2676 = load i64*, i64** %2675, align 8
  %2677 = icmp eq i64* %2676, null
  br i1 %2677, label %2687, label %2678

2678:                                             ; preds = %2674
  %2679 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2648, align 8
  %2680 = bitcast %"class.v8::Isolate"* %2679 to %"class.v8::internal::Isolate"*
  %2681 = load i64, i64* %2676, align 8
  %2682 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %2680, i64 %2681) #9
  %2683 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %2679) #9
  br i1 %2683, label %2687, label %2684

2684:                                             ; preds = %2678
  %2685 = bitcast i64* %2682 to %"class.v8::Value"*
  %2686 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %2679, %"class.v8::Value"* %2685) #9
  br label %2687

2687:                                             ; preds = %2684, %2678, %2674
  %2688 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2650, align 8
  %2689 = icmp eq %"class.WTF::StringImpl"* %2688, null
  br i1 %2689, label %2703, label %2690

2690:                                             ; preds = %2687
  %2691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2692 = load atomic i32, i32* %2691 monotonic, align 4
  %2693 = and i32 %2692, 2
  %2694 = icmp eq i32 %2693, 0
  %2695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2688, i64 0, i32 0
  %2696 = load i32, i32* %2695, align 4
  br i1 %2694, label %2697, label %2699

2697:                                             ; preds = %2690
  %2698 = add i32 %2696, -1
  store i32 %2698, i32* %2695, align 4
  br label %2699

2699:                                             ; preds = %2697, %2690
  %2700 = phi i32 [ %2698, %2697 ], [ %2696, %2690 ]
  %2701 = icmp eq i32 %2700, 0
  br i1 %2701, label %2702, label %2703

2702:                                             ; preds = %2699
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2688) #9
  br label %2703

2703:                                             ; preds = %2687, %2699, %2702
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2641) #9
  br label %2704

2704:                                             ; preds = %2638, %2317, %1998, %2703, %1666, %1340, %1014, %691, %370
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform1FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.402, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %164

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %164

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Number"*
  %148 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi double [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %164

155:                                              ; preds = %151
  %156 = fcmp ogt double %152, 0x47EFFFFFE0000000
  br i1 %156, label %161, label %157, !prof !5

157:                                              ; preds = %155
  %158 = fcmp olt double %152, 0xC7EFFFFFE0000000
  br i1 %158, label %161, label %159, !prof !5

159:                                              ; preds = %157
  %160 = fptrunc double %152 to float
  br label %161

161:                                              ; preds = %155, %157, %159
  %162 = phi float [ 0xFFF0000000000000, %157 ], [ 0x7FF0000000000000, %155 ], [ %160, %159 ]
  %163 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform1fEPKNS_20WebGLUniformLocationEf(%"class.blink::WebGLRenderingContextBase"* %163, %"class.blink::WebGLUniformLocation"* %130, float %162) #9
  br label %164

164:                                              ; preds = %126, %151, %161, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = icmp eq i64* %166, null
  br i1 %167, label %177, label %168

168:                                              ; preds = %164
  %169 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %170 = bitcast %"class.v8::Isolate"* %169 to %"class.v8::internal::Isolate"*
  %171 = load i64, i64* %166, align 8
  %172 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %170, i64 %171) #9
  %173 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %169) #9
  br i1 %173, label %177, label %174

174:                                              ; preds = %168
  %175 = bitcast i64* %172 to %"class.v8::Value"*
  %176 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %169, %"class.v8::Value"* %175) #9
  br label %177

177:                                              ; preds = %174, %168, %164
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #9
  br label %193

193:                                              ; preds = %177, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform1FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.403, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.403, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIfLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform1fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.403, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform1fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load float*, float** %404, align 8
  %406 = icmp eq float* %405, null
  %407 = bitcast float* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store float* null, float** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform1IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.404, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %157

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %157

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Int32"*
  %148 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %146, %149
  %152 = phi i32 [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform1iEPKNS_20WebGLUniformLocationEi(%"class.blink::WebGLRenderingContextBase"* %156, %"class.blink::WebGLUniformLocation"* %130, i32 %152) #9
  br label %157

157:                                              ; preds = %151, %126, %155, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = icmp eq i64* %159, null
  br i1 %160, label %170, label %161

161:                                              ; preds = %157
  %162 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %163 = bitcast %"class.v8::Isolate"* %162 to %"class.v8::internal::Isolate"*
  %164 = load i64, i64* %159, align 8
  %165 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %163, i64 %164) #9
  %166 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %162) #9
  br i1 %166, label %170, label %167

167:                                              ; preds = %161
  %168 = bitcast i64* %165 to %"class.v8::Value"*
  %169 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %162, %"class.v8::Value"* %168) #9
  br label %170

170:                                              ; preds = %167, %161, %157
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #9
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform1IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1845", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView.1844", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.405, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.405, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView.1844"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIiLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform1ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.405, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1845"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIiLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform1ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1845"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = icmp eq i32* %405, null
  %407 = bitcast i32* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store i32* null, i32** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform2FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.406, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %196

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %196

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Number"*
  %148 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi double [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %196

155:                                              ; preds = %151
  %156 = fcmp ogt double %152, 0x47EFFFFFE0000000
  br i1 %156, label %161, label %157, !prof !5

157:                                              ; preds = %155
  %158 = fcmp olt double %152, 0xC7EFFFFFE0000000
  br i1 %158, label %161, label %159, !prof !5

159:                                              ; preds = %157
  %160 = fptrunc double %152 to float
  br label %161

161:                                              ; preds = %155, %157, %159
  %162 = phi float [ 0xFFF0000000000000, %157 ], [ 0x7FF0000000000000, %155 ], [ %160, %159 ]
  %163 = load i32, i32* %20, align 8
  %164 = icmp sgt i32 %163, 2
  br i1 %164, label %171, label %165

165:                                              ; preds = %161
  %166 = load i64*, i64** %4, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 1
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 160
  %170 = inttoptr i64 %169 to %"class.v8::Value"*
  br label %175

171:                                              ; preds = %161
  %172 = load i64*, i64** %44, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 2
  %174 = bitcast i64* %173 to %"class.v8::Value"*
  br label %175

175:                                              ; preds = %165, %171
  %176 = phi %"class.v8::Value"* [ %170, %165 ], [ %174, %171 ]
  %177 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %176) #9
  br i1 %177, label %178, label %181, !prof !4

178:                                              ; preds = %175
  %179 = bitcast %"class.v8::Value"* %176 to %"class.v8::Number"*
  %180 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %179) #9
  br label %183

181:                                              ; preds = %175
  %182 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %176, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi double [ %180, %178 ], [ %182, %181 ]
  %185 = load i32, i32* %17, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %196

187:                                              ; preds = %183
  %188 = fcmp ogt double %184, 0x47EFFFFFE0000000
  br i1 %188, label %193, label %189, !prof !5

189:                                              ; preds = %187
  %190 = fcmp olt double %184, 0xC7EFFFFFE0000000
  br i1 %190, label %193, label %191, !prof !5

191:                                              ; preds = %189
  %192 = fptrunc double %184 to float
  br label %193

193:                                              ; preds = %187, %189, %191
  %194 = phi float [ 0xFFF0000000000000, %189 ], [ 0x7FF0000000000000, %187 ], [ %192, %191 ]
  %195 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform2fEPKNS_20WebGLUniformLocationEff(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %130, float %162, float %194) #9
  br label %196

196:                                              ; preds = %126, %183, %151, %193, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %197 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %198 = load i64*, i64** %197, align 8
  %199 = icmp eq i64* %198, null
  br i1 %199, label %209, label %200

200:                                              ; preds = %196
  %201 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %202 = bitcast %"class.v8::Isolate"* %201 to %"class.v8::internal::Isolate"*
  %203 = load i64, i64* %198, align 8
  %204 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %202, i64 %203) #9
  %205 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %201) #9
  br i1 %205, label %209, label %206

206:                                              ; preds = %200
  %207 = bitcast i64* %204 to %"class.v8::Value"*
  %208 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %201, %"class.v8::Value"* %207) #9
  br label %209

209:                                              ; preds = %206, %200, %196
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #9
  br label %225

225:                                              ; preds = %209, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform2FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.407, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.407, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIfLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform2fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.407, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform2fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load float*, float** %404, align 8
  %406 = icmp eq float* %405, null
  %407 = bitcast float* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store float* null, float** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform2IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.408, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %182

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %182

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Int32"*
  %148 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %146, %149
  %152 = phi i32 [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %182

155:                                              ; preds = %151
  %156 = load i32, i32* %20, align 8
  %157 = icmp sgt i32 %156, 2
  br i1 %157, label %164, label %158

158:                                              ; preds = %155
  %159 = load i64*, i64** %4, align 8
  %160 = getelementptr inbounds i64, i64* %159, i64 1
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 160
  %163 = inttoptr i64 %162 to %"class.v8::Value"*
  br label %168

164:                                              ; preds = %155
  %165 = load i64*, i64** %44, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 2
  %167 = bitcast i64* %166 to %"class.v8::Value"*
  br label %168

168:                                              ; preds = %158, %164
  %169 = phi %"class.v8::Value"* [ %163, %158 ], [ %167, %164 ]
  %170 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %169) #9
  br i1 %170, label %171, label %174, !prof !4

171:                                              ; preds = %168
  %172 = bitcast %"class.v8::Value"* %169 to %"class.v8::Int32"*
  %173 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %172) #9
  br label %176

174:                                              ; preds = %168
  %175 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %169, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %176

176:                                              ; preds = %171, %174
  %177 = phi i32 [ %173, %171 ], [ %175, %174 ]
  %178 = load i32, i32* %17, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform2iEPKNS_20WebGLUniformLocationEii(%"class.blink::WebGLRenderingContextBase"* %181, %"class.blink::WebGLUniformLocation"* %130, i32 %152, i32 %177) #9
  br label %182

182:                                              ; preds = %176, %151, %126, %180, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %183 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %184 = load i64*, i64** %183, align 8
  %185 = icmp eq i64* %184, null
  br i1 %185, label %195, label %186

186:                                              ; preds = %182
  %187 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %188 = bitcast %"class.v8::Isolate"* %187 to %"class.v8::internal::Isolate"*
  %189 = load i64, i64* %184, align 8
  %190 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %188, i64 %189) #9
  %191 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %187) #9
  br i1 %191, label %195, label %192

192:                                              ; preds = %186
  %193 = bitcast i64* %190 to %"class.v8::Value"*
  %194 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %187, %"class.v8::Value"* %193) #9
  br label %195

195:                                              ; preds = %192, %186, %182
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #9
  br label %211

211:                                              ; preds = %195, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform2IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1845", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView.1844", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.409, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.409, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView.1844"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIiLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform2ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.409, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1845"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIiLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform2ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1845"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = icmp eq i32* %405, null
  %407 = bitcast i32* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store i32* null, i32** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform3FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.410, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %228

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %228

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Number"*
  %148 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi double [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %228

155:                                              ; preds = %151
  %156 = fcmp ogt double %152, 0x47EFFFFFE0000000
  br i1 %156, label %161, label %157, !prof !5

157:                                              ; preds = %155
  %158 = fcmp olt double %152, 0xC7EFFFFFE0000000
  br i1 %158, label %161, label %159, !prof !5

159:                                              ; preds = %157
  %160 = fptrunc double %152 to float
  br label %161

161:                                              ; preds = %155, %157, %159
  %162 = phi float [ 0xFFF0000000000000, %157 ], [ 0x7FF0000000000000, %155 ], [ %160, %159 ]
  %163 = load i32, i32* %20, align 8
  %164 = icmp sgt i32 %163, 2
  br i1 %164, label %171, label %165

165:                                              ; preds = %161
  %166 = load i64*, i64** %4, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 1
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 160
  %170 = inttoptr i64 %169 to %"class.v8::Value"*
  br label %175

171:                                              ; preds = %161
  %172 = load i64*, i64** %44, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 2
  %174 = bitcast i64* %173 to %"class.v8::Value"*
  br label %175

175:                                              ; preds = %165, %171
  %176 = phi %"class.v8::Value"* [ %170, %165 ], [ %174, %171 ]
  %177 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %176) #9
  br i1 %177, label %178, label %181, !prof !4

178:                                              ; preds = %175
  %179 = bitcast %"class.v8::Value"* %176 to %"class.v8::Number"*
  %180 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %179) #9
  br label %183

181:                                              ; preds = %175
  %182 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %176, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi double [ %180, %178 ], [ %182, %181 ]
  %185 = load i32, i32* %17, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %228

187:                                              ; preds = %183
  %188 = fcmp ogt double %184, 0x47EFFFFFE0000000
  br i1 %188, label %193, label %189, !prof !5

189:                                              ; preds = %187
  %190 = fcmp olt double %184, 0xC7EFFFFFE0000000
  br i1 %190, label %193, label %191, !prof !5

191:                                              ; preds = %189
  %192 = fptrunc double %184 to float
  br label %193

193:                                              ; preds = %187, %189, %191
  %194 = phi float [ 0xFFF0000000000000, %189 ], [ 0x7FF0000000000000, %187 ], [ %192, %191 ]
  %195 = load i32, i32* %20, align 8
  %196 = icmp sgt i32 %195, 3
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = load i64*, i64** %4, align 8
  %199 = getelementptr inbounds i64, i64* %198, i64 1
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 160
  %202 = inttoptr i64 %201 to %"class.v8::Value"*
  br label %207

203:                                              ; preds = %193
  %204 = load i64*, i64** %44, align 8
  %205 = getelementptr inbounds i64, i64* %204, i64 3
  %206 = bitcast i64* %205 to %"class.v8::Value"*
  br label %207

207:                                              ; preds = %197, %203
  %208 = phi %"class.v8::Value"* [ %202, %197 ], [ %206, %203 ]
  %209 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %208) #9
  br i1 %209, label %210, label %213, !prof !4

210:                                              ; preds = %207
  %211 = bitcast %"class.v8::Value"* %208 to %"class.v8::Number"*
  %212 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %211) #9
  br label %215

213:                                              ; preds = %207
  %214 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %208, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %215

215:                                              ; preds = %213, %210
  %216 = phi double [ %212, %210 ], [ %214, %213 ]
  %217 = load i32, i32* %17, align 8
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %228

219:                                              ; preds = %215
  %220 = fcmp ogt double %216, 0x47EFFFFFE0000000
  br i1 %220, label %225, label %221, !prof !5

221:                                              ; preds = %219
  %222 = fcmp olt double %216, 0xC7EFFFFFE0000000
  br i1 %222, label %225, label %223, !prof !5

223:                                              ; preds = %221
  %224 = fptrunc double %216 to float
  br label %225

225:                                              ; preds = %219, %221, %223
  %226 = phi float [ 0xFFF0000000000000, %221 ], [ 0x7FF0000000000000, %219 ], [ %224, %223 ]
  %227 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform3fEPKNS_20WebGLUniformLocationEfff(%"class.blink::WebGLRenderingContextBase"* %227, %"class.blink::WebGLUniformLocation"* %130, float %162, float %194, float %226) #9
  br label %228

228:                                              ; preds = %126, %215, %183, %151, %225, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %229 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %230 = load i64*, i64** %229, align 8
  %231 = icmp eq i64* %230, null
  br i1 %231, label %241, label %232

232:                                              ; preds = %228
  %233 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %234 = bitcast %"class.v8::Isolate"* %233 to %"class.v8::internal::Isolate"*
  %235 = load i64, i64* %230, align 8
  %236 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %234, i64 %235) #9
  %237 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %233) #9
  br i1 %237, label %241, label %238

238:                                              ; preds = %232
  %239 = bitcast i64* %236 to %"class.v8::Value"*
  %240 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %233, %"class.v8::Value"* %239) #9
  br label %241

241:                                              ; preds = %238, %232, %228
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #9
  br label %257

257:                                              ; preds = %241, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform3FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIfLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform3fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform3fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load float*, float** %404, align 8
  %406 = icmp eq float* %405, null
  %407 = bitcast float* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store float* null, float** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform3IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.412, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %207

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %207

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Int32"*
  %148 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %146, %149
  %152 = phi i32 [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %207

155:                                              ; preds = %151
  %156 = load i32, i32* %20, align 8
  %157 = icmp sgt i32 %156, 2
  br i1 %157, label %164, label %158

158:                                              ; preds = %155
  %159 = load i64*, i64** %4, align 8
  %160 = getelementptr inbounds i64, i64* %159, i64 1
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 160
  %163 = inttoptr i64 %162 to %"class.v8::Value"*
  br label %168

164:                                              ; preds = %155
  %165 = load i64*, i64** %44, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 2
  %167 = bitcast i64* %166 to %"class.v8::Value"*
  br label %168

168:                                              ; preds = %158, %164
  %169 = phi %"class.v8::Value"* [ %163, %158 ], [ %167, %164 ]
  %170 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %169) #9
  br i1 %170, label %171, label %174, !prof !4

171:                                              ; preds = %168
  %172 = bitcast %"class.v8::Value"* %169 to %"class.v8::Int32"*
  %173 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %172) #9
  br label %176

174:                                              ; preds = %168
  %175 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %169, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %176

176:                                              ; preds = %171, %174
  %177 = phi i32 [ %173, %171 ], [ %175, %174 ]
  %178 = load i32, i32* %17, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %207

180:                                              ; preds = %176
  %181 = load i32, i32* %20, align 8
  %182 = icmp sgt i32 %181, 3
  br i1 %182, label %189, label %183

183:                                              ; preds = %180
  %184 = load i64*, i64** %4, align 8
  %185 = getelementptr inbounds i64, i64* %184, i64 1
  %186 = load i64, i64* %185, align 8
  %187 = add i64 %186, 160
  %188 = inttoptr i64 %187 to %"class.v8::Value"*
  br label %193

189:                                              ; preds = %180
  %190 = load i64*, i64** %44, align 8
  %191 = getelementptr inbounds i64, i64* %190, i64 3
  %192 = bitcast i64* %191 to %"class.v8::Value"*
  br label %193

193:                                              ; preds = %183, %189
  %194 = phi %"class.v8::Value"* [ %188, %183 ], [ %192, %189 ]
  %195 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %194) #9
  br i1 %195, label %196, label %199, !prof !4

196:                                              ; preds = %193
  %197 = bitcast %"class.v8::Value"* %194 to %"class.v8::Int32"*
  %198 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %197) #9
  br label %201

199:                                              ; preds = %193
  %200 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %194, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %201

201:                                              ; preds = %196, %199
  %202 = phi i32 [ %198, %196 ], [ %200, %199 ]
  %203 = load i32, i32* %17, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %201
  %206 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform3iEPKNS_20WebGLUniformLocationEiii(%"class.blink::WebGLRenderingContextBase"* %206, %"class.blink::WebGLUniformLocation"* %130, i32 %152, i32 %177, i32 %202) #9
  br label %207

207:                                              ; preds = %201, %176, %151, %126, %205, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %208 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %209 = load i64*, i64** %208, align 8
  %210 = icmp eq i64* %209, null
  br i1 %210, label %220, label %211

211:                                              ; preds = %207
  %212 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %213 = bitcast %"class.v8::Isolate"* %212 to %"class.v8::internal::Isolate"*
  %214 = load i64, i64* %209, align 8
  %215 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %213, i64 %214) #9
  %216 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %212) #9
  br i1 %216, label %220, label %217

217:                                              ; preds = %211
  %218 = bitcast i64* %215 to %"class.v8::Value"*
  %219 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %212, %"class.v8::Value"* %218) #9
  br label %220

220:                                              ; preds = %217, %211, %207
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #9
  br label %236

236:                                              ; preds = %220, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform3IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1845", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView.1844", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView.1844"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIiLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform3ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.413, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1845"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIiLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform3ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1845"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = icmp eq i32* %405, null
  %407 = bitcast i32* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store i32* null, i32** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform4FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %260

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %260

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Number"*
  %148 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi double [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %260

155:                                              ; preds = %151
  %156 = fcmp ogt double %152, 0x47EFFFFFE0000000
  br i1 %156, label %161, label %157, !prof !5

157:                                              ; preds = %155
  %158 = fcmp olt double %152, 0xC7EFFFFFE0000000
  br i1 %158, label %161, label %159, !prof !5

159:                                              ; preds = %157
  %160 = fptrunc double %152 to float
  br label %161

161:                                              ; preds = %155, %157, %159
  %162 = phi float [ 0xFFF0000000000000, %157 ], [ 0x7FF0000000000000, %155 ], [ %160, %159 ]
  %163 = load i32, i32* %20, align 8
  %164 = icmp sgt i32 %163, 2
  br i1 %164, label %171, label %165

165:                                              ; preds = %161
  %166 = load i64*, i64** %4, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 1
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 160
  %170 = inttoptr i64 %169 to %"class.v8::Value"*
  br label %175

171:                                              ; preds = %161
  %172 = load i64*, i64** %44, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 2
  %174 = bitcast i64* %173 to %"class.v8::Value"*
  br label %175

175:                                              ; preds = %165, %171
  %176 = phi %"class.v8::Value"* [ %170, %165 ], [ %174, %171 ]
  %177 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %176) #9
  br i1 %177, label %178, label %181, !prof !4

178:                                              ; preds = %175
  %179 = bitcast %"class.v8::Value"* %176 to %"class.v8::Number"*
  %180 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %179) #9
  br label %183

181:                                              ; preds = %175
  %182 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %176, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi double [ %180, %178 ], [ %182, %181 ]
  %185 = load i32, i32* %17, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %260

187:                                              ; preds = %183
  %188 = fcmp ogt double %184, 0x47EFFFFFE0000000
  br i1 %188, label %193, label %189, !prof !5

189:                                              ; preds = %187
  %190 = fcmp olt double %184, 0xC7EFFFFFE0000000
  br i1 %190, label %193, label %191, !prof !5

191:                                              ; preds = %189
  %192 = fptrunc double %184 to float
  br label %193

193:                                              ; preds = %187, %189, %191
  %194 = phi float [ 0xFFF0000000000000, %189 ], [ 0x7FF0000000000000, %187 ], [ %192, %191 ]
  %195 = load i32, i32* %20, align 8
  %196 = icmp sgt i32 %195, 3
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = load i64*, i64** %4, align 8
  %199 = getelementptr inbounds i64, i64* %198, i64 1
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 160
  %202 = inttoptr i64 %201 to %"class.v8::Value"*
  br label %207

203:                                              ; preds = %193
  %204 = load i64*, i64** %44, align 8
  %205 = getelementptr inbounds i64, i64* %204, i64 3
  %206 = bitcast i64* %205 to %"class.v8::Value"*
  br label %207

207:                                              ; preds = %197, %203
  %208 = phi %"class.v8::Value"* [ %202, %197 ], [ %206, %203 ]
  %209 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %208) #9
  br i1 %209, label %210, label %213, !prof !4

210:                                              ; preds = %207
  %211 = bitcast %"class.v8::Value"* %208 to %"class.v8::Number"*
  %212 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %211) #9
  br label %215

213:                                              ; preds = %207
  %214 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %208, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %215

215:                                              ; preds = %213, %210
  %216 = phi double [ %212, %210 ], [ %214, %213 ]
  %217 = load i32, i32* %17, align 8
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %260

219:                                              ; preds = %215
  %220 = fcmp ogt double %216, 0x47EFFFFFE0000000
  br i1 %220, label %225, label %221, !prof !5

221:                                              ; preds = %219
  %222 = fcmp olt double %216, 0xC7EFFFFFE0000000
  br i1 %222, label %225, label %223, !prof !5

223:                                              ; preds = %221
  %224 = fptrunc double %216 to float
  br label %225

225:                                              ; preds = %219, %221, %223
  %226 = phi float [ 0xFFF0000000000000, %221 ], [ 0x7FF0000000000000, %219 ], [ %224, %223 ]
  %227 = load i32, i32* %20, align 8
  %228 = icmp sgt i32 %227, 4
  br i1 %228, label %235, label %229

229:                                              ; preds = %225
  %230 = load i64*, i64** %4, align 8
  %231 = getelementptr inbounds i64, i64* %230, i64 1
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %232, 160
  %234 = inttoptr i64 %233 to %"class.v8::Value"*
  br label %239

235:                                              ; preds = %225
  %236 = load i64*, i64** %44, align 8
  %237 = getelementptr inbounds i64, i64* %236, i64 4
  %238 = bitcast i64* %237 to %"class.v8::Value"*
  br label %239

239:                                              ; preds = %229, %235
  %240 = phi %"class.v8::Value"* [ %234, %229 ], [ %238, %235 ]
  %241 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %240) #9
  br i1 %241, label %242, label %245, !prof !4

242:                                              ; preds = %239
  %243 = bitcast %"class.v8::Value"* %240 to %"class.v8::Number"*
  %244 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %243) #9
  br label %247

245:                                              ; preds = %239
  %246 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %240, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %247

247:                                              ; preds = %245, %242
  %248 = phi double [ %244, %242 ], [ %246, %245 ]
  %249 = load i32, i32* %17, align 8
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %260

251:                                              ; preds = %247
  %252 = fcmp ogt double %248, 0x47EFFFFFE0000000
  br i1 %252, label %257, label %253, !prof !5

253:                                              ; preds = %251
  %254 = fcmp olt double %248, 0xC7EFFFFFE0000000
  br i1 %254, label %257, label %255, !prof !5

255:                                              ; preds = %253
  %256 = fptrunc double %248 to float
  br label %257

257:                                              ; preds = %251, %253, %255
  %258 = phi float [ 0xFFF0000000000000, %253 ], [ 0x7FF0000000000000, %251 ], [ %256, %255 ]
  %259 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform4fEPKNS_20WebGLUniformLocationEffff(%"class.blink::WebGLRenderingContextBase"* %259, %"class.blink::WebGLUniformLocation"* %130, float %162, float %194, float %226, float %258) #9
  br label %260

260:                                              ; preds = %126, %247, %215, %183, %151, %257, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %261 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %262 = load i64*, i64** %261, align 8
  %263 = icmp eq i64* %262, null
  br i1 %263, label %273, label %264

264:                                              ; preds = %260
  %265 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %266 = bitcast %"class.v8::Isolate"* %265 to %"class.v8::internal::Isolate"*
  %267 = load i64, i64* %262, align 8
  %268 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %266, i64 %267) #9
  %269 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %265) #9
  br i1 %269, label %273, label %270

270:                                              ; preds = %264
  %271 = bitcast i64* %268 to %"class.v8::Value"*
  %272 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %265, %"class.v8::Value"* %271) #9
  br label %273

273:                                              ; preds = %270, %264, %260
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #9
  br label %289

289:                                              ; preds = %273, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform4FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.415, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.415, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIfLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform4fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.415, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform4fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load float*, float** %404, align 8
  %406 = icmp eq float* %405, null
  %407 = bitcast float* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store float* null, float** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context26Uniform4IOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %232

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLUniformLocation"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %232

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLUniformLocation"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = load i32, i32* %20, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %4, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 160
  %138 = inttoptr i64 %137 to %"class.v8::Value"*
  br label %143

139:                                              ; preds = %129
  %140 = load i64*, i64** %44, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = bitcast i64* %141 to %"class.v8::Value"*
  br label %143

143:                                              ; preds = %133, %139
  %144 = phi %"class.v8::Value"* [ %138, %133 ], [ %142, %139 ]
  %145 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %144) #9
  br i1 %145, label %146, label %149, !prof !4

146:                                              ; preds = %143
  %147 = bitcast %"class.v8::Value"* %144 to %"class.v8::Int32"*
  %148 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %147) #9
  br label %151

149:                                              ; preds = %143
  %150 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %144, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %151

151:                                              ; preds = %146, %149
  %152 = phi i32 [ %148, %146 ], [ %150, %149 ]
  %153 = load i32, i32* %17, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %232

155:                                              ; preds = %151
  %156 = load i32, i32* %20, align 8
  %157 = icmp sgt i32 %156, 2
  br i1 %157, label %164, label %158

158:                                              ; preds = %155
  %159 = load i64*, i64** %4, align 8
  %160 = getelementptr inbounds i64, i64* %159, i64 1
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 160
  %163 = inttoptr i64 %162 to %"class.v8::Value"*
  br label %168

164:                                              ; preds = %155
  %165 = load i64*, i64** %44, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 2
  %167 = bitcast i64* %166 to %"class.v8::Value"*
  br label %168

168:                                              ; preds = %158, %164
  %169 = phi %"class.v8::Value"* [ %163, %158 ], [ %167, %164 ]
  %170 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %169) #9
  br i1 %170, label %171, label %174, !prof !4

171:                                              ; preds = %168
  %172 = bitcast %"class.v8::Value"* %169 to %"class.v8::Int32"*
  %173 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %172) #9
  br label %176

174:                                              ; preds = %168
  %175 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %169, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %176

176:                                              ; preds = %171, %174
  %177 = phi i32 [ %173, %171 ], [ %175, %174 ]
  %178 = load i32, i32* %17, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %232

180:                                              ; preds = %176
  %181 = load i32, i32* %20, align 8
  %182 = icmp sgt i32 %181, 3
  br i1 %182, label %189, label %183

183:                                              ; preds = %180
  %184 = load i64*, i64** %4, align 8
  %185 = getelementptr inbounds i64, i64* %184, i64 1
  %186 = load i64, i64* %185, align 8
  %187 = add i64 %186, 160
  %188 = inttoptr i64 %187 to %"class.v8::Value"*
  br label %193

189:                                              ; preds = %180
  %190 = load i64*, i64** %44, align 8
  %191 = getelementptr inbounds i64, i64* %190, i64 3
  %192 = bitcast i64* %191 to %"class.v8::Value"*
  br label %193

193:                                              ; preds = %183, %189
  %194 = phi %"class.v8::Value"* [ %188, %183 ], [ %192, %189 ]
  %195 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %194) #9
  br i1 %195, label %196, label %199, !prof !4

196:                                              ; preds = %193
  %197 = bitcast %"class.v8::Value"* %194 to %"class.v8::Int32"*
  %198 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %197) #9
  br label %201

199:                                              ; preds = %193
  %200 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %194, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %201

201:                                              ; preds = %196, %199
  %202 = phi i32 [ %198, %196 ], [ %200, %199 ]
  %203 = load i32, i32* %17, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %232

205:                                              ; preds = %201
  %206 = load i32, i32* %20, align 8
  %207 = icmp sgt i32 %206, 4
  br i1 %207, label %214, label %208

208:                                              ; preds = %205
  %209 = load i64*, i64** %4, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 1
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %211, 160
  %213 = inttoptr i64 %212 to %"class.v8::Value"*
  br label %218

214:                                              ; preds = %205
  %215 = load i64*, i64** %44, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 4
  %217 = bitcast i64* %216 to %"class.v8::Value"*
  br label %218

218:                                              ; preds = %208, %214
  %219 = phi %"class.v8::Value"* [ %213, %208 ], [ %217, %214 ]
  %220 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %219) #9
  br i1 %220, label %221, label %224, !prof !4

221:                                              ; preds = %218
  %222 = bitcast %"class.v8::Value"* %219 to %"class.v8::Int32"*
  %223 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %222) #9
  br label %226

224:                                              ; preds = %218
  %225 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %219, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %226

226:                                              ; preds = %221, %224
  %227 = phi i32 [ %223, %221 ], [ %225, %224 ]
  %228 = load i32, i32* %17, align 8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %226
  %231 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase9uniform4iEPKNS_20WebGLUniformLocationEiiii(%"class.blink::WebGLRenderingContextBase"* %231, %"class.blink::WebGLUniformLocation"* %130, i32 %152, i32 %177, i32 %202, i32 %227) #9
  br label %232

232:                                              ; preds = %226, %201, %176, %151, %126, %230, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %233 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %234 = load i64*, i64** %233, align 8
  %235 = icmp eq i64* %234, null
  br i1 %235, label %245, label %236

236:                                              ; preds = %232
  %237 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %238 = bitcast %"class.v8::Isolate"* %237 to %"class.v8::internal::Isolate"*
  %239 = load i64, i64* %234, align 8
  %240 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %238, i64 %239) #9
  %241 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %237) #9
  br i1 %241, label %245, label %242

242:                                              ; preds = %236
  %243 = bitcast i64* %240 to %"class.v8::Value"*
  %244 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %237, %"class.v8::Value"* %243) #9
  br label %245

245:                                              ; preds = %242, %236, %232
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #9
  br label %261

261:                                              ; preds = %245, %257, %260
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27Uniform4IvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1845", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TypedFlexibleArrayBufferView.1844", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #9
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #9
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.417, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  br i1 %29, label %46, label %451

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Value"*
  %51 = tail call zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %227

52:                                               ; preds = %46
  %53 = load i64*, i64** %30, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false) #9
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %62 = bitcast i8** %61 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.417, i64 0, i64 0)>, <2 x i8*>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %56, %"class.v8::Isolate"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = load i32, i32* %27, align 8
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %90, !prof !5

70:                                               ; preds = %52
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %68) #9
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %88, %85, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %197

90:                                               ; preds = %52
  %91 = load i64*, i64** %47, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %108 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %90, %90, %90
  %104 = bitcast i64* %91 to %"class.v8::Value"*
  %105 = add i64 %93, 19
  %106 = inttoptr i64 %105 to i8**
  %107 = load i8*, i8** %106, align 1
  br label %122

108:                                              ; preds = %90
  %109 = bitcast i64* %92 to %"class.v8::Object"*
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %109, i32 1) #9
  %111 = load i32, i32* %27, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = bitcast i64** %47 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %108
  %117 = load i64*, i64** %30, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %103, %113, %116
  %123 = phi i8* [ %110, %116 ], [ %107, %103 ], [ %110, %113 ]
  %124 = phi %"class.v8::Value"* [ %121, %116 ], [ %104, %103 ], [ %115, %113 ]
  %125 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %126 = ptrtoint %"class.v8::Isolate"* %56 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to %"class.blink::V8PerIsolateData"**
  %129 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %128, align 8
  %130 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %129, %"struct.blink::WrapperTypeInfo"* %125, %"class.v8::Value"* %124) #9
  %131 = bitcast %"class.v8::Value"* %124 to i64*
  %132 = load i64, i64* %131, align 8
  br i1 %130, label %133, label %153

133:                                              ; preds = %122
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %133, %133, %133
  %144 = add i64 %132, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %150

147:                                              ; preds = %133
  %148 = bitcast %"class.v8::Value"* %124 to %"class.v8::Object"*
  %149 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %148, i32 1) #9
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i8* [ %146, %143 ], [ %149, %147 ]
  %152 = bitcast i8* %151 to %"class.blink::WebGLUniformLocation"*
  br label %175

153:                                              ; preds = %122
  %154 = and i64 %132, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %172

156:                                              ; preds = %153
  %157 = add i64 %132, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %132, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %172

167:                                              ; preds = %156
  %168 = add i64 %132, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = ashr i32 %170, 1
  switch i32 %171, label %172 [
    i32 5, label %175
    i32 3, label %175
  ]

172:                                              ; preds = %167, %156, %153
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %173 = load i32, i32* %65, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %197

175:                                              ; preds = %172, %167, %167, %150
  %176 = phi %"class.blink::WebGLUniformLocation"* [ null, %172 ], [ null, %167 ], [ null, %167 ], [ %152, %150 ]
  %177 = bitcast %"class.blink::TypedFlexibleArrayBufferView.1844"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %177) #9
  %178 = load i32, i32* %27, align 8
  %179 = icmp sgt i32 %178, 1
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = load i64*, i64** %30, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %175
  %187 = load i64*, i64** %47, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIiLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull sret %7, %"class.v8::Isolate"* %56, i32 1, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %192 = load i32, i32* %65, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast i8* %123 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform4ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"* %195, %"class.blink::WebGLUniformLocation"* %176, %"class.blink::TypedFlexibleArrayBufferView.1844"* nonnull dereferenceable(88) %7) #9
  br label %196

196:                                              ; preds = %194, %190
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %177) #9
  br label %197

197:                                              ; preds = %196, %172, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = icmp eq i64* %199, null
  br i1 %200, label %210, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %203 = bitcast %"class.v8::Isolate"* %202 to %"class.v8::internal::Isolate"*
  %204 = load i64, i64* %199, align 8
  %205 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %203, i64 %204) #9
  %206 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %202) #9
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = bitcast i64* %205 to %"class.v8::Value"*
  %209 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %202, %"class.v8::Value"* %208) #9
  br label %210

210:                                              ; preds = %207, %201, %197
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %473

227:                                              ; preds = %46
  %228 = load i32, i32* %27, align 8
  %229 = icmp sgt i32 %228, 1
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = load i64*, i64** %30, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 160
  %235 = inttoptr i64 %234 to %"class.v8::Value"*
  br label %240

236:                                              ; preds = %227
  %237 = load i64*, i64** %47, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = bitcast i64* %238 to %"class.v8::Value"*
  br label %240

240:                                              ; preds = %230, %236
  %241 = phi %"class.v8::Value"* [ %235, %230 ], [ %239, %236 ]
  %242 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %241) #9
  br i1 %242, label %259, label %243

243:                                              ; preds = %240
  %244 = load i32, i32* %27, align 8
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %30, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %47, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 1
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #9
  br i1 %258, label %259, label %445

259:                                              ; preds = %240, %256
  %260 = load i64*, i64** %30, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  %262 = bitcast i64* %261 to %"class.v8::Isolate"**
  %263 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %262, align 8
  %264 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 56, i1 false) #9
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %266, align 8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %267, align 2
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %269 = bitcast i8** %268 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.417, i64 0, i64 0)>, <2 x i8*>* %269, align 8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %270, align 8
  %271 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %263, %"class.v8::Isolate"** %271, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %274 = bitcast %"class.WTF::StringImpl"** %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #9
  %275 = load i32, i32* %27, align 8
  %276 = icmp slt i32 %275, 2
  br i1 %276, label %277, label %297, !prof !5

277:                                              ; preds = %259
  %278 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #9
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %275) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %280, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #9
  br label %296

296:                                              ; preds = %295, %292, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #9
  br label %415

297:                                              ; preds = %259
  %298 = load i64*, i64** %47, align 8
  %299 = getelementptr inbounds i64, i64* %298, i64 -1
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i64 %300, -4294967296
  %305 = zext i32 %303 to i64
  %306 = or i64 %304, %305
  %307 = add i64 %306, 7
  %308 = inttoptr i64 %307 to i16*
  %309 = load i16, i16* %308, align 2
  switch i16 %309, label %315 [
    i16 1057, label %310
    i16 1056, label %310
    i16 1040, label %310
  ]

310:                                              ; preds = %297, %297, %297
  %311 = bitcast i64* %298 to %"class.v8::Value"*
  %312 = add i64 %300, 19
  %313 = inttoptr i64 %312 to i8**
  %314 = load i8*, i8** %313, align 1
  br label %329

315:                                              ; preds = %297
  %316 = bitcast i64* %299 to %"class.v8::Object"*
  %317 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %316, i32 1) #9
  %318 = load i32, i32* %27, align 8
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = bitcast i64** %47 to %"class.v8::Value"**
  %322 = load %"class.v8::Value"*, %"class.v8::Value"** %321, align 8
  br label %329

323:                                              ; preds = %315
  %324 = load i64*, i64** %30, align 8
  %325 = getelementptr inbounds i64, i64* %324, i64 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 160
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  br label %329

329:                                              ; preds = %310, %320, %323
  %330 = phi i8* [ %317, %323 ], [ %314, %310 ], [ %317, %320 ]
  %331 = phi %"class.v8::Value"* [ %328, %323 ], [ %311, %310 ], [ %322, %320 ]
  %332 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %333 = ptrtoint %"class.v8::Isolate"* %263 to i64
  %334 = add i64 %333, 8
  %335 = inttoptr i64 %334 to %"class.blink::V8PerIsolateData"**
  %336 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %335, align 8
  %337 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %336, %"struct.blink::WrapperTypeInfo"* %332, %"class.v8::Value"* %331) #9
  %338 = bitcast %"class.v8::Value"* %331 to i64*
  %339 = load i64, i64* %338, align 8
  br i1 %337, label %340, label %360

340:                                              ; preds = %329
  %341 = add i64 %339, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %339, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  switch i16 %349, label %354 [
    i16 1057, label %350
    i16 1056, label %350
    i16 1040, label %350
  ]

350:                                              ; preds = %340, %340, %340
  %351 = add i64 %339, 19
  %352 = inttoptr i64 %351 to i8**
  %353 = load i8*, i8** %352, align 1
  br label %357

354:                                              ; preds = %340
  %355 = bitcast %"class.v8::Value"* %331 to %"class.v8::Object"*
  %356 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %355, i32 1) #9
  br label %357

357:                                              ; preds = %354, %350
  %358 = phi i8* [ %353, %350 ], [ %356, %354 ]
  %359 = bitcast i8* %358 to %"class.blink::WebGLUniformLocation"*
  br label %382

360:                                              ; preds = %329
  %361 = and i64 %339, 3
  %362 = icmp eq i64 %361, 1
  br i1 %362, label %363, label %379

363:                                              ; preds = %360
  %364 = add i64 %339, -1
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = and i64 %339, -4294967296
  %368 = zext i32 %366 to i64
  %369 = or i64 %367, %368
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 67
  br i1 %373, label %374, label %379

374:                                              ; preds = %363
  %375 = add i64 %339, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  switch i32 %378, label %379 [
    i32 5, label %382
    i32 3, label %382
  ]

379:                                              ; preds = %374, %363, %360
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %332, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %380 = load i32, i32* %272, align 8
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %415

382:                                              ; preds = %379, %374, %374, %357
  %383 = phi %"class.blink::WebGLUniformLocation"* [ null, %379 ], [ null, %374 ], [ null, %374 ], [ %359, %357 ]
  %384 = bitcast %"class.WTF::Vector.1845"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #9
  %385 = load i32, i32* %27, align 8
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = load i64*, i64** %30, align 8
  %389 = getelementptr inbounds i64, i64* %388, i64 1
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, 160
  %392 = inttoptr i64 %391 to %"class.v8::Value"*
  br label %397

393:                                              ; preds = %382
  %394 = load i64*, i64** %47, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = bitcast i64* %395 to %"class.v8::Value"*
  br label %397

397:                                              ; preds = %393, %387
  %398 = phi %"class.v8::Value"* [ %392, %387 ], [ %396, %393 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIiLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* nonnull sret %4, %"class.v8::Isolate"* %263, %"class.v8::Value"* %398, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %399 = load i32, i32* %272, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %403

401:                                              ; preds = %397
  %402 = bitcast i8* %330 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10uniform4ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %402, %"class.blink::WebGLUniformLocation"* %383, %"class.WTF::Vector.1845"* nonnull dereferenceable(16) %4) #9
  br label %403

403:                                              ; preds = %401, %397
  %404 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = icmp eq i32* %405, null
  %407 = bitcast i32* %405 to i8*
  br i1 %406, label %414, label %408, !prof !4

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %4, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412, !prof !5

412:                                              ; preds = %408
  store i32 0, i32* %409, align 4
  br label %413

413:                                              ; preds = %412, %408
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %407) #9
  store i32* null, i32** %404, align 8
  br label %414

414:                                              ; preds = %413, %403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #9
  br label %415

415:                                              ; preds = %414, %379, %296
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = icmp eq i64* %417, null
  br i1 %418, label %428, label %419

419:                                              ; preds = %415
  %420 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %271, align 8
  %421 = bitcast %"class.v8::Isolate"* %420 to %"class.v8::internal::Isolate"*
  %422 = load i64, i64* %417, align 8
  %423 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %421, i64 %422) #9
  %424 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %420) #9
  br i1 %424, label %428, label %425

425:                                              ; preds = %419
  %426 = bitcast i64* %423 to %"class.v8::Value"*
  %427 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %420, %"class.v8::Value"* %426) #9
  br label %428

428:                                              ; preds = %425, %419, %415
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #9
  br label %444

444:                                              ; preds = %428, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #9
  br label %473

445:                                              ; preds = %256
  %446 = load i32, i32* %43, align 8
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %473

448:                                              ; preds = %445
  %449 = load i32, i32* %27, align 8
  %450 = icmp slt i32 %449, 2
  br i1 %450, label %451, label %472, !prof !5

451:                                              ; preds = %26, %448
  %452 = phi i32 [ %449, %448 ], [ %28, %26 ]
  %453 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  %454 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %452) #9
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %471

471:                                              ; preds = %451, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  br label %473

472:                                              ; preds = %448
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %473

473:                                              ; preds = %445, %472, %471, %444, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %475 = load i64*, i64** %474, align 8
  %476 = icmp eq i64* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %473
  %478 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %479 = bitcast %"class.v8::Isolate"* %478 to %"class.v8::internal::Isolate"*
  %480 = load i64, i64* %475, align 8
  %481 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %479, i64 %480) #9
  %482 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %478) #9
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  %484 = bitcast i64* %481 to %"class.v8::Value"*
  %485 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %478, %"class.v8::Value"* %484) #9
  br label %486

486:                                              ; preds = %483, %477, %473
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33UniformMatrix2FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MaybeShared.1854", align 8
  %8 = alloca %"class.blink::MaybeShared.1854", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %11) #9
  br label %27

27:                                               ; preds = %1, %15, %26
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 2
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.418, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  br i1 %30, label %47, label %508

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 2
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  %52 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %51) #9
  br i1 %52, label %53, label %258

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::MaybeShared.1854"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i64*, i64** %31, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = bitcast i64* %56 to %"class.v8::Isolate"**
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  %59 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.418, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %58, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp slt i32 %70, 3
  br i1 %71, label %72, label %92, !prof !5

72:                                               ; preds = %53
  %73 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %70) #9
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %91

91:                                               ; preds = %90, %87, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #9
  br label %228

92:                                               ; preds = %53
  %93 = load i64*, i64** %48, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 -1
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  switch i16 %104, label %110 [
    i16 1057, label %105
    i16 1056, label %105
    i16 1040, label %105
  ]

105:                                              ; preds = %92, %92, %92
  %106 = bitcast i64* %93 to %"class.v8::Value"*
  %107 = add i64 %95, 19
  %108 = inttoptr i64 %107 to i8**
  %109 = load i8*, i8** %108, align 1
  br label %124

110:                                              ; preds = %92
  %111 = bitcast i64* %94 to %"class.v8::Object"*
  %112 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %111, i32 1) #9
  %113 = load i32, i32* %28, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = bitcast i64** %48 to %"class.v8::Value"**
  %117 = load %"class.v8::Value"*, %"class.v8::Value"** %116, align 8
  br label %124

118:                                              ; preds = %110
  %119 = load i64*, i64** %31, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %105, %115, %118
  %125 = phi i8* [ %112, %118 ], [ %109, %105 ], [ %112, %115 ]
  %126 = phi %"class.v8::Value"* [ %123, %118 ], [ %106, %105 ], [ %117, %115 ]
  %127 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %128 = ptrtoint %"class.v8::Isolate"* %58 to i64
  %129 = add i64 %128, 8
  %130 = inttoptr i64 %129 to %"class.blink::V8PerIsolateData"**
  %131 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %130, align 8
  %132 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %131, %"struct.blink::WrapperTypeInfo"* %127, %"class.v8::Value"* %126) #9
  %133 = bitcast %"class.v8::Value"* %126 to i64*
  %134 = load i64, i64* %133, align 8
  br i1 %132, label %135, label %155

135:                                              ; preds = %124
  %136 = add i64 %134, -1
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = and i64 %134, -4294967296
  %140 = zext i32 %138 to i64
  %141 = or i64 %139, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i16*
  %144 = load i16, i16* %143, align 2
  switch i16 %144, label %149 [
    i16 1057, label %145
    i16 1056, label %145
    i16 1040, label %145
  ]

145:                                              ; preds = %135, %135, %135
  %146 = add i64 %134, 19
  %147 = inttoptr i64 %146 to i8**
  %148 = load i8*, i8** %147, align 1
  br label %152

149:                                              ; preds = %135
  %150 = bitcast %"class.v8::Value"* %126 to %"class.v8::Object"*
  %151 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %150, i32 1) #9
  br label %152

152:                                              ; preds = %149, %145
  %153 = phi i8* [ %148, %145 ], [ %151, %149 ]
  %154 = bitcast i8* %153 to %"class.blink::WebGLUniformLocation"*
  br label %177

155:                                              ; preds = %124
  %156 = and i64 %134, 3
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %158, label %174

158:                                              ; preds = %155
  %159 = add i64 %134, -1
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = and i64 %134, -4294967296
  %163 = zext i32 %161 to i64
  %164 = or i64 %162, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 67
  br i1 %168, label %169, label %174

169:                                              ; preds = %158
  %170 = add i64 %134, 23
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = ashr i32 %172, 1
  switch i32 %173, label %174 [
    i32 5, label %177
    i32 3, label %177
  ]

174:                                              ; preds = %169, %158, %155
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %127, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %175 = load i32, i32* %67, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %228

177:                                              ; preds = %174, %169, %169, %152
  %178 = phi %"class.blink::WebGLUniformLocation"* [ null, %174 ], [ null, %169 ], [ null, %169 ], [ %154, %152 ]
  %179 = load i32, i32* %28, align 8
  %180 = icmp sgt i32 %179, 1
  br i1 %180, label %187, label %181

181:                                              ; preds = %177
  %182 = load i64*, i64** %31, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 1
  %184 = load i64, i64* %183, align 8
  %185 = add i64 %184, 160
  %186 = inttoptr i64 %185 to %"class.v8::Value"*
  br label %191

187:                                              ; preds = %177
  %188 = load i64*, i64** %48, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = bitcast i64* %189 to %"class.v8::Value"*
  br label %191

191:                                              ; preds = %187, %181
  %192 = phi %"class.v8::Value"* [ %186, %181 ], [ %190, %187 ]
  %193 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %192) #9
  br i1 %193, label %194, label %197, !prof !4

194:                                              ; preds = %191
  %195 = bitcast %"class.v8::Value"* %192 to %"class.v8::Boolean"*
  %196 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %195) #9
  br label %199

197:                                              ; preds = %191
  %198 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %192, %"class.v8::Isolate"* %58) #9
  br label %199

199:                                              ; preds = %197, %194
  %200 = phi i1 [ %196, %194 ], [ %198, %197 ]
  %201 = zext i1 %200 to i8
  %202 = load i32, i32* %67, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %228

204:                                              ; preds = %199
  %205 = bitcast %"class.blink::MaybeShared.1854"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #9
  %206 = load i32, i32* %28, align 8
  %207 = icmp sgt i32 %206, 2
  br i1 %207, label %214, label %208

208:                                              ; preds = %204
  %209 = load i64*, i64** %31, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 1
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %211, 160
  %213 = inttoptr i64 %212 to %"class.v8::Value"*
  br label %218

214:                                              ; preds = %204
  %215 = load i64*, i64** %48, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 2
  %217 = bitcast i64* %216 to %"class.v8::Value"*
  br label %218

218:                                              ; preds = %214, %208
  %219 = phi %"class.v8::Value"* [ %213, %208 ], [ %217, %214 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* nonnull sret %7, %"class.v8::Isolate"* %58, i32 2, %"class.v8::Value"* %219, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %220 = load i32, i32* %67, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %218
  %223 = bitcast i8* %125 to %"class.blink::WebGLRenderingContextBase"*
  %224 = bitcast %"class.blink::MaybeShared.1854"* %7 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.blink::MaybeShared.1854"* %8 to i64*
  store i64 %225, i64* %226, align 8
  call void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix2fvEPKNS_20WebGLUniformLocationEhNS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"* %223, %"class.blink::WebGLUniformLocation"* %178, i8 zeroext %201, %"class.blink::MaybeShared.1854"* nonnull %8) #9
  br label %227

227:                                              ; preds = %222, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #9
  br label %228

228:                                              ; preds = %227, %199, %174, %91
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %229 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %230 = load i64*, i64** %229, align 8
  %231 = icmp eq i64* %230, null
  br i1 %231, label %241, label %232

232:                                              ; preds = %228
  %233 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %234 = bitcast %"class.v8::Isolate"* %233 to %"class.v8::internal::Isolate"*
  %235 = load i64, i64* %230, align 8
  %236 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %234, i64 %235) #9
  %237 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %233) #9
  br i1 %237, label %241, label %238

238:                                              ; preds = %232
  %239 = bitcast i64* %236 to %"class.v8::Value"*
  %240 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %233, %"class.v8::Value"* %239) #9
  br label %241

241:                                              ; preds = %238, %232, %228
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #9
  br label %257

257:                                              ; preds = %241, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %530

258:                                              ; preds = %47
  %259 = load i32, i32* %28, align 8
  %260 = icmp sgt i32 %259, 2
  br i1 %260, label %267, label %261

261:                                              ; preds = %258
  %262 = load i64*, i64** %31, align 8
  %263 = getelementptr inbounds i64, i64* %262, i64 1
  %264 = load i64, i64* %263, align 8
  %265 = add i64 %264, 160
  %266 = inttoptr i64 %265 to %"class.v8::Value"*
  br label %271

267:                                              ; preds = %258
  %268 = load i64*, i64** %48, align 8
  %269 = getelementptr inbounds i64, i64* %268, i64 2
  %270 = bitcast i64* %269 to %"class.v8::Value"*
  br label %271

271:                                              ; preds = %261, %267
  %272 = phi %"class.v8::Value"* [ %266, %261 ], [ %270, %267 ]
  %273 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %272) #9
  br i1 %273, label %290, label %274

274:                                              ; preds = %271
  %275 = load i32, i32* %28, align 8
  %276 = icmp sgt i32 %275, 2
  br i1 %276, label %283, label %277

277:                                              ; preds = %274
  %278 = load i64*, i64** %31, align 8
  %279 = getelementptr inbounds i64, i64* %278, i64 1
  %280 = load i64, i64* %279, align 8
  %281 = add i64 %280, 160
  %282 = inttoptr i64 %281 to %"class.v8::Value"*
  br label %287

283:                                              ; preds = %274
  %284 = load i64*, i64** %48, align 8
  %285 = getelementptr inbounds i64, i64* %284, i64 2
  %286 = bitcast i64* %285 to %"class.v8::Value"*
  br label %287

287:                                              ; preds = %277, %283
  %288 = phi %"class.v8::Value"* [ %282, %277 ], [ %286, %283 ]
  %289 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %288, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #9
  br i1 %289, label %290, label %502

290:                                              ; preds = %271, %287
  %291 = load i64*, i64** %31, align 8
  %292 = getelementptr inbounds i64, i64* %291, i64 1
  %293 = bitcast i64* %292 to %"class.v8::Isolate"**
  %294 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %293, align 8
  %295 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %295) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 56, i1 false) #9
  %296 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %296, align 8
  %297 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %297, align 8
  %298 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %298, align 2
  %299 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %300 = bitcast i8** %299 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.418, i64 0, i64 0)>, <2 x i8*>* %300, align 8
  %301 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %301, align 8
  %302 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %294, %"class.v8::Isolate"** %302, align 8
  %303 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %303, align 8
  %304 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %305 = bitcast %"class.WTF::StringImpl"** %304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 16, i1 false) #9
  %306 = load i32, i32* %28, align 8
  %307 = icmp slt i32 %306, 3
  br i1 %307, label %308, label %328, !prof !5

308:                                              ; preds = %290
  %309 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #9
  %310 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %306) #9
  %311 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %311, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #9
  br label %327

327:                                              ; preds = %326, %323, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #9
  br label %472

328:                                              ; preds = %290
  %329 = load i64*, i64** %48, align 8
  %330 = getelementptr inbounds i64, i64* %329, i64 -1
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, -1
  %333 = inttoptr i64 %332 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = and i64 %331, -4294967296
  %336 = zext i32 %334 to i64
  %337 = or i64 %335, %336
  %338 = add i64 %337, 7
  %339 = inttoptr i64 %338 to i16*
  %340 = load i16, i16* %339, align 2
  switch i16 %340, label %346 [
    i16 1057, label %341
    i16 1056, label %341
    i16 1040, label %341
  ]

341:                                              ; preds = %328, %328, %328
  %342 = bitcast i64* %329 to %"class.v8::Value"*
  %343 = add i64 %331, 19
  %344 = inttoptr i64 %343 to i8**
  %345 = load i8*, i8** %344, align 1
  br label %360

346:                                              ; preds = %328
  %347 = bitcast i64* %330 to %"class.v8::Object"*
  %348 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %347, i32 1) #9
  %349 = load i32, i32* %28, align 8
  %350 = icmp sgt i32 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = bitcast i64** %48 to %"class.v8::Value"**
  %353 = load %"class.v8::Value"*, %"class.v8::Value"** %352, align 8
  br label %360

354:                                              ; preds = %346
  %355 = load i64*, i64** %31, align 8
  %356 = getelementptr inbounds i64, i64* %355, i64 1
  %357 = load i64, i64* %356, align 8
  %358 = add i64 %357, 160
  %359 = inttoptr i64 %358 to %"class.v8::Value"*
  br label %360

360:                                              ; preds = %341, %351, %354
  %361 = phi i8* [ %348, %354 ], [ %345, %341 ], [ %348, %351 ]
  %362 = phi %"class.v8::Value"* [ %359, %354 ], [ %342, %341 ], [ %353, %351 ]
  %363 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %364 = ptrtoint %"class.v8::Isolate"* %294 to i64
  %365 = add i64 %364, 8
  %366 = inttoptr i64 %365 to %"class.blink::V8PerIsolateData"**
  %367 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %366, align 8
  %368 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %367, %"struct.blink::WrapperTypeInfo"* %363, %"class.v8::Value"* %362) #9
  %369 = bitcast %"class.v8::Value"* %362 to i64*
  %370 = load i64, i64* %369, align 8
  br i1 %368, label %371, label %391

371:                                              ; preds = %360
  %372 = add i64 %370, -1
  %373 = inttoptr i64 %372 to i32*
  %374 = load i32, i32* %373, align 4
  %375 = and i64 %370, -4294967296
  %376 = zext i32 %374 to i64
  %377 = or i64 %375, %376
  %378 = add i64 %377, 7
  %379 = inttoptr i64 %378 to i16*
  %380 = load i16, i16* %379, align 2
  switch i16 %380, label %385 [
    i16 1057, label %381
    i16 1056, label %381
    i16 1040, label %381
  ]

381:                                              ; preds = %371, %371, %371
  %382 = add i64 %370, 19
  %383 = inttoptr i64 %382 to i8**
  %384 = load i8*, i8** %383, align 1
  br label %388

385:                                              ; preds = %371
  %386 = bitcast %"class.v8::Value"* %362 to %"class.v8::Object"*
  %387 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %386, i32 1) #9
  br label %388

388:                                              ; preds = %385, %381
  %389 = phi i8* [ %384, %381 ], [ %387, %385 ]
  %390 = bitcast i8* %389 to %"class.blink::WebGLUniformLocation"*
  br label %413

391:                                              ; preds = %360
  %392 = and i64 %370, 3
  %393 = icmp eq i64 %392, 1
  br i1 %393, label %394, label %410

394:                                              ; preds = %391
  %395 = add i64 %370, -1
  %396 = inttoptr i64 %395 to i32*
  %397 = load i32, i32* %396, align 4
  %398 = and i64 %370, -4294967296
  %399 = zext i32 %397 to i64
  %400 = or i64 %398, %399
  %401 = add i64 %400, 7
  %402 = inttoptr i64 %401 to i16*
  %403 = load i16, i16* %402, align 2
  %404 = icmp eq i16 %403, 67
  br i1 %404, label %405, label %410

405:                                              ; preds = %394
  %406 = add i64 %370, 23
  %407 = inttoptr i64 %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = ashr i32 %408, 1
  switch i32 %409, label %410 [
    i32 5, label %413
    i32 3, label %413
  ]

410:                                              ; preds = %405, %394, %391
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %363, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %411 = load i32, i32* %303, align 8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %472

413:                                              ; preds = %410, %405, %405, %388
  %414 = phi %"class.blink::WebGLUniformLocation"* [ null, %410 ], [ null, %405 ], [ null, %405 ], [ %390, %388 ]
  %415 = load i32, i32* %28, align 8
  %416 = icmp sgt i32 %415, 1
  br i1 %416, label %423, label %417

417:                                              ; preds = %413
  %418 = load i64*, i64** %31, align 8
  %419 = getelementptr inbounds i64, i64* %418, i64 1
  %420 = load i64, i64* %419, align 8
  %421 = add i64 %420, 160
  %422 = inttoptr i64 %421 to %"class.v8::Value"*
  br label %427

423:                                              ; preds = %413
  %424 = load i64*, i64** %48, align 8
  %425 = getelementptr inbounds i64, i64* %424, i64 1
  %426 = bitcast i64* %425 to %"class.v8::Value"*
  br label %427

427:                                              ; preds = %423, %417
  %428 = phi %"class.v8::Value"* [ %422, %417 ], [ %426, %423 ]
  %429 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %428) #9
  br i1 %429, label %430, label %433, !prof !4

430:                                              ; preds = %427
  %431 = bitcast %"class.v8::Value"* %428 to %"class.v8::Boolean"*
  %432 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %431) #9
  br label %435

433:                                              ; preds = %427
  %434 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %428, %"class.v8::Isolate"* %294) #9
  br label %435

435:                                              ; preds = %433, %430
  %436 = phi i1 [ %432, %430 ], [ %434, %433 ]
  %437 = zext i1 %436 to i8
  %438 = load i32, i32* %303, align 8
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %472

440:                                              ; preds = %435
  %441 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %441) #9
  %442 = load i32, i32* %28, align 8
  %443 = icmp sgt i32 %442, 2
  br i1 %443, label %450, label %444

444:                                              ; preds = %440
  %445 = load i64*, i64** %31, align 8
  %446 = getelementptr inbounds i64, i64* %445, i64 1
  %447 = load i64, i64* %446, align 8
  %448 = add i64 %447, 160
  %449 = inttoptr i64 %448 to %"class.v8::Value"*
  br label %454

450:                                              ; preds = %440
  %451 = load i64*, i64** %48, align 8
  %452 = getelementptr inbounds i64, i64* %451, i64 2
  %453 = bitcast i64* %452 to %"class.v8::Value"*
  br label %454

454:                                              ; preds = %450, %444
  %455 = phi %"class.v8::Value"* [ %449, %444 ], [ %453, %450 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %294, %"class.v8::Value"* %455, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %456 = load i32, i32* %303, align 8
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %460

458:                                              ; preds = %454
  %459 = bitcast i8* %361 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix2fvEPKNS_20WebGLUniformLocationEhRN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %459, %"class.blink::WebGLUniformLocation"* %414, i8 zeroext %437, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %460

460:                                              ; preds = %458, %454
  %461 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %462 = load float*, float** %461, align 8
  %463 = icmp eq float* %462, null
  %464 = bitcast float* %462 to i8*
  br i1 %463, label %471, label %465, !prof !4

465:                                              ; preds = %460
  %466 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %467 = load i32, i32* %466, align 4
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %470, label %469, !prof !5

469:                                              ; preds = %465
  store i32 0, i32* %466, align 4
  br label %470

470:                                              ; preds = %469, %465
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %464) #9
  store float* null, float** %461, align 8
  br label %471

471:                                              ; preds = %470, %460
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %441) #9
  br label %472

472:                                              ; preds = %471, %435, %410, %327
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %296, align 8
  %473 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %474 = load i64*, i64** %473, align 8
  %475 = icmp eq i64* %474, null
  br i1 %475, label %485, label %476

476:                                              ; preds = %472
  %477 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %302, align 8
  %478 = bitcast %"class.v8::Isolate"* %477 to %"class.v8::internal::Isolate"*
  %479 = load i64, i64* %474, align 8
  %480 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %478, i64 %479) #9
  %481 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %477) #9
  br i1 %481, label %485, label %482

482:                                              ; preds = %476
  %483 = bitcast i64* %480 to %"class.v8::Value"*
  %484 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %477, %"class.v8::Value"* %483) #9
  br label %485

485:                                              ; preds = %482, %476, %472
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, null
  br i1 %487, label %501, label %488

488:                                              ; preds = %485
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %486) #9
  br label %501

501:                                              ; preds = %485, %497, %500
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %295) #9
  br label %530

502:                                              ; preds = %287
  %503 = load i32, i32* %44, align 8
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %530

505:                                              ; preds = %502
  %506 = load i32, i32* %28, align 8
  %507 = icmp slt i32 %506, 3
  br i1 %507, label %508, label %529, !prof !5

508:                                              ; preds = %27, %505
  %509 = phi i32 [ %506, %505 ], [ %29, %27 ]
  %510 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %510) #9
  %511 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %509) #9
  %512 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %511, %"class.WTF::StringImpl"** %512, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %512, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %528, label %515

515:                                              ; preds = %508
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  br i1 %519, label %522, label %524

522:                                              ; preds = %515
  %523 = add i32 %521, -1
  store i32 %523, i32* %520, align 4
  br label %524

524:                                              ; preds = %522, %515
  %525 = phi i32 [ %523, %522 ], [ %521, %515 ]
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %513) #9
  br label %528

528:                                              ; preds = %508, %524, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510) #9
  br label %530

529:                                              ; preds = %505
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %530

530:                                              ; preds = %502, %529, %528, %501, %257
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %531 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %532 = load i64*, i64** %531, align 8
  %533 = icmp eq i64* %532, null
  br i1 %533, label %543, label %534

534:                                              ; preds = %530
  %535 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %536 = bitcast %"class.v8::Isolate"* %535 to %"class.v8::internal::Isolate"*
  %537 = load i64, i64* %532, align 8
  %538 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %536, i64 %537) #9
  %539 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %535) #9
  br i1 %539, label %543, label %540

540:                                              ; preds = %534
  %541 = bitcast i64* %538 to %"class.v8::Value"*
  %542 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %535, %"class.v8::Value"* %541) #9
  br label %543

543:                                              ; preds = %540, %534, %530
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %545 = icmp eq %"class.WTF::StringImpl"* %544, null
  br i1 %545, label %559, label %546

546:                                              ; preds = %543
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = load atomic i32, i32* %547 monotonic, align 4
  %549 = and i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  br i1 %550, label %553, label %555

553:                                              ; preds = %546
  %554 = add i32 %552, -1
  store i32 %554, i32* %551, align 4
  br label %555

555:                                              ; preds = %553, %546
  %556 = phi i32 [ %554, %553 ], [ %552, %546 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #9
  br label %559

559:                                              ; preds = %543, %555, %558
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33UniformMatrix3FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MaybeShared.1854", align 8
  %8 = alloca %"class.blink::MaybeShared.1854", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %11) #9
  br label %27

27:                                               ; preds = %1, %15, %26
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 2
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.419, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  br i1 %30, label %47, label %508

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 2
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  %52 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %51) #9
  br i1 %52, label %53, label %258

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::MaybeShared.1854"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i64*, i64** %31, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = bitcast i64* %56 to %"class.v8::Isolate"**
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  %59 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.419, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %58, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp slt i32 %70, 3
  br i1 %71, label %72, label %92, !prof !5

72:                                               ; preds = %53
  %73 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %70) #9
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %91

91:                                               ; preds = %90, %87, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #9
  br label %228

92:                                               ; preds = %53
  %93 = load i64*, i64** %48, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 -1
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  switch i16 %104, label %110 [
    i16 1057, label %105
    i16 1056, label %105
    i16 1040, label %105
  ]

105:                                              ; preds = %92, %92, %92
  %106 = bitcast i64* %93 to %"class.v8::Value"*
  %107 = add i64 %95, 19
  %108 = inttoptr i64 %107 to i8**
  %109 = load i8*, i8** %108, align 1
  br label %124

110:                                              ; preds = %92
  %111 = bitcast i64* %94 to %"class.v8::Object"*
  %112 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %111, i32 1) #9
  %113 = load i32, i32* %28, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = bitcast i64** %48 to %"class.v8::Value"**
  %117 = load %"class.v8::Value"*, %"class.v8::Value"** %116, align 8
  br label %124

118:                                              ; preds = %110
  %119 = load i64*, i64** %31, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %105, %115, %118
  %125 = phi i8* [ %112, %118 ], [ %109, %105 ], [ %112, %115 ]
  %126 = phi %"class.v8::Value"* [ %123, %118 ], [ %106, %105 ], [ %117, %115 ]
  %127 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %128 = ptrtoint %"class.v8::Isolate"* %58 to i64
  %129 = add i64 %128, 8
  %130 = inttoptr i64 %129 to %"class.blink::V8PerIsolateData"**
  %131 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %130, align 8
  %132 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %131, %"struct.blink::WrapperTypeInfo"* %127, %"class.v8::Value"* %126) #9
  %133 = bitcast %"class.v8::Value"* %126 to i64*
  %134 = load i64, i64* %133, align 8
  br i1 %132, label %135, label %155

135:                                              ; preds = %124
  %136 = add i64 %134, -1
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = and i64 %134, -4294967296
  %140 = zext i32 %138 to i64
  %141 = or i64 %139, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i16*
  %144 = load i16, i16* %143, align 2
  switch i16 %144, label %149 [
    i16 1057, label %145
    i16 1056, label %145
    i16 1040, label %145
  ]

145:                                              ; preds = %135, %135, %135
  %146 = add i64 %134, 19
  %147 = inttoptr i64 %146 to i8**
  %148 = load i8*, i8** %147, align 1
  br label %152

149:                                              ; preds = %135
  %150 = bitcast %"class.v8::Value"* %126 to %"class.v8::Object"*
  %151 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %150, i32 1) #9
  br label %152

152:                                              ; preds = %149, %145
  %153 = phi i8* [ %148, %145 ], [ %151, %149 ]
  %154 = bitcast i8* %153 to %"class.blink::WebGLUniformLocation"*
  br label %177

155:                                              ; preds = %124
  %156 = and i64 %134, 3
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %158, label %174

158:                                              ; preds = %155
  %159 = add i64 %134, -1
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = and i64 %134, -4294967296
  %163 = zext i32 %161 to i64
  %164 = or i64 %162, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 67
  br i1 %168, label %169, label %174

169:                                              ; preds = %158
  %170 = add i64 %134, 23
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = ashr i32 %172, 1
  switch i32 %173, label %174 [
    i32 5, label %177
    i32 3, label %177
  ]

174:                                              ; preds = %169, %158, %155
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %127, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %175 = load i32, i32* %67, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %228

177:                                              ; preds = %174, %169, %169, %152
  %178 = phi %"class.blink::WebGLUniformLocation"* [ null, %174 ], [ null, %169 ], [ null, %169 ], [ %154, %152 ]
  %179 = load i32, i32* %28, align 8
  %180 = icmp sgt i32 %179, 1
  br i1 %180, label %187, label %181

181:                                              ; preds = %177
  %182 = load i64*, i64** %31, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 1
  %184 = load i64, i64* %183, align 8
  %185 = add i64 %184, 160
  %186 = inttoptr i64 %185 to %"class.v8::Value"*
  br label %191

187:                                              ; preds = %177
  %188 = load i64*, i64** %48, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = bitcast i64* %189 to %"class.v8::Value"*
  br label %191

191:                                              ; preds = %187, %181
  %192 = phi %"class.v8::Value"* [ %186, %181 ], [ %190, %187 ]
  %193 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %192) #9
  br i1 %193, label %194, label %197, !prof !4

194:                                              ; preds = %191
  %195 = bitcast %"class.v8::Value"* %192 to %"class.v8::Boolean"*
  %196 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %195) #9
  br label %199

197:                                              ; preds = %191
  %198 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %192, %"class.v8::Isolate"* %58) #9
  br label %199

199:                                              ; preds = %197, %194
  %200 = phi i1 [ %196, %194 ], [ %198, %197 ]
  %201 = zext i1 %200 to i8
  %202 = load i32, i32* %67, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %228

204:                                              ; preds = %199
  %205 = bitcast %"class.blink::MaybeShared.1854"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #9
  %206 = load i32, i32* %28, align 8
  %207 = icmp sgt i32 %206, 2
  br i1 %207, label %214, label %208

208:                                              ; preds = %204
  %209 = load i64*, i64** %31, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 1
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %211, 160
  %213 = inttoptr i64 %212 to %"class.v8::Value"*
  br label %218

214:                                              ; preds = %204
  %215 = load i64*, i64** %48, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 2
  %217 = bitcast i64* %216 to %"class.v8::Value"*
  br label %218

218:                                              ; preds = %214, %208
  %219 = phi %"class.v8::Value"* [ %213, %208 ], [ %217, %214 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* nonnull sret %7, %"class.v8::Isolate"* %58, i32 2, %"class.v8::Value"* %219, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %220 = load i32, i32* %67, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %218
  %223 = bitcast i8* %125 to %"class.blink::WebGLRenderingContextBase"*
  %224 = bitcast %"class.blink::MaybeShared.1854"* %7 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.blink::MaybeShared.1854"* %8 to i64*
  store i64 %225, i64* %226, align 8
  call void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix3fvEPKNS_20WebGLUniformLocationEhNS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"* %223, %"class.blink::WebGLUniformLocation"* %178, i8 zeroext %201, %"class.blink::MaybeShared.1854"* nonnull %8) #9
  br label %227

227:                                              ; preds = %222, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #9
  br label %228

228:                                              ; preds = %227, %199, %174, %91
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %229 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %230 = load i64*, i64** %229, align 8
  %231 = icmp eq i64* %230, null
  br i1 %231, label %241, label %232

232:                                              ; preds = %228
  %233 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %234 = bitcast %"class.v8::Isolate"* %233 to %"class.v8::internal::Isolate"*
  %235 = load i64, i64* %230, align 8
  %236 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %234, i64 %235) #9
  %237 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %233) #9
  br i1 %237, label %241, label %238

238:                                              ; preds = %232
  %239 = bitcast i64* %236 to %"class.v8::Value"*
  %240 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %233, %"class.v8::Value"* %239) #9
  br label %241

241:                                              ; preds = %238, %232, %228
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #9
  br label %257

257:                                              ; preds = %241, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %530

258:                                              ; preds = %47
  %259 = load i32, i32* %28, align 8
  %260 = icmp sgt i32 %259, 2
  br i1 %260, label %267, label %261

261:                                              ; preds = %258
  %262 = load i64*, i64** %31, align 8
  %263 = getelementptr inbounds i64, i64* %262, i64 1
  %264 = load i64, i64* %263, align 8
  %265 = add i64 %264, 160
  %266 = inttoptr i64 %265 to %"class.v8::Value"*
  br label %271

267:                                              ; preds = %258
  %268 = load i64*, i64** %48, align 8
  %269 = getelementptr inbounds i64, i64* %268, i64 2
  %270 = bitcast i64* %269 to %"class.v8::Value"*
  br label %271

271:                                              ; preds = %261, %267
  %272 = phi %"class.v8::Value"* [ %266, %261 ], [ %270, %267 ]
  %273 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %272) #9
  br i1 %273, label %290, label %274

274:                                              ; preds = %271
  %275 = load i32, i32* %28, align 8
  %276 = icmp sgt i32 %275, 2
  br i1 %276, label %283, label %277

277:                                              ; preds = %274
  %278 = load i64*, i64** %31, align 8
  %279 = getelementptr inbounds i64, i64* %278, i64 1
  %280 = load i64, i64* %279, align 8
  %281 = add i64 %280, 160
  %282 = inttoptr i64 %281 to %"class.v8::Value"*
  br label %287

283:                                              ; preds = %274
  %284 = load i64*, i64** %48, align 8
  %285 = getelementptr inbounds i64, i64* %284, i64 2
  %286 = bitcast i64* %285 to %"class.v8::Value"*
  br label %287

287:                                              ; preds = %277, %283
  %288 = phi %"class.v8::Value"* [ %282, %277 ], [ %286, %283 ]
  %289 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %288, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #9
  br i1 %289, label %290, label %502

290:                                              ; preds = %271, %287
  %291 = load i64*, i64** %31, align 8
  %292 = getelementptr inbounds i64, i64* %291, i64 1
  %293 = bitcast i64* %292 to %"class.v8::Isolate"**
  %294 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %293, align 8
  %295 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %295) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 56, i1 false) #9
  %296 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %296, align 8
  %297 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %297, align 8
  %298 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %298, align 2
  %299 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %300 = bitcast i8** %299 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.419, i64 0, i64 0)>, <2 x i8*>* %300, align 8
  %301 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %301, align 8
  %302 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %294, %"class.v8::Isolate"** %302, align 8
  %303 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %303, align 8
  %304 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %305 = bitcast %"class.WTF::StringImpl"** %304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 16, i1 false) #9
  %306 = load i32, i32* %28, align 8
  %307 = icmp slt i32 %306, 3
  br i1 %307, label %308, label %328, !prof !5

308:                                              ; preds = %290
  %309 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #9
  %310 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %306) #9
  %311 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %311, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #9
  br label %327

327:                                              ; preds = %326, %323, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #9
  br label %472

328:                                              ; preds = %290
  %329 = load i64*, i64** %48, align 8
  %330 = getelementptr inbounds i64, i64* %329, i64 -1
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, -1
  %333 = inttoptr i64 %332 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = and i64 %331, -4294967296
  %336 = zext i32 %334 to i64
  %337 = or i64 %335, %336
  %338 = add i64 %337, 7
  %339 = inttoptr i64 %338 to i16*
  %340 = load i16, i16* %339, align 2
  switch i16 %340, label %346 [
    i16 1057, label %341
    i16 1056, label %341
    i16 1040, label %341
  ]

341:                                              ; preds = %328, %328, %328
  %342 = bitcast i64* %329 to %"class.v8::Value"*
  %343 = add i64 %331, 19
  %344 = inttoptr i64 %343 to i8**
  %345 = load i8*, i8** %344, align 1
  br label %360

346:                                              ; preds = %328
  %347 = bitcast i64* %330 to %"class.v8::Object"*
  %348 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %347, i32 1) #9
  %349 = load i32, i32* %28, align 8
  %350 = icmp sgt i32 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = bitcast i64** %48 to %"class.v8::Value"**
  %353 = load %"class.v8::Value"*, %"class.v8::Value"** %352, align 8
  br label %360

354:                                              ; preds = %346
  %355 = load i64*, i64** %31, align 8
  %356 = getelementptr inbounds i64, i64* %355, i64 1
  %357 = load i64, i64* %356, align 8
  %358 = add i64 %357, 160
  %359 = inttoptr i64 %358 to %"class.v8::Value"*
  br label %360

360:                                              ; preds = %341, %351, %354
  %361 = phi i8* [ %348, %354 ], [ %345, %341 ], [ %348, %351 ]
  %362 = phi %"class.v8::Value"* [ %359, %354 ], [ %342, %341 ], [ %353, %351 ]
  %363 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %364 = ptrtoint %"class.v8::Isolate"* %294 to i64
  %365 = add i64 %364, 8
  %366 = inttoptr i64 %365 to %"class.blink::V8PerIsolateData"**
  %367 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %366, align 8
  %368 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %367, %"struct.blink::WrapperTypeInfo"* %363, %"class.v8::Value"* %362) #9
  %369 = bitcast %"class.v8::Value"* %362 to i64*
  %370 = load i64, i64* %369, align 8
  br i1 %368, label %371, label %391

371:                                              ; preds = %360
  %372 = add i64 %370, -1
  %373 = inttoptr i64 %372 to i32*
  %374 = load i32, i32* %373, align 4
  %375 = and i64 %370, -4294967296
  %376 = zext i32 %374 to i64
  %377 = or i64 %375, %376
  %378 = add i64 %377, 7
  %379 = inttoptr i64 %378 to i16*
  %380 = load i16, i16* %379, align 2
  switch i16 %380, label %385 [
    i16 1057, label %381
    i16 1056, label %381
    i16 1040, label %381
  ]

381:                                              ; preds = %371, %371, %371
  %382 = add i64 %370, 19
  %383 = inttoptr i64 %382 to i8**
  %384 = load i8*, i8** %383, align 1
  br label %388

385:                                              ; preds = %371
  %386 = bitcast %"class.v8::Value"* %362 to %"class.v8::Object"*
  %387 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %386, i32 1) #9
  br label %388

388:                                              ; preds = %385, %381
  %389 = phi i8* [ %384, %381 ], [ %387, %385 ]
  %390 = bitcast i8* %389 to %"class.blink::WebGLUniformLocation"*
  br label %413

391:                                              ; preds = %360
  %392 = and i64 %370, 3
  %393 = icmp eq i64 %392, 1
  br i1 %393, label %394, label %410

394:                                              ; preds = %391
  %395 = add i64 %370, -1
  %396 = inttoptr i64 %395 to i32*
  %397 = load i32, i32* %396, align 4
  %398 = and i64 %370, -4294967296
  %399 = zext i32 %397 to i64
  %400 = or i64 %398, %399
  %401 = add i64 %400, 7
  %402 = inttoptr i64 %401 to i16*
  %403 = load i16, i16* %402, align 2
  %404 = icmp eq i16 %403, 67
  br i1 %404, label %405, label %410

405:                                              ; preds = %394
  %406 = add i64 %370, 23
  %407 = inttoptr i64 %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = ashr i32 %408, 1
  switch i32 %409, label %410 [
    i32 5, label %413
    i32 3, label %413
  ]

410:                                              ; preds = %405, %394, %391
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %363, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %411 = load i32, i32* %303, align 8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %472

413:                                              ; preds = %410, %405, %405, %388
  %414 = phi %"class.blink::WebGLUniformLocation"* [ null, %410 ], [ null, %405 ], [ null, %405 ], [ %390, %388 ]
  %415 = load i32, i32* %28, align 8
  %416 = icmp sgt i32 %415, 1
  br i1 %416, label %423, label %417

417:                                              ; preds = %413
  %418 = load i64*, i64** %31, align 8
  %419 = getelementptr inbounds i64, i64* %418, i64 1
  %420 = load i64, i64* %419, align 8
  %421 = add i64 %420, 160
  %422 = inttoptr i64 %421 to %"class.v8::Value"*
  br label %427

423:                                              ; preds = %413
  %424 = load i64*, i64** %48, align 8
  %425 = getelementptr inbounds i64, i64* %424, i64 1
  %426 = bitcast i64* %425 to %"class.v8::Value"*
  br label %427

427:                                              ; preds = %423, %417
  %428 = phi %"class.v8::Value"* [ %422, %417 ], [ %426, %423 ]
  %429 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %428) #9
  br i1 %429, label %430, label %433, !prof !4

430:                                              ; preds = %427
  %431 = bitcast %"class.v8::Value"* %428 to %"class.v8::Boolean"*
  %432 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %431) #9
  br label %435

433:                                              ; preds = %427
  %434 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %428, %"class.v8::Isolate"* %294) #9
  br label %435

435:                                              ; preds = %433, %430
  %436 = phi i1 [ %432, %430 ], [ %434, %433 ]
  %437 = zext i1 %436 to i8
  %438 = load i32, i32* %303, align 8
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %472

440:                                              ; preds = %435
  %441 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %441) #9
  %442 = load i32, i32* %28, align 8
  %443 = icmp sgt i32 %442, 2
  br i1 %443, label %450, label %444

444:                                              ; preds = %440
  %445 = load i64*, i64** %31, align 8
  %446 = getelementptr inbounds i64, i64* %445, i64 1
  %447 = load i64, i64* %446, align 8
  %448 = add i64 %447, 160
  %449 = inttoptr i64 %448 to %"class.v8::Value"*
  br label %454

450:                                              ; preds = %440
  %451 = load i64*, i64** %48, align 8
  %452 = getelementptr inbounds i64, i64* %451, i64 2
  %453 = bitcast i64* %452 to %"class.v8::Value"*
  br label %454

454:                                              ; preds = %450, %444
  %455 = phi %"class.v8::Value"* [ %449, %444 ], [ %453, %450 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %294, %"class.v8::Value"* %455, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %456 = load i32, i32* %303, align 8
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %460

458:                                              ; preds = %454
  %459 = bitcast i8* %361 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix3fvEPKNS_20WebGLUniformLocationEhRN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %459, %"class.blink::WebGLUniformLocation"* %414, i8 zeroext %437, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %460

460:                                              ; preds = %458, %454
  %461 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %462 = load float*, float** %461, align 8
  %463 = icmp eq float* %462, null
  %464 = bitcast float* %462 to i8*
  br i1 %463, label %471, label %465, !prof !4

465:                                              ; preds = %460
  %466 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %467 = load i32, i32* %466, align 4
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %470, label %469, !prof !5

469:                                              ; preds = %465
  store i32 0, i32* %466, align 4
  br label %470

470:                                              ; preds = %469, %465
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %464) #9
  store float* null, float** %461, align 8
  br label %471

471:                                              ; preds = %470, %460
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %441) #9
  br label %472

472:                                              ; preds = %471, %435, %410, %327
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %296, align 8
  %473 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %474 = load i64*, i64** %473, align 8
  %475 = icmp eq i64* %474, null
  br i1 %475, label %485, label %476

476:                                              ; preds = %472
  %477 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %302, align 8
  %478 = bitcast %"class.v8::Isolate"* %477 to %"class.v8::internal::Isolate"*
  %479 = load i64, i64* %474, align 8
  %480 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %478, i64 %479) #9
  %481 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %477) #9
  br i1 %481, label %485, label %482

482:                                              ; preds = %476
  %483 = bitcast i64* %480 to %"class.v8::Value"*
  %484 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %477, %"class.v8::Value"* %483) #9
  br label %485

485:                                              ; preds = %482, %476, %472
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, null
  br i1 %487, label %501, label %488

488:                                              ; preds = %485
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %486) #9
  br label %501

501:                                              ; preds = %485, %497, %500
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %295) #9
  br label %530

502:                                              ; preds = %287
  %503 = load i32, i32* %44, align 8
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %530

505:                                              ; preds = %502
  %506 = load i32, i32* %28, align 8
  %507 = icmp slt i32 %506, 3
  br i1 %507, label %508, label %529, !prof !5

508:                                              ; preds = %27, %505
  %509 = phi i32 [ %506, %505 ], [ %29, %27 ]
  %510 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %510) #9
  %511 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %509) #9
  %512 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %511, %"class.WTF::StringImpl"** %512, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %512, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %528, label %515

515:                                              ; preds = %508
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  br i1 %519, label %522, label %524

522:                                              ; preds = %515
  %523 = add i32 %521, -1
  store i32 %523, i32* %520, align 4
  br label %524

524:                                              ; preds = %522, %515
  %525 = phi i32 [ %523, %522 ], [ %521, %515 ]
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %513) #9
  br label %528

528:                                              ; preds = %508, %524, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510) #9
  br label %530

529:                                              ; preds = %505
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %530

530:                                              ; preds = %502, %529, %528, %501, %257
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %531 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %532 = load i64*, i64** %531, align 8
  %533 = icmp eq i64* %532, null
  br i1 %533, label %543, label %534

534:                                              ; preds = %530
  %535 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %536 = bitcast %"class.v8::Isolate"* %535 to %"class.v8::internal::Isolate"*
  %537 = load i64, i64* %532, align 8
  %538 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %536, i64 %537) #9
  %539 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %535) #9
  br i1 %539, label %543, label %540

540:                                              ; preds = %534
  %541 = bitcast i64* %538 to %"class.v8::Value"*
  %542 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %535, %"class.v8::Value"* %541) #9
  br label %543

543:                                              ; preds = %540, %534, %530
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %545 = icmp eq %"class.WTF::StringImpl"* %544, null
  br i1 %545, label %559, label %546

546:                                              ; preds = %543
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = load atomic i32, i32* %547 monotonic, align 4
  %549 = and i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  br i1 %550, label %553, label %555

553:                                              ; preds = %546
  %554 = add i32 %552, -1
  store i32 %554, i32* %551, align 4
  br label %555

555:                                              ; preds = %553, %546
  %556 = phi i32 [ %554, %553 ], [ %552, %546 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #9
  br label %559

559:                                              ; preds = %543, %555, %558
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33UniformMatrix4FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MaybeShared.1854", align 8
  %8 = alloca %"class.blink::MaybeShared.1854", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %11) #9
  br label %27

27:                                               ; preds = %1, %15, %26
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 2
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.420, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  br i1 %30, label %47, label %508

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 2
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  %52 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %51) #9
  br i1 %52, label %53, label %258

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::MaybeShared.1854"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i64*, i64** %31, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = bitcast i64* %56 to %"class.v8::Isolate"**
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  %59 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.420, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %58, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp slt i32 %70, 3
  br i1 %71, label %72, label %92, !prof !5

72:                                               ; preds = %53
  %73 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %70) #9
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %91

91:                                               ; preds = %90, %87, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #9
  br label %228

92:                                               ; preds = %53
  %93 = load i64*, i64** %48, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 -1
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  switch i16 %104, label %110 [
    i16 1057, label %105
    i16 1056, label %105
    i16 1040, label %105
  ]

105:                                              ; preds = %92, %92, %92
  %106 = bitcast i64* %93 to %"class.v8::Value"*
  %107 = add i64 %95, 19
  %108 = inttoptr i64 %107 to i8**
  %109 = load i8*, i8** %108, align 1
  br label %124

110:                                              ; preds = %92
  %111 = bitcast i64* %94 to %"class.v8::Object"*
  %112 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %111, i32 1) #9
  %113 = load i32, i32* %28, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = bitcast i64** %48 to %"class.v8::Value"**
  %117 = load %"class.v8::Value"*, %"class.v8::Value"** %116, align 8
  br label %124

118:                                              ; preds = %110
  %119 = load i64*, i64** %31, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %105, %115, %118
  %125 = phi i8* [ %112, %118 ], [ %109, %105 ], [ %112, %115 ]
  %126 = phi %"class.v8::Value"* [ %123, %118 ], [ %106, %105 ], [ %117, %115 ]
  %127 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %128 = ptrtoint %"class.v8::Isolate"* %58 to i64
  %129 = add i64 %128, 8
  %130 = inttoptr i64 %129 to %"class.blink::V8PerIsolateData"**
  %131 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %130, align 8
  %132 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %131, %"struct.blink::WrapperTypeInfo"* %127, %"class.v8::Value"* %126) #9
  %133 = bitcast %"class.v8::Value"* %126 to i64*
  %134 = load i64, i64* %133, align 8
  br i1 %132, label %135, label %155

135:                                              ; preds = %124
  %136 = add i64 %134, -1
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = and i64 %134, -4294967296
  %140 = zext i32 %138 to i64
  %141 = or i64 %139, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i16*
  %144 = load i16, i16* %143, align 2
  switch i16 %144, label %149 [
    i16 1057, label %145
    i16 1056, label %145
    i16 1040, label %145
  ]

145:                                              ; preds = %135, %135, %135
  %146 = add i64 %134, 19
  %147 = inttoptr i64 %146 to i8**
  %148 = load i8*, i8** %147, align 1
  br label %152

149:                                              ; preds = %135
  %150 = bitcast %"class.v8::Value"* %126 to %"class.v8::Object"*
  %151 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %150, i32 1) #9
  br label %152

152:                                              ; preds = %149, %145
  %153 = phi i8* [ %148, %145 ], [ %151, %149 ]
  %154 = bitcast i8* %153 to %"class.blink::WebGLUniformLocation"*
  br label %177

155:                                              ; preds = %124
  %156 = and i64 %134, 3
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %158, label %174

158:                                              ; preds = %155
  %159 = add i64 %134, -1
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = and i64 %134, -4294967296
  %163 = zext i32 %161 to i64
  %164 = or i64 %162, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 67
  br i1 %168, label %169, label %174

169:                                              ; preds = %158
  %170 = add i64 %134, 23
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = ashr i32 %172, 1
  switch i32 %173, label %174 [
    i32 5, label %177
    i32 3, label %177
  ]

174:                                              ; preds = %169, %158, %155
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %127, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %175 = load i32, i32* %67, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %228

177:                                              ; preds = %174, %169, %169, %152
  %178 = phi %"class.blink::WebGLUniformLocation"* [ null, %174 ], [ null, %169 ], [ null, %169 ], [ %154, %152 ]
  %179 = load i32, i32* %28, align 8
  %180 = icmp sgt i32 %179, 1
  br i1 %180, label %187, label %181

181:                                              ; preds = %177
  %182 = load i64*, i64** %31, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 1
  %184 = load i64, i64* %183, align 8
  %185 = add i64 %184, 160
  %186 = inttoptr i64 %185 to %"class.v8::Value"*
  br label %191

187:                                              ; preds = %177
  %188 = load i64*, i64** %48, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = bitcast i64* %189 to %"class.v8::Value"*
  br label %191

191:                                              ; preds = %187, %181
  %192 = phi %"class.v8::Value"* [ %186, %181 ], [ %190, %187 ]
  %193 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %192) #9
  br i1 %193, label %194, label %197, !prof !4

194:                                              ; preds = %191
  %195 = bitcast %"class.v8::Value"* %192 to %"class.v8::Boolean"*
  %196 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %195) #9
  br label %199

197:                                              ; preds = %191
  %198 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %192, %"class.v8::Isolate"* %58) #9
  br label %199

199:                                              ; preds = %197, %194
  %200 = phi i1 [ %196, %194 ], [ %198, %197 ]
  %201 = zext i1 %200 to i8
  %202 = load i32, i32* %67, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %228

204:                                              ; preds = %199
  %205 = bitcast %"class.blink::MaybeShared.1854"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #9
  %206 = load i32, i32* %28, align 8
  %207 = icmp sgt i32 %206, 2
  br i1 %207, label %214, label %208

208:                                              ; preds = %204
  %209 = load i64*, i64** %31, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 1
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %211, 160
  %213 = inttoptr i64 %212 to %"class.v8::Value"*
  br label %218

214:                                              ; preds = %204
  %215 = load i64*, i64** %48, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 2
  %217 = bitcast i64* %216 to %"class.v8::Value"*
  br label %218

218:                                              ; preds = %214, %208
  %219 = phi %"class.v8::Value"* [ %213, %208 ], [ %217, %214 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* nonnull sret %7, %"class.v8::Isolate"* %58, i32 2, %"class.v8::Value"* %219, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %220 = load i32, i32* %67, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %218
  %223 = bitcast i8* %125 to %"class.blink::WebGLRenderingContextBase"*
  %224 = bitcast %"class.blink::MaybeShared.1854"* %7 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.blink::MaybeShared.1854"* %8 to i64*
  store i64 %225, i64* %226, align 8
  call void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix4fvEPKNS_20WebGLUniformLocationEhNS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"* %223, %"class.blink::WebGLUniformLocation"* %178, i8 zeroext %201, %"class.blink::MaybeShared.1854"* nonnull %8) #9
  br label %227

227:                                              ; preds = %222, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #9
  br label %228

228:                                              ; preds = %227, %199, %174, %91
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %229 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %230 = load i64*, i64** %229, align 8
  %231 = icmp eq i64* %230, null
  br i1 %231, label %241, label %232

232:                                              ; preds = %228
  %233 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %234 = bitcast %"class.v8::Isolate"* %233 to %"class.v8::internal::Isolate"*
  %235 = load i64, i64* %230, align 8
  %236 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %234, i64 %235) #9
  %237 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %233) #9
  br i1 %237, label %241, label %238

238:                                              ; preds = %232
  %239 = bitcast i64* %236 to %"class.v8::Value"*
  %240 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %233, %"class.v8::Value"* %239) #9
  br label %241

241:                                              ; preds = %238, %232, %228
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #9
  br label %257

257:                                              ; preds = %241, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %530

258:                                              ; preds = %47
  %259 = load i32, i32* %28, align 8
  %260 = icmp sgt i32 %259, 2
  br i1 %260, label %267, label %261

261:                                              ; preds = %258
  %262 = load i64*, i64** %31, align 8
  %263 = getelementptr inbounds i64, i64* %262, i64 1
  %264 = load i64, i64* %263, align 8
  %265 = add i64 %264, 160
  %266 = inttoptr i64 %265 to %"class.v8::Value"*
  br label %271

267:                                              ; preds = %258
  %268 = load i64*, i64** %48, align 8
  %269 = getelementptr inbounds i64, i64* %268, i64 2
  %270 = bitcast i64* %269 to %"class.v8::Value"*
  br label %271

271:                                              ; preds = %261, %267
  %272 = phi %"class.v8::Value"* [ %266, %261 ], [ %270, %267 ]
  %273 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %272) #9
  br i1 %273, label %290, label %274

274:                                              ; preds = %271
  %275 = load i32, i32* %28, align 8
  %276 = icmp sgt i32 %275, 2
  br i1 %276, label %283, label %277

277:                                              ; preds = %274
  %278 = load i64*, i64** %31, align 8
  %279 = getelementptr inbounds i64, i64* %278, i64 1
  %280 = load i64, i64* %279, align 8
  %281 = add i64 %280, 160
  %282 = inttoptr i64 %281 to %"class.v8::Value"*
  br label %287

283:                                              ; preds = %274
  %284 = load i64*, i64** %48, align 8
  %285 = getelementptr inbounds i64, i64* %284, i64 2
  %286 = bitcast i64* %285 to %"class.v8::Value"*
  br label %287

287:                                              ; preds = %277, %283
  %288 = phi %"class.v8::Value"* [ %282, %277 ], [ %286, %283 ]
  %289 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %288, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #9
  br i1 %289, label %290, label %502

290:                                              ; preds = %271, %287
  %291 = load i64*, i64** %31, align 8
  %292 = getelementptr inbounds i64, i64* %291, i64 1
  %293 = bitcast i64* %292 to %"class.v8::Isolate"**
  %294 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %293, align 8
  %295 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %295) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 56, i1 false) #9
  %296 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %296, align 8
  %297 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %297, align 8
  %298 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %298, align 2
  %299 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %300 = bitcast i8** %299 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.420, i64 0, i64 0)>, <2 x i8*>* %300, align 8
  %301 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %301, align 8
  %302 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %294, %"class.v8::Isolate"** %302, align 8
  %303 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %303, align 8
  %304 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %305 = bitcast %"class.WTF::StringImpl"** %304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 16, i1 false) #9
  %306 = load i32, i32* %28, align 8
  %307 = icmp slt i32 %306, 3
  br i1 %307, label %308, label %328, !prof !5

308:                                              ; preds = %290
  %309 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #9
  %310 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %306) #9
  %311 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %311, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #9
  br label %327

327:                                              ; preds = %326, %323, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #9
  br label %472

328:                                              ; preds = %290
  %329 = load i64*, i64** %48, align 8
  %330 = getelementptr inbounds i64, i64* %329, i64 -1
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, -1
  %333 = inttoptr i64 %332 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = and i64 %331, -4294967296
  %336 = zext i32 %334 to i64
  %337 = or i64 %335, %336
  %338 = add i64 %337, 7
  %339 = inttoptr i64 %338 to i16*
  %340 = load i16, i16* %339, align 2
  switch i16 %340, label %346 [
    i16 1057, label %341
    i16 1056, label %341
    i16 1040, label %341
  ]

341:                                              ; preds = %328, %328, %328
  %342 = bitcast i64* %329 to %"class.v8::Value"*
  %343 = add i64 %331, 19
  %344 = inttoptr i64 %343 to i8**
  %345 = load i8*, i8** %344, align 1
  br label %360

346:                                              ; preds = %328
  %347 = bitcast i64* %330 to %"class.v8::Object"*
  %348 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %347, i32 1) #9
  %349 = load i32, i32* %28, align 8
  %350 = icmp sgt i32 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = bitcast i64** %48 to %"class.v8::Value"**
  %353 = load %"class.v8::Value"*, %"class.v8::Value"** %352, align 8
  br label %360

354:                                              ; preds = %346
  %355 = load i64*, i64** %31, align 8
  %356 = getelementptr inbounds i64, i64* %355, i64 1
  %357 = load i64, i64* %356, align 8
  %358 = add i64 %357, 160
  %359 = inttoptr i64 %358 to %"class.v8::Value"*
  br label %360

360:                                              ; preds = %341, %351, %354
  %361 = phi i8* [ %348, %354 ], [ %345, %341 ], [ %348, %351 ]
  %362 = phi %"class.v8::Value"* [ %359, %354 ], [ %342, %341 ], [ %353, %351 ]
  %363 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20WebGLUniformLocation18wrapper_type_info_E, align 8
  %364 = ptrtoint %"class.v8::Isolate"* %294 to i64
  %365 = add i64 %364, 8
  %366 = inttoptr i64 %365 to %"class.blink::V8PerIsolateData"**
  %367 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %366, align 8
  %368 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %367, %"struct.blink::WrapperTypeInfo"* %363, %"class.v8::Value"* %362) #9
  %369 = bitcast %"class.v8::Value"* %362 to i64*
  %370 = load i64, i64* %369, align 8
  br i1 %368, label %371, label %391

371:                                              ; preds = %360
  %372 = add i64 %370, -1
  %373 = inttoptr i64 %372 to i32*
  %374 = load i32, i32* %373, align 4
  %375 = and i64 %370, -4294967296
  %376 = zext i32 %374 to i64
  %377 = or i64 %375, %376
  %378 = add i64 %377, 7
  %379 = inttoptr i64 %378 to i16*
  %380 = load i16, i16* %379, align 2
  switch i16 %380, label %385 [
    i16 1057, label %381
    i16 1056, label %381
    i16 1040, label %381
  ]

381:                                              ; preds = %371, %371, %371
  %382 = add i64 %370, 19
  %383 = inttoptr i64 %382 to i8**
  %384 = load i8*, i8** %383, align 1
  br label %388

385:                                              ; preds = %371
  %386 = bitcast %"class.v8::Value"* %362 to %"class.v8::Object"*
  %387 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %386, i32 1) #9
  br label %388

388:                                              ; preds = %385, %381
  %389 = phi i8* [ %384, %381 ], [ %387, %385 ]
  %390 = bitcast i8* %389 to %"class.blink::WebGLUniformLocation"*
  br label %413

391:                                              ; preds = %360
  %392 = and i64 %370, 3
  %393 = icmp eq i64 %392, 1
  br i1 %393, label %394, label %410

394:                                              ; preds = %391
  %395 = add i64 %370, -1
  %396 = inttoptr i64 %395 to i32*
  %397 = load i32, i32* %396, align 4
  %398 = and i64 %370, -4294967296
  %399 = zext i32 %397 to i64
  %400 = or i64 %398, %399
  %401 = add i64 %400, 7
  %402 = inttoptr i64 %401 to i16*
  %403 = load i16, i16* %402, align 2
  %404 = icmp eq i16 %403, 67
  br i1 %404, label %405, label %410

405:                                              ; preds = %394
  %406 = add i64 %370, 23
  %407 = inttoptr i64 %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = ashr i32 %408, 1
  switch i32 %409, label %410 [
    i32 5, label %413
    i32 3, label %413
  ]

410:                                              ; preds = %405, %394, %391
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %363, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %411 = load i32, i32* %303, align 8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %472

413:                                              ; preds = %410, %405, %405, %388
  %414 = phi %"class.blink::WebGLUniformLocation"* [ null, %410 ], [ null, %405 ], [ null, %405 ], [ %390, %388 ]
  %415 = load i32, i32* %28, align 8
  %416 = icmp sgt i32 %415, 1
  br i1 %416, label %423, label %417

417:                                              ; preds = %413
  %418 = load i64*, i64** %31, align 8
  %419 = getelementptr inbounds i64, i64* %418, i64 1
  %420 = load i64, i64* %419, align 8
  %421 = add i64 %420, 160
  %422 = inttoptr i64 %421 to %"class.v8::Value"*
  br label %427

423:                                              ; preds = %413
  %424 = load i64*, i64** %48, align 8
  %425 = getelementptr inbounds i64, i64* %424, i64 1
  %426 = bitcast i64* %425 to %"class.v8::Value"*
  br label %427

427:                                              ; preds = %423, %417
  %428 = phi %"class.v8::Value"* [ %422, %417 ], [ %426, %423 ]
  %429 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %428) #9
  br i1 %429, label %430, label %433, !prof !4

430:                                              ; preds = %427
  %431 = bitcast %"class.v8::Value"* %428 to %"class.v8::Boolean"*
  %432 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %431) #9
  br label %435

433:                                              ; preds = %427
  %434 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %428, %"class.v8::Isolate"* %294) #9
  br label %435

435:                                              ; preds = %433, %430
  %436 = phi i1 [ %432, %430 ], [ %434, %433 ]
  %437 = zext i1 %436 to i8
  %438 = load i32, i32* %303, align 8
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %472

440:                                              ; preds = %435
  %441 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %441) #9
  %442 = load i32, i32* %28, align 8
  %443 = icmp sgt i32 %442, 2
  br i1 %443, label %450, label %444

444:                                              ; preds = %440
  %445 = load i64*, i64** %31, align 8
  %446 = getelementptr inbounds i64, i64* %445, i64 1
  %447 = load i64, i64* %446, align 8
  %448 = add i64 %447, 160
  %449 = inttoptr i64 %448 to %"class.v8::Value"*
  br label %454

450:                                              ; preds = %440
  %451 = load i64*, i64** %48, align 8
  %452 = getelementptr inbounds i64, i64* %451, i64 2
  %453 = bitcast i64* %452 to %"class.v8::Value"*
  br label %454

454:                                              ; preds = %450, %444
  %455 = phi %"class.v8::Value"* [ %449, %444 ], [ %453, %450 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %294, %"class.v8::Value"* %455, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %456 = load i32, i32* %303, align 8
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %460

458:                                              ; preds = %454
  %459 = bitcast i8* %361 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix4fvEPKNS_20WebGLUniformLocationEhRN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %459, %"class.blink::WebGLUniformLocation"* %414, i8 zeroext %437, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %460

460:                                              ; preds = %458, %454
  %461 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %462 = load float*, float** %461, align 8
  %463 = icmp eq float* %462, null
  %464 = bitcast float* %462 to i8*
  br i1 %463, label %471, label %465, !prof !4

465:                                              ; preds = %460
  %466 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %467 = load i32, i32* %466, align 4
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %470, label %469, !prof !5

469:                                              ; preds = %465
  store i32 0, i32* %466, align 4
  br label %470

470:                                              ; preds = %469, %465
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %464) #9
  store float* null, float** %461, align 8
  br label %471

471:                                              ; preds = %470, %460
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %441) #9
  br label %472

472:                                              ; preds = %471, %435, %410, %327
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %296, align 8
  %473 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %474 = load i64*, i64** %473, align 8
  %475 = icmp eq i64* %474, null
  br i1 %475, label %485, label %476

476:                                              ; preds = %472
  %477 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %302, align 8
  %478 = bitcast %"class.v8::Isolate"* %477 to %"class.v8::internal::Isolate"*
  %479 = load i64, i64* %474, align 8
  %480 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %478, i64 %479) #9
  %481 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %477) #9
  br i1 %481, label %485, label %482

482:                                              ; preds = %476
  %483 = bitcast i64* %480 to %"class.v8::Value"*
  %484 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %477, %"class.v8::Value"* %483) #9
  br label %485

485:                                              ; preds = %482, %476, %472
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, null
  br i1 %487, label %501, label %488

488:                                              ; preds = %485
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %486) #9
  br label %501

501:                                              ; preds = %485, %497, %500
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %295) #9
  br label %530

502:                                              ; preds = %287
  %503 = load i32, i32* %44, align 8
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %530

505:                                              ; preds = %502
  %506 = load i32, i32* %28, align 8
  %507 = icmp slt i32 %506, 3
  br i1 %507, label %508, label %529, !prof !5

508:                                              ; preds = %27, %505
  %509 = phi i32 [ %506, %505 ], [ %29, %27 ]
  %510 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %510) #9
  %511 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %509) #9
  %512 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %511, %"class.WTF::StringImpl"** %512, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %512, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %528, label %515

515:                                              ; preds = %508
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  br i1 %519, label %522, label %524

522:                                              ; preds = %515
  %523 = add i32 %521, -1
  store i32 %523, i32* %520, align 4
  br label %524

524:                                              ; preds = %522, %515
  %525 = phi i32 [ %523, %522 ], [ %521, %515 ]
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %528

527:                                              ; preds = %524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %513) #9
  br label %528

528:                                              ; preds = %508, %524, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510) #9
  br label %530

529:                                              ; preds = %505
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %530

530:                                              ; preds = %502, %529, %528, %501, %257
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %531 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %532 = load i64*, i64** %531, align 8
  %533 = icmp eq i64* %532, null
  br i1 %533, label %543, label %534

534:                                              ; preds = %530
  %535 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %536 = bitcast %"class.v8::Isolate"* %535 to %"class.v8::internal::Isolate"*
  %537 = load i64, i64* %532, align 8
  %538 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %536, i64 %537) #9
  %539 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %535) #9
  br i1 %539, label %543, label %540

540:                                              ; preds = %534
  %541 = bitcast i64* %538 to %"class.v8::Value"*
  %542 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %535, %"class.v8::Value"* %541) #9
  br label %543

543:                                              ; preds = %540, %534, %530
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %545 = icmp eq %"class.WTF::StringImpl"* %544, null
  br i1 %545, label %559, label %546

546:                                              ; preds = %543
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = load atomic i32, i32* %547 monotonic, align 4
  %549 = and i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  br i1 %550, label %553, label %555

553:                                              ; preds = %546
  %554 = add i32 %552, -1
  store i32 %554, i32* %551, align 4
  br label %555

555:                                              ; preds = %553, %546
  %556 = phi i32 [ %554, %553 ], [ %552, %546 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #9
  br label %559

559:                                              ; preds = %543, %555, %558
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27UseProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.421, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  %85 = bitcast %"class.v8::Value"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %76
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %129

107:                                              ; preds = %76
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::WebGLProgram"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10useProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"* %131, %"class.blink::WebGLProgram"* %130) #9
  br label %132

132:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32ValidateProgramOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.422, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %113

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12WebGLProgram18wrapper_type_info_E, align 8
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* %79, %"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %76
  %86 = bitcast %"class.v8::Value"* %78 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %78 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::WebGLProgram"*
  br label %110

107:                                              ; preds = %76
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::WebGLProgram"* [ %106, %104 ], [ null, %107 ]
  %112 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15validateProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"* %112, %"class.blink::WebGLProgram"* %111) #9
  br label %113

113:                                              ; preds = %107, %110, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %115, null
  br i1 %116, label %126, label %117

117:                                              ; preds = %113
  %118 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %119 = bitcast %"class.v8::Isolate"* %118 to %"class.v8::internal::Isolate"*
  %120 = load i64, i64* %115, align 8
  %121 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %119, i64 %120) #9
  %122 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %118) #9
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = bitcast i64* %121 to %"class.v8::Value"*
  %125 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %118, %"class.v8::Value"* %124) #9
  br label %126

126:                                              ; preds = %123, %117, %113
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #9
  br label %142

142:                                              ; preds = %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib1FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.423, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %127

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %127

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Number"*
  %111 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %112, %109
  %115 = phi double [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %127

118:                                              ; preds = %114
  %119 = fcmp ogt double %115, 0x47EFFFFFE0000000
  br i1 %119, label %124, label %120, !prof !5

120:                                              ; preds = %118
  %121 = fcmp olt double %115, 0xC7EFFFFFE0000000
  br i1 %121, label %124, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fptrunc double %115 to float
  br label %124

124:                                              ; preds = %118, %120, %122
  %125 = phi float [ 0xFFF0000000000000, %120 ], [ 0x7FF0000000000000, %118 ], [ %123, %122 ]
  %126 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib1fEjf(%"class.blink::WebGLRenderingContextBase"* %126, i32 %93, float %125) #9
  br label %127

127:                                              ; preds = %88, %114, %124, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %128 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %129 = load i64*, i64** %128, align 8
  %130 = icmp eq i64* %129, null
  br i1 %130, label %140, label %131

131:                                              ; preds = %127
  %132 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %133 = bitcast %"class.v8::Isolate"* %132 to %"class.v8::internal::Isolate"*
  %134 = load i64, i64* %129, align 8
  %135 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %133, i64 %134) #9
  %136 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %132) #9
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = bitcast i64* %135 to %"class.v8::Value"*
  %139 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %132, %"class.v8::Value"* %138) #9
  br label %140

140:                                              ; preds = %137, %131, %127
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %156

156:                                              ; preds = %140, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib1FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MaybeShared.1854", align 8
  %8 = alloca %"class.blink::MaybeShared.1855", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %11) #9
  br label %27

27:                                               ; preds = %1, %15, %26
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 1
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.424, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  br i1 %30, label %47, label %382

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 1
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  %52 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %51) #9
  br i1 %52, label %53, label %195

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::MaybeShared.1855"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i64*, i64** %31, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = bitcast i64* %56 to %"class.v8::Isolate"**
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  %59 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.424, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %58, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp slt i32 %70, 2
  br i1 %71, label %72, label %91, !prof !5

72:                                               ; preds = %53
  %73 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %70) #9
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %163, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %163

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %163

91:                                               ; preds = %53
  %92 = load i64*, i64** %48, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 -1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i64 %94, -4294967296
  %99 = zext i32 %97 to i64
  %100 = or i64 %98, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load i16, i16* %102, align 2
  switch i16 %103, label %109 [
    i16 1057, label %104
    i16 1056, label %104
    i16 1040, label %104
  ]

104:                                              ; preds = %91, %91, %91
  %105 = bitcast i64* %92 to %"class.v8::Value"*
  %106 = add i64 %94, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %123

109:                                              ; preds = %91
  %110 = bitcast i64* %93 to %"class.v8::Object"*
  %111 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %110, i32 1) #9
  %112 = load i32, i32* %28, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast i64** %48 to %"class.v8::Value"**
  %116 = load %"class.v8::Value"*, %"class.v8::Value"** %115, align 8
  br label %123

117:                                              ; preds = %109
  %118 = load i64*, i64** %31, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %104, %114, %117
  %124 = phi i8* [ %111, %117 ], [ %108, %104 ], [ %111, %114 ]
  %125 = phi %"class.v8::Value"* [ %122, %117 ], [ %105, %104 ], [ %116, %114 ]
  %126 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %123
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %139

130:                                              ; preds = %123
  %131 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %139

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %58, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %137 = load i32, i32* %67, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %165

139:                                              ; preds = %135, %132, %127
  %140 = phi i32 [ %136, %135 ], [ %134, %132 ], [ %129, %127 ]
  %141 = bitcast %"class.blink::MaybeShared.1854"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #9
  %142 = load i32, i32* %28, align 8
  %143 = icmp sgt i32 %142, 1
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = load i64*, i64** %31, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 1
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 160
  %149 = inttoptr i64 %148 to %"class.v8::Value"*
  br label %154

150:                                              ; preds = %139
  %151 = load i64*, i64** %48, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 1
  %153 = bitcast i64* %152 to %"class.v8::Value"*
  br label %154

154:                                              ; preds = %150, %144
  %155 = phi %"class.v8::Value"* [ %149, %144 ], [ %153, %150 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* nonnull sret %7, %"class.v8::Isolate"* %58, i32 1, %"class.v8::Value"* %155, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %156 = load i32, i32* %67, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = bitcast i8* %124 to %"class.blink::WebGLRenderingContextBase"*
  %160 = bitcast %"class.blink::MaybeShared.1854"* %7 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.blink::MaybeShared.1855"* %8 to i64*
  store i64 %161, i64* %162, align 8
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib1fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"* %159, i32 %140, %"class.blink::MaybeShared.1855"* nonnull %8) #9
  br label %163

163:                                              ; preds = %154, %158, %72, %87, %90
  %164 = phi i8* [ %73, %90 ], [ %73, %87 ], [ %73, %72 ], [ %141, %158 ], [ %141, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9
  br label %165

165:                                              ; preds = %163, %135
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %171 = bitcast %"class.v8::Isolate"* %170 to %"class.v8::internal::Isolate"*
  %172 = load i64, i64* %167, align 8
  %173 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %171, i64 %172) #9
  %174 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %170) #9
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = bitcast i64* %173 to %"class.v8::Value"*
  %177 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %170, %"class.v8::Value"* %176) #9
  br label %178

178:                                              ; preds = %175, %169, %165
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #9
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %404

195:                                              ; preds = %47
  %196 = load i32, i32* %28, align 8
  %197 = icmp sgt i32 %196, 1
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = load i64*, i64** %31, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 1
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 160
  %203 = inttoptr i64 %202 to %"class.v8::Value"*
  br label %208

204:                                              ; preds = %195
  %205 = load i64*, i64** %48, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 1
  %207 = bitcast i64* %206 to %"class.v8::Value"*
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi %"class.v8::Value"* [ %203, %198 ], [ %207, %204 ]
  %210 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %209) #9
  br i1 %210, label %227, label %211

211:                                              ; preds = %208
  %212 = load i32, i32* %28, align 8
  %213 = icmp sgt i32 %212, 1
  br i1 %213, label %220, label %214

214:                                              ; preds = %211
  %215 = load i64*, i64** %31, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 1
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, 160
  %219 = inttoptr i64 %218 to %"class.v8::Value"*
  br label %224

220:                                              ; preds = %211
  %221 = load i64*, i64** %48, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 1
  %223 = bitcast i64* %222 to %"class.v8::Value"*
  br label %224

224:                                              ; preds = %214, %220
  %225 = phi %"class.v8::Value"* [ %219, %214 ], [ %223, %220 ]
  %226 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %225, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #9
  br i1 %226, label %227, label %376

227:                                              ; preds = %208, %224
  %228 = load i64*, i64** %31, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 1
  %230 = bitcast i64* %229 to %"class.v8::Isolate"**
  %231 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %230, align 8
  %232 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %232) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 56, i1 false) #9
  %233 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %234 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %234, align 8
  %235 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %235, align 2
  %236 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %237 = bitcast i8** %236 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.424, i64 0, i64 0)>, <2 x i8*>* %237, align 8
  %238 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %238, align 8
  %239 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %231, %"class.v8::Isolate"** %239, align 8
  %240 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %240, align 8
  %241 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %242 = bitcast %"class.WTF::StringImpl"** %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 16, i1 false) #9
  %243 = load i32, i32* %28, align 8
  %244 = icmp slt i32 %243, 2
  br i1 %244, label %245, label %265, !prof !5

245:                                              ; preds = %227
  %246 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #9
  %247 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %243) #9
  %248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %248, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #9
  br label %264

264:                                              ; preds = %263, %260, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #9
  br label %346

265:                                              ; preds = %227
  %266 = load i64*, i64** %48, align 8
  %267 = getelementptr inbounds i64, i64* %266, i64 -1
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, -1
  %270 = inttoptr i64 %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = and i64 %268, -4294967296
  %273 = zext i32 %271 to i64
  %274 = or i64 %272, %273
  %275 = add i64 %274, 7
  %276 = inttoptr i64 %275 to i16*
  %277 = load i16, i16* %276, align 2
  switch i16 %277, label %283 [
    i16 1057, label %278
    i16 1056, label %278
    i16 1040, label %278
  ]

278:                                              ; preds = %265, %265, %265
  %279 = bitcast i64* %266 to %"class.v8::Value"*
  %280 = add i64 %268, 19
  %281 = inttoptr i64 %280 to i8**
  %282 = load i8*, i8** %281, align 1
  br label %297

283:                                              ; preds = %265
  %284 = bitcast i64* %267 to %"class.v8::Object"*
  %285 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %284, i32 1) #9
  %286 = load i32, i32* %28, align 8
  %287 = icmp sgt i32 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %283
  %289 = bitcast i64** %48 to %"class.v8::Value"**
  %290 = load %"class.v8::Value"*, %"class.v8::Value"** %289, align 8
  br label %297

291:                                              ; preds = %283
  %292 = load i64*, i64** %31, align 8
  %293 = getelementptr inbounds i64, i64* %292, i64 1
  %294 = load i64, i64* %293, align 8
  %295 = add i64 %294, 160
  %296 = inttoptr i64 %295 to %"class.v8::Value"*
  br label %297

297:                                              ; preds = %278, %288, %291
  %298 = phi i8* [ %285, %291 ], [ %282, %278 ], [ %285, %288 ]
  %299 = phi %"class.v8::Value"* [ %296, %291 ], [ %279, %278 ], [ %290, %288 ]
  %300 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %299) #9
  br i1 %300, label %301, label %304, !prof !4

301:                                              ; preds = %297
  %302 = bitcast %"class.v8::Value"* %299 to %"class.v8::Uint32"*
  %303 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %302) #9
  br label %313

304:                                              ; preds = %297
  %305 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %299) #9
  br i1 %305, label %306, label %309, !prof !4

306:                                              ; preds = %304
  %307 = bitcast %"class.v8::Value"* %299 to %"class.v8::Int32"*
  %308 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %307) #9
  br label %313

309:                                              ; preds = %304
  %310 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %231, %"class.v8::Value"* %299, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %311 = load i32, i32* %240, align 8
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %346

313:                                              ; preds = %309, %306, %301
  %314 = phi i32 [ %310, %309 ], [ %308, %306 ], [ %303, %301 ]
  %315 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #9
  %316 = load i32, i32* %28, align 8
  %317 = icmp sgt i32 %316, 1
  br i1 %317, label %324, label %318

318:                                              ; preds = %313
  %319 = load i64*, i64** %31, align 8
  %320 = getelementptr inbounds i64, i64* %319, i64 1
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 160
  %323 = inttoptr i64 %322 to %"class.v8::Value"*
  br label %328

324:                                              ; preds = %313
  %325 = load i64*, i64** %48, align 8
  %326 = getelementptr inbounds i64, i64* %325, i64 1
  %327 = bitcast i64* %326 to %"class.v8::Value"*
  br label %328

328:                                              ; preds = %324, %318
  %329 = phi %"class.v8::Value"* [ %323, %318 ], [ %327, %324 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %231, %"class.v8::Value"* %329, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %330 = load i32, i32* %240, align 8
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %328
  %333 = bitcast i8* %298 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib1fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %333, i32 %314, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %334

334:                                              ; preds = %332, %328
  %335 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %336 = load float*, float** %335, align 8
  %337 = icmp eq float* %336, null
  %338 = bitcast float* %336 to i8*
  br i1 %337, label %345, label %339, !prof !4

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %344, label %343, !prof !5

343:                                              ; preds = %339
  store i32 0, i32* %340, align 4
  br label %344

344:                                              ; preds = %343, %339
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %338) #9
  store float* null, float** %335, align 8
  br label %345

345:                                              ; preds = %344, %334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #9
  br label %346

346:                                              ; preds = %345, %309, %264
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %347 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %348 = load i64*, i64** %347, align 8
  %349 = icmp eq i64* %348, null
  br i1 %349, label %359, label %350

350:                                              ; preds = %346
  %351 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %239, align 8
  %352 = bitcast %"class.v8::Isolate"* %351 to %"class.v8::internal::Isolate"*
  %353 = load i64, i64* %348, align 8
  %354 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %352, i64 %353) #9
  %355 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %351) #9
  br i1 %355, label %359, label %356

356:                                              ; preds = %350
  %357 = bitcast i64* %354 to %"class.v8::Value"*
  %358 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %351, %"class.v8::Value"* %357) #9
  br label %359

359:                                              ; preds = %356, %350, %346
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #9
  br label %375

375:                                              ; preds = %359, %371, %374
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %232) #9
  br label %404

376:                                              ; preds = %224
  %377 = load i32, i32* %44, align 8
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %404

379:                                              ; preds = %376
  %380 = load i32, i32* %28, align 8
  %381 = icmp slt i32 %380, 2
  br i1 %381, label %382, label %403, !prof !5

382:                                              ; preds = %27, %379
  %383 = phi i32 [ %380, %379 ], [ %29, %27 ]
  %384 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #9
  %385 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %383) #9
  %386 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %385, %"class.WTF::StringImpl"** %386, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %386, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %402, label %389

389:                                              ; preds = %382
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  br i1 %393, label %396, label %398

396:                                              ; preds = %389
  %397 = add i32 %395, -1
  store i32 %397, i32* %394, align 4
  br label %398

398:                                              ; preds = %396, %389
  %399 = phi i32 [ %397, %396 ], [ %395, %389 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %387) #9
  br label %402

402:                                              ; preds = %382, %398, %401
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #9
  br label %404

403:                                              ; preds = %379
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %404

404:                                              ; preds = %376, %403, %402, %375, %194
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %405 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %406 = load i64*, i64** %405, align 8
  %407 = icmp eq i64* %406, null
  br i1 %407, label %417, label %408

408:                                              ; preds = %404
  %409 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %410 = bitcast %"class.v8::Isolate"* %409 to %"class.v8::internal::Isolate"*
  %411 = load i64, i64* %406, align 8
  %412 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %410, i64 %411) #9
  %413 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %409) #9
  br i1 %413, label %417, label %414

414:                                              ; preds = %408
  %415 = bitcast i64* %412 to %"class.v8::Value"*
  %416 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %409, %"class.v8::Value"* %415) #9
  br label %417

417:                                              ; preds = %414, %408, %404
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %418, null
  br i1 %419, label %433, label %420

420:                                              ; preds = %417
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #9
  br label %433

433:                                              ; preds = %417, %429, %432
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib2FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.425, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %159

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %159

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Number"*
  %111 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %112, %109
  %115 = phi double [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %159

118:                                              ; preds = %114
  %119 = fcmp ogt double %115, 0x47EFFFFFE0000000
  br i1 %119, label %124, label %120, !prof !5

120:                                              ; preds = %118
  %121 = fcmp olt double %115, 0xC7EFFFFFE0000000
  br i1 %121, label %124, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fptrunc double %115 to float
  br label %124

124:                                              ; preds = %118, %120, %122
  %125 = phi float [ 0xFFF0000000000000, %120 ], [ 0x7FF0000000000000, %118 ], [ %123, %122 ]
  %126 = load i32, i32* %20, align 8
  %127 = icmp sgt i32 %126, 2
  br i1 %127, label %134, label %128

128:                                              ; preds = %124
  %129 = load i64*, i64** %4, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 160
  %133 = inttoptr i64 %132 to %"class.v8::Value"*
  br label %138

134:                                              ; preds = %124
  %135 = load i64*, i64** %44, align 8
  %136 = getelementptr inbounds i64, i64* %135, i64 2
  %137 = bitcast i64* %136 to %"class.v8::Value"*
  br label %138

138:                                              ; preds = %128, %134
  %139 = phi %"class.v8::Value"* [ %133, %128 ], [ %137, %134 ]
  %140 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %139) #9
  br i1 %140, label %141, label %144, !prof !4

141:                                              ; preds = %138
  %142 = bitcast %"class.v8::Value"* %139 to %"class.v8::Number"*
  %143 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %142) #9
  br label %146

144:                                              ; preds = %138
  %145 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %139, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %146

146:                                              ; preds = %144, %141
  %147 = phi double [ %143, %141 ], [ %145, %144 ]
  %148 = load i32, i32* %17, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %159

150:                                              ; preds = %146
  %151 = fcmp ogt double %147, 0x47EFFFFFE0000000
  br i1 %151, label %156, label %152, !prof !5

152:                                              ; preds = %150
  %153 = fcmp olt double %147, 0xC7EFFFFFE0000000
  br i1 %153, label %156, label %154, !prof !5

154:                                              ; preds = %152
  %155 = fptrunc double %147 to float
  br label %156

156:                                              ; preds = %150, %152, %154
  %157 = phi float [ 0xFFF0000000000000, %152 ], [ 0x7FF0000000000000, %150 ], [ %155, %154 ]
  %158 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib2fEjff(%"class.blink::WebGLRenderingContextBase"* %158, i32 %93, float %125, float %157) #9
  br label %159

159:                                              ; preds = %88, %146, %114, %156, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = icmp eq i64* %161, null
  br i1 %162, label %172, label %163

163:                                              ; preds = %159
  %164 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %165 = bitcast %"class.v8::Isolate"* %164 to %"class.v8::internal::Isolate"*
  %166 = load i64, i64* %161, align 8
  %167 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %165, i64 %166) #9
  %168 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %164) #9
  br i1 %168, label %172, label %169

169:                                              ; preds = %163
  %170 = bitcast i64* %167 to %"class.v8::Value"*
  %171 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %164, %"class.v8::Value"* %170) #9
  br label %172

172:                                              ; preds = %169, %163, %159
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #9
  br label %188

188:                                              ; preds = %172, %184, %187
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib2FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MaybeShared.1854", align 8
  %8 = alloca %"class.blink::MaybeShared.1855", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %11) #9
  br label %27

27:                                               ; preds = %1, %15, %26
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 1
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.426, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  br i1 %30, label %47, label %382

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 1
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  %52 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %51) #9
  br i1 %52, label %53, label %195

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::MaybeShared.1855"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i64*, i64** %31, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = bitcast i64* %56 to %"class.v8::Isolate"**
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  %59 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.426, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %58, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp slt i32 %70, 2
  br i1 %71, label %72, label %91, !prof !5

72:                                               ; preds = %53
  %73 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %70) #9
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %163, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %163

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %163

91:                                               ; preds = %53
  %92 = load i64*, i64** %48, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 -1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i64 %94, -4294967296
  %99 = zext i32 %97 to i64
  %100 = or i64 %98, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load i16, i16* %102, align 2
  switch i16 %103, label %109 [
    i16 1057, label %104
    i16 1056, label %104
    i16 1040, label %104
  ]

104:                                              ; preds = %91, %91, %91
  %105 = bitcast i64* %92 to %"class.v8::Value"*
  %106 = add i64 %94, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %123

109:                                              ; preds = %91
  %110 = bitcast i64* %93 to %"class.v8::Object"*
  %111 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %110, i32 1) #9
  %112 = load i32, i32* %28, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast i64** %48 to %"class.v8::Value"**
  %116 = load %"class.v8::Value"*, %"class.v8::Value"** %115, align 8
  br label %123

117:                                              ; preds = %109
  %118 = load i64*, i64** %31, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %104, %114, %117
  %124 = phi i8* [ %111, %117 ], [ %108, %104 ], [ %111, %114 ]
  %125 = phi %"class.v8::Value"* [ %122, %117 ], [ %105, %104 ], [ %116, %114 ]
  %126 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %123
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %139

130:                                              ; preds = %123
  %131 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %139

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %58, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %137 = load i32, i32* %67, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %165

139:                                              ; preds = %135, %132, %127
  %140 = phi i32 [ %136, %135 ], [ %134, %132 ], [ %129, %127 ]
  %141 = bitcast %"class.blink::MaybeShared.1854"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #9
  %142 = load i32, i32* %28, align 8
  %143 = icmp sgt i32 %142, 1
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = load i64*, i64** %31, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 1
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 160
  %149 = inttoptr i64 %148 to %"class.v8::Value"*
  br label %154

150:                                              ; preds = %139
  %151 = load i64*, i64** %48, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 1
  %153 = bitcast i64* %152 to %"class.v8::Value"*
  br label %154

154:                                              ; preds = %150, %144
  %155 = phi %"class.v8::Value"* [ %149, %144 ], [ %153, %150 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* nonnull sret %7, %"class.v8::Isolate"* %58, i32 1, %"class.v8::Value"* %155, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %156 = load i32, i32* %67, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = bitcast i8* %124 to %"class.blink::WebGLRenderingContextBase"*
  %160 = bitcast %"class.blink::MaybeShared.1854"* %7 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.blink::MaybeShared.1855"* %8 to i64*
  store i64 %161, i64* %162, align 8
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib2fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"* %159, i32 %140, %"class.blink::MaybeShared.1855"* nonnull %8) #9
  br label %163

163:                                              ; preds = %154, %158, %72, %87, %90
  %164 = phi i8* [ %73, %90 ], [ %73, %87 ], [ %73, %72 ], [ %141, %158 ], [ %141, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9
  br label %165

165:                                              ; preds = %163, %135
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %171 = bitcast %"class.v8::Isolate"* %170 to %"class.v8::internal::Isolate"*
  %172 = load i64, i64* %167, align 8
  %173 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %171, i64 %172) #9
  %174 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %170) #9
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = bitcast i64* %173 to %"class.v8::Value"*
  %177 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %170, %"class.v8::Value"* %176) #9
  br label %178

178:                                              ; preds = %175, %169, %165
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #9
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %404

195:                                              ; preds = %47
  %196 = load i32, i32* %28, align 8
  %197 = icmp sgt i32 %196, 1
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = load i64*, i64** %31, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 1
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 160
  %203 = inttoptr i64 %202 to %"class.v8::Value"*
  br label %208

204:                                              ; preds = %195
  %205 = load i64*, i64** %48, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 1
  %207 = bitcast i64* %206 to %"class.v8::Value"*
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi %"class.v8::Value"* [ %203, %198 ], [ %207, %204 ]
  %210 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %209) #9
  br i1 %210, label %227, label %211

211:                                              ; preds = %208
  %212 = load i32, i32* %28, align 8
  %213 = icmp sgt i32 %212, 1
  br i1 %213, label %220, label %214

214:                                              ; preds = %211
  %215 = load i64*, i64** %31, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 1
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, 160
  %219 = inttoptr i64 %218 to %"class.v8::Value"*
  br label %224

220:                                              ; preds = %211
  %221 = load i64*, i64** %48, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 1
  %223 = bitcast i64* %222 to %"class.v8::Value"*
  br label %224

224:                                              ; preds = %214, %220
  %225 = phi %"class.v8::Value"* [ %219, %214 ], [ %223, %220 ]
  %226 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %225, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #9
  br i1 %226, label %227, label %376

227:                                              ; preds = %208, %224
  %228 = load i64*, i64** %31, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 1
  %230 = bitcast i64* %229 to %"class.v8::Isolate"**
  %231 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %230, align 8
  %232 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %232) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 56, i1 false) #9
  %233 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %234 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %234, align 8
  %235 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %235, align 2
  %236 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %237 = bitcast i8** %236 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.426, i64 0, i64 0)>, <2 x i8*>* %237, align 8
  %238 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %238, align 8
  %239 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %231, %"class.v8::Isolate"** %239, align 8
  %240 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %240, align 8
  %241 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %242 = bitcast %"class.WTF::StringImpl"** %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 16, i1 false) #9
  %243 = load i32, i32* %28, align 8
  %244 = icmp slt i32 %243, 2
  br i1 %244, label %245, label %265, !prof !5

245:                                              ; preds = %227
  %246 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #9
  %247 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %243) #9
  %248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %248, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #9
  br label %264

264:                                              ; preds = %263, %260, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #9
  br label %346

265:                                              ; preds = %227
  %266 = load i64*, i64** %48, align 8
  %267 = getelementptr inbounds i64, i64* %266, i64 -1
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, -1
  %270 = inttoptr i64 %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = and i64 %268, -4294967296
  %273 = zext i32 %271 to i64
  %274 = or i64 %272, %273
  %275 = add i64 %274, 7
  %276 = inttoptr i64 %275 to i16*
  %277 = load i16, i16* %276, align 2
  switch i16 %277, label %283 [
    i16 1057, label %278
    i16 1056, label %278
    i16 1040, label %278
  ]

278:                                              ; preds = %265, %265, %265
  %279 = bitcast i64* %266 to %"class.v8::Value"*
  %280 = add i64 %268, 19
  %281 = inttoptr i64 %280 to i8**
  %282 = load i8*, i8** %281, align 1
  br label %297

283:                                              ; preds = %265
  %284 = bitcast i64* %267 to %"class.v8::Object"*
  %285 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %284, i32 1) #9
  %286 = load i32, i32* %28, align 8
  %287 = icmp sgt i32 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %283
  %289 = bitcast i64** %48 to %"class.v8::Value"**
  %290 = load %"class.v8::Value"*, %"class.v8::Value"** %289, align 8
  br label %297

291:                                              ; preds = %283
  %292 = load i64*, i64** %31, align 8
  %293 = getelementptr inbounds i64, i64* %292, i64 1
  %294 = load i64, i64* %293, align 8
  %295 = add i64 %294, 160
  %296 = inttoptr i64 %295 to %"class.v8::Value"*
  br label %297

297:                                              ; preds = %278, %288, %291
  %298 = phi i8* [ %285, %291 ], [ %282, %278 ], [ %285, %288 ]
  %299 = phi %"class.v8::Value"* [ %296, %291 ], [ %279, %278 ], [ %290, %288 ]
  %300 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %299) #9
  br i1 %300, label %301, label %304, !prof !4

301:                                              ; preds = %297
  %302 = bitcast %"class.v8::Value"* %299 to %"class.v8::Uint32"*
  %303 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %302) #9
  br label %313

304:                                              ; preds = %297
  %305 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %299) #9
  br i1 %305, label %306, label %309, !prof !4

306:                                              ; preds = %304
  %307 = bitcast %"class.v8::Value"* %299 to %"class.v8::Int32"*
  %308 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %307) #9
  br label %313

309:                                              ; preds = %304
  %310 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %231, %"class.v8::Value"* %299, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %311 = load i32, i32* %240, align 8
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %346

313:                                              ; preds = %309, %306, %301
  %314 = phi i32 [ %310, %309 ], [ %308, %306 ], [ %303, %301 ]
  %315 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #9
  %316 = load i32, i32* %28, align 8
  %317 = icmp sgt i32 %316, 1
  br i1 %317, label %324, label %318

318:                                              ; preds = %313
  %319 = load i64*, i64** %31, align 8
  %320 = getelementptr inbounds i64, i64* %319, i64 1
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 160
  %323 = inttoptr i64 %322 to %"class.v8::Value"*
  br label %328

324:                                              ; preds = %313
  %325 = load i64*, i64** %48, align 8
  %326 = getelementptr inbounds i64, i64* %325, i64 1
  %327 = bitcast i64* %326 to %"class.v8::Value"*
  br label %328

328:                                              ; preds = %324, %318
  %329 = phi %"class.v8::Value"* [ %323, %318 ], [ %327, %324 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %231, %"class.v8::Value"* %329, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %330 = load i32, i32* %240, align 8
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %328
  %333 = bitcast i8* %298 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib2fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %333, i32 %314, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %334

334:                                              ; preds = %332, %328
  %335 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %336 = load float*, float** %335, align 8
  %337 = icmp eq float* %336, null
  %338 = bitcast float* %336 to i8*
  br i1 %337, label %345, label %339, !prof !4

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %344, label %343, !prof !5

343:                                              ; preds = %339
  store i32 0, i32* %340, align 4
  br label %344

344:                                              ; preds = %343, %339
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %338) #9
  store float* null, float** %335, align 8
  br label %345

345:                                              ; preds = %344, %334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #9
  br label %346

346:                                              ; preds = %345, %309, %264
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %347 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %348 = load i64*, i64** %347, align 8
  %349 = icmp eq i64* %348, null
  br i1 %349, label %359, label %350

350:                                              ; preds = %346
  %351 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %239, align 8
  %352 = bitcast %"class.v8::Isolate"* %351 to %"class.v8::internal::Isolate"*
  %353 = load i64, i64* %348, align 8
  %354 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %352, i64 %353) #9
  %355 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %351) #9
  br i1 %355, label %359, label %356

356:                                              ; preds = %350
  %357 = bitcast i64* %354 to %"class.v8::Value"*
  %358 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %351, %"class.v8::Value"* %357) #9
  br label %359

359:                                              ; preds = %356, %350, %346
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #9
  br label %375

375:                                              ; preds = %359, %371, %374
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %232) #9
  br label %404

376:                                              ; preds = %224
  %377 = load i32, i32* %44, align 8
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %404

379:                                              ; preds = %376
  %380 = load i32, i32* %28, align 8
  %381 = icmp slt i32 %380, 2
  br i1 %381, label %382, label %403, !prof !5

382:                                              ; preds = %27, %379
  %383 = phi i32 [ %380, %379 ], [ %29, %27 ]
  %384 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #9
  %385 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %383) #9
  %386 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %385, %"class.WTF::StringImpl"** %386, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %386, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %402, label %389

389:                                              ; preds = %382
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  br i1 %393, label %396, label %398

396:                                              ; preds = %389
  %397 = add i32 %395, -1
  store i32 %397, i32* %394, align 4
  br label %398

398:                                              ; preds = %396, %389
  %399 = phi i32 [ %397, %396 ], [ %395, %389 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %387) #9
  br label %402

402:                                              ; preds = %382, %398, %401
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #9
  br label %404

403:                                              ; preds = %379
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %404

404:                                              ; preds = %376, %403, %402, %375, %194
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %405 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %406 = load i64*, i64** %405, align 8
  %407 = icmp eq i64* %406, null
  br i1 %407, label %417, label %408

408:                                              ; preds = %404
  %409 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %410 = bitcast %"class.v8::Isolate"* %409 to %"class.v8::internal::Isolate"*
  %411 = load i64, i64* %406, align 8
  %412 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %410, i64 %411) #9
  %413 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %409) #9
  br i1 %413, label %417, label %414

414:                                              ; preds = %408
  %415 = bitcast i64* %412 to %"class.v8::Value"*
  %416 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %409, %"class.v8::Value"* %415) #9
  br label %417

417:                                              ; preds = %414, %408, %404
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %418, null
  br i1 %419, label %433, label %420

420:                                              ; preds = %417
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #9
  br label %433

433:                                              ; preds = %417, %429, %432
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib3FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.427, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %191

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %191

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Number"*
  %111 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %112, %109
  %115 = phi double [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %191

118:                                              ; preds = %114
  %119 = fcmp ogt double %115, 0x47EFFFFFE0000000
  br i1 %119, label %124, label %120, !prof !5

120:                                              ; preds = %118
  %121 = fcmp olt double %115, 0xC7EFFFFFE0000000
  br i1 %121, label %124, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fptrunc double %115 to float
  br label %124

124:                                              ; preds = %118, %120, %122
  %125 = phi float [ 0xFFF0000000000000, %120 ], [ 0x7FF0000000000000, %118 ], [ %123, %122 ]
  %126 = load i32, i32* %20, align 8
  %127 = icmp sgt i32 %126, 2
  br i1 %127, label %134, label %128

128:                                              ; preds = %124
  %129 = load i64*, i64** %4, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 160
  %133 = inttoptr i64 %132 to %"class.v8::Value"*
  br label %138

134:                                              ; preds = %124
  %135 = load i64*, i64** %44, align 8
  %136 = getelementptr inbounds i64, i64* %135, i64 2
  %137 = bitcast i64* %136 to %"class.v8::Value"*
  br label %138

138:                                              ; preds = %128, %134
  %139 = phi %"class.v8::Value"* [ %133, %128 ], [ %137, %134 ]
  %140 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %139) #9
  br i1 %140, label %141, label %144, !prof !4

141:                                              ; preds = %138
  %142 = bitcast %"class.v8::Value"* %139 to %"class.v8::Number"*
  %143 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %142) #9
  br label %146

144:                                              ; preds = %138
  %145 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %139, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %146

146:                                              ; preds = %144, %141
  %147 = phi double [ %143, %141 ], [ %145, %144 ]
  %148 = load i32, i32* %17, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %191

150:                                              ; preds = %146
  %151 = fcmp ogt double %147, 0x47EFFFFFE0000000
  br i1 %151, label %156, label %152, !prof !5

152:                                              ; preds = %150
  %153 = fcmp olt double %147, 0xC7EFFFFFE0000000
  br i1 %153, label %156, label %154, !prof !5

154:                                              ; preds = %152
  %155 = fptrunc double %147 to float
  br label %156

156:                                              ; preds = %150, %152, %154
  %157 = phi float [ 0xFFF0000000000000, %152 ], [ 0x7FF0000000000000, %150 ], [ %155, %154 ]
  %158 = load i32, i32* %20, align 8
  %159 = icmp sgt i32 %158, 3
  br i1 %159, label %166, label %160

160:                                              ; preds = %156
  %161 = load i64*, i64** %4, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 1
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 160
  %165 = inttoptr i64 %164 to %"class.v8::Value"*
  br label %170

166:                                              ; preds = %156
  %167 = load i64*, i64** %44, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 3
  %169 = bitcast i64* %168 to %"class.v8::Value"*
  br label %170

170:                                              ; preds = %160, %166
  %171 = phi %"class.v8::Value"* [ %165, %160 ], [ %169, %166 ]
  %172 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %171) #9
  br i1 %172, label %173, label %176, !prof !4

173:                                              ; preds = %170
  %174 = bitcast %"class.v8::Value"* %171 to %"class.v8::Number"*
  %175 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %174) #9
  br label %178

176:                                              ; preds = %170
  %177 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %171, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %178

178:                                              ; preds = %176, %173
  %179 = phi double [ %175, %173 ], [ %177, %176 ]
  %180 = load i32, i32* %17, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %191

182:                                              ; preds = %178
  %183 = fcmp ogt double %179, 0x47EFFFFFE0000000
  br i1 %183, label %188, label %184, !prof !5

184:                                              ; preds = %182
  %185 = fcmp olt double %179, 0xC7EFFFFFE0000000
  br i1 %185, label %188, label %186, !prof !5

186:                                              ; preds = %184
  %187 = fptrunc double %179 to float
  br label %188

188:                                              ; preds = %182, %184, %186
  %189 = phi float [ 0xFFF0000000000000, %184 ], [ 0x7FF0000000000000, %182 ], [ %187, %186 ]
  %190 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib3fEjfff(%"class.blink::WebGLRenderingContextBase"* %190, i32 %93, float %125, float %157, float %189) #9
  br label %191

191:                                              ; preds = %88, %178, %146, %114, %188, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %192 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %193 = load i64*, i64** %192, align 8
  %194 = icmp eq i64* %193, null
  br i1 %194, label %204, label %195

195:                                              ; preds = %191
  %196 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %197 = bitcast %"class.v8::Isolate"* %196 to %"class.v8::internal::Isolate"*
  %198 = load i64, i64* %193, align 8
  %199 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %197, i64 %198) #9
  %200 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %196) #9
  br i1 %200, label %204, label %201

201:                                              ; preds = %195
  %202 = bitcast i64* %199 to %"class.v8::Value"*
  %203 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %196, %"class.v8::Value"* %202) #9
  br label %204

204:                                              ; preds = %201, %195, %191
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #9
  br label %220

220:                                              ; preds = %204, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib3FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MaybeShared.1854", align 8
  %8 = alloca %"class.blink::MaybeShared.1855", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %11) #9
  br label %27

27:                                               ; preds = %1, %15, %26
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 1
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  br i1 %30, label %47, label %382

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 1
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  %52 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %51) #9
  br i1 %52, label %53, label %195

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::MaybeShared.1855"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i64*, i64** %31, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = bitcast i64* %56 to %"class.v8::Isolate"**
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  %59 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %58, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp slt i32 %70, 2
  br i1 %71, label %72, label %91, !prof !5

72:                                               ; preds = %53
  %73 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %70) #9
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %163, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %163

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %163

91:                                               ; preds = %53
  %92 = load i64*, i64** %48, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 -1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i64 %94, -4294967296
  %99 = zext i32 %97 to i64
  %100 = or i64 %98, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load i16, i16* %102, align 2
  switch i16 %103, label %109 [
    i16 1057, label %104
    i16 1056, label %104
    i16 1040, label %104
  ]

104:                                              ; preds = %91, %91, %91
  %105 = bitcast i64* %92 to %"class.v8::Value"*
  %106 = add i64 %94, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %123

109:                                              ; preds = %91
  %110 = bitcast i64* %93 to %"class.v8::Object"*
  %111 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %110, i32 1) #9
  %112 = load i32, i32* %28, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast i64** %48 to %"class.v8::Value"**
  %116 = load %"class.v8::Value"*, %"class.v8::Value"** %115, align 8
  br label %123

117:                                              ; preds = %109
  %118 = load i64*, i64** %31, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %104, %114, %117
  %124 = phi i8* [ %111, %117 ], [ %108, %104 ], [ %111, %114 ]
  %125 = phi %"class.v8::Value"* [ %122, %117 ], [ %105, %104 ], [ %116, %114 ]
  %126 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %123
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %139

130:                                              ; preds = %123
  %131 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %139

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %58, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %137 = load i32, i32* %67, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %165

139:                                              ; preds = %135, %132, %127
  %140 = phi i32 [ %136, %135 ], [ %134, %132 ], [ %129, %127 ]
  %141 = bitcast %"class.blink::MaybeShared.1854"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #9
  %142 = load i32, i32* %28, align 8
  %143 = icmp sgt i32 %142, 1
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = load i64*, i64** %31, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 1
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 160
  %149 = inttoptr i64 %148 to %"class.v8::Value"*
  br label %154

150:                                              ; preds = %139
  %151 = load i64*, i64** %48, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 1
  %153 = bitcast i64* %152 to %"class.v8::Value"*
  br label %154

154:                                              ; preds = %150, %144
  %155 = phi %"class.v8::Value"* [ %149, %144 ], [ %153, %150 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* nonnull sret %7, %"class.v8::Isolate"* %58, i32 1, %"class.v8::Value"* %155, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %156 = load i32, i32* %67, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = bitcast i8* %124 to %"class.blink::WebGLRenderingContextBase"*
  %160 = bitcast %"class.blink::MaybeShared.1854"* %7 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.blink::MaybeShared.1855"* %8 to i64*
  store i64 %161, i64* %162, align 8
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib3fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"* %159, i32 %140, %"class.blink::MaybeShared.1855"* nonnull %8) #9
  br label %163

163:                                              ; preds = %154, %158, %72, %87, %90
  %164 = phi i8* [ %73, %90 ], [ %73, %87 ], [ %73, %72 ], [ %141, %158 ], [ %141, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9
  br label %165

165:                                              ; preds = %163, %135
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %171 = bitcast %"class.v8::Isolate"* %170 to %"class.v8::internal::Isolate"*
  %172 = load i64, i64* %167, align 8
  %173 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %171, i64 %172) #9
  %174 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %170) #9
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = bitcast i64* %173 to %"class.v8::Value"*
  %177 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %170, %"class.v8::Value"* %176) #9
  br label %178

178:                                              ; preds = %175, %169, %165
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #9
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %404

195:                                              ; preds = %47
  %196 = load i32, i32* %28, align 8
  %197 = icmp sgt i32 %196, 1
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = load i64*, i64** %31, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 1
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 160
  %203 = inttoptr i64 %202 to %"class.v8::Value"*
  br label %208

204:                                              ; preds = %195
  %205 = load i64*, i64** %48, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 1
  %207 = bitcast i64* %206 to %"class.v8::Value"*
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi %"class.v8::Value"* [ %203, %198 ], [ %207, %204 ]
  %210 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %209) #9
  br i1 %210, label %227, label %211

211:                                              ; preds = %208
  %212 = load i32, i32* %28, align 8
  %213 = icmp sgt i32 %212, 1
  br i1 %213, label %220, label %214

214:                                              ; preds = %211
  %215 = load i64*, i64** %31, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 1
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, 160
  %219 = inttoptr i64 %218 to %"class.v8::Value"*
  br label %224

220:                                              ; preds = %211
  %221 = load i64*, i64** %48, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 1
  %223 = bitcast i64* %222 to %"class.v8::Value"*
  br label %224

224:                                              ; preds = %214, %220
  %225 = phi %"class.v8::Value"* [ %219, %214 ], [ %223, %220 ]
  %226 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %225, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #9
  br i1 %226, label %227, label %376

227:                                              ; preds = %208, %224
  %228 = load i64*, i64** %31, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 1
  %230 = bitcast i64* %229 to %"class.v8::Isolate"**
  %231 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %230, align 8
  %232 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %232) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 56, i1 false) #9
  %233 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %234 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %234, align 8
  %235 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %235, align 2
  %236 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %237 = bitcast i8** %236 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0)>, <2 x i8*>* %237, align 8
  %238 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %238, align 8
  %239 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %231, %"class.v8::Isolate"** %239, align 8
  %240 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %240, align 8
  %241 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %242 = bitcast %"class.WTF::StringImpl"** %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 16, i1 false) #9
  %243 = load i32, i32* %28, align 8
  %244 = icmp slt i32 %243, 2
  br i1 %244, label %245, label %265, !prof !5

245:                                              ; preds = %227
  %246 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #9
  %247 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %243) #9
  %248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %248, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #9
  br label %264

264:                                              ; preds = %263, %260, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #9
  br label %346

265:                                              ; preds = %227
  %266 = load i64*, i64** %48, align 8
  %267 = getelementptr inbounds i64, i64* %266, i64 -1
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, -1
  %270 = inttoptr i64 %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = and i64 %268, -4294967296
  %273 = zext i32 %271 to i64
  %274 = or i64 %272, %273
  %275 = add i64 %274, 7
  %276 = inttoptr i64 %275 to i16*
  %277 = load i16, i16* %276, align 2
  switch i16 %277, label %283 [
    i16 1057, label %278
    i16 1056, label %278
    i16 1040, label %278
  ]

278:                                              ; preds = %265, %265, %265
  %279 = bitcast i64* %266 to %"class.v8::Value"*
  %280 = add i64 %268, 19
  %281 = inttoptr i64 %280 to i8**
  %282 = load i8*, i8** %281, align 1
  br label %297

283:                                              ; preds = %265
  %284 = bitcast i64* %267 to %"class.v8::Object"*
  %285 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %284, i32 1) #9
  %286 = load i32, i32* %28, align 8
  %287 = icmp sgt i32 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %283
  %289 = bitcast i64** %48 to %"class.v8::Value"**
  %290 = load %"class.v8::Value"*, %"class.v8::Value"** %289, align 8
  br label %297

291:                                              ; preds = %283
  %292 = load i64*, i64** %31, align 8
  %293 = getelementptr inbounds i64, i64* %292, i64 1
  %294 = load i64, i64* %293, align 8
  %295 = add i64 %294, 160
  %296 = inttoptr i64 %295 to %"class.v8::Value"*
  br label %297

297:                                              ; preds = %278, %288, %291
  %298 = phi i8* [ %285, %291 ], [ %282, %278 ], [ %285, %288 ]
  %299 = phi %"class.v8::Value"* [ %296, %291 ], [ %279, %278 ], [ %290, %288 ]
  %300 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %299) #9
  br i1 %300, label %301, label %304, !prof !4

301:                                              ; preds = %297
  %302 = bitcast %"class.v8::Value"* %299 to %"class.v8::Uint32"*
  %303 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %302) #9
  br label %313

304:                                              ; preds = %297
  %305 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %299) #9
  br i1 %305, label %306, label %309, !prof !4

306:                                              ; preds = %304
  %307 = bitcast %"class.v8::Value"* %299 to %"class.v8::Int32"*
  %308 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %307) #9
  br label %313

309:                                              ; preds = %304
  %310 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %231, %"class.v8::Value"* %299, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %311 = load i32, i32* %240, align 8
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %346

313:                                              ; preds = %309, %306, %301
  %314 = phi i32 [ %310, %309 ], [ %308, %306 ], [ %303, %301 ]
  %315 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #9
  %316 = load i32, i32* %28, align 8
  %317 = icmp sgt i32 %316, 1
  br i1 %317, label %324, label %318

318:                                              ; preds = %313
  %319 = load i64*, i64** %31, align 8
  %320 = getelementptr inbounds i64, i64* %319, i64 1
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 160
  %323 = inttoptr i64 %322 to %"class.v8::Value"*
  br label %328

324:                                              ; preds = %313
  %325 = load i64*, i64** %48, align 8
  %326 = getelementptr inbounds i64, i64* %325, i64 1
  %327 = bitcast i64* %326 to %"class.v8::Value"*
  br label %328

328:                                              ; preds = %324, %318
  %329 = phi %"class.v8::Value"* [ %323, %318 ], [ %327, %324 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %231, %"class.v8::Value"* %329, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %330 = load i32, i32* %240, align 8
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %328
  %333 = bitcast i8* %298 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib3fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %333, i32 %314, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %334

334:                                              ; preds = %332, %328
  %335 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %336 = load float*, float** %335, align 8
  %337 = icmp eq float* %336, null
  %338 = bitcast float* %336 to i8*
  br i1 %337, label %345, label %339, !prof !4

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %344, label %343, !prof !5

343:                                              ; preds = %339
  store i32 0, i32* %340, align 4
  br label %344

344:                                              ; preds = %343, %339
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %338) #9
  store float* null, float** %335, align 8
  br label %345

345:                                              ; preds = %344, %334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #9
  br label %346

346:                                              ; preds = %345, %309, %264
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %347 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %348 = load i64*, i64** %347, align 8
  %349 = icmp eq i64* %348, null
  br i1 %349, label %359, label %350

350:                                              ; preds = %346
  %351 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %239, align 8
  %352 = bitcast %"class.v8::Isolate"* %351 to %"class.v8::internal::Isolate"*
  %353 = load i64, i64* %348, align 8
  %354 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %352, i64 %353) #9
  %355 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %351) #9
  br i1 %355, label %359, label %356

356:                                              ; preds = %350
  %357 = bitcast i64* %354 to %"class.v8::Value"*
  %358 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %351, %"class.v8::Value"* %357) #9
  br label %359

359:                                              ; preds = %356, %350, %346
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #9
  br label %375

375:                                              ; preds = %359, %371, %374
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %232) #9
  br label %404

376:                                              ; preds = %224
  %377 = load i32, i32* %44, align 8
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %404

379:                                              ; preds = %376
  %380 = load i32, i32* %28, align 8
  %381 = icmp slt i32 %380, 2
  br i1 %381, label %382, label %403, !prof !5

382:                                              ; preds = %27, %379
  %383 = phi i32 [ %380, %379 ], [ %29, %27 ]
  %384 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #9
  %385 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %383) #9
  %386 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %385, %"class.WTF::StringImpl"** %386, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %386, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %402, label %389

389:                                              ; preds = %382
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  br i1 %393, label %396, label %398

396:                                              ; preds = %389
  %397 = add i32 %395, -1
  store i32 %397, i32* %394, align 4
  br label %398

398:                                              ; preds = %396, %389
  %399 = phi i32 [ %397, %396 ], [ %395, %389 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %387) #9
  br label %402

402:                                              ; preds = %382, %398, %401
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #9
  br label %404

403:                                              ; preds = %379
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %404

404:                                              ; preds = %376, %403, %402, %375, %194
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %405 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %406 = load i64*, i64** %405, align 8
  %407 = icmp eq i64* %406, null
  br i1 %407, label %417, label %408

408:                                              ; preds = %404
  %409 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %410 = bitcast %"class.v8::Isolate"* %409 to %"class.v8::internal::Isolate"*
  %411 = load i64, i64* %406, align 8
  %412 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %410, i64 %411) #9
  %413 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %409) #9
  br i1 %413, label %417, label %414

414:                                              ; preds = %408
  %415 = bitcast i64* %412 to %"class.v8::Value"*
  %416 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %409, %"class.v8::Value"* %415) #9
  br label %417

417:                                              ; preds = %414, %408, %404
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %418, null
  br i1 %419, label %433, label %420

420:                                              ; preds = %417
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #9
  br label %433

433:                                              ; preds = %417, %429, %432
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context31VertexAttrib4FOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.429, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %223

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %223

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Number"*
  %111 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %112, %109
  %115 = phi double [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %223

118:                                              ; preds = %114
  %119 = fcmp ogt double %115, 0x47EFFFFFE0000000
  br i1 %119, label %124, label %120, !prof !5

120:                                              ; preds = %118
  %121 = fcmp olt double %115, 0xC7EFFFFFE0000000
  br i1 %121, label %124, label %122, !prof !5

122:                                              ; preds = %120
  %123 = fptrunc double %115 to float
  br label %124

124:                                              ; preds = %118, %120, %122
  %125 = phi float [ 0xFFF0000000000000, %120 ], [ 0x7FF0000000000000, %118 ], [ %123, %122 ]
  %126 = load i32, i32* %20, align 8
  %127 = icmp sgt i32 %126, 2
  br i1 %127, label %134, label %128

128:                                              ; preds = %124
  %129 = load i64*, i64** %4, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 160
  %133 = inttoptr i64 %132 to %"class.v8::Value"*
  br label %138

134:                                              ; preds = %124
  %135 = load i64*, i64** %44, align 8
  %136 = getelementptr inbounds i64, i64* %135, i64 2
  %137 = bitcast i64* %136 to %"class.v8::Value"*
  br label %138

138:                                              ; preds = %128, %134
  %139 = phi %"class.v8::Value"* [ %133, %128 ], [ %137, %134 ]
  %140 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %139) #9
  br i1 %140, label %141, label %144, !prof !4

141:                                              ; preds = %138
  %142 = bitcast %"class.v8::Value"* %139 to %"class.v8::Number"*
  %143 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %142) #9
  br label %146

144:                                              ; preds = %138
  %145 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %139, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %146

146:                                              ; preds = %144, %141
  %147 = phi double [ %143, %141 ], [ %145, %144 ]
  %148 = load i32, i32* %17, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %223

150:                                              ; preds = %146
  %151 = fcmp ogt double %147, 0x47EFFFFFE0000000
  br i1 %151, label %156, label %152, !prof !5

152:                                              ; preds = %150
  %153 = fcmp olt double %147, 0xC7EFFFFFE0000000
  br i1 %153, label %156, label %154, !prof !5

154:                                              ; preds = %152
  %155 = fptrunc double %147 to float
  br label %156

156:                                              ; preds = %150, %152, %154
  %157 = phi float [ 0xFFF0000000000000, %152 ], [ 0x7FF0000000000000, %150 ], [ %155, %154 ]
  %158 = load i32, i32* %20, align 8
  %159 = icmp sgt i32 %158, 3
  br i1 %159, label %166, label %160

160:                                              ; preds = %156
  %161 = load i64*, i64** %4, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 1
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 160
  %165 = inttoptr i64 %164 to %"class.v8::Value"*
  br label %170

166:                                              ; preds = %156
  %167 = load i64*, i64** %44, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 3
  %169 = bitcast i64* %168 to %"class.v8::Value"*
  br label %170

170:                                              ; preds = %160, %166
  %171 = phi %"class.v8::Value"* [ %165, %160 ], [ %169, %166 ]
  %172 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %171) #9
  br i1 %172, label %173, label %176, !prof !4

173:                                              ; preds = %170
  %174 = bitcast %"class.v8::Value"* %171 to %"class.v8::Number"*
  %175 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %174) #9
  br label %178

176:                                              ; preds = %170
  %177 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %171, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %178

178:                                              ; preds = %176, %173
  %179 = phi double [ %175, %173 ], [ %177, %176 ]
  %180 = load i32, i32* %17, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %223

182:                                              ; preds = %178
  %183 = fcmp ogt double %179, 0x47EFFFFFE0000000
  br i1 %183, label %188, label %184, !prof !5

184:                                              ; preds = %182
  %185 = fcmp olt double %179, 0xC7EFFFFFE0000000
  br i1 %185, label %188, label %186, !prof !5

186:                                              ; preds = %184
  %187 = fptrunc double %179 to float
  br label %188

188:                                              ; preds = %182, %184, %186
  %189 = phi float [ 0xFFF0000000000000, %184 ], [ 0x7FF0000000000000, %182 ], [ %187, %186 ]
  %190 = load i32, i32* %20, align 8
  %191 = icmp sgt i32 %190, 4
  br i1 %191, label %198, label %192

192:                                              ; preds = %188
  %193 = load i64*, i64** %4, align 8
  %194 = getelementptr inbounds i64, i64* %193, i64 1
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %195, 160
  %197 = inttoptr i64 %196 to %"class.v8::Value"*
  br label %202

198:                                              ; preds = %188
  %199 = load i64*, i64** %44, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 4
  %201 = bitcast i64* %200 to %"class.v8::Value"*
  br label %202

202:                                              ; preds = %192, %198
  %203 = phi %"class.v8::Value"* [ %197, %192 ], [ %201, %198 ]
  %204 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %203) #9
  br i1 %204, label %205, label %208, !prof !4

205:                                              ; preds = %202
  %206 = bitcast %"class.v8::Value"* %203 to %"class.v8::Number"*
  %207 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %206) #9
  br label %210

208:                                              ; preds = %202
  %209 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %203, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %210

210:                                              ; preds = %208, %205
  %211 = phi double [ %207, %205 ], [ %209, %208 ]
  %212 = load i32, i32* %17, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %223

214:                                              ; preds = %210
  %215 = fcmp ogt double %211, 0x47EFFFFFE0000000
  br i1 %215, label %220, label %216, !prof !5

216:                                              ; preds = %214
  %217 = fcmp olt double %211, 0xC7EFFFFFE0000000
  br i1 %217, label %220, label %218, !prof !5

218:                                              ; preds = %216
  %219 = fptrunc double %211 to float
  br label %220

220:                                              ; preds = %214, %216, %218
  %221 = phi float [ 0xFFF0000000000000, %216 ], [ 0x7FF0000000000000, %214 ], [ %219, %218 ]
  %222 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib4fEjffff(%"class.blink::WebGLRenderingContextBase"* %222, i32 %93, float %125, float %157, float %189, float %221) #9
  br label %223

223:                                              ; preds = %88, %210, %178, %146, %114, %220, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %224 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %225 = load i64*, i64** %224, align 8
  %226 = icmp eq i64* %225, null
  br i1 %226, label %236, label %227

227:                                              ; preds = %223
  %228 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %229 = bitcast %"class.v8::Isolate"* %228 to %"class.v8::internal::Isolate"*
  %230 = load i64, i64* %225, align 8
  %231 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %229, i64 %230) #9
  %232 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %228) #9
  br i1 %232, label %236, label %233

233:                                              ; preds = %227
  %234 = bitcast i64* %231 to %"class.v8::Value"*
  %235 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %228, %"class.v8::Value"* %234) #9
  br label %236

236:                                              ; preds = %233, %227, %223
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #9
  br label %252

252:                                              ; preds = %236, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context32VertexAttrib4FvOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.1341", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MaybeShared.1854", align 8
  %8 = alloca %"class.blink::MaybeShared.1855", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %12 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %16, align 8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #9
  %23 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %11) #9
  br label %27

27:                                               ; preds = %1, %15, %26
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 1
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.430, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  br i1 %30, label %47, label %382

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 1
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  %52 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %51) #9
  br i1 %52, label %53, label %195

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::MaybeShared.1855"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i64*, i64** %31, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = bitcast i64* %56 to %"class.v8::Isolate"**
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  %59 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.430, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %58, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp slt i32 %70, 2
  br i1 %71, label %72, label %91, !prof !5

72:                                               ; preds = %53
  %73 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %70) #9
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %163, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %163

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %163

91:                                               ; preds = %53
  %92 = load i64*, i64** %48, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 -1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i64 %94, -4294967296
  %99 = zext i32 %97 to i64
  %100 = or i64 %98, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load i16, i16* %102, align 2
  switch i16 %103, label %109 [
    i16 1057, label %104
    i16 1056, label %104
    i16 1040, label %104
  ]

104:                                              ; preds = %91, %91, %91
  %105 = bitcast i64* %92 to %"class.v8::Value"*
  %106 = add i64 %94, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %123

109:                                              ; preds = %91
  %110 = bitcast i64* %93 to %"class.v8::Object"*
  %111 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %110, i32 1) #9
  %112 = load i32, i32* %28, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast i64** %48 to %"class.v8::Value"**
  %116 = load %"class.v8::Value"*, %"class.v8::Value"** %115, align 8
  br label %123

117:                                              ; preds = %109
  %118 = load i64*, i64** %31, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %104, %114, %117
  %124 = phi i8* [ %111, %117 ], [ %108, %104 ], [ %111, %114 ]
  %125 = phi %"class.v8::Value"* [ %122, %117 ], [ %105, %104 ], [ %116, %114 ]
  %126 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %123
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %139

130:                                              ; preds = %123
  %131 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %139

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %58, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %137 = load i32, i32* %67, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %165

139:                                              ; preds = %135, %132, %127
  %140 = phi i32 [ %136, %135 ], [ %134, %132 ], [ %129, %127 ]
  %141 = bitcast %"class.blink::MaybeShared.1854"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #9
  %142 = load i32, i32* %28, align 8
  %143 = icmp sgt i32 %142, 1
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = load i64*, i64** %31, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 1
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 160
  %149 = inttoptr i64 %148 to %"class.v8::Value"*
  br label %154

150:                                              ; preds = %139
  %151 = load i64*, i64** %48, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 1
  %153 = bitcast i64* %152 to %"class.v8::Value"*
  br label %154

154:                                              ; preds = %150, %144
  %155 = phi %"class.v8::Value"* [ %149, %144 ], [ %153, %150 ]
  call void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* nonnull sret %7, %"class.v8::Isolate"* %58, i32 1, %"class.v8::Value"* %155, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %156 = load i32, i32* %67, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = bitcast i8* %124 to %"class.blink::WebGLRenderingContextBase"*
  %160 = bitcast %"class.blink::MaybeShared.1854"* %7 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.blink::MaybeShared.1855"* %8 to i64*
  store i64 %161, i64* %162, align 8
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib4fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"* %159, i32 %140, %"class.blink::MaybeShared.1855"* nonnull %8) #9
  br label %163

163:                                              ; preds = %154, %158, %72, %87, %90
  %164 = phi i8* [ %73, %90 ], [ %73, %87 ], [ %73, %72 ], [ %141, %158 ], [ %141, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9
  br label %165

165:                                              ; preds = %163, %135
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %171 = bitcast %"class.v8::Isolate"* %170 to %"class.v8::internal::Isolate"*
  %172 = load i64, i64* %167, align 8
  %173 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %171, i64 %172) #9
  %174 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %170) #9
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = bitcast i64* %173 to %"class.v8::Value"*
  %177 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %170, %"class.v8::Value"* %176) #9
  br label %178

178:                                              ; preds = %175, %169, %165
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #9
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %404

195:                                              ; preds = %47
  %196 = load i32, i32* %28, align 8
  %197 = icmp sgt i32 %196, 1
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = load i64*, i64** %31, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 1
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, 160
  %203 = inttoptr i64 %202 to %"class.v8::Value"*
  br label %208

204:                                              ; preds = %195
  %205 = load i64*, i64** %48, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 1
  %207 = bitcast i64* %206 to %"class.v8::Value"*
  br label %208

208:                                              ; preds = %198, %204
  %209 = phi %"class.v8::Value"* [ %203, %198 ], [ %207, %204 ]
  %210 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %209) #9
  br i1 %210, label %227, label %211

211:                                              ; preds = %208
  %212 = load i32, i32* %28, align 8
  %213 = icmp sgt i32 %212, 1
  br i1 %213, label %220, label %214

214:                                              ; preds = %211
  %215 = load i64*, i64** %31, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 1
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, 160
  %219 = inttoptr i64 %218 to %"class.v8::Value"*
  br label %224

220:                                              ; preds = %211
  %221 = load i64*, i64** %48, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 1
  %223 = bitcast i64* %222 to %"class.v8::Value"*
  br label %224

224:                                              ; preds = %214, %220
  %225 = phi %"class.v8::Value"* [ %219, %214 ], [ %223, %220 ]
  %226 = call zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %225, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #9
  br i1 %226, label %227, label %376

227:                                              ; preds = %208, %224
  %228 = load i64*, i64** %31, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 1
  %230 = bitcast i64* %229 to %"class.v8::Isolate"**
  %231 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %230, align 8
  %232 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %232) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 56, i1 false) #9
  %233 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %234 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %234, align 8
  %235 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %235, align 2
  %236 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %237 = bitcast i8** %236 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.430, i64 0, i64 0)>, <2 x i8*>* %237, align 8
  %238 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %238, align 8
  %239 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %231, %"class.v8::Isolate"** %239, align 8
  %240 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %240, align 8
  %241 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %242 = bitcast %"class.WTF::StringImpl"** %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 16, i1 false) #9
  %243 = load i32, i32* %28, align 8
  %244 = icmp slt i32 %243, 2
  br i1 %244, label %245, label %265, !prof !5

245:                                              ; preds = %227
  %246 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #9
  %247 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %243) #9
  %248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %248, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #9
  br label %264

264:                                              ; preds = %263, %260, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #9
  br label %346

265:                                              ; preds = %227
  %266 = load i64*, i64** %48, align 8
  %267 = getelementptr inbounds i64, i64* %266, i64 -1
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, -1
  %270 = inttoptr i64 %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = and i64 %268, -4294967296
  %273 = zext i32 %271 to i64
  %274 = or i64 %272, %273
  %275 = add i64 %274, 7
  %276 = inttoptr i64 %275 to i16*
  %277 = load i16, i16* %276, align 2
  switch i16 %277, label %283 [
    i16 1057, label %278
    i16 1056, label %278
    i16 1040, label %278
  ]

278:                                              ; preds = %265, %265, %265
  %279 = bitcast i64* %266 to %"class.v8::Value"*
  %280 = add i64 %268, 19
  %281 = inttoptr i64 %280 to i8**
  %282 = load i8*, i8** %281, align 1
  br label %297

283:                                              ; preds = %265
  %284 = bitcast i64* %267 to %"class.v8::Object"*
  %285 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %284, i32 1) #9
  %286 = load i32, i32* %28, align 8
  %287 = icmp sgt i32 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %283
  %289 = bitcast i64** %48 to %"class.v8::Value"**
  %290 = load %"class.v8::Value"*, %"class.v8::Value"** %289, align 8
  br label %297

291:                                              ; preds = %283
  %292 = load i64*, i64** %31, align 8
  %293 = getelementptr inbounds i64, i64* %292, i64 1
  %294 = load i64, i64* %293, align 8
  %295 = add i64 %294, 160
  %296 = inttoptr i64 %295 to %"class.v8::Value"*
  br label %297

297:                                              ; preds = %278, %288, %291
  %298 = phi i8* [ %285, %291 ], [ %282, %278 ], [ %285, %288 ]
  %299 = phi %"class.v8::Value"* [ %296, %291 ], [ %279, %278 ], [ %290, %288 ]
  %300 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %299) #9
  br i1 %300, label %301, label %304, !prof !4

301:                                              ; preds = %297
  %302 = bitcast %"class.v8::Value"* %299 to %"class.v8::Uint32"*
  %303 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %302) #9
  br label %313

304:                                              ; preds = %297
  %305 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %299) #9
  br i1 %305, label %306, label %309, !prof !4

306:                                              ; preds = %304
  %307 = bitcast %"class.v8::Value"* %299 to %"class.v8::Int32"*
  %308 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %307) #9
  br label %313

309:                                              ; preds = %304
  %310 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %231, %"class.v8::Value"* %299, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %311 = load i32, i32* %240, align 8
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %346

313:                                              ; preds = %309, %306, %301
  %314 = phi i32 [ %310, %309 ], [ %308, %306 ], [ %303, %301 ]
  %315 = bitcast %"class.WTF::Vector.1341"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #9
  %316 = load i32, i32* %28, align 8
  %317 = icmp sgt i32 %316, 1
  br i1 %317, label %324, label %318

318:                                              ; preds = %313
  %319 = load i64*, i64** %31, align 8
  %320 = getelementptr inbounds i64, i64* %319, i64 1
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 160
  %323 = inttoptr i64 %322 to %"class.v8::Value"*
  br label %328

324:                                              ; preds = %313
  %325 = load i64*, i64** %48, align 8
  %326 = getelementptr inbounds i64, i64* %325, i64 1
  %327 = bitcast i64* %326 to %"class.v8::Value"*
  br label %328

328:                                              ; preds = %324, %318
  %329 = phi %"class.v8::Value"* [ %323, %318 ], [ %327, %324 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* nonnull sret %4, %"class.v8::Isolate"* %231, %"class.v8::Value"* %329, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %330 = load i32, i32* %240, align 8
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %328
  %333 = bitcast i8* %298 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib4fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"* %333, i32 %314, %"class.WTF::Vector.1341"* nonnull dereferenceable(16) %4) #9
  br label %334

334:                                              ; preds = %332, %328
  %335 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 0
  %336 = load float*, float** %335, align 8
  %337 = icmp eq float* %336, null
  %338 = bitcast float* %336 to i8*
  br i1 %337, label %345, label %339, !prof !4

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %4, i64 0, i32 0, i32 0, i32 2
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %344, label %343, !prof !5

343:                                              ; preds = %339
  store i32 0, i32* %340, align 4
  br label %344

344:                                              ; preds = %343, %339
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %338) #9
  store float* null, float** %335, align 8
  br label %345

345:                                              ; preds = %344, %334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #9
  br label %346

346:                                              ; preds = %345, %309, %264
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %347 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %348 = load i64*, i64** %347, align 8
  %349 = icmp eq i64* %348, null
  br i1 %349, label %359, label %350

350:                                              ; preds = %346
  %351 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %239, align 8
  %352 = bitcast %"class.v8::Isolate"* %351 to %"class.v8::internal::Isolate"*
  %353 = load i64, i64* %348, align 8
  %354 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %352, i64 %353) #9
  %355 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %351) #9
  br i1 %355, label %359, label %356

356:                                              ; preds = %350
  %357 = bitcast i64* %354 to %"class.v8::Value"*
  %358 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %351, %"class.v8::Value"* %357) #9
  br label %359

359:                                              ; preds = %356, %350, %346
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #9
  br label %375

375:                                              ; preds = %359, %371, %374
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %232) #9
  br label %404

376:                                              ; preds = %224
  %377 = load i32, i32* %44, align 8
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %404

379:                                              ; preds = %376
  %380 = load i32, i32* %28, align 8
  %381 = icmp slt i32 %380, 2
  br i1 %381, label %382, label %403, !prof !5

382:                                              ; preds = %27, %379
  %383 = phi i32 [ %380, %379 ], [ %29, %27 ]
  %384 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #9
  %385 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %383) #9
  %386 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %385, %"class.WTF::StringImpl"** %386, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #9
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %386, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %402, label %389

389:                                              ; preds = %382
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  br i1 %393, label %396, label %398

396:                                              ; preds = %389
  %397 = add i32 %395, -1
  store i32 %397, i32* %394, align 4
  br label %398

398:                                              ; preds = %396, %389
  %399 = phi i32 [ %397, %396 ], [ %395, %389 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %387) #9
  br label %402

402:                                              ; preds = %382, %398, %401
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #9
  br label %404

403:                                              ; preds = %379
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0)) #9
  br label %404

404:                                              ; preds = %376, %403, %402, %375, %194
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %405 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %406 = load i64*, i64** %405, align 8
  %407 = icmp eq i64* %406, null
  br i1 %407, label %417, label %408

408:                                              ; preds = %404
  %409 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %410 = bitcast %"class.v8::Isolate"* %409 to %"class.v8::internal::Isolate"*
  %411 = load i64, i64* %406, align 8
  %412 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %410, i64 %411) #9
  %413 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %409) #9
  br i1 %413, label %417, label %414

414:                                              ; preds = %408
  %415 = bitcast i64* %412 to %"class.v8::Value"*
  %416 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %409, %"class.v8::Value"* %415) #9
  br label %417

417:                                              ; preds = %414, %408, %404
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %418, null
  br i1 %419, label %433, label %420

420:                                              ; preds = %417
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #9
  br label %433

433:                                              ; preds = %417, %429, %432
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context36VertexAttribPointerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.431, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 6
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %227

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %227

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %107) #9
  br i1 %108, label %109, label %112, !prof !4

109:                                              ; preds = %106
  %110 = bitcast %"class.v8::Value"* %107 to %"class.v8::Int32"*
  %111 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %110) #9
  br label %114

112:                                              ; preds = %106
  %113 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %107, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i32 [ %111, %109 ], [ %113, %112 ]
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %227

118:                                              ; preds = %114
  %119 = load i32, i32* %20, align 8
  %120 = icmp sgt i32 %119, 2
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %4, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %44, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 2
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %132) #9
  br i1 %133, label %134, label %137, !prof !4

134:                                              ; preds = %131
  %135 = bitcast %"class.v8::Value"* %132 to %"class.v8::Uint32"*
  %136 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %135) #9
  br label %144

137:                                              ; preds = %131
  %138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %132) #9
  br i1 %138, label %139, label %142, !prof !4

139:                                              ; preds = %137
  %140 = bitcast %"class.v8::Value"* %132 to %"class.v8::Int32"*
  %141 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %140) #9
  br label %144

142:                                              ; preds = %137
  %143 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %132, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %144

144:                                              ; preds = %134, %139, %142
  %145 = phi i32 [ %136, %134 ], [ %141, %139 ], [ %143, %142 ]
  %146 = load i32, i32* %17, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %227

148:                                              ; preds = %144
  %149 = load i32, i32* %20, align 8
  %150 = icmp sgt i32 %149, 3
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = load i64*, i64** %4, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 1
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, 160
  %156 = inttoptr i64 %155 to %"class.v8::Value"*
  br label %161

157:                                              ; preds = %148
  %158 = load i64*, i64** %44, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 3
  %160 = bitcast i64* %159 to %"class.v8::Value"*
  br label %161

161:                                              ; preds = %151, %157
  %162 = phi %"class.v8::Value"* [ %156, %151 ], [ %160, %157 ]
  %163 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %162) #9
  br i1 %163, label %164, label %167, !prof !4

164:                                              ; preds = %161
  %165 = bitcast %"class.v8::Value"* %162 to %"class.v8::Boolean"*
  %166 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %165) #9
  br label %169

167:                                              ; preds = %161
  %168 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %162, %"class.v8::Isolate"* %8) #9
  br label %169

169:                                              ; preds = %164, %167
  %170 = phi i1 [ %166, %164 ], [ %168, %167 ]
  %171 = zext i1 %170 to i8
  %172 = load i32, i32* %17, align 8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %227

174:                                              ; preds = %169
  %175 = load i32, i32* %20, align 8
  %176 = icmp sgt i32 %175, 4
  br i1 %176, label %183, label %177

177:                                              ; preds = %174
  %178 = load i64*, i64** %4, align 8
  %179 = getelementptr inbounds i64, i64* %178, i64 1
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, 160
  %182 = inttoptr i64 %181 to %"class.v8::Value"*
  br label %187

183:                                              ; preds = %174
  %184 = load i64*, i64** %44, align 8
  %185 = getelementptr inbounds i64, i64* %184, i64 4
  %186 = bitcast i64* %185 to %"class.v8::Value"*
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi %"class.v8::Value"* [ %182, %177 ], [ %186, %183 ]
  %189 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %188) #9
  br i1 %189, label %190, label %193, !prof !4

190:                                              ; preds = %187
  %191 = bitcast %"class.v8::Value"* %188 to %"class.v8::Int32"*
  %192 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %191) #9
  br label %195

193:                                              ; preds = %187
  %194 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %188, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %195

195:                                              ; preds = %190, %193
  %196 = phi i32 [ %192, %190 ], [ %194, %193 ]
  %197 = load i32, i32* %17, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %227

199:                                              ; preds = %195
  %200 = load i32, i32* %20, align 8
  %201 = icmp sgt i32 %200, 5
  br i1 %201, label %208, label %202

202:                                              ; preds = %199
  %203 = load i64*, i64** %4, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 1
  %205 = load i64, i64* %204, align 8
  %206 = add i64 %205, 160
  %207 = inttoptr i64 %206 to %"class.v8::Value"*
  br label %212

208:                                              ; preds = %199
  %209 = load i64*, i64** %44, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 5
  %211 = bitcast i64* %210 to %"class.v8::Value"*
  br label %212

212:                                              ; preds = %202, %208
  %213 = phi %"class.v8::Value"* [ %207, %202 ], [ %211, %208 ]
  %214 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %213) #9
  br i1 %214, label %215, label %219, !prof !4

215:                                              ; preds = %212
  %216 = bitcast %"class.v8::Value"* %213 to %"class.v8::Int32"*
  %217 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %216) #9
  %218 = sext i32 %217 to i64
  br label %221

219:                                              ; preds = %212
  %220 = call i64 @_ZN5blink11ToInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %213, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %221

221:                                              ; preds = %215, %219
  %222 = phi i64 [ %218, %215 ], [ %220, %219 ]
  %223 = load i32, i32* %17, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %221
  %226 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase19vertexAttribPointerEjijhil(%"class.blink::WebGLRenderingContextBase"* %226, i32 %93, i32 %115, i32 %145, i8 zeroext %171, i32 %196, i64 %222) #9
  br label %227

227:                                              ; preds = %221, %195, %169, %144, %114, %88, %225, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %228 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %229 = load i64*, i64** %228, align 8
  %230 = icmp eq i64* %229, null
  br i1 %230, label %240, label %231

231:                                              ; preds = %227
  %232 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %233 = bitcast %"class.v8::Isolate"* %232 to %"class.v8::internal::Isolate"*
  %234 = load i64, i64* %229, align 8
  %235 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %233, i64 %234) #9
  %236 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %232) #9
  br i1 %236, label %240, label %237

237:                                              ; preds = %231
  %238 = bitcast i64* %235 to %"class.v8::Value"*
  %239 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %232, %"class.v8::Value"* %238) #9
  br label %240

240:                                              ; preds = %237, %231, %227
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %256, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %241) #9
  br label %256

256:                                              ; preds = %240, %252, %255
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context25ViewportOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.432, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %165

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %82 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %81) #9
  br label %87

83:                                               ; preds = %76
  %84 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %165

87:                                               ; preds = %80, %83
  %88 = phi i32 [ %82, %80 ], [ %84, %83 ]
  %89 = load i32, i32* %20, align 8
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 160
  %96 = inttoptr i64 %95 to %"class.v8::Value"*
  br label %101

97:                                               ; preds = %87
  %98 = load i64*, i64** %44, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = bitcast i64* %99 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi %"class.v8::Value"* [ %96, %91 ], [ %100, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %102) #9
  br i1 %103, label %104, label %107, !prof !4

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::Value"* %102 to %"class.v8::Int32"*
  %106 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %105) #9
  br label %109

107:                                              ; preds = %101
  %108 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %102, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi i32 [ %106, %104 ], [ %108, %107 ]
  %111 = load i32, i32* %17, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %165

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 8
  %115 = icmp sgt i32 %114, 2
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = load i64*, i64** %4, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %113
  %123 = load i64*, i64** %44, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 2
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %127) #9
  br i1 %128, label %129, label %132, !prof !4

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Int32"*
  %131 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %130) #9
  br label %134

132:                                              ; preds = %126
  %133 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %127, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi i32 [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %165

138:                                              ; preds = %134
  %139 = load i32, i32* %20, align 8
  %140 = icmp sgt i32 %139, 3
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 160
  %146 = inttoptr i64 %145 to %"class.v8::Value"*
  br label %151

147:                                              ; preds = %138
  %148 = load i64*, i64** %44, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = bitcast i64* %149 to %"class.v8::Value"*
  br label %151

151:                                              ; preds = %141, %147
  %152 = phi %"class.v8::Value"* [ %146, %141 ], [ %150, %147 ]
  %153 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %152) #9
  br i1 %153, label %154, label %157, !prof !4

154:                                              ; preds = %151
  %155 = bitcast %"class.v8::Value"* %152 to %"class.v8::Int32"*
  %156 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %155) #9
  br label %159

157:                                              ; preds = %151
  %158 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %152, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %159

159:                                              ; preds = %154, %157
  %160 = phi i32 [ %156, %154 ], [ %158, %157 ]
  %161 = load i32, i32* %17, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase8viewportEiiii(%"class.blink::WebGLRenderingContextBase"* %164, i32 %88, i32 %110, i32 %135, i32 %160) #9
  br label %165

165:                                              ; preds = %159, %134, %109, %83, %163, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %171 = bitcast %"class.v8::Isolate"* %170 to %"class.v8::internal::Isolate"*
  %172 = load i64, i64* %167, align 8
  %173 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %171, i64 %172) #9
  %174 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %170) #9
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = bitcast i64* %173 to %"class.v8::Value"*
  %177 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %170, %"class.v8::Value"* %176) #9
  br label %178

178:                                              ; preds = %175, %169, %165
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #9
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27BindBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #9
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 148
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !4

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 136
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #9
  br label %189

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.433, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 2
  br i1 %52, label %53, label %73, !prof !5

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %51) #9
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  br label %159

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %75) #9
  br i1 %76, label %77, label %80, !prof !4

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Uint32"*
  %79 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %78) #9
  br label %89

80:                                               ; preds = %73
  %81 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %75) #9
  br i1 %81, label %82, label %85, !prof !4

82:                                               ; preds = %80
  %83 = bitcast %"class.v8::Value"* %75 to %"class.v8::Int32"*
  %84 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %83) #9
  br label %89

85:                                               ; preds = %80
  %86 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %87 = load i32, i32* %47, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %159

89:                                               ; preds = %82, %77, %85
  %90 = phi i32 [ %86, %85 ], [ %84, %82 ], [ %79, %77 ]
  %91 = load i32, i32* %50, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load i64*, i64** %34, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %89
  %100 = load i64*, i64** %4, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %93, %99
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLBuffer18wrapper_type_info_E, align 8
  %106 = ptrtoint %"class.v8::Isolate"* %38 to i64
  %107 = add i64 %106, 8
  %108 = inttoptr i64 %107 to %"class.blink::V8PerIsolateData"**
  %109 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %108, align 8
  %110 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %109, %"struct.blink::WrapperTypeInfo"* %105, %"class.v8::Value"* %104) #9
  %111 = bitcast %"class.v8::Value"* %104 to i64*
  %112 = load i64, i64* %111, align 8
  br i1 %110, label %113, label %133

113:                                              ; preds = %103
  %114 = add i64 %112, -1
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i64 %112, -4294967296
  %118 = zext i32 %116 to i64
  %119 = or i64 %117, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load i16, i16* %121, align 2
  switch i16 %122, label %127 [
    i16 1057, label %123
    i16 1056, label %123
    i16 1040, label %123
  ]

123:                                              ; preds = %113, %113, %113
  %124 = add i64 %112, 19
  %125 = inttoptr i64 %124 to i8**
  %126 = load i8*, i8** %125, align 1
  br label %130

127:                                              ; preds = %113
  %128 = bitcast %"class.v8::Value"* %104 to %"class.v8::Object"*
  %129 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %128, i32 1) #9
  br label %130

130:                                              ; preds = %127, %123
  %131 = phi i8* [ %126, %123 ], [ %129, %127 ]
  %132 = bitcast i8* %131 to %"class.blink::WebGLBuffer"*
  br label %153

133:                                              ; preds = %103
  %134 = and i64 %112, 3
  %135 = icmp eq i64 %134, 1
  br i1 %135, label %136, label %152

136:                                              ; preds = %133
  %137 = add i64 %112, -1
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i64 %112, -4294967296
  %141 = zext i32 %139 to i64
  %142 = or i64 %140, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load i16, i16* %144, align 2
  %146 = icmp eq i16 %145, 67
  br i1 %146, label %147, label %152

147:                                              ; preds = %136
  %148 = add i64 %112, 23
  %149 = inttoptr i64 %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = ashr i32 %150, 1
  switch i32 %151, label %152 [
    i32 5, label %153
    i32 3, label %153
  ]

152:                                              ; preds = %147, %136, %133
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %105, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %153

153:                                              ; preds = %130, %147, %147, %152
  %154 = phi %"class.blink::WebGLBuffer"* [ %132, %130 ], [ null, %152 ], [ null, %147 ], [ null, %147 ]
  %155 = load i32, i32* %47, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %153
  %158 = bitcast i8* %25 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10bindBufferEjPNS_11WebGLBufferE(%"class.blink::WebGLRenderingContextBase"* %158, i32 %90, %"class.blink::WebGLBuffer"* %154) #9
  br label %159

159:                                              ; preds = %153, %85, %157, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = icmp eq i64* %161, null
  br i1 %162, label %172, label %163

163:                                              ; preds = %159
  %164 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %165 = bitcast %"class.v8::Isolate"* %164 to %"class.v8::internal::Isolate"*
  %166 = load i64, i64* %161, align 8
  %167 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %165, i64 %166) #9
  %168 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %164) #9
  br i1 %168, label %172, label %169

169:                                              ; preds = %163
  %170 = bitcast i64* %167 to %"class.v8::Value"*
  %171 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %164, %"class.v8::Value"* %170) #9
  br label %172

172:                                              ; preds = %169, %163, %159
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #9
  br label %188

188:                                              ; preds = %172, %184, %187
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #9
  br label %189

189:                                              ; preds = %188, %30
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context44BindBufferOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEjNS3_INS2_5ValueEEERNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, i32, %"class.v8::Value"*, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %5 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %6 = alloca %"class.blink::NoAllocDirectCallExceptionState", align 8
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !5

11:                                               ; preds = %4
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %4 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %17, align 8
  %20 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #9
  %21 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5, %"class.v8::Isolate"* %20, i32 0) #9
  %23 = bitcast %"class.v8::Object"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %24, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  switch i16 %33, label %38 [
    i16 1057, label %34
    i16 1056, label %34
    i16 1040, label %34
  ]

34:                                               ; preds = %13, %13, %13
  %35 = add i64 %24, 19
  %36 = inttoptr i64 %35 to i8**
  %37 = load i8*, i8** %36, align 1
  br label %40

38:                                               ; preds = %13
  %39 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi i8* [ %37, %34 ], [ %39, %38 ]
  %42 = icmp eq i8* %41, null
  %43 = getelementptr inbounds i8, i8* %41, i64 136
  %44 = bitcast i8* %43 to %"class.blink::NoAllocDirectCallHost"*
  %45 = select i1 %42, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %44
  %46 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %45, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %3, %"struct.v8::FastApiCallbackOptions"** %46, align 8
  %47 = bitcast %"class.blink::NoAllocDirectCallExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %47) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 56, i1 false)
  %48 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 1, i32 0
  store i16 6, i16* %49, align 8
  %50 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %50, align 2
  %51 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 1, i32 2
  %52 = bitcast i8** %51 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.433, i64 0, i64 0)>, <2 x i8*>* %52, align 8
  %53 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %53, align 8
  %54 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 3
  store %"class.v8::Isolate"* %20, %"class.v8::Isolate"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 4
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %57 = bitcast %"class.WTF::StringImpl"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink31NoAllocDirectCallExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %58 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 1
  store %"class.blink::NoAllocDirectCallHost"* %45, %"class.blink::NoAllocDirectCallHost"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %6, i64 0, i32 0
  %61 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11WebGLBuffer18wrapper_type_info_E, align 8
  %62 = ptrtoint %"class.v8::Isolate"* %20 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to %"class.blink::V8PerIsolateData"**
  %65 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %64, align 8
  %66 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %65, %"struct.blink::WrapperTypeInfo"* %61, %"class.v8::Value"* %2) #9
  %67 = bitcast %"class.v8::Value"* %2 to i64*
  %68 = load i64, i64* %67, align 8
  br i1 %66, label %69, label %89

69:                                               ; preds = %40
  %70 = add i64 %68, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = and i64 %68, -4294967296
  %74 = zext i32 %72 to i64
  %75 = or i64 %73, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load i16, i16* %77, align 2
  switch i16 %78, label %83 [
    i16 1057, label %79
    i16 1056, label %79
    i16 1040, label %79
  ]

79:                                               ; preds = %69, %69, %69
  %80 = add i64 %68, 19
  %81 = inttoptr i64 %80 to i8**
  %82 = load i8*, i8** %81, align 1
  br label %86

83:                                               ; preds = %69
  %84 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %85 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %84, i32 1) #9
  br label %86

86:                                               ; preds = %83, %79
  %87 = phi i8* [ %82, %79 ], [ %85, %83 ]
  %88 = bitcast i8* %87 to %"class.blink::WebGLBuffer"*
  br label %109

89:                                               ; preds = %40
  %90 = and i64 %68, 3
  %91 = icmp eq i64 %90, 1
  br i1 %91, label %92, label %108

92:                                               ; preds = %89
  %93 = add i64 %68, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = and i64 %68, -4294967296
  %97 = zext i32 %95 to i64
  %98 = or i64 %96, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load i16, i16* %100, align 2
  %102 = icmp eq i16 %101, 67
  br i1 %102, label %103, label %108

103:                                              ; preds = %92
  %104 = add i64 %68, 23
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = ashr i32 %106, 1
  switch i32 %107, label %108 [
    i32 5, label %109
    i32 3, label %109
  ]

108:                                              ; preds = %103, %92, %89
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %61, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %60) #9
  br label %109

109:                                              ; preds = %86, %103, %103, %108
  %110 = phi %"class.blink::WebGLBuffer"* [ %88, %86 ], [ null, %108 ], [ null, %103 ], [ null, %103 ]
  %111 = load i32, i32* %55, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = bitcast i8* %41 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10bindBufferEjPNS_11WebGLBufferE(%"class.blink::WebGLRenderingContextBase"* %114, i32 %1, %"class.blink::WebGLBuffer"* %110) #9
  br label %115

115:                                              ; preds = %109, %113
  call void @_ZN5blink31NoAllocDirectCallExceptionStateD1Ev(%"class.blink::NoAllocDirectCallExceptionState"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %47) #9
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %46, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  %116 = load i64, i64* %17, align 8
  %117 = add i64 %116, -1
  store i64 %117, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context27DrawArraysOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #9
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 148
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !4

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 136
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #9
  br label %172

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.434, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 3
  br i1 %52, label %53, label %73, !prof !5

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %51) #9
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  br label %142

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %75) #9
  br i1 %76, label %77, label %80, !prof !4

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Uint32"*
  %79 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %78) #9
  br label %89

80:                                               ; preds = %73
  %81 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %75) #9
  br i1 %81, label %82, label %85, !prof !4

82:                                               ; preds = %80
  %83 = bitcast %"class.v8::Value"* %75 to %"class.v8::Int32"*
  %84 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %83) #9
  br label %89

85:                                               ; preds = %80
  %86 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %87 = load i32, i32* %47, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %142

89:                                               ; preds = %82, %77, %85
  %90 = phi i32 [ %86, %85 ], [ %84, %82 ], [ %79, %77 ]
  %91 = load i32, i32* %50, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load i64*, i64** %34, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %89
  %100 = load i64*, i64** %4, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %93, %99
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %104) #9
  br i1 %105, label %106, label %109, !prof !4

106:                                              ; preds = %103
  %107 = bitcast %"class.v8::Value"* %104 to %"class.v8::Int32"*
  %108 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %107) #9
  br label %111

109:                                              ; preds = %103
  %110 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %104, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %111

111:                                              ; preds = %106, %109
  %112 = phi i32 [ %108, %106 ], [ %110, %109 ]
  %113 = load i32, i32* %47, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %142

115:                                              ; preds = %111
  %116 = load i32, i32* %50, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %34, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %4, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %118, %124
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %129) #9
  br i1 %130, label %131, label %134, !prof !4

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Int32"*
  %133 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %132) #9
  br label %136

134:                                              ; preds = %128
  %135 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %129, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %136

136:                                              ; preds = %131, %134
  %137 = phi i32 [ %133, %131 ], [ %135, %134 ]
  %138 = load i32, i32* %47, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast i8* %25 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10drawArraysEjii(%"class.blink::WebGLRenderingContextBase"* %141, i32 %90, i32 %112, i32 %137) #9
  br label %142

142:                                              ; preds = %136, %111, %85, %140, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %142
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #9
  br label %172

172:                                              ; preds = %171, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context44DrawArraysOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEjiiRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, i32, i32, i32, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %6 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !5

11:                                               ; preds = %5
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %5 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %17, align 8
  %20 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #9
  %21 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %6, %"class.v8::Isolate"* %20, i32 0) #9
  %23 = bitcast %"class.v8::Object"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %24, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  switch i16 %33, label %38 [
    i16 1057, label %34
    i16 1056, label %34
    i16 1040, label %34
  ]

34:                                               ; preds = %13, %13, %13
  %35 = add i64 %24, 19
  %36 = inttoptr i64 %35 to i8**
  %37 = load i8*, i8** %36, align 1
  br label %40

38:                                               ; preds = %13
  %39 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi i8* [ %37, %34 ], [ %39, %38 ]
  %42 = icmp eq i8* %41, null
  %43 = getelementptr inbounds i8, i8* %41, i64 136
  %44 = bitcast i8* %43 to %"class.blink::NoAllocDirectCallHost"*
  %45 = select i1 %42, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %44
  %46 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %45, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %4, %"struct.v8::FastApiCallbackOptions"** %46, align 8
  %47 = bitcast i8* %41 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10drawArraysEjii(%"class.blink::WebGLRenderingContextBase"* %47, i32 %1, i32 %2, i32 %3) #9
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %46, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  %48 = load i64, i64* %17, align 8
  %49 = add i64 %48, -1
  store i64 %49, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context29DrawElementsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #9
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 148
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !4

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 136
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #9
  br label %203

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.435, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 4
  br i1 %52, label %53, label %73, !prof !5

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %51) #9
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  br label %173

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %75) #9
  br i1 %76, label %77, label %80, !prof !4

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Uint32"*
  %79 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %78) #9
  br label %89

80:                                               ; preds = %73
  %81 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %75) #9
  br i1 %81, label %82, label %85, !prof !4

82:                                               ; preds = %80
  %83 = bitcast %"class.v8::Value"* %75 to %"class.v8::Int32"*
  %84 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %83) #9
  br label %89

85:                                               ; preds = %80
  %86 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %87 = load i32, i32* %47, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %173

89:                                               ; preds = %82, %77, %85
  %90 = phi i32 [ %86, %85 ], [ %84, %82 ], [ %79, %77 ]
  %91 = load i32, i32* %50, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load i64*, i64** %34, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %89
  %100 = load i64*, i64** %4, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %93, %99
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %104) #9
  br i1 %105, label %106, label %109, !prof !4

106:                                              ; preds = %103
  %107 = bitcast %"class.v8::Value"* %104 to %"class.v8::Int32"*
  %108 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %107) #9
  br label %111

109:                                              ; preds = %103
  %110 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %104, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %111

111:                                              ; preds = %106, %109
  %112 = phi i32 [ %108, %106 ], [ %110, %109 ]
  %113 = load i32, i32* %47, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %173

115:                                              ; preds = %111
  %116 = load i32, i32* %50, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %34, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %4, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %118, %124
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %129) #9
  br i1 %130, label %131, label %134, !prof !4

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Uint32"*
  %133 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %132) #9
  br label %141

134:                                              ; preds = %128
  %135 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %129) #9
  br i1 %135, label %136, label %139, !prof !4

136:                                              ; preds = %134
  %137 = bitcast %"class.v8::Value"* %129 to %"class.v8::Int32"*
  %138 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %137) #9
  br label %141

139:                                              ; preds = %134
  %140 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %129, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %141

141:                                              ; preds = %131, %136, %139
  %142 = phi i32 [ %133, %131 ], [ %138, %136 ], [ %140, %139 ]
  %143 = load i32, i32* %47, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %173

145:                                              ; preds = %141
  %146 = load i32, i32* %50, align 8
  %147 = icmp sgt i32 %146, 3
  br i1 %147, label %154, label %148

148:                                              ; preds = %145
  %149 = load i64*, i64** %34, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 1
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 160
  %153 = inttoptr i64 %152 to %"class.v8::Value"*
  br label %158

154:                                              ; preds = %145
  %155 = load i64*, i64** %4, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  %157 = bitcast i64* %156 to %"class.v8::Value"*
  br label %158

158:                                              ; preds = %148, %154
  %159 = phi %"class.v8::Value"* [ %153, %148 ], [ %157, %154 ]
  %160 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %159) #9
  br i1 %160, label %161, label %165, !prof !4

161:                                              ; preds = %158
  %162 = bitcast %"class.v8::Value"* %159 to %"class.v8::Int32"*
  %163 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %162) #9
  %164 = sext i32 %163 to i64
  br label %167

165:                                              ; preds = %158
  %166 = call i64 @_ZN5blink11ToInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %159, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %167

167:                                              ; preds = %161, %165
  %168 = phi i64 [ %164, %161 ], [ %166, %165 ]
  %169 = load i32, i32* %47, align 8
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %167
  %172 = bitcast i8* %25 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12drawElementsEjijl(%"class.blink::WebGLRenderingContextBase"* %172, i32 %90, i32 %112, i32 %142, i64 %168) #9
  br label %173

173:                                              ; preds = %167, %141, %111, %85, %171, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %174 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %175, null
  br i1 %176, label %186, label %177

177:                                              ; preds = %173
  %178 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %179 = bitcast %"class.v8::Isolate"* %178 to %"class.v8::internal::Isolate"*
  %180 = load i64, i64* %175, align 8
  %181 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %179, i64 %180) #9
  %182 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %178) #9
  br i1 %182, label %186, label %183

183:                                              ; preds = %177
  %184 = bitcast i64* %181 to %"class.v8::Value"*
  %185 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %184) #9
  br label %186

186:                                              ; preds = %183, %177, %173
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #9
  br label %202

202:                                              ; preds = %186, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #9
  br label %203

203:                                              ; preds = %202, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context46DrawElementsOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEjijlRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, i32, i32, i32, i64, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %7 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #9
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !5

12:                                               ; preds = %6
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #9
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi i8* [ %13, %12 ], [ %10, %6 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  %21 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #9
  %22 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %23 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7, %"class.v8::Isolate"* %21, i32 0) #9
  %24 = bitcast %"class.v8::Object"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %25, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %39 [
    i16 1057, label %35
    i16 1056, label %35
    i16 1040, label %35
  ]

35:                                               ; preds = %14, %14, %14
  %36 = add i64 %25, 19
  %37 = inttoptr i64 %36 to i8**
  %38 = load i8*, i8** %37, align 1
  br label %41

39:                                               ; preds = %14
  %40 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #9
  br label %41

41:                                               ; preds = %35, %39
  %42 = phi i8* [ %38, %35 ], [ %40, %39 ]
  %43 = icmp eq i8* %42, null
  %44 = getelementptr inbounds i8, i8* %42, i64 136
  %45 = bitcast i8* %44 to %"class.blink::NoAllocDirectCallHost"*
  %46 = select i1 %43, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %45
  %47 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %46, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %5, %"struct.v8::FastApiCallbackOptions"** %47, align 8
  %48 = bitcast i8* %42 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase12drawElementsEjijl(%"class.blink::WebGLRenderingContextBase"* %48, i32 %1, i32 %2, i32 %3, i64 %4) #9
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %47, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  %49 = load i64, i64* %18, align 8
  %50 = add i64 %49, -1
  store i64 %50, i64* %18, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_32NoAllocDirectCallOperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.184"* byval(%"class.base::span.184") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context23CommitOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::WebGLRenderingContextBase"*
  tail call void @_ZN5blink25WebGLRenderingContextBase6commitEv(%"class.blink::WebGLRenderingContextBase"* %24) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.448, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.449, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.448, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.450, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context33MakeXRCompatibleOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %4 = alloca %"class.blink::ScriptPromise", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 -1
  %13 = bitcast i64* %12 to %"class.v8::Object"*
  %14 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %19 = bitcast i8** %18 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.437, i64 0, i64 0)>, <2 x i8*>* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %24 = bitcast %"class.WTF::StringImpl"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #9
  %25 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %26, align 8
  store %"class.blink::ExceptionState"* %2, %"class.blink::ExceptionState"** %27, align 8
  %28 = bitcast i64* %12 to %"class.v8::Value"*
  %29 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to %"class.blink::V8PerIsolateData"**
  %32 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %31, align 8
  %33 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %32, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink23V8WebGLRenderingContext18wrapper_type_info_E, %"class.v8::Value"* %28) #9
  br i1 %33, label %35, label %34

34:                                               ; preds = %1
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.451, i64 0, i64 0)) #9
  br label %94

35:                                               ; preds = %1
  %36 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #9
  %37 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %36) #9
  %38 = icmp eq %"class.blink::ExecutionContext"* %37, null
  %39 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %37, i64 0, i32 3
  %40 = icmp eq %"class.blink::UseCounter"* %39, null
  %41 = or i1 %38, %40
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::UseCounter"* %39 to void (%"class.blink::UseCounter"*, i32)***
  %44 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %44, i64 3
  %46 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %45, align 8
  call void %46(%"class.blink::UseCounter"* nonnull %39, i32 3543) #9
  br label %47

47:                                               ; preds = %35, %42
  %48 = load i64, i64* %12, align 8
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i64 %48, -4294967296
  %53 = zext i32 %51 to i64
  %54 = or i64 %52, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load i16, i16* %56, align 2
  switch i16 %57, label %62 [
    i16 1057, label %58
    i16 1056, label %58
    i16 1040, label %58
  ]

58:                                               ; preds = %47, %47, %47
  %59 = add i64 %48, 19
  %60 = inttoptr i64 %59 to i8**
  %61 = load i8*, i8** %60, align 1
  br label %64

62:                                               ; preds = %47
  %63 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %13, i32 1) #9
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi i8* [ %61, %58 ], [ %63, %62 ]
  %66 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %13) #9
  %67 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %66)
  %68 = bitcast %"class.blink::ScriptPromise"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #9
  %69 = bitcast i8* %65 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase16makeXRCompatibleEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %4, %"class.blink::WebGLRenderingContextBase"* %69, %"class.blink::ScriptState"* %67, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %70 = load i32, i32* %22, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %82

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %4, i64 0, i32 1
  %74 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %73) #9
  %75 = load i64*, i64** %5, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 3
  %77 = icmp eq %"class.v8::Value"* %74, null
  %78 = bitcast %"class.v8::Value"* %74 to i64*
  %79 = getelementptr inbounds i64, i64* %75, i64 2
  %80 = select i1 %77, i64* %79, i64* %78, !prof !5
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %76, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %37, i32 3543) #9
  br label %82

82:                                               ; preds = %64, %72
  %83 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %4, i64 0, i32 1, i32 1, i32 1, i32 0
  %84 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %83, align 8
  %85 = icmp eq %"class.blink::DOMWrapperWorld"* %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %84, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %87) #9
  %88 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %84) #9
  %92 = bitcast %"class.blink::DOMWrapperWorld"* %84 to i8*
  call void @free(i8* %92) #9
  br label %93

93:                                               ; preds = %82, %86, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #9
  br label %94

94:                                               ; preds = %93, %34
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %95 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %96, null
  br i1 %97, label %107, label %98

98:                                               ; preds = %94
  %99 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %100 = bitcast %"class.v8::Isolate"* %99 to %"class.v8::internal::Isolate"*
  %101 = load i64, i64* %96, align 8
  %102 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %100, i64 %101) #9
  %103 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %99) #9
  br i1 %103, label %107, label %104

104:                                              ; preds = %98
  %105 = bitcast i64* %102 to %"class.v8::Value"*
  %106 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %99, %"class.v8::Value"* %105) #9
  br label %107

107:                                              ; preds = %104, %98, %94
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %123

123:                                              ; preds = %107, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #9
  ret void
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.blink::V8UnionHTMLCanvasElementOrOffscreenCanvas"* @_ZNK5blink25WebGLRenderingContextBase24getHTMLOrOffscreenCanvasEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink41V8UnionHTMLCanvasElementOrOffscreenCanvas9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionHTMLCanvasElementOrOffscreenCanvas"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare i32 @_ZNK5blink25WebGLRenderingContextBase18drawingBufferWidthEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink25WebGLRenderingContextBase19drawingBufferHeightEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13activeTextureEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12attachShaderEPNS_12WebGLProgramEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*, %"class.blink::WebGLShader"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase18bindAttribLocationEPNS_12WebGLProgramEjRKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.1524"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.1524"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #9
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #9
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.1524"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #9
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15bindFramebufferEjPNS_16WebGLFramebufferE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::WebGLFramebuffer"*) unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16bindRenderbufferEjPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::WebGLRenderbuffer"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase11bindTextureEjPNS_12WebGLTextureE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::WebGLTexture"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10blendColorEffff(%"class.blink::WebGLRenderingContextBase"*, float, float, float, float) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"*) local_unnamed_addr #2

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #2

declare double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13blendEquationEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase21blendEquationSeparateEjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9blendFuncEjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase17blendFuncSeparateEjjjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_126v8_webgl_rendering_context28BufferDataOperationOverload3ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.311, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !5

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %143

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %78) #9
  br i1 %79, label %80, label %83, !prof !4

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Uint32"*
  %82 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %81) #9
  br label %92

83:                                               ; preds = %76
  %84 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %78) #9
  br i1 %84, label %85, label %88, !prof !4

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %78 to %"class.v8::Int32"*
  %87 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %86) #9
  br label %92

88:                                               ; preds = %83
  %89 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %90 = load i32, i32* %17, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %143

92:                                               ; preds = %85, %80, %88
  %93 = phi i32 [ %89, %88 ], [ %87, %85 ], [ %82, %80 ]
  %94 = load i32, i32* %20, align 8
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = load i64*, i64** %4, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %92
  %103 = load i64*, i64** %44, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %96, %102
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14DOMArrayBufferEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, i32 1, %"class.v8::Value"* %107, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %109 = load i32, i32* %17, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %143

111:                                              ; preds = %106
  %112 = load i32, i32* %20, align 8
  %113 = icmp sgt i32 %112, 2
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = load i64*, i64** %4, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %111
  %121 = load i64*, i64** %44, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 2
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %125) #9
  br i1 %126, label %127, label %130, !prof !4

127:                                              ; preds = %124
  %128 = bitcast %"class.v8::Value"* %125 to %"class.v8::Uint32"*
  %129 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %128) #9
  br label %137

130:                                              ; preds = %124
  %131 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %125) #9
  br i1 %131, label %132, label %135, !prof !4

132:                                              ; preds = %130
  %133 = bitcast %"class.v8::Value"* %125 to %"class.v8::Int32"*
  %134 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %133) #9
  br label %137

135:                                              ; preds = %130
  %136 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %125, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %137

137:                                              ; preds = %127, %132, %135
  %138 = phi i32 [ %129, %127 ], [ %134, %132 ], [ %136, %135 ]
  %139 = load i32, i32* %17, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = bitcast i8* %77 to %"class.blink::WebGLRenderingContextBase"*
  call void @_ZN5blink25WebGLRenderingContextBase10bufferDataEjPNS_14DOMArrayBufferEj(%"class.blink::WebGLRenderingContextBase"* %142, i32 %93, %"class.blink::DOMArrayBuffer"* %108, i32 %138) #9
  br label %143

143:                                              ; preds = %137, %106, %88, %141, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %144 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = icmp eq i64* %145, null
  br i1 %146, label %156, label %147

147:                                              ; preds = %143
  %148 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %149 = bitcast %"class.v8::Isolate"* %148 to %"class.v8::internal::Isolate"*
  %150 = load i64, i64* %145, align 8
  %151 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %149, i64 %150) #9
  %152 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %148) #9
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = bitcast i64* %151 to %"class.v8::Value"*
  %155 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %148, %"class.v8::Value"* %154) #9
  br label %156

156:                                              ; preds = %153, %147, %143
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %156, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

declare zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14DOMArrayBufferEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10bufferDataEjPNS_14DOMArrayBufferEj(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::DOMArrayBuffer"*, i32) local_unnamed_addr #2

declare void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_18DOMArrayBufferViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10bufferDataEjNS_11MaybeSharedINS_18DOMArrayBufferViewEEEj(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::MaybeShared"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10bufferDataEjlj(%"class.blink::WebGLRenderingContextBase"*, i32, i64, i32) local_unnamed_addr #2

declare i64 @_ZN5blink11ToInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_14DOMArrayBufferEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13bufferSubDataEjlPNS_14DOMArrayBufferE(%"class.blink::WebGLRenderingContextBase"*, i32, i64, %"class.blink::DOMArrayBuffer"*) local_unnamed_addr #2

declare void @_ZN5blink17NativeValueTraitsINS_23FlexibleArrayBufferViewEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::FlexibleArrayBufferView"* sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13bufferSubDataEjlRKNS_23FlexibleArrayBufferViewE(%"class.blink::WebGLRenderingContextBase"*, i32, i64, %"class.blink::FlexibleArrayBufferView"* dereferenceable(88)) local_unnamed_addr #2

declare i32 @_ZN5blink25WebGLRenderingContextBase22checkFramebufferStatusEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase5clearEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10clearColorEffff(%"class.blink::WebGLRenderingContextBase"*, float, float, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10clearDepthEf(%"class.blink::WebGLRenderingContextBase"*, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12clearStencilEi(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9colorMaskEhhhh(%"class.blink::WebGLRenderingContextBase"*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13compileShaderEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLShader"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase20compressedTexImage2DEjijiiiNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, %"class.blink::MaybeShared"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase23compressedTexSubImage2DEjiiiiijNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, i32, %"class.blink::MaybeShared"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase14copyTexImage2DEjijiiiii(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase17copyTexSubImage2DEjiiiiiii(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::WebGLBuffer"* @_ZN5blink25WebGLRenderingContextBase12createBufferEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !5
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #9
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #9
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !5
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #9
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !5

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.blink::WebGLFramebuffer"* @_ZN5blink25WebGLRenderingContextBase17createFramebufferEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare %"class.blink::WebGLProgram"* @_ZN5blink25WebGLRenderingContextBase13createProgramEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare %"class.blink::WebGLRenderbuffer"* @_ZN5blink25WebGLRenderingContextBase18createRenderbufferEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare %"class.blink::WebGLShader"* @_ZN5blink25WebGLRenderingContextBase12createShaderEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare %"class.blink::WebGLTexture"* @_ZN5blink25WebGLRenderingContextBase13createTextureEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase8cullFaceEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12deleteBufferEPNS_11WebGLBufferE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLBuffer"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase17deleteFramebufferEPNS_16WebGLFramebufferE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLFramebuffer"*) unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13deleteProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase18deleteRenderbufferEPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderbuffer"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12deleteShaderEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLShader"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13deleteTextureEPNS_12WebGLTextureE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLTexture"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9depthFuncEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9depthMaskEh(%"class.blink::WebGLRenderingContextBase"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10depthRangeEff(%"class.blink::WebGLRenderingContextBase"*, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12detachShaderEPNS_12WebGLProgramEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*, %"class.blink::WebGLShader"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase7disableEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase24disableVertexAttribArrayEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase6enableEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase23enableVertexAttribArrayEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase6finishEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase5flushEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase23framebufferRenderbufferEjjjPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, %"class.blink::WebGLRenderbuffer"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase20framebufferTexture2DEjjjPNS_12WebGLTextureEi(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, %"class.blink::WebGLTexture"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9frontFaceEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase14generateMipmapEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare %"class.blink::WebGLActiveInfo"* @_ZN5blink25WebGLRenderingContextBase15getActiveAttribEPNS_12WebGLProgramEj(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*, i32) local_unnamed_addr #2

declare %"class.blink::WebGLActiveInfo"* @_ZN5blink25WebGLRenderingContextBase16getActiveUniformEPNS_12WebGLProgramEj(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase18getAttachedShadersEPNS_12WebGLProgramE(%"class.absl::optional.1535"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.blink::HeapVector.1547"* dereferenceable(16)) local_unnamed_addr #7 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #9
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #9
  %17 = getelementptr inbounds %"class.blink::HeapVector.1547", %"class.blink::HeapVector.1547"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #9
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #9
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.blink::HeapVector.1547", %"class.blink::HeapVector.1547"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.1553"*, %"class.blink::Member.1553"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Member.1553", %"class.blink::Member.1553"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %75, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.logging::CheckError"* %3 to i8*
  %42 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %43

43:                                               ; preds = %40, %71
  %44 = phi i32 [ 0, %40 ], [ %72, %71 ]
  %45 = phi %"class.blink::Member.1553"* [ %35, %40 ], [ %73, %71 ]
  %46 = getelementptr inbounds %"class.blink::Member.1553", %"class.blink::Member.1553"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %46, align 8
  %48 = icmp eq %"class.blink::ScriptWrappable"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.439, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.440, i64 0, i64 0)) #9
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %51

51:                                               ; preds = %49, %43
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %53 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* %47, %"class.v8::Isolate"* %52) #9
  %54 = bitcast %"class.v8::Object"* %53 to %"class.v8::Value"*
  %55 = icmp eq %"class.v8::Object"* %53, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::ScriptWrappable"* %47 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %58 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %58, i64 7
  %60 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, align 8
  %61 = call %"class.v8::Value"* %60(%"class.blink::ScriptWrappable"* %47, %"class.blink::ScriptState"* %0) #9
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi %"class.v8::Value"* [ %61, %56 ], [ %54, %51 ]
  %64 = icmp eq %"class.v8::Value"* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %33, i32 %44, %"class.v8::Value"* nonnull %63) #9
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %77, label %71, !prof !7

71:                                               ; preds = %65
  %72 = add i32 %44, 1
  %73 = getelementptr inbounds %"class.blink::Member.1553", %"class.blink::Member.1553"* %45, i64 1
  %74 = icmp eq %"class.blink::Member.1553"* %73, %38
  br i1 %74, label %75, label %43

75:                                               ; preds = %71, %32
  %76 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %77

77:                                               ; preds = %62, %65, %75
  %78 = phi %"class.v8::Value"* [ %76, %75 ], [ null, %65 ], [ null, %62 ]
  ret %"class.v8::Value"* %78
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #9
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #9
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #9
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #9
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #9
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

declare i32 @_ZN5blink25WebGLRenderingContextBase17getAttribLocationEPNS_12WebGLProgramERKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase18getBufferParameterEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, i32, i32) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare %"class.blink::WebGLContextAttributes"* @_ZNK5blink25WebGLRenderingContextBase20getContextAttributesEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i32 @_ZN5blink25WebGLRenderingContextBase8getErrorEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12getExtensionEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase33getFramebufferAttachmentParameterEPNS_11ScriptStateEjjj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, i32, i32, i32) unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12getParameterEPNS_11ScriptStateEj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, i32) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink25WebGLRenderingContextBase17getProgramInfoLogEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase19getProgramParameterEPNS_11ScriptStateEPNS_12WebGLProgramEj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, %"class.blink::WebGLProgram"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase24getRenderbufferParameterEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, i32, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink25WebGLRenderingContextBase16getShaderInfoLogEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLShader"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase18getShaderParameterEPNS_11ScriptStateEPNS_11WebGLShaderEj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, %"class.blink::WebGLShader"*, i32) local_unnamed_addr #2

declare %"class.blink::WebGLShaderPrecisionFormat"* @_ZN5blink25WebGLRenderingContextBase24getShaderPrecisionFormatEjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink25WebGLRenderingContextBase15getShaderSourceEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLShader"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase22getSupportedExtensionsEv(%"class.absl::optional.1559"* sret, %"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.WTF::Vector.1564"* dereferenceable(16)) local_unnamed_addr #7 comdat {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #9
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #9
  %17 = getelementptr inbounds %"class.WTF::Vector.1564", %"class.WTF::Vector.1564"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #9
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #9
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.WTF::Vector.1564", %"class.WTF::Vector.1564"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %76, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.WTF::StringView"* %3 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  %45 = bitcast %"class.WTF::StringView"* %3 to i64*
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %47 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %48

48:                                               ; preds = %40, %72
  %49 = phi i32 [ 0, %40 ], [ %73, %72 ]
  %50 = phi %"class.WTF::String"* [ %35, %40 ], [ %74, %72 ]
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  store i8* null, i8** %43, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %56, i64* %45, align 8
  br label %61

57:                                               ; preds = %48
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %42, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %44, align 8
  br label %61

61:                                               ; preds = %55, %57
  %62 = phi i32 [ %59, %57 ], [ 0, %55 ]
  store i32 %62, i32* %46, align 8
  %63 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %51, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  %64 = icmp eq %"class.v8::String"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.v8::String"* %63 to %"class.v8::Value"*
  %67 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %47, %"class.v8::Context"* %33, i32 %49, %"class.v8::Value"* nonnull %66) #9
  %68 = trunc i16 %67 to i8
  %69 = icmp eq i8 %68, 0
  %70 = icmp ult i16 %67, 256
  %71 = or i1 %70, %69
  br i1 %71, label %78, label %72, !prof !7

72:                                               ; preds = %65
  %73 = add i32 %49, 1
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 1
  %75 = icmp eq %"class.WTF::String"* %74, %38
  br i1 %75, label %76, label %48

76:                                               ; preds = %72, %32
  %77 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %78

78:                                               ; preds = %61, %65, %76
  %79 = phi %"class.v8::Value"* [ %77, %76 ], [ null, %65 ], [ null, %61 ]
  ret %"class.v8::Value"* %79
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #9
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #9
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #9
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !5

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #9
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !5

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"*, i32, %"class.WTF::Vector.1564"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKNS_17IdentifiableTokenE(%"class.blink::ExecutionContext"*, i32, %"class.blink::IdentifiableToken"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"*) unnamed_addr #2

declare i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15getTexParameterEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, i32, i32) unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10getUniformEPNS_11ScriptStateEPNS_12WebGLProgramEPKNS_20WebGLUniformLocationE(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, %"class.blink::WebGLProgram"*, %"class.blink::WebGLUniformLocation"*) local_unnamed_addr #2

declare %"class.blink::WebGLUniformLocation"* @_ZN5blink25WebGLRenderingContextBase18getUniformLocationEPNS_12WebGLProgramERKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15getVertexAttribEPNS_11ScriptStateEjj(%"class.blink::ScriptValue"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, i32, i32) local_unnamed_addr #2

declare i64 @_ZN5blink25WebGLRenderingContextBase21getVertexAttribOffsetEjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32) local_unnamed_addr #2

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase4hintEjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink25WebGLRenderingContextBase8isBufferEPNS_11WebGLBufferE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLBuffer"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink25WebGLRenderingContextBase13isContextLostEv(%"class.blink::WebGLRenderingContextBase"*) unnamed_addr #2

declare zeroext i8 @_ZN5blink25WebGLRenderingContextBase9isEnabledEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink25WebGLRenderingContextBase13isFramebufferEPNS_16WebGLFramebufferE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLFramebuffer"*) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink25WebGLRenderingContextBase9isProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink25WebGLRenderingContextBase14isRenderbufferEPNS_17WebGLRenderbufferE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderbuffer"*) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink25WebGLRenderingContextBase8isShaderEPNS_11WebGLShaderE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLShader"*) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink25WebGLRenderingContextBase9isTextureEPNS_12WebGLTextureE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLTexture"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9lineWidthEf(%"class.blink::WebGLRenderingContextBase"*, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase11linkProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase11pixelStoreiEji(%"class.blink::WebGLRenderingContextBase"*, i32, i32) unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13polygonOffsetEff(%"class.blink::WebGLRenderingContextBase"*, float, float) local_unnamed_addr #2

declare void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_18DOMArrayBufferViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10readPixelsEiiiijjNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, %"class.blink::MaybeShared"*) unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase19renderbufferStorageEjjii(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase14sampleCoverageEfh(%"class.blink::WebGLRenderingContextBase"*, float, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase7scissorEiiii(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12shaderSourceEPNS_11WebGLShaderERKN3WTF6StringE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLShader"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase11stencilFuncEjij(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase19stencilFuncSeparateEjjij(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase11stencilMaskEj(%"class.blink::WebGLRenderingContextBase"*, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase19stencilMaskSeparateEjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9stencilOpEjjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase17stencilOpSeparateEjjjj(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase16WebCodecsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10texImage2DEjiiiiijjNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, i32, i32, %"class.blink::MaybeShared"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_16HTMLVideoElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, %"class.blink::HTMLVideoElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_16HTMLImageElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, %"class.blink::HTMLImageElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_26CanvasRenderingContextHostERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, %"class.blink::CanvasRenderingContextHost"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10texImage2DEPNS_16ExecutionContextEjiijjPNS_10VideoFrameERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, %"class.blink::VideoFrame"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10texImage2DEjiijjPNS_9ImageDataE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, %"class.blink::ImageData"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10texImage2DEjiijjPNS_11ImageBitmapERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, %"class.blink::ImageBitmap"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texParameterfEjjf(%"class.blink::WebGLRenderingContextBase"*, i32, i32, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texParameteriEjji(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEjiiiiijjNS_11MaybeSharedINS_18DOMArrayBufferViewEEE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, i32, i32, %"class.blink::MaybeShared"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_16HTMLVideoElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, i32, %"class.blink::HTMLVideoElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_16HTMLImageElementERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, i32, %"class.blink::HTMLImageElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_26CanvasRenderingContextHostERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, i32, %"class.blink::CanvasRenderingContextHost"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEPNS_16ExecutionContextEjiiijjPNS_10VideoFrameERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::ExecutionContext"*, i32, i32, i32, i32, i32, i32, %"class.blink::VideoFrame"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEjiiijjPNS_9ImageDataE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, %"class.blink::ImageData"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase13texSubImage2DEjiiijjPNS_11ImageBitmapERNS_14ExceptionStateE(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32, i32, i32, %"class.blink::ImageBitmap"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9uniform1fEPKNS_20WebGLUniformLocationEf(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, float) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIfLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView"* sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform1fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform1fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.441, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.442, i64 0, i64 0)) #9
  %26 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1341", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca float, align 4
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 536346624
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.443, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %109

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.1341"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %9) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.1341"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.1341"* %5 to i64*
  br label %90

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast float* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %81
  %40 = phi i32 [ 0, %35 ], [ %82, %81 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #9
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #9
  %49 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  br label %99

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #9
  %51 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %41) #9
  br i1 %51, label %52, label %55, !prof !4

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::Value"* %41 to %"class.v8::Number"*
  %54 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %53) #9
  br label %57

55:                                               ; preds = %50
  %56 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  br label %57

57:                                               ; preds = %55, %52
  %58 = phi double [ %54, %52 ], [ %56, %55 ]
  %59 = load i32, i32* %38, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %79

61:                                               ; preds = %57
  %62 = fcmp ogt double %58, 0x47EFFFFFE0000000
  br i1 %62, label %67, label %63, !prof !5

63:                                               ; preds = %61
  %64 = fcmp olt double %58, 0xC7EFFFFFE0000000
  br i1 %64, label %67, label %65, !prof !5

65:                                               ; preds = %63
  %66 = fptrunc double %58 to float
  br label %67

67:                                               ; preds = %61, %63, %65
  %68 = phi float [ 0xFFF0000000000000, %63 ], [ 0x7FF0000000000000, %61 ], [ %66, %65 ]
  store float %68, float* %7, align 4
  %69 = load i32, i32* %17, align 4
  %70 = load i32, i32* %16, align 8
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %78, label %72, !prof !5

72:                                               ; preds = %67
  %73 = load float*, float** %15, align 8
  %74 = zext i32 %69 to i64
  %75 = getelementptr inbounds float, float* %73, i64 %74
  store float %68, float* %75, align 4
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %67
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.1341"* nonnull %5, float* nonnull dereferenceable(4) %7) #9
  br label %81

79:                                               ; preds = %57
  %80 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  br label %99

81:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  %82 = add nuw i32 %40, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %39, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.WTF::Vector.1341"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %33, %85
  %91 = phi i64* [ %34, %33 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %33 ], [ %89, %85 ]
  %93 = phi i32 [ %27, %33 ], [ %88, %85 ]
  %94 = phi i64 [ %28, %33 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  br label %99

99:                                               ; preds = %43, %79, %90
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #9
  %100 = load float*, float** %15, align 8
  %101 = icmp eq float* %100, null
  %102 = bitcast float* %100 to i8*
  br i1 %101, label %108, label %103, !prof !4

103:                                              ; preds = %99
  %104 = load i32, i32* %17, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106, !prof !5

106:                                              ; preds = %103
  store i32 0, i32* %17, align 4
  br label %107

107:                                              ; preds = %106, %103
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %102) #9
  store float* null, float** %15, align 8
  br label %108

108:                                              ; preds = %99, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %109

109:                                              ; preds = %108, %11
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1341"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1341", align 8
  %6 = alloca float, align 4
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector.1341"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %55

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast float* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %53
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !5

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #9
  %23 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %19) #9
  br i1 %23, label %24, label %27, !prof !4

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::Value"* %19 to %"class.v8::Number"*
  %26 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %25) #9
  br label %29

27:                                               ; preds = %22
  %28 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi double [ %26, %24 ], [ %28, %27 ]
  %31 = load i32, i32* %17, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = fcmp ogt double %30, 0x47EFFFFFE0000000
  br i1 %34, label %41, label %35, !prof !5

35:                                               ; preds = %33
  %36 = fcmp olt double %30, 0xC7EFFFFFE0000000
  br i1 %36, label %41, label %37, !prof !5

37:                                               ; preds = %35
  %38 = fptrunc double %30 to float
  br label %41

39:                                               ; preds = %29
  %40 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9
  br label %70

41:                                               ; preds = %33, %35, %37
  %42 = phi float [ 0xFFF0000000000000, %35 ], [ 0x7FF0000000000000, %33 ], [ %38, %37 ]
  store float %42, float* %6, align 4
  %43 = load i32, i32* %12, align 4
  %44 = load i32, i32* %11, align 8
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %52, label %46, !prof !5

46:                                               ; preds = %41
  %47 = load float*, float** %10, align 8
  %48 = zext i32 %43 to i64
  %49 = getelementptr inbounds float, float* %47, i64 %48
  store float %42, float* %49, align 4
  %50 = load i32, i32* %12, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %12, align 4
  br label %53

52:                                               ; preds = %41
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.1341"* nonnull %5, float* nonnull dereferenceable(4) %6) #9
  br label %53

53:                                               ; preds = %46, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9
  %54 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %54, label %18, label %55

55:                                               ; preds = %53, %4
  %56 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.WTF::Vector.1341"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #9
  br label %70

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 2
  %64 = bitcast %"class.WTF::Vector.1341"* %5 to i64*
  %65 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store i64 0, i64* %65, align 8
  %66 = load i64, i64* %64, align 8
  %67 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store atomic i64 0, i64* %64 monotonic, align 8
  store atomic i64 %66, i64* %67 monotonic, align 8
  %68 = load i32, i32* %11, align 8
  store i32 %68, i32* %62, align 8
  store i32 0, i32* %11, align 8
  %69 = load i32, i32* %12, align 4
  store i32 %69, i32* %63, align 4
  store i32 0, i32* %12, align 4
  br label %70

70:                                               ; preds = %39, %61, %59
  %71 = load float*, float** %10, align 8
  %72 = icmp eq float* %71, null
  %73 = bitcast float* %71 to i8*
  br i1 %72, label %79, label %74, !prof !4

74:                                               ; preds = %70
  %75 = load i32, i32* %12, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77, !prof !5

77:                                               ; preds = %74
  store i32 0, i32* %12, align 4
  br label %78

78:                                               ; preds = %77, %74
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #9
  store float* null, float** %10, align 8
  br label %79

79:                                               ; preds = %70, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.444, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.445, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.1341"*, float* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp ugt float* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds float, float* %7, i64 %10
  %12 = icmp ugt float* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq float* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to float*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load float*, float** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne float* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast float* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.1341"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to float*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint float* %1 to i64
  %56 = ptrtoint float* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1341", %"class.WTF::Vector.1341"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq float* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load float*, float** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne float* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast float* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.1341"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.1341"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to float*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi float* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds float, float* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi float* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi float* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds float, float* %100, i64 %103
  %105 = bitcast float* %101 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = bitcast float* %104 to i32*
  store i32 %106, i32* %107, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9uniform1iEPKNS_20WebGLUniformLocationEi(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIiLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.1844"* sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform1ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView.1844"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform1ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1845"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIiLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIiLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.441, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.442, i64 0, i64 0)) #9
  %26 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIiLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIiLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1845", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca i32, align 4
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 536346624
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.443, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %102

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.1845"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %9) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.1845"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.1845"* %5 to i64*
  br label %83

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast i32* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %74
  %40 = phi i32 [ 0, %35 ], [ %75, %74 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #9
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #9
  %49 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  br label %92

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #9
  %51 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %41) #9
  br i1 %51, label %52, label %55, !prof !4

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::Value"* %41 to %"class.v8::Int32"*
  %54 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %53) #9
  br label %57

55:                                               ; preds = %50
  %56 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i32 [ %54, %52 ], [ %56, %55 ]
  store i32 %58, i32* %7, align 4
  %59 = load i32, i32* %38, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %57
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %71, label %65, !prof !5

65:                                               ; preds = %61
  %66 = load i32*, i32** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds i32, i32* %66, i64 %67
  store i32 %58, i32* %68, align 4
  %69 = load i32, i32* %17, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %17, align 4
  br label %74

71:                                               ; preds = %61
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.1845"* nonnull %5, i32* nonnull dereferenceable(4) %7) #9
  br label %74

72:                                               ; preds = %57
  %73 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  br label %92

74:                                               ; preds = %65, %71
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  %75 = add nuw i32 %40, 1
  %76 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %39, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector.1845"* %5 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = load i32, i32* %16, align 8
  %82 = load i32, i32* %17, align 4
  br label %83

83:                                               ; preds = %33, %78
  %84 = phi i64* [ %34, %33 ], [ %79, %78 ]
  %85 = phi i32 [ 0, %33 ], [ %82, %78 ]
  %86 = phi i32 [ %27, %33 ], [ %81, %78 ]
  %87 = phi i64 [ %28, %33 ], [ %80, %78 ]
  %88 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store i64 0, i64* %90, align 8
  %91 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store atomic i64 0, i64* %84 monotonic, align 8
  store atomic i64 %87, i64* %91 monotonic, align 8
  store i32 %86, i32* %88, align 8
  store i32 0, i32* %16, align 8
  store i32 %85, i32* %89, align 4
  store i32 0, i32* %17, align 4
  br label %92

92:                                               ; preds = %43, %72, %83
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #9
  %93 = load i32*, i32** %15, align 8
  %94 = icmp eq i32* %93, null
  %95 = bitcast i32* %93 to i8*
  br i1 %94, label %101, label %96, !prof !4

96:                                               ; preds = %92
  %97 = load i32, i32* %17, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !5

99:                                               ; preds = %96
  store i32 0, i32* %17, align 4
  br label %100

100:                                              ; preds = %99, %96
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %95) #9
  store i32* null, i32** %15, align 8
  br label %101

101:                                              ; preds = %92, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %102

102:                                              ; preds = %101, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIiLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1845"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1845", align 8
  %6 = alloca i32, align 4
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector.1845"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %48

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast i32* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %46
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !5

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #9
  %23 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %19) #9
  br i1 %23, label %24, label %27, !prof !4

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::Value"* %19 to %"class.v8::Int32"*
  %26 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #9
  br label %29

27:                                               ; preds = %22
  %28 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi i32 [ %26, %24 ], [ %28, %27 ]
  store i32 %30, i32* %6, align 4
  %31 = load i32, i32* %17, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9
  br label %63

35:                                               ; preds = %29
  %36 = load i32, i32* %12, align 4
  %37 = load i32, i32* %11, align 8
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %45, label %39, !prof !5

39:                                               ; preds = %35
  %40 = load i32*, i32** %10, align 8
  %41 = zext i32 %36 to i64
  %42 = getelementptr inbounds i32, i32* %40, i64 %41
  store i32 %30, i32* %42, align 4
  %43 = load i32, i32* %12, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %12, align 4
  br label %46

45:                                               ; preds = %35
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.1845"* nonnull %5, i32* nonnull dereferenceable(4) %6) #9
  br label %46

46:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9
  %47 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %47, label %18, label %48

48:                                               ; preds = %46, %4
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::Vector.1845"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #9
  br label %63

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.1845"* %5 to i64*
  %58 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store i64 0, i64* %58, align 8
  %59 = load i64, i64* %57, align 8
  %60 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load i32, i32* %11, align 8
  store i32 %61, i32* %55, align 8
  store i32 0, i32* %11, align 8
  %62 = load i32, i32* %12, align 4
  store i32 %62, i32* %56, align 4
  store i32 0, i32* %12, align 4
  br label %63

63:                                               ; preds = %33, %54, %52
  %64 = load i32*, i32** %10, align 8
  %65 = icmp eq i32* %64, null
  %66 = bitcast i32* %64 to i8*
  br i1 %65, label %72, label %67, !prof !4

67:                                               ; preds = %63
  %68 = load i32, i32* %12, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70, !prof !5

70:                                               ; preds = %67
  store i32 0, i32* %12, align 4
  br label %71

71:                                               ; preds = %70, %67
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #9
  store i32* null, i32** %10, align 8
  br label %72

72:                                               ; preds = %63, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.444, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.445, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.1845"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.1845"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1845", %"class.WTF::Vector.1845"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.1845"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.1845"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

declare void @_ZN5blink25WebGLRenderingContextBase9uniform2fEPKNS_20WebGLUniformLocationEff(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform2fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform2fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9uniform2iEPKNS_20WebGLUniformLocationEii(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform2ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView.1844"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform2ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1845"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9uniform3fEPKNS_20WebGLUniformLocationEfff(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, float, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform3fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform3fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9uniform3iEPKNS_20WebGLUniformLocationEiii(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform3ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView.1844"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform3ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1845"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9uniform4fEPKNS_20WebGLUniformLocationEffff(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, float, float, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform4fvEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIfLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform4fvEPKNS_20WebGLUniformLocationERN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase9uniform4iEPKNS_20WebGLUniformLocationEiiii(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform4ivEPKNS_20WebGLUniformLocationERKNS_28TypedFlexibleArrayBufferViewIiLb0EEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.blink::TypedFlexibleArrayBufferView.1844"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10uniform4ivEPKNS_20WebGLUniformLocationERN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, %"class.WTF::Vector.1845"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.1854"* sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix2fvEPKNS_20WebGLUniformLocationEhNS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i8 zeroext, %"class.blink::MaybeShared.1854"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix2fvEPKNS_20WebGLUniformLocationEhRN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i8 zeroext, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix3fvEPKNS_20WebGLUniformLocationEhNS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i8 zeroext, %"class.blink::MaybeShared.1854"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix3fvEPKNS_20WebGLUniformLocationEhRN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i8 zeroext, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix4fvEPKNS_20WebGLUniformLocationEhNS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i8 zeroext, %"class.blink::MaybeShared.1854"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16uniformMatrix4fvEPKNS_20WebGLUniformLocationEhRN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLUniformLocation"*, i8 zeroext, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10useProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*) unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15validateProgramEPNS_12WebGLProgramE(%"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLProgram"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib1fEjf(%"class.blink::WebGLRenderingContextBase"*, i32, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib1fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::MaybeShared.1855"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib1fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib2fEjff(%"class.blink::WebGLRenderingContextBase"*, i32, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib2fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::MaybeShared.1855"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib2fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib3fEjfff(%"class.blink::WebGLRenderingContextBase"*, i32, float, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib3fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::MaybeShared.1855"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib3fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase14vertexAttrib4fEjffff(%"class.blink::WebGLRenderingContextBase"*, i32, float, float, float, float) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib4fvEjNS_11MaybeSharedIKNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::MaybeShared.1855"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase15vertexAttrib4fvEjRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.WTF::Vector.1341"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase19vertexAttribPointerEjijhil(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i8 zeroext, i32, i64) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase8viewportEiiii(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10bindBufferEjPNS_11WebGLBufferE(%"class.blink::WebGLRenderingContextBase"*, i32, %"class.blink::WebGLBuffer"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink31NoAllocDirectCallExceptionStateD1Ev(%"class.blink::NoAllocDirectCallExceptionState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*) unnamed_addr #4

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase10drawArraysEjii(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase12drawElementsEjijl(%"class.blink::WebGLRenderingContextBase"*, i32, i32, i32, i64) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase6commitEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #2

declare void @_ZN5blink25WebGLRenderingContextBase16makeXRCompatibleEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::WebGLRenderingContextBase"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ScriptPromise", align 8
  %3 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 1
  %4 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 0
  %10 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %10, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 1
  %14 = bitcast i64* %13 to %"class.v8::Isolate"**
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %15) #9
  %17 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %16) #9
  %18 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %19 = bitcast %"class.blink::ScriptPromise"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #9
  %20 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  call void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %2, %"class.blink::ScriptState"* %17, %"class.blink::ExceptionState"* dereferenceable(72) %20) #9
  %21 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1
  %22 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %21) #9
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %18, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 3
  %26 = icmp eq %"class.v8::Value"* %22, null
  %27 = bitcast %"class.v8::Value"* %22 to i64*
  %28 = getelementptr inbounds i64, i64* %24, i64 2
  %29 = select i1 %26, i64* %28, i64* %27, !prof !5
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %25, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1, i32 1, i32 1, i32 0
  %32 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %31, align 8
  %33 = icmp eq %"class.blink::DOMWrapperWorld"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #9
  %36 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %32) #9
  %40 = bitcast %"class.blink::DOMWrapperWorld"* %32 to i8*
  call void @free(i8* %40) #9
  br label %41

41:                                               ; preds = %8, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #9
  br label %42

42:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"*, i8*, %"class.v8::CFunctionInfo"*) unnamed_addr #2

declare void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"*, %"class.v8::CTypeInfo"* dereferenceable(2), i32, %"class.v8::CTypeInfo"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2146410443, i32 1073205}
!7 = !{!"branch_weights", i32 2002, i32 2000}
