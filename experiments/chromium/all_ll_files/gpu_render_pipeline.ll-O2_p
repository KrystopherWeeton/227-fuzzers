; ModuleID = '../../third_party/blink/renderer/modules/webgpu/gpu_render_pipeline.cc'
source_filename = "../../third_party/blink/renderer/modules/webgpu/gpu_render_pipeline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.469 }
%union.anon.469 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %struct.WGPUVertexBufferLayout*, i32, i32 }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { %struct.WGPUVertexAttribute*, i32, i32 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %struct.WGPUColorTargetState* }
%"class.WTF::Vector.489" = type { %"class.WTF::VectorBuffer.490" }
%"class.WTF::VectorBuffer.490" = type { %"class.WTF::VectorBufferBase.491" }
%"class.WTF::VectorBufferBase.491" = type { %struct.WGPUBlendState*, i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.275", i32, [4 x i8], %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.413", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.419", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.431", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.449", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.456", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.347", %"class.std::__1::unique_ptr.347", %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.393", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.311" = type { %"struct.std::__1::__atomic_base.312" }
%"struct.std::__1::__atomic_base.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { i64 }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::Worklist.322"* }
%"class.blink::Worklist.322" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::Worklist.329"* }
%"class.blink::Worklist.329" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::Worklist.336"* }
%"class.blink::Worklist.336" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::Worklist.343"* }
%"class.blink::Worklist.343" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::Worklist.350"* }
%"class.blink::Worklist.350" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::Worklist.357"* }
%"class.blink::Worklist.357" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::Worklist.364"* }
%"class.blink::Worklist.364" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.311" }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.371", %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.386", [4 x i8] }>
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373", %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { i64 }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { float }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.396", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.405" }
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.419" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"struct.std::__1::pair.424"*, i32, i32 }
%"struct.std::__1::pair.424" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.437" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.322"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.329"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.336"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.343"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.350"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.460", i64 }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.462" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.455 }
%class.scoped_refptr.455 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.456" = type { %"struct.std::__1::__atomic_base.457" }
%"struct.std::__1::__atomic_base.457" = type { %"struct.std::__1::__cxx_atomic_impl.458" }
%"struct.std::__1::__cxx_atomic_impl.458" = type { %"struct.std::__1::__cxx_atomic_base_impl.459" }
%"struct.std::__1::__cxx_atomic_base_impl.459" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.262", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.262" = type { %"class.base::RefCounted.263" }
%"class.base::RefCounted.263" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.266" }
%"class.blink::HeapHashMap.266" = type { %"class.WTF::HashMap.269" }
%"class.WTF::HashMap.269" = type { %"class.WTF::HashTable.270" }
%"class.WTF::HashTable.270" = type <{ %"struct.WTF::KeyValuePair.272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.272" = type { %"class.blink::WeakMember.273", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::GPURenderPipeline" = type { %"class.blink::DawnObject.494" }
%"class.blink::DawnObject.494" = type { %"class.blink::DawnObjectImpl", %struct.WGPURenderPipelineImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::DawnObjectImpl" = type { %"class.blink::ScriptWrappable", %"class.blink::DawnObjectBase", %"class.blink::Member.232" }
%"class.blink::DawnObjectBase" = type { %class.scoped_refptr.15, %"class.WTF::String" }
%class.scoped_refptr.15 = type { %"class.blink::DawnControlClientHolder"* }
%"class.blink::DawnControlClientHolder" = type { %"class.WTF::RefCounted", %"class.std::__1::unique_ptr.16", %"class.gpu::webgpu::WebGPUInterface"*, %struct.DawnProcTable, i8, %"class.blink::WebGPURecyclableResourceCache" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.36", %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.42" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gpu::webgpu::WebGPUInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUTextureImpl = type opaque
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::WebGPURecyclableResourceCache" = type { %"class.WTF::Deque", i64, i64, i32, %"class.gpu::webgpu::WebGPUInterface"*, %class.scoped_refptr.139, %"class.base::RepeatingCallback", i8, i32, %"class.base::WeakPtr.141", %"class.base::WeakPtrFactory.142" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.51" }
%"class.WTF::VectorBuffer.51" = type { %"class.WTF::VectorBufferBase.52" }
%"class.WTF::VectorBufferBase.52" = type { %"struct.blink::WebGPURecyclableResourceCache::Resource"*, i32, i32 }
%"struct.blink::WebGPURecyclableResourceCache::Resource" = type { %"class.std::__1::unique_ptr.53", i32, i32 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.57", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.93", i8, i32, i32, i32, %"class.WTF::Vector.108", i8, i8, i64, i64, %"class.base::RepeatingCallback.114", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.135" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.56" }
%"class.base::WeakPtrFactory.56" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.23" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.57" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.84", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.67, [384 x i64], %class.sk_sp.68, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.69", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.75" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.67 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.68 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.81, %class.SkPixmap, %class.sk_sp.83 }
%class.sk_sp.81 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.82, i32, i32 }
%class.sk_sp.82 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.23" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.28" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.83 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.96, %"class.std::__1::unique_ptr.97" }
%class.scoped_refptr.96 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector.108" = type { %"class.WTF::VectorBuffer.109" }
%"class.WTF::VectorBuffer.109" = type { %"class.WTF::VectorBufferBase.110" }
%"class.WTF::VectorBufferBase.110" = type { %class.scoped_refptr.111*, i32, i32 }
%class.scoped_refptr.111 = type opaque
%"class.base::RepeatingCallback.114" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.104", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.104" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.129" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.std::__1::pair.131"*, %"struct.std::__1::pair.131"*, %"class.std::__1::__compressed_pair.132" }
%"struct.std::__1::pair.131" = type { i32, i32 }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::pair.131"* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.82, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.135" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.139 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.140" }>
%"class.base::RefCountedThreadSafe.140" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.141" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.142" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::GPUDevice"* }
%struct.WGPUDeviceImpl = type opaque
%"class.blink::GPUDevice" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::DawnObject", %"class.blink::Member.143", %"class.blink::Member.145", %"class.blink::Member.147", %"class.blink::Member.149", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.9" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::HeapVector.11"* }
%"class.blink::HeapVector.11" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.12"* }
%"class.WTF::Vector.12" = type opaque
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.198", i32, i8, [3 x i8], %"class.blink::HeapVector.200", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.208", %"class.blink::Member.210", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.219", %"class.blink::Member.225", %"class.blink::Member.227", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.172" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.169" }
%"class.WTF::HashTable.169" = type <{ %"class.blink::WeakMember.171"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.171" = type opaque
%"class.blink::Supplementable.172" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.173" }
%"class.blink::HeapHashMap.173" = type { %"class.WTF::HashMap.176" }
%"class.WTF::HashMap.176" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"struct.WTF::KeyValuePair.179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.179" = type { i8*, %"class.blink::Member.503" }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.505" }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.180, %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", %"class.blink::Member.193", i32, [4 x i8], %"class.WTF::HashSet.194", i32, i32 }
%class.scoped_refptr.180 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.193" = type { %"class.blink::MemberBase.14" }
%"class.WTF::HashSet.194" = type { %"class.WTF::HashTable.195" }
%"class.WTF::HashTable.195" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.200" = type { %"class.WTF::Vector.203" }
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"class.blink::Member.206"*, i32, i32 }
%"class.blink::Member.206" = type opaque
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.212", i32, i32 }
%"class.blink::HeapHashMap.212" = type { %"class.WTF::HashMap.215" }
%"class.WTF::HashMap.215" = type { %"class.WTF::HashTable.216" }
%"class.WTF::HashTable.216" = type <{ %"struct.WTF::KeyValuePair.218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.218" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.225" = type { %"class.blink::MemberBase.226" }
%"class.blink::MemberBase.226" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::DawnObject" = type { %"class.blink::DawnObjectBase", %struct.WGPUDeviceImpl* }
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::GPUAdapter"* }
%"class.blink::GPUAdapter" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::GPUSupportedFeatures"* }
%"class.blink::GPUSupportedFeatures" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::GPUQueue"* }
%"class.blink::GPUQueue" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::DawnCallback"* }
%"class.blink::DawnCallback" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::DawnCallback.160"* }
%"class.blink::DawnCallback.160" = type opaque
%struct.WGPURenderPipelineImpl = type opaque
%"class.blink::GPUColorTargetState" = type <{ %"class.blink::IDLDictionaryBase", i8, [7 x i8], %"class.blink::Member", %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::GPUBlendState"* }
%"class.blink::GPUBlendState" = type { %"class.blink::IDLDictionaryBase", %"class.blink::Member.0", %"class.blink::Member.0" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::GPUBlendComponent"* }
%"class.blink::GPUBlendComponent" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::GPURenderPipelineDescriptor" = type { %"class.blink::GPUPipelineDescriptorBase", %"class.blink::Member.234", %"class.blink::Member.238", %"class.blink::Member.252", %"class.blink::Member.254", %"class.blink::Member.256" }
%"class.blink::GPUPipelineDescriptorBase" = type { %"class.blink::GPUObjectDescriptorBase", %"class.blink::Member.229" }
%"class.blink::GPUObjectDescriptorBase" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::GPUPipelineLayout"* }
%"class.blink::GPUPipelineLayout" = type { %"class.blink::DawnObject.231" }
%"class.blink::DawnObject.231" = type { %"class.blink::DawnObjectImpl", %struct.WGPUPipelineLayoutImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::GPUDepthStencilState"* }
%"class.blink::GPUDepthStencilState" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i32, float, float, %"class.WTF::String", i8, %"class.WTF::String", %"class.blink::Member.236", %"class.blink::Member.236", i32, i32 }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::GPUStencilFaceState"* }
%"class.blink::GPUStencilFaceState" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::GPUFragmentState"* }
%"class.blink::GPUFragmentState" = type { %"class.blink::GPUProgrammableStage", i8, %"class.blink::HeapVector.243" }
%"class.blink::GPUProgrammableStage" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.blink::Member.240" }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::GPUShaderModule"* }
%"class.blink::GPUShaderModule" = type { %"class.blink::DawnObject.242" }
%"class.blink::DawnObject.242" = type { %"class.blink::DawnObjectImpl", %struct.WGPUShaderModuleImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::HeapVector.243" = type { %"class.WTF::Vector.246" }
%"class.WTF::Vector.246" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"class.blink::Member.249"*, i32, i32 }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::GPUColorTargetState"* }
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::GPUMultisampleState"* }
%"class.blink::GPUMultisampleState" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::GPUPrimitiveState"* }
%"class.blink::GPUPrimitiveState" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::GPUVertexState"* }
%"class.blink::GPUVertexState" = type { %"class.blink::IDLDictionaryBase", %"class.blink::ScriptValue", %"class.WTF::String", %"class.blink::Member.240" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.258", %class.scoped_refptr.261 }
%"class.blink::TraceWrapperV8Reference.258" = type { %"class.v8::TracedReference.259" }
%"class.v8::TracedReference.259" = type { %"class.v8::BasicTracedReference.260" }
%"class.v8::BasicTracedReference.260" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.261 = type { %"class.blink::DOMWrapperWorld"* }
%"struct.blink::OwnedRenderPipelineDescriptor" = type { %struct.WGPURenderPipelineDescriptor, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.WTF::Vector.473", %"class.WTF::Vector.478", %"struct.blink::OwnedPrimitiveState", %struct.WGPUDepthStencilState, %"struct.blink::OwnedFragmentState" }
%"struct.blink::OwnedPrimitiveState" = type { %struct.WGPUPrimitiveState, %struct.WGPUPrimitiveDepthClampingState }
%struct.WGPUPrimitiveDepthClampingState = type { %struct.WGPUChainedStruct, i8 }
%"struct.blink::OwnedFragmentState" = type { %struct.WGPUFragmentState, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.483", %"class.WTF::Vector.489" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.258" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.blink::GPUVertexBufferLayout" = type { %"class.blink::IDLDictionaryBase", i8, i8, i64, %"class.blink::HeapVector.515", %"class.WTF::String" }
%"class.blink::HeapVector.515" = type { %"class.WTF::Vector.518" }
%"class.WTF::Vector.518" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { %"class.blink::Member.521"*, i32, i32 }
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::GPUVertexAttribute"* }
%"class.blink::GPUVertexAttribute" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8], %"class.WTF::String", i64, i32, [4 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.497, %"class.blink::Member.498", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.497 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.500" }
%"class.blink::Persistent.500" = type { %"class.blink::PersistentBase.501" }
%"class.blink::PersistentBase.501" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::GPUBindGroupLayout" = type { %"class.blink::DawnObject.502" }
%"class.blink::DawnObject.502" = type { %"class.blink::DawnObjectImpl", %struct.WGPUBindGroupLayoutImpl*, %struct.WGPUDeviceImpl* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.536", i8* }
%"class.WTF::StringAppend.536" = type { %"class.WTF::StringAppend.537", i8* }
%"class.WTF::StringAppend.537" = type { %"class.WTF::StringAppend.538", %"class.WTF::String" }
%"class.WTF::StringAppend.538" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.539" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.542" = type { %"class.WTF::StringTypeAdapter.543" }
%"class.WTF::StringTypeAdapter.543" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink14GPUVertexState10hasBuffersEv = comdat any

$_ZN5blink10DawnObjectIP22WGPURenderPipelineImplED2Ev = comdat any

$_ZN5blink17GPURenderPipelineD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink17GPURenderPipeline18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF6VectorI22WGPUVertexBufferLayoutLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI22WGPUVertexBufferLayoutEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_18GPUVertexAttributeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI19WGPUVertexAttributeLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI19WGPUVertexAttributeEEmm = comdat any

$_ZN3WTF6VectorI19WGPUVertexAttributeLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI14WGPUBlendStateEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_19GPUColorTargetStateEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS_6StringES2_EES2_EEPKcS6_EENS1_INS1_IT_T0_EET1_EERKS9_SA_ = comdat any

$_ZN3WTFplINS_12StringAppendINS_6StringES2_EES2_PKcEENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZN3WTFplINS_6StringES1_S1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_ = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_EcvS1_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_EC2ES6_S5_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcEC2ES3_S5_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_ = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPDs = comdat any

$_ZN3WTF6VectorI14WGPUBlendStateLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10DawnObjectIP22WGPURenderPipelineImplED0Ev = comdat any

$_ZTVN5blink17GPURenderPipelineE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink10DawnObjectIP22WGPURenderPipelineImplEE = comdat any

@.str = private unnamed_addr constant [25 x i8] c"GPUVertexStateDescriptor\00", align 1
@__const._ZN5blink17GPURenderPipeline6CreateEPNS_11ScriptStateEPNS_9GPUDeviceEPKNS_27GPURenderPipelineDescriptorE.dawn_desc_info = private unnamed_addr constant { { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUVertexBufferLayout* }, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, { %struct.WGPUChainedStruct*, i32, i32, i8, [7 x i8] }, %struct.WGPUFragmentState* }, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.WTF::Vector.473", %"class.WTF::Vector.478", { %struct.WGPUPrimitiveState, { { %struct.WGPUChainedStruct*, i32, [4 x i8] }, i8, [7 x i8] } }, { %struct.WGPUChainedStruct*, i32, i8, [3 x i8], i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }, { { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUColorTargetState* }, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.483", %"class.WTF::Vector.489" } } { { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUVertexBufferLayout* }, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, { %struct.WGPUChainedStruct*, i32, i32, i8, [7 x i8] }, %struct.WGPUFragmentState* } { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), i8* inttoptr (i64 -6148914691236517206 to i8*), %struct.WGPUPipelineLayoutImpl* inttoptr (i64 -6148914691236517206 to %struct.WGPUPipelineLayoutImpl*), { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUVertexBufferLayout* } { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), %struct.WGPUShaderModuleImpl* inttoptr (i64 -6148914691236517206 to %struct.WGPUShaderModuleImpl*), i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.WGPUVertexBufferLayout* inttoptr (i64 -6148914691236517206 to %struct.WGPUVertexBufferLayout*) }, %struct.WGPUPrimitiveState { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.WGPUDepthStencilState* inttoptr (i64 -6148914691236517206 to %struct.WGPUDepthStencilState*), { %struct.WGPUChainedStruct*, i32, i32, i8, [7 x i8] } { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), i32 -1431655766, i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }, %struct.WGPUFragmentState* inttoptr (i64 -6148914691236517206 to %struct.WGPUFragmentState*) }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.467" { %"struct.std::__1::__compressed_pair_elem.468" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.469 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.467" { %"struct.std::__1::__compressed_pair_elem.468" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.469 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.WTF::Vector.473" { %"class.WTF::VectorBuffer.474" { %"class.WTF::VectorBufferBase.475" { %struct.WGPUVertexBufferLayout* inttoptr (i64 -6148914691236517206 to %struct.WGPUVertexBufferLayout*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.478" { %"class.WTF::VectorBuffer.479" { %"class.WTF::VectorBufferBase.480" { %struct.WGPUVertexAttribute* inttoptr (i64 -6148914691236517206 to %struct.WGPUVertexAttribute*), i32 -1431655766, i32 -1431655766 } } }, { %struct.WGPUPrimitiveState, { { %struct.WGPUChainedStruct*, i32, [4 x i8] }, i8, [7 x i8] } } { %struct.WGPUPrimitiveState { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, { { %struct.WGPUChainedStruct*, i32, [4 x i8] }, i8, [7 x i8] } { { %struct.WGPUChainedStruct*, i32, [4 x i8] } { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" } }, { %struct.WGPUChainedStruct*, i32, i8, [3 x i8], i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float } { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.WGPUStencilFaceState { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.WGPUStencilFaceState { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUColorTargetState* }, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.483", %"class.WTF::Vector.489" } { { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUColorTargetState* } { %struct.WGPUChainedStruct* inttoptr (i64 -6148914691236517206 to %struct.WGPUChainedStruct*), %struct.WGPUShaderModuleImpl* inttoptr (i64 -6148914691236517206 to %struct.WGPUShaderModuleImpl*), i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.WGPUColorTargetState* inttoptr (i64 -6148914691236517206 to %struct.WGPUColorTargetState*) }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.467" { %"struct.std::__1::__compressed_pair_elem.468" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.469 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::unique_ptr.483" { %"class.std::__1::__compressed_pair.484" { %"struct.std::__1::__compressed_pair_elem.485" { %struct.WGPUColorTargetState* inttoptr (i64 -6148914691236517206 to %struct.WGPUColorTargetState*) } } }, %"class.WTF::Vector.489" { %"class.WTF::VectorBuffer.490" { %"class.WTF::VectorBufferBase.491" { %struct.WGPUBlendState* inttoptr (i64 -6148914691236517206 to %struct.WGPUBlendState*), i32 -1431655766, i32 -1431655766 } } } } }, align 8
@_ZTVN5blink17GPURenderPipelineE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DawnObject.494"*)* @_ZN5blink10DawnObjectIP22WGPURenderPipelineImplED2Ev to i8*), i8* bitcast (void (%"class.blink::GPURenderPipeline"*)* @_ZN5blink17GPURenderPipelineD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)* @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::GPURenderPipeline"*)* @_ZNK5blink17GPURenderPipeline18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [31 x i8] c"vertexBuffers must be an array\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI22WGPUVertexBufferLayoutEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = WGPUVertexBufferLayout]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI19WGPUVertexAttributeEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = WGPUVertexAttribute]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI14WGPUBlendStateEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = WGPUBlendState]\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"The blend factor '\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"' has been deprecated in favor of '\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"one-minus-src\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"dst\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"one-minus-dst\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"one-minus-constant\00", align 1
@.str.16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink10DawnObjectIP22WGPURenderPipelineImplEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DawnObject.494"*)* @_ZN5blink10DawnObjectIP22WGPURenderPipelineImplED2Ev to i8*), i8* bitcast (void (%"class.blink::DawnObject.494"*)* @_ZN5blink10DawnObjectIP22WGPURenderPipelineImplED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)* @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink17GPURenderPipeline18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@switch.table._ZN5blink12_GLOBAL__N_117AsDawnBlendFactorERKN3WTF6StringEPNS_9GPUDeviceE = private unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0)], align 8

@_ZN5blink17GPURenderPipelineC1EPNS_9GPUDeviceEP22WGPURenderPipelineImpl = hidden unnamed_addr alias void (%"class.blink::GPURenderPipeline"*, %"class.blink::GPUDevice"*, %struct.WGPURenderPipelineImpl*), void (%"class.blink::GPURenderPipeline"*, %"class.blink::GPUDevice"*, %struct.WGPURenderPipelineImpl*)* @_ZN5blink17GPURenderPipelineC2EPNS_9GPUDeviceEP22WGPURenderPipelineImpl

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10AsDawnTypeEPKNS_19GPUColorTargetStateE(%struct.WGPUColorTargetState* noalias nocapture sret, %"class.blink::GPUColorTargetState"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::GPUColorTargetState", %"class.blink::GPUColorTargetState"* %1, i64 0, i32 5
  %4 = bitcast %struct.WGPUColorTargetState* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  %5 = load i32, i32* %3, align 8
  %6 = getelementptr inbounds %struct.WGPUColorTargetState, %struct.WGPUColorTargetState* %0, i64 0, i32 3
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::GPUColorTargetState", %"class.blink::GPUColorTargetState"* %1, i64 0, i32 4
  %8 = tail call i32 @_ZN5blink10AsDawnEnumI17WGPUTextureFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %7) #10
  %9 = getelementptr inbounds %struct.WGPUColorTargetState, %struct.WGPUColorTargetState* %0, i64 0, i32 1
  store i32 %8, i32* %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN5blink10AsDawnEnumI17WGPUTextureFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ConvertToDawnTypeEPN2v87IsolateEPNS_9GPUDeviceEPKNS_27GPURenderPipelineDescriptorEPNS_29OwnedRenderPipelineDescriptorERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::GPUDevice"*, %"class.blink::GPURenderPipelineDescriptor"*, %"struct.blink::OwnedRenderPipelineDescriptor"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %6 = alloca %struct.WGPUVertexBufferLayout, align 8
  %7 = alloca %struct.WGPUVertexBufferLayout, align 8
  %8 = alloca %struct.WGPUVertexAttribute, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.blink::ScriptValue", align 8
  %13 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 0, i32 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* %18, i32 0) #10
  %19 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %24, %16
  %28 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %17, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %29 = load i8, i8* %21, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %27, %31
  %35 = phi i8* [ %33, %31 ], [ %28, %27 ]
  %36 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 1
  store i8* %35, i8** %36, align 8
  br label %37

37:                                               ; preds = %5, %34
  %38 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::GPUPipelineLayout"*, %"class.blink::GPUPipelineLayout"** %38, align 8
  %40 = icmp eq %"class.blink::GPUPipelineLayout"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::GPUPipelineLayout", %"class.blink::GPUPipelineLayout"* %39, i64 0, i32 0, i32 1
  %43 = bitcast %struct.WGPUPipelineLayoutImpl** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 2
  %46 = bitcast %struct.WGPUPipelineLayoutImpl** %45 to i64*
  store i64 %44, i64* %46, align 8
  br label %47

47:                                               ; preds = %37, %41
  %48 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = load %"class.blink::GPUVertexState"*, %"class.blink::GPUVertexState"** %48, align 8
  %50 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 3
  %51 = bitcast %struct.WGPUVertexState* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 40, i1 false)
  %52 = getelementptr inbounds %"class.blink::GPUVertexState", %"class.blink::GPUVertexState"* %49, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::GPUShaderModule"*, %"class.blink::GPUShaderModule"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::GPUShaderModule", %"class.blink::GPUShaderModule"* %53, i64 0, i32 0, i32 1
  %55 = bitcast %struct.WGPUShaderModuleImpl** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 3, i32 1
  %58 = bitcast %struct.WGPUShaderModuleImpl** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.blink::GPUVertexState", %"class.blink::GPUVertexState"* %49, i64 0, i32 2
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.WTF::String"* %60) #10
  %61 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 2
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %66, %47
  %70 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %59, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  %71 = load i8, i8* %63, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %69, %73
  %77 = phi i8* [ %75, %73 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 3, i32 2
  store i8* %77, i8** %78, align 8
  %79 = call zeroext i1 @_ZNK5blink14GPUVertexState10hasBuffersEv(%"class.blink::GPUVertexState"* %49)
  br i1 %79, label %80, label %272

80:                                               ; preds = %76
  %81 = bitcast %"class.blink::ScriptValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #10
  %82 = getelementptr inbounds %"class.blink::GPUVertexState", %"class.blink::GPUVertexState"* %49, i64 0, i32 1
  %83 = bitcast %"class.blink::ScriptValue"* %82 to i64*
  %84 = load i64, i64* %83, align 8, !noalias !2
  %85 = bitcast %"class.blink::ScriptValue"* %12 to i64*
  store i64 %84, i64* %85, align 8, !alias.scope !2
  %86 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %86, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %88, align 8, !alias.scope !2
  %89 = icmp eq %"class.blink::ScriptValue"* %82, %12
  br i1 %89, label %95, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.blink::GPUVertexState", %"class.blink::GPUVertexState"* %49, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8, !noalias !2
  %93 = icmp eq i64* %92, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %90
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %91, i64** %88) #10
  br label %95

95:                                               ; preds = %94, %90, %80
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.258"* dereferenceable(8) %87) #10
  %96 = getelementptr inbounds %"class.blink::GPUVertexState", %"class.blink::GPUVertexState"* %49, i64 0, i32 1, i32 1, i32 1, i32 0
  %97 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %96, align 8, !noalias !2
  %98 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %97, %"class.blink::DOMWrapperWorld"** %98, align 8, !alias.scope !2
  %99 = icmp eq %"class.blink::DOMWrapperWorld"* %97, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %97, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %101) #10
  br label %102

102:                                              ; preds = %95, %100
  %103 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %12) #10
  %104 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %98, align 8
  %105 = icmp eq %"class.blink::DOMWrapperWorld"* %104, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %104, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %107) #10
  %108 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %104) #10
  %112 = bitcast %"class.blink::DOMWrapperWorld"* %104 to i8*
  call void @free(i8* %112) #10
  br label %113

113:                                              ; preds = %102, %106, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #10
  %114 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 3
  %115 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 4
  %116 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %103) #10
  br i1 %116, label %118, label %117

117:                                              ; preds = %113
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #10
  br label %260

118:                                              ; preds = %113
  %119 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #10
  %120 = bitcast %"class.v8::Value"* %103 to %"class.v8::Array"*
  %121 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %120) #10
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %237, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.v8::Value"* %103 to %"class.v8::Object"*
  %125 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %126 = bitcast %struct.WGPUVertexBufferLayout* %7 to i8*
  %127 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %7, i64 0, i32 0
  %128 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %7, i64 0, i32 1
  %129 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %7, i64 0, i32 2
  %130 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %7, i64 0, i32 3
  %131 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %132 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 3, i32 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.WTF::Vector.473", %"class.WTF::Vector.473"* %114, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %struct.WGPUVertexAttribute* %8 to i8*
  %135 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %8, i64 0, i32 2
  %136 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %8, i64 0, i32 1
  %137 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %8, i64 0, i32 0
  %138 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 4, i32 0, i32 0, i32 2
  %139 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 4, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.WTF::Vector.478", %"class.WTF::Vector.478"* %115, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %struct.WGPUVertexBufferLayout* %6 to i8*
  %142 = bitcast i32* %128 to i8*
  br label %143

143:                                              ; preds = %232, %123
  %144 = phi i32 [ 0, %123 ], [ %234, %232 ]
  %145 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %124, %"class.v8::Context"* %119, i32 %144) #10
  %146 = icmp eq %"class.v8::Value"* %145, null
  br i1 %146, label %168, label %147

147:                                              ; preds = %143
  %148 = bitcast %"class.v8::Value"* %145 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = and i64 %149, 3
  %151 = icmp eq i64 %150, 1
  br i1 %151, label %152, label %180

152:                                              ; preds = %147
  %153 = add i64 %149, -1
  %154 = inttoptr i64 %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = and i64 %149, -4294967296
  %157 = zext i32 %155 to i64
  %158 = or i64 %156, %157
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i16*
  %161 = load i16, i16* %160, align 2
  %162 = icmp eq i16 %161, 67
  br i1 %162, label %163, label %180

163:                                              ; preds = %152
  %164 = add i64 %149, 23
  %165 = inttoptr i64 %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = ashr i32 %166, 1
  switch i32 %167, label %180 [
    i32 5, label %168
    i32 3, label %168
  ]

168:                                              ; preds = %163, %163, %143
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 0, i64 24, i1 false) #10
  %169 = load i32, i32* %131, align 4
  %170 = load i32, i32* %132, align 8
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %179, label %172, !prof !5

172:                                              ; preds = %168
  %173 = load %struct.WGPUVertexBufferLayout*, %struct.WGPUVertexBufferLayout** %133, align 8
  %174 = zext i32 %169 to i64
  %175 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %173, i64 %174
  %176 = bitcast %struct.WGPUVertexBufferLayout* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* nonnull align 8 %141, i64 24, i1 false) #10
  %177 = load i32, i32* %131, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %131, align 4
  br label %232

179:                                              ; preds = %168
  call void @_ZN3WTF6VectorI22WGPUVertexBufferLayoutLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.473"* %114, %struct.WGPUVertexBufferLayout* nonnull dereferenceable(24) %6) #10
  br label %232

180:                                              ; preds = %163, %152, %147
  %181 = call %"class.blink::GPUVertexBufferLayout"* @_ZN5blink17NativeValueTraitsINS_21GPUVertexBufferLayoutEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %145, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10
  %182 = load i32, i32* %125, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %260

184:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 16, i1 false) #10
  %185 = getelementptr inbounds %"class.blink::GPUVertexBufferLayout", %"class.blink::GPUVertexBufferLayout"* %181, i64 0, i32 3
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %127, align 8
  %187 = getelementptr inbounds %"class.blink::GPUVertexBufferLayout", %"class.blink::GPUVertexBufferLayout"* %181, i64 0, i32 5
  %188 = call i32 @_ZN5blink10AsDawnEnumI17WGPUInputStepModeEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %187) #10
  store i32 %188, i32* %128, align 8
  %189 = getelementptr inbounds %"class.blink::GPUVertexBufferLayout", %"class.blink::GPUVertexBufferLayout"* %181, i64 0, i32 4, i32 0
  %190 = getelementptr inbounds %"class.blink::GPUVertexBufferLayout", %"class.blink::GPUVertexBufferLayout"* %181, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %129, align 4
  store %struct.WGPUVertexAttribute* null, %struct.WGPUVertexAttribute** %130, align 8
  %192 = load i32, i32* %131, align 4
  %193 = load i32, i32* %132, align 8
  %194 = icmp eq i32 %192, %193
  br i1 %194, label %202, label %195, !prof !5

195:                                              ; preds = %184
  %196 = load %struct.WGPUVertexBufferLayout*, %struct.WGPUVertexBufferLayout** %133, align 8
  %197 = zext i32 %192 to i64
  %198 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %196, i64 %197
  %199 = bitcast %struct.WGPUVertexBufferLayout* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* nonnull align 8 %126, i64 24, i1 false) #10
  %200 = load i32, i32* %131, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %131, align 4
  br label %203

202:                                              ; preds = %184
  call void @_ZN3WTF6VectorI22WGPUVertexBufferLayoutLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.473"* %114, %struct.WGPUVertexBufferLayout* nonnull dereferenceable(24) %7) #10
  br label %203

203:                                              ; preds = %202, %195
  %204 = load i32, i32* %190, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %232, label %206

206:                                              ; preds = %203, %228
  %207 = phi i32 [ %229, %228 ], [ 0, %203 ]
  %208 = call dereferenceable(8) %"class.blink::Member.521"* @_ZNK3WTF6VectorIN5blink6MemberINS1_18GPUVertexAttributeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.518"* %189, i32 %207) #10
  %209 = getelementptr inbounds %"class.blink::Member.521", %"class.blink::Member.521"* %208, i64 0, i32 0, i32 0
  %210 = load %"class.blink::GPUVertexAttribute"*, %"class.blink::GPUVertexAttribute"** %209, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 24, i1 false) #10
  %211 = getelementptr inbounds %"class.blink::GPUVertexAttribute", %"class.blink::GPUVertexAttribute"* %210, i64 0, i32 6
  %212 = load i32, i32* %211, align 8
  store i32 %212, i32* %135, align 8
  %213 = getelementptr inbounds %"class.blink::GPUVertexAttribute", %"class.blink::GPUVertexAttribute"* %210, i64 0, i32 5
  %214 = load i64, i64* %213, align 8
  store i64 %214, i64* %136, align 8
  %215 = getelementptr inbounds %"class.blink::GPUVertexAttribute", %"class.blink::GPUVertexAttribute"* %210, i64 0, i32 4
  %216 = call i32 @_ZN5blink10AsDawnEnumI16WGPUVertexFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %215) #10
  store i32 %216, i32* %137, align 8
  %217 = load i32, i32* %138, align 4
  %218 = load i32, i32* %139, align 8
  %219 = icmp eq i32 %217, %218
  br i1 %219, label %227, label %220, !prof !5

220:                                              ; preds = %206
  %221 = load %struct.WGPUVertexAttribute*, %struct.WGPUVertexAttribute** %140, align 8
  %222 = zext i32 %217 to i64
  %223 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %221, i64 %222
  %224 = bitcast %struct.WGPUVertexAttribute* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* nonnull align 8 %134, i64 24, i1 false) #10
  %225 = load i32, i32* %138, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %138, align 4
  br label %228

227:                                              ; preds = %206
  call void @_ZN3WTF6VectorI19WGPUVertexAttributeLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.478"* %115, %struct.WGPUVertexAttribute* nonnull dereferenceable(24) %8) #10
  br label %228

228:                                              ; preds = %227, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #10
  %229 = add nuw i32 %207, 1
  %230 = load i32, i32* %190, align 4
  %231 = icmp ult i32 %229, %230
  br i1 %231, label %206, label %232

232:                                              ; preds = %228, %203, %172, %179
  %233 = phi i8* [ %141, %179 ], [ %141, %172 ], [ %126, %203 ], [ %126, %228 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #10
  %234 = add nuw i32 %144, 1
  %235 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %120) #10
  %236 = icmp ult i32 %234, %235
  br i1 %236, label %143, label %237

237:                                              ; preds = %232, %118
  %238 = getelementptr inbounds %"class.WTF::Vector.473", %"class.WTF::Vector.473"* %114, i64 0, i32 0, i32 0, i32 0
  %239 = load %struct.WGPUVertexBufferLayout*, %struct.WGPUVertexBufferLayout** %238, align 8
  %240 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %241 = load i32, i32* %240, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %239, i64 %242
  %244 = icmp eq i32 %241, 0
  br i1 %244, label %260, label %245

245:                                              ; preds = %237, %256
  %246 = phi %struct.WGPUVertexBufferLayout* [ %258, %256 ], [ %239, %237 ]
  %247 = phi i32 [ %257, %256 ], [ 0, %237 ]
  %248 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %246, i64 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %256, label %251

251:                                              ; preds = %245
  %252 = call dereferenceable(24) %struct.WGPUVertexAttribute* @_ZN3WTF6VectorI19WGPUVertexAttributeLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.478"* %115, i32 %247) #10
  %253 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %246, i64 0, i32 3
  store %struct.WGPUVertexAttribute* %252, %struct.WGPUVertexAttribute** %253, align 8
  %254 = load i32, i32* %248, align 4
  %255 = add i32 %254, %247
  br label %256

256:                                              ; preds = %251, %245
  %257 = phi i32 [ %255, %251 ], [ %247, %245 ]
  %258 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %246, i64 1
  %259 = icmp eq %struct.WGPUVertexBufferLayout* %258, %243
  br i1 %259, label %260, label %245

260:                                              ; preds = %180, %256, %117, %237
  %261 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %262 = load i32, i32* %261, align 8
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %591

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 3, i32 3
  store i32 %266, i32* %267, align 8
  %268 = bitcast %"class.WTF::Vector.473"* %114 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 3, i32 4
  %271 = bitcast %struct.WGPUVertexBufferLayout** %270 to i64*
  store i64 %269, i64* %271, align 8
  br label %272

272:                                              ; preds = %264, %76
  %273 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 4, i32 0, i32 0
  %274 = load %"class.blink::GPUPrimitiveState"*, %"class.blink::GPUPrimitiveState"** %273, align 8
  %275 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5
  %276 = getelementptr inbounds %"struct.blink::OwnedPrimitiveState", %"struct.blink::OwnedPrimitiveState"* %275, i64 0, i32 0, i32 0
  store %struct.WGPUChainedStruct* null, %struct.WGPUChainedStruct** %276, align 8
  %277 = getelementptr inbounds %"class.blink::GPUPrimitiveState", %"class.blink::GPUPrimitiveState"* %274, i64 0, i32 6
  %278 = call i32 @_ZN5blink10AsDawnEnumI21WGPUPrimitiveTopologyEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %277) #10
  %279 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5, i32 0, i32 1
  store i32 %278, i32* %279, align 8
  %280 = getelementptr inbounds %"class.blink::GPUPrimitiveState", %"class.blink::GPUPrimitiveState"* %274, i64 0, i32 5
  %281 = call i32 @_ZN5blink10AsDawnEnumI15WGPUIndexFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %280) #10
  %282 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5, i32 0, i32 2
  store i32 %281, i32* %282, align 4
  %283 = getelementptr inbounds %"class.blink::GPUPrimitiveState", %"class.blink::GPUPrimitiveState"* %274, i64 0, i32 4
  %284 = call i32 @_ZN5blink10AsDawnEnumI13WGPUFrontFaceEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %283) #10
  %285 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5, i32 0, i32 3
  store i32 %284, i32* %285, align 8
  %286 = getelementptr inbounds %"class.blink::GPUPrimitiveState", %"class.blink::GPUPrimitiveState"* %274, i64 0, i32 3
  %287 = call i32 @_ZN5blink10AsDawnEnumI12WGPUCullModeEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %286) #10
  %288 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5, i32 0, i32 4
  store i32 %287, i32* %288, align 4
  %289 = getelementptr inbounds %"class.blink::GPUPrimitiveState", %"class.blink::GPUPrimitiveState"* %274, i64 0, i32 1
  %290 = load i8, i8* %289, align 8, !range !6
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %298, label %292

292:                                              ; preds = %272
  %293 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5, i32 1, i32 0, i32 1
  store i32 7, i32* %293, align 8
  %294 = getelementptr inbounds %"class.blink::GPUPrimitiveState", %"class.blink::GPUPrimitiveState"* %274, i64 0, i32 2
  %295 = load i8, i8* %294, align 1, !range !6
  %296 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5, i32 1, i32 1
  store i8 %295, i8* %296, align 8
  %297 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 5, i32 1, i32 0
  store %struct.WGPUChainedStruct* %297, %struct.WGPUChainedStruct** %276, align 8
  br label %298

298:                                              ; preds = %272, %292
  %299 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 4
  %300 = bitcast %struct.WGPUPrimitiveState* %299 to i8*
  %301 = bitcast %"struct.blink::OwnedPrimitiveState"* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 24, i1 false)
  %302 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 1, i32 0, i32 0
  %303 = load %"class.blink::GPUDepthStencilState"*, %"class.blink::GPUDepthStencilState"** %302, align 8
  %304 = icmp eq %"class.blink::GPUDepthStencilState"* %303, null
  br i1 %304, label %305, label %307

305:                                              ; preds = %298
  %306 = bitcast %"struct.blink::OwnedRenderPipelineDescriptor"* %3 to i8*
  br label %385

307:                                              ; preds = %298
  %308 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 12
  %309 = call i32 @_ZN5blink10AsDawnEnumI17WGPUTextureFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %308) #10, !noalias !7
  %310 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 11
  %311 = load i8, i8* %310, align 8, !range !6, !noalias !7
  %312 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 10
  %313 = call i32 @_ZN5blink10AsDawnEnumI19WGPUCompareFunctionEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %312) #10, !noalias !7
  %314 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 14, i32 0, i32 0
  %315 = load %"class.blink::GPUStencilFaceState"*, %"class.blink::GPUStencilFaceState"** %314, align 8, !noalias !7
  %316 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %315, i64 0, i32 1
  %317 = call i32 @_ZN5blink10AsDawnEnumI19WGPUCompareFunctionEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %316) #10, !noalias !7
  %318 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %315, i64 0, i32 2
  %319 = call i32 @_ZN5blink10AsDawnEnumI20WGPUStencilOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %318) #10, !noalias !7
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %315, i64 0, i32 3
  %322 = call i32 @_ZN5blink10AsDawnEnumI20WGPUStencilOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %321) #10, !noalias !7
  %323 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %315, i64 0, i32 4
  %324 = call i32 @_ZN5blink10AsDawnEnumI20WGPUStencilOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %323) #10, !noalias !7
  %325 = zext i32 %324 to i64
  %326 = shl nuw i64 %325, 32
  %327 = or i64 %326, %320
  %328 = zext i32 %322 to i64
  %329 = shl nuw i64 %328, 32
  %330 = zext i32 %317 to i64
  %331 = or i64 %329, %330
  %332 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 13, i32 0, i32 0
  %333 = load %"class.blink::GPUStencilFaceState"*, %"class.blink::GPUStencilFaceState"** %332, align 8, !noalias !7
  %334 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %333, i64 0, i32 1
  %335 = call i32 @_ZN5blink10AsDawnEnumI19WGPUCompareFunctionEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %334) #10, !noalias !7
  %336 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %333, i64 0, i32 2
  %337 = call i32 @_ZN5blink10AsDawnEnumI20WGPUStencilOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %336) #10, !noalias !7
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %333, i64 0, i32 3
  %340 = call i32 @_ZN5blink10AsDawnEnumI20WGPUStencilOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %339) #10, !noalias !7
  %341 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %333, i64 0, i32 4
  %342 = call i32 @_ZN5blink10AsDawnEnumI20WGPUStencilOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %341) #10, !noalias !7
  %343 = zext i32 %342 to i64
  %344 = shl nuw i64 %343, 32
  %345 = or i64 %344, %338
  %346 = zext i32 %340 to i64
  %347 = shl nuw i64 %346, 32
  %348 = zext i32 %335 to i64
  %349 = or i64 %347, %348
  %350 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 15
  %351 = load i32, i32* %350, align 8, !noalias !7
  %352 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 16
  %353 = load i32, i32* %352, align 4, !noalias !7
  %354 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 7
  %355 = load i32, i32* %354, align 8, !noalias !7
  %356 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 9
  %357 = bitcast float* %356 to i32*
  %358 = load i32, i32* %357, align 8, !noalias !7
  %359 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %303, i64 0, i32 8
  %360 = bitcast float* %359 to i32*
  %361 = load i32, i32* %360, align 4, !noalias !7
  %362 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6
  %363 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 0
  store %struct.WGPUChainedStruct* null, %struct.WGPUChainedStruct** %363, align 8
  %364 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 1
  store i32 %309, i32* %364, align 8
  %365 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 2
  store i8 %311, i8* %365, align 4
  %366 = bitcast %"struct.blink::OwnedRenderPipelineDescriptor"* %3 to i8*
  %367 = getelementptr inbounds i8, i8* %366, i64 269
  call void @llvm.memset.p0i8.i64(i8* align 1 %367, i8 0, i64 3, i1 false)
  %368 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 3
  store i32 %313, i32* %368, align 8
  %369 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 4
  %370 = bitcast %struct.WGPUStencilFaceState* %369 to i64*
  store i64 %331, i64* %370, align 4
  %371 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 4, i32 2
  %372 = bitcast i32* %371 to i64*
  store i64 %327, i64* %372, align 4
  %373 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 5
  %374 = bitcast %struct.WGPUStencilFaceState* %373 to i64*
  store i64 %349, i64* %374, align 4
  %375 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 5, i32 2
  %376 = bitcast i32* %375 to i64*
  store i64 %345, i64* %376, align 4
  %377 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 6
  store i32 %351, i32* %377, align 4
  %378 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 7
  store i32 %353, i32* %378, align 8
  %379 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 8
  store i32 %355, i32* %379, align 4
  %380 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 9
  %381 = bitcast float* %380 to i32*
  store i32 %358, i32* %381, align 8
  %382 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 6, i32 10
  %383 = bitcast float* %382 to i32*
  store i32 %361, i32* %383, align 4
  %384 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 5
  store %struct.WGPUDepthStencilState* %362, %struct.WGPUDepthStencilState** %384, align 8
  br label %385

385:                                              ; preds = %305, %307
  %386 = phi i8* [ %306, %305 ], [ %366, %307 ]
  %387 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 3, i32 0, i32 0
  %388 = load %"class.blink::GPUMultisampleState"*, %"class.blink::GPUMultisampleState"** %387, align 8
  %389 = getelementptr inbounds %"class.blink::GPUMultisampleState", %"class.blink::GPUMultisampleState"* %388, i64 0, i32 5
  %390 = load i32, i32* %389, align 4, !noalias !10
  %391 = getelementptr inbounds %"class.blink::GPUMultisampleState", %"class.blink::GPUMultisampleState"* %388, i64 0, i32 6
  %392 = load i32, i32* %391, align 8, !noalias !10
  %393 = getelementptr inbounds %"class.blink::GPUMultisampleState", %"class.blink::GPUMultisampleState"* %388, i64 0, i32 4
  %394 = load i8, i8* %393, align 1, !range !6, !noalias !10
  %395 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 6, i32 0
  store %struct.WGPUChainedStruct* null, %struct.WGPUChainedStruct** %395, align 8
  %396 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 6, i32 1
  store i32 %390, i32* %396, align 8
  %397 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 6, i32 2
  store i32 %392, i32* %397, align 4
  %398 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 6, i32 3
  store i8 %394, i8* %398, align 8
  %399 = getelementptr inbounds i8, i8* %386, i64 113
  call void @llvm.memset.p0i8.i64(i8* align 1 %399, i8 0, i64 7, i1 false)
  %400 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 2, i32 0, i32 0
  %401 = load %"class.blink::GPUFragmentState"*, %"class.blink::GPUFragmentState"** %400, align 8
  %402 = icmp eq %"class.blink::GPUFragmentState"* %401, null
  br i1 %402, label %591, label %403

403:                                              ; preds = %385
  %404 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7
  %405 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 0, i32 1
  %406 = getelementptr inbounds %"class.blink::GPUFragmentState", %"class.blink::GPUFragmentState"* %401, i64 0, i32 0, i32 2, i32 0, i32 0
  %407 = bitcast %"struct.blink::OwnedFragmentState"* %404 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %407, i8 0, i64 40, i1 false)
  %408 = load %"class.blink::GPUShaderModule"*, %"class.blink::GPUShaderModule"** %406, align 8
  %409 = getelementptr inbounds %"class.blink::GPUShaderModule", %"class.blink::GPUShaderModule"* %408, i64 0, i32 0, i32 1
  %410 = bitcast %struct.WGPUShaderModuleImpl** %409 to i64*
  %411 = load i64, i64* %410, align 8
  %412 = bitcast %struct.WGPUShaderModuleImpl** %405 to i64*
  store i64 %411, i64* %412, align 8
  %413 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #10
  %414 = getelementptr inbounds %"class.blink::GPUFragmentState", %"class.blink::GPUFragmentState"* %401, i64 0, i32 0, i32 1
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* %414) #10
  %415 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 1
  %416 = bitcast %"class.std::__1::basic_string"* %415 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %417 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %416, i64 0, i32 1, i32 0
  %418 = load i8, i8* %417, align 1
  %419 = icmp slt i8 %418, 0
  br i1 %419, label %420, label %423

420:                                              ; preds = %403
  %421 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load i8*, i8** %421, align 8
  call void @_ZdlPv(i8* %422) #11
  br label %423

423:                                              ; preds = %420, %403
  %424 = bitcast %"class.std::__1::basic_string"* %415 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %424, i8* nonnull align 8 %413, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #10
  %425 = load i8, i8* %417, align 1
  %426 = icmp slt i8 %425, 0
  br i1 %426, label %427, label %430

427:                                              ; preds = %423
  %428 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = load i8*, i8** %428, align 8
  br label %430

430:                                              ; preds = %427, %423
  %431 = phi i8* [ %429, %427 ], [ %424, %423 ]
  %432 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 0, i32 2
  store i8* %431, i8** %432, align 8
  %433 = getelementptr inbounds %"class.blink::GPUFragmentState", %"class.blink::GPUFragmentState"* %401, i64 0, i32 2, i32 0
  %434 = getelementptr inbounds %"class.blink::GPUFragmentState", %"class.blink::GPUFragmentState"* %401, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %435 = load i32, i32* %434, align 4
  %436 = zext i32 %435 to i64
  %437 = shl nuw nsw i64 %436, 5
  %438 = call i8* @_Znam(i64 %437) #11
  %439 = bitcast i8* %438 to %struct.WGPUColorTargetState*
  %440 = icmp eq i32 %435, 0
  br i1 %440, label %461, label %441

441:                                              ; preds = %430, %441
  %442 = phi i64 [ %459, %441 ], [ 0, %430 ]
  %443 = trunc i64 %442 to i32
  %444 = call dereferenceable(8) %"class.blink::Member.249"* @_ZNK3WTF6VectorIN5blink6MemberINS1_19GPUColorTargetStateEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.246"* %433, i32 %443) #10
  %445 = getelementptr inbounds %"class.blink::Member.249", %"class.blink::Member.249"* %444, i64 0, i32 0, i32 0
  %446 = load %"class.blink::GPUColorTargetState"*, %"class.blink::GPUColorTargetState"** %445, align 8
  %447 = getelementptr inbounds %"class.blink::GPUColorTargetState", %"class.blink::GPUColorTargetState"* %446, i64 0, i32 5
  %448 = load i32, i32* %447, align 8, !noalias !13
  %449 = getelementptr inbounds %"class.blink::GPUColorTargetState", %"class.blink::GPUColorTargetState"* %446, i64 0, i32 4
  %450 = call i32 @_ZN5blink10AsDawnEnumI17WGPUTextureFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %449) #10, !noalias !13
  %451 = getelementptr inbounds %struct.WGPUColorTargetState, %struct.WGPUColorTargetState* %439, i64 %442
  %452 = bitcast %struct.WGPUColorTargetState* %451 to i8*
  %453 = getelementptr inbounds %struct.WGPUColorTargetState, %struct.WGPUColorTargetState* %451, i64 0, i32 0
  store %struct.WGPUChainedStruct* null, %struct.WGPUChainedStruct** %453, align 8
  %454 = getelementptr inbounds %struct.WGPUColorTargetState, %struct.WGPUColorTargetState* %439, i64 %442, i32 1
  store i32 %450, i32* %454, align 8
  %455 = getelementptr inbounds i8, i8* %452, i64 12
  call void @llvm.memset.p0i8.i64(i8* align 4 %455, i8 0, i64 12, i1 false) #10
  %456 = getelementptr inbounds %struct.WGPUColorTargetState, %struct.WGPUColorTargetState* %439, i64 %442, i32 3
  store i32 %448, i32* %456, align 8
  %457 = getelementptr inbounds i8, i8* %452, i64 28
  %458 = bitcast i8* %457 to i32*
  store i32 0, i32* %458, align 4
  %459 = add nuw nsw i64 %442, 1
  %460 = icmp eq i64 %459, %436
  br i1 %460, label %461, label %441

461:                                              ; preds = %441, %430
  %462 = ptrtoint i8* %438 to i64
  %463 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 2
  %464 = getelementptr inbounds %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.483"* %463, i64 0, i32 0, i32 0, i32 0
  %465 = load %struct.WGPUColorTargetState*, %struct.WGPUColorTargetState** %464, align 8
  %466 = bitcast %"class.std::__1::unique_ptr.483"* %463 to i64*
  store i64 %462, i64* %466, align 8
  %467 = icmp eq %struct.WGPUColorTargetState* %465, null
  br i1 %467, label %471, label %468

468:                                              ; preds = %461
  %469 = bitcast %struct.WGPUColorTargetState* %465 to i8*
  call void @_ZdaPv(i8* %469) #11
  %470 = load i64, i64* %466, align 8
  br label %471

471:                                              ; preds = %468, %461
  %472 = phi i64 [ %470, %468 ], [ %462, %461 ]
  %473 = load i32, i32* %434, align 4
  %474 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 0, i32 3
  store i32 %473, i32* %474, align 8
  %475 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 0, i32 4
  %476 = bitcast %struct.WGPUColorTargetState** %475 to i64*
  store i64 %472, i64* %476, align 8
  %477 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 3
  %478 = load i32, i32* %434, align 4
  %479 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 3, i32 0, i32 0, i32 2
  %480 = load i32, i32* %479, align 4
  %481 = icmp ult i32 %480, %478
  br i1 %481, label %482, label %537

482:                                              ; preds = %471
  %483 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 7, i32 3, i32 0, i32 0, i32 1
  %484 = load i32, i32* %483, align 8
  %485 = icmp ult i32 %484, %478
  br i1 %485, label %486, label %525

486:                                              ; preds = %482
  %487 = lshr i32 %484, 2
  %488 = add nuw i32 %484, 1
  %489 = add i32 %488, %487
  %490 = icmp ugt i32 %489, 4
  %491 = select i1 %490, i32 %489, i32 4
  %492 = icmp ugt i32 %491, %478
  %493 = select i1 %492, i32 %491, i32 %478
  %494 = icmp ult i32 %484, %493
  br i1 %494, label %495, label %525, !prof !16

495:                                              ; preds = %486
  %496 = getelementptr inbounds %"class.WTF::Vector.489", %"class.WTF::Vector.489"* %477, i64 0, i32 0, i32 0, i32 0
  %497 = load %struct.WGPUBlendState*, %struct.WGPUBlendState** %496, align 8
  %498 = icmp eq %struct.WGPUBlendState* %497, null
  %499 = zext i32 %493 to i64
  %500 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI14WGPUBlendStateEEmm(i64 %499) #10
  %501 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %500, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI14WGPUBlendStateEEPKcv, i64 0, i64 0)) #10
  br i1 %498, label %502, label %507

502:                                              ; preds = %495
  %503 = ptrtoint i8* %501 to i64
  %504 = bitcast %"class.WTF::Vector.489"* %477 to i64*
  store atomic i64 %503, i64* %504 monotonic, align 8
  %505 = udiv i64 %500, 24
  %506 = trunc i64 %505 to i32
  store i32 %506, i32* %483, align 8
  br label %525

507:                                              ; preds = %495
  %508 = udiv i64 %500, 24
  %509 = ptrtoint i8* %501 to i64
  %510 = load %struct.WGPUBlendState*, %struct.WGPUBlendState** %496, align 8
  %511 = icmp ne i8* %501, null
  %512 = icmp ne %struct.WGPUBlendState* %510, null
  %513 = and i1 %511, %512
  %514 = bitcast %struct.WGPUBlendState* %510 to i8*
  br i1 %513, label %515, label %521, !prof !16

515:                                              ; preds = %507
  %516 = load i32, i32* %479, align 4
  %517 = zext i32 %516 to i64
  %518 = mul nuw nsw i64 %517, 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %501, i8* nonnull align 4 %514, i64 %518, i1 false) #10
  %519 = bitcast %"class.WTF::Vector.489"* %477 to i8**
  %520 = load i8*, i8** %519, align 8
  br label %521

521:                                              ; preds = %515, %507
  %522 = phi i8* [ %520, %515 ], [ %514, %507 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %522) #10
  %523 = bitcast %"class.WTF::Vector.489"* %477 to i64*
  store atomic i64 %509, i64* %523 monotonic, align 8
  %524 = trunc i64 %508 to i32
  store i32 %524, i32* %483, align 8
  br label %525

525:                                              ; preds = %521, %502, %486, %482
  %526 = getelementptr inbounds %"class.WTF::Vector.489", %"class.WTF::Vector.489"* %477, i64 0, i32 0, i32 0, i32 0
  %527 = load %struct.WGPUBlendState*, %struct.WGPUBlendState** %526, align 8
  %528 = load i32, i32* %479, align 4
  %529 = zext i32 %528 to i64
  %530 = getelementptr inbounds %struct.WGPUBlendState, %struct.WGPUBlendState* %527, i64 %529
  %531 = zext i32 %478 to i64
  %532 = getelementptr inbounds %struct.WGPUBlendState, %struct.WGPUBlendState* %527, i64 %531
  %533 = bitcast %struct.WGPUBlendState* %530 to i8*
  %534 = ptrtoint %struct.WGPUBlendState* %532 to i64
  %535 = ptrtoint %struct.WGPUBlendState* %530 to i64
  %536 = sub i64 %534, %535
  call void @llvm.memset.p0i8.i64(i8* align 4 %533, i8 0, i64 %536, i1 false) #10
  br label %537

537:                                              ; preds = %525, %471
  store i32 %478, i32* %479, align 4
  %538 = load i32, i32* %434, align 4
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %588, label %540

540:                                              ; preds = %537, %583
  %541 = phi i64 [ %584, %583 ], [ 0, %537 ]
  %542 = trunc i64 %541 to i32
  %543 = call dereferenceable(8) %"class.blink::Member.249"* @_ZNK3WTF6VectorIN5blink6MemberINS1_19GPUColorTargetStateEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.246"* %433, i32 %542) #10
  %544 = getelementptr inbounds %"class.blink::Member.249", %"class.blink::Member.249"* %543, i64 0, i32 0, i32 0
  %545 = load %"class.blink::GPUColorTargetState"*, %"class.blink::GPUColorTargetState"** %544, align 8
  %546 = getelementptr inbounds %"class.blink::GPUColorTargetState", %"class.blink::GPUColorTargetState"* %545, i64 0, i32 3, i32 0, i32 0
  %547 = load %"class.blink::GPUBlendState"*, %"class.blink::GPUBlendState"** %546, align 8
  %548 = icmp eq %"class.blink::GPUBlendState"* %547, null
  br i1 %548, label %583, label %549

549:                                              ; preds = %540
  %550 = getelementptr inbounds %"class.blink::GPUBlendState", %"class.blink::GPUBlendState"* %547, i64 0, i32 2, i32 0, i32 0
  %551 = load %"class.blink::GPUBlendComponent"*, %"class.blink::GPUBlendComponent"** %550, align 8, !noalias !17
  %552 = getelementptr inbounds %"class.blink::GPUBlendComponent", %"class.blink::GPUBlendComponent"* %551, i64 0, i32 1
  %553 = call fastcc i32 @_ZN5blink12_GLOBAL__N_117AsDawnBlendFactorERKN3WTF6StringEPNS_9GPUDeviceE(%"class.WTF::String"* dereferenceable(8) %552, %"class.blink::GPUDevice"* %1) #10, !noalias !17
  %554 = getelementptr inbounds %"class.blink::GPUBlendComponent", %"class.blink::GPUBlendComponent"* %551, i64 0, i32 3
  %555 = call fastcc i32 @_ZN5blink12_GLOBAL__N_117AsDawnBlendFactorERKN3WTF6StringEPNS_9GPUDeviceE(%"class.WTF::String"* dereferenceable(8) %554, %"class.blink::GPUDevice"* %1) #10, !noalias !17
  %556 = getelementptr inbounds %"class.blink::GPUBlendComponent", %"class.blink::GPUBlendComponent"* %551, i64 0, i32 2
  %557 = call i32 @_ZN5blink10AsDawnEnumI18WGPUBlendOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %556) #10, !noalias !17
  %558 = zext i32 %555 to i64
  %559 = shl nuw i64 %558, 32
  %560 = zext i32 %557 to i64
  %561 = or i64 %559, %560
  %562 = getelementptr inbounds %"class.blink::GPUBlendState", %"class.blink::GPUBlendState"* %547, i64 0, i32 1, i32 0, i32 0
  %563 = load %"class.blink::GPUBlendComponent"*, %"class.blink::GPUBlendComponent"** %562, align 8, !noalias !17
  %564 = getelementptr inbounds %"class.blink::GPUBlendComponent", %"class.blink::GPUBlendComponent"* %563, i64 0, i32 1
  %565 = call fastcc i32 @_ZN5blink12_GLOBAL__N_117AsDawnBlendFactorERKN3WTF6StringEPNS_9GPUDeviceE(%"class.WTF::String"* dereferenceable(8) %564, %"class.blink::GPUDevice"* %1) #10, !noalias !17
  %566 = getelementptr inbounds %"class.blink::GPUBlendComponent", %"class.blink::GPUBlendComponent"* %563, i64 0, i32 3
  %567 = call fastcc i32 @_ZN5blink12_GLOBAL__N_117AsDawnBlendFactorERKN3WTF6StringEPNS_9GPUDeviceE(%"class.WTF::String"* dereferenceable(8) %566, %"class.blink::GPUDevice"* %1) #10, !noalias !17
  %568 = getelementptr inbounds %"class.blink::GPUBlendComponent", %"class.blink::GPUBlendComponent"* %563, i64 0, i32 2
  %569 = call i32 @_ZN5blink10AsDawnEnumI18WGPUBlendOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %568) #10, !noalias !17
  %570 = zext i32 %567 to i64
  %571 = shl nuw i64 %570, 32
  %572 = zext i32 %569 to i64
  %573 = or i64 %571, %572
  %574 = call dereferenceable(24) %struct.WGPUBlendState* @_ZN3WTF6VectorI14WGPUBlendStateLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.489"* %477, i32 %542) #10
  %575 = bitcast %struct.WGPUBlendState* %574 to i64*
  store i64 %561, i64* %575, align 4
  %576 = getelementptr inbounds %struct.WGPUBlendState, %struct.WGPUBlendState* %574, i64 0, i32 0, i32 2
  store i32 %553, i32* %576, align 4
  %577 = getelementptr inbounds %struct.WGPUBlendState, %struct.WGPUBlendState* %574, i64 0, i32 1
  %578 = bitcast %struct.WGPUBlendComponent* %577 to i64*
  store i64 %573, i64* %578, align 4
  %579 = getelementptr inbounds %struct.WGPUBlendState, %struct.WGPUBlendState* %574, i64 0, i32 1, i32 2
  store i32 %565, i32* %579, align 4
  %580 = call dereferenceable(24) %struct.WGPUBlendState* @_ZN3WTF6VectorI14WGPUBlendStateLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.489"* %477, i32 %542) #10
  %581 = load %struct.WGPUColorTargetState*, %struct.WGPUColorTargetState** %464, align 8
  %582 = getelementptr inbounds %struct.WGPUColorTargetState, %struct.WGPUColorTargetState* %581, i64 %541, i32 2
  store %struct.WGPUBlendState* %580, %struct.WGPUBlendState** %582, align 8
  br label %583

583:                                              ; preds = %549, %540
  %584 = add nuw nsw i64 %541, 1
  %585 = load i32, i32* %434, align 4
  %586 = zext i32 %585 to i64
  %587 = icmp ult i64 %584, %586
  br i1 %587, label %540, label %588

588:                                              ; preds = %583, %537
  %589 = getelementptr inbounds %"struct.blink::OwnedFragmentState", %"struct.blink::OwnedFragmentState"* %404, i64 0, i32 0
  %590 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %3, i64 0, i32 0, i32 7
  store %struct.WGPUFragmentState* %589, %struct.WGPUFragmentState** %590, align 8
  br label %591

591:                                              ; preds = %260, %385, %588
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14GPUVertexState10hasBuffersEv(%"class.blink::GPUVertexState"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUVertexState", %"class.blink::GPUVertexState"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::GPUVertexState", %"class.blink::GPUVertexState"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %56, label %31

31:                                               ; preds = %14, %9, %6, %25
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp ne i32 %54, 10
  br label %56

56:                                               ; preds = %50, %39, %34, %31, %25, %1
  %57 = phi i1 [ false, %25 ], [ false, %1 ], [ true, %31 ], [ %55, %50 ], [ true, %34 ], [ true, %39 ]
  ret i1 %57
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPURenderPipeline"* @_ZN5blink17GPURenderPipeline6CreateEPNS_11ScriptStateEPNS_9GPUDeviceEPKNS_27GPURenderPipelineDescriptorE(%"class.blink::ScriptState"* nocapture readonly, %"class.blink::GPUDevice"*, %"class.blink::GPURenderPipelineDescriptor"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"struct.blink::OwnedRenderPipelineDescriptor", align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  %9 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 5, i16* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 3
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  %15 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %18 = bitcast %"class.WTF::StringImpl"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #10
  %19 = bitcast %"struct.blink::OwnedRenderPipelineDescriptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %19) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast ({ { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUVertexBufferLayout* }, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, { %struct.WGPUChainedStruct*, i32, i32, i8, [7 x i8] }, %struct.WGPUFragmentState* }, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.WTF::Vector.473", %"class.WTF::Vector.478", { %struct.WGPUPrimitiveState, { { %struct.WGPUChainedStruct*, i32, [4 x i8] }, i8, [7 x i8] } }, { %struct.WGPUChainedStruct*, i32, i8, [3 x i8], i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }, { { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, [4 x i8], %struct.WGPUColorTargetState* }, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.483", %"class.WTF::Vector.489" } }* @__const._ZN5blink17GPURenderPipeline6CreateEPNS_11ScriptStateEPNS_9GPUDeviceEPKNS_27GPURenderPipelineDescriptorE.dawn_desc_info to i8*), i64 360, i1 false)
  %20 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 5, i32 1, i32 1
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 7
  %22 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 7, i32 0, i32 4
  %23 = bitcast %"struct.blink::OwnedFragmentState"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 28, i1 false) #10
  %24 = bitcast %struct.WGPUColorTargetState** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 56, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 244, i1 false) #10
  call void @_ZN5blink17ConvertToDawnTypeEPN2v87IsolateEPNS_9GPUDeviceEPKNS_27GPURenderPipelineDescriptorEPNS_29OwnedRenderPipelineDescriptorERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.blink::GPUDevice"* %1, %"class.blink::GPURenderPipelineDescriptor"* %2, %"struct.blink::OwnedRenderPipelineDescriptor"* nonnull %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4)
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %57

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.blink::GPUDevice", %"class.blink::GPUDevice"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %29, i64 0, i32 3, i32 56
  %31 = load %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)** %30, align 8
  %32 = getelementptr inbounds %"class.blink::GPUDevice", %"class.blink::GPUDevice"* %1, i64 0, i32 2, i32 1
  %33 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %32, align 8
  %34 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 0
  %35 = call %struct.WGPURenderPipelineImpl* %31(%struct.WGPUDeviceImpl* %33, %struct.WGPURenderPipelineDescriptor* nonnull %34) #10
  %36 = ptrtoint %struct.WGPURenderPipelineImpl* %35 to i64
  %37 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #10
  %38 = bitcast i8* %37 to %"class.blink::GPURenderPipeline"*
  %39 = bitcast i8* %37 to %"class.blink::DawnObjectImpl"*
  call void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"* %39, %"class.blink::GPUDevice"* %1) #10
  %40 = bitcast i8* %37 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPURenderPipelineImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 40
  %42 = bitcast i8* %41 to i64*
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %37, i64 48
  %44 = bitcast i8* %43 to %struct.WGPUDeviceImpl**
  %45 = call %struct.WGPUDeviceImpl* @_ZN5blink14DawnObjectImpl15GetDeviceHandleEv(%"class.blink::DawnObjectImpl"* %39) #10
  store %struct.WGPUDeviceImpl* %45, %struct.WGPUDeviceImpl** %44, align 8
  %46 = getelementptr inbounds i8, i8* %37, i64 16
  %47 = bitcast i8* %46 to %"class.blink::DawnControlClientHolder"**
  %48 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %48, i64 0, i32 3, i32 70
  %50 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %49, align 8
  call void %50(%struct.WGPUDeviceImpl* %45) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17GPURenderPipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %51 = getelementptr inbounds i8, i8* %37, i64 -4
  %52 = bitcast i8* %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = or i16 %53, 1
  store atomic i16 %54, i16* %52 release, align 2
  %55 = bitcast i8* %46 to %"class.blink::DawnObjectBase"*
  %56 = getelementptr inbounds %"class.blink::GPURenderPipelineDescriptor", %"class.blink::GPURenderPipelineDescriptor"* %2, i64 0, i32 0, i32 0, i32 1
  call void @_ZN5blink14DawnObjectBase8setLabelERKN3WTF6StringE(%"class.blink::DawnObjectBase"* %55, %"class.WTF::String"* dereferenceable(8) %56) #10
  br label %57

57:                                               ; preds = %3, %27
  %58 = phi %"class.blink::GPURenderPipeline"* [ %38, %27 ], [ null, %3 ]
  %59 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 7, i32 3, i32 0, i32 0, i32 0
  %60 = load %struct.WGPUBlendState*, %struct.WGPUBlendState** %59, align 8
  %61 = icmp eq %struct.WGPUBlendState* %60, null
  %62 = bitcast %struct.WGPUBlendState* %60 to i8*
  br i1 %61, label %69, label %63, !prof !16

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 7, i32 3, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !5

67:                                               ; preds = %63
  store i32 0, i32* %64, align 4
  br label %68

68:                                               ; preds = %67, %63
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #10
  store %struct.WGPUBlendState* null, %struct.WGPUBlendState** %59, align 8
  br label %69

69:                                               ; preds = %68, %57
  %70 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %71 = load %struct.WGPUColorTargetState*, %struct.WGPUColorTargetState** %70, align 8
  store %struct.WGPUColorTargetState* null, %struct.WGPUColorTargetState** %70, align 8
  %72 = icmp eq %struct.WGPUColorTargetState* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast %struct.WGPUColorTargetState* %71 to i8*
  call void @_ZdaPv(i8* %74) #11
  br label %75

75:                                               ; preds = %73, %69
  %76 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 7, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %81, %75
  %85 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %86 = load %struct.WGPUVertexAttribute*, %struct.WGPUVertexAttribute** %85, align 8
  %87 = icmp eq %struct.WGPUVertexAttribute* %86, null
  %88 = bitcast %struct.WGPUVertexAttribute* %86 to i8*
  br i1 %87, label %95, label %89, !prof !16

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 4, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93, !prof !5

93:                                               ; preds = %89
  store i32 0, i32* %90, align 4
  br label %94

94:                                               ; preds = %93, %89
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %88) #10
  store %struct.WGPUVertexAttribute* null, %struct.WGPUVertexAttribute** %85, align 8
  br label %95

95:                                               ; preds = %94, %84
  %96 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %struct.WGPUVertexBufferLayout*, %struct.WGPUVertexBufferLayout** %96, align 8
  %98 = icmp eq %struct.WGPUVertexBufferLayout* %97, null
  %99 = bitcast %struct.WGPUVertexBufferLayout* %97 to i8*
  br i1 %98, label %106, label %100, !prof !16

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 3, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104, !prof !5

104:                                              ; preds = %100
  store i32 0, i32* %101, align 4
  br label %105

105:                                              ; preds = %104, %100
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %99) #10
  store %struct.WGPUVertexBufferLayout* null, %struct.WGPUVertexBufferLayout** %96, align 8
  br label %106

106:                                              ; preds = %105, %95
  %107 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 2
  %108 = bitcast %"class.std::__1::basic_string"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #11
  br label %115

115:                                              ; preds = %112, %106
  %116 = getelementptr inbounds %"struct.blink::OwnedRenderPipelineDescriptor", %"struct.blink::OwnedRenderPipelineDescriptor"* %5, i64 0, i32 1
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #11
  br label %124

124:                                              ; preds = %115, %121
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %19) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %125 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = icmp eq i64* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %124
  %129 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %130 = bitcast %"class.v8::Isolate"* %129 to %"class.v8::internal::Isolate"*
  %131 = load i64, i64* %126, align 8
  %132 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %130, i64 %131) #10
  %133 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %129) #10
  br i1 %133, label %137, label %134

134:                                              ; preds = %128
  %135 = bitcast i64* %132 to %"class.v8::Value"*
  %136 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %129, %"class.v8::Value"* %135) #10
  br label %137

137:                                              ; preds = %134, %128, %124
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #10
  br label %153

153:                                              ; preds = %137, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #10
  ret %"class.blink::GPURenderPipeline"* %58
}

declare void @_ZN5blink14DawnObjectBase8setLabelERKN3WTF6StringE(%"class.blink::DawnObjectBase"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17GPURenderPipelineC2EPNS_9GPUDeviceEP22WGPURenderPipelineImpl(%"class.blink::GPURenderPipeline"*, %"class.blink::GPUDevice"*, %struct.WGPURenderPipelineImpl*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"* %4, %"class.blink::GPUDevice"* %1) #10
  %5 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPURenderPipelineImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 1
  store %struct.WGPURenderPipelineImpl* %2, %struct.WGPURenderPipelineImpl** %6, align 8
  %7 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 2
  %8 = tail call %struct.WGPUDeviceImpl* @_ZN5blink14DawnObjectImpl15GetDeviceHandleEv(%"class.blink::DawnObjectImpl"* %4) #10
  store %struct.WGPUDeviceImpl* %8, %struct.WGPUDeviceImpl** %7, align 8
  %9 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %10, i64 0, i32 3, i32 70
  %12 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %11, align 8
  tail call void %12(%struct.WGPUDeviceImpl* %8) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17GPURenderPipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUBindGroupLayout"* @_ZN5blink17GPURenderPipeline18getBindGroupLayoutEj(%"class.blink::GPURenderPipeline"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %4, i64 0, i32 3, i32 129
  %6 = load %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)** %5, align 8
  %7 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 1
  %8 = load %struct.WGPURenderPipelineImpl*, %struct.WGPURenderPipelineImpl** %7, align 8
  %9 = tail call %struct.WGPUBindGroupLayoutImpl* %6(%struct.WGPURenderPipelineImpl* %8, i32 %1) #10
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #10
  %11 = bitcast i8* %10 to %"class.blink::GPUBindGroupLayout"*
  %12 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %12, align 8
  tail call void @_ZN5blink18GPUBindGroupLayoutC1EPNS_9GPUDeviceEP23WGPUBindGroupLayoutImpl(%"class.blink::GPUBindGroupLayout"* %11, %"class.blink::GPUDevice"* %13, %struct.WGPUBindGroupLayoutImpl* %9) #10
  %14 = getelementptr inbounds i8, i8* %10, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  ret %"class.blink::GPUBindGroupLayout"* %11
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10DawnObjectIP22WGPURenderPipelineImplED2Ev(%"class.blink::DawnObject.494"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DawnObject.494", %"class.blink::DawnObject.494"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPURenderPipelineImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DawnObject.494", %"class.blink::DawnObject.494"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %4, i64 0, i32 3, i32 131
  %6 = load void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DawnObject.494", %"class.blink::DawnObject.494"* %0, i64 0, i32 1
  %8 = load %struct.WGPURenderPipelineImpl*, %struct.WGPURenderPipelineImpl** %7, align 8
  tail call void %6(%struct.WGPURenderPipelineImpl* %8) #10
  %9 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %10 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %9, i64 0, i32 3, i32 71
  %11 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %10, align 8
  %12 = getelementptr inbounds %"class.blink::DawnObject.494", %"class.blink::DawnObject.494"* %0, i64 0, i32 2
  %13 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %12, align 8
  tail call void %11(%struct.WGPUDeviceImpl* %13) #10
  %14 = getelementptr inbounds %"class.blink::DawnObject.494", %"class.blink::DawnObject.494"* %0, i64 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"* %14) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17GPURenderPipelineD0Ev(%"class.blink::GPURenderPipeline"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10DawnObjectIP22WGPURenderPipelineImplEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %4, i64 0, i32 3, i32 131
  %6 = load void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)** %5, align 8
  %7 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 1
  %8 = load %struct.WGPURenderPipelineImpl*, %struct.WGPURenderPipelineImpl** %7, align 8
  tail call void %6(%struct.WGPURenderPipelineImpl* %8) #10
  %9 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %3, align 8
  %10 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %9, i64 0, i32 3, i32 71
  %11 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %10, align 8
  %12 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 2
  %13 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %12, align 8
  tail call void %11(%struct.WGPUDeviceImpl* %13) #10
  %14 = getelementptr inbounds %"class.blink::GPURenderPipeline", %"class.blink::GPURenderPipeline"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"* %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE(%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17GPURenderPipeline18GetWrapperTypeInfoEv(%"class.blink::GPURenderPipeline"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17GPURenderPipeline18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.258"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

declare %"class.blink::GPUVertexBufferLayout"* @_ZN5blink17NativeValueTraitsINS_21GPUVertexBufferLayoutEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI17WGPUInputStepModeEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI16WGPUVertexFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI22WGPUVertexBufferLayoutLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.473"*, %struct.WGPUVertexBufferLayout* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.473", %"class.WTF::Vector.473"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.473", %"class.WTF::Vector.473"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %struct.WGPUVertexBufferLayout*, %struct.WGPUVertexBufferLayout** %6, align 8
  %8 = icmp ugt %struct.WGPUVertexBufferLayout* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %7, i64 %10
  %12 = icmp ugt %struct.WGPUVertexBufferLayout* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.473", %"class.WTF::Vector.473"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !16

24:                                               ; preds = %13
  %25 = icmp eq %struct.WGPUVertexBufferLayout* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI22WGPUVertexBufferLayoutEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI22WGPUVertexBufferLayoutEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.473"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %struct.WGPUVertexBufferLayout*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 24
  %37 = ptrtoint i8* %28 to i64
  %38 = load %struct.WGPUVertexBufferLayout*, %struct.WGPUVertexBufferLayout** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %struct.WGPUVertexBufferLayout* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %struct.WGPUVertexBufferLayout* %38 to i8*
  br i1 %41, label %43, label %49, !prof !16

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.473"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.473"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %struct.WGPUVertexBufferLayout*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %struct.WGPUVertexBufferLayout* %1 to i64
  %56 = ptrtoint %struct.WGPUVertexBufferLayout* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 24
  %59 = getelementptr inbounds %"class.WTF::Vector.473", %"class.WTF::Vector.473"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !16

69:                                               ; preds = %54
  %70 = icmp eq %struct.WGPUVertexBufferLayout* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI22WGPUVertexBufferLayoutEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI22WGPUVertexBufferLayoutEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.473"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %struct.WGPUVertexBufferLayout*, %struct.WGPUVertexBufferLayout** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %struct.WGPUVertexBufferLayout* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %struct.WGPUVertexBufferLayout* %78 to i8*
  br i1 %81, label %83, label %89, !prof !16

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.473"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.473"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 24
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %struct.WGPUVertexBufferLayout*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %struct.WGPUVertexBufferLayout* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %struct.WGPUVertexBufferLayout* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %struct.WGPUVertexBufferLayout* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.WGPUVertexBufferLayout, %struct.WGPUVertexBufferLayout* %100, i64 %103
  %105 = bitcast %struct.WGPUVertexBufferLayout* %104 to i8*
  %106 = bitcast %struct.WGPUVertexBufferLayout* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #10
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI22WGPUVertexBufferLayoutEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.521"* @_ZNK3WTF6VectorIN5blink6MemberINS1_18GPUVertexAttributeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.518"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.518", %"class.WTF::Vector.518"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.518", %"class.WTF::Vector.518"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.521"*, %"class.blink::Member.521"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.521", %"class.blink::Member.521"* %24, i64 %25
  ret %"class.blink::Member.521"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI19WGPUVertexAttributeLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.478"*, %struct.WGPUVertexAttribute* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.478", %"class.WTF::Vector.478"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.478", %"class.WTF::Vector.478"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %struct.WGPUVertexAttribute*, %struct.WGPUVertexAttribute** %6, align 8
  %8 = icmp ugt %struct.WGPUVertexAttribute* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %7, i64 %10
  %12 = icmp ugt %struct.WGPUVertexAttribute* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.478", %"class.WTF::Vector.478"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !16

24:                                               ; preds = %13
  %25 = icmp eq %struct.WGPUVertexAttribute* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI19WGPUVertexAttributeEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI19WGPUVertexAttributeEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.478"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %struct.WGPUVertexAttribute*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 24
  %37 = ptrtoint i8* %28 to i64
  %38 = load %struct.WGPUVertexAttribute*, %struct.WGPUVertexAttribute** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %struct.WGPUVertexAttribute* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %struct.WGPUVertexAttribute* %38 to i8*
  br i1 %41, label %43, label %49, !prof !16

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.478"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.478"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %struct.WGPUVertexAttribute*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %struct.WGPUVertexAttribute* %1 to i64
  %56 = ptrtoint %struct.WGPUVertexAttribute* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 24
  %59 = getelementptr inbounds %"class.WTF::Vector.478", %"class.WTF::Vector.478"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !16

69:                                               ; preds = %54
  %70 = icmp eq %struct.WGPUVertexAttribute* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI19WGPUVertexAttributeEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI19WGPUVertexAttributeEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.478"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %struct.WGPUVertexAttribute*, %struct.WGPUVertexAttribute** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %struct.WGPUVertexAttribute* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %struct.WGPUVertexAttribute* %78 to i8*
  br i1 %81, label %83, label %89, !prof !16

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.478"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.478"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 24
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %struct.WGPUVertexAttribute*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %struct.WGPUVertexAttribute* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %struct.WGPUVertexAttribute* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %struct.WGPUVertexAttribute* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %100, i64 %103
  %105 = bitcast %struct.WGPUVertexAttribute* %104 to i8*
  %106 = bitcast %struct.WGPUVertexAttribute* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #10
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI19WGPUVertexAttributeEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %struct.WGPUVertexAttribute* @_ZN3WTF6VectorI19WGPUVertexAttributeLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.478"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.478", %"class.WTF::Vector.478"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.478", %"class.WTF::Vector.478"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %struct.WGPUVertexAttribute*, %struct.WGPUVertexAttribute** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %struct.WGPUVertexAttribute, %struct.WGPUVertexAttribute* %24, i64 %25
  ret %struct.WGPUVertexAttribute* %26
}

declare i32 @_ZN5blink10AsDawnEnumI21WGPUPrimitiveTopologyEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI15WGPUIndexFormatEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI13WGPUFrontFaceEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI12WGPUCullModeEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI19WGPUCompareFunctionEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI20WGPUStencilOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI14WGPUBlendStateEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.249"* @_ZNK3WTF6VectorIN5blink6MemberINS1_19GPUColorTargetStateEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.246"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.246", %"class.WTF::Vector.246"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.246", %"class.WTF::Vector.246"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.249"*, %"class.blink::Member.249"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.249", %"class.blink::Member.249"* %24, i64 %25
  ret %"class.blink::Member.249"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_117AsDawnBlendFactorERKN3WTF6StringEPNS_9GPUDeviceE(%"class.WTF::String"* dereferenceable(8), %"class.blink::GPUDevice"*) unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::StringAppend.536", align 8
  %6 = alloca %"class.WTF::StringAppend.537", align 8
  %7 = alloca %"class.WTF::StringAppend.538", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = tail call i32 @_ZN5blink10AsDawnEnumI15WGPUBlendFactorEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %0) #10
  %12 = icmp sgt i32 %11, 101
  %13 = icmp ne %"class.blink::GPUDevice"* %1, null
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %291

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %17, align 8
  %18 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  %19 = bitcast %"class.WTF::StringAppend.536"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #10
  %20 = bitcast %"class.WTF::StringAppend.537"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = bitcast %"class.WTF::StringAppend.538"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  %22 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i64 18) #10
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !5

40:                                               ; preds = %31
  call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %15, %26, %41
  %44 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::StringImpl"* %24)
  %45 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %44, 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %7, i64 0, i32 1, i32 0, i32 0
  %48 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %44, 1
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %47, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i64 35) #10
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN3WTFplINS_6StringES1_S1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend.537"* nonnull sret %6, %"class.WTF::StringAppend.538"* nonnull dereferenceable(16) %7, %"class.WTF::StringImpl"* %50)
  %51 = add i32 %11, -102
  %52 = icmp ult i32 %51, 11
  br i1 %52, label %53, label %57

53:                                               ; preds = %43
  %54 = sext i32 %51 to i64
  %55 = getelementptr inbounds [11 x i8*], [11 x i8*]* @switch.table._ZN5blink12_GLOBAL__N_117AsDawnBlendFactorERKN3WTF6StringEPNS_9GPUDeviceE, i64 0, i64 %54
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %43, %53
  %58 = phi i8* [ %56, %53 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0), %43 ]
  call void @_ZN3WTFplINS_12StringAppendINS_6StringES2_EES2_PKcEENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.536"* nonnull sret %5, %"class.WTF::StringAppend.537"* nonnull dereferenceable(24) %6, i8* nonnull %58)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringES2_EES2_EEPKcS6_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend"* nonnull sret %4, %"class.WTF::StringAppend.536"* nonnull dereferenceable(32) %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0))
  %59 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %17, align 8
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #10
  br label %76

76:                                               ; preds = %75, %72, %57
  %77 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #10
  br label %93

93:                                               ; preds = %92, %89, %76
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #10
  br label %110

110:                                              ; preds = %93, %106, %109
  %111 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #10
  br label %127

127:                                              ; preds = %126, %123, %110
  %128 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #10
  br label %144

144:                                              ; preds = %143, %140, %127
  %145 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #10
  br label %161

161:                                              ; preds = %144, %157, %160
  %162 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %6, i64 0, i32 1, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #10
  br label %178

178:                                              ; preds = %177, %174, %161
  %179 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #10
  br label %195

195:                                              ; preds = %194, %191, %178
  %196 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #10
  br label %212

212:                                              ; preds = %195, %208, %211
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #10
  br label %228

228:                                              ; preds = %227, %224, %212
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #10
  br label %244

244:                                              ; preds = %228, %240, %243
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #10
  br label %261

261:                                              ; preds = %244, %257, %260
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  %262 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %262) #10
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %3, i32 0) #10
  %263 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = select i1 %266, i8* %268, i8* %262
  call void @_ZN5blink9GPUDevice17AddConsoleWarningEPKc(%"class.blink::GPUDevice"* nonnull %1, i8* %269) #10
  %270 = load i8, i8* %264, align 1
  %271 = icmp slt i8 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %261
  %273 = load i8*, i8** %267, align 8
  call void @_ZdlPv(i8* %273) #11
  br label %274

274:                                              ; preds = %261, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %262) #10
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #10
  br label %290

290:                                              ; preds = %274, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %291

291:                                              ; preds = %290, %2
  ret i32 %11
}

declare i32 @_ZN5blink10AsDawnEnumI18WGPUBlendOperationEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10AsDawnEnumI15WGPUBlendFactorEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringES2_EES2_EEPKcS6_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.536"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.536", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #10
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !5

23:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #10
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !5

45:                                               ; preds = %36
  tail call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %26
  %49 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #10
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !5

67:                                               ; preds = %58
  tail call void @llvm.trap() #10
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %48, %53, %68
  %71 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %4, i64 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 1
  %73 = bitcast i8** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast i8** %71 to i64*
  store i64 %74, i64* %75, align 8
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_EC2ES6_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.536"* nonnull byval(%"class.WTF::StringAppend.536") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS_6StringES2_EES2_PKcEENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.536"* noalias sret, %"class.WTF::StringAppend.537"* dereferenceable(24), i8*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.537", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #10
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !5

23:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #10
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !5

45:                                               ; preds = %36
  tail call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %26
  %49 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %1, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #10
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !5

67:                                               ; preds = %58
  tail call void @llvm.trap() #10
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %48, %53, %68
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcEC2ES3_S5_(%"class.WTF::StringAppend.536"* %0, %"class.WTF::StringAppend.537"* nonnull byval(%"class.WTF::StringAppend.537") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringES1_S1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend.537"* noalias sret, %"class.WTF::StringAppend.538"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !5

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #10
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !5

42:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %24, %28, %43
  %46 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %65

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !5

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %65

64:                                               ; preds = %45
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_(%"class.WTF::StringAppend.537"* %0, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* null)
  br label %77

65:                                               ; preds = %47, %62
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_(%"class.WTF::StringAppend.537"* %0, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* nonnull %2)
  %66 = load atomic i32, i32* %48 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %65
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i32 [ %72, %71 ], [ %70, %65 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %77

77:                                               ; preds = %64, %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.538", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !5

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !5

40:                                               ; preds = %31
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.538"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.538"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %8 = alloca i8*, align 8
  %9 = alloca i16*, align 8
  %10 = bitcast %"class.WTF::StringTypeAdapter.539"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #10
  %12 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %7, i8* %12) #10
  %13 = bitcast %"class.WTF::StringTypeAdapter.539"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #10
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %6, i8* %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %20 = select i1 %18, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %17
  %21 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  %24 = select i1 %23, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %1
  %32 = icmp eq %"class.WTF::StringImpl"* %26, null
  %33 = select i1 %32, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %26
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %1, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %92

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br i1 %43, label %92, label %44

44:                                               ; preds = %39
  %45 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %46 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %47 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %46, i8** nonnull dereferenceable(8) %8) #10
  %48 = load i8*, i8** %8, align 8
  %49 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %50 = bitcast %"class.WTF::StringTypeAdapter.539"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false) #10
  %51 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %5, i8* %51) #10
  %52 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringTypeAdapter.539"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 16, i1 false) #10
  %54 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %4, i8* %54) #10
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPh(%"class.WTF::StringAppend.537"* %52, i8* %48) #10
  %55 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend.537"* %52) #10
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %48, i64 %56
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.539"* nonnull %4, i8* %57) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #10
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.536"* %49) #10
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %48, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.539"* nonnull %5, i8* %60) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #10
  %61 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %61, label %140, label %62

62:                                               ; preds = %44
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #10
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !5

76:                                               ; preds = %69
  call void @llvm.trap() #10
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %47 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %140

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #10
  br label %140

92:                                               ; preds = %39, %38
  %93 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %9, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %9) #10
  %96 = load i16*, i16** %9, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.539"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 16, i1 false) #10
  %99 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %3, i8* %99) #10
  %100 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %101 = bitcast %"class.WTF::StringTypeAdapter.539"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false) #10
  %102 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %2, i8* %102) #10
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPDs(%"class.WTF::StringAppend.537"* %100, i16* %96) #10
  %103 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend.537"* %100) #10
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i16, i16* %96, i64 %104
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.539"* nonnull %2, i16* %105) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #10
  %106 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.536"* %97) #10
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i16, i16* %96, i64 %107
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.539"* nonnull %3, i16* %108) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #10
  %109 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %109, label %140, label %110

110:                                              ; preds = %92
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %127

117:                                              ; preds = %110
  %118 = zext i32 %116 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #10
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !5

124:                                              ; preds = %117
  call void @llvm.trap() #10
  unreachable

125:                                              ; preds = %117
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %115, align 4
  br label %127

127:                                              ; preds = %110, %125
  %128 = phi i32 [ %126, %125 ], [ %116, %110 ]
  %129 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %130 = load atomic i32, i32* %111 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %135 = add i32 %128, -1
  store i32 %135, i32* %134, align 4
  br label %136

136:                                              ; preds = %133, %127
  %137 = phi i32 [ %135, %133 ], [ %128, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #10
  br label %140

140:                                              ; preds = %139, %136, %92, %91, %88, %44
  %141 = phi i8* [ %45, %44 ], [ %45, %88 ], [ %45, %91 ], [ %93, %92 ], [ %93, %136 ], [ %93, %139 ]
  %142 = phi i64 [ 0, %44 ], [ %81, %88 ], [ %81, %91 ], [ 0, %92 ], [ %129, %136 ], [ %129, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #10
  %143 = inttoptr i64 %142 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %143
}

declare void @_ZN5blink9GPUDevice17AddConsoleWarningEPKc(%"class.blink::GPUDevice"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_EC2ES6_S5_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.536"* byval(%"class.WTF::StringAppend.536") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !5

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #10
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !5

44:                                               ; preds = %35
  tail call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %25
  %48 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %76

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #10
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !5

66:                                               ; preds = %57
  tail call void @llvm.trap() #10
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %76

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 1
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast i8** %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %75, align 8
  br label %94

76:                                               ; preds = %52, %67
  %77 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %1, i64 0, i32 1
  %79 = bitcast i8** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast i8** %77 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %82, align 8
  %83 = load atomic i32, i32* %53 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %76
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %76
  %91 = phi i32 [ %89, %88 ], [ %87, %76 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %94

94:                                               ; preds = %69, %93, %90
  br i1 %29, label %108, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %108

108:                                              ; preds = %107, %104, %94
  br i1 %7, label %122, label %109

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #10
  br label %122

122:                                              ; preds = %108, %118, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcEC2ES3_S5_(%"class.WTF::StringAppend.536"*, %"class.WTF::StringAppend.537"* byval(%"class.WTF::StringAppend.537") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !5

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #10
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !5

44:                                               ; preds = %35
  tail call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %25
  %48 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %1, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %71

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #10
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !5

66:                                               ; preds = %57
  tail call void @llvm.trap() #10
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %71

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %0, i64 0, i32 1
  store i8* %2, i8** %70, align 8
  br label %84

71:                                               ; preds = %52, %67
  %72 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %0, i64 0, i32 1
  store i8* %2, i8** %72, align 8
  %73 = load atomic i32, i32* %53 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %84

84:                                               ; preds = %69, %83, %80
  br i1 %29, label %98, label %85

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %98

98:                                               ; preds = %97, %94, %84
  br i1 %7, label %112, label %99

99:                                               ; preds = %98
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #10
  br label %112

112:                                              ; preds = %98, %108, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_(%"class.WTF::StringAppend.537"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !5

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %4
  %25 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !5

41:                                               ; preds = %32
  tail call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %24, %27, %42
  %45 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %46, label %76, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %64

54:                                               ; preds = %47
  %55 = zext i32 %53 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !5

61:                                               ; preds = %54
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %54
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %52, align 4
  br label %64

64:                                               ; preds = %47, %62
  %65 = phi i32 [ %63, %62 ], [ %53, %47 ]
  %66 = load atomic i32, i32* %48 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %71 = add i32 %65, -1
  store i32 %71, i32* %70, align 4
  br label %72

72:                                               ; preds = %69, %64
  %73 = phi i32 [ %71, %69 ], [ %65, %64 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %76

76:                                               ; preds = %44, %72, %75
  br i1 %26, label %90, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %90

90:                                               ; preds = %89, %86, %76
  br i1 %6, label %104, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %104

104:                                              ; preds = %90, %100, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.538"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !5

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !5

40:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringES1_EES1_EEPKcEES5_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.539"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.539", %"class.WTF::StringTypeAdapter.539"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.539"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.536"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.536"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringES1_EES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.536"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.539", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.539"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.539", %"class.WTF::StringTypeAdapter.539"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.536", %"class.WTF::StringAppend.536"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.539"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.539"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend.537"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend.537"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend.537"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.538"* %8) #10
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.538"* %8) #10
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.538"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.538", %"class.WTF::StringAppend.538"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %31, i8* %32) #10
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  ret i32 %24
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.539"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPh(%"class.WTF::StringAppend.537"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.542", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.542", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.542", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.542"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.542"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.542"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.542"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %35, %33
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.542"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.542"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %4, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %4, i64 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false) #10
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %60

54:                                               ; preds = %41
  %55 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %59 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  br label %60

60:                                               ; preds = %52, %54
  %61 = phi i8* [ null, %52 ], [ %59, %54 ]
  %62 = phi i64 [ %53, %52 ], [ %55, %54 ]
  %63 = phi i32 [ 0, %52 ], [ %57, %54 ]
  %64 = bitcast %"class.WTF::StringTypeAdapter.542"* %4 to i64*
  store i64 %62, i64* %64, align 8
  store i8* %61, i8** %47, align 8
  store i32 %63, i32* %48, align 8
  %65 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.543"* nonnull %65, i8* %1) #10
  %66 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %4, i64 0, i32 0
  %67 = load i32, i32* %29, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.543"* nonnull %66, i8* %69) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %5, i64 0, i32 0
  %71 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.538"* %6) #10
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %1, i64 %72
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.543"* nonnull %70, i8* %73) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.543"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.539"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPDs(%"class.WTF::StringAppend.537"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.542", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.542", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.542", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.542"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.542"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.542"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.542"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %35, %33
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.542"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.542"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %4, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %4, i64 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::StringAppend.537", %"class.WTF::StringAppend.537"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false) #10
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %60

54:                                               ; preds = %41
  %55 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %59 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  br label %60

60:                                               ; preds = %52, %54
  %61 = phi i8* [ null, %52 ], [ %59, %54 ]
  %62 = phi i64 [ %53, %52 ], [ %55, %54 ]
  %63 = phi i32 [ 0, %52 ], [ %57, %54 ]
  %64 = bitcast %"class.WTF::StringTypeAdapter.542"* %4 to i64*
  store i64 %62, i64* %64, align 8
  store i8* %61, i8** %47, align 8
  store i32 %63, i32* %48, align 8
  %65 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.543"* nonnull %65, i16* %1) #10
  %66 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %4, i64 0, i32 0
  %67 = load i32, i32* %29, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %1, i64 %68
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.543"* nonnull %66, i16* %69) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.542", %"class.WTF::StringTypeAdapter.542"* %5, i64 0, i32 0
  %71 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.538"* %6) #10
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %1, i64 %72
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.543"* nonnull %70, i16* %73) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.543"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %struct.WGPUBlendState* @_ZN3WTF6VectorI14WGPUBlendStateLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.489"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.489", %"class.WTF::Vector.489"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.489", %"class.WTF::Vector.489"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %struct.WGPUBlendState*, %struct.WGPUBlendState** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %struct.WGPUBlendState, %struct.WGPUBlendState* %24, i64 %25
  ret %struct.WGPUBlendState* %26
}

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !5

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !5

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"*, %"class.blink::GPUDevice"*) unnamed_addr #2

declare %struct.WGPUDeviceImpl* @_ZN5blink14DawnObjectImpl15GetDeviceHandleEv(%"class.blink::DawnObjectImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10DawnObjectIP22WGPURenderPipelineImplED0Ev(%"class.blink::DawnObject.494"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"*) unnamed_addr #4

declare void @_ZN5blink18GPUBindGroupLayoutC1EPNS_9GPUDeviceEP23WGPUBindGroupLayoutImpl(%"class.blink::GPUBindGroupLayout"*, %"class.blink::GPUDevice"*, %struct.WGPUBindGroupLayoutImpl*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink14GPUVertexState7buffersEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink14GPUVertexState7buffersEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_20GPUDepthStencilStateE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_20GPUDepthStencilStateE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_19GPUMultisampleStateE: argument 0"}
!12 = distinct !{!12, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_19GPUMultisampleStateE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink10AsDawnTypeEPKNS_19GPUColorTargetStateE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink10AsDawnTypeEPKNS_19GPUColorTargetStateE"}
!16 = !{!"branch_weights", i32 2000, i32 1}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_13GPUBlendStateEPNS_9GPUDeviceE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12_GLOBAL__N_110AsDawnTypeEPKNS_13GPUBlendStateEPNS_9GPUDeviceE"}
