; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkPipelineStateBuilder.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkPipelineStateBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkPipelineStateBuilder = type { %class.GrGLSLProgramBuilder, %class.GrVkGpu*, [8 x i8], %class.GrVkVaryingHandler, %class.GrVkUniformHandler }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.445", %"class.std::__1::vector.451", i32, %class.SkSTArray.539 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.525, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.527, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.536], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.525 = type { %class.SkAlignedSTStorage.526, %class.SkTArray.82 }
%class.SkAlignedSTStorage.526 = type { [120 x i8] }
%class.SkTArray.82 = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp.83 }
%class.sk_sp.83 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray.527 = type { %class.SkAlignedSTStorage.528, %class.SkTArray.529 }
%class.SkAlignedSTStorage.528 = type { [16 x i8] }
%class.SkTArray.529 = type { %"class.std::__1::unique_ptr.530"*, i64 }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.536 = type { %class.SkAlignedSTStorage.537, %class.SkTArray.82 }
%class.SkAlignedSTStorage.537 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.538, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.538 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle.428, %class.GrResourceHandle.428 }
%class.GrResourceHandle.428 = type { i32 }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.432 }
%class.SkTArray.432 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.433, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.433 = type { %class.SkAlignedSTStorage.434, %class.SkTArray.435 }
%class.SkAlignedSTStorage.434 = type { [8 x i8] }
%class.SkTArray.435 = type { %"class.std::__1::unique_ptr.436"*, i64 }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle.428, %class.GrResourceHandle.428 }
%"class.std::__1::vector.451" = type { %"class.std::__1::__vector_base.452" }
%"class.std::__1::__vector_base.452" = type { %"class.std::__1::unique_ptr.453"*, %"class.std::__1::unique_ptr.453"*, %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.82, %class.SkTArray.456 }
%class.SkTArray.456 = type { %"class.std::__1::unique_ptr.453"*, i64 }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.std::__1::unique_ptr.453"* }
%class.SkSTArray.539 = type { %class.SkAlignedSTStorage.540, %class.SkTArray.541 }
%class.SkAlignedSTStorage.540 = type { [160 x i8] }
%class.SkTArray.541 = type { %class.GrShaderVar*, i64 }
%class.GrVkVaryingHandler = type { %class.GrGLSLVaryingHandler }
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.542, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.542 = type { %class.GrSBlockAllocator.543 }
%class.GrSBlockAllocator.543 = type { [80 x i8] }
%class.GrVkUniformHandler = type <{ %class.GrGLSLUniformHandler, %class.GrTBlockList.544, %class.GrTBlockList.544, %class.SkTArray.546, %"struct.GrGLSLUniformHandler::UniformInfo", %class.GrSwizzle, i8, i8, [2 x i32], [4 x i8] }>
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrTBlockList.544 = type { %class.GrSBlockAllocator.545 }
%class.GrSBlockAllocator.545 = type { [128 x i8] }
%class.SkTArray.546 = type { %class.GrSwizzle*, i64 }
%"struct.GrGLSLUniformHandler::UniformInfo" = type { %class.GrShaderVar, i32, %class.GrFragmentProcessor*, %class.SkString }
%class.GrSwizzle = type { i16 }
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.194, %class.sk_sp.338, %class.sk_sp.339, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.412, %class.SkSTArray.412, %class.SkTArray.415, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.422" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.1, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.42", %"class.std::__1::shared_ptr.42", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.44", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.50" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.14", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.16" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.41"* }
%"class.std::__1::vector.41" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.42" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.42", %"class.std::__1::vector.470", i8, %"class.std::__1::vector.478", %"class.std::__1::forward_list", %class.SkTHashMap.491, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.470" = type { %"class.std::__1::__vector_base.471" }
%"class.std::__1::__vector_base.471" = type { %"class.std::__1::unique_ptr.472"*, %"class.std::__1::unique_ptr.472"*, %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.std::__1::unique_ptr.472"* }
%"class.std::__1::vector.478" = type { %"class.std::__1::__vector_base.479" }
%"class.std::__1::__vector_base.479" = type { %"class.std::__1::unique_ptr.480"*, %"class.std::__1::unique_ptr.480"*, %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.std::__1::unique_ptr.480"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.491 = type { %class.SkTHashTable.492 }
%class.SkTHashTable.492 = type { i32, i32, %class.SkAutoTArray.493 }
%class.SkAutoTArray.493 = type { %"class.std::__1::unique_ptr.494" }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.594" }
%"struct.std::__1::pair.594" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.42", %"class.std::__1::shared_ptr.43" }
%"class.std::__1::shared_ptr.43" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.38", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i64*, i64*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %class.sk_sp.124, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.168", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.61", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.60 }
%class.sk_sp.60 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.71, %class.SkTArray.80, %class.SkTArray.82, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.64"*, i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.82, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.71 = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.577" }
%"struct.std::__1::pair.577" = type { i32, %class.SkTArray.578* }
%class.SkTArray.578 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.80 = type { %"class.std::__1::unique_ptr.81"*, i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.578, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.96 }
%class.SkFibBlockSizes.96 = type { i32 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.124 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.138, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.156, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.128, [4 x i8] }>
%union.anon.128 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.129, i8* }
%class.sk_sp.129 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.130 }
%class.SkTHashTable.130 = type { i32, i32, %class.SkAutoTArray.131 }
%class.SkAutoTArray.131 = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.138 = type { %class.SkTHashTable.139 }
%class.SkTHashTable.139 = type { i32, i32, %class.SkAutoTArray.140 }
%class.SkAutoTArray.140 = type { %"class.std::__1::unique_ptr.141" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.147, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.147 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.148" }
%"struct.std::__1::atomic.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.153, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.153 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.154 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.154 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.155, void (i8*)*, i8* }
%class.SkNVRefCnt.155 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.156 = type { %class.SkTHashTable.157 }
%class.SkTHashTable.157 = type { i32, i32, %class.SkAutoTArray.158 }
%class.SkAutoTArray.158 = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.171, %class.sk_sp.171 }
%class.sk_sp.171 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.193 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.193 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%class.sk_sp.194 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.195", %"class.GrVkInterface::VkPtr.196", %"class.GrVkInterface::VkPtr.197", %"class.GrVkInterface::VkPtr.198", %"class.GrVkInterface::VkPtr.199", %"class.GrVkInterface::VkPtr.200", %"class.GrVkInterface::VkPtr.201", %"class.GrVkInterface::VkPtr.202", %"class.GrVkInterface::VkPtr.203", %"class.GrVkInterface::VkPtr.204", %"class.GrVkInterface::VkPtr.205", %"class.GrVkInterface::VkPtr.206", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.195" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.196" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.197" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.198" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.199" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.200" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.201" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.202" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.203" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.204" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.205" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.206" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.207" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.208" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.209" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.210" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.211" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.212" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.213" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.214" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.215" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.216" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.217" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.218" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.219" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.220" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.221" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.222" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.223" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.224" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.225" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.226" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.227" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.228" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.229" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.230" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.231" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.232" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.233" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.234" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.235" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.236" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.237" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.239" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.240" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.241" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.242" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.243" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.245" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.246" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.247" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.248" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.249" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.250" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.251" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.252" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.253" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.254" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.255" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.256" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.257" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.258" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.259" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%"class.GrVkInterface::VkPtr.260" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.261" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.262" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.263" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.264" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.265" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.266" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.267" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.268" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.269" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.270" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.271" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.273" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.274" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.275" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.276" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.277" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.278" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.280" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.281" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.282" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.283" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.286" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.287" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.289" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.290" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.291" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.292" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.323" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.324" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.331" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.332" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.335" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.336" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.338 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.339 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.347, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.340, %"class.std::__1::unique_ptr.341", i32, [4 x i8] }>
%class.SkTDArray.340 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.SkSTArray.347 = type { %class.SkAlignedSTStorage.348, %class.SkTArray.349 }
%class.SkAlignedSTStorage.348 = type { [48 x i8] }
%class.SkTArray.349 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.350, %class.SkSTArray.351, %class.SkTArray.357, %class.SkSTArray.358, %class.SkMutex, %class.SkSTArray.358, %class.SkTDynamicHash.361, %class.SkTDynamicHash.370, %class.sk_sp.379, %class.SkSTArray.388, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.350 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp, %class.GrVkRenderPass* }
%class.sk_sp = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type { %class.GrVkManagedResource, %struct.VkPipeline_T*, %struct.VkPipelineLayout_T* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.351 = type { %class.SkAlignedSTStorage.352, %class.SkTArray.353 }
%class.SkAlignedSTStorage.352 = type { [224 x i8] }
%class.SkTArray.353 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.354, i32, [4 x i8] }>
%class.SkSTArray.354 = type { %class.SkAlignedSTStorage.355, %class.SkTArray.356 }
%class.SkAlignedSTStorage.355 = type { [32 x i8] }
%class.SkTArray.356 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.357 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.358 = type { %class.SkAlignedSTStorage.359, %class.SkTArray.360 }
%class.SkAlignedSTStorage.359 = type { [32 x i8] }
%class.SkTArray.360 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.361 = type { %class.SkTHashTable.362 }
%class.SkTHashTable.362 = type { i32, i32, %class.SkAutoTArray.363 }
%class.SkAutoTArray.363 = type { %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.370 = type { %class.SkTHashTable.371 }
%class.SkTHashTable.371 = type { i32, i32, %class.SkAutoTArray.372 }
%class.SkAutoTArray.372 = type { %"class.std::__1::unique_ptr.373" }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.379 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.380, %class.SkTInternalLList }
%class.SkTHashTable.380 = type { i32, i32, %class.SkAutoTArray.381 }
%class.SkAutoTArray.381 = type { %"class.std::__1::unique_ptr.382" }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.388 = type { %class.SkAlignedSTStorage.389, %class.SkTArray.390 }
%class.SkAlignedSTStorage.389 = type { [32 x i8] }
%class.SkTArray.390 = type { %"class.std::__1::unique_ptr.391"*, i64 }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.394, %class.SkSTArray.395, %class.SkSTArray.398 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.394 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.SkSTArray.395 = type { %class.SkAlignedSTStorage.396, %class.SkTArray.397 }
%class.SkAlignedSTStorage.396 = type { [16 x i8] }
%class.SkTArray.397 = type { i32*, i64 }
%class.SkSTArray.398 = type { %class.SkAlignedSTStorage.399, %class.SkTArray.400 }
%class.SkAlignedSTStorage.399 = type { [32 x i8] }
%class.SkTArray.400 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrResourceHandle = type { i32 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.404", %class.GrGpu* }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.407" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.406, i8*, i64 }
%class.sk_sp.406 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type opaque
%class.SkSTArray.412 = type { %class.SkAlignedSTStorage.413, %class.SkTArray.414 }
%class.SkAlignedSTStorage.413 = type { [8 x i8] }
%class.SkTArray.414 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.415 = type { %"class.std::__1::unique_ptr.416"*, i64 }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%class.GrProgramDesc = type <{ %class.SkSTArray.500, i32, [4 x i8] }>
%class.SkSTArray.500 = type { %class.SkAlignedSTStorage.501, %class.SkTArray.502 }
%class.SkAlignedSTStorage.501 = type { [132 x i8] }
%class.SkTArray.502 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.503, i32, [4 x i8] }
%union.anon.503 = type { %struct.anon.504 }
%struct.anon.504 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.516, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.506, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.506 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.507, %class.sk_sp.508, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.510" }
%class.SkNVRefCnt.507 = type { %"struct.std::__1::atomic" }
%class.sk_sp.508 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.508, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.510" = type { %"struct.std::__1::__atomic_base.511" }
%"struct.std::__1::__atomic_base.511" = type { %"struct.std::__1::__atomic_base.512" }
%"struct.std::__1::__atomic_base.512" = type { %"struct.std::__1::__cxx_atomic_impl.513" }
%"struct.std::__1::__cxx_atomic_impl.513" = type { %"struct.std::__1::__cxx_atomic_base_impl.514" }
%"struct.std::__1::__cxx_atomic_base_impl.514" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.515 }
%union.anon.515 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.516 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.517, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.517 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.518"*, [24 x i8] }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.524, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.524 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrVkPipelineState = type <{ %class.sk_sp, %class.GrResourceHandle, [4 x i8], %class.SkSTArray.398, %"struct.GrVkPipelineState::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, [4 x i8], %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.445", %"class.std::__1::vector.451", %class.GrVkPipelineStateDataManager, i32, [4 x i8] }>
%"struct.GrVkPipelineState::RenderTargetState" = type { %struct.SkISize, i32 }
%class.GrVkPipelineStateDataManager = type <{ %class.GrUniformDataManager.base, [7 x i8], %class.sk_sp.406, i8, [7 x i8] }>
%class.GrUniformDataManager.base = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray.465, %class.SkAutoMalloc, i8 }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.465 = type { %"struct.GrUniformDataManager::Uniform"*, i64 }
%"struct.GrUniformDataManager::Uniform" = type { i32 }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr.466", i64 }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { i8* }
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap.547, i32, [4 x i8], %class.sk_sp.556*, i32, [4 x i8], void (%class.sk_sp.557*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap.547 = type { %class.SkTHashTable.548 }
%class.SkTHashTable.548 = type { i32, i32, %class.SkAutoTArray.549 }
%class.SkAutoTArray.549 = type { %"class.std::__1::unique_ptr.550" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair.595" }
%"struct.std::__1::pair.595" = type { i32, void (%class.sk_sp.557*, %class.SkReadBuffer*)* }
%class.sk_sp.557 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.556 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.558*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.563*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.556*, i8*, i64, i8*)*, i8* }
%class.sk_sp.558 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.559", [7 x i8] }>
%"struct.std::__1::atomic.559" = type { %"struct.std::__1::__atomic_base.560" }
%"struct.std::__1::__atomic_base.560" = type { %"struct.std::__1::__cxx_atomic_impl.561" }
%"struct.std::__1::__cxx_atomic_impl.561" = type { %"struct.std::__1::__cxx_atomic_base_impl.562" }
%"struct.std::__1::__cxx_atomic_base_impl.562" = type { i8 }
%class.sk_sp.563 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.564, i32, i32 }
%class.sk_sp.564 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.565, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.565 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%class.SkEventTracer = type { i32 (...)** }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"struct.GrPersistentCacheUtils::ShaderMetadata" = type { %"struct.SkSL::ProgramSettings"*, %class.SkTArray.566, i8, i8, %class.sk_sp.129 }
%class.SkTArray.566 = type { %"class.SkSL::String"*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.525, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.527, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.536], i32, i8, [3 x i8], i32, [12 x i8] }>

$_ZN24GrVkPipelineStateBuilderD2Ev = comdat any

$_ZN24GrVkPipelineStateBuilderD0Ev = comdat any

$_ZN24GrVkPipelineStateBuilder14uniformHandlerEv = comdat any

$_ZNK24GrVkPipelineStateBuilder14uniformHandlerEv = comdat any

$_ZN24GrVkPipelineStateBuilder14varyingHandlerEv = comdat any

$_ZN20GrGLSLVaryingHandlerD2Ev = comdat any

$_ZN20GrGLSLVaryingHandlerD0Ev = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv = comdat any

$_ZN12GrTBlockListIN20GrGLSLVaryingHandler11VaryingInfoELi1EE5resetEv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZTV20GrGLSLVaryingHandler = comdat any

@.str = private unnamed_addr constant [2 x i8] c"C\00", align 1
@_ZTV24GrVkPipelineStateBuilder = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrVkPipelineStateBuilder*)* @_ZN24GrVkPipelineStateBuilderD2Ev to i8*), i8* bitcast (void (%class.GrVkPipelineStateBuilder*)* @_ZN24GrVkPipelineStateBuilderD0Ev to i8*), i8* bitcast (%class.GrCaps* (%class.GrVkPipelineStateBuilder*)* @_ZNK24GrVkPipelineStateBuilder4capsEv to i8*), i8* bitcast (%"class.SkSL::Compiler"* (%class.GrVkPipelineStateBuilder*)* @_ZNK24GrVkPipelineStateBuilder14shaderCompilerEv to i8*), i8* bitcast (%class.GrGLSLUniformHandler* (%class.GrVkPipelineStateBuilder*)* @_ZN24GrVkPipelineStateBuilder14uniformHandlerEv to i8*), i8* bitcast (%class.GrGLSLUniformHandler* (%class.GrVkPipelineStateBuilder*)* @_ZNK24GrVkPipelineStateBuilder14uniformHandlerEv to i8*), i8* bitcast (%class.GrGLSLVaryingHandler* (%class.GrVkPipelineStateBuilder*)* @_ZN24GrVkPipelineStateBuilder14varyingHandlerEv to i8*), i8* bitcast (void (%class.GrVkPipelineStateBuilder*, %class.GrShaderVar*)* @_ZN24GrVkPipelineStateBuilder27finalizeFragmentOutputColorER11GrShaderVar to i8*), i8* bitcast (void (%class.GrVkPipelineStateBuilder*, %class.GrShaderVar*)* @_ZN24GrVkPipelineStateBuilder30finalizeFragmentSecondaryColorER11GrShaderVar to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"location = 0, index = 0\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"location = 0, index = 1\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"u_skRTHeight\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"disabled-by-default-skia.shaders\00", align 1
@__PRETTY_FUNCTION__._ZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_Tb = private unnamed_addr constant [97 x i8] c"GrVkPipelineState *GrVkPipelineStateBuilder::finalize(const GrProgramDesc &, VkRenderPass, bool)\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"#extension GL_ARB_separate_shader_objects : enable\0A\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"#extension GL_ARB_shading_language_420pack : enable\0A\00", align 1
@.str.7 = private unnamed_addr constant [63 x i8] c"../../third_party/skia/src/gpu/vk/GrVkPipelineStateBuilder.cpp\00", align 1
@.str.8 = private unnamed_addr constant [113 x i8] c"Failed vulkan call. Error: %d,CreatePipelineLayout(fGpu->device(), &layoutCreateInfo, nullptr, &pipelineLayout)\0A\00", align 1
@_ZTV20GrGLSLVaryingHandler = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLVaryingHandler*)* @_ZN20GrGLSLVaryingHandlerD2Ev to i8*), i8* bitcast (void (%class.GrGLSLVaryingHandler*)* @_ZN20GrGLSLVaryingHandlerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV18GrVkVaryingHandler = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTV18GrVkUniformHandler = external unnamed_addr constant { [17 x i8*] }, align 8
@.str.9 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@_ZZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_TbE28trace_event_unique_atomic176.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN24GrVkPipelineStateBuilderC1EP7GrVkGpuRK13GrProgramDescRK13GrProgramInfo = hidden unnamed_addr alias void (%class.GrVkPipelineStateBuilder*, %class.GrVkGpu*, %class.GrProgramDesc*, %class.GrProgramInfo*), void (%class.GrVkPipelineStateBuilder*, %class.GrVkGpu*, %class.GrProgramDesc*, %class.GrProgramInfo*)* @_ZN24GrVkPipelineStateBuilderC2EP7GrVkGpuRK13GrProgramDescRK13GrProgramInfo

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkPipelineState* @_ZN24GrVkPipelineStateBuilder19CreatePipelineStateEP7GrVkGpuRK13GrProgramDescRK13GrProgramInfoP14VkRenderPass_Tb(%class.GrVkGpu*, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128), %struct.VkRenderPass_T*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.GrVkPipelineStateBuilder, align 16
  %7 = tail call %struct.__locale_struct* @newlocale(i32 8127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), %struct.__locale_struct* null) #9
  %8 = icmp eq %struct.__locale_struct* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call %struct.__locale_struct* @uselocale(%struct.__locale_struct* nonnull %7) #9
  br label %11

11:                                               ; preds = %5, %9
  %12 = phi %struct.__locale_struct* [ %10, %9 ], [ null, %5 ]
  %13 = bitcast %class.GrVkPipelineStateBuilder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2944, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 2944, i1 false)
  call void @_ZN24GrVkPipelineStateBuilderC2EP7GrVkGpuRK13GrProgramDescRK13GrProgramInfo(%class.GrVkPipelineStateBuilder* nonnull %6, %class.GrVkGpu* %0, %class.GrProgramDesc* dereferenceable(160) %1, %class.GrProgramInfo* dereferenceable(128) %2)
  %14 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %6, i64 0, i32 0
  %15 = call zeroext i1 @_ZN20GrGLSLProgramBuilder19emitAndInstallProcsEv(%class.GrGLSLProgramBuilder* nonnull %14) #9
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = call %class.GrVkPipelineState* @_ZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_Tb(%class.GrVkPipelineStateBuilder* nonnull %6, %class.GrProgramDesc* dereferenceable(160) %1, %struct.VkRenderPass_T* %3, i1 zeroext %4)
  br label %18

18:                                               ; preds = %11, %16
  %19 = phi %class.GrVkPipelineState* [ %17, %16 ], [ null, %11 ]
  %20 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24GrVkPipelineStateBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 16
  %21 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %6, i64 0, i32 4
  call void @_ZN18GrVkUniformHandlerD1Ev(%class.GrVkUniformHandler* %21) #9
  %22 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %6, i64 0, i32 3, i32 0
  call void @_ZN20GrGLSLVaryingHandlerD2Ev(%class.GrGLSLVaryingHandler* %22) #9
  call void @_ZN20GrGLSLProgramBuilderD2Ev(%class.GrGLSLProgramBuilder* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 2944, i8* nonnull %13) #9
  br i1 %8, label %25, label %23

23:                                               ; preds = %18
  %24 = call %struct.__locale_struct* @uselocale(%struct.__locale_struct* %12) #9
  call void @freelocale(%struct.__locale_struct* nonnull %7) #9
  br label %25

25:                                               ; preds = %18, %23
  ret %class.GrVkPipelineState* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN20GrGLSLProgramBuilder19emitAndInstallProcsEv(%class.GrGLSLProgramBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkPipelineState* @_ZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_Tb(%class.GrVkPipelineStateBuilder*, %class.GrProgramDesc* nocapture readonly dereferenceable(160), %struct.VkRenderPass_T*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = alloca [3 x %struct.VkDescriptorSetLayout_T*], align 16
  %7 = alloca [3 x %struct.VkShaderModule_T*], align 16
  %8 = alloca %class.GrResourceHandle, align 4
  %9 = alloca [3 x %struct.VkPipelineShaderStageCreateInfo], align 16
  %10 = alloca %"struct.SkSL::ProgramSettings", align 8
  %11 = alloca %class.SkReadBuffer, align 8
  %12 = alloca %class.sk_sp.129, align 8
  %13 = alloca %class.sk_sp.129, align 8
  %14 = alloca [3 x %"class.SkSL::String"], align 16
  %15 = bitcast [3 x %"class.SkSL::String"]* %14 to i8*
  %16 = alloca [3 x %"struct.SkSL::Program::Inputs"], align 1
  %17 = alloca [3 x %"class.SkSL::String"], align 16
  %18 = bitcast [3 x %"class.SkSL::String"]* %17 to i8*
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %struct.VkPipelineLayoutCreateInfo, align 8
  %21 = alloca %struct.VkPushConstantRange, align 4
  %22 = alloca %struct.VkPipelineLayout_T*, align 8
  %23 = alloca %class.sk_sp, align 8
  %24 = alloca %class.sk_sp, align 8
  %25 = alloca %"class.std::__1::vector.451", align 16
  %26 = load atomic i64, i64* @_ZZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_TbE28trace_event_unique_atomic176.0.0 monotonic, align 8
  %27 = inttoptr i64 %26 to i8*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %4
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %31 = bitcast %class.SkEventTracer* %30 to i8* (%class.SkEventTracer*, i8*)***
  %32 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %31, align 8
  %33 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %32, i64 2
  %34 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %33, align 8
  %35 = tail call i8* %34(%class.SkEventTracer* %30, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #9
  %36 = ptrtoint i8* %35 to i64
  store atomic i64 %36, i64* @_ZZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_TbE28trace_event_unique_atomic176.0.0 monotonic, align 8
  br label %37

37:                                               ; preds = %4, %29
  %38 = phi i8* [ %27, %4 ], [ %35, %29 ]
  %39 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %41 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %45 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %40, align 8
  %46 = load i8, i8* %38, align 1
  %47 = and i8 %46, 5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %37
  %50 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %51 = bitcast %class.SkEventTracer* %50 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %52 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %51, align 8
  %53 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %52, i64 4
  %54 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %53, align 8
  %55 = tail call i64 %54(%class.SkEventTracer* %50, i8 signext 88, i8* %38, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_Tb, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #9
  %56 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %56, i64 0, i32 0
  store i8* %38, i8** %57, align 8
  store i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN24GrVkPipelineStateBuilder8finalizeERK13GrProgramDescP14VkRenderPass_Tb, i64 0, i64 0), i8** %42, align 8
  store i64 %55, i64* %43, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %56, %"struct.skia::tracing_internals::ScopedTracer::Data"** %40, align 8
  br label %58

58:                                               ; preds = %37, %49
  %59 = bitcast [3 x %struct.VkDescriptorSetLayout_T*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9
  %60 = getelementptr inbounds [3 x %struct.VkDescriptorSetLayout_T*], [3 x %struct.VkDescriptorSetLayout_T*]* %6, i64 0, i64 0
  %61 = getelementptr inbounds [3 x %struct.VkDescriptorSetLayout_T*], [3 x %struct.VkDescriptorSetLayout_T*]* %6, i64 0, i64 1
  %62 = getelementptr inbounds [3 x %struct.VkDescriptorSetLayout_T*], [3 x %struct.VkDescriptorSetLayout_T*]* %6, i64 0, i64 2
  %63 = bitcast [3 x %struct.VkShaderModule_T*]* %7 to i8*
  %64 = bitcast [3 x %struct.VkDescriptorSetLayout_T*]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %63, i8 0, i64 24, i1 false)
  %65 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  %66 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %67 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %66, i64 0, i32 9
  %68 = call %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getUniformDSLayoutEv(%class.GrVkResourceProvider* %67) #9
  store %struct.VkDescriptorSetLayout_T* %68, %struct.VkDescriptorSetLayout_T** %60, align 16
  %69 = bitcast %class.GrResourceHandle* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #9
  %70 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %8, i64 0, i32 0
  store i32 -1, i32* %70, align 4
  %71 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4
  call void @_ZN20GrVkResourceProvider29getSamplerDescriptorSetHandleE16VkDescriptorTypeRK18GrVkUniformHandlerP16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* %67, i32 1, %class.GrVkUniformHandler* dereferenceable(368) %71, %class.GrResourceHandle* nonnull %8) #9
  %72 = call %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getSamplerDSLayoutERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* %67, %class.GrResourceHandle* nonnull dereferenceable(4) %8) #9
  store %struct.VkDescriptorSetLayout_T* %72, %struct.VkDescriptorSetLayout_T** %61, align 8
  %73 = call %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider16getInputDSLayoutEv(%class.GrVkResourceProvider* %67) #9
  store %struct.VkDescriptorSetLayout_T* %73, %struct.VkDescriptorSetLayout_T** %62, align 16
  %74 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  %75 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 3, i32 1, i32 0
  %76 = load %class.SkString*, %class.SkString** %75, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %76, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0)) #9
  %77 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 4
  %78 = bitcast %class.GrGLSLFragmentShaderBuilder* %77 to i8**
  %79 = load i8*, i8** %78, align 16
  %80 = getelementptr i8, i8* %79, i64 -24
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %class.GrGLSLFragmentShaderBuilder* %77 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  %85 = getelementptr inbounds i8, i8* %84, i64 160
  %86 = bitcast i8* %85 to %class.SkString**
  %87 = load %class.SkString*, %class.SkString** %86, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %87, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0)) #9
  %88 = load %class.SkString*, %class.SkString** %75, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %88, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0)) #9
  %89 = load i8*, i8** %78, align 16
  %90 = getelementptr i8, i8* %89, i64 -24
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds i8, i8* %83, i64 %92
  %94 = getelementptr inbounds i8, i8* %93, i64 160
  %95 = bitcast i8* %94 to %class.SkString**
  %96 = load %class.SkString*, %class.SkString** %95, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %96, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0)) #9
  call void @_ZN20GrGLSLProgramBuilder15finalizeShadersEv(%class.GrGLSLProgramBuilder* %74) #9
  %97 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 7
  %98 = load i8, i8* %97, align 1, !range !2
  %99 = icmp eq i8 %98, 0
  %100 = bitcast [3 x %struct.VkPipelineShaderStageCreateInfo]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %100) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %100, i8 -86, i64 144, i1 false)
  %101 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %101) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 48, i1 false)
  store i8 0, i8* %101, align 8
  %102 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 1
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 2
  store i8 1, i8* %103, align 2
  %104 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 3
  store i8 0, i8* %104, align 1
  %105 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 4
  store i8 0, i8* %105, align 4
  %106 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 5
  %107 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 6
  %108 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 7
  %109 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, <4 x i32>* %109, align 8
  %110 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 9
  store i32 0, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 10
  store i8 1, i8* %111, align 4
  %112 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 11
  store i8 1, i8* %112, align 1
  %113 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 12
  store i8 1, i8* %113, align 2
  %114 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 13
  store i32 50, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 14
  store i8 0, i8* %115, align 4
  %116 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 15
  store i8 0, i8* %116, align 1
  %117 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 16
  store i8 1, i8* %117, align 2
  %118 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 17
  store i8 0, i8* %118, align 1
  %119 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 18
  store i8 0, i8* %119, align 8
  %120 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 19
  store i8 1, i8* %120, align 1
  %121 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 20
  store i8 1, i8* %121, align 2
  %122 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 21
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %10, i64 0, i32 22
  store %"class.std::__1::vector.41"* null, %"class.std::__1::vector.41"** %123, align 8
  %124 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %125 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %124, i64 0, i32 3, i32 0
  %126 = load %class.GrVkCaps*, %class.GrVkCaps** %125, align 8
  %127 = call i32 @_ZNK8GrVkCaps25getFragmentUniformBindingEv(%class.GrVkCaps* %126) #9
  store i32 %127, i32* %107, align 4
  %128 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %129 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %128, i64 0, i32 3, i32 0
  %130 = load %class.GrVkCaps*, %class.GrVkCaps** %129, align 8
  %131 = call i32 @_ZNK8GrVkCaps21getFragmentUniformSetEv(%class.GrVkCaps* %130) #9
  store i32 %131, i32* %108, align 8
  %132 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 6
  %133 = load i8, i8* %132, align 2, !range !2
  store i8 %133, i8* %101, align 8
  %134 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %135 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %134, i64 0, i32 0, i32 5
  %136 = bitcast %class.GrDirectContext** %135 to %class.GrContext_Base**
  %137 = load %class.GrContext_Base*, %class.GrContext_Base** %136, align 8
  %138 = call dereferenceable(240) %struct.GrContextOptions* @_ZNK14GrContext_Base7optionsEv(%class.GrContext_Base* %137) #9
  %139 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %138, i64 0, i32 15
  %140 = load i8, i8* %139, align 1, !range !2
  store i8 %140, i8* %105, align 4
  %141 = call i32 @_ZNK18GrVkUniformHandler17getRTHeightOffsetEv(%class.GrVkUniformHandler* %71) #9
  store i32 %141, i32* %106, align 8
  store i8 %98, i8* %118, align 1
  %142 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 4, i32 9
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %58
  store i8 1, i8* %104, align 1
  br label %146

146:                                              ; preds = %58, %145
  %147 = bitcast %class.SkReadBuffer* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %147) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 136, i1 false)
  %148 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %11, i64 0, i32 6
  store %class.sk_sp.556* null, %class.sk_sp.556** %148, align 8
  %149 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %11, i64 0, i32 7
  store i32 0, i32* %149, align 8
  %150 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %11, i64 0, i32 9
  store void (%class.sk_sp.557*, %class.SkReadBuffer*)** null, void (%class.sk_sp.557*, %class.SkReadBuffer*)*** %150, align 8
  %151 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %11, i64 0, i32 10
  store i32 0, i32* %151, align 8
  %152 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %11, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 0, i64 44, i1 false) #9
  %153 = bitcast %struct.SkDeserialProcs* %152 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 49, i1 false) #9
  %154 = bitcast %class.GrVkGpu** %65 to %class.GrGpu**
  %155 = load %class.GrGpu*, %class.GrGpu** %154, align 16
  %156 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %155, i64 0, i32 5
  %157 = load %class.GrDirectContext*, %class.GrDirectContext** %156, align 8
  %158 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %157, i64 0, i32 9
  %159 = load %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::PersistentCache"** %158, align 8
  %160 = icmp ne %"class.GrContextOptions::PersistentCache"* %159, null
  br i1 %160, label %161, label %204

161:                                              ; preds = %146
  %162 = bitcast %class.sk_sp.129* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #9
  %163 = getelementptr inbounds %class.sk_sp.129, %class.sk_sp.129* %12, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %163, align 8
  %164 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %1, i64 0, i32 0, i32 0, i32 0, i64 136
  %165 = bitcast i8* %164 to i8**
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %1, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = add i32 %168, 4
  %170 = zext i32 %169 to i64
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.129* nonnull sret %12, i8* %166, i64 %170, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #9
  %171 = bitcast %class.sk_sp.129* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #9
  %172 = load %class.SkData*, %class.SkData** %163, align 8
  %173 = bitcast %"class.GrContextOptions::PersistentCache"* %159 to void (%class.sk_sp.129*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)***
  %174 = load void (%class.sk_sp.129*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)**, void (%class.sk_sp.129*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)*** %173, align 8
  %175 = getelementptr inbounds void (%class.sk_sp.129*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)*, void (%class.sk_sp.129*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)** %174, i64 2
  %176 = load void (%class.sk_sp.129*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)*, void (%class.sk_sp.129*, %"class.GrContextOptions::PersistentCache"*, %class.SkData*)** %175, align 8
  call void %176(%class.sk_sp.129* nonnull sret %13, %"class.GrContextOptions::PersistentCache"* nonnull %159, %class.SkData* dereferenceable(40) %172) #9
  %177 = bitcast %class.sk_sp.129* %13 to i64*
  %178 = load i64, i64* %177, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #9
  %179 = inttoptr i64 %178 to %class.SkData*
  %180 = icmp eq i64 %178, 0
  br i1 %180, label %187, label %181

181:                                              ; preds = %161
  %182 = getelementptr inbounds %class.SkData, %class.SkData* %179, i64 0, i32 3
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %class.SkData, %class.SkData* %179, i64 0, i32 4
  %185 = load i64, i64* %184, align 8
  call void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer* nonnull %11, i8* %183, i64 %185) #9
  %186 = call i32 @_ZN22GrPersistentCacheUtils7GetTypeEP12SkReadBuffer(%class.SkReadBuffer* nonnull %11) #9
  br label %187

187:                                              ; preds = %161, %181
  %188 = phi i32 [ %186, %181 ], [ 0, %161 ]
  %189 = load %class.SkData*, %class.SkData** %163, align 8
  %190 = icmp eq %class.SkData* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %class.SkData, %class.SkData* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 -1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %189) #9
  %196 = bitcast %class.SkData* %189 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %196) #9
  br label %197

197:                                              ; preds = %195, %191, %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #9
  %198 = icmp eq i32 %188, 1397772886
  br i1 %198, label %199, label %204

199:                                              ; preds = %197
  %200 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 0
  %201 = getelementptr inbounds [3 x %struct.VkPipelineShaderStageCreateInfo], [3 x %struct.VkPipelineShaderStageCreateInfo]* %9, i64 0, i64 0
  %202 = call i32 @_ZN24GrVkPipelineStateBuilder20loadShadersFromCacheEP12SkReadBufferPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfo(%class.GrVkPipelineStateBuilder* %0, %class.SkReadBuffer* nonnull %11, %struct.VkShaderModule_T** nonnull %200, %struct.VkPipelineShaderStageCreateInfo* nonnull %201)
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %351

204:                                              ; preds = %146, %197, %199
  %205 = phi i64 [ %178, %199 ], [ %178, %197 ], [ 0, %146 ]
  %206 = phi i32 [ 1397772886, %199 ], [ %188, %197 ], [ 0, %146 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #9
  %207 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 72, i1 false)
  %208 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %16, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %208) #9
  %209 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %16, i64 0, i64 1
  %210 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %209, i64 0, i32 0
  %211 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %16, i64 0, i64 2
  %212 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %211, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %208, i8 -86, i64 6, i1 false)
  %213 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %214 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %215 = load i8*, i8** %78, align 16
  %216 = getelementptr i8, i8* %215, i64 -24
  %217 = bitcast i8* %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds i8, i8* %83, i64 %218
  %220 = getelementptr inbounds i8, i8* %219, i64 16
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #9
  %221 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %17, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 72, i1 false)
  %222 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %16, i64 0, i64 0
  %223 = icmp eq i32 %206, 1397445452
  %224 = bitcast i8* %220 to %"class.SkSL::String"*
  br i1 %223, label %225, label %230

225:                                              ; preds = %204
  %226 = call zeroext i1 @_ZN22GrPersistentCacheUtils19UnpackCachedShadersEP12SkReadBufferPN4SkSL6StringEPNS2_7Program6InputsEiPNS_14ShaderMetadataE(%class.SkReadBuffer* nonnull %11, %"class.SkSL::String"* nonnull %221, %"struct.SkSL::Program::Inputs"* nonnull %222, i32 3, %"struct.GrPersistentCacheUtils::ShaderMetadata"* null) #9
  br i1 %226, label %227, label %230

227:                                              ; preds = %225
  %228 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %17, i64 0, i64 1
  %229 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %17, i64 0, i64 2
  br label %230

230:                                              ; preds = %227, %225, %204
  %231 = phi %"class.SkSL::String"* [ %229, %227 ], [ %224, %225 ], [ %224, %204 ]
  %232 = phi %"class.SkSL::String"* [ %228, %227 ], [ %214, %225 ], [ %214, %204 ]
  %233 = phi %"class.SkSL::String"* [ %221, %227 ], [ %213, %225 ], [ %213, %204 ]
  %234 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 0
  %235 = getelementptr inbounds [3 x %struct.VkPipelineShaderStageCreateInfo], [3 x %struct.VkPipelineShaderStageCreateInfo]* %9, i64 0, i64 0
  %236 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %237 = call zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu* %236, %"class.SkSL::String"* dereferenceable(24) %233, i32 1, %struct.VkShaderModule_T** nonnull %234, %struct.VkPipelineShaderStageCreateInfo* nonnull %235, %"struct.SkSL::ProgramSettings"* nonnull dereferenceable(56) %10, %"class.SkSL::String"* nonnull %207, %"struct.SkSL::Program::Inputs"* nonnull %222) #9
  br i1 %237, label %238, label %252

238:                                              ; preds = %230
  %239 = load i8, i8* %208, align 1, !range !2
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %242

242:                                              ; preds = %238, %241
  %243 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 2
  %244 = getelementptr inbounds [3 x %struct.VkPipelineShaderStageCreateInfo], [3 x %struct.VkPipelineShaderStageCreateInfo]* %9, i64 0, i64 1
  %245 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 2
  %246 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %247 = call zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu* %246, %"class.SkSL::String"* dereferenceable(24) %231, i32 16, %struct.VkShaderModule_T** %243, %struct.VkPipelineShaderStageCreateInfo* %244, %"struct.SkSL::ProgramSettings"* nonnull dereferenceable(56) %10, %"class.SkSL::String"* %245, %"struct.SkSL::Program::Inputs"* %211) #9
  br i1 %247, label %248, label %252

248:                                              ; preds = %242
  %249 = load i8, i8* %212, align 1, !range !2
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %252, label %251

251:                                              ; preds = %248
  call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %252

252:                                              ; preds = %251, %248, %242, %230
  %253 = phi i1 [ false, %230 ], [ false, %242 ], [ true, %248 ], [ true, %251 ]
  %254 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 7
  %255 = load %class.GrProgramInfo*, %class.GrProgramInfo** %254, align 16
  %256 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %255, i64 0, i32 7
  %257 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %256, align 8
  %258 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %257, i64 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = and i32 %259, 8
  %261 = icmp eq i32 %260, 0
  %262 = xor i1 %253, true
  %263 = or i1 %261, %262
  %264 = select i1 %261, i32 2, i32 3
  br i1 %263, label %275, label %265

265:                                              ; preds = %252
  %266 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 1
  %267 = getelementptr inbounds [3 x %struct.VkPipelineShaderStageCreateInfo], [3 x %struct.VkPipelineShaderStageCreateInfo]* %9, i64 0, i64 2
  %268 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 1
  %269 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %270 = call zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu* %269, %"class.SkSL::String"* dereferenceable(24) %232, i32 8, %struct.VkShaderModule_T** %266, %struct.VkPipelineShaderStageCreateInfo* %267, %"struct.SkSL::ProgramSettings"* nonnull dereferenceable(56) %10, %"class.SkSL::String"* %268, %"struct.SkSL::Program::Inputs"* %209) #9
  br i1 %270, label %271, label %277

271:                                              ; preds = %265
  %272 = load i8, i8* %210, align 1, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %293, label %274

274:                                              ; preds = %271
  call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %293

275:                                              ; preds = %252
  %276 = and i1 %253, %261
  br i1 %276, label %293, label %277

277:                                              ; preds = %265, %275
  %278 = phi i32 [ %264, %275 ], [ 3, %265 ]
  %279 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %234, align 16
  %280 = icmp eq %struct.VkShaderModule_T* %279, null
  br i1 %280, label %289, label %281

281:                                              ; preds = %277
  %282 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %283 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %282, i64 0, i32 1, i32 0
  %284 = load %struct.GrVkInterface*, %struct.GrVkInterface** %283, align 8
  %285 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %284, i64 0, i32 1, i32 58, i32 0
  %286 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %285, align 8
  %287 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %282, i64 0, i32 6
  %288 = load %struct.VkDevice_T*, %struct.VkDevice_T** %287, align 8
  call void %286(%struct.VkDevice_T* %288, %struct.VkShaderModule_T* nonnull %279, %struct.VkAllocationCallbacks* null) #9
  br label %289

289:                                              ; preds = %277, %281
  %290 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 1
  %291 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %290, align 8
  %292 = icmp eq %struct.VkShaderModule_T* %291, null
  br i1 %292, label %663, label %655

293:                                              ; preds = %274, %271, %275
  %294 = phi i32 [ %264, %275 ], [ 3, %271 ], [ 3, %274 ]
  %295 = xor i1 %160, true
  %296 = icmp ne i64 %205, 0
  %297 = or i1 %296, %295
  br i1 %297, label %325, label %298

298:                                              ; preds = %293
  %299 = load %class.GrGpu*, %class.GrGpu** %154, align 16
  %300 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %299, i64 0, i32 5
  %301 = bitcast %class.GrDirectContext** %300 to %class.GrContext_Base**
  %302 = load %class.GrContext_Base*, %class.GrContext_Base** %301, align 8
  %303 = call dereferenceable(240) %struct.GrContextOptions* @_ZNK14GrContext_Base7optionsEv(%class.GrContext_Base* %302) #9
  %304 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %303, i64 0, i32 22
  %305 = load i32, i32* %304, align 8
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %323

307:                                              ; preds = %298
  %308 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #9
  call void @_ZN13GrShaderUtils11PrettyPrintERKN4SkSL6StringE(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* dereferenceable(24) %233) #9
  %309 = bitcast [3 x %"class.SkSL::String"]* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %307
  %314 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load i8*, i8** %314, align 16
  call void @_ZdlPv(i8* %315) #10
  br label %316

316:                                              ; preds = %313, %307
  %317 = bitcast [3 x %"class.SkSL::String"]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %317, i8* nonnull align 8 %308, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #9
  call void @_ZN13GrShaderUtils11PrettyPrintERKN4SkSL6StringE(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* dereferenceable(24) %232) #9
  %318 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 1
  %319 = bitcast %"class.SkSL::String"* %318 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %319, i64 0, i32 1, i32 0
  %321 = load i8, i8* %320, align 1
  %322 = icmp slt i8 %321, 0
  br i1 %322, label %640, label %643

323:                                              ; preds = %653, %298
  %324 = phi i1 [ false, %298 ], [ true, %653 ]
  call void @_ZN24GrVkPipelineStateBuilder19storeShadersInCacheEPKN4SkSL6StringEPKNS0_7Program6InputsEb(%class.GrVkPipelineStateBuilder* %0, %"class.SkSL::String"* nonnull %207, %"struct.SkSL::Program::Inputs"* nonnull %222, i1 zeroext %324)
  br label %325

325:                                              ; preds = %663, %667, %293, %323
  %326 = phi i32 [ %294, %323 ], [ %294, %293 ], [ %278, %667 ], [ %278, %663 ]
  %327 = phi i32 [ 0, %323 ], [ 0, %293 ], [ 1, %667 ], [ 1, %663 ]
  %328 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %17, i64 0, i64 2
  %329 = bitcast %"class.SkSL::String"* %328 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %330 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %329, i64 0, i32 1, i32 0
  %331 = load i8, i8* %330, align 1
  %332 = icmp slt i8 %331, 0
  br i1 %332, label %333, label %336

333:                                              ; preds = %325
  %334 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %328, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load i8*, i8** %334, align 16
  call void @_ZdlPv(i8* %335) #10
  br label %336

336:                                              ; preds = %325, %333
  %337 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %17, i64 0, i64 1
  %338 = bitcast %"class.SkSL::String"* %337 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %338, i64 0, i32 1, i32 0
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %623, label %626

342:                                              ; preds = %634
  %343 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %635, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8*, i8** %343, align 16
  call void @_ZdlPv(i8* %344) #10
  br label %345

345:                                              ; preds = %634, %342
  %346 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 1
  %347 = bitcast %"class.SkSL::String"* %346 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %610, label %613

351:                                              ; preds = %199, %621
  %352 = phi i64 [ %178, %199 ], [ %205, %621 ]
  %353 = phi i32 [ %202, %199 ], [ %326, %621 ]
  %354 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 7
  %355 = load %class.GrProgramInfo*, %class.GrProgramInfo** %354, align 16
  %356 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %355, i64 0, i32 11
  %357 = load i32, i32* %356, align 8
  %358 = and i32 %357, 1
  %359 = or i32 %358, 2
  %360 = bitcast %struct.VkPipelineLayoutCreateInfo* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %360) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %360, i8 -86, i64 48, i1 false)
  %361 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %20, i64 0, i32 0
  store i32 30, i32* %361, align 8
  %362 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %20, i64 0, i32 1
  store i8* null, i8** %362, align 8
  %363 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %20, i64 0, i32 2
  store i32 0, i32* %363, align 8
  %364 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %20, i64 0, i32 3
  store i32 %359, i32* %364, align 4
  %365 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %20, i64 0, i32 4
  store %struct.VkDescriptorSetLayout_T** %60, %struct.VkDescriptorSetLayout_T*** %365, align 8
  %366 = bitcast %struct.VkPushConstantRange* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %366) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %366, i8 0, i64 12, i1 false)
  br i1 %99, label %381, label %367

367:                                              ; preds = %351
  %368 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %369 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %368, i64 0, i32 3, i32 0
  %370 = load %class.GrVkCaps*, %class.GrVkCaps** %369, align 8
  %371 = call i32 @_ZNK8GrVkCaps25getPushConstantStageFlagsEv(%class.GrVkCaps* %370) #9
  %372 = getelementptr inbounds %struct.VkPushConstantRange, %struct.VkPushConstantRange* %21, i64 0, i32 0
  store i32 %371, i32* %372, align 4
  %373 = getelementptr inbounds %struct.VkPushConstantRange, %struct.VkPushConstantRange* %21, i64 0, i32 1
  store i32 0, i32* %373, align 4
  %374 = load i8, i8* %97, align 1, !range !2
  %375 = icmp eq i8 %374, 0
  %376 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 8, i64 1
  %377 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 8, i64 0
  %378 = select i1 %375, i32* %377, i32* %376
  %379 = load i32, i32* %378, align 4
  %380 = getelementptr inbounds %struct.VkPushConstantRange, %struct.VkPushConstantRange* %21, i64 0, i32 2
  store i32 %379, i32* %380, align 4
  br label %381

381:                                              ; preds = %351, %367
  %382 = phi i32 [ 1, %367 ], [ 0, %351 ]
  %383 = phi %struct.VkPushConstantRange* [ %21, %367 ], [ null, %351 ]
  %384 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %20, i64 0, i32 5
  store i32 %382, i32* %384, align 8
  %385 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %20, i64 0, i32 6
  store %struct.VkPushConstantRange* %383, %struct.VkPushConstantRange** %385, align 8
  %386 = bitcast %struct.VkPipelineLayout_T** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #9
  store %struct.VkPipelineLayout_T* inttoptr (i64 -6148914691236517206 to %struct.VkPipelineLayout_T*), %struct.VkPipelineLayout_T** %22, align 8
  %387 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %388 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %387, i64 0, i32 1, i32 0
  %389 = load %struct.GrVkInterface*, %struct.GrVkInterface** %388, align 8
  %390 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %389, i64 0, i32 1, i32 66, i32 0
  %391 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)** %390, align 8
  %392 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %387, i64 0, i32 6
  %393 = load %struct.VkDevice_T*, %struct.VkDevice_T** %392, align 8
  %394 = call i32 %391(%struct.VkDevice_T* %393, %struct.VkPipelineLayoutCreateInfo* nonnull %20, %struct.VkAllocationCallbacks* null, %struct.VkPipelineLayout_T** nonnull %22) #9
  %395 = icmp eq i32 %394, 0
  %396 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  br i1 %395, label %407, label %397

397:                                              ; preds = %381
  %398 = bitcast %class.GrVkGpu* %396 to i1 (%class.GrVkGpu*)***
  %399 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %398, align 8
  %400 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %399, i64 8
  %401 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %400, align 8
  %402 = call zeroext i1 %401(%class.GrVkGpu* %396) #9
  br i1 %402, label %404, label %403

403:                                              ; preds = %397
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.7, i64 0, i64 0), i32 341, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.8, i64 0, i64 0), i32 %394) #9
  br label %404

404:                                              ; preds = %403, %397
  %405 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %406 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %405, i32 %394) #9
  br label %551

407:                                              ; preds = %381
  %408 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %396, i32 0) #9
  %409 = load %class.GrProgramInfo*, %class.GrProgramInfo** %354, align 16
  br i1 %3, label %425, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %409, i64 0, i32 12
  %412 = load i32, i32* %411, align 4
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %426

414:                                              ; preds = %410
  %415 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %409, i64 0, i32 4
  %416 = load i8, i8* %415, align 4, !range !2
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %426, label %418

418:                                              ; preds = %414
  %419 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %420 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %419, i64 0, i32 3, i32 0
  %421 = load %class.GrVkCaps*, %class.GrVkCaps** %420, align 8
  %422 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %421, i64 0, i32 28
  %423 = load i8, i8* %422, align 4, !range !2
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %426, label %425

425:                                              ; preds = %407, %418
  br label %426

426:                                              ; preds = %418, %414, %425, %410
  %427 = phi i32 [ 1, %425 ], [ 0, %418 ], [ 0, %414 ], [ 0, %410 ]
  %428 = bitcast %class.sk_sp* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %428) #9
  %429 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %23, i64 0, i32 0
  store %class.GrVkPipeline* inttoptr (i64 -6148914691236517206 to %class.GrVkPipeline*), %class.GrVkPipeline** %429, align 8
  %430 = getelementptr inbounds [3 x %struct.VkPipelineShaderStageCreateInfo], [3 x %struct.VkPipelineShaderStageCreateInfo]* %9, i64 0, i64 0
  %431 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %22, align 8
  call void @_ZN20GrVkResourceProvider12makePipelineERK13GrProgramInfoP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_Tj(%class.sk_sp* nonnull sret %23, %class.GrVkResourceProvider* %67, %class.GrProgramInfo* dereferenceable(128) %409, %struct.VkPipelineShaderStageCreateInfo* nonnull %430, i32 %353, %struct.VkRenderPass_T* %2, %struct.VkPipelineLayout_T* %431, i32 %427) #9
  %432 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 0
  %433 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %432, align 16
  %434 = icmp eq %struct.VkShaderModule_T* %433, null
  br i1 %434, label %443, label %435

435:                                              ; preds = %426
  %436 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %437 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %436, i64 0, i32 1, i32 0
  %438 = load %struct.GrVkInterface*, %struct.GrVkInterface** %437, align 8
  %439 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %438, i64 0, i32 1, i32 58, i32 0
  %440 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %439, align 8
  %441 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %436, i64 0, i32 6
  %442 = load %struct.VkDevice_T*, %struct.VkDevice_T** %441, align 8
  call void %440(%struct.VkDevice_T* %442, %struct.VkShaderModule_T* nonnull %433, %struct.VkAllocationCallbacks* null) #9
  br label %443

443:                                              ; preds = %426, %435
  %444 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 1
  %445 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %444, align 8
  %446 = icmp eq %struct.VkShaderModule_T* %445, null
  br i1 %446, label %595, label %587

447:                                              ; preds = %607
  %448 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %449 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %448, i64 0, i32 1, i32 0
  %450 = load %struct.GrVkInterface*, %struct.GrVkInterface** %449, align 8
  %451 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %450, i64 0, i32 1, i32 67, i32 0
  %452 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %451, align 8
  %453 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %448, i64 0, i32 6
  %454 = load %struct.VkDevice_T*, %struct.VkDevice_T** %453, align 8
  %455 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %22, align 8
  call void %452(%struct.VkDevice_T* %454, %struct.VkPipelineLayout_T* %455, %struct.VkAllocationCallbacks* null) #9
  br label %533

456:                                              ; preds = %607
  %457 = ptrtoint %class.GrVkPipeline* %608 to i64
  %458 = call i8* @_Znwm(i64 208) #10
  %459 = bitcast i8* %458 to %class.GrVkPipelineState*
  %460 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %429, align 8
  %461 = bitcast %class.sk_sp* %24 to i64*
  store i64 %457, i64* %461, align 8
  %462 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 8
  %463 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 1
  %464 = load i8, i8* %97, align 1, !range !2
  %465 = icmp eq i8 %464, 0
  %466 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 8, i64 1
  %467 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 8, i64 0
  %468 = select i1 %465, i32* %467, i32* %466
  %469 = load i32, i32* %468, align 4
  %470 = icmp ne i8 %464, 0
  %471 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 2
  %472 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 9
  %473 = getelementptr inbounds %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.429"* %472, i64 0, i32 0, i32 0, i32 0
  %474 = bitcast %"class.std::__1::unique_ptr.429"* %472 to i64*
  %475 = load i64, i64* %474, align 8
  store %class.GrGLSLGeometryProcessor* null, %class.GrGLSLGeometryProcessor** %473, align 8
  %476 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 10
  %477 = getelementptr inbounds %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.445"* %476, i64 0, i32 0, i32 0, i32 0
  %478 = bitcast %"class.std::__1::unique_ptr.445"* %476 to i64*
  %479 = load i64, i64* %478, align 8
  store %class.GrGLSLXferProcessor* null, %class.GrGLSLXferProcessor** %477, align 8
  %480 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 11
  %481 = bitcast %"class.std::__1::vector.451"* %480 to <2 x i64>*
  %482 = load <2 x i64>, <2 x i64>* %481, align 8
  %483 = getelementptr inbounds %"class.std::__1::vector.451", %"class.std::__1::vector.451"* %25, i64 0, i32 0, i32 1
  %484 = bitcast %"class.std::__1::vector.451"* %25 to <2 x i64>*
  store <2 x i64> %482, <2 x i64>* %484, align 16
  %485 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %486 = bitcast %"class.std::__1::unique_ptr.453"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = getelementptr inbounds %"class.std::__1::vector.451", %"class.std::__1::vector.451"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  %489 = bitcast %"class.std::__1::unique_ptr.453"** %488 to i64*
  store i64 %487, i64* %489, align 16
  %490 = bitcast %"class.std::__1::vector.451"* %480 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %490, i8 0, i64 24, i1 false) #9
  call void @_ZN17GrVkPipelineStateC1EP7GrVkGpu5sk_spIK12GrVkPipelineERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEERK27GrGLSLBuiltinUniformHandlesRK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjbSK_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSL_14default_deleteISN_EEEENSM_I19GrGLSLXferProcessorNSO_ISR_EEEENSL_6vectorINSM_I23GrGLSLFragmentProcessorNSO_ISV_EEEENSL_9allocatorISX_EEEE(%class.GrVkPipelineState* nonnull %459, %class.GrVkGpu* %460, %class.sk_sp* nonnull %24, %class.GrResourceHandle* nonnull dereferenceable(4) %8, %struct.GrGLSLBuiltinUniformHandles* dereferenceable(8) %462, %class.GrTBlockList.544* dereferenceable(128) %463, i32 %469, i1 zeroext %470, %class.GrTBlockList.544* dereferenceable(128) %471, i64 %475, i64 %479, %"class.std::__1::vector.451"* nonnull %25) #9
  %491 = getelementptr inbounds %"class.std::__1::vector.451", %"class.std::__1::vector.451"* %25, i64 0, i32 0, i32 0
  %492 = load %"class.std::__1::unique_ptr.453"*, %"class.std::__1::unique_ptr.453"** %491, align 16
  %493 = icmp eq %"class.std::__1::unique_ptr.453"* %492, null
  br i1 %493, label %516, label %494

494:                                              ; preds = %456
  %495 = bitcast %"class.std::__1::unique_ptr.453"* %492 to i8*
  %496 = load %"class.std::__1::unique_ptr.453"*, %"class.std::__1::unique_ptr.453"** %483, align 8
  %497 = icmp eq %"class.std::__1::unique_ptr.453"* %496, %492
  br i1 %497, label %514, label %498

498:                                              ; preds = %494, %509
  %499 = phi %"class.std::__1::unique_ptr.453"* [ %500, %509 ], [ %496, %494 ]
  %500 = getelementptr inbounds %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.453"* %499, i64 -1
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.453"* %500, i64 0, i32 0, i32 0, i32 0
  %502 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %501, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %501, align 8
  %503 = icmp eq %class.GrGLSLFragmentProcessor* %502, null
  br i1 %503, label %509, label %504

504:                                              ; preds = %498
  %505 = bitcast %class.GrGLSLFragmentProcessor* %502 to void (%class.GrGLSLFragmentProcessor*)***
  %506 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %505, align 8
  %507 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %506, i64 1
  %508 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %507, align 8
  call void %508(%class.GrGLSLFragmentProcessor* nonnull %502) #9
  br label %509

509:                                              ; preds = %504, %498
  %510 = icmp eq %"class.std::__1::unique_ptr.453"* %500, %492
  br i1 %510, label %511, label %498

511:                                              ; preds = %509
  %512 = bitcast %"class.std::__1::vector.451"* %25 to i8**
  %513 = load i8*, i8** %512, align 16
  br label %514

514:                                              ; preds = %511, %494
  %515 = phi i8* [ %513, %511 ], [ %495, %494 ]
  store %"class.std::__1::unique_ptr.453"* %492, %"class.std::__1::unique_ptr.453"** %483, align 8
  call void @_ZdlPv(i8* %515) #10
  br label %516

516:                                              ; preds = %456, %514
  %517 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %24, i64 0, i32 0
  %518 = load %class.GrVkPipeline*, %class.GrVkPipeline** %517, align 8
  %519 = icmp eq %class.GrVkPipeline* %518, null
  br i1 %519, label %533, label %520

520:                                              ; preds = %516
  %521 = bitcast %class.GrVkPipeline* %518 to %class.GrManagedResource*
  %522 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %518, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = atomicrmw add i32* %522, i32 -1 acq_rel
  %524 = icmp eq i32 %523, 1
  br i1 %524, label %525, label %533

525:                                              ; preds = %520
  %526 = bitcast %class.GrVkPipeline* %518 to void (%class.GrManagedResource*)***
  %527 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %526, align 8
  %528 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %527, i64 4
  %529 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %528, align 8
  call void %529(%class.GrManagedResource* nonnull %521) #9
  %530 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %526, align 8
  %531 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %530, i64 1
  %532 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %531, align 8
  call void %532(%class.GrManagedResource* nonnull %521) #9
  br label %533

533:                                              ; preds = %525, %520, %516, %447
  %534 = phi %class.GrVkPipelineState* [ null, %447 ], [ %459, %516 ], [ %459, %520 ], [ %459, %525 ]
  %535 = load %class.GrVkPipeline*, %class.GrVkPipeline** %429, align 8
  %536 = icmp eq %class.GrVkPipeline* %535, null
  br i1 %536, label %550, label %537

537:                                              ; preds = %533
  %538 = bitcast %class.GrVkPipeline* %535 to %class.GrManagedResource*
  %539 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %535, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %540 = atomicrmw add i32* %539, i32 -1 acq_rel
  %541 = icmp eq i32 %540, 1
  br i1 %541, label %542, label %550

542:                                              ; preds = %537
  %543 = bitcast %class.GrVkPipeline* %535 to void (%class.GrManagedResource*)***
  %544 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %543, align 8
  %545 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %544, i64 4
  %546 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %545, align 8
  call void %546(%class.GrManagedResource* nonnull %538) #9
  %547 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %543, align 8
  %548 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %547, i64 1
  %549 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %548, align 8
  call void %549(%class.GrManagedResource* nonnull %538) #9
  br label %550

550:                                              ; preds = %533, %537, %542
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %428) #9
  br label %551

551:                                              ; preds = %404, %550
  %552 = phi %class.GrVkPipelineState* [ %534, %550 ], [ null, %404 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %366) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %360) #9
  br label %553

553:                                              ; preds = %621, %551
  %554 = phi i64 [ %352, %551 ], [ %205, %621 ]
  %555 = phi %class.GrVkPipelineState* [ %552, %551 ], [ null, %621 ]
  %556 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %11, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %557 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %556, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %556, align 8
  %558 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %557, null
  br i1 %558, label %561, label %559

559:                                              ; preds = %553
  %560 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %557 to i8*
  call void @_ZdaPv(i8* %560) #10
  br label %561

561:                                              ; preds = %553, %559
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %147) #9
  %562 = inttoptr i64 %554 to %class.SkData*
  %563 = icmp eq i64 %554, 0
  br i1 %563, label %570, label %564

564:                                              ; preds = %561
  %565 = getelementptr inbounds %class.SkData, %class.SkData* %562, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = atomicrmw add i32* %565, i32 -1 acq_rel
  %567 = icmp eq i32 %566, 1
  br i1 %567, label %568, label %570

568:                                              ; preds = %564
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %562) #9
  %569 = inttoptr i64 %554 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %569) #9
  br label %570

570:                                              ; preds = %561, %564, %568
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %101) #9
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %100) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  %571 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %40, align 8
  %572 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %571, null
  br i1 %572, label %586, label %573

573:                                              ; preds = %570
  %574 = load i8*, i8** %41, align 8
  %575 = load i8, i8* %574, align 1
  %576 = icmp eq i8 %575, 0
  br i1 %576, label %586, label %577

577:                                              ; preds = %573
  %578 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %579 = load i8*, i8** %41, align 8
  %580 = load i8*, i8** %42, align 8
  %581 = load i64, i64* %43, align 8
  %582 = bitcast %class.SkEventTracer* %578 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %583 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %582, align 8
  %584 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %583, i64 5
  %585 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %584, align 8
  call void %585(%class.SkEventTracer* %578, i8* %579, i8* %580, i64 %581) #9
  br label %586

586:                                              ; preds = %570, %573, %577
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #9
  ret %class.GrVkPipelineState* %555

587:                                              ; preds = %443
  %588 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %589 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %588, i64 0, i32 1, i32 0
  %590 = load %struct.GrVkInterface*, %struct.GrVkInterface** %589, align 8
  %591 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %590, i64 0, i32 1, i32 58, i32 0
  %592 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %591, align 8
  %593 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %588, i64 0, i32 6
  %594 = load %struct.VkDevice_T*, %struct.VkDevice_T** %593, align 8
  call void %592(%struct.VkDevice_T* %594, %struct.VkShaderModule_T* nonnull %445, %struct.VkAllocationCallbacks* null) #9
  br label %595

595:                                              ; preds = %587, %443
  %596 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 2
  %597 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %596, align 16
  %598 = icmp eq %struct.VkShaderModule_T* %597, null
  br i1 %598, label %607, label %599

599:                                              ; preds = %595
  %600 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %601 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %600, i64 0, i32 1, i32 0
  %602 = load %struct.GrVkInterface*, %struct.GrVkInterface** %601, align 8
  %603 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %602, i64 0, i32 1, i32 58, i32 0
  %604 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %603, align 8
  %605 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %600, i64 0, i32 6
  %606 = load %struct.VkDevice_T*, %struct.VkDevice_T** %605, align 8
  call void %604(%struct.VkDevice_T* %606, %struct.VkShaderModule_T* nonnull %597, %struct.VkAllocationCallbacks* null) #9
  br label %607

607:                                              ; preds = %599, %595
  %608 = load %class.GrVkPipeline*, %class.GrVkPipeline** %429, align 8
  %609 = icmp eq %class.GrVkPipeline* %608, null
  br i1 %609, label %447, label %456

610:                                              ; preds = %345
  %611 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = load i8*, i8** %611, align 8
  call void @_ZdlPv(i8* %612) #10
  br label %613

613:                                              ; preds = %610, %345
  %614 = bitcast [3 x %"class.SkSL::String"]* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %615 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %614, i64 0, i32 1, i32 0
  %616 = load i8, i8* %615, align 1
  %617 = icmp slt i8 %616, 0
  br i1 %617, label %618, label %621

618:                                              ; preds = %613
  %619 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %620 = load i8*, i8** %619, align 16
  call void @_ZdlPv(i8* %620) #10
  br label %621

621:                                              ; preds = %618, %613
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #9
  %622 = icmp eq i32 %327, 0
  br i1 %622, label %351, label %553

623:                                              ; preds = %336
  %624 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = load i8*, i8** %624, align 8
  call void @_ZdlPv(i8* %625) #10
  br label %626

626:                                              ; preds = %623, %336
  %627 = bitcast [3 x %"class.SkSL::String"]* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %628 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %627, i64 0, i32 1, i32 0
  %629 = load i8, i8* %628, align 1
  %630 = icmp slt i8 %629, 0
  br i1 %630, label %631, label %634

631:                                              ; preds = %626
  %632 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %17, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load i8*, i8** %632, align 16
  call void @_ZdlPv(i8* %633) #10
  br label %634

634:                                              ; preds = %631, %626
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %208) #9
  %635 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 2
  %636 = bitcast %"class.SkSL::String"* %635 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %637 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %636, i64 0, i32 1, i32 0
  %638 = load i8, i8* %637, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %342, label %345

640:                                              ; preds = %316
  %641 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %318, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i8*, i8** %641, align 8
  call void @_ZdlPv(i8* %642) #10
  br label %643

643:                                              ; preds = %316, %640
  %644 = bitcast %"class.SkSL::String"* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %644, i8* nonnull align 8 %308, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #9
  call void @_ZN13GrShaderUtils11PrettyPrintERKN4SkSL6StringE(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* dereferenceable(24) %231) #9
  %645 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %14, i64 0, i64 2
  %646 = bitcast %"class.SkSL::String"* %645 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %647 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %646, i64 0, i32 1, i32 0
  %648 = load i8, i8* %647, align 1
  %649 = icmp slt i8 %648, 0
  br i1 %649, label %650, label %653

650:                                              ; preds = %643
  %651 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %645, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = load i8*, i8** %651, align 16
  call void @_ZdlPv(i8* %652) #10
  br label %653

653:                                              ; preds = %643, %650
  %654 = bitcast %"class.SkSL::String"* %645 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %654, i8* nonnull align 8 %308, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #9
  br label %323

655:                                              ; preds = %289
  %656 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %657 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %656, i64 0, i32 1, i32 0
  %658 = load %struct.GrVkInterface*, %struct.GrVkInterface** %657, align 8
  %659 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %658, i64 0, i32 1, i32 58, i32 0
  %660 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %659, align 8
  %661 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %656, i64 0, i32 6
  %662 = load %struct.VkDevice_T*, %struct.VkDevice_T** %661, align 8
  call void %660(%struct.VkDevice_T* %662, %struct.VkShaderModule_T* nonnull %291, %struct.VkAllocationCallbacks* null) #9
  br label %663

663:                                              ; preds = %655, %289
  %664 = getelementptr inbounds [3 x %struct.VkShaderModule_T*], [3 x %struct.VkShaderModule_T*]* %7, i64 0, i64 2
  %665 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %664, align 16
  %666 = icmp eq %struct.VkShaderModule_T* %665, null
  br i1 %666, label %325, label %667

667:                                              ; preds = %663
  %668 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 16
  %669 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %668, i64 0, i32 1, i32 0
  %670 = load %struct.GrVkInterface*, %struct.GrVkInterface** %669, align 8
  %671 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %670, i64 0, i32 1, i32 58, i32 0
  %672 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %671, align 8
  %673 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %668, i64 0, i32 6
  %674 = load %struct.VkDevice_T*, %struct.VkDevice_T** %673, align 8
  call void %672(%struct.VkDevice_T* %674, %struct.VkShaderModule_T* nonnull %665, %struct.VkAllocationCallbacks* null) #9
  br label %325
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24GrVkPipelineStateBuilderD2Ev(%class.GrVkPipelineStateBuilder*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24GrVkPipelineStateBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4
  tail call void @_ZN18GrVkUniformHandlerD1Ev(%class.GrVkUniformHandler* %3) #9
  %4 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0
  tail call void @_ZN20GrGLSLVaryingHandlerD2Ev(%class.GrGLSLVaryingHandler* %4) #9
  %5 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  tail call void @_ZN20GrGLSLProgramBuilderD2Ev(%class.GrGLSLProgramBuilder* %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrVkPipelineStateBuilderC2EP7GrVkGpuRK13GrProgramDescRK13GrProgramInfo(%class.GrVkPipelineStateBuilder*, %class.GrVkGpu*, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  tail call void @_ZN20GrGLSLProgramBuilderC2ERK13GrProgramDescRK13GrProgramInfo(%class.GrGLSLProgramBuilder* %5, %class.GrProgramDesc* dereferenceable(160) %2, %class.GrProgramInfo* dereferenceable(128) %3) #9
  %6 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24GrVkPipelineStateBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 16
  %7 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  store %class.GrVkGpu* %1, %class.GrVkGpu** %7, align 16
  %8 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20GrGLSLVaryingHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 16
  %9 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 2
  %10 = bitcast %class.GrTBlockList.542* %9 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %10, i32 0, i64 288, i64 32) #9
  %11 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 3
  %12 = bitcast %class.GrTBlockList* %11 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %12, i32 0, i64 352, i64 40) #9
  %13 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 4
  %14 = bitcast %class.GrTBlockList* %13 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %14, i32 0, i64 352, i64 40) #9
  %15 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 5
  %16 = bitcast %class.GrTBlockList* %15 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %16, i32 0, i64 352, i64 40) #9
  %17 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 6
  %18 = bitcast %class.GrTBlockList* %17 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %18, i32 0, i64 352, i64 40) #9
  %19 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 7
  %20 = bitcast %class.GrTBlockList* %19 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %20, i32 0, i64 352, i64 40) #9
  %21 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 8
  %22 = bitcast %class.GrTBlockList* %21 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %22, i32 0, i64 352, i64 40) #9
  %23 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 9
  store %class.GrGLSLProgramBuilder* %5, %class.GrGLSLProgramBuilder** %23, align 16
  %24 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0, i32 10
  store i8* null, i8** %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV18GrVkVaryingHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 16
  %25 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 0, i32 0
  %26 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 0, i32 1
  store %class.GrGLSLProgramBuilder* %5, %class.GrGLSLProgramBuilder** %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV18GrVkUniformHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 16
  %27 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 1
  %28 = bitcast %class.GrTBlockList.544* %27 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %28, i32 0, i64 672, i64 80) #9
  %29 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 2
  %30 = bitcast %class.GrTBlockList.544* %29 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %30, i32 0, i64 672, i64 80) #9
  %31 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 3, i32 1
  %32 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 3, i32 0
  store %class.GrSwizzle* null, %class.GrSwizzle** %32, align 8
  store i64 1, i64* %31, align 8
  %33 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 4, i32 0, i32 2
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 4, i32 0, i32 3
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %36) #9
  %37 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 4, i32 0, i32 4
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %37) #9
  %38 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 4, i32 0, i32 5
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %38) #9
  %39 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 4, i32 3
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %39) #9
  %40 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 5
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #9
  %41 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 6
  %42 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 7
  %43 = load %class.GrProgramInfo*, %class.GrProgramInfo** %42, align 16
  %44 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %43, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp ne i32 %45, 0
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %41, align 2
  %48 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %48, i8 0, i64 9, i1 false) #9
  ret void
}

declare void @_ZN20GrGLSLProgramBuilderC2ERK13GrProgramDescRK13GrProgramInfo(%class.GrGLSLProgramBuilder*, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128)) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrCaps* @_ZNK24GrVkPipelineStateBuilder4capsEv(%class.GrVkPipelineStateBuilder* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  %3 = bitcast %class.GrVkGpu** %2 to %class.GrGpu**
  %4 = load %class.GrGpu*, %class.GrGpu** %3, align 16
  %5 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %4, i64 0, i32 2, i32 0
  %6 = load %class.GrCaps*, %class.GrCaps** %5, align 8
  ret %class.GrCaps* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.SkSL::Compiler"* @_ZNK24GrVkPipelineStateBuilder14shaderCompilerEv(%class.GrVkPipelineStateBuilder* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  %3 = bitcast %class.GrVkGpu** %2 to %class.GrGpu**
  %4 = load %class.GrGpu*, %class.GrGpu** %3, align 16
  %5 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %5, align 8
  ret %"class.SkSL::Compiler"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrVkPipelineStateBuilder27finalizeFragmentOutputColorER11GrShaderVar(%class.GrVkPipelineStateBuilder* nocapture readnone, %class.GrShaderVar* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %1, i64 0, i32 4
  %4 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %3, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %12

11:                                               ; preds = %2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %12

12:                                               ; preds = %9, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrVkPipelineStateBuilder30finalizeFragmentSecondaryColorER11GrShaderVar(%class.GrVkPipelineStateBuilder* nocapture readnone, %class.GrShaderVar* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %1, i64 0, i32 4
  %4 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %3, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %12

11:                                               ; preds = %2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %12

12:                                               ; preds = %9, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24GrVkPipelineStateBuilder20createVkShaderModuleE21VkShaderStageFlagBitsRKN4SkSL6StringEPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkPipelineStateBuilder*, i32, %"class.SkSL::String"* dereferenceable(24), %struct.VkShaderModule_T**, %struct.VkPipelineShaderStageCreateInfo*, %"struct.SkSL::ProgramSettings"* dereferenceable(56), %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"*) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  %10 = load %class.GrVkGpu*, %class.GrVkGpu** %9, align 16
  %11 = tail call zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu* %10, %"class.SkSL::String"* dereferenceable(24) %2, i32 %1, %struct.VkShaderModule_T** %3, %struct.VkPipelineShaderStageCreateInfo* %4, %"struct.SkSL::ProgramSettings"* dereferenceable(56) %5, %"class.SkSL::String"* %6, %"struct.SkSL::Program::Inputs"* %7) #9
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %7, i64 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  tail call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %18

18:                                               ; preds = %16, %12, %8
  %19 = phi i1 [ false, %8 ], [ true, %12 ], [ true, %16 ]
  ret i1 %19
}

declare zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu*, %"class.SkSL::String"* dereferenceable(24), i32, %struct.VkShaderModule_T**, %struct.VkPipelineShaderStageCreateInfo*, %"struct.SkSL::ProgramSettings"* dereferenceable(56), %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"*) local_unnamed_addr #2

declare void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24GrVkPipelineStateBuilder21installVkShaderModuleE21VkShaderStageFlagBitsRK19GrGLSLShaderBuilderPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoN4SkSL6StringENS9_7Program6InputsE(%class.GrVkPipelineStateBuilder*, i32, %class.GrGLSLShaderBuilder* nocapture readnone dereferenceable(512), %struct.VkShaderModule_T**, %struct.VkPipelineShaderStageCreateInfo*, %"class.SkSL::String"*, i16) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  %9 = load %class.GrVkGpu*, %class.GrVkGpu** %8, align 16
  %10 = tail call zeroext i1 @_Z23GrInstallVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfo(%class.GrVkGpu* %9, %"class.SkSL::String"* dereferenceable(24) %5, i32 %1, %struct.VkShaderModule_T** %3, %struct.VkPipelineShaderStageCreateInfo* %4) #9
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = and i16 %6, 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  tail call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %16

16:                                               ; preds = %14, %11, %7
  %17 = phi i1 [ false, %7 ], [ true, %11 ], [ true, %14 ]
  ret i1 %17
}

declare zeroext i1 @_Z23GrInstallVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfo(%class.GrVkGpu*, %"class.SkSL::String"* dereferenceable(24), i32, %struct.VkShaderModule_T**, %struct.VkPipelineShaderStageCreateInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN24GrVkPipelineStateBuilder20loadShadersFromCacheEP12SkReadBufferPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfo(%class.GrVkPipelineStateBuilder*, %class.SkReadBuffer*, %struct.VkShaderModule_T**, %struct.VkPipelineShaderStageCreateInfo*) local_unnamed_addr #0 align 2 {
  %5 = alloca [3 x %"class.SkSL::String"], align 16
  %6 = bitcast [3 x %"class.SkSL::String"]* %5 to i8*
  %7 = alloca [3 x %"struct.SkSL::Program::Inputs"], align 2
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #9
  %11 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 72, i1 false)
  %12 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %7, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %12) #9
  %13 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %7, i64 0, i64 0
  %14 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %7, i64 0, i64 1
  %15 = getelementptr inbounds [3 x %"struct.SkSL::Program::Inputs"], [3 x %"struct.SkSL::Program::Inputs"]* %7, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %12, i8 -86, i64 6, i1 false)
  %16 = call zeroext i1 @_ZN22GrPersistentCacheUtils19UnpackCachedShadersEP12SkReadBufferPN4SkSL6StringEPNS2_7Program6InputsEiPNS_14ShaderMetadataE(%class.SkReadBuffer* %1, %"class.SkSL::String"* nonnull %11, %"struct.SkSL::Program::Inputs"* nonnull %13, i32 3, %"struct.GrPersistentCacheUtils::ShaderMetadata"* null) #9
  br i1 %16, label %17, label %160

17:                                               ; preds = %4
  %18 = bitcast [3 x %"class.SkSL::String"]* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 16 %6, i64 24, i1 false) #9
  br label %30

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0
  %26 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 16
  %28 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %25, i8* %27, i64 %29) #9
  br label %30

30:                                               ; preds = %22, %24
  %31 = bitcast [3 x %"struct.SkSL::Program::Inputs"]* %7 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  %34 = load %class.GrVkGpu*, %class.GrVkGpu** %33, align 16
  %35 = call zeroext i1 @_Z23GrInstallVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfo(%class.GrVkGpu* %34, %"class.SkSL::String"* nonnull dereferenceable(24) %8, i32 1, %struct.VkShaderModule_T** %2, %struct.VkPipelineShaderStageCreateInfo* %3) #9
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = and i16 %32, 1
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %41

41:                                               ; preds = %30, %36, %39
  %42 = phi i1 [ false, %30 ], [ true, %36 ], [ true, %39 ]
  %43 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %41, %47
  br i1 %42, label %51, label %88

51:                                               ; preds = %50
  %52 = getelementptr inbounds %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %2, i64 2
  %53 = getelementptr inbounds %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineShaderStageCreateInfo* %3, i64 1
  %54 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 2
  %55 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %51
  %60 = bitcast %"class.SkSL::String"* %9 to i8*
  %61 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 16 %61, i64 24, i1 false) #9
  br label %68

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0
  %64 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 16
  %66 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %63, i8* %65, i64 %67) #9
  br label %68

68:                                               ; preds = %59, %62
  %69 = bitcast %"struct.SkSL::Program::Inputs"* %15 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = load %class.GrVkGpu*, %class.GrVkGpu** %33, align 16
  %72 = call zeroext i1 @_Z23GrInstallVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfo(%class.GrVkGpu* %71, %"class.SkSL::String"* nonnull dereferenceable(24) %9, i32 16, %struct.VkShaderModule_T** %52, %struct.VkPipelineShaderStageCreateInfo* %53) #9
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = and i16 %70, 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %77, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %78

78:                                               ; preds = %68, %73, %76
  %79 = phi i1 [ true, %76 ], [ true, %73 ], [ false, %68 ]
  %80 = zext i1 %79 to i8
  %81 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #10
  br label %88

88:                                               ; preds = %50, %85, %78
  %89 = phi i8 [ %80, %78 ], [ %80, %85 ], [ 0, %50 ]
  %90 = phi i1 [ %79, %78 ], [ %79, %85 ], [ false, %50 ]
  %91 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 1
  %92 = bitcast %"class.SkSL::String"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = icmp eq i64 %99, 0
  %101 = xor i1 %90, true
  %102 = or i1 %100, %101
  %103 = select i1 %100, i8 %89, i8 0
  br i1 %102, label %133, label %104

104:                                              ; preds = %88
  %105 = getelementptr inbounds %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %2, i64 1
  %106 = getelementptr inbounds %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineShaderStageCreateInfo* %3, i64 2
  br i1 %95, label %110, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.SkSL::String"* %10 to i8*
  %109 = bitcast %"class.SkSL::String"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %108, i8* align 8 %109, i64 24, i1 false) #9
  br label %114

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0
  %112 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %111, i8* %113, i64 %97) #9
  br label %114

114:                                              ; preds = %107, %110
  %115 = bitcast %"struct.SkSL::Program::Inputs"* %14 to i16*
  %116 = load i16, i16* %115, align 2
  %117 = load %class.GrVkGpu*, %class.GrVkGpu** %33, align 16
  %118 = call zeroext i1 @_Z23GrInstallVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfo(%class.GrVkGpu* %117, %"class.SkSL::String"* nonnull dereferenceable(24) %10, i32 8, %struct.VkShaderModule_T** %105, %struct.VkPipelineShaderStageCreateInfo* %106) #9
  br i1 %118, label %119, label %124

119:                                              ; preds = %114
  %120 = and i16 %116, 1
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  call void @_ZN20GrGLSLProgramBuilder18addRTHeightUniformEPKc(%class.GrGLSLProgramBuilder* %123, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %124

124:                                              ; preds = %122, %119, %114
  %125 = phi i8 [ 0, %114 ], [ 1, %119 ], [ 1, %122 ]
  %126 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %132) #10
  br label %133

133:                                              ; preds = %88, %130, %124
  %134 = phi i8 [ %103, %88 ], [ %125, %124 ], [ %125, %130 ]
  %135 = and i8 %134, 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %152

137:                                              ; preds = %133
  %138 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %2, align 8
  %139 = icmp eq %struct.VkShaderModule_T* %138, null
  br i1 %139, label %148, label %140

140:                                              ; preds = %137
  %141 = load %class.GrVkGpu*, %class.GrVkGpu** %33, align 16
  %142 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %141, i64 0, i32 1, i32 0
  %143 = load %struct.GrVkInterface*, %struct.GrVkInterface** %142, align 8
  %144 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %143, i64 0, i32 1, i32 58, i32 0
  %145 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %144, align 8
  %146 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %141, i64 0, i32 6
  %147 = load %struct.VkDevice_T*, %struct.VkDevice_T** %146, align 8
  call void %145(%struct.VkDevice_T* %147, %struct.VkShaderModule_T* nonnull %138, %struct.VkAllocationCallbacks* null) #9
  br label %148

148:                                              ; preds = %137, %140
  %149 = getelementptr inbounds %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %2, i64 1
  %150 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %149, align 8
  %151 = icmp eq %struct.VkShaderModule_T* %150, null
  br i1 %151, label %196, label %188

152:                                              ; preds = %133
  %153 = load i8, i8* %93, align 1
  %154 = icmp slt i8 %153, 0
  %155 = load i64, i64* %96, align 8
  %156 = zext i8 %153 to i64
  %157 = select i1 %154, i64 %155, i64 %156
  %158 = icmp eq i64 %157, 0
  %159 = select i1 %158, i32 2, i32 3
  br label %160

160:                                              ; preds = %196, %200, %152, %4
  %161 = phi i32 [ 0, %4 ], [ %159, %152 ], [ 0, %200 ], [ 0, %196 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %12) #9
  %162 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 2
  %163 = bitcast %"class.SkSL::String"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 16
  call void @_ZdlPv(i8* %169) #10
  br label %170

170:                                              ; preds = %160, %167
  %171 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 1
  %172 = bitcast %"class.SkSL::String"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #10
  br label %179

179:                                              ; preds = %176, %170
  %180 = bitcast [3 x %"class.SkSL::String"]* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %179
  %185 = getelementptr inbounds [3 x %"class.SkSL::String"], [3 x %"class.SkSL::String"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 16
  call void @_ZdlPv(i8* %186) #10
  br label %187

187:                                              ; preds = %184, %179
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #9
  ret i32 %161

188:                                              ; preds = %148
  %189 = load %class.GrVkGpu*, %class.GrVkGpu** %33, align 16
  %190 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %189, i64 0, i32 1, i32 0
  %191 = load %struct.GrVkInterface*, %struct.GrVkInterface** %190, align 8
  %192 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %191, i64 0, i32 1, i32 58, i32 0
  %193 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %192, align 8
  %194 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %189, i64 0, i32 6
  %195 = load %struct.VkDevice_T*, %struct.VkDevice_T** %194, align 8
  call void %193(%struct.VkDevice_T* %195, %struct.VkShaderModule_T* nonnull %150, %struct.VkAllocationCallbacks* null) #9
  br label %196

196:                                              ; preds = %188, %148
  %197 = getelementptr inbounds %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %2, i64 2
  %198 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %197, align 8
  %199 = icmp eq %struct.VkShaderModule_T* %198, null
  br i1 %199, label %160, label %200

200:                                              ; preds = %196
  %201 = load %class.GrVkGpu*, %class.GrVkGpu** %33, align 16
  %202 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %201, i64 0, i32 1, i32 0
  %203 = load %struct.GrVkInterface*, %struct.GrVkInterface** %202, align 8
  %204 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %203, i64 0, i32 1, i32 58, i32 0
  %205 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %204, align 8
  %206 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %201, i64 0, i32 6
  %207 = load %struct.VkDevice_T*, %struct.VkDevice_T** %206, align 8
  call void %205(%struct.VkDevice_T* %207, %struct.VkShaderModule_T* nonnull %198, %struct.VkAllocationCallbacks* null) #9
  br label %160
}

declare zeroext i1 @_ZN22GrPersistentCacheUtils19UnpackCachedShadersEP12SkReadBufferPN4SkSL6StringEPNS2_7Program6InputsEiPNS_14ShaderMetadataE(%class.SkReadBuffer*, %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"*, i32, %"struct.GrPersistentCacheUtils::ShaderMetadata"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24GrVkPipelineStateBuilder19storeShadersInCacheEPKN4SkSL6StringEPKNS0_7Program6InputsEb(%class.GrVkPipelineStateBuilder*, %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.129, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.sk_sp.129, align 8
  %8 = bitcast %class.sk_sp.129* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %class.sk_sp.129, %class.sk_sp.129* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %9, align 8
  %10 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 6
  %11 = load %class.GrProgramDesc*, %class.GrProgramDesc** %10, align 8
  %12 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %11, i64 0, i32 0, i32 0, i32 0, i64 136
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %11, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 4
  %18 = zext i32 %17 to i64
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.129* nonnull sret %5, i8* %14, i64 %18, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #9
  %19 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %20, align 8
  %21 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 7
  %22 = load %class.GrProgramInfo*, %class.GrProgramInfo** %21, align 16
  %23 = bitcast %class.GrVkPipelineStateBuilder* %0 to %class.GrCaps* (%class.GrVkPipelineStateBuilder*)***
  %24 = load %class.GrCaps* (%class.GrVkPipelineStateBuilder*)**, %class.GrCaps* (%class.GrVkPipelineStateBuilder*)*** %23, align 16
  %25 = getelementptr inbounds %class.GrCaps* (%class.GrVkPipelineStateBuilder*)*, %class.GrCaps* (%class.GrVkPipelineStateBuilder*)** %24, i64 2
  %26 = load %class.GrCaps* (%class.GrVkPipelineStateBuilder*)*, %class.GrCaps* (%class.GrVkPipelineStateBuilder*)** %25, align 8
  %27 = call %class.GrCaps* %26(%class.GrVkPipelineStateBuilder* %0) #9
  call void @_ZN13GrProgramDesc8DescribeERK13GrProgramInfoRK6GrCaps(%class.SkString* nonnull sret %6, %class.GrProgramInfo* dereferenceable(128) %22, %class.GrCaps* dereferenceable(232) %27) #9
  %28 = bitcast %class.sk_sp.129* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %class.sk_sp.129, %class.sk_sp.129* %7, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %29, align 8
  %30 = select i1 %3, i32 1397445452, i32 1397772886
  call void @_ZN22GrPersistentCacheUtils17PackCachedShadersEjPKN4SkSL6StringEPKNS0_7Program6InputsEiPKNS_14ShaderMetadataE(%class.sk_sp.129* nonnull sret %7, i32 %30, %"class.SkSL::String"* %1, %"struct.SkSL::Program::Inputs"* %2, i32 3, %"struct.GrPersistentCacheUtils::ShaderMetadata"* null) #9
  %31 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 1
  %32 = load %class.GrVkGpu*, %class.GrVkGpu** %31, align 16
  %33 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %32, i64 0, i32 0, i32 5
  %34 = load %class.GrDirectContext*, %class.GrDirectContext** %33, align 8
  %35 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %34, i64 0, i32 9
  %36 = load %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::PersistentCache"** %35, align 8
  %37 = load %class.SkData*, %class.SkData** %9, align 8
  %38 = load %class.SkData*, %class.SkData** %29, align 8
  %39 = bitcast %"class.GrContextOptions::PersistentCache"* %36 to void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)***
  %40 = load void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)**, void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)*, void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)** %40, i64 4
  %42 = load void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)*, void (%"class.GrContextOptions::PersistentCache"*, %class.SkData*, %class.SkData*, %class.SkString*)** %41, align 8
  call void %42(%"class.GrContextOptions::PersistentCache"* %36, %class.SkData* dereferenceable(40) %37, %class.SkData* dereferenceable(40) %38, %class.SkString* nonnull dereferenceable(8) %6) #9
  %43 = load %class.SkData*, %class.SkData** %29, align 8
  %44 = icmp eq %class.SkData* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %4
  %46 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %43) #9
  %50 = bitcast %class.SkData* %43 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %50) #9
  br label %51

51:                                               ; preds = %4, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %52 = load %class.SkData*, %class.SkData** %9, align 8
  %53 = icmp eq %class.SkData* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %class.SkData, %class.SkData* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %52) #9
  %59 = bitcast %class.SkData* %52 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %59) #9
  br label %60

60:                                               ; preds = %51, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

declare void @_ZN13GrProgramDesc8DescribeERK13GrProgramInfoRK6GrCaps(%class.SkString* sret, %class.GrProgramInfo* dereferenceable(128), %class.GrCaps* dereferenceable(232)) local_unnamed_addr #2

declare void @_ZN22GrPersistentCacheUtils17PackCachedShadersEjPKN4SkSL6StringEPKNS0_7Program6InputsEiPKNS_14ShaderMetadataE(%class.sk_sp.129* sret, i32, %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"*, i32, %"struct.GrPersistentCacheUtils::ShaderMetadata"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #2

declare %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getUniformDSLayoutEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

declare void @_ZN20GrVkResourceProvider29getSamplerDescriptorSetHandleE16VkDescriptorTypeRK18GrVkUniformHandlerP16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider*, i32, %class.GrVkUniformHandler* dereferenceable(368), %class.GrResourceHandle*) local_unnamed_addr #2

declare %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getSamplerDSLayoutERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider*, %class.GrResourceHandle* dereferenceable(4)) local_unnamed_addr #2

declare %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider16getInputDSLayoutEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #2

declare void @_ZN20GrGLSLProgramBuilder15finalizeShadersEv(%class.GrGLSLProgramBuilder*) local_unnamed_addr #2

declare i32 @_ZNK8GrVkCaps25getFragmentUniformBindingEv(%class.GrVkCaps*) local_unnamed_addr #2

declare i32 @_ZNK8GrVkCaps21getFragmentUniformSetEv(%class.GrVkCaps*) local_unnamed_addr #2

declare i32 @_ZNK18GrVkUniformHandler17getRTHeightOffsetEv(%class.GrVkUniformHandler*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZN22GrPersistentCacheUtils7GetTypeEP12SkReadBuffer(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN13GrShaderUtils11PrettyPrintERKN4SkSL6StringE(%"class.SkSL::String"* sret, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZNK8GrVkCaps25getPushConstantStageFlagsEv(%class.GrVkCaps*) local_unnamed_addr #2

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu*, i32) local_unnamed_addr #2

declare void @_ZN20GrVkResourceProvider12makePipelineERK13GrProgramInfoP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_Tj(%class.sk_sp* sret, %class.GrVkResourceProvider*, %class.GrProgramInfo* dereferenceable(128), %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRenderPass_T*, %struct.VkPipelineLayout_T*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN17GrVkPipelineStateC1EP7GrVkGpu5sk_spIK12GrVkPipelineERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEERK27GrGLSLBuiltinUniformHandlesRK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjbSK_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSL_14default_deleteISN_EEEENSM_I19GrGLSLXferProcessorNSO_ISR_EEEENSL_6vectorINSM_I23GrGLSLFragmentProcessorNSO_ISV_EEEENSL_9allocatorISX_EEEE(%class.GrVkPipelineState*, %class.GrVkGpu*, %class.sk_sp*, %class.GrResourceHandle* dereferenceable(4), %struct.GrGLSLBuiltinUniformHandles* dereferenceable(8), %class.GrTBlockList.544* dereferenceable(128), i32, i1 zeroext, %class.GrTBlockList.544* dereferenceable(128), i64, i64, %"class.std::__1::vector.451"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24GrVkPipelineStateBuilderD0Ev(%class.GrVkPipelineStateBuilder*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24GrVkPipelineStateBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4
  tail call void @_ZN18GrVkUniformHandlerD1Ev(%class.GrVkUniformHandler* %3) #9
  %4 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0
  tail call void @_ZN20GrGLSLVaryingHandlerD2Ev(%class.GrGLSLVaryingHandler* %4) #9
  %5 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 0
  tail call void @_ZN20GrGLSLProgramBuilderD2Ev(%class.GrGLSLProgramBuilder* %5) #9
  %6 = bitcast %class.GrVkPipelineStateBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLUniformHandler* @_ZN24GrVkPipelineStateBuilder14uniformHandlerEv(%class.GrVkPipelineStateBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 0
  ret %class.GrGLSLUniformHandler* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLUniformHandler* @_ZNK24GrVkPipelineStateBuilder14uniformHandlerEv(%class.GrVkPipelineStateBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 4, i32 0
  ret %class.GrGLSLUniformHandler* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLVaryingHandler* @_ZN24GrVkPipelineStateBuilder14varyingHandlerEv(%class.GrVkPipelineStateBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateBuilder, %class.GrVkPipelineStateBuilder* %0, i64 0, i32 3, i32 0
  ret %class.GrGLSLVaryingHandler* %2
}

; Function Attrs: nounwind
declare %struct.__locale_struct* @newlocale(i32, i8*, %struct.__locale_struct*) local_unnamed_addr #5

; Function Attrs: nounwind
declare %struct.__locale_struct* @uselocale(%struct.__locale_struct*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN18GrVkUniformHandlerD1Ev(%class.GrVkUniformHandler*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN20GrGLSLProgramBuilderD2Ev(%class.GrGLSLProgramBuilder*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrGLSLVaryingHandlerD2Ev(%class.GrGLSLVaryingHandler*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20GrGLSLVaryingHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 8
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %3) #9
  %4 = bitcast %class.GrTBlockList* %3 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %4) #9
  %5 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 8, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %6) #9
  %7 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 7
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %7) #9
  %8 = bitcast %class.GrTBlockList* %7 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %8) #9
  %9 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %10 = bitcast i8* %9 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %10) #9
  %11 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 6
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %11) #9
  %12 = bitcast %class.GrTBlockList* %11 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %12) #9
  %13 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 6, i32 0, i32 0, i64 16
  %14 = bitcast i8* %13 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %14) #9
  %15 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 5
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %15) #9
  %16 = bitcast %class.GrTBlockList* %15 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %16) #9
  %17 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 5, i32 0, i32 0, i64 16
  %18 = bitcast i8* %17 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %18) #9
  %19 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 4
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %19) #9
  %20 = bitcast %class.GrTBlockList* %19 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %20) #9
  %21 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 4, i32 0, i32 0, i64 16
  %22 = bitcast i8* %21 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %22) #9
  %23 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %23) #9
  %24 = bitcast %class.GrTBlockList* %23 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %24) #9
  %25 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %26 = bitcast i8* %25 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %26) #9
  %27 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 2
  tail call void @_ZN12GrTBlockListIN20GrGLSLVaryingHandler11VaryingInfoELi1EE5resetEv(%class.GrTBlockList.542* %27) #9
  %28 = bitcast %class.GrTBlockList.542* %27 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %28) #9
  %29 = getelementptr inbounds %class.GrGLSLVaryingHandler, %class.GrGLSLVaryingHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %30) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrGLSLVaryingHandlerD0Ev(%class.GrGLSLVaryingHandler*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrTBlockList* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !3
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !3
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !3
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !3
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !3
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !3
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %59, %79, %1
  %41 = bitcast %class.GrTBlockList* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #9
  ret void

42:                                               ; preds = %75, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %76, %75 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %77, %75 ]
  %45 = phi i32 [ %22, %19 ], [ %78, %75 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %57, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #9
  %53 = getelementptr inbounds i8, i8* %50, i64 24
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #9
  %55 = getelementptr inbounds i8, i8* %50, i64 16
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #9
  %57 = add i32 %48, -40
  %58 = icmp slt i32 %57, 32
  br i1 %58, label %59, label %47

59:                                               ; preds = %47
  %60 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %60, label %40, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %63 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %62, align 8
  %64 = icmp eq %"class.GrBlockAllocator::Block"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %63, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %63
  br label %70

70:                                               ; preds = %65, %61
  %71 = phi %"class.GrBlockAllocator::Block"* [ null, %61 ], [ %69, %65 ]
  %72 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %91, %70
  %76 = phi %"class.GrBlockAllocator::Block"* [ %44, %70 ], [ %80, %91 ]
  %77 = phi %"class.GrBlockAllocator::Block"* [ %71, %70 ], [ %92, %91 ]
  %78 = phi i32 [ %73, %70 ], [ %94, %91 ]
  br label %42

79:                                               ; preds = %70, %91
  %80 = phi %"class.GrBlockAllocator::Block"* [ %92, %91 ], [ %71, %70 ]
  %81 = icmp eq %"class.GrBlockAllocator::Block"* %80, null
  br i1 %81, label %40, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 1
  %84 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %83, align 8
  %85 = icmp eq %"class.GrBlockAllocator::Block"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %84, i64 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %84
  br label %91

91:                                               ; preds = %86, %82
  %92 = phi %"class.GrBlockAllocator::Block"* [ null, %82 ], [ %90, %86 ]
  %93 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %79, label %75
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListIN20GrGLSLVaryingHandler11VaryingInfoELi1EE5resetEv(%class.GrTBlockList.542*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrTBlockList.542* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !6
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !6
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !6
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !6
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !6
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %57, %77, %1
  %41 = bitcast %class.GrTBlockList.542* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #9
  ret void

42:                                               ; preds = %73, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %74, %73 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %75, %73 ]
  %45 = phi i32 [ %22, %19 ], [ %76, %73 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %55, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 16
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #9
  %53 = getelementptr inbounds i8, i8* %50, i64 8
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #9
  %55 = add i32 %48, -32
  %56 = icmp slt i32 %55, 32
  br i1 %56, label %57, label %47

57:                                               ; preds = %47
  %58 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %58, label %40, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %61 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %60, align 8
  %62 = icmp eq %"class.GrBlockAllocator::Block"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %61, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  %67 = select i1 %66, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %61
  br label %68

68:                                               ; preds = %63, %59
  %69 = phi %"class.GrBlockAllocator::Block"* [ null, %59 ], [ %67, %63 ]
  %70 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %89, %68
  %74 = phi %"class.GrBlockAllocator::Block"* [ %44, %68 ], [ %78, %89 ]
  %75 = phi %"class.GrBlockAllocator::Block"* [ %69, %68 ], [ %90, %89 ]
  %76 = phi i32 [ %71, %68 ], [ %92, %89 ]
  br label %42

77:                                               ; preds = %68, %89
  %78 = phi %"class.GrBlockAllocator::Block"* [ %90, %89 ], [ %69, %68 ]
  %79 = icmp eq %"class.GrBlockAllocator::Block"* %78, null
  br i1 %79, label %40, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %78, i64 0, i32 1
  %82 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %81, align 8
  %83 = icmp eq %"class.GrBlockAllocator::Block"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %82, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %86, 0
  %88 = select i1 %87, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %82
  br label %89

89:                                               ; preds = %84, %80
  %90 = phi %"class.GrBlockAllocator::Block"* [ null, %80 ], [ %88, %84 ]
  %91 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %78, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %77, label %73
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @freelocale(%struct.__locale_struct*) local_unnamed_addr #5

declare void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator*, i32, i64, i64) unnamed_addr #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #9
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.129* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN6SkData16DummyReleaseProcEPKvPv(i8*, i8*) #2

declare dereferenceable(240) %struct.GrContextOptions* @_ZNK14GrContext_Base7optionsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK18BlockIndexIteratorIRN20GrGLSLVaryingHandler11VaryingInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!8 = distinct !{!8, !"_ZNK18BlockIndexIteratorIRN20GrGLSLVaryingHandler11VaryingInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
