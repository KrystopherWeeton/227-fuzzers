; ModuleID = '../../content/browser/scheduler/responsiveness/jank_monitor_impl.cc'
source_filename = "../../content/browser/scheduler/responsiveness/jank_monitor_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.content::JankMonitor" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.content::JankMonitor::Observer" = type { i32 (...)** }
%"class.content::responsiveness::JankMonitorImpl" = type { %"class.content::JankMonitor.base", %"class.content::responsiveness::MetricSource::Delegate", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.24", %"struct.std::__1::atomic.41", %"struct.std::__1::atomic.45", %"struct.std::__1::atomic.49", %class.scoped_refptr.27, %"class.base::Lock", %"class.base::ObserverList" }
%"class.content::JankMonitor.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.content::responsiveness::MetricSource::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::responsiveness::MetricSource"* }
%"class.content::responsiveness::MetricSource" = type <{ i32 (...)**, %"class.content::responsiveness::MetricSource::Delegate"*, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.2", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.content::responsiveness::NativeEventObserver"* }
%"class.content::responsiveness::NativeEventObserver" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.content::responsiveness::MessageLoopObserver"* }
%"class.content::responsiveness::MessageLoopObserver" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* }
%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState" = type { %"class.base::Lock", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"class.std::__1::__compressed_pair.18" }
%"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata" = type { %"class.base::TimeTicks", i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::RepeatingTimer"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.27, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.30", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.37", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i8* }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i64 }
%class.scoped_refptr.27 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.28" }>
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.54", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.56" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.28", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback" }
%"struct.base::PendingTask" = type opaque
%"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN7content14responsiveness15JankMonitorImplE = hidden unnamed_addr constant { [21 x i8*], [13 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"class.content::JankMonitor::Observer"*)* @_ZN7content14responsiveness15JankMonitorImpl11AddObserverEPNS_11JankMonitor8ObserverE to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"class.content::JankMonitor::Observer"*)* @_ZN7content14responsiveness15JankMonitorImpl14RemoveObserverEPNS_11JankMonitor8ObserverE to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl5SetUpEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl7DestroyEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImplD2Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImplD0Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl15SetUpOnIOThreadEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl18TearDownOnUIThreadEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl18TearDownOnIOThreadEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1)* @_ZN7content14responsiveness15JankMonitorImpl21WillRunTaskOnUIThreadEPKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*)* @_ZN7content14responsiveness15JankMonitorImpl20DidRunTaskOnUIThreadEPKN4base11PendingTaskE to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1)* @_ZN7content14responsiveness15JankMonitorImpl21WillRunTaskOnIOThreadEPKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*)* @_ZN7content14responsiveness15JankMonitorImpl20DidRunTaskOnIOThreadEPKN4base11PendingTaskE to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)* @_ZN7content14responsiveness15JankMonitorImpl22WillRunEventOnUIThreadEPKv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)* @_ZN7content14responsiveness15JankMonitorImpl21DidRunEventOnUIThreadEPKv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl22DestroyOnMonitorThreadEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl25FinishDestroyMetricSourceEv to i8*), i8* bitcast (%"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl18CreateMetricSourceEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl16OnCheckJankinessEv to i8*)], [13 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZThn16_N7content14responsiveness15JankMonitorImplD1Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZThn16_N7content14responsiveness15JankMonitorImplD0Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZThn16_N7content14responsiveness15JankMonitorImpl15SetUpOnIOThreadEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZThn16_N7content14responsiveness15JankMonitorImpl18TearDownOnUIThreadEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZThn16_N7content14responsiveness15JankMonitorImpl18TearDownOnIOThreadEv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1)* @_ZThn16_N7content14responsiveness15JankMonitorImpl21WillRunTaskOnUIThreadEPKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*)* @_ZThn16_N7content14responsiveness15JankMonitorImpl20DidRunTaskOnUIThreadEPKN4base11PendingTaskE to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1)* @_ZThn16_N7content14responsiveness15JankMonitorImpl21WillRunTaskOnIOThreadEPKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*)* @_ZThn16_N7content14responsiveness15JankMonitorImpl20DidRunTaskOnIOThreadEPKN4base11PendingTaskE to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)* @_ZThn16_N7content14responsiveness15JankMonitorImpl22WillRunEventOnUIThreadEPKv to i8*), i8* bitcast (void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)* @_ZThn16_N7content14responsiveness15JankMonitorImpl21DidRunEventOnUIThreadEPKv to i8*)] }, align 8
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [8 x i8] c"Destroy\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"../../content/browser/scheduler/responsiveness/jank_monitor_impl.cc\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"WillRunTaskOrEvent\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"StartTimerIfNecessary\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"NotifyJankStopIfNecessary\00", align 1
@_ZTVN7content11JankMonitorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.content::JankMonitor"*)* @_ZN7content11JankMonitorD2Ev to i8*), i8* bitcast (void (%"class.content::JankMonitor"*)* @_ZN7content11JankMonitorD0Ev to i8*)] }, align 8
@_ZTVN7content11JankMonitor8ObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::JankMonitor::Observer"*)* @_ZN7content11JankMonitor8ObserverD2Ev to i8*), i8* bitcast (void (%"class.content::JankMonitor::Observer"*)* @_ZN7content11JankMonitor8ObserverD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7content11JankMonitorD1Ev = hidden unnamed_addr alias void (%"class.content::JankMonitor"*), void (%"class.content::JankMonitor"*)* @_ZN7content11JankMonitorD2Ev
@_ZN7content11JankMonitor8ObserverD1Ev = hidden unnamed_addr alias void (%"class.content::JankMonitor::Observer"*), void (%"class.content::JankMonitor::Observer"*)* @_ZN7content11JankMonitor8ObserverD2Ev
@_ZN7content14responsiveness15JankMonitorImplC1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::JankMonitorImpl"*), void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImplC2Ev
@_ZN7content14responsiveness15JankMonitorImplD1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::JankMonitorImpl"*), void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImplD2Ev
@_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState12TaskMetadataD1Ev = hidden unnamed_addr alias void (%"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*), void (%"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*)* @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState12TaskMetadataD2Ev
@_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionStateC1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*), void (%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*)* @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionStateC2Ev
@_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionStateD1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*), void (%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*)* @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionStateD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content11JankMonitorD2Ev(%"class.content::JankMonitor"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7content11JankMonitorD0Ev(%"class.content::JankMonitor"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content11JankMonitor8ObserverD2Ev(%"class.content::JankMonitor::Observer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7content11JankMonitor8ObserverD0Ev(%"class.content::JankMonitor::Observer"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::JankMonitor"* @_ZN7content11JankMonitor6CreateEv() local_unnamed_addr #3 align 2 {
  %1 = tail call i8* @_Znwm(i64 184) #13
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = bitcast i8* %1 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %1, i64 16
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [13 x i8*] }, { [21 x i8*], [13 x i8*] }* @_ZTVN7content14responsiveness15JankMonitorImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [13 x i8*] }, { [21 x i8*], [13 x i8*] }* @_ZTVN7content14responsiveness15JankMonitorImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = tail call i8* @_Znwm(i64 128) #13
  %9 = bitcast i8* %8 to %"class.base::RepeatingTimer"*
  tail call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* nonnull %9) #14
  %10 = getelementptr inbounds i8, i8* %1, i64 48
  %11 = bitcast i8* %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %1, i64 56
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %1, i64 64
  %14 = getelementptr inbounds i8, i8* %1, i64 88
  %15 = bitcast i8* %14 to %"class.base::internal::LockImpl"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #14
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %15) #14
  %16 = getelementptr inbounds i8, i8* %1, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %1, i64 152
  %18 = bitcast i8* %17 to %"class.base::internal::LinkNodeBase"*
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %18, %"class.base::internal::LinkNodeBase"* %18, %"class.base::internal::LinkNodeBase"* %18) #14
  %19 = getelementptr inbounds i8, i8* %1, i64 168
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %1, i64 176
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = atomicrmw add i32* %3, i32 1 monotonic
  %24 = bitcast i8* %1 to %"class.content::JankMonitor"*
  ret %"class.content::JankMonitor"* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImplC2Ev(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [13 x i8*] }, { [21 x i8*], [13 x i8*] }* @_ZTVN7content14responsiveness15JankMonitorImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [13 x i8*] }, { [21 x i8*], [13 x i8*] }* @_ZTVN7content14responsiveness15JankMonitorImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  %7 = tail call i8* @_Znwm(i64 128) #13
  %8 = bitcast i8* %7 to %"class.base::RepeatingTimer"*
  tail call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* nonnull %8) #14
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::RepeatingTimer"** %9 to i8**
  store i8* %7, i8** %10, align 8
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 10, i32 0
  %14 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %13) #14
  %15 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11
  %16 = bitcast %"class.base::ObserverList"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #14
  %17 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17) #14
  %18 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 2
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 3
  store i32 0, i32* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImplD2Ev(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [13 x i8*] }, { [21 x i8*], [13 x i8*] }* @_ZTVN7content14responsiveness15JankMonitorImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.content::responsiveness::MetricSource::Delegate", %"class.content::responsiveness::MetricSource::Delegate"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [13 x i8*] }, { [21 x i8*], [13 x i8*] }* @_ZTVN7content14responsiveness15JankMonitorImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast %"class.base::internal::LinkNodeBase"** %5 to %"class.base::LinkNode"**
  %7 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 1, i32 0
  %8 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %6, align 8
  %9 = icmp eq %"class.base::LinkNode"* %8, %7
  br i1 %9, label %22, label %10

10:                                               ; preds = %1, %19
  %11 = phi %"class.base::LinkNode"* [ %20, %19 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %11, i64 1
  %13 = bitcast %"class.base::LinkNode"* %12 to %"class.base::ObserverList"**
  %14 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %13, align 8
  %15 = icmp eq %"class.base::ObserverList"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %13, align 8
  %17 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %17) #14
  %18 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %6, align 8
  br label %19

19:                                               ; preds = %16, %10
  %20 = phi %"class.base::LinkNode"* [ %11, %10 ], [ %18, %16 ]
  %21 = icmp eq %"class.base::LinkNode"* %20, %7
  br i1 %21, label %22, label %10

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  %25 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %26 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %25, align 8
  %27 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %26
  br i1 %27, label %36, label %28

28:                                               ; preds = %22, %33
  %29 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %34, %33 ], [ %24, %22 ]
  %30 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %29, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %29, i64 1
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %34, %26
  br i1 %35, label %100, label %28

36:                                               ; preds = %28, %22
  %37 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %24, %22 ], [ %29, %28 ]
  %38 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %37 to i64
  %39 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %37, %26
  br i1 %39, label %100, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %37, i64 1
  %42 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %41, %26
  br i1 %42, label %95, label %43

43:                                               ; preds = %40
  %44 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %26, i64 -2, i32 0
  %45 = ptrtoint i8** %44 to i64
  %46 = sub i64 %45, %38
  %47 = lshr i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %69, label %51

51:                                               ; preds = %43, %64
  %52 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %66, %64 ], [ %41, %43 ]
  %53 = phi i64 [ %65, %64 ], [ %38, %43 ]
  %54 = phi i64 [ %67, %64 ], [ %49, %43 ]
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %52, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %51
  %59 = ptrtoint i8* %56 to i64
  %60 = inttoptr i64 %53 to %"class.base::internal::UncheckedObserverAdapter"*
  %61 = inttoptr i64 %53 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %60, i64 1
  %63 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %62 to i64
  br label %64

64:                                               ; preds = %58, %51
  %65 = phi i64 [ %53, %51 ], [ %63, %58 ]
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %52, i64 1
  %67 = add i64 %54, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %51, !llvm.loop !2

69:                                               ; preds = %64, %43
  %70 = phi i64 [ undef, %43 ], [ %65, %64 ]
  %71 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %41, %43 ], [ %66, %64 ]
  %72 = phi i64 [ %38, %43 ], [ %65, %64 ]
  %73 = icmp ult i64 %46, 24
  br i1 %73, label %91, label %74

74:                                               ; preds = %69, %199
  %75 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %201, %199 ], [ %71, %69 ]
  %76 = phi i64 [ %200, %199 ], [ %72, %69 ]
  %77 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %74
  %81 = ptrtoint i8* %78 to i64
  %82 = inttoptr i64 %76 to %"class.base::internal::UncheckedObserverAdapter"*
  %83 = inttoptr i64 %76 to i64*
  store i64 %81, i64* %83, align 8
  %84 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %82, i64 1
  %85 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %84 to i64
  br label %86

86:                                               ; preds = %80, %74
  %87 = phi i64 [ %76, %74 ], [ %85, %80 ]
  %88 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 1, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %177, label %171

91:                                               ; preds = %199, %69
  %92 = phi i64 [ %70, %69 ], [ %200, %199 ]
  %93 = inttoptr i64 %92 to %"class.base::internal::UncheckedObserverAdapter"*
  %94 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %25, align 8
  br label %95

95:                                               ; preds = %91, %40
  %96 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %26, %40 ], [ %94, %91 ]
  %97 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %37, %40 ], [ %93, %91 ]
  %98 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %97, %96
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  store %"class.base::internal::UncheckedObserverAdapter"* %97, %"class.base::internal::UncheckedObserverAdapter"** %25, align 8
  br label %100

100:                                              ; preds = %33, %99, %95, %36
  %101 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  %102 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %101, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %100
  %104 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %101 to i64
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  store i64 %104, i64* %105, align 8
  %106 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %101 to i8*
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %100, %103
  %108 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %108) #14
  %109 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 9, i32 0
  %110 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %109, align 8
  %111 = icmp eq %"class.base::SequencedTaskRunner"* %110, null
  br i1 %111, label %120, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %110, i64 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.base::RefCountedThreadSafe.28", %"class.base::RefCountedThreadSafe.28"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw sub i32* %114, i32 1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.base::RefCountedThreadSafe.28", %"class.base::RefCountedThreadSafe.28"* %113, i64 -2
  %119 = bitcast %"class.base::RefCountedThreadSafe.28"* %118 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %119) #14
  br label %120

120:                                              ; preds = %107, %112, %117
  %121 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %122 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %121, align 8
  store %"class.base::RepeatingTimer"* null, %"class.base::RepeatingTimer"** %121, align 8
  %123 = icmp eq %"class.base::RepeatingTimer"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.base::RepeatingTimer"* %122 to void (%"class.base::RepeatingTimer"*)***
  %126 = load void (%"class.base::RepeatingTimer"*)**, void (%"class.base::RepeatingTimer"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %126, i64 1
  %128 = load void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %127, align 8
  tail call void %128(%"class.base::RepeatingTimer"* nonnull %122) #14
  br label %129

129:                                              ; preds = %120, %124
  %130 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %130, align 8
  store %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* null, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %130, align 8
  %132 = icmp eq %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %131, null
  br i1 %132, label %145, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %131, i64 0, i32 1, i32 0, i32 0
  %135 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %134, align 8
  %136 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %135 to i64
  %139 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %131, i64 0, i32 1, i32 0, i32 1
  %140 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %135 to i8*
  tail call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %137, %133
  %143 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %131, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %143) #14
  %144 = bitcast %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %131 to i8*
  tail call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %129, %142
  %146 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %146, align 8
  store %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* null, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %146, align 8
  %148 = icmp eq %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %147, null
  br i1 %148, label %161, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %147, i64 0, i32 1, i32 0, i32 0
  %151 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %150, align 8
  %152 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %151 to i64
  %155 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %147, i64 0, i32 1, i32 0, i32 1
  %156 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %151 to i8*
  tail call void @_ZdlPv(i8* %157) #13
  br label %158

158:                                              ; preds = %153, %149
  %159 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %147, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %159) #14
  %160 = bitcast %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %147 to i8*
  tail call void @_ZdlPv(i8* %160) #13
  br label %161

161:                                              ; preds = %145, %158
  %162 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %163 = load %"class.content::responsiveness::MetricSource"*, %"class.content::responsiveness::MetricSource"** %162, align 8
  store %"class.content::responsiveness::MetricSource"* null, %"class.content::responsiveness::MetricSource"** %162, align 8
  %164 = icmp eq %"class.content::responsiveness::MetricSource"* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = bitcast %"class.content::responsiveness::MetricSource"* %163 to void (%"class.content::responsiveness::MetricSource"*)***
  %167 = load void (%"class.content::responsiveness::MetricSource"*)**, void (%"class.content::responsiveness::MetricSource"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.content::responsiveness::MetricSource"*)*, void (%"class.content::responsiveness::MetricSource"*)** %167, i64 1
  %169 = load void (%"class.content::responsiveness::MetricSource"*)*, void (%"class.content::responsiveness::MetricSource"*)** %168, align 8
  tail call void %169(%"class.content::responsiveness::MetricSource"* nonnull %163) #14
  br label %170

170:                                              ; preds = %161, %165
  tail call void @_ZN7content14responsiveness12MetricSource8DelegateD2Ev(%"class.content::responsiveness::MetricSource::Delegate"* %3) #14
  ret void

171:                                              ; preds = %86
  %172 = ptrtoint i8* %89 to i64
  %173 = inttoptr i64 %87 to %"class.base::internal::UncheckedObserverAdapter"*
  %174 = inttoptr i64 %87 to i64*
  store i64 %172, i64* %174, align 8
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1
  %176 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %175 to i64
  br label %177

177:                                              ; preds = %171, %86
  %178 = phi i64 [ %87, %86 ], [ %176, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 2, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %177
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %177
  %189 = phi i64 [ %178, %177 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 3, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %188
  %194 = ptrtoint i8* %191 to i64
  %195 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = inttoptr i64 %189 to i64*
  store i64 %194, i64* %196, align 8
  %197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 1
  %198 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %197 to i64
  br label %199

199:                                              ; preds = %193, %188
  %200 = phi i64 [ %189, %188 ], [ %198, %193 ]
  %201 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 4
  %202 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %201, %26
  br i1 %202, label %91, label %74
}

; Function Attrs: nounwind
declare void @_ZN7content14responsiveness12MetricSource8DelegateD2Ev(%"class.content::responsiveness::MetricSource::Delegate"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImplD1Ev(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %3 = bitcast i64* %2 to %"class.content::responsiveness::JankMonitorImpl"*
  tail call void @_ZN7content14responsiveness15JankMonitorImplD2Ev(%"class.content::responsiveness::JankMonitorImpl"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImplD0Ev(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  tail call void @_ZN7content14responsiveness15JankMonitorImplD2Ev(%"class.content::responsiveness::JankMonitorImpl"* %0) #14
  %2 = bitcast %"class.content::responsiveness::JankMonitorImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImplD0Ev(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %3 = bitcast i64* %2 to %"class.content::responsiveness::JankMonitorImpl"*
  tail call void @_ZN7content14responsiveness15JankMonitorImplD2Ev(%"class.content::responsiveness::JankMonitorImpl"* %3) #14
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl11AddObserverEPNS_11JankMonitor8ObserverE(%"class.content::responsiveness::JankMonitorImpl"*, %"class.content::JankMonitor::Observer"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #14
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11
  %11 = icmp eq %"class.content::JankMonitor::Observer"* %1, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8
  br label %33

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %10, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %16, align 8
  %18 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %19 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %18, align 8
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %17, %19
  %21 = bitcast %"class.content::JankMonitor::Observer"* %1 to i8*
  br i1 %20, label %30, label %22

22:                                               ; preds = %15, %27
  %23 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %28, %27 ], [ %17, %15 ]
  %24 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, %21
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %23, i64 1
  %29 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %28, %19
  br i1 %29, label %33, label %22

30:                                               ; preds = %22, %15
  %31 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %17, %15 ], [ %23, %22 ]
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %31, %19
  br i1 %32, label %33, label %106

33:                                               ; preds = %27, %12, %30
  %34 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %14, %12 ], [ %19, %30 ], [ %19, %27 ]
  %35 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  %38 = ptrtoint %"class.content::JankMonitor::Observer"* %1 to i64
  %39 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %40, align 8
  %42 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %34, %41
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %41 to i64
  br i1 %42, label %44, label %49

44:                                               ; preds = %33
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %34 to i64*
  store i64 %38, i64* %45, align 8
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %34, i64 1
  %47 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %46 to i64
  %48 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %39 to i64*
  store i64 %47, i64* %48, align 8
  br label %106

49:                                               ; preds = %33
  %50 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  %51 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %39 to i64*
  %52 = bitcast %"class.base::ObserverList"* %10 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %50, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = bitcast %"class.base::ObserverList"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #12
  unreachable

60:                                               ; preds = %49
  %61 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %40 to i64*
  %62 = sub i64 %43, %53
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %56
  %68 = select i1 %67, i64 %56, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @abort() #12
  unreachable

73:                                               ; preds = %70, %60
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %60 ]
  %75 = shl i64 %74, 3
  %76 = tail call i8* @_Znwm(i64 %75) #13
  %77 = bitcast i8* %76 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %77, %73 ], [ null, %65 ]
  %81 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %80, i64 %55
  %82 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %80, i64 %79
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %82 to i64
  %84 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i64*
  store i64 %38, i64* %84, align 8
  %85 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %81, i64 1
  %86 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %85 to i64
  %87 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %10, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %87, align 8
  %89 = load i64, i64* %51, align 8
  %90 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %81, i64 %93
  %95 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %78
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %94 to i8*
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #14
  %100 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %87, align 8
  br label %101

101:                                              ; preds = %97, %78
  %102 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %88, %78 ], [ %100, %97 ]
  store i64 %95, i64* %52, align 8
  store i64 %86, i64* %51, align 8
  store i64 %83, i64* %61, align 8
  %103 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %102 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %104, %101, %44, %30
  %107 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl14RemoveObserverEPNS_11JankMonitor8ObserverE(%"class.content::responsiveness::JankMonitorImpl"*, %"class.content::JankMonitor::Observer"* readnone) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #14
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = bitcast %"class.content::JankMonitor::Observer"* %1 to i8*
  %16 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %13 to i64
  br i1 %14, label %25, label %17

17:                                               ; preds = %9, %22
  %18 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %23, %22 ], [ %11, %9 ]
  %19 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %18, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %15
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %18, i64 1
  %24 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %23, %13
  br i1 %24, label %54, label %17

25:                                               ; preds = %17, %9
  %26 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %11, %9 ], [ %18, %17 ]
  %27 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %26, %13
  br i1 %27, label %54, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %26, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  br label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::LinkNodeBase"** %37 to %"class.base::LinkNode"**
  %39 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %38, align 8
  %40 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 1, i32 0
  %41 = icmp eq %"class.base::LinkNode"* %39, %40
  br i1 %41, label %42, label %53

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %26, i64 1
  %44 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %43 to i64
  %45 = sub i64 %16, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %26 to i8*
  %50 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %43 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 %45, i1 false) #14
  br label %51

51:                                               ; preds = %48, %42
  %52 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %26, i64 %46
  store %"class.base::internal::UncheckedObserverAdapter"* %52, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  br label %54

53:                                               ; preds = %36
  store i8* null, i8** %29, align 8
  br label %54

54:                                               ; preds = %22, %25, %51, %53
  %55 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl5SetUpEv(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #13
  %3 = bitcast i8* %2 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %3) #14
  %4 = getelementptr inbounds i8, i8* %2, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #14
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %7, align 8
  %9 = bitcast %"class.std::__1::unique_ptr.15"* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = icmp eq %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i64 0, i32 1, i32 0, i32 0
  %13 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12, align 8
  %14 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13 to i64
  %17 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #14
  %22 = bitcast %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %20, %1
  %24 = tail call i8* @_Znwm(i64 64) #13
  %25 = bitcast i8* %24 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %25) #14
  %26 = getelementptr inbounds i8, i8* %24, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #14
  %27 = ptrtoint i8* %24 to i64
  %28 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 4
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.15"* %28 to i64*
  store i64 %27, i64* %31, align 8
  %32 = icmp eq %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %30, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %30, i64 0, i32 1, i32 0, i32 0
  %35 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %34, align 8
  %36 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %35 to i64
  %39 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %30, i64 0, i32 1, i32 0, i32 1
  %40 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %35 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %37, %33
  %43 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %30, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %43) #14
  %44 = bitcast %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %30 to i8*
  tail call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %42, %23
  %46 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #14
  %47 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 9
  %48 = ptrtoint %"class.base::SequencedTaskRunner"* %46 to i64
  %49 = bitcast %class.scoped_refptr.27* %47 to i64*
  %50 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %47, i64 0, i32 0
  %51 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.base::SequencedTaskRunner"* %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %51, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe.28", %"class.base::RefCountedThreadSafe.28"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.28", %"class.base::RefCountedThreadSafe.28"* %54, i64 -2
  %60 = bitcast %"class.base::RefCountedThreadSafe.28"* %59 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %60) #14
  br label %61

61:                                               ; preds = %45, %53, %58
  %62 = bitcast %"class.content::responsiveness::JankMonitorImpl"* %0 to %"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)***
  %63 = load %"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)**, %"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)*, %"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)** %63, i64 17
  %65 = load %"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)*, %"class.content::responsiveness::MetricSource"* (%"class.content::responsiveness::JankMonitorImpl"*)** %64, align 8
  %66 = tail call %"class.content::responsiveness::MetricSource"* %65(%"class.content::responsiveness::JankMonitorImpl"* %0) #14
  %67 = ptrtoint %"class.content::responsiveness::MetricSource"* %66 to i64
  %68 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.content::responsiveness::MetricSource"*, %"class.content::responsiveness::MetricSource"** %69, align 8
  %71 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  store i64 %67, i64* %71, align 8
  %72 = icmp eq %"class.content::responsiveness::MetricSource"* %70, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %61
  %74 = bitcast %"class.content::responsiveness::MetricSource"* %70 to void (%"class.content::responsiveness::MetricSource"*)***
  %75 = load void (%"class.content::responsiveness::MetricSource"*)**, void (%"class.content::responsiveness::MetricSource"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.content::responsiveness::MetricSource"*)*, void (%"class.content::responsiveness::MetricSource"*)** %75, i64 1
  %77 = load void (%"class.content::responsiveness::MetricSource"*)*, void (%"class.content::responsiveness::MetricSource"*)** %76, align 8
  tail call void %77(%"class.content::responsiveness::MetricSource"* nonnull %70) #14
  %78 = load %"class.content::responsiveness::MetricSource"*, %"class.content::responsiveness::MetricSource"** %69, align 8
  br label %79

79:                                               ; preds = %73, %61
  %80 = phi %"class.content::responsiveness::MetricSource"* [ %78, %73 ], [ %66, %61 ]
  tail call void @_ZN7content14responsiveness12MetricSource5SetUpEv(%"class.content::responsiveness::MetricSource"* %80) #14
  ret void
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #7

declare void @_ZN7content14responsiveness12MetricSource5SetUpEv(%"class.content::responsiveness::MetricSource"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl7DestroyEv(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::ScopedClosureRunner", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::ScopedClosureRunner", align 8
  %7 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 9, i32 0
  %8 = bitcast %"class.base::SequencedTaskRunner"** %7 to %"class.base::TaskRunner"**
  %9 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %8, align 8
  %10 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 89) #14
  %11 = icmp eq %"class.content::responsiveness::JankMonitorImpl"* %0, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  br label %15

15:                                               ; preds = %12, %1
  %16 = ptrtoint %"class.content::responsiveness::JankMonitorImpl"* %0 to i64
  %17 = call i8* @_Znwm(i64 56) #13, !noalias !5
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !5
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 121, i64 0>, <2 x i64>* %20, align 8, !noalias !5
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %16, i64* %22, align 8, !noalias !5
  %23 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !5
  %24 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %9, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #14
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #14
  %26 = bitcast %"class.base::ScopedClosureRunner"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.base::ScopedClosureRunner", %"class.base::ScopedClosureRunner"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %27, align 8
  br i1 %11, label %31, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %28, %15
  %32 = call i8* @_Znwm(i64 56) #13, !noalias !10
  %33 = bitcast i8* %32 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %33, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !10
  %34 = getelementptr inbounds i8, i8* %32, i64 32
  %35 = bitcast i8* %34 to <2 x i64>*
  store <2 x i64> <i64 129, i64 0>, <2 x i64>* %35, align 8, !noalias !10
  %36 = getelementptr inbounds i8, i8* %32, i64 48
  %37 = bitcast i8* %36 to i64*
  store i64 %16, i64* %37, align 8, !noalias !10
  %38 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %32, i8** %38, align 8, !alias.scope !10
  call void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #14
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #14
  %40 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"class.content::responsiveness::MetricSource"*, %"class.content::responsiveness::MetricSource"** %40, align 8
  call void @_ZN4base19ScopedClosureRunnerC1EOS0_(%"class.base::ScopedClosureRunner"* nonnull %6, %"class.base::ScopedClosureRunner"* nonnull dereferenceable(8) %4) #14
  call void @_ZN7content14responsiveness12MetricSource7DestroyEN4base19ScopedClosureRunnerE(%"class.content::responsiveness::MetricSource"* %41, %"class.base::ScopedClosureRunner"* nonnull %6) #14
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %6) #14
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #7

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #7

declare void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"*, %"class.base::OnceCallback"*) unnamed_addr #7

declare void @_ZN7content14responsiveness12MetricSource7DestroyEN4base19ScopedClosureRunnerE(%"class.content::responsiveness::MetricSource"*, %"class.base::ScopedClosureRunner"*) local_unnamed_addr #7

declare void @_ZN4base19ScopedClosureRunnerC1EOS0_(%"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl25FinishDestroyMetricSourceEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.content::responsiveness::MetricSource"*, %"class.content::responsiveness::MetricSource"** %2, align 8
  store %"class.content::responsiveness::MetricSource"* null, %"class.content::responsiveness::MetricSource"** %2, align 8
  %4 = icmp eq %"class.content::responsiveness::MetricSource"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.content::responsiveness::MetricSource"* %3 to void (%"class.content::responsiveness::MetricSource"*)***
  %7 = load void (%"class.content::responsiveness::MetricSource"*)**, void (%"class.content::responsiveness::MetricSource"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.content::responsiveness::MetricSource"*)*, void (%"class.content::responsiveness::MetricSource"*)** %7, i64 1
  %9 = load void (%"class.content::responsiveness::MetricSource"*)*, void (%"class.content::responsiveness::MetricSource"*)** %8, align 8
  tail call void %9(%"class.content::responsiveness::MetricSource"* nonnull %3) #14
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl15SetUpOnIOThreadEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl15SetUpOnIOThreadEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl18TearDownOnUIThreadEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl18TearDownOnUIThreadEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl18TearDownOnIOThreadEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl18TearDownOnIOThreadEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl21WillRunTaskOnUIThreadEPKN4base11PendingTaskEb(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %4, align 8
  %6 = bitcast %"struct.base::PendingTask"* %1 to i8*
  tail call void @_ZN7content14responsiveness15JankMonitorImpl18WillRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %5, i8* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl18WillRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, i8*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  tail call void @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState18WillRunTaskOrEventEPKv(%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %1, i8* %2)
  %6 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i8, i8* %6 seq_cst, align 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %30

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 9, i32 0
  %12 = bitcast %"class.base::SequencedTaskRunner"** %11 to %"class.base::TaskRunner"**
  %13 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %12, align 8
  %14 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 156) #14
  %15 = icmp eq %"class.content::responsiveness::JankMonitorImpl"* %0, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  br label %19

19:                                               ; preds = %16, %10
  %20 = ptrtoint %"class.content::responsiveness::JankMonitorImpl"* %0 to i64
  %21 = call i8* @_Znwm(i64 56) #13, !noalias !15
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !15
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::responsiveness::JankMonitorImpl"*)* @_ZN7content14responsiveness15JankMonitorImpl21StartTimerIfNecessaryEv to i64), i64 0>, <2 x i64>* %24, align 8, !noalias !15
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to i64*
  store i64 %20, i64* %26, align 8, !noalias !15
  %27 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %21, i8** %27, align 8, !alias.scope !15
  %28 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %13, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #14
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #14
  br label %30

30:                                               ; preds = %3, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl21WillRunTaskOnUIThreadEPKN4base11PendingTaskEb(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %5 = bitcast i64* %4 to %"class.content::responsiveness::JankMonitorImpl"*
  %6 = getelementptr inbounds i64, i64* %4, i64 4
  %7 = bitcast i64* %6 to %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"**
  %8 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %7, align 8
  %9 = bitcast %"struct.base::PendingTask"* %1 to i8*
  tail call void @_ZN7content14responsiveness15JankMonitorImpl18WillRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"* %5, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i8* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20DidRunTaskOnUIThreadEPKN4base11PendingTaskE(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %3, align 8
  %5 = bitcast %"struct.base::PendingTask"* %1 to i8*
  %6 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #14
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #14
  br label %11

11:                                               ; preds = %9, %2
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 1, i32 0, i32 0
  %13 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12, align 8
  %14 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 1, i32 0, i32 1
  %15 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14, align 8
  %16 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, %15
  %17 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13 to i64
  br i1 %16, label %22, label %18, !prof !20

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %15, i64 -1, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %5
  br i1 %21, label %24, label %22

22:                                               ; preds = %18, %11
  %23 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14 to i64*
  store i64 %17, i64* %23, align 8
  br label %26

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %15, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %25, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, i8* %5) #14
  %28 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %29 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %28, i64* %29 seq_cst, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl17DidRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, i8*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !4

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #14
  br label %9

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %10, align 8
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12, align 8
  %14 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %11, %13
  %15 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %11 to i64
  br i1 %14, label %20, label %16, !prof !20

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, i64 -1, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %2
  br i1 %19, label %22, label %20

20:                                               ; preds = %16, %9
  %21 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12 to i64*
  store i64 %15, i64* %21, align 8
  br label %24

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %23, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, i8* %2)
  %26 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %27 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %26, i64* %27 seq_cst, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl20DidRunTaskOnUIThreadEPKN4base11PendingTaskE(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %4 = bitcast i64* %3 to %"class.content::responsiveness::JankMonitorImpl"*
  %5 = getelementptr inbounds i64, i64* %3, i64 4
  %6 = bitcast i64* %5 to %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"**
  %7 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %6, align 8
  %8 = bitcast %"struct.base::PendingTask"* %1 to i8*
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !4

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #14
  br label %14

14:                                               ; preds = %12, %2
  %15 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 1, i32 0, i32 0
  %16 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %15, align 8
  %17 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 1, i32 0, i32 1
  %18 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %17, align 8
  %19 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %16, %18
  %20 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %16 to i64
  br i1 %19, label %25, label %21, !prof !20

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %18, i64 -1, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, %8
  br i1 %24, label %27, label %25

25:                                               ; preds = %21, %14
  %26 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %17 to i64*
  store i64 %20, i64* %26, align 8
  br label %29

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %18, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %28, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %17, align 8
  br label %29

29:                                               ; preds = %25, %27
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"* %4, i8* %8) #14
  %31 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %32 = getelementptr inbounds i64, i64* %3, i64 9
  store atomic i64 %31, i64* %32 seq_cst, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl21WillRunTaskOnIOThreadEPKN4base11PendingTaskEb(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %4, align 8
  %6 = bitcast %"struct.base::PendingTask"* %1 to i8*
  tail call void @_ZN7content14responsiveness15JankMonitorImpl18WillRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %5, i8* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl21WillRunTaskOnIOThreadEPKN4base11PendingTaskEb(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %5 = bitcast i64* %4 to %"class.content::responsiveness::JankMonitorImpl"*
  %6 = getelementptr inbounds i64, i64* %4, i64 5
  %7 = bitcast i64* %6 to %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"**
  %8 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %7, align 8
  %9 = bitcast %"struct.base::PendingTask"* %1 to i8*
  tail call void @_ZN7content14responsiveness15JankMonitorImpl18WillRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"* %5, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i8* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20DidRunTaskOnIOThreadEPKN4base11PendingTaskE(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %3, align 8
  %5 = bitcast %"struct.base::PendingTask"* %1 to i8*
  %6 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #14
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #14
  br label %11

11:                                               ; preds = %9, %2
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 1, i32 0, i32 0
  %13 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12, align 8
  %14 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 1, i32 0, i32 1
  %15 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14, align 8
  %16 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, %15
  %17 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13 to i64
  br i1 %16, label %22, label %18, !prof !20

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %15, i64 -1, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %5
  br i1 %21, label %24, label %22

22:                                               ; preds = %18, %11
  %23 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14 to i64*
  store i64 %17, i64* %23, align 8
  br label %26

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %15, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %25, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, i8* %5) #14
  %28 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %29 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %28, i64* %29 seq_cst, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl20DidRunTaskOnIOThreadEPKN4base11PendingTaskE(%"class.content::responsiveness::JankMonitorImpl"*, %"struct.base::PendingTask"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %4 = bitcast i64* %3 to %"class.content::responsiveness::JankMonitorImpl"*
  %5 = getelementptr inbounds i64, i64* %3, i64 5
  %6 = bitcast i64* %5 to %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"**
  %7 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %6, align 8
  %8 = bitcast %"struct.base::PendingTask"* %1 to i8*
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !4

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #14
  br label %14

14:                                               ; preds = %12, %2
  %15 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 1, i32 0, i32 0
  %16 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %15, align 8
  %17 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 1, i32 0, i32 1
  %18 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %17, align 8
  %19 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %16, %18
  %20 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %16 to i64
  br i1 %19, label %25, label %21, !prof !20

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %18, i64 -1, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, %8
  br i1 %24, label %27, label %25

25:                                               ; preds = %21, %14
  %26 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %17 to i64*
  store i64 %20, i64* %26, align 8
  br label %29

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %18, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %28, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %17, align 8
  br label %29

29:                                               ; preds = %25, %27
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"* %4, i8* %8) #14
  %31 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %32 = getelementptr inbounds i64, i64* %3, i64 9
  store atomic i64 %31, i64* %32 seq_cst, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl22WillRunEventOnUIThreadEPKv(%"class.content::responsiveness::JankMonitorImpl"*, i8*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %3, align 8
  tail call void @_ZN7content14responsiveness15JankMonitorImpl18WillRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i8* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl22WillRunEventOnUIThreadEPKv(%"class.content::responsiveness::JankMonitorImpl"*, i8*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %4 = bitcast i64* %3 to %"class.content::responsiveness::JankMonitorImpl"*
  %5 = getelementptr inbounds i64, i64* %3, i64 4
  %6 = bitcast i64* %5 to %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"**
  %7 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %6, align 8
  tail call void @_ZN7content14responsiveness15JankMonitorImpl18WillRunTaskOrEventEPNS1_20ThreadExecutionStateEPKv(%"class.content::responsiveness::JankMonitorImpl"* %4, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i8* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl21DidRunEventOnUIThreadEPKv(%"class.content::responsiveness::JankMonitorImpl"*, i8*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %3, align 8
  %5 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !4

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #14
  br label %10

10:                                               ; preds = %8, %2
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %11, align 8
  %13 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %4, i64 0, i32 1, i32 0, i32 1
  %14 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %13, align 8
  %15 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %12, %14
  %16 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %12 to i64
  br i1 %15, label %21, label %17, !prof !20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %14, i64 -1, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, %1
  br i1 %20, label %23, label %21

21:                                               ; preds = %17, %10
  %22 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %13 to i64*
  store i64 %16, i64* %22, align 8
  br label %25

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %14, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %24, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %13, align 8
  br label %25

25:                                               ; preds = %21, %23
  %26 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, i8* %1) #14
  %27 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %28 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %27, i64* %28 seq_cst, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content14responsiveness15JankMonitorImpl21DidRunEventOnUIThreadEPKv(%"class.content::responsiveness::JankMonitorImpl"*, i8*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 -1, i32 11, i32 2
  %4 = bitcast i64* %3 to %"class.content::responsiveness::JankMonitorImpl"*
  %5 = getelementptr inbounds i64, i64* %3, i64 4
  %6 = bitcast i64* %5 to %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"**
  %7 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %6, align 8
  %8 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !4

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #14
  br label %13

13:                                               ; preds = %11, %2
  %14 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 1, i32 0, i32 0
  %15 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14, align 8
  %16 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %7, i64 0, i32 1, i32 0, i32 1
  %17 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %16, align 8
  %18 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %15, %17
  %19 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %15 to i64
  br i1 %18, label %24, label %20, !prof !20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %17, i64 -1, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, %1
  br i1 %23, label %26, label %24

24:                                               ; preds = %20, %13
  %25 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %16 to i64*
  store i64 %19, i64* %25, align 8
  br label %28

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %17, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %27, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %16, align 8
  br label %28

28:                                               ; preds = %24, %26
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"* %4, i8* %1) #14
  %30 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %31 = getelementptr inbounds i64, i64* %3, i64 9
  store atomic i64 %30, i64* %31 seq_cst, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState18WillRunTaskOrEventEPKv(%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, i8*) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %5 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !4

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #14
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12, align 8
  %14 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14, align 8
  %16 = icmp ult %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, %15
  %17 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %15 to i64
  br i1 %16, label %18, label %25

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, i64 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, i64 0, i32 1
  %21 = bitcast i8** %20 to i64*
  store i64 %3, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13, i64 1
  %23 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %22 to i64
  %24 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12 to i64*
  store i64 %23, i64* %24, align 8
  br label %123

25:                                               ; preds = %10
  %26 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %13 to i64
  %27 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12 to i64*
  %28 = bitcast %"class.std::__1::vector"* %11 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 4
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 1152921504606846975
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #12
  unreachable

36:                                               ; preds = %25
  %37 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %14 to i64*
  %38 = sub i64 %17, %29
  %39 = ashr exact i64 %38, 4
  %40 = icmp ult i64 %39, 576460752303423487
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 3
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 1152921504606846975
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #12
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 1152921504606846975, %36 ]
  %51 = shl i64 %50, 4
  %52 = tail call i8* @_Znwm(i64 %51) #13
  %53 = bitcast i8* %52 to %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %56, i64 %31
  %58 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %56, i64 %55
  %59 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %58 to i64
  %60 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %57, i64 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %56, i64 %31, i32 1
  %62 = bitcast i8** %61 to i64*
  store i64 %3, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %57, i64 1
  %64 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %66 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %65, align 8
  %67 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %66 to i64
  %68 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %12, align 8
  %69 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %68, %66
  br i1 %69, label %116, label %70

70:                                               ; preds = %54
  %71 = getelementptr %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %68, i64 -1, i32 0, i32 0, i32 0
  %72 = ptrtoint i64* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 4
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 3
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %70, %78
  %79 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %82, %78 ], [ %57, %70 ]
  %80 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %83, %78 ], [ %68, %70 ]
  %81 = phi i64 [ %86, %78 ], [ %76, %70 ]
  %82 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %79, i64 -1
  %83 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %80, i64 -1
  %84 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %82 to i8*
  %85 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 16, i1 false) #14
  %86 = add i64 %81, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !21

88:                                               ; preds = %78, %70
  %89 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ undef, %70 ], [ %82, %78 ]
  %90 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %57, %70 ], [ %82, %78 ]
  %91 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %68, %70 ], [ %83, %78 ]
  %92 = icmp ult i64 %73, 48
  br i1 %92, label %113, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %108, %93 ], [ %90, %88 ]
  %95 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %109, %93 ], [ %91, %88 ]
  %96 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %94, i64 -1
  %97 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %95, i64 -1
  %98 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %96 to i8*
  %99 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #14
  %100 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %94, i64 -2
  %101 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %95, i64 -2
  %102 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %100 to i8*
  %103 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #14
  %104 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %94, i64 -3
  %105 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %95, i64 -3
  %106 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %104 to i8*
  %107 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #14
  %108 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %94, i64 -4
  %109 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %95, i64 -4
  %110 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %108 to i8*
  %111 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #14
  %112 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %109, %66
  br i1 %112, label %113, label %93

113:                                              ; preds = %93, %88
  %114 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %89, %88 ], [ %108, %93 ]
  %115 = load i64, i64* %28, align 8
  br label %116

116:                                              ; preds = %54, %113
  %117 = phi %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* [ %114, %113 ], [ %57, %54 ]
  %118 = phi i64 [ %115, %113 ], [ %67, %54 ]
  %119 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %117 to i64
  store i64 %119, i64* %28, align 8
  store i64 %64, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %120 = icmp eq i64 %118, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %116
  %122 = inttoptr i64 %118 to i8*
  tail call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %121, %116, %18
  %124 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl21StartTimerIfNecessaryEv(%"class.content::responsiveness::JankMonitorImpl"*) #3 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %4, align 8
  %6 = icmp eq %"class.base::RepeatingTimer"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RepeatingTimer", %"class.base::RepeatingTimer"* %5, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %8) #14
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %4, align 8
  %12 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 191) #14
  %13 = ptrtoint %"class.content::responsiveness::JankMonitorImpl"* %0 to i64
  %14 = call i8* @_Znwm(i64 56) #13, !noalias !22
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !22
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 145, i64 0>, <2 x i64>* %17, align 8, !noalias !22
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %13, i64* %19, align 8, !noalias !22
  %20 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %14, i8** %20, align 8, !alias.scope !22
  %21 = bitcast %"class.base::RepeatingTimer"* %11 to void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)***
  %22 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)**, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %22, i64 7
  %24 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %23, align 8
  call void %24(%"class.base::RepeatingTimer"* %11, %"class.base::Location"* nonnull dereferenceable(32) %2, i64 500000, %"class.base::RepeatingCallback"* nonnull %3) #14
  %25 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #14
  %26 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %26 seq_cst, align 1
  br label %27

27:                                               ; preds = %1, %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState17DidRunTaskOrEventEPKv(%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, i8* readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #14
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %9, align 8
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %11, align 8
  %13 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %10, %12
  %14 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %10 to i64
  br i1 %13, label %19, label %15, !prof !20

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %12, i64 -1, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, %1
  br i1 %18, label %21, label %19

19:                                               ; preds = %15, %8
  %20 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %11 to i64*
  store i64 %14, i64* %20, align 8
  br label %23

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %12, i64 -1
  store %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %22, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %11, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl25NotifyJankStopIfNecessaryEPKv(%"class.content::responsiveness::JankMonitorImpl"*, i8*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 7, i32 0
  %7 = bitcast %"struct.std::__1::__atomic_base.46"* %6 to i64*
  %8 = load atomic i64, i64* %7 seq_cst, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = load atomic i64, i64* %7 seq_cst, align 8
  %12 = inttoptr i64 %11 to i8*
  %13 = icmp eq i8* %12, %1
  br i1 %13, label %14, label %36, !prof !20

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 9, i32 0
  %16 = bitcast %"class.base::SequencedTaskRunner"** %15 to %"class.base::TaskRunner"**
  %17 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %16, align 8
  %18 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 281) #14
  %19 = icmp eq %"class.content::responsiveness::JankMonitorImpl"* %0, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %20, %14
  %24 = ptrtoint %"class.content::responsiveness::JankMonitorImpl"* %0 to i64
  %25 = call i8* @_Znwm(i64 64) #13, !noalias !27
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !27
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)* @_ZN7content14responsiveness15JankMonitorImpl13OnJankStoppedEPKv to i64), i64 0>, <2 x i64>* %28, align 8, !noalias !27
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = bitcast i8* %29 to i64*
  store i64 %24, i64* %30, align 8, !noalias !27
  %31 = getelementptr inbounds i8, i8* %25, i64 56
  %32 = bitcast i8* %31 to i64*
  store i64 %5, i64* %32, align 8, !noalias !27
  %33 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %25, i8** %33, align 8, !alias.scope !27
  %34 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %17, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #14
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #14
  br label %36

36:                                               ; preds = %10, %2, %23
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #7

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl15StopTimerIfIdleEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 seq_cst, align 8
  %5 = sub nsw i64 %2, %4
  %6 = icmp slt i64 %5, 10000000
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %8, align 8
  %10 = getelementptr inbounds %"class.base::RepeatingTimer", %"class.base::RepeatingTimer"* %9, i64 0, i32 0
  %11 = bitcast %"class.base::RepeatingTimer"* %9 to void (%"class.base::internal::TimerBase"*)***
  %12 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %12, i64 3
  %14 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::TimerBase"* %10) #14
  %15 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %15 seq_cst, align 1
  br label %16

16:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.content::responsiveness::MetricSource"* @_ZN7content14responsiveness15JankMonitorImpl18CreateMetricSourceEv(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #13
  %3 = bitcast i8* %2 to %"class.content::responsiveness::MetricSource"*
  %4 = icmp eq %"class.content::responsiveness::JankMonitorImpl"* %0, null
  %5 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 1
  %6 = select i1 %4, %"class.content::responsiveness::MetricSource::Delegate"* null, %"class.content::responsiveness::MetricSource::Delegate"* %5
  tail call void @_ZN7content14responsiveness12MetricSourceC1EPNS1_8DelegateE(%"class.content::responsiveness::MetricSource"* nonnull %3, %"class.content::responsiveness::MetricSource::Delegate"* %6) #14
  ret %"class.content::responsiveness::MetricSource"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl22DestroyOnMonitorThreadEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %2, align 8
  %4 = getelementptr inbounds %"class.base::RepeatingTimer", %"class.base::RepeatingTimer"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal9TimerBase20AbandonScheduledTaskEv(%"class.base::internal::TimerBase"* %4) #14
  %5 = bitcast %"class.base::RepeatingTimer"* %3 to void (%"class.base::internal::TimerBase"*)***
  %6 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %6, i64 3
  %8 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %7, align 8
  tail call void %8(%"class.base::internal::TimerBase"* %4) #14
  %9 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %2, align 8
  store %"class.base::RepeatingTimer"* null, %"class.base::RepeatingTimer"** %2, align 8
  %10 = icmp eq %"class.base::RepeatingTimer"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.base::RepeatingTimer"* %9 to void (%"class.base::RepeatingTimer"*)***
  %13 = load void (%"class.base::RepeatingTimer"*)**, void (%"class.base::RepeatingTimer"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %13, i64 1
  %15 = load void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %14, align 8
  tail call void %15(%"class.base::RepeatingTimer"* nonnull %9) #14
  br label %16

16:                                               ; preds = %1, %11
  %17 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %17 seq_cst, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content14responsiveness15JankMonitorImpl13timer_runningEv(%"class.content::responsiveness::JankMonitorImpl"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl16OnCheckJankinessEv(%"class.content::responsiveness::JankMonitorImpl"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 7, i32 0
  %3 = bitcast %"struct.std::__1::__atomic_base.46"* %2 to i64*
  %4 = load atomic i64, i64* %3 seq_cst, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %71

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %7, align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %10 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i64 0, i32 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13, !prof !4

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %14) #14
  br label %15

15:                                               ; preds = %13, %6
  %16 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i64 0, i32 1, i32 0, i32 0
  %17 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %16, align 8
  %18 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %8, i64 0, i32 1, i32 0, i32 1
  %19 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %18, align 8
  %20 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %17, %19
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %19, i64 -1, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = sub nsw i64 %9, %23
  %25 = icmp slt i64 %24, 1000000
  br i1 %25, label %30, label %26, !prof !4

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %19, i64 -1, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl13OnJankStartedEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, i8* %28)
  br label %71

30:                                               ; preds = %15, %21
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #14
  %32 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*, %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"** %32, align 8
  %34 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %35 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %35) #14
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38, !prof !4

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %33, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %39) #14
  br label %40

40:                                               ; preds = %38, %30
  %41 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %33, i64 0, i32 1, i32 0, i32 0
  %42 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %41, align 8
  %43 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %33, i64 0, i32 1, i32 0, i32 1
  %44 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %43, align 8
  %45 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %42, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %44, i64 -1, i32 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = sub nsw i64 %34, %48
  %50 = icmp slt i64 %49, 1000000
  br i1 %50, label %55, label %51, !prof !4

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %44, i64 -1, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %35) #14
  tail call void @_ZN7content14responsiveness15JankMonitorImpl13OnJankStartedEPKv(%"class.content::responsiveness::JankMonitorImpl"* %0, i8* %53)
  br label %71

55:                                               ; preds = %40, %46
  %56 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %35) #14
  %57 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %58 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i64, i64* %58 seq_cst, align 8
  %60 = sub nsw i64 %57, %59
  %61 = icmp slt i64 %60, 10000000
  br i1 %61, label %71, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %64 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %63, align 8
  %65 = getelementptr inbounds %"class.base::RepeatingTimer", %"class.base::RepeatingTimer"* %64, i64 0, i32 0
  %66 = bitcast %"class.base::RepeatingTimer"* %64 to void (%"class.base::internal::TimerBase"*)***
  %67 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %67, i64 3
  %69 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %68, align 8
  tail call void %69(%"class.base::internal::TimerBase"* %65) #14
  %70 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %70 seq_cst, align 1
  br label %71

71:                                               ; preds = %26, %51, %55, %62, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i8* } @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState14CheckJankinessEv(%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*) local_unnamed_addr #3 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #14
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %9, align 8
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %11, align 8
  %13 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %12, i64 -1, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %2, %16
  %18 = icmp slt i64 %17, 1000000
  br i1 %18, label %22, label %19, !prof !4

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata", %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %12, i64 -1, i32 1
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %14, %8, %19
  %23 = phi i8 [ 1, %19 ], [ 0, %8 ], [ 0, %14 ]
  %24 = phi i8* [ %21, %19 ], [ undef, %8 ], [ undef, %14 ]
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  %26 = insertvalue { i8, i8* } undef, i8 %23, 0
  %27 = insertvalue { i8, i8* } %26, i8* %24, 1
  ret { i8, i8* } %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl13OnJankStartedEPKv(%"class.content::responsiveness::JankMonitorImpl"*, i8*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 7
  %6 = ptrtoint i8* %1 to i64
  %7 = bitcast %"struct.std::__1::atomic.45"* %5 to i64*
  store atomic i64 %6, i64* %7 seq_cst, align 8
  %8 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !4

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #14
  br label %14

14:                                               ; preds = %2, %12
  %15 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11
  %16 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %20 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %15, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 40, i1 false)
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8, !noalias !32
  %23 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8, !noalias !32
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %24
  %26 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %26) #14
  br i1 %25, label %27, label %29

27:                                               ; preds = %14
  %28 = bitcast %"class.base::ObserverList"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #14, !alias.scope !32
  br label %69

29:                                               ; preds = %14
  store %"class.base::ObserverList"* %15, %"class.base::ObserverList"** %17, align 8
  %30 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %26, %"class.base::internal::LinkNodeBase"* %30) #14
  store i64 0, i64* %18, align 8
  %31 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %23 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %15 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  br label %41

41:                                               ; preds = %34, %29
  %42 = phi i64 [ %40, %34 ], [ -1, %29 ]
  store i64 %42, i64* %19, align 8
  %43 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::ObserverList"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, %42
  %52 = select i1 %51, i64 %50, i64 %42
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %69, label %54

54:                                               ; preds = %41
  %55 = inttoptr i64 %48 to %"class.base::internal::UncheckedObserverAdapter"*
  %56 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %69

60:                                               ; preds = %54, %64
  %61 = phi i64 [ %62, %64 ], [ 0, %54 ]
  %62 = add nuw i64 %61, 1
  store i64 %62, i64* %18, align 8
  %63 = icmp ult i64 %62, %52
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %56, align 8
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %65, i64 %62, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %60, label %69

69:                                               ; preds = %64, %60, %54, %41, %27
  %70 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #14
  %71 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %73 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %74 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %74) #14
  %76 = bitcast %"class.base::ObserverList"** %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #14, !alias.scope !35
  %77 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  br label %78

78:                                               ; preds = %319, %69
  %79 = phi %"class.base::ObserverList"* [ %77, %69 ], [ %317, %319 ]
  %80 = icmp eq %"class.base::ObserverList"* %79, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %78
  %82 = load i64, i64* %18, align 8
  %83 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %79, i64 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.base::ObserverList"* %79 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = ashr exact i64 %88, 3
  %90 = load i64, i64* %19, align 8
  %91 = icmp ult i64 %89, %90
  %92 = select i1 %91, i64 %89, i64 %90
  %93 = icmp eq i64 %82, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %81
  %95 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  br label %112

96:                                               ; preds = %81, %78
  %97 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  %98 = icmp eq %"class.base::ObserverList"* %97, null
  br i1 %98, label %212, label %99

99:                                               ; preds = %96
  %100 = load i64, i64* %72, align 8
  %101 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %97, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.base::ObserverList"* %97 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = ashr exact i64 %106, 3
  %108 = load i64, i64* %73, align 8
  %109 = icmp ult i64 %107, %108
  %110 = select i1 %109, i64 %107, i64 %108
  %111 = icmp eq i64 %100, %110
  br i1 %111, label %121, label %112

112:                                              ; preds = %99, %94
  %113 = phi %"class.base::ObserverList"* [ %95, %94 ], [ %97, %99 ]
  %114 = icmp eq %"class.base::ObserverList"* %79, %113
  %115 = load i64, i64* %18, align 8
  %116 = load i64, i64* %72, align 8
  %117 = icmp eq i64 %115, %116
  %118 = and i1 %114, %117
  br i1 %118, label %119, label %307

119:                                              ; preds = %112
  %120 = icmp eq %"class.base::ObserverList"* %79, null
  br i1 %120, label %212, label %121

121:                                              ; preds = %99, %119
  %122 = phi %"class.base::ObserverList"* [ %79, %119 ], [ %97, %99 ]
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 1
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 1, i32 0, i32 0, i32 1
  %125 = bitcast %"class.base::internal::LinkNodeBase"** %124 to %"class.base::LinkNode"**
  %126 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %125, align 8
  %127 = bitcast %"class.base::LinkedList"* %123 to %"class.base::LinkNode"**
  %128 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %127, align 8
  %129 = icmp eq %"class.base::LinkNode"* %126, %128
  br i1 %129, label %130, label %208

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %131, align 8
  %133 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 0, i32 0, i32 1
  %134 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  %135 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %134
  br i1 %135, label %144, label %136

136:                                              ; preds = %130, %141
  %137 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %141 ], [ %132, %130 ]
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %134
  br i1 %143, label %208, label %136

144:                                              ; preds = %136, %130
  %145 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %130 ], [ %137, %136 ]
  %146 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %145 to i64
  %147 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %145, %134
  br i1 %147, label %208, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 1
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %149, %134
  br i1 %150, label %203, label %151

151:                                              ; preds = %148
  %152 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 -2, i32 0
  %153 = ptrtoint i8** %152 to i64
  %154 = sub i64 %153, %146
  %155 = lshr i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %151, %172
  %160 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %174, %172 ], [ %149, %151 ]
  %161 = phi i64 [ %173, %172 ], [ %146, %151 ]
  %162 = phi i64 [ %175, %172 ], [ %157, %151 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %159
  %167 = ptrtoint i8* %164 to i64
  %168 = inttoptr i64 %161 to %"class.base::internal::UncheckedObserverAdapter"*
  %169 = inttoptr i64 %161 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 1
  %171 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %170 to i64
  br label %172

172:                                              ; preds = %166, %159
  %173 = phi i64 [ %161, %159 ], [ %171, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %175 = add i64 %162, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %159, !llvm.loop !38

177:                                              ; preds = %172, %151
  %178 = phi i64 [ undef, %151 ], [ %173, %172 ]
  %179 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %149, %151 ], [ %174, %172 ]
  %180 = phi i64 [ %146, %151 ], [ %173, %172 ]
  %181 = icmp ult i64 %154, 24
  br i1 %181, label %199, label %182

182:                                              ; preds = %177, %409
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %411, %409 ], [ %179, %177 ]
  %184 = phi i64 [ %410, %409 ], [ %180, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %194, label %188

188:                                              ; preds = %182
  %189 = ptrtoint i8* %186 to i64
  %190 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = inttoptr i64 %184 to i64*
  store i64 %189, i64* %191, align 8
  %192 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 1
  %193 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %192 to i64
  br label %194

194:                                              ; preds = %188, %182
  %195 = phi i64 [ %184, %182 ], [ %193, %188 ]
  %196 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %387, label %381

199:                                              ; preds = %409, %177
  %200 = phi i64 [ %178, %177 ], [ %410, %409 ]
  %201 = inttoptr i64 %200 to %"class.base::internal::UncheckedObserverAdapter"*
  %202 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  br label %203

203:                                              ; preds = %199, %148
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %148 ], [ %202, %199 ]
  %205 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %148 ], [ %201, %199 ]
  %206 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %205, %204
  br i1 %206, label %208, label %207

207:                                              ; preds = %203
  store %"class.base::internal::UncheckedObserverAdapter"* %205, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  br label %208

208:                                              ; preds = %141, %207, %203, %144, %121
  %209 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  %210 = icmp eq %"class.base::ObserverList"* %209, null
  br i1 %210, label %212, label %211

211:                                              ; preds = %208
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %71, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %74) #14
  br label %212

212:                                              ; preds = %96, %119, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #14
  %213 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %214 = icmp eq %"class.base::ObserverList"* %213, null
  br i1 %214, label %305, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 1
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 1, i32 0, i32 0, i32 1
  %218 = bitcast %"class.base::internal::LinkNodeBase"** %217 to %"class.base::LinkNode"**
  %219 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %218, align 8
  %220 = bitcast %"class.base::LinkedList"* %216 to %"class.base::LinkNode"**
  %221 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %220, align 8
  %222 = icmp eq %"class.base::LinkNode"* %219, %221
  br i1 %222, label %223, label %301

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %224, align 8
  %226 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 0, i32 0, i32 1
  %227 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  %228 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %227
  br i1 %228, label %237, label %229

229:                                              ; preds = %223, %234
  %230 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %234 ], [ %225, %223 ]
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = icmp eq i8* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %227
  br i1 %236, label %301, label %229

237:                                              ; preds = %229, %223
  %238 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %223 ], [ %230, %229 ]
  %239 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %238 to i64
  %240 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %238, %227
  br i1 %240, label %301, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 1
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %242, %227
  br i1 %243, label %296, label %244

244:                                              ; preds = %241
  %245 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 -2, i32 0
  %246 = ptrtoint i8** %245 to i64
  %247 = sub i64 %246, %239
  %248 = lshr i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %270, label %252

252:                                              ; preds = %244, %265
  %253 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %267, %265 ], [ %242, %244 ]
  %254 = phi i64 [ %266, %265 ], [ %239, %244 ]
  %255 = phi i64 [ %268, %265 ], [ %250, %244 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 0, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = icmp eq i8* %257, null
  br i1 %258, label %265, label %259

259:                                              ; preds = %252
  %260 = ptrtoint i8* %257 to i64
  %261 = inttoptr i64 %254 to %"class.base::internal::UncheckedObserverAdapter"*
  %262 = inttoptr i64 %254 to i64*
  store i64 %260, i64* %262, align 8
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 1
  %264 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %263 to i64
  br label %265

265:                                              ; preds = %259, %252
  %266 = phi i64 [ %254, %252 ], [ %264, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %268 = add i64 %255, -1
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %270, label %252, !llvm.loop !39

270:                                              ; preds = %265, %244
  %271 = phi i64 [ undef, %244 ], [ %266, %265 ]
  %272 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %242, %244 ], [ %267, %265 ]
  %273 = phi i64 [ %239, %244 ], [ %266, %265 ]
  %274 = icmp ult i64 %247, 24
  br i1 %274, label %292, label %275

275:                                              ; preds = %270, %377
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %379, %377 ], [ %272, %270 ]
  %277 = phi i64 [ %378, %377 ], [ %273, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %287, label %281

281:                                              ; preds = %275
  %282 = ptrtoint i8* %279 to i64
  %283 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = inttoptr i64 %277 to i64*
  store i64 %282, i64* %284, align 8
  %285 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 1
  %286 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %285 to i64
  br label %287

287:                                              ; preds = %281, %275
  %288 = phi i64 [ %277, %275 ], [ %286, %281 ]
  %289 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %355, label %349

292:                                              ; preds = %377, %270
  %293 = phi i64 [ %271, %270 ], [ %378, %377 ]
  %294 = inttoptr i64 %293 to %"class.base::internal::UncheckedObserverAdapter"*
  %295 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  br label %296

296:                                              ; preds = %292, %241
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %241 ], [ %295, %292 ]
  %298 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %241 ], [ %294, %292 ]
  %299 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %298, %297
  br i1 %299, label %301, label %300

300:                                              ; preds = %296
  store %"class.base::internal::UncheckedObserverAdapter"* %298, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  br label %301

301:                                              ; preds = %234, %300, %296, %237, %215
  %302 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %303 = icmp eq %"class.base::ObserverList"* %302, null
  br i1 %303, label %305, label %304

304:                                              ; preds = %301
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %17, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %26) #14
  br label %305

305:                                              ; preds = %212, %301, %304
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #14
  %306 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #14
  ret void

307:                                              ; preds = %112
  %308 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %79, i64 0, i32 0, i32 0, i32 0
  %309 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %308, align 8
  %310 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %309, i64 %115
  %311 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %310 to %"class.content::JankMonitor::Observer"**
  %312 = load %"class.content::JankMonitor::Observer"*, %"class.content::JankMonitor::Observer"** %311, align 8
  %313 = bitcast %"class.content::JankMonitor::Observer"* %312 to void (%"class.content::JankMonitor::Observer"*)***
  %314 = load void (%"class.content::JankMonitor::Observer"*)**, void (%"class.content::JankMonitor::Observer"*)*** %313, align 8
  %315 = getelementptr inbounds void (%"class.content::JankMonitor::Observer"*)*, void (%"class.content::JankMonitor::Observer"*)** %314, i64 2
  %316 = load void (%"class.content::JankMonitor::Observer"*)*, void (%"class.content::JankMonitor::Observer"*)** %315, align 8
  call void %316(%"class.content::JankMonitor::Observer"* %312) #14
  %317 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %318 = icmp eq %"class.base::ObserverList"* %317, null
  br i1 %318, label %319, label %320

319:                                              ; preds = %344, %340, %307, %320, %334
  br label %78

320:                                              ; preds = %307
  %321 = load i64, i64* %18, align 8
  %322 = add i64 %321, 1
  store i64 %322, i64* %18, align 8
  %323 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %317, i64 0, i32 0, i32 0, i32 1
  %324 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = bitcast %"class.base::ObserverList"* %317 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = sub i64 %325, %327
  %329 = ashr exact i64 %328, 3
  %330 = load i64, i64* %19, align 8
  %331 = icmp ult i64 %329, %330
  %332 = select i1 %331, i64 %329, i64 %330
  %333 = icmp ult i64 %322, %332
  br i1 %333, label %334, label %319

334:                                              ; preds = %320
  %335 = inttoptr i64 %327 to %"class.base::internal::UncheckedObserverAdapter"*
  %336 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %317, i64 0, i32 0, i32 0, i32 0
  %337 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %335, i64 %322, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = icmp eq i8* %338, null
  br i1 %339, label %340, label %319

340:                                              ; preds = %334, %344
  %341 = phi i64 [ %342, %344 ], [ %322, %334 ]
  %342 = add nuw i64 %341, 1
  store i64 %342, i64* %18, align 8
  %343 = icmp ult i64 %342, %332
  br i1 %343, label %344, label %319

344:                                              ; preds = %340
  %345 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %336, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %345, i64 %342, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %340, label %319

349:                                              ; preds = %287
  %350 = ptrtoint i8* %290 to i64
  %351 = inttoptr i64 %288 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %288 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %287
  %356 = phi i64 [ %288, %287 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 2, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 3, i32 0
  %369 = load i8*, i8** %368, align 8
  %370 = icmp eq i8* %369, null
  br i1 %370, label %377, label %371

371:                                              ; preds = %366
  %372 = ptrtoint i8* %369 to i64
  %373 = inttoptr i64 %367 to %"class.base::internal::UncheckedObserverAdapter"*
  %374 = inttoptr i64 %367 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %373, i64 1
  %376 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %375 to i64
  br label %377

377:                                              ; preds = %371, %366
  %378 = phi i64 [ %367, %366 ], [ %376, %371 ]
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 4
  %380 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %379, %227
  br i1 %380, label %292, label %275

381:                                              ; preds = %194
  %382 = ptrtoint i8* %197 to i64
  %383 = inttoptr i64 %195 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %195 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %194
  %388 = phi i64 [ %195, %194 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 2, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 3, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = icmp eq i8* %401, null
  br i1 %402, label %409, label %403

403:                                              ; preds = %398
  %404 = ptrtoint i8* %401 to i64
  %405 = inttoptr i64 %399 to %"class.base::internal::UncheckedObserverAdapter"*
  %406 = inttoptr i64 %399 to i64*
  store i64 %404, i64* %406, align 8
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %405, i64 1
  %408 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %407 to i64
  br label %409

409:                                              ; preds = %403, %398
  %410 = phi i64 [ %399, %398 ], [ %408, %403 ]
  %411 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 4
  %412 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %411, %134
  br i1 %412, label %199, label %182
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl13OnJankStoppedEPKv(%"class.content::responsiveness::JankMonitorImpl"*, i8* readnone) #3 align 2 {
  %3 = alloca %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 7
  %6 = bitcast %"struct.std::__1::atomic.45"* %5 to i64*
  %7 = load atomic i64, i64* %6 seq_cst, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i8* %8, %1
  br i1 %9, label %10, label %352

10:                                               ; preds = %2
  store atomic i64 0, i64* %6 seq_cst, align 8
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !4

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #14
  br label %17

17:                                               ; preds = %10, %15
  %18 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11
  %19 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %23 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %18, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 40, i1 false)
  %25 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8, !noalias !40
  %26 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %27 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %26, align 8, !noalias !40
  %28 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, %27
  %29 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %29) #14
  br i1 %28, label %30, label %32

30:                                               ; preds = %17
  %31 = bitcast %"class.base::ObserverList"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #14, !alias.scope !40
  br label %72

32:                                               ; preds = %17
  store %"class.base::ObserverList"* %18, %"class.base::ObserverList"** %20, align 8
  %33 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %29, %"class.base::internal::LinkNodeBase"* %33) #14
  store i64 0, i64* %21, align 8
  %34 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %0, i64 0, i32 11, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %18 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  br label %44

44:                                               ; preds = %37, %32
  %45 = phi i64 [ %43, %37 ], [ -1, %32 ]
  store i64 %45, i64* %22, align 8
  %46 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %47 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %46, i64 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.base::ObserverList"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 3
  %54 = icmp ult i64 %53, %45
  %55 = select i1 %54, i64 %53, i64 %45
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %72, label %57

57:                                               ; preds = %44
  %58 = inttoptr i64 %51 to %"class.base::internal::UncheckedObserverAdapter"*
  %59 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %46, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %72

63:                                               ; preds = %57, %67
  %64 = phi i64 [ %65, %67 ], [ 0, %57 ]
  %65 = add nuw i64 %64, 1
  store i64 %65, i64* %21, align 8
  %66 = icmp ult i64 %65, %55
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %59, align 8
  %69 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %68, i64 %65, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %63, label %72

72:                                               ; preds = %67, %63, %57, %44, %30
  %73 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #14
  %74 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %76 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %77 = getelementptr inbounds %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.base::ObserverList<content::JankMonitor::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %77) #14
  %79 = bitcast %"class.base::ObserverList"** %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #14, !alias.scope !43
  %80 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  br label %81

81:                                               ; preds = %322, %72
  %82 = phi %"class.base::ObserverList"* [ %80, %72 ], [ %320, %322 ]
  %83 = icmp eq %"class.base::ObserverList"* %82, null
  br i1 %83, label %99, label %84

84:                                               ; preds = %81
  %85 = load i64, i64* %21, align 8
  %86 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %82, i64 0, i32 0, i32 0, i32 1
  %87 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.base::ObserverList"* %82 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 3
  %93 = load i64, i64* %22, align 8
  %94 = icmp ult i64 %92, %93
  %95 = select i1 %94, i64 %92, i64 %93
  %96 = icmp eq i64 %85, %95
  br i1 %96, label %99, label %97

97:                                               ; preds = %84
  %98 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %74, align 8
  br label %115

99:                                               ; preds = %84, %81
  %100 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %74, align 8
  %101 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %101, label %215, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %75, align 8
  %104 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::ObserverList"* %100 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 3
  %111 = load i64, i64* %76, align 8
  %112 = icmp ult i64 %110, %111
  %113 = select i1 %112, i64 %110, i64 %111
  %114 = icmp eq i64 %103, %113
  br i1 %114, label %124, label %115

115:                                              ; preds = %102, %97
  %116 = phi %"class.base::ObserverList"* [ %98, %97 ], [ %100, %102 ]
  %117 = icmp eq %"class.base::ObserverList"* %82, %116
  %118 = load i64, i64* %21, align 8
  %119 = load i64, i64* %75, align 8
  %120 = icmp eq i64 %118, %119
  %121 = and i1 %117, %120
  br i1 %121, label %122, label %310

122:                                              ; preds = %115
  %123 = icmp eq %"class.base::ObserverList"* %82, null
  br i1 %123, label %215, label %124

124:                                              ; preds = %102, %122
  %125 = phi %"class.base::ObserverList"* [ %82, %122 ], [ %100, %102 ]
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 1
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 1, i32 0, i32 0, i32 1
  %128 = bitcast %"class.base::internal::LinkNodeBase"** %127 to %"class.base::LinkNode"**
  %129 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %128, align 8
  %130 = bitcast %"class.base::LinkedList"* %126 to %"class.base::LinkNode"**
  %131 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %130, align 8
  %132 = icmp eq %"class.base::LinkNode"* %129, %131
  br i1 %132, label %133, label %211

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %134, align 8
  %136 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 0, i32 0, i32 1
  %137 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %136, align 8
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %137
  br i1 %138, label %147, label %139

139:                                              ; preds = %133, %144
  %140 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %144 ], [ %135, %133 ]
  %141 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 1
  %146 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %145, %137
  br i1 %146, label %211, label %139

147:                                              ; preds = %139, %133
  %148 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %133 ], [ %140, %139 ]
  %149 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %148 to i64
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %148, %137
  br i1 %150, label %211, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %148, i64 1
  %153 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %152, %137
  br i1 %153, label %206, label %154

154:                                              ; preds = %151
  %155 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 -2, i32 0
  %156 = ptrtoint i8** %155 to i64
  %157 = sub i64 %156, %149
  %158 = lshr i64 %157, 3
  %159 = add nuw nsw i64 %158, 1
  %160 = and i64 %159, 3
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %154, %175
  %163 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %177, %175 ], [ %152, %154 ]
  %164 = phi i64 [ %176, %175 ], [ %149, %154 ]
  %165 = phi i64 [ %178, %175 ], [ %160, %154 ]
  %166 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %163, i64 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = icmp eq i8* %167, null
  br i1 %168, label %175, label %169

169:                                              ; preds = %162
  %170 = ptrtoint i8* %167 to i64
  %171 = inttoptr i64 %164 to %"class.base::internal::UncheckedObserverAdapter"*
  %172 = inttoptr i64 %164 to i64*
  store i64 %170, i64* %172, align 8
  %173 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %171, i64 1
  %174 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %173 to i64
  br label %175

175:                                              ; preds = %169, %162
  %176 = phi i64 [ %164, %162 ], [ %174, %169 ]
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %163, i64 1
  %178 = add i64 %165, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %162, !llvm.loop !46

180:                                              ; preds = %175, %154
  %181 = phi i64 [ undef, %154 ], [ %176, %175 ]
  %182 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %152, %154 ], [ %177, %175 ]
  %183 = phi i64 [ %149, %154 ], [ %176, %175 ]
  %184 = icmp ult i64 %157, 24
  br i1 %184, label %202, label %185

185:                                              ; preds = %180, %413
  %186 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %415, %413 ], [ %182, %180 ]
  %187 = phi i64 [ %414, %413 ], [ %183, %180 ]
  %188 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %185
  %192 = ptrtoint i8* %189 to i64
  %193 = inttoptr i64 %187 to %"class.base::internal::UncheckedObserverAdapter"*
  %194 = inttoptr i64 %187 to i64*
  store i64 %192, i64* %194, align 8
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %193, i64 1
  %196 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %195 to i64
  br label %197

197:                                              ; preds = %191, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %191 ]
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 1, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = icmp eq i8* %200, null
  br i1 %201, label %391, label %385

202:                                              ; preds = %413, %180
  %203 = phi i64 [ %181, %180 ], [ %414, %413 ]
  %204 = inttoptr i64 %203 to %"class.base::internal::UncheckedObserverAdapter"*
  %205 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %136, align 8
  br label %206

206:                                              ; preds = %202, %151
  %207 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %137, %151 ], [ %205, %202 ]
  %208 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %148, %151 ], [ %204, %202 ]
  %209 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %208, %207
  br i1 %209, label %211, label %210

210:                                              ; preds = %206
  store %"class.base::internal::UncheckedObserverAdapter"* %208, %"class.base::internal::UncheckedObserverAdapter"** %136, align 8
  br label %211

211:                                              ; preds = %144, %210, %206, %147, %124
  %212 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %74, align 8
  %213 = icmp eq %"class.base::ObserverList"* %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %211
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %74, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %77) #14
  br label %215

215:                                              ; preds = %99, %122, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #14
  %216 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %217 = icmp eq %"class.base::ObserverList"* %216, null
  br i1 %217, label %308, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 1
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 1, i32 0, i32 0, i32 1
  %221 = bitcast %"class.base::internal::LinkNodeBase"** %220 to %"class.base::LinkNode"**
  %222 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %221, align 8
  %223 = bitcast %"class.base::LinkedList"* %219 to %"class.base::LinkNode"**
  %224 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %223, align 8
  %225 = icmp eq %"class.base::LinkNode"* %222, %224
  br i1 %225, label %226, label %304

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 0, i32 0, i32 0
  %228 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %227, align 8
  %229 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 0, i32 0, i32 1
  %230 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %229, align 8
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %230
  br i1 %231, label %240, label %232

232:                                              ; preds = %226, %237
  %233 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %237 ], [ %228, %226 ]
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 1
  %239 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %238, %230
  br i1 %239, label %304, label %232

240:                                              ; preds = %232, %226
  %241 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %226 ], [ %233, %232 ]
  %242 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %241 to i64
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %241, %230
  br i1 %243, label %304, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %241, i64 1
  %246 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %245, %230
  br i1 %246, label %299, label %247

247:                                              ; preds = %244
  %248 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 -2, i32 0
  %249 = ptrtoint i8** %248 to i64
  %250 = sub i64 %249, %242
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %273, label %255

255:                                              ; preds = %247, %268
  %256 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %270, %268 ], [ %245, %247 ]
  %257 = phi i64 [ %269, %268 ], [ %242, %247 ]
  %258 = phi i64 [ %271, %268 ], [ %253, %247 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = icmp eq i8* %260, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %255
  %263 = ptrtoint i8* %260 to i64
  %264 = inttoptr i64 %257 to %"class.base::internal::UncheckedObserverAdapter"*
  %265 = inttoptr i64 %257 to i64*
  store i64 %263, i64* %265, align 8
  %266 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %264, i64 1
  %267 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %266 to i64
  br label %268

268:                                              ; preds = %262, %255
  %269 = phi i64 [ %257, %255 ], [ %267, %262 ]
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 1
  %271 = add i64 %258, -1
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %255, !llvm.loop !47

273:                                              ; preds = %268, %247
  %274 = phi i64 [ undef, %247 ], [ %269, %268 ]
  %275 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %245, %247 ], [ %270, %268 ]
  %276 = phi i64 [ %242, %247 ], [ %269, %268 ]
  %277 = icmp ult i64 %250, 24
  br i1 %277, label %295, label %278

278:                                              ; preds = %273, %381
  %279 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %383, %381 ], [ %275, %273 ]
  %280 = phi i64 [ %382, %381 ], [ %276, %273 ]
  %281 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %290, label %284

284:                                              ; preds = %278
  %285 = ptrtoint i8* %282 to i64
  %286 = inttoptr i64 %280 to %"class.base::internal::UncheckedObserverAdapter"*
  %287 = inttoptr i64 %280 to i64*
  store i64 %285, i64* %287, align 8
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 1
  %289 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %288 to i64
  br label %290

290:                                              ; preds = %284, %278
  %291 = phi i64 [ %280, %278 ], [ %289, %284 ]
  %292 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 1, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = icmp eq i8* %293, null
  br i1 %294, label %359, label %353

295:                                              ; preds = %381, %273
  %296 = phi i64 [ %274, %273 ], [ %382, %381 ]
  %297 = inttoptr i64 %296 to %"class.base::internal::UncheckedObserverAdapter"*
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %229, align 8
  br label %299

299:                                              ; preds = %295, %244
  %300 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %244 ], [ %298, %295 ]
  %301 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %241, %244 ], [ %297, %295 ]
  %302 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %301, %300
  br i1 %302, label %304, label %303

303:                                              ; preds = %299
  store %"class.base::internal::UncheckedObserverAdapter"* %301, %"class.base::internal::UncheckedObserverAdapter"** %229, align 8
  br label %304

304:                                              ; preds = %237, %303, %299, %240, %218
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %308, label %307

307:                                              ; preds = %304
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %20, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %29) #14
  br label %308

308:                                              ; preds = %215, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #14
  %309 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #14
  br label %352

310:                                              ; preds = %115
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %82, i64 0, i32 0, i32 0, i32 0
  %312 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %311, align 8
  %313 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %312, i64 %118
  %314 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %313 to %"class.content::JankMonitor::Observer"**
  %315 = load %"class.content::JankMonitor::Observer"*, %"class.content::JankMonitor::Observer"** %314, align 8
  %316 = bitcast %"class.content::JankMonitor::Observer"* %315 to void (%"class.content::JankMonitor::Observer"*)***
  %317 = load void (%"class.content::JankMonitor::Observer"*)**, void (%"class.content::JankMonitor::Observer"*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.content::JankMonitor::Observer"*)*, void (%"class.content::JankMonitor::Observer"*)** %317, i64 3
  %319 = load void (%"class.content::JankMonitor::Observer"*)*, void (%"class.content::JankMonitor::Observer"*)** %318, align 8
  call void %319(%"class.content::JankMonitor::Observer"* %315) #14
  %320 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %321 = icmp eq %"class.base::ObserverList"* %320, null
  br i1 %321, label %322, label %323

322:                                              ; preds = %347, %343, %310, %323, %337
  br label %81

323:                                              ; preds = %310
  %324 = load i64, i64* %21, align 8
  %325 = add i64 %324, 1
  store i64 %325, i64* %21, align 8
  %326 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %320, i64 0, i32 0, i32 0, i32 1
  %327 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.base::ObserverList"* %320 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = sub i64 %328, %330
  %332 = ashr exact i64 %331, 3
  %333 = load i64, i64* %22, align 8
  %334 = icmp ult i64 %332, %333
  %335 = select i1 %334, i64 %332, i64 %333
  %336 = icmp ult i64 %325, %335
  br i1 %336, label %337, label %322

337:                                              ; preds = %323
  %338 = inttoptr i64 %330 to %"class.base::internal::UncheckedObserverAdapter"*
  %339 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %320, i64 0, i32 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %325, i32 0
  %341 = load i8*, i8** %340, align 8
  %342 = icmp eq i8* %341, null
  br i1 %342, label %343, label %322

343:                                              ; preds = %337, %347
  %344 = phi i64 [ %345, %347 ], [ %325, %337 ]
  %345 = add nuw i64 %344, 1
  store i64 %345, i64* %21, align 8
  %346 = icmp ult i64 %345, %335
  br i1 %346, label %347, label %322

347:                                              ; preds = %343
  %348 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %339, align 8
  %349 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %348, i64 %345, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = icmp eq i8* %350, null
  br i1 %351, label %343, label %322

352:                                              ; preds = %2, %308
  ret void

353:                                              ; preds = %290
  %354 = ptrtoint i8* %293 to i64
  %355 = inttoptr i64 %291 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %291 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %290
  %360 = phi i64 [ %291, %290 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 2, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 3, i32 0
  %373 = load i8*, i8** %372, align 8
  %374 = icmp eq i8* %373, null
  br i1 %374, label %381, label %375

375:                                              ; preds = %370
  %376 = ptrtoint i8* %373 to i64
  %377 = inttoptr i64 %371 to %"class.base::internal::UncheckedObserverAdapter"*
  %378 = inttoptr i64 %371 to i64*
  store i64 %376, i64* %378, align 8
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %377, i64 1
  %380 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %379 to i64
  br label %381

381:                                              ; preds = %375, %370
  %382 = phi i64 [ %371, %370 ], [ %380, %375 ]
  %383 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 4
  %384 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %383, %230
  br i1 %384, label %295, label %278

385:                                              ; preds = %197
  %386 = ptrtoint i8* %200 to i64
  %387 = inttoptr i64 %198 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %198 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %197
  %392 = phi i64 [ %198, %197 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 2, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 3, i32 0
  %405 = load i8*, i8** %404, align 8
  %406 = icmp eq i8* %405, null
  br i1 %406, label %413, label %407

407:                                              ; preds = %402
  %408 = ptrtoint i8* %405 to i64
  %409 = inttoptr i64 %403 to %"class.base::internal::UncheckedObserverAdapter"*
  %410 = inttoptr i64 %403 to i64*
  store i64 %408, i64* %410, align 8
  %411 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %409, i64 1
  %412 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %411 to i64
  br label %413

413:                                              ; preds = %407, %402
  %414 = phi i64 [ %403, %402 ], [ %412, %407 ]
  %415 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 4
  %416 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %415, %137
  br i1 %416, label %202, label %185
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState12TaskMetadataD2Ev(%"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionStateC2Ev(%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %2) #14
  %3 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionStateD2Ev(%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"*, %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %2, align 8
  %4 = icmp eq %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %3 to i64
  %7 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.content::responsiveness::JankMonitorImpl::ThreadExecutionState::TaskMetadata"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState", %"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %11) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content14responsiveness15JankMonitorImpl20ThreadExecutionState20AssertOnTargetThreadEv(%"class.content::responsiveness::JankMonitorImpl::ThreadExecutionState"* nocapture) local_unnamed_addr #0 align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

declare void @_ZN4base8internal9TimerBase20AbandonScheduledTaskEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #7

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #7

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #7

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.content::responsiveness::JankMonitorImpl"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.content::responsiveness::JankMonitorImpl"*)**
  %21 = load void (%"class.content::responsiveness::JankMonitorImpl"*)*, void (%"class.content::responsiveness::JankMonitorImpl"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.content::responsiveness::JankMonitorImpl"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.content::responsiveness::JankMonitorImpl"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.content::responsiveness::JankMonitorImpl"* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.content::responsiveness::JankMonitorImpl"**
  %6 = load %"class.content::responsiveness::JankMonitorImpl"*, %"class.content::responsiveness::JankMonitorImpl"** %5, align 8
  %7 = icmp eq %"class.content::responsiveness::JankMonitorImpl"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.content::JankMonitor"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.content::JankMonitor"*)***
  %17 = load void (%"class.content::JankMonitor"*)**, void (%"class.content::JankMonitor"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.content::JankMonitor"*)*, void (%"class.content::JankMonitor"*)** %17, i64 5
  %19 = load void (%"class.content::JankMonitor"*)*, void (%"class.content::JankMonitor"*)** %18, align 8
  tail call void %19(%"class.content::JankMonitor"* nonnull %15) #14
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.content::responsiveness::JankMonitorImpl"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.content::responsiveness::JankMonitorImpl"*)**
  %21 = load void (%"class.content::responsiveness::JankMonitorImpl"*)*, void (%"class.content::responsiveness::JankMonitorImpl"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.content::responsiveness::JankMonitorImpl"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.content::responsiveness::JankMonitorImpl"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.content::responsiveness::JankMonitorImpl"* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN7content14responsiveness12MetricSourceC1EPNS1_8DelegateE(%"class.content::responsiveness::MetricSource"*, %"class.content::responsiveness::MetricSource::Delegate"*) unnamed_addr #7

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #7

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8**
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.content::responsiveness::JankMonitorImpl"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)**
  %23 = load void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)*, void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.content::responsiveness::JankMonitorImpl"*, i8*)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i8*, i8** %7, align 8
  tail call void %27(%"class.content::responsiveness::JankMonitorImpl"* %14, i8* %28) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.content::responsiveness::JankMonitorImpl"**
  %6 = load %"class.content::responsiveness::JankMonitorImpl"*, %"class.content::responsiveness::JankMonitorImpl"** %5, align 8
  %7 = icmp eq %"class.content::responsiveness::JankMonitorImpl"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.content::responsiveness::JankMonitorImpl", %"class.content::responsiveness::JankMonitorImpl"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.content::JankMonitor"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.content::JankMonitor"*)***
  %17 = load void (%"class.content::JankMonitor"*)**, void (%"class.content::JankMonitor"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.content::JankMonitor"*)*, void (%"class.content::JankMonitor"*)** %17, i64 5
  %19 = load void (%"class.content::JankMonitor"*)*, void (%"class.content::JankMonitor"*)** %18, align 8
  tail call void %19(%"class.content::JankMonitor"* nonnull %15) #14
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_"}
!18 = distinct !{!18, !19, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!20 = !{!"branch_weights", i32 1, i32 2000}
!21 = distinct !{!21, !3}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7content14responsiveness15JankMonitorImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base13BindRepeatingIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!26 = distinct !{!26, !"_ZN4base13BindRepeatingIMN7content14responsiveness15JankMonitorImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS5_EERS7_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content14responsiveness15JankMonitorImplEFvPKvEJNS0_18RetainedRefWrapperIS5_EERS7_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS_8internal18RetainedRefWrapperIS3_EERS5_EEENS_12OnceCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIMN7content14responsiveness15JankMonitorImplEFvPKvEJNS_8internal18RetainedRefWrapperIS3_EERS5_EEENS_12OnceCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !3}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!45 = distinct !{!45, !"_ZNK4base12ObserverListIN7content11JankMonitor8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!46 = distinct !{!46, !3}
!47 = distinct !{!47, !3}
