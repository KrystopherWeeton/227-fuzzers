; ModuleID = '../../components/url_formatter/elide_url.cc'
source_filename = "../../components/url_formatter/elide_url.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.gfx::FontList" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::basic_string.4"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator.11" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EES6_RKS9_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

@_ZN13url_formatter22kFormatUrlOmitDefaultsE = external local_unnamed_addr constant i32, align 4
@_ZN3gfx14kEllipsisUTF16E = external local_unnamed_addr constant [0 x i16], align 2
@.str = private unnamed_addr constant [2 x i16] [i16 63, i16 0], align 2
@_ZN3gfx13kForwardSlashE = external local_unnamed_addr constant i16, align 2
@_ZN3url24kStandardSchemeSeparatorE = external constant [0 x i8], align 1
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1
@_ZN13url_formatter23kFormatUrlTrimAfterHostE = external local_unnamed_addr constant i32, align 4
@_ZN13url_formatter19kFormatUrlOmitHTTPSE = external local_unnamed_addr constant i32, align 4
@_ZN13url_formatter31kFormatUrlOmitTrivialSubdomainsE = external local_unnamed_addr constant i32, align 4
@.str.3 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"../../components/url_formatter/elide_url.cc\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"!url_path_elements.empty()\00", align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url10kWssSchemeE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13url_formatter8ElideUrlERK4GURLRKN3gfx8FontListEf(%"class.std::__1::basic_string.4"* noalias sret, %class.GURL* dereferenceable(120), %"class.gfx::FontList"*, float) local_unnamed_addr #0 {
  %5 = alloca %"struct.url::Parsed", align 8
  %6 = alloca %"class.std::__1::basic_string.4", align 8
  %7 = alloca %"class.std::__1::basic_string.4", align 8
  %8 = alloca %"class.std::__1::basic_string.4", align 8
  %9 = alloca %"class.std::__1::basic_string.4", align 8
  %10 = alloca %"class.std::__1::basic_string.4", align 8
  %11 = alloca %"class.std::__1::basic_string.4", align 8
  %12 = alloca %"class.std::__1::basic_string.4", align 8
  %13 = alloca %"class.std::__1::basic_string.4", align 8
  %14 = alloca %"class.std::__1::basic_string.4", align 8
  %15 = alloca %"class.std::__1::basic_string.4", align 8
  %16 = alloca %"class.std::__1::vector", align 8
  %17 = alloca [15 x i8], align 8
  %18 = alloca %"class.std::__1::basic_string.4", align 8
  %19 = alloca %"class.std::__1::basic_string.4", align 8
  %20 = alloca %"class.std::__1::basic_string.4", align 8
  %21 = alloca %"class.std::__1::basic_string.4", align 8
  %22 = alloca [15 x i8], align 8
  %23 = alloca %"class.std::__1::basic_string.4", align 8
  %24 = alloca %"class.std::__1::basic_string.4", align 8
  %25 = alloca %"class.std::__1::basic_string.4", align 8
  %26 = alloca %"class.std::__1::vector", align 8
  %27 = alloca %"class.std::__1::basic_string.4", align 8
  %28 = alloca %"class.std::__1::basic_string.4", align 8
  %29 = alloca %"class.std::__1::basic_string.4", align 8
  %30 = alloca %"class.std::__1::basic_string.4", align 8
  %31 = alloca %"class.std::__1::basic_string.4", align 8
  %32 = alloca %"class.std::__1::basic_string.4", align 8
  %33 = alloca %"class.std::__1::basic_string.4", align 8
  %34 = alloca %"class.std::__1::basic_string.4", align 8
  %35 = alloca %"class.std::__1::basic_string.4", align 8
  %36 = alloca %"class.std::__1::basic_string.4", align 8
  %37 = alloca %"class.std::__1::basic_string.4", align 8
  %38 = alloca %"class.std::__1::basic_string.4", align 8
  %39 = bitcast %"struct.url::Parsed"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %39) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 80, i1 false)
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %5) #12
  %40 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  %44 = load i32, i32* @_ZN13url_formatter22kFormatUrlOmitDefaultsE, align 4
  call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string.4"* nonnull sret %6, %class.GURL* dereferenceable(120) %1, i32 %44, i32 2, %"struct.url::Parsed"* nonnull %5, i64* null, i64* null) #12
  %45 = fcmp ugt float %3, 0.000000e+00
  br i1 %45, label %226, label %46

46:                                               ; preds = %4
  %47 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %40, i64 24, i1 false) #12
  br label %2741

53:                                               ; preds = %46
  %54 = load i16*, i16** %41, align 8
  %55 = load i64, i64* %42, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %53
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #13
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  call void @abort() #13
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = call i8* @_Znwm(i64 %72) #14
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %173, label %84

84:                                               ; preds = %79
  %85 = add i64 %55, 1
  %86 = getelementptr i16, i16* %80, i64 %85
  %87 = getelementptr i16, i16* %54, i64 %85
  %88 = icmp ult i16* %80, %87
  %89 = icmp ult i16* %54, %86
  %90 = and i1 %88, %89
  br i1 %90, label %173, label %91

91:                                               ; preds = %84
  %92 = and i64 %82, -16
  %93 = sub i64 %81, %92
  %94 = getelementptr i16, i16* %54, i64 %92
  %95 = getelementptr i16, i16* %80, i64 %92
  %96 = add i64 %92, -16
  %97 = lshr exact i64 %96, 4
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 3
  %100 = icmp ult i64 %96, 48
  br i1 %100, label %152, label %101

101:                                              ; preds = %91
  %102 = sub nsw i64 %98, %99
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i64 [ 0, %101 ], [ %149, %103 ]
  %105 = phi i64 [ %102, %101 ], [ %150, %103 ]
  %106 = getelementptr i16, i16* %54, i64 %104
  %107 = getelementptr i16, i16* %80, i64 %104
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !2
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !2
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !5, !noalias !2
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !5, !noalias !2
  %116 = or i64 %104, 16
  %117 = getelementptr i16, i16* %54, i64 %116
  %118 = getelementptr i16, i16* %80, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = or i64 %104, 32
  %128 = getelementptr i16, i16* %54, i64 %127
  %129 = getelementptr i16, i16* %80, i64 %127
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !2
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !2
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !5, !noalias !2
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !5, !noalias !2
  %138 = or i64 %104, 48
  %139 = getelementptr i16, i16* %54, i64 %138
  %140 = getelementptr i16, i16* %80, i64 %138
  %141 = bitcast i16* %139 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !2
  %143 = getelementptr i16, i16* %139, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !2
  %146 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %146, align 2, !alias.scope !5, !noalias !2
  %147 = getelementptr i16, i16* %140, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !5, !noalias !2
  %149 = add i64 %104, 64
  %150 = add i64 %105, -4
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %103, !llvm.loop !7

152:                                              ; preds = %103, %91
  %153 = phi i64 [ 0, %91 ], [ %149, %103 ]
  %154 = icmp eq i64 %99, 0
  br i1 %154, label %171, label %155

155:                                              ; preds = %152, %155
  %156 = phi i64 [ %168, %155 ], [ %153, %152 ]
  %157 = phi i64 [ %169, %155 ], [ %99, %152 ]
  %158 = getelementptr i16, i16* %54, i64 %156
  %159 = getelementptr i16, i16* %80, i64 %156
  %160 = bitcast i16* %158 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !2
  %162 = getelementptr i16, i16* %158, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !2
  %165 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %165, align 2, !alias.scope !5, !noalias !2
  %166 = getelementptr i16, i16* %159, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %167, align 2, !alias.scope !5, !noalias !2
  %168 = add i64 %156, 16
  %169 = add i64 %157, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %155, !llvm.loop !9

171:                                              ; preds = %155, %152
  %172 = icmp eq i64 %82, %92
  br i1 %172, label %2741, label %173

173:                                              ; preds = %171, %84, %79
  %174 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %93, %171 ]
  %175 = phi i16* [ %54, %84 ], [ %54, %79 ], [ %94, %171 ]
  %176 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %95, %171 ]
  %177 = add i64 %174, -1
  %178 = and i64 %174, 7
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %191, label %180

180:                                              ; preds = %173, %180
  %181 = phi i64 [ %186, %180 ], [ %174, %173 ]
  %182 = phi i16* [ %188, %180 ], [ %175, %173 ]
  %183 = phi i16* [ %187, %180 ], [ %176, %173 ]
  %184 = phi i64 [ %189, %180 ], [ %178, %173 ]
  %185 = load i16, i16* %182, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %181, -1
  %187 = getelementptr inbounds i16, i16* %183, i64 1
  %188 = getelementptr inbounds i16, i16* %182, i64 1
  %189 = add i64 %184, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %180, !llvm.loop !11

191:                                              ; preds = %180, %173
  %192 = phi i64 [ %174, %173 ], [ %186, %180 ]
  %193 = phi i16* [ %175, %173 ], [ %188, %180 ]
  %194 = phi i16* [ %176, %173 ], [ %187, %180 ]
  %195 = icmp ult i64 %177, 7
  br i1 %195, label %2741, label %196

196:                                              ; preds = %191, %196
  %197 = phi i64 [ %222, %196 ], [ %192, %191 ]
  %198 = phi i16* [ %224, %196 ], [ %193, %191 ]
  %199 = phi i16* [ %223, %196 ], [ %194, %191 ]
  %200 = load i16, i16* %198, align 2
  store i16 %200, i16* %199, align 2
  %201 = getelementptr inbounds i16, i16* %199, i64 1
  %202 = getelementptr inbounds i16, i16* %198, i64 1
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %199, i64 2
  %205 = getelementptr inbounds i16, i16* %198, i64 2
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %199, i64 3
  %208 = getelementptr inbounds i16, i16* %198, i64 3
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %199, i64 4
  %211 = getelementptr inbounds i16, i16* %198, i64 4
  %212 = load i16, i16* %211, align 2
  store i16 %212, i16* %210, align 2
  %213 = getelementptr inbounds i16, i16* %199, i64 5
  %214 = getelementptr inbounds i16, i16* %198, i64 5
  %215 = load i16, i16* %214, align 2
  store i16 %215, i16* %213, align 2
  %216 = getelementptr inbounds i16, i16* %199, i64 6
  %217 = getelementptr inbounds i16, i16* %198, i64 6
  %218 = load i16, i16* %217, align 2
  store i16 %218, i16* %216, align 2
  %219 = getelementptr inbounds i16, i16* %199, i64 7
  %220 = getelementptr inbounds i16, i16* %198, i64 7
  %221 = load i16, i16* %220, align 2
  store i16 %221, i16* %219, align 2
  %222 = add i64 %197, -8
  %223 = getelementptr inbounds i16, i16* %199, i64 8
  %224 = getelementptr inbounds i16, i16* %198, i64 8
  %225 = icmp eq i64 %222, 0
  br i1 %225, label %2741, label %196, !llvm.loop !12

226:                                              ; preds = %4
  %227 = call zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL* %1) #12
  br i1 %227, label %229, label %228

228:                                              ; preds = %226
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, %"class.gfx::FontList"* %2, float %3, i32 4) #12
  br label %2741

229:                                              ; preds = %226
  %230 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, %"class.gfx::FontList"* %2) #12
  %231 = fcmp ugt float %230, %3
  br i1 %231, label %412, label %232

232:                                              ; preds = %229
  %233 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %233, i64 0, i32 1, i32 1
  %235 = load i8, i8* %234, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %232
  %238 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* nonnull align 8 %40, i64 24, i1 false) #12
  br label %2741

239:                                              ; preds = %232
  %240 = load i16*, i16** %41, align 8
  %241 = load i64, i64* %42, align 8
  %242 = icmp ult i64 %241, 11
  br i1 %242, label %243, label %248

243:                                              ; preds = %239
  %244 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %245 = trunc i64 %241 to i8
  %246 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %246, i64 0, i32 1, i32 1
  store i8 %245, i8* %247, align 1
  br label %265

248:                                              ; preds = %239
  %249 = icmp ugt i64 %241, 9223372036854775791
  br i1 %249, label %250, label %252

250:                                              ; preds = %248
  %251 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %251) #13
  unreachable

252:                                              ; preds = %248
  %253 = add nuw nsw i64 %241, 8
  %254 = and i64 %253, -8
  %255 = icmp slt i64 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %252
  call void @abort() #13
  unreachable

257:                                              ; preds = %252
  %258 = shl i64 %254, 1
  %259 = call i8* @_Znwm(i64 %258) #14
  %260 = bitcast i8* %259 to i16*
  %261 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %259, i8** %261, align 8
  %262 = or i64 %254, -9223372036854775808
  %263 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %241, i64* %264, align 8
  br label %265

265:                                              ; preds = %257, %243
  %266 = phi i16* [ %244, %243 ], [ %260, %257 ]
  %267 = add nuw nsw i64 %241, 1
  %268 = add i64 %241, 1
  %269 = icmp ult i64 %268, 16
  br i1 %269, label %359, label %270

270:                                              ; preds = %265
  %271 = add i64 %241, 1
  %272 = getelementptr i16, i16* %266, i64 %271
  %273 = getelementptr i16, i16* %240, i64 %271
  %274 = icmp ult i16* %266, %273
  %275 = icmp ult i16* %240, %272
  %276 = and i1 %274, %275
  br i1 %276, label %359, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -16
  %279 = sub i64 %267, %278
  %280 = getelementptr i16, i16* %240, i64 %278
  %281 = getelementptr i16, i16* %266, i64 %278
  %282 = add i64 %278, -16
  %283 = lshr exact i64 %282, 4
  %284 = add nuw nsw i64 %283, 1
  %285 = and i64 %284, 3
  %286 = icmp ult i64 %282, 48
  br i1 %286, label %338, label %287

287:                                              ; preds = %277
  %288 = sub nsw i64 %284, %285
  br label %289

289:                                              ; preds = %289, %287
  %290 = phi i64 [ 0, %287 ], [ %335, %289 ]
  %291 = phi i64 [ %288, %287 ], [ %336, %289 ]
  %292 = getelementptr i16, i16* %240, i64 %290
  %293 = getelementptr i16, i16* %266, i64 %290
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !13
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !13
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !16, !noalias !13
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !16, !noalias !13
  %302 = or i64 %290, 16
  %303 = getelementptr i16, i16* %240, i64 %302
  %304 = getelementptr i16, i16* %266, i64 %302
  %305 = bitcast i16* %303 to <8 x i16>*
  %306 = load <8 x i16>, <8 x i16>* %305, align 2, !alias.scope !13
  %307 = getelementptr i16, i16* %303, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !13
  %310 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %306, <8 x i16>* %310, align 2, !alias.scope !16, !noalias !13
  %311 = getelementptr i16, i16* %304, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %312, align 2, !alias.scope !16, !noalias !13
  %313 = or i64 %290, 32
  %314 = getelementptr i16, i16* %240, i64 %313
  %315 = getelementptr i16, i16* %266, i64 %313
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !13
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !13
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !16, !noalias !13
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !16, !noalias !13
  %324 = or i64 %290, 48
  %325 = getelementptr i16, i16* %240, i64 %324
  %326 = getelementptr i16, i16* %266, i64 %324
  %327 = bitcast i16* %325 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 2, !alias.scope !13
  %329 = getelementptr i16, i16* %325, i64 8
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !13
  %332 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %328, <8 x i16>* %332, align 2, !alias.scope !16, !noalias !13
  %333 = getelementptr i16, i16* %326, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %334, align 2, !alias.scope !16, !noalias !13
  %335 = add i64 %290, 64
  %336 = add i64 %291, -4
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %289, !llvm.loop !18

338:                                              ; preds = %289, %277
  %339 = phi i64 [ 0, %277 ], [ %335, %289 ]
  %340 = icmp eq i64 %285, 0
  br i1 %340, label %357, label %341

341:                                              ; preds = %338, %341
  %342 = phi i64 [ %354, %341 ], [ %339, %338 ]
  %343 = phi i64 [ %355, %341 ], [ %285, %338 ]
  %344 = getelementptr i16, i16* %240, i64 %342
  %345 = getelementptr i16, i16* %266, i64 %342
  %346 = bitcast i16* %344 to <8 x i16>*
  %347 = load <8 x i16>, <8 x i16>* %346, align 2, !alias.scope !13
  %348 = getelementptr i16, i16* %344, i64 8
  %349 = bitcast i16* %348 to <8 x i16>*
  %350 = load <8 x i16>, <8 x i16>* %349, align 2, !alias.scope !13
  %351 = bitcast i16* %345 to <8 x i16>*
  store <8 x i16> %347, <8 x i16>* %351, align 2, !alias.scope !16, !noalias !13
  %352 = getelementptr i16, i16* %345, i64 8
  %353 = bitcast i16* %352 to <8 x i16>*
  store <8 x i16> %350, <8 x i16>* %353, align 2, !alias.scope !16, !noalias !13
  %354 = add i64 %342, 16
  %355 = add i64 %343, -1
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %341, !llvm.loop !19

357:                                              ; preds = %341, %338
  %358 = icmp eq i64 %268, %278
  br i1 %358, label %2741, label %359

359:                                              ; preds = %357, %270, %265
  %360 = phi i64 [ %267, %270 ], [ %267, %265 ], [ %279, %357 ]
  %361 = phi i16* [ %240, %270 ], [ %240, %265 ], [ %280, %357 ]
  %362 = phi i16* [ %266, %270 ], [ %266, %265 ], [ %281, %357 ]
  %363 = add i64 %360, -1
  %364 = and i64 %360, 7
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %377, label %366

366:                                              ; preds = %359, %366
  %367 = phi i64 [ %372, %366 ], [ %360, %359 ]
  %368 = phi i16* [ %374, %366 ], [ %361, %359 ]
  %369 = phi i16* [ %373, %366 ], [ %362, %359 ]
  %370 = phi i64 [ %375, %366 ], [ %364, %359 ]
  %371 = load i16, i16* %368, align 2
  store i16 %371, i16* %369, align 2
  %372 = add i64 %367, -1
  %373 = getelementptr inbounds i16, i16* %369, i64 1
  %374 = getelementptr inbounds i16, i16* %368, i64 1
  %375 = add i64 %370, -1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %366, !llvm.loop !20

377:                                              ; preds = %366, %359
  %378 = phi i64 [ %360, %359 ], [ %372, %366 ]
  %379 = phi i16* [ %361, %359 ], [ %374, %366 ]
  %380 = phi i16* [ %362, %359 ], [ %373, %366 ]
  %381 = icmp ult i64 %363, 7
  br i1 %381, label %2741, label %382

382:                                              ; preds = %377, %382
  %383 = phi i64 [ %408, %382 ], [ %378, %377 ]
  %384 = phi i16* [ %410, %382 ], [ %379, %377 ]
  %385 = phi i16* [ %409, %382 ], [ %380, %377 ]
  %386 = load i16, i16* %384, align 2
  store i16 %386, i16* %385, align 2
  %387 = getelementptr inbounds i16, i16* %385, i64 1
  %388 = getelementptr inbounds i16, i16* %384, i64 1
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = getelementptr inbounds i16, i16* %385, i64 2
  %391 = getelementptr inbounds i16, i16* %384, i64 2
  %392 = load i16, i16* %391, align 2
  store i16 %392, i16* %390, align 2
  %393 = getelementptr inbounds i16, i16* %385, i64 3
  %394 = getelementptr inbounds i16, i16* %384, i64 3
  %395 = load i16, i16* %394, align 2
  store i16 %395, i16* %393, align 2
  %396 = getelementptr inbounds i16, i16* %385, i64 4
  %397 = getelementptr inbounds i16, i16* %384, i64 4
  %398 = load i16, i16* %397, align 2
  store i16 %398, i16* %396, align 2
  %399 = getelementptr inbounds i16, i16* %385, i64 5
  %400 = getelementptr inbounds i16, i16* %384, i64 5
  %401 = load i16, i16* %400, align 2
  store i16 %401, i16* %399, align 2
  %402 = getelementptr inbounds i16, i16* %385, i64 6
  %403 = getelementptr inbounds i16, i16* %384, i64 6
  %404 = load i16, i16* %403, align 2
  store i16 %404, i16* %402, align 2
  %405 = getelementptr inbounds i16, i16* %385, i64 7
  %406 = getelementptr inbounds i16, i16* %384, i64 7
  %407 = load i16, i16* %406, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %383, -8
  %409 = getelementptr inbounds i16, i16* %385, i64 8
  %410 = getelementptr inbounds i16, i16* %384, i64 8
  %411 = icmp eq i64 %408, 0
  br i1 %411, label %2741, label %382, !llvm.loop !21

412:                                              ; preds = %229
  %413 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5, i32 1
  %417 = load i32, i32* %416, align 4
  %418 = sext i32 %417 to i64
  %419 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #12
  %420 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %419, i8 0, i64 24, i1 false) #12
  %422 = bitcast %"class.std::__1::basic_string.4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %422) #12
  %423 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %422, i8 0, i64 24, i1 false) #12
  %425 = icmp eq i32 %417, -1
  br i1 %425, label %426, label %428

426:                                              ; preds = %412
  %427 = bitcast %"class.std::__1::basic_string.4"* %6 to %"class.std::__1::allocator.11"*
  br label %448

428:                                              ; preds = %412
  %429 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %429) #12
  %430 = bitcast %"class.std::__1::basic_string.4"* %6 to %"class.std::__1::allocator.11"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.4"* nonnull %9, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, i64 %415, i64 -1, %"class.std::__1::allocator.11"* nonnull dereferenceable(1) %430) #12
  %431 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %432 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %431, i64 0, i32 1, i32 1
  %433 = load i8, i8* %432, align 1
  %434 = icmp slt i8 %433, 0
  br i1 %434, label %435, label %438

435:                                              ; preds = %428
  %436 = bitcast %"class.std::__1::basic_string.4"* %7 to i8**
  %437 = load i8*, i8** %436, align 8
  call void @_ZdlPv(i8* %437) #14
  br label %438

438:                                              ; preds = %435, %428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %419, i8* nonnull align 8 %429, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %429) #12
  %439 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #12
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.4"* nonnull %10, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, i64 %415, i64 %418, %"class.std::__1::allocator.11"* nonnull dereferenceable(1) %430) #12
  %440 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %441 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %440, i64 0, i32 1, i32 1
  %442 = load i8, i8* %441, align 1
  %443 = icmp slt i8 %442, 0
  br i1 %443, label %444, label %447

444:                                              ; preds = %438
  %445 = bitcast %"class.std::__1::basic_string.4"* %8 to i8**
  %446 = load i8*, i8** %445, align 8
  call void @_ZdlPv(i8* %446) #14
  br label %447

447:                                              ; preds = %444, %438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %422, i8* nonnull align 8 %439, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #12
  br label %448

448:                                              ; preds = %426, %447
  %449 = phi %"class.std::__1::allocator.11"* [ %427, %426 ], [ %430, %447 ]
  %450 = bitcast %"class.std::__1::basic_string.4"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #12
  %451 = add nsw i64 %418, %415
  %452 = bitcast %"class.std::__1::basic_string.4"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.4"* nonnull %11, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, i64 0, i64 %451, %"class.std::__1::allocator.11"* nonnull dereferenceable(1) %449) #12
  %453 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %11, %"class.gfx::FontList"* %2) #12
  %454 = fcmp ugt float %453, %3
  br i1 %454, label %456, label %455

455:                                              ; preds = %448
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, %"class.gfx::FontList"* %2, float %3, i32 4) #12
  br label %2716

456:                                              ; preds = %448
  %457 = bitcast %"class.std::__1::basic_string.4"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %457) #12
  %458 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %457, i8 0, i64 24, i1 false) #12
  %460 = bitcast %"class.std::__1::basic_string.4"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %460) #12
  %461 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 0, i64 24, i1 false) #12
  %463 = bitcast %"class.std::__1::basic_string.4"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %463) #12
  %464 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %463, i8 0, i64 24, i1 false) #12
  call fastcc void @_ZN12_GLOBAL__N_19SplitHostERK4GURLPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEESA_SA_(%class.GURL* dereferenceable(120) %1, %"class.std::__1::basic_string.4"* nonnull %12, %"class.std::__1::basic_string.4"* nonnull %13, %"class.std::__1::basic_string.4"* nonnull %14)
  %466 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  %467 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %466) #12
  br i1 %467, label %468, label %793

468:                                              ; preds = %456
  %469 = bitcast %"class.std::__1::basic_string.4"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %469) #12
  %470 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %472 = bitcast %"class.std::__1::basic_string.4"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %473 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %472, i64 0, i32 1, i32 1
  %474 = bitcast %"class.std::__1::basic_string.4"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %474, i8 -86, i64 24, i1 false)
  store i8 1, i8* %473, align 1
  %475 = bitcast %"class.std::__1::basic_string.4"* %15 to i16*
  store i16 58, i16* %475, align 8
  %476 = getelementptr inbounds i16, i16* %475, i64 1
  store i16 0, i16* %476, align 2
  %477 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %477) #12
  %478 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %479 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 1
  %480 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %481 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %480, i64 0, i32 1, i32 1
  %482 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %482, i8 -86, i64 24, i1 false)
  %483 = load i8, i8* %481, align 1
  %484 = icmp slt i8 %483, 0
  %485 = load i16*, i16** %423, align 8
  %486 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  %487 = select i1 %484, i16* %485, i16* %486
  %488 = load i64, i64* %424, align 8
  %489 = zext i8 %483 to i64
  %490 = select i1 %484, i64 %488, i64 %489
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %16, i16* %487, i64 %490, i16* nonnull %475, i64 1, i32 1, i32 0) #12
  %491 = bitcast %"class.std::__1::basic_string.4"** %479 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.std::__1::vector"* %16 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = sub i64 %492, %494
  %496 = sdiv exact i64 %495, 24
  %497 = icmp ugt i64 %496, 1
  %498 = inttoptr i64 %494 to %"class.std::__1::basic_string.4"*
  br i1 %497, label %499, label %762

499:                                              ; preds = %468
  %500 = bitcast %"class.std::__1::basic_string.4"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %501 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %500, i64 0, i32 1, i32 1
  %502 = load i8, i8* %501, align 1
  %503 = icmp slt i8 %502, 0
  br i1 %503, label %504, label %506

504:                                              ; preds = %499
  %505 = load i16*, i16** %458, align 8
  store i16 0, i16* %505, align 2
  store i64 0, i64* %459, align 8
  br label %508

506:                                              ; preds = %499
  %507 = bitcast %"class.std::__1::basic_string.4"* %12 to i16*
  store i16 0, i16* %507, align 8
  store i8 0, i8* %501, align 1
  br label %508

508:                                              ; preds = %504, %506
  %509 = bitcast %"class.std::__1::basic_string.4"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %510 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %509, i64 0, i32 1, i32 1
  %511 = load i8, i8* %510, align 1
  %512 = icmp slt i8 %511, 0
  br i1 %512, label %513, label %515

513:                                              ; preds = %508
  %514 = load i16*, i16** %461, align 8
  store i16 0, i16* %514, align 2
  store i64 0, i64* %462, align 8
  br label %517

515:                                              ; preds = %508
  %516 = bitcast %"class.std::__1::basic_string.4"* %13 to i16*
  store i16 0, i16* %516, align 8
  store i8 0, i8* %510, align 1
  br label %517

517:                                              ; preds = %513, %515
  %518 = bitcast %"class.std::__1::basic_string.4"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %519 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %518, i64 0, i32 1, i32 1
  %520 = load i8, i8* %519, align 1
  %521 = icmp slt i8 %520, 0
  br i1 %521, label %522, label %524

522:                                              ; preds = %517
  %523 = load i16*, i16** %464, align 8
  store i16 0, i16* %523, align 2
  store i64 0, i64* %465, align 8
  br label %526

524:                                              ; preds = %517
  %525 = bitcast %"class.std::__1::basic_string.4"* %14 to i16*
  store i16 0, i16* %525, align 8
  store i8 0, i8* %519, align 1
  br label %526

526:                                              ; preds = %522, %524
  %527 = getelementptr inbounds [15 x i8], [15 x i8]* %17, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %527)
  %528 = bitcast %"class.std::__1::basic_string.4"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %528) #12
  %529 = load i64, i64* %491, align 8
  %530 = load i64, i64* %493, align 8
  %531 = icmp eq i64 %529, %530
  br i1 %531, label %532, label %534

532:                                              ; preds = %526
  %533 = bitcast %"class.std::__1::vector"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* nonnull %533) #13
  unreachable

534:                                              ; preds = %526
  %535 = inttoptr i64 %530 to %"class.std::__1::basic_string.4"*
  %536 = inttoptr i64 %530 to %"class.std::__1::allocator.11"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.4"* nonnull %18, %"class.std::__1::basic_string.4"* dereferenceable(24) %535, i64 1, i64 -1, %"class.std::__1::allocator.11"* dereferenceable(1) %536) #12
  %537 = load i8, i8* %473, align 1, !noalias !22
  %538 = icmp slt i8 %537, 0
  %539 = load i16*, i16** %470, align 8, !noalias !22
  %540 = load i64, i64* %471, align 8, !noalias !22
  %541 = zext i8 %537 to i64
  %542 = select i1 %538, i16* %539, i16* %475
  %543 = select i1 %538, i64 %540, i64 %541
  %544 = bitcast %"class.std::__1::basic_string.4"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %545 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %544, i64 0, i32 1, i32 1
  %546 = load i8, i8* %545, align 1, !noalias !22
  %547 = icmp slt i8 %546, 0
  br i1 %547, label %548, label %555

548:                                              ; preds = %534
  %549 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %550 = load i64, i64* %549, align 8, !noalias !22
  %551 = and i64 %550, 9223372036854775807
  %552 = add nsw i64 %551, -1
  %553 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %554 = load i64, i64* %553, align 8, !noalias !22
  br label %557

555:                                              ; preds = %534
  %556 = zext i8 %546 to i64
  br label %557

557:                                              ; preds = %555, %548
  %558 = phi i64 [ %552, %548 ], [ 10, %555 ]
  %559 = phi i64 [ %554, %548 ], [ %556, %555 ]
  %560 = sub i64 %558, %559
  %561 = icmp ult i64 %560, %543
  br i1 %561, label %723, label %562

562:                                              ; preds = %557
  %563 = icmp eq i64 %543, 0
  br i1 %563, label %726, label %564

564:                                              ; preds = %562
  %565 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load i16*, i16** %565, align 8, !noalias !22
  %567 = bitcast %"class.std::__1::basic_string.4"* %18 to i16*
  %568 = select i1 %547, i16* %566, i16* %567
  %569 = getelementptr inbounds i16, i16* %568, i64 %559
  %570 = icmp ult i64 %543, 16
  br i1 %570, label %660, label %571

571:                                              ; preds = %564
  %572 = add i64 %543, %559
  %573 = getelementptr i16, i16* %568, i64 %572
  %574 = getelementptr i16, i16* %542, i64 %543
  %575 = icmp ult i16* %569, %574
  %576 = icmp ult i16* %542, %573
  %577 = and i1 %575, %576
  br i1 %577, label %660, label %578

578:                                              ; preds = %571
  %579 = and i64 %543, -16
  %580 = sub i64 %543, %579
  %581 = getelementptr i16, i16* %542, i64 %579
  %582 = getelementptr i16, i16* %569, i64 %579
  %583 = add i64 %579, -16
  %584 = lshr exact i64 %583, 4
  %585 = add nuw nsw i64 %584, 1
  %586 = and i64 %585, 3
  %587 = icmp ult i64 %583, 48
  br i1 %587, label %639, label %588

588:                                              ; preds = %578
  %589 = sub nsw i64 %585, %586
  br label %590

590:                                              ; preds = %590, %588
  %591 = phi i64 [ 0, %588 ], [ %636, %590 ]
  %592 = phi i64 [ %589, %588 ], [ %637, %590 ]
  %593 = getelementptr i16, i16* %542, i64 %591
  %594 = getelementptr i16, i16* %569, i64 %591
  %595 = bitcast i16* %593 to <8 x i16>*
  %596 = load <8 x i16>, <8 x i16>* %595, align 2, !alias.scope !25, !noalias !22
  %597 = getelementptr i16, i16* %593, i64 8
  %598 = bitcast i16* %597 to <8 x i16>*
  %599 = load <8 x i16>, <8 x i16>* %598, align 2, !alias.scope !25, !noalias !22
  %600 = bitcast i16* %594 to <8 x i16>*
  store <8 x i16> %596, <8 x i16>* %600, align 2, !alias.scope !28, !noalias !30
  %601 = getelementptr i16, i16* %594, i64 8
  %602 = bitcast i16* %601 to <8 x i16>*
  store <8 x i16> %599, <8 x i16>* %602, align 2, !alias.scope !28, !noalias !30
  %603 = or i64 %591, 16
  %604 = getelementptr i16, i16* %542, i64 %603
  %605 = getelementptr i16, i16* %569, i64 %603
  %606 = bitcast i16* %604 to <8 x i16>*
  %607 = load <8 x i16>, <8 x i16>* %606, align 2, !alias.scope !25, !noalias !22
  %608 = getelementptr i16, i16* %604, i64 8
  %609 = bitcast i16* %608 to <8 x i16>*
  %610 = load <8 x i16>, <8 x i16>* %609, align 2, !alias.scope !25, !noalias !22
  %611 = bitcast i16* %605 to <8 x i16>*
  store <8 x i16> %607, <8 x i16>* %611, align 2, !alias.scope !28, !noalias !30
  %612 = getelementptr i16, i16* %605, i64 8
  %613 = bitcast i16* %612 to <8 x i16>*
  store <8 x i16> %610, <8 x i16>* %613, align 2, !alias.scope !28, !noalias !30
  %614 = or i64 %591, 32
  %615 = getelementptr i16, i16* %542, i64 %614
  %616 = getelementptr i16, i16* %569, i64 %614
  %617 = bitcast i16* %615 to <8 x i16>*
  %618 = load <8 x i16>, <8 x i16>* %617, align 2, !alias.scope !25, !noalias !22
  %619 = getelementptr i16, i16* %615, i64 8
  %620 = bitcast i16* %619 to <8 x i16>*
  %621 = load <8 x i16>, <8 x i16>* %620, align 2, !alias.scope !25, !noalias !22
  %622 = bitcast i16* %616 to <8 x i16>*
  store <8 x i16> %618, <8 x i16>* %622, align 2, !alias.scope !28, !noalias !30
  %623 = getelementptr i16, i16* %616, i64 8
  %624 = bitcast i16* %623 to <8 x i16>*
  store <8 x i16> %621, <8 x i16>* %624, align 2, !alias.scope !28, !noalias !30
  %625 = or i64 %591, 48
  %626 = getelementptr i16, i16* %542, i64 %625
  %627 = getelementptr i16, i16* %569, i64 %625
  %628 = bitcast i16* %626 to <8 x i16>*
  %629 = load <8 x i16>, <8 x i16>* %628, align 2, !alias.scope !25, !noalias !22
  %630 = getelementptr i16, i16* %626, i64 8
  %631 = bitcast i16* %630 to <8 x i16>*
  %632 = load <8 x i16>, <8 x i16>* %631, align 2, !alias.scope !25, !noalias !22
  %633 = bitcast i16* %627 to <8 x i16>*
  store <8 x i16> %629, <8 x i16>* %633, align 2, !alias.scope !28, !noalias !30
  %634 = getelementptr i16, i16* %627, i64 8
  %635 = bitcast i16* %634 to <8 x i16>*
  store <8 x i16> %632, <8 x i16>* %635, align 2, !alias.scope !28, !noalias !30
  %636 = add i64 %591, 64
  %637 = add i64 %592, -4
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %639, label %590, !llvm.loop !31

639:                                              ; preds = %590, %578
  %640 = phi i64 [ 0, %578 ], [ %636, %590 ]
  %641 = icmp eq i64 %586, 0
  br i1 %641, label %658, label %642

642:                                              ; preds = %639, %642
  %643 = phi i64 [ %655, %642 ], [ %640, %639 ]
  %644 = phi i64 [ %656, %642 ], [ %586, %639 ]
  %645 = getelementptr i16, i16* %542, i64 %643
  %646 = getelementptr i16, i16* %569, i64 %643
  %647 = bitcast i16* %645 to <8 x i16>*
  %648 = load <8 x i16>, <8 x i16>* %647, align 2, !alias.scope !25, !noalias !22
  %649 = getelementptr i16, i16* %645, i64 8
  %650 = bitcast i16* %649 to <8 x i16>*
  %651 = load <8 x i16>, <8 x i16>* %650, align 2, !alias.scope !25, !noalias !22
  %652 = bitcast i16* %646 to <8 x i16>*
  store <8 x i16> %648, <8 x i16>* %652, align 2, !alias.scope !28, !noalias !30
  %653 = getelementptr i16, i16* %646, i64 8
  %654 = bitcast i16* %653 to <8 x i16>*
  store <8 x i16> %651, <8 x i16>* %654, align 2, !alias.scope !28, !noalias !30
  %655 = add i64 %643, 16
  %656 = add i64 %644, -1
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %658, label %642, !llvm.loop !32

658:                                              ; preds = %642, %639
  %659 = icmp eq i64 %543, %579
  br i1 %659, label %713, label %660

660:                                              ; preds = %658, %571, %564
  %661 = phi i64 [ %543, %571 ], [ %543, %564 ], [ %580, %658 ]
  %662 = phi i16* [ %542, %571 ], [ %542, %564 ], [ %581, %658 ]
  %663 = phi i16* [ %569, %571 ], [ %569, %564 ], [ %582, %658 ]
  %664 = add i64 %661, -1
  %665 = and i64 %661, 7
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %678, label %667

667:                                              ; preds = %660, %667
  %668 = phi i64 [ %673, %667 ], [ %661, %660 ]
  %669 = phi i16* [ %675, %667 ], [ %662, %660 ]
  %670 = phi i16* [ %674, %667 ], [ %663, %660 ]
  %671 = phi i64 [ %676, %667 ], [ %665, %660 ]
  %672 = load i16, i16* %669, align 2, !noalias !22
  store i16 %672, i16* %670, align 2, !noalias !22
  %673 = add i64 %668, -1
  %674 = getelementptr inbounds i16, i16* %670, i64 1
  %675 = getelementptr inbounds i16, i16* %669, i64 1
  %676 = add i64 %671, -1
  %677 = icmp eq i64 %676, 0
  br i1 %677, label %678, label %667, !llvm.loop !33

678:                                              ; preds = %667, %660
  %679 = phi i64 [ %661, %660 ], [ %673, %667 ]
  %680 = phi i16* [ %662, %660 ], [ %675, %667 ]
  %681 = phi i16* [ %663, %660 ], [ %674, %667 ]
  %682 = icmp ult i64 %664, 7
  br i1 %682, label %713, label %683

683:                                              ; preds = %678, %683
  %684 = phi i64 [ %709, %683 ], [ %679, %678 ]
  %685 = phi i16* [ %711, %683 ], [ %680, %678 ]
  %686 = phi i16* [ %710, %683 ], [ %681, %678 ]
  %687 = load i16, i16* %685, align 2, !noalias !22
  store i16 %687, i16* %686, align 2, !noalias !22
  %688 = getelementptr inbounds i16, i16* %686, i64 1
  %689 = getelementptr inbounds i16, i16* %685, i64 1
  %690 = load i16, i16* %689, align 2, !noalias !22
  store i16 %690, i16* %688, align 2, !noalias !22
  %691 = getelementptr inbounds i16, i16* %686, i64 2
  %692 = getelementptr inbounds i16, i16* %685, i64 2
  %693 = load i16, i16* %692, align 2, !noalias !22
  store i16 %693, i16* %691, align 2, !noalias !22
  %694 = getelementptr inbounds i16, i16* %686, i64 3
  %695 = getelementptr inbounds i16, i16* %685, i64 3
  %696 = load i16, i16* %695, align 2, !noalias !22
  store i16 %696, i16* %694, align 2, !noalias !22
  %697 = getelementptr inbounds i16, i16* %686, i64 4
  %698 = getelementptr inbounds i16, i16* %685, i64 4
  %699 = load i16, i16* %698, align 2, !noalias !22
  store i16 %699, i16* %697, align 2, !noalias !22
  %700 = getelementptr inbounds i16, i16* %686, i64 5
  %701 = getelementptr inbounds i16, i16* %685, i64 5
  %702 = load i16, i16* %701, align 2, !noalias !22
  store i16 %702, i16* %700, align 2, !noalias !22
  %703 = getelementptr inbounds i16, i16* %686, i64 6
  %704 = getelementptr inbounds i16, i16* %685, i64 6
  %705 = load i16, i16* %704, align 2, !noalias !22
  store i16 %705, i16* %703, align 2, !noalias !22
  %706 = getelementptr inbounds i16, i16* %686, i64 7
  %707 = getelementptr inbounds i16, i16* %685, i64 7
  %708 = load i16, i16* %707, align 2, !noalias !22
  store i16 %708, i16* %706, align 2, !noalias !22
  %709 = add i64 %684, -8
  %710 = getelementptr inbounds i16, i16* %686, i64 8
  %711 = getelementptr inbounds i16, i16* %685, i64 8
  %712 = icmp eq i64 %709, 0
  br i1 %712, label %713, label %683, !llvm.loop !34

713:                                              ; preds = %678, %683, %658
  %714 = add i64 %559, %543
  %715 = load i8, i8* %545, align 1, !noalias !22
  %716 = icmp slt i8 %715, 0
  br i1 %716, label %717, label %719

717:                                              ; preds = %713
  %718 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %714, i64* %718, align 8, !noalias !22
  br label %721

719:                                              ; preds = %713
  %720 = trunc i64 %714 to i8
  store i8 %720, i8* %545, align 1, !noalias !22
  br label %721

721:                                              ; preds = %719, %717
  %722 = getelementptr inbounds i16, i16* %568, i64 %714
  store i16 0, i16* %722, align 2, !noalias !22
  br label %726

723:                                              ; preds = %557
  %724 = add i64 %559, %543
  %725 = sub i64 %724, %558
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %18, i64 %558, i64 %725, i64 %559, i64 %559, i64 0, i64 %543, i16* %542) #12, !noalias !22
  br label %726

726:                                              ; preds = %562, %721, %723
  %727 = bitcast %"class.std::__1::basic_string.4"* %18 to i8**
  %728 = bitcast %"class.std::__1::basic_string.4"* %18 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %731 = bitcast i64* %730 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %527, i8* align 8 %731, i64 15, i1 false)
  %732 = getelementptr inbounds i8, i8* %528, i64 23
  %733 = load i8, i8* %732, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %528, i8 0, i64 24, i1 false) #12, !noalias !22
  %734 = load i8, i8* %510, align 1
  %735 = icmp slt i8 %734, 0
  br i1 %735, label %736, label %739

736:                                              ; preds = %726
  %737 = bitcast %"class.std::__1::basic_string.4"* %13 to i8**
  %738 = load i8*, i8** %737, align 8
  call void @_ZdlPv(i8* %738) #14
  br label %739

739:                                              ; preds = %736, %726
  %740 = bitcast %"class.std::__1::basic_string.4"* %13 to i64*
  store i64 %729, i64* %740, align 8
  %741 = bitcast i64* %462 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %741, i8* nonnull align 8 %527, i64 15, i1 false)
  %742 = getelementptr inbounds i8, i8* %460, i64 23
  store i8 %733, i8* %742, align 1
  %743 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* nonnull %12, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13)
  %744 = load i8, i8* %545, align 1
  %745 = icmp slt i8 %744, 0
  br i1 %745, label %746, label %748

746:                                              ; preds = %739
  %747 = load i8*, i8** %727, align 8
  call void @_ZdlPv(i8* %747) #14
  br label %748

748:                                              ; preds = %739, %746
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %528) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %527)
  %749 = load i64, i64* %491, align 8
  %750 = load i64, i64* %493, align 8
  %751 = sub i64 %749, %750
  %752 = sdiv exact i64 %751, 24
  %753 = icmp ugt i64 %752, 1
  br i1 %753, label %756, label %754

754:                                              ; preds = %748
  %755 = bitcast %"class.std::__1::vector"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* nonnull %755) #13
  unreachable

756:                                              ; preds = %748
  %757 = inttoptr i64 %750 to %"class.std::__1::basic_string.4"*
  %758 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %757, i64 1
  %759 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* nonnull %8, %"class.std::__1::basic_string.4"* dereferenceable(24) %758)
  %760 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* nonnull %7, %"class.std::__1::basic_string.4"* dereferenceable(24) %759)
  %761 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %478, align 8
  br label %762

762:                                              ; preds = %756, %468
  %763 = phi %"class.std::__1::basic_string.4"* [ %761, %756 ], [ %498, %468 ]
  %764 = icmp eq %"class.std::__1::basic_string.4"* %763, null
  br i1 %764, label %786, label %765

765:                                              ; preds = %762
  %766 = bitcast %"class.std::__1::basic_string.4"* %763 to i8*
  %767 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %479, align 8
  %768 = icmp eq %"class.std::__1::basic_string.4"* %767, %763
  br i1 %768, label %784, label %769

769:                                              ; preds = %765, %779
  %770 = phi %"class.std::__1::basic_string.4"* [ %771, %779 ], [ %767, %765 ]
  %771 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %770, i64 -1
  %772 = bitcast %"class.std::__1::basic_string.4"* %771 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %773 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %772, i64 0, i32 1, i32 1
  %774 = load i8, i8* %773, align 1
  %775 = icmp slt i8 %774, 0
  br i1 %775, label %776, label %779

776:                                              ; preds = %769
  %777 = bitcast %"class.std::__1::basic_string.4"* %771 to i8**
  %778 = load i8*, i8** %777, align 8
  call void @_ZdlPv(i8* %778) #14
  br label %779

779:                                              ; preds = %776, %769
  %780 = icmp eq %"class.std::__1::basic_string.4"* %771, %763
  br i1 %780, label %781, label %769

781:                                              ; preds = %779
  %782 = bitcast %"class.std::__1::vector"* %16 to i8**
  %783 = load i8*, i8** %782, align 8
  br label %784

784:                                              ; preds = %781, %765
  %785 = phi i8* [ %783, %781 ], [ %766, %765 ]
  store %"class.std::__1::basic_string.4"* %763, %"class.std::__1::basic_string.4"** %479, align 8
  call void @_ZdlPv(i8* %785) #14
  br label %786

786:                                              ; preds = %762, %784
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %477) #12
  %787 = load i8, i8* %473, align 1
  %788 = icmp slt i8 %787, 0
  br i1 %788, label %789, label %792

789:                                              ; preds = %786
  %790 = bitcast %"class.std::__1::basic_string.4"* %15 to i8**
  %791 = load i8*, i8** %790, align 8
  call void @_ZdlPv(i8* %791) #14
  br label %792

792:                                              ; preds = %786, %789
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %469) #12
  br label %793

793:                                              ; preds = %792, %456
  %794 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %12, %"class.gfx::FontList"* %2) #12
  %795 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %7, %"class.gfx::FontList"* %2) #12
  %796 = fadd float %794, %795
  %797 = fcmp ugt float %796, %3
  br i1 %797, label %799, label %798

798:                                              ; preds = %793
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %7)
  br label %2691

799:                                              ; preds = %793
  %800 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13, %"class.gfx::FontList"* %2) #12
  %801 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %14, %"class.gfx::FontList"* %2) #12
  %802 = fadd float %800, %801
  %803 = fadd float %795, %802
  %804 = fcmp ugt float %803, %3
  br i1 %804, label %1001, label %805

805:                                              ; preds = %799
  %806 = bitcast %"class.std::__1::basic_string.4"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %806) #12
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string.4"* nonnull sret %19, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %14, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13)
  %807 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %807, i64 0, i32 1, i32 1
  %809 = load i8, i8* %808, align 1, !noalias !35
  %810 = icmp slt i8 %809, 0
  %811 = load i16*, i16** %420, align 8, !noalias !35
  %812 = load i64, i64* %421, align 8, !noalias !35
  %813 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %814 = zext i8 %809 to i64
  %815 = select i1 %810, i16* %811, i16* %813
  %816 = select i1 %810, i64 %812, i64 %814
  %817 = bitcast %"class.std::__1::basic_string.4"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %818 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %817, i64 0, i32 1, i32 1
  %819 = load i8, i8* %818, align 1, !noalias !35
  %820 = icmp slt i8 %819, 0
  br i1 %820, label %821, label %828

821:                                              ; preds = %805
  %822 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %823 = load i64, i64* %822, align 8, !noalias !35
  %824 = and i64 %823, 9223372036854775807
  %825 = add nsw i64 %824, -1
  %826 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %827 = load i64, i64* %826, align 8, !noalias !35
  br label %830

828:                                              ; preds = %805
  %829 = zext i8 %819 to i64
  br label %830

830:                                              ; preds = %828, %821
  %831 = phi i64 [ %825, %821 ], [ 10, %828 ]
  %832 = phi i64 [ %827, %821 ], [ %829, %828 ]
  %833 = sub i64 %831, %832
  %834 = icmp ult i64 %833, %816
  br i1 %834, label %996, label %835

835:                                              ; preds = %830
  %836 = icmp eq i64 %816, 0
  br i1 %836, label %999, label %837

837:                                              ; preds = %835
  %838 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %839 = load i16*, i16** %838, align 8, !noalias !35
  %840 = bitcast %"class.std::__1::basic_string.4"* %19 to i16*
  %841 = select i1 %820, i16* %839, i16* %840
  %842 = getelementptr inbounds i16, i16* %841, i64 %832
  %843 = icmp ult i64 %816, 16
  br i1 %843, label %933, label %844

844:                                              ; preds = %837
  %845 = add i64 %816, %832
  %846 = getelementptr i16, i16* %841, i64 %845
  %847 = getelementptr i16, i16* %815, i64 %816
  %848 = icmp ult i16* %842, %847
  %849 = icmp ult i16* %815, %846
  %850 = and i1 %848, %849
  br i1 %850, label %933, label %851

851:                                              ; preds = %844
  %852 = and i64 %816, -16
  %853 = sub i64 %816, %852
  %854 = getelementptr i16, i16* %815, i64 %852
  %855 = getelementptr i16, i16* %842, i64 %852
  %856 = add i64 %852, -16
  %857 = lshr exact i64 %856, 4
  %858 = add nuw nsw i64 %857, 1
  %859 = and i64 %858, 3
  %860 = icmp ult i64 %856, 48
  br i1 %860, label %912, label %861

861:                                              ; preds = %851
  %862 = sub nsw i64 %858, %859
  br label %863

863:                                              ; preds = %863, %861
  %864 = phi i64 [ 0, %861 ], [ %909, %863 ]
  %865 = phi i64 [ %862, %861 ], [ %910, %863 ]
  %866 = getelementptr i16, i16* %815, i64 %864
  %867 = getelementptr i16, i16* %842, i64 %864
  %868 = bitcast i16* %866 to <8 x i16>*
  %869 = load <8 x i16>, <8 x i16>* %868, align 2, !alias.scope !38, !noalias !35
  %870 = getelementptr i16, i16* %866, i64 8
  %871 = bitcast i16* %870 to <8 x i16>*
  %872 = load <8 x i16>, <8 x i16>* %871, align 2, !alias.scope !38, !noalias !35
  %873 = bitcast i16* %867 to <8 x i16>*
  store <8 x i16> %869, <8 x i16>* %873, align 2, !alias.scope !41, !noalias !43
  %874 = getelementptr i16, i16* %867, i64 8
  %875 = bitcast i16* %874 to <8 x i16>*
  store <8 x i16> %872, <8 x i16>* %875, align 2, !alias.scope !41, !noalias !43
  %876 = or i64 %864, 16
  %877 = getelementptr i16, i16* %815, i64 %876
  %878 = getelementptr i16, i16* %842, i64 %876
  %879 = bitcast i16* %877 to <8 x i16>*
  %880 = load <8 x i16>, <8 x i16>* %879, align 2, !alias.scope !38, !noalias !35
  %881 = getelementptr i16, i16* %877, i64 8
  %882 = bitcast i16* %881 to <8 x i16>*
  %883 = load <8 x i16>, <8 x i16>* %882, align 2, !alias.scope !38, !noalias !35
  %884 = bitcast i16* %878 to <8 x i16>*
  store <8 x i16> %880, <8 x i16>* %884, align 2, !alias.scope !41, !noalias !43
  %885 = getelementptr i16, i16* %878, i64 8
  %886 = bitcast i16* %885 to <8 x i16>*
  store <8 x i16> %883, <8 x i16>* %886, align 2, !alias.scope !41, !noalias !43
  %887 = or i64 %864, 32
  %888 = getelementptr i16, i16* %815, i64 %887
  %889 = getelementptr i16, i16* %842, i64 %887
  %890 = bitcast i16* %888 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !38, !noalias !35
  %892 = getelementptr i16, i16* %888, i64 8
  %893 = bitcast i16* %892 to <8 x i16>*
  %894 = load <8 x i16>, <8 x i16>* %893, align 2, !alias.scope !38, !noalias !35
  %895 = bitcast i16* %889 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %895, align 2, !alias.scope !41, !noalias !43
  %896 = getelementptr i16, i16* %889, i64 8
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %894, <8 x i16>* %897, align 2, !alias.scope !41, !noalias !43
  %898 = or i64 %864, 48
  %899 = getelementptr i16, i16* %815, i64 %898
  %900 = getelementptr i16, i16* %842, i64 %898
  %901 = bitcast i16* %899 to <8 x i16>*
  %902 = load <8 x i16>, <8 x i16>* %901, align 2, !alias.scope !38, !noalias !35
  %903 = getelementptr i16, i16* %899, i64 8
  %904 = bitcast i16* %903 to <8 x i16>*
  %905 = load <8 x i16>, <8 x i16>* %904, align 2, !alias.scope !38, !noalias !35
  %906 = bitcast i16* %900 to <8 x i16>*
  store <8 x i16> %902, <8 x i16>* %906, align 2, !alias.scope !41, !noalias !43
  %907 = getelementptr i16, i16* %900, i64 8
  %908 = bitcast i16* %907 to <8 x i16>*
  store <8 x i16> %905, <8 x i16>* %908, align 2, !alias.scope !41, !noalias !43
  %909 = add i64 %864, 64
  %910 = add i64 %865, -4
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %912, label %863, !llvm.loop !44

912:                                              ; preds = %863, %851
  %913 = phi i64 [ 0, %851 ], [ %909, %863 ]
  %914 = icmp eq i64 %859, 0
  br i1 %914, label %931, label %915

915:                                              ; preds = %912, %915
  %916 = phi i64 [ %928, %915 ], [ %913, %912 ]
  %917 = phi i64 [ %929, %915 ], [ %859, %912 ]
  %918 = getelementptr i16, i16* %815, i64 %916
  %919 = getelementptr i16, i16* %842, i64 %916
  %920 = bitcast i16* %918 to <8 x i16>*
  %921 = load <8 x i16>, <8 x i16>* %920, align 2, !alias.scope !38, !noalias !35
  %922 = getelementptr i16, i16* %918, i64 8
  %923 = bitcast i16* %922 to <8 x i16>*
  %924 = load <8 x i16>, <8 x i16>* %923, align 2, !alias.scope !38, !noalias !35
  %925 = bitcast i16* %919 to <8 x i16>*
  store <8 x i16> %921, <8 x i16>* %925, align 2, !alias.scope !41, !noalias !43
  %926 = getelementptr i16, i16* %919, i64 8
  %927 = bitcast i16* %926 to <8 x i16>*
  store <8 x i16> %924, <8 x i16>* %927, align 2, !alias.scope !41, !noalias !43
  %928 = add i64 %916, 16
  %929 = add i64 %917, -1
  %930 = icmp eq i64 %929, 0
  br i1 %930, label %931, label %915, !llvm.loop !45

931:                                              ; preds = %915, %912
  %932 = icmp eq i64 %816, %852
  br i1 %932, label %986, label %933

933:                                              ; preds = %931, %844, %837
  %934 = phi i64 [ %816, %844 ], [ %816, %837 ], [ %853, %931 ]
  %935 = phi i16* [ %815, %844 ], [ %815, %837 ], [ %854, %931 ]
  %936 = phi i16* [ %842, %844 ], [ %842, %837 ], [ %855, %931 ]
  %937 = add i64 %934, -1
  %938 = and i64 %934, 7
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %951, label %940

940:                                              ; preds = %933, %940
  %941 = phi i64 [ %946, %940 ], [ %934, %933 ]
  %942 = phi i16* [ %948, %940 ], [ %935, %933 ]
  %943 = phi i16* [ %947, %940 ], [ %936, %933 ]
  %944 = phi i64 [ %949, %940 ], [ %938, %933 ]
  %945 = load i16, i16* %942, align 2, !noalias !35
  store i16 %945, i16* %943, align 2, !noalias !35
  %946 = add i64 %941, -1
  %947 = getelementptr inbounds i16, i16* %943, i64 1
  %948 = getelementptr inbounds i16, i16* %942, i64 1
  %949 = add i64 %944, -1
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %951, label %940, !llvm.loop !46

951:                                              ; preds = %940, %933
  %952 = phi i64 [ %934, %933 ], [ %946, %940 ]
  %953 = phi i16* [ %935, %933 ], [ %948, %940 ]
  %954 = phi i16* [ %936, %933 ], [ %947, %940 ]
  %955 = icmp ult i64 %937, 7
  br i1 %955, label %986, label %956

956:                                              ; preds = %951, %956
  %957 = phi i64 [ %982, %956 ], [ %952, %951 ]
  %958 = phi i16* [ %984, %956 ], [ %953, %951 ]
  %959 = phi i16* [ %983, %956 ], [ %954, %951 ]
  %960 = load i16, i16* %958, align 2, !noalias !35
  store i16 %960, i16* %959, align 2, !noalias !35
  %961 = getelementptr inbounds i16, i16* %959, i64 1
  %962 = getelementptr inbounds i16, i16* %958, i64 1
  %963 = load i16, i16* %962, align 2, !noalias !35
  store i16 %963, i16* %961, align 2, !noalias !35
  %964 = getelementptr inbounds i16, i16* %959, i64 2
  %965 = getelementptr inbounds i16, i16* %958, i64 2
  %966 = load i16, i16* %965, align 2, !noalias !35
  store i16 %966, i16* %964, align 2, !noalias !35
  %967 = getelementptr inbounds i16, i16* %959, i64 3
  %968 = getelementptr inbounds i16, i16* %958, i64 3
  %969 = load i16, i16* %968, align 2, !noalias !35
  store i16 %969, i16* %967, align 2, !noalias !35
  %970 = getelementptr inbounds i16, i16* %959, i64 4
  %971 = getelementptr inbounds i16, i16* %958, i64 4
  %972 = load i16, i16* %971, align 2, !noalias !35
  store i16 %972, i16* %970, align 2, !noalias !35
  %973 = getelementptr inbounds i16, i16* %959, i64 5
  %974 = getelementptr inbounds i16, i16* %958, i64 5
  %975 = load i16, i16* %974, align 2, !noalias !35
  store i16 %975, i16* %973, align 2, !noalias !35
  %976 = getelementptr inbounds i16, i16* %959, i64 6
  %977 = getelementptr inbounds i16, i16* %958, i64 6
  %978 = load i16, i16* %977, align 2, !noalias !35
  store i16 %978, i16* %976, align 2, !noalias !35
  %979 = getelementptr inbounds i16, i16* %959, i64 7
  %980 = getelementptr inbounds i16, i16* %958, i64 7
  %981 = load i16, i16* %980, align 2, !noalias !35
  store i16 %981, i16* %979, align 2, !noalias !35
  %982 = add i64 %957, -8
  %983 = getelementptr inbounds i16, i16* %959, i64 8
  %984 = getelementptr inbounds i16, i16* %958, i64 8
  %985 = icmp eq i64 %982, 0
  br i1 %985, label %986, label %956, !llvm.loop !47

986:                                              ; preds = %951, %956, %931
  %987 = add i64 %832, %816
  %988 = load i8, i8* %818, align 1, !noalias !35
  %989 = icmp slt i8 %988, 0
  br i1 %989, label %990, label %992

990:                                              ; preds = %986
  %991 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %987, i64* %991, align 8, !noalias !35
  br label %994

992:                                              ; preds = %986
  %993 = trunc i64 %987 to i8
  store i8 %993, i8* %818, align 1, !noalias !35
  br label %994

994:                                              ; preds = %992, %990
  %995 = getelementptr inbounds i16, i16* %841, i64 %987
  store i16 0, i16* %995, align 2, !noalias !35
  br label %999

996:                                              ; preds = %830
  %997 = add i64 %832, %816
  %998 = sub i64 %997, %831
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %19, i64 %831, i64 %998, i64 %832, i64 %832, i64 0, i64 %816, i16* %815) #12, !noalias !35
  br label %999

999:                                              ; preds = %996, %994, %835
  %1000 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1000, i8* nonnull align 8 %806, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %806) #12
  br label %2691

1001:                                             ; preds = %799
  %1002 = bitcast %"class.std::__1::basic_string.4"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1002) #12
  %1003 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1002, i8 0, i64 24, i1 false) #12
  %1004 = bitcast %"class.std::__1::basic_string.4"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1004) #12
  %1005 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  %1006 = icmp eq i16 %1005, 0
  br i1 %1006, label %1007, label %1011

1007:                                             ; preds = %1001
  %1008 = bitcast %"class.std::__1::basic_string.4"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1009 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1008, i64 0, i32 1, i32 1
  store i8 0, i8* %1009, align 1
  %1010 = bitcast %"class.std::__1::basic_string.4"* %21 to i16*
  br label %1198

1011:                                             ; preds = %1001, %1011
  %1012 = phi i64 [ %1014, %1011 ], [ 0, %1001 ]
  %1013 = phi i16* [ %1015, %1011 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %1001 ]
  %1014 = add i64 %1012, 1
  %1015 = getelementptr inbounds i16, i16* %1013, i64 1
  %1016 = load i16, i16* %1015, align 2
  %1017 = icmp eq i16 %1016, 0
  br i1 %1017, label %1018, label %1011

1018:                                             ; preds = %1011
  %1019 = icmp ugt i64 %1014, 9223372036854775791
  br i1 %1019, label %1020, label %1022

1020:                                             ; preds = %1018
  %1021 = bitcast %"class.std::__1::basic_string.4"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1021) #13
  unreachable

1022:                                             ; preds = %1018
  %1023 = icmp ult i64 %1014, 11
  br i1 %1023, label %1037, label %1024

1024:                                             ; preds = %1022
  %1025 = add nuw nsw i64 %1012, 9
  %1026 = and i64 %1025, -8
  %1027 = icmp slt i64 %1026, 0
  br i1 %1027, label %1028, label %1029

1028:                                             ; preds = %1024
  call void @abort() #13
  unreachable

1029:                                             ; preds = %1024
  %1030 = shl i64 %1026, 1
  %1031 = call i8* @_Znwm(i64 %1030) #14
  %1032 = bitcast i8* %1031 to i16*
  %1033 = bitcast %"class.std::__1::basic_string.4"* %21 to i8**
  store i8* %1031, i8** %1033, align 8
  %1034 = or i64 %1026, -9223372036854775808
  %1035 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1034, i64* %1035, align 8
  %1036 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1014, i64* %1036, align 8
  br label %1043

1037:                                             ; preds = %1022
  %1038 = trunc i64 %1014 to i8
  %1039 = bitcast %"class.std::__1::basic_string.4"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1040 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1039, i64 0, i32 1, i32 1
  store i8 %1038, i8* %1040, align 1
  %1041 = bitcast %"class.std::__1::basic_string.4"* %21 to i16*
  %1042 = icmp eq i64 %1014, 0
  br i1 %1042, label %1198, label %1043

1043:                                             ; preds = %1037, %1029
  %1044 = phi i16* [ %1032, %1029 ], [ %1041, %1037 ]
  store i16 %1005, i16* %1044, align 2
  %1045 = icmp eq i64 %1012, 0
  br i1 %1045, label %1196, label %1046

1046:                                             ; preds = %1043
  %1047 = icmp ult i64 %1012, 16
  br i1 %1047, label %1143, label %1048

1048:                                             ; preds = %1046
  %1049 = getelementptr i16, i16* %1044, i64 1
  %1050 = getelementptr i16, i16* %1044, i64 %1014
  %1051 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %1014
  %1052 = icmp ult i16* %1049, %1051
  %1053 = icmp ugt i16* %1050, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %1054 = and i1 %1052, %1053
  br i1 %1054, label %1143, label %1055

1055:                                             ; preds = %1048
  %1056 = and i64 %1012, -16
  %1057 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1056
  %1058 = sub i64 %1012, %1056
  %1059 = getelementptr i16, i16* %1044, i64 %1056
  %1060 = add i64 %1056, -16
  %1061 = lshr exact i64 %1060, 4
  %1062 = add nuw nsw i64 %1061, 1
  %1063 = and i64 %1062, 3
  %1064 = icmp ult i64 %1060, 48
  br i1 %1064, label %1120, label %1065

1065:                                             ; preds = %1055
  %1066 = sub nsw i64 %1062, %1063
  %1067 = getelementptr i16, i16* %1044, i64 1
  %1068 = getelementptr i16, i16* %1044, i64 1
  %1069 = getelementptr i16, i16* %1044, i64 1
  %1070 = getelementptr i16, i16* %1044, i64 1
  br label %1071

1071:                                             ; preds = %1071, %1065
  %1072 = phi i64 [ 0, %1065 ], [ %1117, %1071 ]
  %1073 = phi i64 [ %1066, %1065 ], [ %1118, %1071 ]
  %1074 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1072
  %1075 = getelementptr inbounds i16, i16* %1067, i64 %1072
  %1076 = bitcast i16* %1074 to <8 x i16>*
  %1077 = load <8 x i16>, <8 x i16>* %1076, align 2, !alias.scope !48
  %1078 = getelementptr i16, i16* %1074, i64 8
  %1079 = bitcast i16* %1078 to <8 x i16>*
  %1080 = load <8 x i16>, <8 x i16>* %1079, align 2, !alias.scope !48
  %1081 = bitcast i16* %1075 to <8 x i16>*
  store <8 x i16> %1077, <8 x i16>* %1081, align 2, !alias.scope !51, !noalias !48
  %1082 = getelementptr inbounds i16, i16* %1075, i64 8
  %1083 = bitcast i16* %1082 to <8 x i16>*
  store <8 x i16> %1080, <8 x i16>* %1083, align 2, !alias.scope !51, !noalias !48
  %1084 = or i64 %1072, 16
  %1085 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1084
  %1086 = getelementptr inbounds i16, i16* %1068, i64 %1084
  %1087 = bitcast i16* %1085 to <8 x i16>*
  %1088 = load <8 x i16>, <8 x i16>* %1087, align 2, !alias.scope !48
  %1089 = getelementptr i16, i16* %1085, i64 8
  %1090 = bitcast i16* %1089 to <8 x i16>*
  %1091 = load <8 x i16>, <8 x i16>* %1090, align 2, !alias.scope !48
  %1092 = bitcast i16* %1086 to <8 x i16>*
  store <8 x i16> %1088, <8 x i16>* %1092, align 2, !alias.scope !51, !noalias !48
  %1093 = getelementptr inbounds i16, i16* %1086, i64 8
  %1094 = bitcast i16* %1093 to <8 x i16>*
  store <8 x i16> %1091, <8 x i16>* %1094, align 2, !alias.scope !51, !noalias !48
  %1095 = or i64 %1072, 32
  %1096 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1095
  %1097 = getelementptr inbounds i16, i16* %1069, i64 %1095
  %1098 = bitcast i16* %1096 to <8 x i16>*
  %1099 = load <8 x i16>, <8 x i16>* %1098, align 2, !alias.scope !48
  %1100 = getelementptr i16, i16* %1096, i64 8
  %1101 = bitcast i16* %1100 to <8 x i16>*
  %1102 = load <8 x i16>, <8 x i16>* %1101, align 2, !alias.scope !48
  %1103 = bitcast i16* %1097 to <8 x i16>*
  store <8 x i16> %1099, <8 x i16>* %1103, align 2, !alias.scope !51, !noalias !48
  %1104 = getelementptr inbounds i16, i16* %1097, i64 8
  %1105 = bitcast i16* %1104 to <8 x i16>*
  store <8 x i16> %1102, <8 x i16>* %1105, align 2, !alias.scope !51, !noalias !48
  %1106 = or i64 %1072, 48
  %1107 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1106
  %1108 = getelementptr inbounds i16, i16* %1070, i64 %1106
  %1109 = bitcast i16* %1107 to <8 x i16>*
  %1110 = load <8 x i16>, <8 x i16>* %1109, align 2, !alias.scope !48
  %1111 = getelementptr i16, i16* %1107, i64 8
  %1112 = bitcast i16* %1111 to <8 x i16>*
  %1113 = load <8 x i16>, <8 x i16>* %1112, align 2, !alias.scope !48
  %1114 = bitcast i16* %1108 to <8 x i16>*
  store <8 x i16> %1110, <8 x i16>* %1114, align 2, !alias.scope !51, !noalias !48
  %1115 = getelementptr inbounds i16, i16* %1108, i64 8
  %1116 = bitcast i16* %1115 to <8 x i16>*
  store <8 x i16> %1113, <8 x i16>* %1116, align 2, !alias.scope !51, !noalias !48
  %1117 = add i64 %1072, 64
  %1118 = add i64 %1073, -4
  %1119 = icmp eq i64 %1118, 0
  br i1 %1119, label %1120, label %1071, !llvm.loop !53

1120:                                             ; preds = %1071, %1055
  %1121 = phi i64 [ 0, %1055 ], [ %1117, %1071 ]
  %1122 = icmp eq i64 %1063, 0
  br i1 %1122, label %1141, label %1123

1123:                                             ; preds = %1120
  %1124 = getelementptr i16, i16* %1044, i64 1
  br label %1125

1125:                                             ; preds = %1125, %1123
  %1126 = phi i64 [ %1121, %1123 ], [ %1138, %1125 ]
  %1127 = phi i64 [ %1063, %1123 ], [ %1139, %1125 ]
  %1128 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1126
  %1129 = getelementptr inbounds i16, i16* %1124, i64 %1126
  %1130 = bitcast i16* %1128 to <8 x i16>*
  %1131 = load <8 x i16>, <8 x i16>* %1130, align 2, !alias.scope !48
  %1132 = getelementptr i16, i16* %1128, i64 8
  %1133 = bitcast i16* %1132 to <8 x i16>*
  %1134 = load <8 x i16>, <8 x i16>* %1133, align 2, !alias.scope !48
  %1135 = bitcast i16* %1129 to <8 x i16>*
  store <8 x i16> %1131, <8 x i16>* %1135, align 2, !alias.scope !51, !noalias !48
  %1136 = getelementptr inbounds i16, i16* %1129, i64 8
  %1137 = bitcast i16* %1136 to <8 x i16>*
  store <8 x i16> %1134, <8 x i16>* %1137, align 2, !alias.scope !51, !noalias !48
  %1138 = add i64 %1126, 16
  %1139 = add i64 %1127, -1
  %1140 = icmp eq i64 %1139, 0
  br i1 %1140, label %1141, label %1125, !llvm.loop !54

1141:                                             ; preds = %1125, %1120
  %1142 = icmp eq i64 %1012, %1056
  br i1 %1142, label %1196, label %1143

1143:                                             ; preds = %1141, %1048, %1046
  %1144 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %1048 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %1046 ], [ %1057, %1141 ]
  %1145 = phi i64 [ %1012, %1048 ], [ %1012, %1046 ], [ %1058, %1141 ]
  %1146 = phi i16* [ %1044, %1048 ], [ %1044, %1046 ], [ %1059, %1141 ]
  %1147 = add i64 %1145, -1
  %1148 = and i64 %1145, 7
  %1149 = icmp eq i64 %1148, 0
  br i1 %1149, label %1161, label %1150

1150:                                             ; preds = %1143, %1150
  %1151 = phi i16* [ %1158, %1150 ], [ %1144, %1143 ]
  %1152 = phi i64 [ %1157, %1150 ], [ %1145, %1143 ]
  %1153 = phi i16* [ %1155, %1150 ], [ %1146, %1143 ]
  %1154 = phi i64 [ %1159, %1150 ], [ %1148, %1143 ]
  %1155 = getelementptr inbounds i16, i16* %1153, i64 1
  %1156 = load i16, i16* %1151, align 2
  store i16 %1156, i16* %1155, align 2
  %1157 = add i64 %1152, -1
  %1158 = getelementptr inbounds i16, i16* %1151, i64 1
  %1159 = add i64 %1154, -1
  %1160 = icmp eq i64 %1159, 0
  br i1 %1160, label %1161, label %1150, !llvm.loop !55

1161:                                             ; preds = %1150, %1143
  %1162 = phi i16* [ %1144, %1143 ], [ %1158, %1150 ]
  %1163 = phi i64 [ %1145, %1143 ], [ %1157, %1150 ]
  %1164 = phi i16* [ %1146, %1143 ], [ %1155, %1150 ]
  %1165 = icmp ult i64 %1147, 7
  br i1 %1165, label %1196, label %1166

1166:                                             ; preds = %1161, %1166
  %1167 = phi i16* [ %1194, %1166 ], [ %1162, %1161 ]
  %1168 = phi i64 [ %1193, %1166 ], [ %1163, %1161 ]
  %1169 = phi i16* [ %1191, %1166 ], [ %1164, %1161 ]
  %1170 = getelementptr inbounds i16, i16* %1169, i64 1
  %1171 = load i16, i16* %1167, align 2
  store i16 %1171, i16* %1170, align 2
  %1172 = getelementptr inbounds i16, i16* %1167, i64 1
  %1173 = getelementptr inbounds i16, i16* %1169, i64 2
  %1174 = load i16, i16* %1172, align 2
  store i16 %1174, i16* %1173, align 2
  %1175 = getelementptr inbounds i16, i16* %1167, i64 2
  %1176 = getelementptr inbounds i16, i16* %1169, i64 3
  %1177 = load i16, i16* %1175, align 2
  store i16 %1177, i16* %1176, align 2
  %1178 = getelementptr inbounds i16, i16* %1167, i64 3
  %1179 = getelementptr inbounds i16, i16* %1169, i64 4
  %1180 = load i16, i16* %1178, align 2
  store i16 %1180, i16* %1179, align 2
  %1181 = getelementptr inbounds i16, i16* %1167, i64 4
  %1182 = getelementptr inbounds i16, i16* %1169, i64 5
  %1183 = load i16, i16* %1181, align 2
  store i16 %1183, i16* %1182, align 2
  %1184 = getelementptr inbounds i16, i16* %1167, i64 5
  %1185 = getelementptr inbounds i16, i16* %1169, i64 6
  %1186 = load i16, i16* %1184, align 2
  store i16 %1186, i16* %1185, align 2
  %1187 = getelementptr inbounds i16, i16* %1167, i64 6
  %1188 = getelementptr inbounds i16, i16* %1169, i64 7
  %1189 = load i16, i16* %1187, align 2
  store i16 %1189, i16* %1188, align 2
  %1190 = getelementptr inbounds i16, i16* %1167, i64 7
  %1191 = getelementptr inbounds i16, i16* %1169, i64 8
  %1192 = load i16, i16* %1190, align 2
  store i16 %1192, i16* %1191, align 2
  %1193 = add i64 %1168, -8
  %1194 = getelementptr inbounds i16, i16* %1167, i64 8
  %1195 = icmp eq i64 %1193, 0
  br i1 %1195, label %1196, label %1166, !llvm.loop !56

1196:                                             ; preds = %1161, %1166, %1141, %1043
  %1197 = bitcast %"class.std::__1::basic_string.4"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %1198

1198:                                             ; preds = %1196, %1007, %1037
  %1199 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %1197, %1196 ], [ %1008, %1007 ], [ %1039, %1037 ]
  %1200 = phi i64 [ %1014, %1196 ], [ 0, %1007 ], [ 0, %1037 ]
  %1201 = phi i16* [ %1044, %1196 ], [ %1010, %1007 ], [ %1041, %1037 ]
  %1202 = getelementptr inbounds i16, i16* %1201, i64 %1200
  store i16 0, i16* %1202, align 2
  %1203 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %21, %"class.gfx::FontList"* %2) #12
  %1204 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1199, i64 0, i32 1, i32 1
  %1205 = load i8, i8* %1204, align 1
  %1206 = icmp slt i8 %1205, 0
  br i1 %1206, label %1207, label %1210

1207:                                             ; preds = %1198
  %1208 = bitcast %"class.std::__1::basic_string.4"* %21 to i8**
  %1209 = load i8*, i8** %1208, align 8
  call void @_ZdlPv(i8* %1209) #14
  br label %1210

1210:                                             ; preds = %1198, %1207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1004) #12
  %1211 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6, i32 1
  %1212 = load i32, i32* %1211, align 4
  %1213 = icmp sgt i32 %1212, 0
  br i1 %1213, label %1214, label %1460

1214:                                             ; preds = %1210
  %1215 = getelementptr inbounds [15 x i8], [15 x i8]* %22, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %1215)
  %1216 = bitcast %"class.std::__1::basic_string.4"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1216) #12
  %1217 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6, i32 0
  %1218 = load i32, i32* %1217, align 8
  %1219 = sext i32 %1218 to i64
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.4"* nonnull %23, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, i64 %1219, i64 -1, %"class.std::__1::allocator.11"* nonnull dereferenceable(1) %449) #12
  %1220 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.4"* nonnull %23, i64 0, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0), i64 1) #12, !noalias !57
  %1221 = bitcast %"class.std::__1::basic_string.4"* %1220 to i8*
  %1222 = bitcast %"class.std::__1::basic_string.4"* %1220 to i64*
  %1223 = load i64, i64* %1222, align 8
  %1224 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1225 = bitcast i64* %1224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1215, i8* align 8 %1225, i64 15, i1 false)
  %1226 = getelementptr inbounds i8, i8* %1221, i64 23
  %1227 = load i8, i8* %1226, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %1221, i8 0, i64 24, i1 false) #12, !noalias !57
  %1228 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1229 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1228, i64 0, i32 1, i32 1
  %1230 = load i8, i8* %1229, align 1
  %1231 = icmp slt i8 %1230, 0
  br i1 %1231, label %1232, label %1235

1232:                                             ; preds = %1214
  %1233 = bitcast %"class.std::__1::basic_string.4"* %20 to i8**
  %1234 = load i8*, i8** %1233, align 8
  call void @_ZdlPv(i8* %1234) #14
  br label %1235

1235:                                             ; preds = %1232, %1214
  %1236 = bitcast %"class.std::__1::basic_string.4"* %20 to i64*
  store i64 %1223, i64* %1236, align 8
  %1237 = bitcast i64* %1003 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1237, i8* nonnull align 8 %1215, i64 15, i1 false)
  %1238 = getelementptr inbounds i8, i8* %1002, i64 23
  store i8 %1227, i8* %1238, align 1
  %1239 = bitcast %"class.std::__1::basic_string.4"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1240 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1239, i64 0, i32 1, i32 1
  %1241 = load i8, i8* %1240, align 1
  %1242 = icmp slt i8 %1241, 0
  br i1 %1242, label %1243, label %1246

1243:                                             ; preds = %1235
  %1244 = bitcast %"class.std::__1::basic_string.4"* %23 to i8**
  %1245 = load i8*, i8** %1244, align 8
  call void @_ZdlPv(i8* %1245) #14
  br label %1246

1246:                                             ; preds = %1235, %1243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1216) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1215)
  %1247 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %20, %"class.gfx::FontList"* %2) #12
  %1248 = fsub float %803, %1247
  %1249 = fcmp ugt float %1248, %3
  br i1 %1249, label %1460, label %1250

1250:                                             ; preds = %1246
  %1251 = bitcast %"class.std::__1::basic_string.4"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1251) #12
  %1252 = bitcast %"class.std::__1::basic_string.4"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1252) #12
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string.4"* nonnull sret %25, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %14, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13)
  %1253 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1254 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1253, i64 0, i32 1, i32 1
  %1255 = load i8, i8* %1254, align 1, !noalias !60
  %1256 = icmp slt i8 %1255, 0
  %1257 = load i16*, i16** %420, align 8, !noalias !60
  %1258 = load i64, i64* %421, align 8, !noalias !60
  %1259 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %1260 = zext i8 %1255 to i64
  %1261 = select i1 %1256, i16* %1257, i16* %1259
  %1262 = select i1 %1256, i64 %1258, i64 %1260
  %1263 = bitcast %"class.std::__1::basic_string.4"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1264 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1263, i64 0, i32 1, i32 1
  %1265 = load i8, i8* %1264, align 1, !noalias !60
  %1266 = icmp slt i8 %1265, 0
  br i1 %1266, label %1267, label %1274

1267:                                             ; preds = %1250
  %1268 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1269 = load i64, i64* %1268, align 8, !noalias !60
  %1270 = and i64 %1269, 9223372036854775807
  %1271 = add nsw i64 %1270, -1
  %1272 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1273 = load i64, i64* %1272, align 8, !noalias !60
  br label %1276

1274:                                             ; preds = %1250
  %1275 = zext i8 %1265 to i64
  br label %1276

1276:                                             ; preds = %1274, %1267
  %1277 = phi i64 [ %1271, %1267 ], [ 10, %1274 ]
  %1278 = phi i64 [ %1273, %1267 ], [ %1275, %1274 ]
  %1279 = sub i64 %1277, %1278
  %1280 = icmp ult i64 %1279, %1262
  br i1 %1280, label %1442, label %1281

1281:                                             ; preds = %1276
  %1282 = icmp eq i64 %1262, 0
  br i1 %1282, label %1445, label %1283

1283:                                             ; preds = %1281
  %1284 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1285 = load i16*, i16** %1284, align 8, !noalias !60
  %1286 = bitcast %"class.std::__1::basic_string.4"* %25 to i16*
  %1287 = select i1 %1266, i16* %1285, i16* %1286
  %1288 = getelementptr inbounds i16, i16* %1287, i64 %1278
  %1289 = icmp ult i64 %1262, 16
  br i1 %1289, label %1379, label %1290

1290:                                             ; preds = %1283
  %1291 = add i64 %1262, %1278
  %1292 = getelementptr i16, i16* %1287, i64 %1291
  %1293 = getelementptr i16, i16* %1261, i64 %1262
  %1294 = icmp ult i16* %1288, %1293
  %1295 = icmp ult i16* %1261, %1292
  %1296 = and i1 %1294, %1295
  br i1 %1296, label %1379, label %1297

1297:                                             ; preds = %1290
  %1298 = and i64 %1262, -16
  %1299 = sub i64 %1262, %1298
  %1300 = getelementptr i16, i16* %1261, i64 %1298
  %1301 = getelementptr i16, i16* %1288, i64 %1298
  %1302 = add i64 %1298, -16
  %1303 = lshr exact i64 %1302, 4
  %1304 = add nuw nsw i64 %1303, 1
  %1305 = and i64 %1304, 3
  %1306 = icmp ult i64 %1302, 48
  br i1 %1306, label %1358, label %1307

1307:                                             ; preds = %1297
  %1308 = sub nsw i64 %1304, %1305
  br label %1309

1309:                                             ; preds = %1309, %1307
  %1310 = phi i64 [ 0, %1307 ], [ %1355, %1309 ]
  %1311 = phi i64 [ %1308, %1307 ], [ %1356, %1309 ]
  %1312 = getelementptr i16, i16* %1261, i64 %1310
  %1313 = getelementptr i16, i16* %1288, i64 %1310
  %1314 = bitcast i16* %1312 to <8 x i16>*
  %1315 = load <8 x i16>, <8 x i16>* %1314, align 2, !alias.scope !63, !noalias !60
  %1316 = getelementptr i16, i16* %1312, i64 8
  %1317 = bitcast i16* %1316 to <8 x i16>*
  %1318 = load <8 x i16>, <8 x i16>* %1317, align 2, !alias.scope !63, !noalias !60
  %1319 = bitcast i16* %1313 to <8 x i16>*
  store <8 x i16> %1315, <8 x i16>* %1319, align 2, !alias.scope !66, !noalias !68
  %1320 = getelementptr i16, i16* %1313, i64 8
  %1321 = bitcast i16* %1320 to <8 x i16>*
  store <8 x i16> %1318, <8 x i16>* %1321, align 2, !alias.scope !66, !noalias !68
  %1322 = or i64 %1310, 16
  %1323 = getelementptr i16, i16* %1261, i64 %1322
  %1324 = getelementptr i16, i16* %1288, i64 %1322
  %1325 = bitcast i16* %1323 to <8 x i16>*
  %1326 = load <8 x i16>, <8 x i16>* %1325, align 2, !alias.scope !63, !noalias !60
  %1327 = getelementptr i16, i16* %1323, i64 8
  %1328 = bitcast i16* %1327 to <8 x i16>*
  %1329 = load <8 x i16>, <8 x i16>* %1328, align 2, !alias.scope !63, !noalias !60
  %1330 = bitcast i16* %1324 to <8 x i16>*
  store <8 x i16> %1326, <8 x i16>* %1330, align 2, !alias.scope !66, !noalias !68
  %1331 = getelementptr i16, i16* %1324, i64 8
  %1332 = bitcast i16* %1331 to <8 x i16>*
  store <8 x i16> %1329, <8 x i16>* %1332, align 2, !alias.scope !66, !noalias !68
  %1333 = or i64 %1310, 32
  %1334 = getelementptr i16, i16* %1261, i64 %1333
  %1335 = getelementptr i16, i16* %1288, i64 %1333
  %1336 = bitcast i16* %1334 to <8 x i16>*
  %1337 = load <8 x i16>, <8 x i16>* %1336, align 2, !alias.scope !63, !noalias !60
  %1338 = getelementptr i16, i16* %1334, i64 8
  %1339 = bitcast i16* %1338 to <8 x i16>*
  %1340 = load <8 x i16>, <8 x i16>* %1339, align 2, !alias.scope !63, !noalias !60
  %1341 = bitcast i16* %1335 to <8 x i16>*
  store <8 x i16> %1337, <8 x i16>* %1341, align 2, !alias.scope !66, !noalias !68
  %1342 = getelementptr i16, i16* %1335, i64 8
  %1343 = bitcast i16* %1342 to <8 x i16>*
  store <8 x i16> %1340, <8 x i16>* %1343, align 2, !alias.scope !66, !noalias !68
  %1344 = or i64 %1310, 48
  %1345 = getelementptr i16, i16* %1261, i64 %1344
  %1346 = getelementptr i16, i16* %1288, i64 %1344
  %1347 = bitcast i16* %1345 to <8 x i16>*
  %1348 = load <8 x i16>, <8 x i16>* %1347, align 2, !alias.scope !63, !noalias !60
  %1349 = getelementptr i16, i16* %1345, i64 8
  %1350 = bitcast i16* %1349 to <8 x i16>*
  %1351 = load <8 x i16>, <8 x i16>* %1350, align 2, !alias.scope !63, !noalias !60
  %1352 = bitcast i16* %1346 to <8 x i16>*
  store <8 x i16> %1348, <8 x i16>* %1352, align 2, !alias.scope !66, !noalias !68
  %1353 = getelementptr i16, i16* %1346, i64 8
  %1354 = bitcast i16* %1353 to <8 x i16>*
  store <8 x i16> %1351, <8 x i16>* %1354, align 2, !alias.scope !66, !noalias !68
  %1355 = add i64 %1310, 64
  %1356 = add i64 %1311, -4
  %1357 = icmp eq i64 %1356, 0
  br i1 %1357, label %1358, label %1309, !llvm.loop !69

1358:                                             ; preds = %1309, %1297
  %1359 = phi i64 [ 0, %1297 ], [ %1355, %1309 ]
  %1360 = icmp eq i64 %1305, 0
  br i1 %1360, label %1377, label %1361

1361:                                             ; preds = %1358, %1361
  %1362 = phi i64 [ %1374, %1361 ], [ %1359, %1358 ]
  %1363 = phi i64 [ %1375, %1361 ], [ %1305, %1358 ]
  %1364 = getelementptr i16, i16* %1261, i64 %1362
  %1365 = getelementptr i16, i16* %1288, i64 %1362
  %1366 = bitcast i16* %1364 to <8 x i16>*
  %1367 = load <8 x i16>, <8 x i16>* %1366, align 2, !alias.scope !63, !noalias !60
  %1368 = getelementptr i16, i16* %1364, i64 8
  %1369 = bitcast i16* %1368 to <8 x i16>*
  %1370 = load <8 x i16>, <8 x i16>* %1369, align 2, !alias.scope !63, !noalias !60
  %1371 = bitcast i16* %1365 to <8 x i16>*
  store <8 x i16> %1367, <8 x i16>* %1371, align 2, !alias.scope !66, !noalias !68
  %1372 = getelementptr i16, i16* %1365, i64 8
  %1373 = bitcast i16* %1372 to <8 x i16>*
  store <8 x i16> %1370, <8 x i16>* %1373, align 2, !alias.scope !66, !noalias !68
  %1374 = add i64 %1362, 16
  %1375 = add i64 %1363, -1
  %1376 = icmp eq i64 %1375, 0
  br i1 %1376, label %1377, label %1361, !llvm.loop !70

1377:                                             ; preds = %1361, %1358
  %1378 = icmp eq i64 %1262, %1298
  br i1 %1378, label %1432, label %1379

1379:                                             ; preds = %1377, %1290, %1283
  %1380 = phi i64 [ %1262, %1290 ], [ %1262, %1283 ], [ %1299, %1377 ]
  %1381 = phi i16* [ %1261, %1290 ], [ %1261, %1283 ], [ %1300, %1377 ]
  %1382 = phi i16* [ %1288, %1290 ], [ %1288, %1283 ], [ %1301, %1377 ]
  %1383 = add i64 %1380, -1
  %1384 = and i64 %1380, 7
  %1385 = icmp eq i64 %1384, 0
  br i1 %1385, label %1397, label %1386

1386:                                             ; preds = %1379, %1386
  %1387 = phi i64 [ %1392, %1386 ], [ %1380, %1379 ]
  %1388 = phi i16* [ %1394, %1386 ], [ %1381, %1379 ]
  %1389 = phi i16* [ %1393, %1386 ], [ %1382, %1379 ]
  %1390 = phi i64 [ %1395, %1386 ], [ %1384, %1379 ]
  %1391 = load i16, i16* %1388, align 2, !noalias !60
  store i16 %1391, i16* %1389, align 2, !noalias !60
  %1392 = add i64 %1387, -1
  %1393 = getelementptr inbounds i16, i16* %1389, i64 1
  %1394 = getelementptr inbounds i16, i16* %1388, i64 1
  %1395 = add i64 %1390, -1
  %1396 = icmp eq i64 %1395, 0
  br i1 %1396, label %1397, label %1386, !llvm.loop !71

1397:                                             ; preds = %1386, %1379
  %1398 = phi i64 [ %1380, %1379 ], [ %1392, %1386 ]
  %1399 = phi i16* [ %1381, %1379 ], [ %1394, %1386 ]
  %1400 = phi i16* [ %1382, %1379 ], [ %1393, %1386 ]
  %1401 = icmp ult i64 %1383, 7
  br i1 %1401, label %1432, label %1402

1402:                                             ; preds = %1397, %1402
  %1403 = phi i64 [ %1428, %1402 ], [ %1398, %1397 ]
  %1404 = phi i16* [ %1430, %1402 ], [ %1399, %1397 ]
  %1405 = phi i16* [ %1429, %1402 ], [ %1400, %1397 ]
  %1406 = load i16, i16* %1404, align 2, !noalias !60
  store i16 %1406, i16* %1405, align 2, !noalias !60
  %1407 = getelementptr inbounds i16, i16* %1405, i64 1
  %1408 = getelementptr inbounds i16, i16* %1404, i64 1
  %1409 = load i16, i16* %1408, align 2, !noalias !60
  store i16 %1409, i16* %1407, align 2, !noalias !60
  %1410 = getelementptr inbounds i16, i16* %1405, i64 2
  %1411 = getelementptr inbounds i16, i16* %1404, i64 2
  %1412 = load i16, i16* %1411, align 2, !noalias !60
  store i16 %1412, i16* %1410, align 2, !noalias !60
  %1413 = getelementptr inbounds i16, i16* %1405, i64 3
  %1414 = getelementptr inbounds i16, i16* %1404, i64 3
  %1415 = load i16, i16* %1414, align 2, !noalias !60
  store i16 %1415, i16* %1413, align 2, !noalias !60
  %1416 = getelementptr inbounds i16, i16* %1405, i64 4
  %1417 = getelementptr inbounds i16, i16* %1404, i64 4
  %1418 = load i16, i16* %1417, align 2, !noalias !60
  store i16 %1418, i16* %1416, align 2, !noalias !60
  %1419 = getelementptr inbounds i16, i16* %1405, i64 5
  %1420 = getelementptr inbounds i16, i16* %1404, i64 5
  %1421 = load i16, i16* %1420, align 2, !noalias !60
  store i16 %1421, i16* %1419, align 2, !noalias !60
  %1422 = getelementptr inbounds i16, i16* %1405, i64 6
  %1423 = getelementptr inbounds i16, i16* %1404, i64 6
  %1424 = load i16, i16* %1423, align 2, !noalias !60
  store i16 %1424, i16* %1422, align 2, !noalias !60
  %1425 = getelementptr inbounds i16, i16* %1405, i64 7
  %1426 = getelementptr inbounds i16, i16* %1404, i64 7
  %1427 = load i16, i16* %1426, align 2, !noalias !60
  store i16 %1427, i16* %1425, align 2, !noalias !60
  %1428 = add i64 %1403, -8
  %1429 = getelementptr inbounds i16, i16* %1405, i64 8
  %1430 = getelementptr inbounds i16, i16* %1404, i64 8
  %1431 = icmp eq i64 %1428, 0
  br i1 %1431, label %1432, label %1402, !llvm.loop !72

1432:                                             ; preds = %1397, %1402, %1377
  %1433 = add i64 %1278, %1262
  %1434 = load i8, i8* %1264, align 1, !noalias !60
  %1435 = icmp slt i8 %1434, 0
  br i1 %1435, label %1436, label %1438

1436:                                             ; preds = %1432
  %1437 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1433, i64* %1437, align 8, !noalias !60
  br label %1440

1438:                                             ; preds = %1432
  %1439 = trunc i64 %1433 to i8
  store i8 %1439, i8* %1264, align 1, !noalias !60
  br label %1440

1440:                                             ; preds = %1438, %1436
  %1441 = getelementptr inbounds i16, i16* %1287, i64 %1433
  store i16 0, i16* %1441, align 2, !noalias !60
  br label %1445

1442:                                             ; preds = %1276
  %1443 = add i64 %1278, %1262
  %1444 = sub i64 %1443, %1277
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %25, i64 %1277, i64 %1444, i64 %1278, i64 %1278, i64 0, i64 %1262, i16* %1261) #12, !noalias !60
  br label %1445

1445:                                             ; preds = %1281, %1440, %1442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1251, i8* nonnull align 8 %1252, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1252, i8 0, i64 24, i1 false) #12, !noalias !60
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %24, %"class.gfx::FontList"* %2, float %3, i32 4) #12
  %1446 = bitcast %"class.std::__1::basic_string.4"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1447 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1446, i64 0, i32 1, i32 1
  %1448 = load i8, i8* %1447, align 1
  %1449 = icmp slt i8 %1448, 0
  br i1 %1449, label %1450, label %1453

1450:                                             ; preds = %1445
  %1451 = bitcast %"class.std::__1::basic_string.4"* %24 to i8**
  %1452 = load i8*, i8** %1451, align 8
  call void @_ZdlPv(i8* %1452) #14
  br label %1453

1453:                                             ; preds = %1445, %1450
  %1454 = load i8, i8* %1264, align 1
  %1455 = icmp slt i8 %1454, 0
  br i1 %1455, label %1456, label %1459

1456:                                             ; preds = %1453
  %1457 = bitcast %"class.std::__1::basic_string.4"* %25 to i8**
  %1458 = load i8*, i8** %1457, align 8
  call void @_ZdlPv(i8* %1458) #14
  br label %1459

1459:                                             ; preds = %1453, %1456
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1252) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1251) #12
  br label %2682

1460:                                             ; preds = %1246, %1210
  %1461 = bitcast %"class.std::__1::vector"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1461) #12
  %1462 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %1463 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 1
  %1464 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1465 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1464, i64 0, i32 1, i32 1
  %1466 = bitcast %"class.std::__1::vector"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1466, i8 -86, i64 24, i1 false)
  %1467 = load i8, i8* %1465, align 1
  %1468 = load i16*, i16** %423, align 8
  %1469 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  %1470 = load i64, i64* %424, align 8
  %1471 = zext i8 %1467 to i64
  %1472 = bitcast %"class.std::__1::basic_string.4"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1472) #12
  %1473 = load i16, i16* @_ZN3gfx13kForwardSlashE, align 2
  %1474 = bitcast %"class.std::__1::basic_string.4"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1475 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1474, i64 0, i32 1, i32 1
  store i8 1, i8* %1475, align 1
  %1476 = bitcast %"class.std::__1::basic_string.4"* %27 to i16*
  store i16 %1473, i16* %1476, align 8
  %1477 = icmp slt i8 %1467, 0
  %1478 = select i1 %1477, i16* %1468, i16* %1469
  %1479 = select i1 %1477, i64 %1470, i64 %1471
  %1480 = getelementptr inbounds i16, i16* %1476, i64 1
  store i16 0, i16* %1480, align 2
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %26, i16* %1478, i64 %1479, i16* nonnull %1476, i64 1, i32 1, i32 0) #12
  %1481 = load i8, i8* %1475, align 1
  %1482 = icmp slt i8 %1481, 0
  br i1 %1482, label %1483, label %1486

1483:                                             ; preds = %1460
  %1484 = bitcast %"class.std::__1::basic_string.4"* %27 to i8**
  %1485 = load i8*, i8** %1484, align 8
  call void @_ZdlPv(i8* %1485) #14
  br label %1486

1486:                                             ; preds = %1460, %1483
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1472) #12
  %1487 = bitcast %"class.std::__1::basic_string.4"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1487) #12
  %1488 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1489 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1490 = bitcast %"class.std::__1::basic_string.4"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1490, i8 -86, i64 24, i1 false)
  %1491 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %1462, align 8
  %1492 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %1463, align 8
  %1493 = icmp eq %"class.std::__1::basic_string.4"* %1491, %1492
  %1494 = ptrtoint %"class.std::__1::basic_string.4"* %1492 to i64
  %1495 = ptrtoint %"class.std::__1::basic_string.4"* %1491 to i64
  br i1 %1493, label %1496, label %1497

1496:                                             ; preds = %1486
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1487, i8 0, i64 24, i1 false) #12
  br label %1684

1497:                                             ; preds = %1486
  %1498 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1492, i64 -1
  %1499 = bitcast %"class.std::__1::basic_string.4"* %1498 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1500 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1499, i64 0, i32 1, i32 1
  %1501 = load i8, i8* %1500, align 1
  %1502 = icmp slt i8 %1501, 0
  br i1 %1502, label %1505, label %1503

1503:                                             ; preds = %1497
  %1504 = bitcast %"class.std::__1::basic_string.4"* %1498 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1487, i8* align 8 %1504, i64 24, i1 false) #12
  br label %1684

1505:                                             ; preds = %1497
  %1506 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1498, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1507 = load i16*, i16** %1506, align 8
  %1508 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1492, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1509 = load i64, i64* %1508, align 8
  %1510 = icmp ult i64 %1509, 11
  br i1 %1510, label %1511, label %1516

1511:                                             ; preds = %1505
  %1512 = bitcast %"class.std::__1::basic_string.4"* %28 to i16*
  %1513 = trunc i64 %1509 to i8
  %1514 = bitcast %"class.std::__1::basic_string.4"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1515 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1514, i64 0, i32 1, i32 1
  store i8 %1513, i8* %1515, align 1
  br label %1531

1516:                                             ; preds = %1505
  %1517 = icmp ugt i64 %1509, 9223372036854775791
  br i1 %1517, label %1518, label %1520

1518:                                             ; preds = %1516
  %1519 = bitcast %"class.std::__1::basic_string.4"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1519) #13
  unreachable

1520:                                             ; preds = %1516
  %1521 = add nuw nsw i64 %1509, 8
  %1522 = and i64 %1521, -8
  %1523 = icmp slt i64 %1522, 0
  br i1 %1523, label %1524, label %1525

1524:                                             ; preds = %1520
  call void @abort() #13
  unreachable

1525:                                             ; preds = %1520
  %1526 = shl i64 %1522, 1
  %1527 = call i8* @_Znwm(i64 %1526) #14
  %1528 = bitcast i8* %1527 to i16*
  %1529 = bitcast %"class.std::__1::basic_string.4"* %28 to i8**
  store i8* %1527, i8** %1529, align 8
  %1530 = or i64 %1522, -9223372036854775808
  store i64 %1530, i64* %1489, align 8
  store i64 %1509, i64* %1488, align 8
  br label %1531

1531:                                             ; preds = %1525, %1511
  %1532 = phi i16* [ %1512, %1511 ], [ %1528, %1525 ]
  %1533 = add nuw nsw i64 %1509, 1
  %1534 = add i64 %1509, 1
  %1535 = icmp ult i64 %1534, 16
  br i1 %1535, label %1625, label %1536

1536:                                             ; preds = %1531
  %1537 = add i64 %1509, 1
  %1538 = getelementptr i16, i16* %1532, i64 %1537
  %1539 = getelementptr i16, i16* %1507, i64 %1537
  %1540 = icmp ult i16* %1532, %1539
  %1541 = icmp ult i16* %1507, %1538
  %1542 = and i1 %1540, %1541
  br i1 %1542, label %1625, label %1543

1543:                                             ; preds = %1536
  %1544 = and i64 %1534, -16
  %1545 = sub i64 %1533, %1544
  %1546 = getelementptr i16, i16* %1507, i64 %1544
  %1547 = getelementptr i16, i16* %1532, i64 %1544
  %1548 = add i64 %1544, -16
  %1549 = lshr exact i64 %1548, 4
  %1550 = add nuw nsw i64 %1549, 1
  %1551 = and i64 %1550, 3
  %1552 = icmp ult i64 %1548, 48
  br i1 %1552, label %1604, label %1553

1553:                                             ; preds = %1543
  %1554 = sub nsw i64 %1550, %1551
  br label %1555

1555:                                             ; preds = %1555, %1553
  %1556 = phi i64 [ 0, %1553 ], [ %1601, %1555 ]
  %1557 = phi i64 [ %1554, %1553 ], [ %1602, %1555 ]
  %1558 = getelementptr i16, i16* %1507, i64 %1556
  %1559 = getelementptr i16, i16* %1532, i64 %1556
  %1560 = bitcast i16* %1558 to <8 x i16>*
  %1561 = load <8 x i16>, <8 x i16>* %1560, align 2, !alias.scope !73
  %1562 = getelementptr i16, i16* %1558, i64 8
  %1563 = bitcast i16* %1562 to <8 x i16>*
  %1564 = load <8 x i16>, <8 x i16>* %1563, align 2, !alias.scope !73
  %1565 = bitcast i16* %1559 to <8 x i16>*
  store <8 x i16> %1561, <8 x i16>* %1565, align 2, !alias.scope !76, !noalias !73
  %1566 = getelementptr i16, i16* %1559, i64 8
  %1567 = bitcast i16* %1566 to <8 x i16>*
  store <8 x i16> %1564, <8 x i16>* %1567, align 2, !alias.scope !76, !noalias !73
  %1568 = or i64 %1556, 16
  %1569 = getelementptr i16, i16* %1507, i64 %1568
  %1570 = getelementptr i16, i16* %1532, i64 %1568
  %1571 = bitcast i16* %1569 to <8 x i16>*
  %1572 = load <8 x i16>, <8 x i16>* %1571, align 2, !alias.scope !73
  %1573 = getelementptr i16, i16* %1569, i64 8
  %1574 = bitcast i16* %1573 to <8 x i16>*
  %1575 = load <8 x i16>, <8 x i16>* %1574, align 2, !alias.scope !73
  %1576 = bitcast i16* %1570 to <8 x i16>*
  store <8 x i16> %1572, <8 x i16>* %1576, align 2, !alias.scope !76, !noalias !73
  %1577 = getelementptr i16, i16* %1570, i64 8
  %1578 = bitcast i16* %1577 to <8 x i16>*
  store <8 x i16> %1575, <8 x i16>* %1578, align 2, !alias.scope !76, !noalias !73
  %1579 = or i64 %1556, 32
  %1580 = getelementptr i16, i16* %1507, i64 %1579
  %1581 = getelementptr i16, i16* %1532, i64 %1579
  %1582 = bitcast i16* %1580 to <8 x i16>*
  %1583 = load <8 x i16>, <8 x i16>* %1582, align 2, !alias.scope !73
  %1584 = getelementptr i16, i16* %1580, i64 8
  %1585 = bitcast i16* %1584 to <8 x i16>*
  %1586 = load <8 x i16>, <8 x i16>* %1585, align 2, !alias.scope !73
  %1587 = bitcast i16* %1581 to <8 x i16>*
  store <8 x i16> %1583, <8 x i16>* %1587, align 2, !alias.scope !76, !noalias !73
  %1588 = getelementptr i16, i16* %1581, i64 8
  %1589 = bitcast i16* %1588 to <8 x i16>*
  store <8 x i16> %1586, <8 x i16>* %1589, align 2, !alias.scope !76, !noalias !73
  %1590 = or i64 %1556, 48
  %1591 = getelementptr i16, i16* %1507, i64 %1590
  %1592 = getelementptr i16, i16* %1532, i64 %1590
  %1593 = bitcast i16* %1591 to <8 x i16>*
  %1594 = load <8 x i16>, <8 x i16>* %1593, align 2, !alias.scope !73
  %1595 = getelementptr i16, i16* %1591, i64 8
  %1596 = bitcast i16* %1595 to <8 x i16>*
  %1597 = load <8 x i16>, <8 x i16>* %1596, align 2, !alias.scope !73
  %1598 = bitcast i16* %1592 to <8 x i16>*
  store <8 x i16> %1594, <8 x i16>* %1598, align 2, !alias.scope !76, !noalias !73
  %1599 = getelementptr i16, i16* %1592, i64 8
  %1600 = bitcast i16* %1599 to <8 x i16>*
  store <8 x i16> %1597, <8 x i16>* %1600, align 2, !alias.scope !76, !noalias !73
  %1601 = add i64 %1556, 64
  %1602 = add i64 %1557, -4
  %1603 = icmp eq i64 %1602, 0
  br i1 %1603, label %1604, label %1555, !llvm.loop !78

1604:                                             ; preds = %1555, %1543
  %1605 = phi i64 [ 0, %1543 ], [ %1601, %1555 ]
  %1606 = icmp eq i64 %1551, 0
  br i1 %1606, label %1623, label %1607

1607:                                             ; preds = %1604, %1607
  %1608 = phi i64 [ %1620, %1607 ], [ %1605, %1604 ]
  %1609 = phi i64 [ %1621, %1607 ], [ %1551, %1604 ]
  %1610 = getelementptr i16, i16* %1507, i64 %1608
  %1611 = getelementptr i16, i16* %1532, i64 %1608
  %1612 = bitcast i16* %1610 to <8 x i16>*
  %1613 = load <8 x i16>, <8 x i16>* %1612, align 2, !alias.scope !73
  %1614 = getelementptr i16, i16* %1610, i64 8
  %1615 = bitcast i16* %1614 to <8 x i16>*
  %1616 = load <8 x i16>, <8 x i16>* %1615, align 2, !alias.scope !73
  %1617 = bitcast i16* %1611 to <8 x i16>*
  store <8 x i16> %1613, <8 x i16>* %1617, align 2, !alias.scope !76, !noalias !73
  %1618 = getelementptr i16, i16* %1611, i64 8
  %1619 = bitcast i16* %1618 to <8 x i16>*
  store <8 x i16> %1616, <8 x i16>* %1619, align 2, !alias.scope !76, !noalias !73
  %1620 = add i64 %1608, 16
  %1621 = add i64 %1609, -1
  %1622 = icmp eq i64 %1621, 0
  br i1 %1622, label %1623, label %1607, !llvm.loop !79

1623:                                             ; preds = %1607, %1604
  %1624 = icmp eq i64 %1534, %1544
  br i1 %1624, label %1678, label %1625

1625:                                             ; preds = %1623, %1536, %1531
  %1626 = phi i64 [ %1533, %1536 ], [ %1533, %1531 ], [ %1545, %1623 ]
  %1627 = phi i16* [ %1507, %1536 ], [ %1507, %1531 ], [ %1546, %1623 ]
  %1628 = phi i16* [ %1532, %1536 ], [ %1532, %1531 ], [ %1547, %1623 ]
  %1629 = add i64 %1626, -1
  %1630 = and i64 %1626, 7
  %1631 = icmp eq i64 %1630, 0
  br i1 %1631, label %1643, label %1632

1632:                                             ; preds = %1625, %1632
  %1633 = phi i64 [ %1638, %1632 ], [ %1626, %1625 ]
  %1634 = phi i16* [ %1640, %1632 ], [ %1627, %1625 ]
  %1635 = phi i16* [ %1639, %1632 ], [ %1628, %1625 ]
  %1636 = phi i64 [ %1641, %1632 ], [ %1630, %1625 ]
  %1637 = load i16, i16* %1634, align 2
  store i16 %1637, i16* %1635, align 2
  %1638 = add i64 %1633, -1
  %1639 = getelementptr inbounds i16, i16* %1635, i64 1
  %1640 = getelementptr inbounds i16, i16* %1634, i64 1
  %1641 = add i64 %1636, -1
  %1642 = icmp eq i64 %1641, 0
  br i1 %1642, label %1643, label %1632, !llvm.loop !80

1643:                                             ; preds = %1632, %1625
  %1644 = phi i64 [ %1626, %1625 ], [ %1638, %1632 ]
  %1645 = phi i16* [ %1627, %1625 ], [ %1640, %1632 ]
  %1646 = phi i16* [ %1628, %1625 ], [ %1639, %1632 ]
  %1647 = icmp ult i64 %1629, 7
  br i1 %1647, label %1678, label %1648

1648:                                             ; preds = %1643, %1648
  %1649 = phi i64 [ %1674, %1648 ], [ %1644, %1643 ]
  %1650 = phi i16* [ %1676, %1648 ], [ %1645, %1643 ]
  %1651 = phi i16* [ %1675, %1648 ], [ %1646, %1643 ]
  %1652 = load i16, i16* %1650, align 2
  store i16 %1652, i16* %1651, align 2
  %1653 = getelementptr inbounds i16, i16* %1651, i64 1
  %1654 = getelementptr inbounds i16, i16* %1650, i64 1
  %1655 = load i16, i16* %1654, align 2
  store i16 %1655, i16* %1653, align 2
  %1656 = getelementptr inbounds i16, i16* %1651, i64 2
  %1657 = getelementptr inbounds i16, i16* %1650, i64 2
  %1658 = load i16, i16* %1657, align 2
  store i16 %1658, i16* %1656, align 2
  %1659 = getelementptr inbounds i16, i16* %1651, i64 3
  %1660 = getelementptr inbounds i16, i16* %1650, i64 3
  %1661 = load i16, i16* %1660, align 2
  store i16 %1661, i16* %1659, align 2
  %1662 = getelementptr inbounds i16, i16* %1651, i64 4
  %1663 = getelementptr inbounds i16, i16* %1650, i64 4
  %1664 = load i16, i16* %1663, align 2
  store i16 %1664, i16* %1662, align 2
  %1665 = getelementptr inbounds i16, i16* %1651, i64 5
  %1666 = getelementptr inbounds i16, i16* %1650, i64 5
  %1667 = load i16, i16* %1666, align 2
  store i16 %1667, i16* %1665, align 2
  %1668 = getelementptr inbounds i16, i16* %1651, i64 6
  %1669 = getelementptr inbounds i16, i16* %1650, i64 6
  %1670 = load i16, i16* %1669, align 2
  store i16 %1670, i16* %1668, align 2
  %1671 = getelementptr inbounds i16, i16* %1651, i64 7
  %1672 = getelementptr inbounds i16, i16* %1650, i64 7
  %1673 = load i16, i16* %1672, align 2
  store i16 %1673, i16* %1671, align 2
  %1674 = add i64 %1649, -8
  %1675 = getelementptr inbounds i16, i16* %1651, i64 8
  %1676 = getelementptr inbounds i16, i16* %1650, i64 8
  %1677 = icmp eq i64 %1674, 0
  br i1 %1677, label %1678, label %1648, !llvm.loop !81

1678:                                             ; preds = %1643, %1648, %1623
  %1679 = bitcast %"class.std::__1::basic_string.4"** %1463 to i64*
  %1680 = load i64, i64* %1679, align 8
  %1681 = bitcast %"class.std::__1::vector"* %26 to i64*
  %1682 = load i64, i64* %1681, align 8
  %1683 = inttoptr i64 %1682 to %"class.std::__1::basic_string.4"*
  br label %1684

1684:                                             ; preds = %1678, %1503, %1496
  %1685 = phi %"class.std::__1::basic_string.4"* [ %1683, %1678 ], [ %1491, %1503 ], [ %1491, %1496 ]
  %1686 = phi i64 [ %1682, %1678 ], [ %1495, %1503 ], [ %1495, %1496 ]
  %1687 = phi i64 [ %1680, %1678 ], [ %1494, %1503 ], [ %1494, %1496 ]
  %1688 = sub i64 %1687, %1686
  %1689 = sdiv exact i64 %1688, 24
  %1690 = bitcast %"class.std::__1::basic_string.4"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1691 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1690, i64 0, i32 1, i32 1
  %1692 = load i8, i8* %1691, align 1
  %1693 = icmp slt i8 %1692, 0
  %1694 = load i64, i64* %1488, align 8
  %1695 = zext i8 %1692 to i64
  %1696 = select i1 %1693, i64 %1694, i64 %1695
  %1697 = icmp eq i64 %1696, 0
  %1698 = icmp ugt i64 %1689, 1
  %1699 = and i1 %1698, %1697
  br i1 %1699, label %1700, label %1711

1700:                                             ; preds = %1684
  %1701 = add nsw i64 %1689, -1
  %1702 = bitcast %"class.std::__1::basic_string.4"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1702) #12
  %1703 = add nsw i64 %1689, -2
  %1704 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1685, i64 %1703
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_(%"class.std::__1::basic_string.4"* nonnull sret %29, %"class.std::__1::basic_string.4"* dereferenceable(24) %1704, i16 zeroext %1473)
  %1705 = load i8, i8* %1691, align 1
  %1706 = icmp slt i8 %1705, 0
  br i1 %1706, label %1707, label %1710

1707:                                             ; preds = %1700
  %1708 = bitcast %"class.std::__1::basic_string.4"* %28 to i8**
  %1709 = load i8*, i8** %1708, align 8
  call void @_ZdlPv(i8* %1709) #14
  br label %1710

1710:                                             ; preds = %1707, %1700
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1487, i8* nonnull align 8 %1702, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1702) #12
  br label %1711

1711:                                             ; preds = %1710, %1684
  %1712 = phi i64 [ %1701, %1710 ], [ %1689, %1684 ]
  %1713 = bitcast %"class.std::__1::basic_string.4"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1713) #12
  %1714 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1715 = bitcast %"class.std::__1::basic_string.4"* %31 to i8*
  %1716 = bitcast %"class.std::__1::basic_string.4"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1716, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1715) #12
  br i1 %1006, label %1717, label %1721

1717:                                             ; preds = %1711
  %1718 = bitcast %"class.std::__1::basic_string.4"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1719 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1718, i64 0, i32 1, i32 1
  store i8 0, i8* %1719, align 1
  %1720 = bitcast %"class.std::__1::basic_string.4"* %31 to i16*
  br label %1908

1721:                                             ; preds = %1711, %1721
  %1722 = phi i64 [ %1724, %1721 ], [ 0, %1711 ]
  %1723 = phi i16* [ %1725, %1721 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %1711 ]
  %1724 = add i64 %1722, 1
  %1725 = getelementptr inbounds i16, i16* %1723, i64 1
  %1726 = load i16, i16* %1725, align 2
  %1727 = icmp eq i16 %1726, 0
  br i1 %1727, label %1728, label %1721

1728:                                             ; preds = %1721
  %1729 = icmp ugt i64 %1724, 9223372036854775791
  br i1 %1729, label %1730, label %1732

1730:                                             ; preds = %1728
  %1731 = bitcast %"class.std::__1::basic_string.4"* %31 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1731) #13
  unreachable

1732:                                             ; preds = %1728
  %1733 = icmp ult i64 %1724, 11
  br i1 %1733, label %1747, label %1734

1734:                                             ; preds = %1732
  %1735 = add nuw nsw i64 %1722, 9
  %1736 = and i64 %1735, -8
  %1737 = icmp slt i64 %1736, 0
  br i1 %1737, label %1738, label %1739

1738:                                             ; preds = %1734
  call void @abort() #13
  unreachable

1739:                                             ; preds = %1734
  %1740 = shl i64 %1736, 1
  %1741 = call i8* @_Znwm(i64 %1740) #14
  %1742 = bitcast i8* %1741 to i16*
  %1743 = bitcast %"class.std::__1::basic_string.4"* %31 to i8**
  store i8* %1741, i8** %1743, align 8
  %1744 = or i64 %1736, -9223372036854775808
  %1745 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1744, i64* %1745, align 8
  %1746 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1724, i64* %1746, align 8
  br label %1753

1747:                                             ; preds = %1732
  %1748 = trunc i64 %1724 to i8
  %1749 = bitcast %"class.std::__1::basic_string.4"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1750 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1749, i64 0, i32 1, i32 1
  store i8 %1748, i8* %1750, align 1
  %1751 = bitcast %"class.std::__1::basic_string.4"* %31 to i16*
  %1752 = icmp eq i64 %1724, 0
  br i1 %1752, label %1908, label %1753

1753:                                             ; preds = %1747, %1739
  %1754 = phi i16* [ %1742, %1739 ], [ %1751, %1747 ]
  store i16 %1005, i16* %1754, align 2
  %1755 = icmp eq i64 %1722, 0
  br i1 %1755, label %1906, label %1756

1756:                                             ; preds = %1753
  %1757 = icmp ult i64 %1722, 16
  br i1 %1757, label %1853, label %1758

1758:                                             ; preds = %1756
  %1759 = getelementptr i16, i16* %1754, i64 1
  %1760 = getelementptr i16, i16* %1754, i64 %1724
  %1761 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %1724
  %1762 = icmp ult i16* %1759, %1761
  %1763 = icmp ugt i16* %1760, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %1764 = and i1 %1762, %1763
  br i1 %1764, label %1853, label %1765

1765:                                             ; preds = %1758
  %1766 = and i64 %1722, -16
  %1767 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1766
  %1768 = sub i64 %1722, %1766
  %1769 = getelementptr i16, i16* %1754, i64 %1766
  %1770 = add i64 %1766, -16
  %1771 = lshr exact i64 %1770, 4
  %1772 = add nuw nsw i64 %1771, 1
  %1773 = and i64 %1772, 3
  %1774 = icmp ult i64 %1770, 48
  br i1 %1774, label %1830, label %1775

1775:                                             ; preds = %1765
  %1776 = sub nsw i64 %1772, %1773
  %1777 = getelementptr i16, i16* %1754, i64 1
  %1778 = getelementptr i16, i16* %1754, i64 1
  %1779 = getelementptr i16, i16* %1754, i64 1
  %1780 = getelementptr i16, i16* %1754, i64 1
  br label %1781

1781:                                             ; preds = %1781, %1775
  %1782 = phi i64 [ 0, %1775 ], [ %1827, %1781 ]
  %1783 = phi i64 [ %1776, %1775 ], [ %1828, %1781 ]
  %1784 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1782
  %1785 = getelementptr inbounds i16, i16* %1777, i64 %1782
  %1786 = bitcast i16* %1784 to <8 x i16>*
  %1787 = load <8 x i16>, <8 x i16>* %1786, align 2, !alias.scope !82
  %1788 = getelementptr i16, i16* %1784, i64 8
  %1789 = bitcast i16* %1788 to <8 x i16>*
  %1790 = load <8 x i16>, <8 x i16>* %1789, align 2, !alias.scope !82
  %1791 = bitcast i16* %1785 to <8 x i16>*
  store <8 x i16> %1787, <8 x i16>* %1791, align 2, !alias.scope !85, !noalias !82
  %1792 = getelementptr inbounds i16, i16* %1785, i64 8
  %1793 = bitcast i16* %1792 to <8 x i16>*
  store <8 x i16> %1790, <8 x i16>* %1793, align 2, !alias.scope !85, !noalias !82
  %1794 = or i64 %1782, 16
  %1795 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1794
  %1796 = getelementptr inbounds i16, i16* %1778, i64 %1794
  %1797 = bitcast i16* %1795 to <8 x i16>*
  %1798 = load <8 x i16>, <8 x i16>* %1797, align 2, !alias.scope !82
  %1799 = getelementptr i16, i16* %1795, i64 8
  %1800 = bitcast i16* %1799 to <8 x i16>*
  %1801 = load <8 x i16>, <8 x i16>* %1800, align 2, !alias.scope !82
  %1802 = bitcast i16* %1796 to <8 x i16>*
  store <8 x i16> %1798, <8 x i16>* %1802, align 2, !alias.scope !85, !noalias !82
  %1803 = getelementptr inbounds i16, i16* %1796, i64 8
  %1804 = bitcast i16* %1803 to <8 x i16>*
  store <8 x i16> %1801, <8 x i16>* %1804, align 2, !alias.scope !85, !noalias !82
  %1805 = or i64 %1782, 32
  %1806 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1805
  %1807 = getelementptr inbounds i16, i16* %1779, i64 %1805
  %1808 = bitcast i16* %1806 to <8 x i16>*
  %1809 = load <8 x i16>, <8 x i16>* %1808, align 2, !alias.scope !82
  %1810 = getelementptr i16, i16* %1806, i64 8
  %1811 = bitcast i16* %1810 to <8 x i16>*
  %1812 = load <8 x i16>, <8 x i16>* %1811, align 2, !alias.scope !82
  %1813 = bitcast i16* %1807 to <8 x i16>*
  store <8 x i16> %1809, <8 x i16>* %1813, align 2, !alias.scope !85, !noalias !82
  %1814 = getelementptr inbounds i16, i16* %1807, i64 8
  %1815 = bitcast i16* %1814 to <8 x i16>*
  store <8 x i16> %1812, <8 x i16>* %1815, align 2, !alias.scope !85, !noalias !82
  %1816 = or i64 %1782, 48
  %1817 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1816
  %1818 = getelementptr inbounds i16, i16* %1780, i64 %1816
  %1819 = bitcast i16* %1817 to <8 x i16>*
  %1820 = load <8 x i16>, <8 x i16>* %1819, align 2, !alias.scope !82
  %1821 = getelementptr i16, i16* %1817, i64 8
  %1822 = bitcast i16* %1821 to <8 x i16>*
  %1823 = load <8 x i16>, <8 x i16>* %1822, align 2, !alias.scope !82
  %1824 = bitcast i16* %1818 to <8 x i16>*
  store <8 x i16> %1820, <8 x i16>* %1824, align 2, !alias.scope !85, !noalias !82
  %1825 = getelementptr inbounds i16, i16* %1818, i64 8
  %1826 = bitcast i16* %1825 to <8 x i16>*
  store <8 x i16> %1823, <8 x i16>* %1826, align 2, !alias.scope !85, !noalias !82
  %1827 = add i64 %1782, 64
  %1828 = add i64 %1783, -4
  %1829 = icmp eq i64 %1828, 0
  br i1 %1829, label %1830, label %1781, !llvm.loop !87

1830:                                             ; preds = %1781, %1765
  %1831 = phi i64 [ 0, %1765 ], [ %1827, %1781 ]
  %1832 = icmp eq i64 %1773, 0
  br i1 %1832, label %1851, label %1833

1833:                                             ; preds = %1830
  %1834 = getelementptr i16, i16* %1754, i64 1
  br label %1835

1835:                                             ; preds = %1835, %1833
  %1836 = phi i64 [ %1831, %1833 ], [ %1848, %1835 ]
  %1837 = phi i64 [ %1773, %1833 ], [ %1849, %1835 ]
  %1838 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %1836
  %1839 = getelementptr inbounds i16, i16* %1834, i64 %1836
  %1840 = bitcast i16* %1838 to <8 x i16>*
  %1841 = load <8 x i16>, <8 x i16>* %1840, align 2, !alias.scope !82
  %1842 = getelementptr i16, i16* %1838, i64 8
  %1843 = bitcast i16* %1842 to <8 x i16>*
  %1844 = load <8 x i16>, <8 x i16>* %1843, align 2, !alias.scope !82
  %1845 = bitcast i16* %1839 to <8 x i16>*
  store <8 x i16> %1841, <8 x i16>* %1845, align 2, !alias.scope !85, !noalias !82
  %1846 = getelementptr inbounds i16, i16* %1839, i64 8
  %1847 = bitcast i16* %1846 to <8 x i16>*
  store <8 x i16> %1844, <8 x i16>* %1847, align 2, !alias.scope !85, !noalias !82
  %1848 = add i64 %1836, 16
  %1849 = add i64 %1837, -1
  %1850 = icmp eq i64 %1849, 0
  br i1 %1850, label %1851, label %1835, !llvm.loop !88

1851:                                             ; preds = %1835, %1830
  %1852 = icmp eq i64 %1722, %1766
  br i1 %1852, label %1906, label %1853

1853:                                             ; preds = %1851, %1758, %1756
  %1854 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %1758 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %1756 ], [ %1767, %1851 ]
  %1855 = phi i64 [ %1722, %1758 ], [ %1722, %1756 ], [ %1768, %1851 ]
  %1856 = phi i16* [ %1754, %1758 ], [ %1754, %1756 ], [ %1769, %1851 ]
  %1857 = add i64 %1855, -1
  %1858 = and i64 %1855, 7
  %1859 = icmp eq i64 %1858, 0
  br i1 %1859, label %1871, label %1860

1860:                                             ; preds = %1853, %1860
  %1861 = phi i16* [ %1868, %1860 ], [ %1854, %1853 ]
  %1862 = phi i64 [ %1867, %1860 ], [ %1855, %1853 ]
  %1863 = phi i16* [ %1865, %1860 ], [ %1856, %1853 ]
  %1864 = phi i64 [ %1869, %1860 ], [ %1858, %1853 ]
  %1865 = getelementptr inbounds i16, i16* %1863, i64 1
  %1866 = load i16, i16* %1861, align 2
  store i16 %1866, i16* %1865, align 2
  %1867 = add i64 %1862, -1
  %1868 = getelementptr inbounds i16, i16* %1861, i64 1
  %1869 = add i64 %1864, -1
  %1870 = icmp eq i64 %1869, 0
  br i1 %1870, label %1871, label %1860, !llvm.loop !89

1871:                                             ; preds = %1860, %1853
  %1872 = phi i16* [ %1854, %1853 ], [ %1868, %1860 ]
  %1873 = phi i64 [ %1855, %1853 ], [ %1867, %1860 ]
  %1874 = phi i16* [ %1856, %1853 ], [ %1865, %1860 ]
  %1875 = icmp ult i64 %1857, 7
  br i1 %1875, label %1906, label %1876

1876:                                             ; preds = %1871, %1876
  %1877 = phi i16* [ %1904, %1876 ], [ %1872, %1871 ]
  %1878 = phi i64 [ %1903, %1876 ], [ %1873, %1871 ]
  %1879 = phi i16* [ %1901, %1876 ], [ %1874, %1871 ]
  %1880 = getelementptr inbounds i16, i16* %1879, i64 1
  %1881 = load i16, i16* %1877, align 2
  store i16 %1881, i16* %1880, align 2
  %1882 = getelementptr inbounds i16, i16* %1877, i64 1
  %1883 = getelementptr inbounds i16, i16* %1879, i64 2
  %1884 = load i16, i16* %1882, align 2
  store i16 %1884, i16* %1883, align 2
  %1885 = getelementptr inbounds i16, i16* %1877, i64 2
  %1886 = getelementptr inbounds i16, i16* %1879, i64 3
  %1887 = load i16, i16* %1885, align 2
  store i16 %1887, i16* %1886, align 2
  %1888 = getelementptr inbounds i16, i16* %1877, i64 3
  %1889 = getelementptr inbounds i16, i16* %1879, i64 4
  %1890 = load i16, i16* %1888, align 2
  store i16 %1890, i16* %1889, align 2
  %1891 = getelementptr inbounds i16, i16* %1877, i64 4
  %1892 = getelementptr inbounds i16, i16* %1879, i64 5
  %1893 = load i16, i16* %1891, align 2
  store i16 %1893, i16* %1892, align 2
  %1894 = getelementptr inbounds i16, i16* %1877, i64 5
  %1895 = getelementptr inbounds i16, i16* %1879, i64 6
  %1896 = load i16, i16* %1894, align 2
  store i16 %1896, i16* %1895, align 2
  %1897 = getelementptr inbounds i16, i16* %1877, i64 6
  %1898 = getelementptr inbounds i16, i16* %1879, i64 7
  %1899 = load i16, i16* %1897, align 2
  store i16 %1899, i16* %1898, align 2
  %1900 = getelementptr inbounds i16, i16* %1877, i64 7
  %1901 = getelementptr inbounds i16, i16* %1879, i64 8
  %1902 = load i16, i16* %1900, align 2
  store i16 %1902, i16* %1901, align 2
  %1903 = add i64 %1878, -8
  %1904 = getelementptr inbounds i16, i16* %1877, i64 8
  %1905 = icmp eq i64 %1903, 0
  br i1 %1905, label %1906, label %1876, !llvm.loop !90

1906:                                             ; preds = %1871, %1876, %1851, %1753
  %1907 = bitcast %"class.std::__1::basic_string.4"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %1908

1908:                                             ; preds = %1906, %1717, %1747
  %1909 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %1907, %1906 ], [ %1718, %1717 ], [ %1749, %1747 ]
  %1910 = phi i64 [ %1724, %1906 ], [ 0, %1717 ], [ 0, %1747 ]
  %1911 = phi i16* [ %1754, %1906 ], [ %1720, %1717 ], [ %1751, %1747 ]
  %1912 = getelementptr inbounds i16, i16* %1911, i64 %1910
  store i16 0, i16* %1912, align 2
  %1913 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1909, i64 0, i32 1, i32 1
  %1914 = load i8, i8* %1913, align 1, !noalias !91
  %1915 = icmp slt i8 %1914, 0
  br i1 %1915, label %1918, label %1916

1916:                                             ; preds = %1908
  %1917 = zext i8 %1914 to i64
  br label %1925

1918:                                             ; preds = %1908
  %1919 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1920 = load i64, i64* %1919, align 8, !noalias !91
  %1921 = and i64 %1920, 9223372036854775807
  %1922 = add nsw i64 %1921, -1
  %1923 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1924 = load i64, i64* %1923, align 8, !noalias !91
  br label %1925

1925:                                             ; preds = %1918, %1916
  %1926 = phi i64 [ 10, %1916 ], [ %1922, %1918 ]
  %1927 = phi i64 [ %1917, %1916 ], [ %1924, %1918 ]
  %1928 = icmp eq i64 %1927, %1926
  br i1 %1928, label %1929, label %1932

1929:                                             ; preds = %1925
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.4"* nonnull %31, i64 %1926, i64 1, i64 %1926, i64 %1926, i64 0, i64 0) #12, !noalias !91
  %1930 = load i8, i8* %1913, align 1, !noalias !91
  %1931 = icmp slt i8 %1930, 0
  br i1 %1931, label %1937, label %1933

1932:                                             ; preds = %1925
  br i1 %1915, label %1937, label %1933

1933:                                             ; preds = %1932, %1929
  %1934 = bitcast %"class.std::__1::basic_string.4"* %31 to i16*
  %1935 = trunc i64 %1927 to i8
  %1936 = add i8 %1935, 1
  store i8 %1936, i8* %1913, align 1, !noalias !91
  br label %1942

1937:                                             ; preds = %1932, %1929
  %1938 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1939 = load i16*, i16** %1938, align 8, !noalias !91
  %1940 = add i64 %1927, 1
  %1941 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1940, i64* %1941, align 8, !noalias !91
  br label %1942

1942:                                             ; preds = %1937, %1933
  %1943 = phi i16* [ %1934, %1933 ], [ %1939, %1937 ]
  %1944 = getelementptr inbounds i16, i16* %1943, i64 %1927
  store i16 %1473, i16* %1944, align 2, !noalias !91
  %1945 = getelementptr inbounds i16, i16* %1944, i64 1
  store i16 0, i16* %1945, align 2, !noalias !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1713, i8* nonnull align 8 %1715, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1715) #12
  %1946 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %30, %"class.gfx::FontList"* %2) #12
  %1947 = icmp ne i64 %1712, 0
  br i1 %1947, label %1948, label %1973

1948:                                             ; preds = %1942
  %1949 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1950 = bitcast %"class.std::__1::basic_string.4"* %32 to i8*
  %1951 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1951, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1950) #12
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string.4"* nonnull sret %32, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %14, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13)
  call fastcc void @_ZN12_GLOBAL__N_122ElideComponentizedPathERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEES8_S8_RKN3gfx8FontListEf(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %32, %"class.std::__1::vector"* nonnull dereferenceable(24) %26, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %28, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %20, %"class.gfx::FontList"* %2, float %3)
  %1952 = bitcast %"class.std::__1::basic_string.4"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1953 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1952, i64 0, i32 1, i32 1
  %1954 = load i8, i8* %1953, align 1
  %1955 = icmp slt i8 %1954, 0
  br i1 %1955, label %1956, label %1959

1956:                                             ; preds = %1948
  %1957 = bitcast %"class.std::__1::basic_string.4"* %32 to i8**
  %1958 = load i8*, i8** %1957, align 8
  call void @_ZdlPv(i8* %1958) #14
  br label %1959

1959:                                             ; preds = %1948, %1956
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1950) #12
  %1960 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1961 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1960, i64 0, i32 1, i32 1
  %1962 = load i8, i8* %1961, align 1
  %1963 = icmp slt i8 %1962, 0
  %1964 = load i64, i64* %1949, align 8
  %1965 = zext i8 %1962 to i64
  %1966 = select i1 %1963, i64 %1964, i64 %1965
  %1967 = icmp eq i64 %1966, 0
  %1968 = and i1 %1963, %1967
  br i1 %1968, label %1969, label %1972

1969:                                             ; preds = %1959
  %1970 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  %1971 = load i8*, i8** %1970, align 8
  call void @_ZdlPv(i8* %1971) #14
  br label %1972

1972:                                             ; preds = %1959, %1969
  br i1 %1967, label %1973, label %2642

1973:                                             ; preds = %1972, %1942
  %1974 = bitcast %"class.std::__1::basic_string.4"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1974) #12
  %1975 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1976 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1977 = bitcast %"class.std::__1::basic_string.4"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1977, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string.4"* nonnull sret %33, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %14, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13)
  %1978 = fcmp ogt float %801, %1203
  br i1 %1978, label %1979, label %2027

1979:                                             ; preds = %1973
  %1980 = bitcast %"class.std::__1::basic_string.4"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1981 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1980, i64 0, i32 1, i32 1
  %1982 = load i8, i8* %1981, align 1
  %1983 = icmp slt i8 %1982, 0
  %1984 = load i64, i64* %465, align 8
  %1985 = zext i8 %1982 to i64
  %1986 = select i1 %1983, i64 %1984, i64 %1985
  %1987 = icmp eq i64 %1986, 0
  br i1 %1987, label %2006, label %1988

1988:                                             ; preds = %1979
  %1989 = bitcast %"class.std::__1::basic_string.4"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1989) #12
  %1990 = bitcast %"class.std::__1::basic_string.4"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1991 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1990, i64 0, i32 1, i32 1
  %1992 = load i8, i8* %1991, align 1
  %1993 = icmp slt i8 %1992, 0
  %1994 = load i16*, i16** %1714, align 8
  %1995 = bitcast %"class.std::__1::basic_string.4"* %30 to i16*
  %1996 = select i1 %1993, i16* %1994, i16* %1995
  %1997 = load i16, i16* %1996, align 2
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EES6_RKS9_(%"class.std::__1::basic_string.4"* nonnull sret %34, i16 zeroext %1997, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13)
  %1998 = bitcast %"class.std::__1::basic_string.4"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1999 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1998, i64 0, i32 1, i32 1
  %2000 = load i8, i8* %1999, align 1
  %2001 = icmp slt i8 %2000, 0
  br i1 %2001, label %2002, label %2005

2002:                                             ; preds = %1988
  %2003 = bitcast %"class.std::__1::basic_string.4"* %33 to i8**
  %2004 = load i8*, i8** %2003, align 8
  call void @_ZdlPv(i8* %2004) #14
  br label %2005

2005:                                             ; preds = %2002, %1988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1974, i8* nonnull align 8 %1989, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1989) #12
  br label %2008

2006:                                             ; preds = %1979
  %2007 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* nonnull %33, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13)
  br label %2008

2008:                                             ; preds = %2006, %2005
  br i1 %1947, label %2009, label %2027

2009:                                             ; preds = %2008
  %2010 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2011 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2011, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_122ElideComponentizedPathERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEES8_S8_RKN3gfx8FontListEf(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %33, %"class.std::__1::vector"* nonnull dereferenceable(24) %26, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %28, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %20, %"class.gfx::FontList"* %2, float %3)
  %2012 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2013 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2012, i64 0, i32 1, i32 1
  %2014 = load i8, i8* %2013, align 1
  %2015 = icmp slt i8 %2014, 0
  %2016 = load i64, i64* %2010, align 8
  %2017 = zext i8 %2014 to i64
  %2018 = select i1 %2015, i64 %2016, i64 %2017
  %2019 = icmp eq i64 %2018, 0
  %2020 = and i1 %2015, %2019
  br i1 %2020, label %2021, label %2024

2021:                                             ; preds = %2009
  %2022 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  %2023 = load i8*, i8** %2022, align 8
  call void @_ZdlPv(i8* %2023) #14
  br label %2024

2024:                                             ; preds = %2009, %2021
  br i1 %2019, label %2027, label %2025

2025:                                             ; preds = %2024
  %2026 = bitcast %"class.std::__1::basic_string.4"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %2633

2027:                                             ; preds = %2008, %2024, %1973
  %2028 = bitcast %"class.std::__1::basic_string.4"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2028) #12
  %2029 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2030 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2031 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %2032 = bitcast %"class.std::__1::basic_string.4"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2033 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2032, i64 0, i32 1, i32 1
  %2034 = bitcast %"class.std::__1::basic_string.4"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2034, i8 -86, i64 24, i1 false)
  %2035 = load i8, i8* %2033, align 1
  %2036 = icmp slt i8 %2035, 0
  br i1 %2036, label %2038, label %2037

2037:                                             ; preds = %2027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2028, i8* nonnull align 8 %1974, i64 24, i1 false) #12
  br label %2209

2038:                                             ; preds = %2027
  %2039 = load i16*, i16** %1975, align 8
  %2040 = load i64, i64* %1976, align 8
  %2041 = icmp ult i64 %2040, 11
  br i1 %2041, label %2042, label %2047

2042:                                             ; preds = %2038
  %2043 = bitcast %"class.std::__1::basic_string.4"* %35 to i16*
  %2044 = trunc i64 %2040 to i8
  %2045 = bitcast %"class.std::__1::basic_string.4"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2046 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2045, i64 0, i32 1, i32 1
  store i8 %2044, i8* %2046, align 1
  br label %2062

2047:                                             ; preds = %2038
  %2048 = icmp ugt i64 %2040, 9223372036854775791
  br i1 %2048, label %2049, label %2051

2049:                                             ; preds = %2047
  %2050 = bitcast %"class.std::__1::basic_string.4"* %35 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %2050) #13
  unreachable

2051:                                             ; preds = %2047
  %2052 = add nuw nsw i64 %2040, 8
  %2053 = and i64 %2052, -8
  %2054 = icmp slt i64 %2053, 0
  br i1 %2054, label %2055, label %2056

2055:                                             ; preds = %2051
  call void @abort() #13
  unreachable

2056:                                             ; preds = %2051
  %2057 = shl i64 %2053, 1
  %2058 = call i8* @_Znwm(i64 %2057) #14
  %2059 = bitcast i8* %2058 to i16*
  %2060 = bitcast %"class.std::__1::basic_string.4"* %35 to i8**
  store i8* %2058, i8** %2060, align 8
  %2061 = or i64 %2053, -9223372036854775808
  store i64 %2061, i64* %2031, align 8
  store i64 %2040, i64* %2030, align 8
  br label %2062

2062:                                             ; preds = %2056, %2042
  %2063 = phi i16* [ %2043, %2042 ], [ %2059, %2056 ]
  %2064 = add nuw nsw i64 %2040, 1
  %2065 = add i64 %2040, 1
  %2066 = icmp ult i64 %2065, 16
  br i1 %2066, label %2156, label %2067

2067:                                             ; preds = %2062
  %2068 = add i64 %2040, 1
  %2069 = getelementptr i16, i16* %2063, i64 %2068
  %2070 = getelementptr i16, i16* %2039, i64 %2068
  %2071 = icmp ult i16* %2063, %2070
  %2072 = icmp ult i16* %2039, %2069
  %2073 = and i1 %2071, %2072
  br i1 %2073, label %2156, label %2074

2074:                                             ; preds = %2067
  %2075 = and i64 %2065, -16
  %2076 = sub i64 %2064, %2075
  %2077 = getelementptr i16, i16* %2039, i64 %2075
  %2078 = getelementptr i16, i16* %2063, i64 %2075
  %2079 = add i64 %2075, -16
  %2080 = lshr exact i64 %2079, 4
  %2081 = add nuw nsw i64 %2080, 1
  %2082 = and i64 %2081, 3
  %2083 = icmp ult i64 %2079, 48
  br i1 %2083, label %2135, label %2084

2084:                                             ; preds = %2074
  %2085 = sub nsw i64 %2081, %2082
  br label %2086

2086:                                             ; preds = %2086, %2084
  %2087 = phi i64 [ 0, %2084 ], [ %2132, %2086 ]
  %2088 = phi i64 [ %2085, %2084 ], [ %2133, %2086 ]
  %2089 = getelementptr i16, i16* %2039, i64 %2087
  %2090 = getelementptr i16, i16* %2063, i64 %2087
  %2091 = bitcast i16* %2089 to <8 x i16>*
  %2092 = load <8 x i16>, <8 x i16>* %2091, align 2, !alias.scope !94
  %2093 = getelementptr i16, i16* %2089, i64 8
  %2094 = bitcast i16* %2093 to <8 x i16>*
  %2095 = load <8 x i16>, <8 x i16>* %2094, align 2, !alias.scope !94
  %2096 = bitcast i16* %2090 to <8 x i16>*
  store <8 x i16> %2092, <8 x i16>* %2096, align 2, !alias.scope !97, !noalias !94
  %2097 = getelementptr i16, i16* %2090, i64 8
  %2098 = bitcast i16* %2097 to <8 x i16>*
  store <8 x i16> %2095, <8 x i16>* %2098, align 2, !alias.scope !97, !noalias !94
  %2099 = or i64 %2087, 16
  %2100 = getelementptr i16, i16* %2039, i64 %2099
  %2101 = getelementptr i16, i16* %2063, i64 %2099
  %2102 = bitcast i16* %2100 to <8 x i16>*
  %2103 = load <8 x i16>, <8 x i16>* %2102, align 2, !alias.scope !94
  %2104 = getelementptr i16, i16* %2100, i64 8
  %2105 = bitcast i16* %2104 to <8 x i16>*
  %2106 = load <8 x i16>, <8 x i16>* %2105, align 2, !alias.scope !94
  %2107 = bitcast i16* %2101 to <8 x i16>*
  store <8 x i16> %2103, <8 x i16>* %2107, align 2, !alias.scope !97, !noalias !94
  %2108 = getelementptr i16, i16* %2101, i64 8
  %2109 = bitcast i16* %2108 to <8 x i16>*
  store <8 x i16> %2106, <8 x i16>* %2109, align 2, !alias.scope !97, !noalias !94
  %2110 = or i64 %2087, 32
  %2111 = getelementptr i16, i16* %2039, i64 %2110
  %2112 = getelementptr i16, i16* %2063, i64 %2110
  %2113 = bitcast i16* %2111 to <8 x i16>*
  %2114 = load <8 x i16>, <8 x i16>* %2113, align 2, !alias.scope !94
  %2115 = getelementptr i16, i16* %2111, i64 8
  %2116 = bitcast i16* %2115 to <8 x i16>*
  %2117 = load <8 x i16>, <8 x i16>* %2116, align 2, !alias.scope !94
  %2118 = bitcast i16* %2112 to <8 x i16>*
  store <8 x i16> %2114, <8 x i16>* %2118, align 2, !alias.scope !97, !noalias !94
  %2119 = getelementptr i16, i16* %2112, i64 8
  %2120 = bitcast i16* %2119 to <8 x i16>*
  store <8 x i16> %2117, <8 x i16>* %2120, align 2, !alias.scope !97, !noalias !94
  %2121 = or i64 %2087, 48
  %2122 = getelementptr i16, i16* %2039, i64 %2121
  %2123 = getelementptr i16, i16* %2063, i64 %2121
  %2124 = bitcast i16* %2122 to <8 x i16>*
  %2125 = load <8 x i16>, <8 x i16>* %2124, align 2, !alias.scope !94
  %2126 = getelementptr i16, i16* %2122, i64 8
  %2127 = bitcast i16* %2126 to <8 x i16>*
  %2128 = load <8 x i16>, <8 x i16>* %2127, align 2, !alias.scope !94
  %2129 = bitcast i16* %2123 to <8 x i16>*
  store <8 x i16> %2125, <8 x i16>* %2129, align 2, !alias.scope !97, !noalias !94
  %2130 = getelementptr i16, i16* %2123, i64 8
  %2131 = bitcast i16* %2130 to <8 x i16>*
  store <8 x i16> %2128, <8 x i16>* %2131, align 2, !alias.scope !97, !noalias !94
  %2132 = add i64 %2087, 64
  %2133 = add i64 %2088, -4
  %2134 = icmp eq i64 %2133, 0
  br i1 %2134, label %2135, label %2086, !llvm.loop !99

2135:                                             ; preds = %2086, %2074
  %2136 = phi i64 [ 0, %2074 ], [ %2132, %2086 ]
  %2137 = icmp eq i64 %2082, 0
  br i1 %2137, label %2154, label %2138

2138:                                             ; preds = %2135, %2138
  %2139 = phi i64 [ %2151, %2138 ], [ %2136, %2135 ]
  %2140 = phi i64 [ %2152, %2138 ], [ %2082, %2135 ]
  %2141 = getelementptr i16, i16* %2039, i64 %2139
  %2142 = getelementptr i16, i16* %2063, i64 %2139
  %2143 = bitcast i16* %2141 to <8 x i16>*
  %2144 = load <8 x i16>, <8 x i16>* %2143, align 2, !alias.scope !94
  %2145 = getelementptr i16, i16* %2141, i64 8
  %2146 = bitcast i16* %2145 to <8 x i16>*
  %2147 = load <8 x i16>, <8 x i16>* %2146, align 2, !alias.scope !94
  %2148 = bitcast i16* %2142 to <8 x i16>*
  store <8 x i16> %2144, <8 x i16>* %2148, align 2, !alias.scope !97, !noalias !94
  %2149 = getelementptr i16, i16* %2142, i64 8
  %2150 = bitcast i16* %2149 to <8 x i16>*
  store <8 x i16> %2147, <8 x i16>* %2150, align 2, !alias.scope !97, !noalias !94
  %2151 = add i64 %2139, 16
  %2152 = add i64 %2140, -1
  %2153 = icmp eq i64 %2152, 0
  br i1 %2153, label %2154, label %2138, !llvm.loop !100

2154:                                             ; preds = %2138, %2135
  %2155 = icmp eq i64 %2065, %2075
  br i1 %2155, label %2209, label %2156

2156:                                             ; preds = %2154, %2067, %2062
  %2157 = phi i64 [ %2064, %2067 ], [ %2064, %2062 ], [ %2076, %2154 ]
  %2158 = phi i16* [ %2039, %2067 ], [ %2039, %2062 ], [ %2077, %2154 ]
  %2159 = phi i16* [ %2063, %2067 ], [ %2063, %2062 ], [ %2078, %2154 ]
  %2160 = add i64 %2157, -1
  %2161 = and i64 %2157, 7
  %2162 = icmp eq i64 %2161, 0
  br i1 %2162, label %2174, label %2163

2163:                                             ; preds = %2156, %2163
  %2164 = phi i64 [ %2169, %2163 ], [ %2157, %2156 ]
  %2165 = phi i16* [ %2171, %2163 ], [ %2158, %2156 ]
  %2166 = phi i16* [ %2170, %2163 ], [ %2159, %2156 ]
  %2167 = phi i64 [ %2172, %2163 ], [ %2161, %2156 ]
  %2168 = load i16, i16* %2165, align 2
  store i16 %2168, i16* %2166, align 2
  %2169 = add i64 %2164, -1
  %2170 = getelementptr inbounds i16, i16* %2166, i64 1
  %2171 = getelementptr inbounds i16, i16* %2165, i64 1
  %2172 = add i64 %2167, -1
  %2173 = icmp eq i64 %2172, 0
  br i1 %2173, label %2174, label %2163, !llvm.loop !101

2174:                                             ; preds = %2163, %2156
  %2175 = phi i64 [ %2157, %2156 ], [ %2169, %2163 ]
  %2176 = phi i16* [ %2158, %2156 ], [ %2171, %2163 ]
  %2177 = phi i16* [ %2159, %2156 ], [ %2170, %2163 ]
  %2178 = icmp ult i64 %2160, 7
  br i1 %2178, label %2209, label %2179

2179:                                             ; preds = %2174, %2179
  %2180 = phi i64 [ %2205, %2179 ], [ %2175, %2174 ]
  %2181 = phi i16* [ %2207, %2179 ], [ %2176, %2174 ]
  %2182 = phi i16* [ %2206, %2179 ], [ %2177, %2174 ]
  %2183 = load i16, i16* %2181, align 2
  store i16 %2183, i16* %2182, align 2
  %2184 = getelementptr inbounds i16, i16* %2182, i64 1
  %2185 = getelementptr inbounds i16, i16* %2181, i64 1
  %2186 = load i16, i16* %2185, align 2
  store i16 %2186, i16* %2184, align 2
  %2187 = getelementptr inbounds i16, i16* %2182, i64 2
  %2188 = getelementptr inbounds i16, i16* %2181, i64 2
  %2189 = load i16, i16* %2188, align 2
  store i16 %2189, i16* %2187, align 2
  %2190 = getelementptr inbounds i16, i16* %2182, i64 3
  %2191 = getelementptr inbounds i16, i16* %2181, i64 3
  %2192 = load i16, i16* %2191, align 2
  store i16 %2192, i16* %2190, align 2
  %2193 = getelementptr inbounds i16, i16* %2182, i64 4
  %2194 = getelementptr inbounds i16, i16* %2181, i64 4
  %2195 = load i16, i16* %2194, align 2
  store i16 %2195, i16* %2193, align 2
  %2196 = getelementptr inbounds i16, i16* %2182, i64 5
  %2197 = getelementptr inbounds i16, i16* %2181, i64 5
  %2198 = load i16, i16* %2197, align 2
  store i16 %2198, i16* %2196, align 2
  %2199 = getelementptr inbounds i16, i16* %2182, i64 6
  %2200 = getelementptr inbounds i16, i16* %2181, i64 6
  %2201 = load i16, i16* %2200, align 2
  store i16 %2201, i16* %2199, align 2
  %2202 = getelementptr inbounds i16, i16* %2182, i64 7
  %2203 = getelementptr inbounds i16, i16* %2181, i64 7
  %2204 = load i16, i16* %2203, align 2
  store i16 %2204, i16* %2202, align 2
  %2205 = add i64 %2180, -8
  %2206 = getelementptr inbounds i16, i16* %2182, i64 8
  %2207 = getelementptr inbounds i16, i16* %2181, i64 8
  %2208 = icmp eq i64 %2205, 0
  br i1 %2208, label %2209, label %2179, !llvm.loop !102

2209:                                             ; preds = %2174, %2179, %2154, %2037
  %2210 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %33, %"class.gfx::FontList"* %2) #12
  br i1 %1947, label %2211, label %2438

2211:                                             ; preds = %2209
  %2212 = fadd float %1946, %2210
  %2213 = bitcast %"class.std::__1::basic_string.4"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2213) #12
  %2214 = fadd float %1203, %2212
  %2215 = bitcast %"class.std::__1::basic_string.4"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2216 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2215, i64 0, i32 1, i32 1
  store i8 2, i8* %2216, align 1
  %2217 = bitcast %"class.std::__1::basic_string.4"* %36 to i16*
  store i16 85, i16* %2217, align 8
  %2218 = getelementptr inbounds i16, i16* %2217, i64 1
  store i16 86, i16* %2218, align 2
  %2219 = getelementptr inbounds i16, i16* %2217, i64 2
  store i16 0, i16* %2219, align 4
  %2220 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %36, %"class.gfx::FontList"* %2) #12
  %2221 = fadd float %2214, %2220
  %2222 = fcmp olt float %2221, %3
  %2223 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2215, i64 0, i32 1, i32 1
  %2224 = load i8, i8* %2223, align 1
  %2225 = icmp slt i8 %2224, 0
  br i1 %2225, label %2226, label %2229

2226:                                             ; preds = %2211
  %2227 = bitcast %"class.std::__1::basic_string.4"* %36 to i8**
  %2228 = load i8*, i8** %2227, align 8
  call void @_ZdlPv(i8* %2228) #14
  br label %2229

2229:                                             ; preds = %2226, %2211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2213) #12
  br i1 %2222, label %2230, label %2438

2230:                                             ; preds = %2229
  %2231 = bitcast %"class.std::__1::basic_string.4"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2231) #12
  %2232 = bitcast %"class.std::__1::basic_string.4"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2232) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2232, i8 0, i64 24, i1 false) #12
  call fastcc void @_ZN12_GLOBAL__N_123BuildPathFromComponentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEES8_m(%"class.std::__1::basic_string.4"* nonnull sret %37, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %38, %"class.std::__1::vector"* nonnull dereferenceable(24) %26, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %28, i64 1)
  %2233 = bitcast %"class.std::__1::basic_string.4"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2234 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2233, i64 0, i32 1, i32 1
  %2235 = load i8, i8* %2234, align 1
  %2236 = icmp slt i8 %2235, 0
  %2237 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2238 = load i16*, i16** %2237, align 8
  %2239 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2240 = load i64, i64* %2239, align 8
  %2241 = bitcast %"class.std::__1::basic_string.4"* %37 to i16*
  %2242 = zext i8 %2235 to i64
  %2243 = select i1 %2236, i16* %2238, i16* %2241
  %2244 = select i1 %2236, i64 %2240, i64 %2242
  %2245 = bitcast %"class.std::__1::basic_string.4"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2246 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2245, i64 0, i32 1, i32 1
  %2247 = load i8, i8* %2246, align 1
  %2248 = icmp slt i8 %2247, 0
  br i1 %2248, label %2249, label %2254

2249:                                             ; preds = %2230
  %2250 = load i64, i64* %2031, align 8
  %2251 = and i64 %2250, 9223372036854775807
  %2252 = add nsw i64 %2251, -1
  %2253 = load i64, i64* %2030, align 8
  br label %2256

2254:                                             ; preds = %2230
  %2255 = zext i8 %2247 to i64
  br label %2256

2256:                                             ; preds = %2254, %2249
  %2257 = phi i64 [ %2252, %2249 ], [ 10, %2254 ]
  %2258 = phi i64 [ %2253, %2249 ], [ %2255, %2254 ]
  %2259 = sub i64 %2257, %2258
  %2260 = icmp ult i64 %2259, %2244
  br i1 %2260, label %2420, label %2261

2261:                                             ; preds = %2256
  %2262 = icmp eq i64 %2244, 0
  br i1 %2262, label %2423, label %2263

2263:                                             ; preds = %2261
  %2264 = load i16*, i16** %2029, align 8
  %2265 = bitcast %"class.std::__1::basic_string.4"* %35 to i16*
  %2266 = select i1 %2248, i16* %2264, i16* %2265
  %2267 = getelementptr inbounds i16, i16* %2266, i64 %2258
  %2268 = icmp ult i64 %2244, 16
  br i1 %2268, label %2358, label %2269

2269:                                             ; preds = %2263
  %2270 = add i64 %2244, %2258
  %2271 = getelementptr i16, i16* %2266, i64 %2270
  %2272 = getelementptr i16, i16* %2243, i64 %2244
  %2273 = icmp ult i16* %2267, %2272
  %2274 = icmp ult i16* %2243, %2271
  %2275 = and i1 %2273, %2274
  br i1 %2275, label %2358, label %2276

2276:                                             ; preds = %2269
  %2277 = and i64 %2244, -16
  %2278 = sub i64 %2244, %2277
  %2279 = getelementptr i16, i16* %2243, i64 %2277
  %2280 = getelementptr i16, i16* %2267, i64 %2277
  %2281 = add i64 %2277, -16
  %2282 = lshr exact i64 %2281, 4
  %2283 = add nuw nsw i64 %2282, 1
  %2284 = and i64 %2283, 3
  %2285 = icmp ult i64 %2281, 48
  br i1 %2285, label %2337, label %2286

2286:                                             ; preds = %2276
  %2287 = sub nsw i64 %2283, %2284
  br label %2288

2288:                                             ; preds = %2288, %2286
  %2289 = phi i64 [ 0, %2286 ], [ %2334, %2288 ]
  %2290 = phi i64 [ %2287, %2286 ], [ %2335, %2288 ]
  %2291 = getelementptr i16, i16* %2243, i64 %2289
  %2292 = getelementptr i16, i16* %2267, i64 %2289
  %2293 = bitcast i16* %2291 to <8 x i16>*
  %2294 = load <8 x i16>, <8 x i16>* %2293, align 2, !alias.scope !103
  %2295 = getelementptr i16, i16* %2291, i64 8
  %2296 = bitcast i16* %2295 to <8 x i16>*
  %2297 = load <8 x i16>, <8 x i16>* %2296, align 2, !alias.scope !103
  %2298 = bitcast i16* %2292 to <8 x i16>*
  store <8 x i16> %2294, <8 x i16>* %2298, align 2, !alias.scope !106, !noalias !103
  %2299 = getelementptr i16, i16* %2292, i64 8
  %2300 = bitcast i16* %2299 to <8 x i16>*
  store <8 x i16> %2297, <8 x i16>* %2300, align 2, !alias.scope !106, !noalias !103
  %2301 = or i64 %2289, 16
  %2302 = getelementptr i16, i16* %2243, i64 %2301
  %2303 = getelementptr i16, i16* %2267, i64 %2301
  %2304 = bitcast i16* %2302 to <8 x i16>*
  %2305 = load <8 x i16>, <8 x i16>* %2304, align 2, !alias.scope !103
  %2306 = getelementptr i16, i16* %2302, i64 8
  %2307 = bitcast i16* %2306 to <8 x i16>*
  %2308 = load <8 x i16>, <8 x i16>* %2307, align 2, !alias.scope !103
  %2309 = bitcast i16* %2303 to <8 x i16>*
  store <8 x i16> %2305, <8 x i16>* %2309, align 2, !alias.scope !106, !noalias !103
  %2310 = getelementptr i16, i16* %2303, i64 8
  %2311 = bitcast i16* %2310 to <8 x i16>*
  store <8 x i16> %2308, <8 x i16>* %2311, align 2, !alias.scope !106, !noalias !103
  %2312 = or i64 %2289, 32
  %2313 = getelementptr i16, i16* %2243, i64 %2312
  %2314 = getelementptr i16, i16* %2267, i64 %2312
  %2315 = bitcast i16* %2313 to <8 x i16>*
  %2316 = load <8 x i16>, <8 x i16>* %2315, align 2, !alias.scope !103
  %2317 = getelementptr i16, i16* %2313, i64 8
  %2318 = bitcast i16* %2317 to <8 x i16>*
  %2319 = load <8 x i16>, <8 x i16>* %2318, align 2, !alias.scope !103
  %2320 = bitcast i16* %2314 to <8 x i16>*
  store <8 x i16> %2316, <8 x i16>* %2320, align 2, !alias.scope !106, !noalias !103
  %2321 = getelementptr i16, i16* %2314, i64 8
  %2322 = bitcast i16* %2321 to <8 x i16>*
  store <8 x i16> %2319, <8 x i16>* %2322, align 2, !alias.scope !106, !noalias !103
  %2323 = or i64 %2289, 48
  %2324 = getelementptr i16, i16* %2243, i64 %2323
  %2325 = getelementptr i16, i16* %2267, i64 %2323
  %2326 = bitcast i16* %2324 to <8 x i16>*
  %2327 = load <8 x i16>, <8 x i16>* %2326, align 2, !alias.scope !103
  %2328 = getelementptr i16, i16* %2324, i64 8
  %2329 = bitcast i16* %2328 to <8 x i16>*
  %2330 = load <8 x i16>, <8 x i16>* %2329, align 2, !alias.scope !103
  %2331 = bitcast i16* %2325 to <8 x i16>*
  store <8 x i16> %2327, <8 x i16>* %2331, align 2, !alias.scope !106, !noalias !103
  %2332 = getelementptr i16, i16* %2325, i64 8
  %2333 = bitcast i16* %2332 to <8 x i16>*
  store <8 x i16> %2330, <8 x i16>* %2333, align 2, !alias.scope !106, !noalias !103
  %2334 = add i64 %2289, 64
  %2335 = add i64 %2290, -4
  %2336 = icmp eq i64 %2335, 0
  br i1 %2336, label %2337, label %2288, !llvm.loop !108

2337:                                             ; preds = %2288, %2276
  %2338 = phi i64 [ 0, %2276 ], [ %2334, %2288 ]
  %2339 = icmp eq i64 %2284, 0
  br i1 %2339, label %2356, label %2340

2340:                                             ; preds = %2337, %2340
  %2341 = phi i64 [ %2353, %2340 ], [ %2338, %2337 ]
  %2342 = phi i64 [ %2354, %2340 ], [ %2284, %2337 ]
  %2343 = getelementptr i16, i16* %2243, i64 %2341
  %2344 = getelementptr i16, i16* %2267, i64 %2341
  %2345 = bitcast i16* %2343 to <8 x i16>*
  %2346 = load <8 x i16>, <8 x i16>* %2345, align 2, !alias.scope !103
  %2347 = getelementptr i16, i16* %2343, i64 8
  %2348 = bitcast i16* %2347 to <8 x i16>*
  %2349 = load <8 x i16>, <8 x i16>* %2348, align 2, !alias.scope !103
  %2350 = bitcast i16* %2344 to <8 x i16>*
  store <8 x i16> %2346, <8 x i16>* %2350, align 2, !alias.scope !106, !noalias !103
  %2351 = getelementptr i16, i16* %2344, i64 8
  %2352 = bitcast i16* %2351 to <8 x i16>*
  store <8 x i16> %2349, <8 x i16>* %2352, align 2, !alias.scope !106, !noalias !103
  %2353 = add i64 %2341, 16
  %2354 = add i64 %2342, -1
  %2355 = icmp eq i64 %2354, 0
  br i1 %2355, label %2356, label %2340, !llvm.loop !109

2356:                                             ; preds = %2340, %2337
  %2357 = icmp eq i64 %2244, %2277
  br i1 %2357, label %2411, label %2358

2358:                                             ; preds = %2356, %2269, %2263
  %2359 = phi i64 [ %2244, %2269 ], [ %2244, %2263 ], [ %2278, %2356 ]
  %2360 = phi i16* [ %2243, %2269 ], [ %2243, %2263 ], [ %2279, %2356 ]
  %2361 = phi i16* [ %2267, %2269 ], [ %2267, %2263 ], [ %2280, %2356 ]
  %2362 = add i64 %2359, -1
  %2363 = and i64 %2359, 7
  %2364 = icmp eq i64 %2363, 0
  br i1 %2364, label %2376, label %2365

2365:                                             ; preds = %2358, %2365
  %2366 = phi i64 [ %2371, %2365 ], [ %2359, %2358 ]
  %2367 = phi i16* [ %2373, %2365 ], [ %2360, %2358 ]
  %2368 = phi i16* [ %2372, %2365 ], [ %2361, %2358 ]
  %2369 = phi i64 [ %2374, %2365 ], [ %2363, %2358 ]
  %2370 = load i16, i16* %2367, align 2
  store i16 %2370, i16* %2368, align 2
  %2371 = add i64 %2366, -1
  %2372 = getelementptr inbounds i16, i16* %2368, i64 1
  %2373 = getelementptr inbounds i16, i16* %2367, i64 1
  %2374 = add i64 %2369, -1
  %2375 = icmp eq i64 %2374, 0
  br i1 %2375, label %2376, label %2365, !llvm.loop !110

2376:                                             ; preds = %2365, %2358
  %2377 = phi i64 [ %2359, %2358 ], [ %2371, %2365 ]
  %2378 = phi i16* [ %2360, %2358 ], [ %2373, %2365 ]
  %2379 = phi i16* [ %2361, %2358 ], [ %2372, %2365 ]
  %2380 = icmp ult i64 %2362, 7
  br i1 %2380, label %2411, label %2381

2381:                                             ; preds = %2376, %2381
  %2382 = phi i64 [ %2407, %2381 ], [ %2377, %2376 ]
  %2383 = phi i16* [ %2409, %2381 ], [ %2378, %2376 ]
  %2384 = phi i16* [ %2408, %2381 ], [ %2379, %2376 ]
  %2385 = load i16, i16* %2383, align 2
  store i16 %2385, i16* %2384, align 2
  %2386 = getelementptr inbounds i16, i16* %2384, i64 1
  %2387 = getelementptr inbounds i16, i16* %2383, i64 1
  %2388 = load i16, i16* %2387, align 2
  store i16 %2388, i16* %2386, align 2
  %2389 = getelementptr inbounds i16, i16* %2384, i64 2
  %2390 = getelementptr inbounds i16, i16* %2383, i64 2
  %2391 = load i16, i16* %2390, align 2
  store i16 %2391, i16* %2389, align 2
  %2392 = getelementptr inbounds i16, i16* %2384, i64 3
  %2393 = getelementptr inbounds i16, i16* %2383, i64 3
  %2394 = load i16, i16* %2393, align 2
  store i16 %2394, i16* %2392, align 2
  %2395 = getelementptr inbounds i16, i16* %2384, i64 4
  %2396 = getelementptr inbounds i16, i16* %2383, i64 4
  %2397 = load i16, i16* %2396, align 2
  store i16 %2397, i16* %2395, align 2
  %2398 = getelementptr inbounds i16, i16* %2384, i64 5
  %2399 = getelementptr inbounds i16, i16* %2383, i64 5
  %2400 = load i16, i16* %2399, align 2
  store i16 %2400, i16* %2398, align 2
  %2401 = getelementptr inbounds i16, i16* %2384, i64 6
  %2402 = getelementptr inbounds i16, i16* %2383, i64 6
  %2403 = load i16, i16* %2402, align 2
  store i16 %2403, i16* %2401, align 2
  %2404 = getelementptr inbounds i16, i16* %2384, i64 7
  %2405 = getelementptr inbounds i16, i16* %2383, i64 7
  %2406 = load i16, i16* %2405, align 2
  store i16 %2406, i16* %2404, align 2
  %2407 = add i64 %2382, -8
  %2408 = getelementptr inbounds i16, i16* %2384, i64 8
  %2409 = getelementptr inbounds i16, i16* %2383, i64 8
  %2410 = icmp eq i64 %2407, 0
  br i1 %2410, label %2411, label %2381, !llvm.loop !111

2411:                                             ; preds = %2376, %2381, %2356
  %2412 = add i64 %2258, %2244
  %2413 = load i8, i8* %2246, align 1
  %2414 = icmp slt i8 %2413, 0
  br i1 %2414, label %2415, label %2416

2415:                                             ; preds = %2411
  store i64 %2412, i64* %2030, align 8
  br label %2418

2416:                                             ; preds = %2411
  %2417 = trunc i64 %2412 to i8
  store i8 %2417, i8* %2246, align 1
  br label %2418

2418:                                             ; preds = %2416, %2415
  %2419 = getelementptr inbounds i16, i16* %2266, i64 %2412
  store i16 0, i16* %2419, align 2
  br label %2423

2420:                                             ; preds = %2256
  %2421 = add i64 %2258, %2244
  %2422 = sub i64 %2421, %2257
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %35, i64 %2257, i64 %2422, i64 %2258, i64 %2258, i64 0, i64 %2244, i16* %2243) #12
  br label %2423

2423:                                             ; preds = %2261, %2418, %2420
  %2424 = load i8, i8* %2234, align 1
  %2425 = icmp slt i8 %2424, 0
  br i1 %2425, label %2426, label %2429

2426:                                             ; preds = %2423
  %2427 = bitcast %"class.std::__1::basic_string.4"* %37 to i8**
  %2428 = load i8*, i8** %2427, align 8
  call void @_ZdlPv(i8* %2428) #14
  br label %2429

2429:                                             ; preds = %2423, %2426
  %2430 = bitcast %"class.std::__1::basic_string.4"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2431 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2430, i64 0, i32 1, i32 1
  %2432 = load i8, i8* %2431, align 1
  %2433 = icmp slt i8 %2432, 0
  br i1 %2433, label %2434, label %2437

2434:                                             ; preds = %2429
  %2435 = bitcast %"class.std::__1::basic_string.4"* %38 to i8**
  %2436 = load i8*, i8** %2435, align 8
  call void @_ZdlPv(i8* %2436) #14
  br label %2437

2437:                                             ; preds = %2429, %2434
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2232) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2231) #12
  br label %2624

2438:                                             ; preds = %2209, %2229
  %2439 = load i8, i8* %1465, align 1
  %2440 = icmp slt i8 %2439, 0
  %2441 = load i16*, i16** %423, align 8
  %2442 = load i64, i64* %424, align 8
  %2443 = zext i8 %2439 to i64
  %2444 = select i1 %2440, i16* %2441, i16* %1469
  %2445 = select i1 %2440, i64 %2442, i64 %2443
  %2446 = bitcast %"class.std::__1::basic_string.4"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2447 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2446, i64 0, i32 1, i32 1
  %2448 = load i8, i8* %2447, align 1
  %2449 = icmp slt i8 %2448, 0
  br i1 %2449, label %2450, label %2455

2450:                                             ; preds = %2438
  %2451 = load i64, i64* %2031, align 8
  %2452 = and i64 %2451, 9223372036854775807
  %2453 = add nsw i64 %2452, -1
  %2454 = load i64, i64* %2030, align 8
  br label %2457

2455:                                             ; preds = %2438
  %2456 = zext i8 %2448 to i64
  br label %2457

2457:                                             ; preds = %2455, %2450
  %2458 = phi i64 [ %2453, %2450 ], [ 10, %2455 ]
  %2459 = phi i64 [ %2454, %2450 ], [ %2456, %2455 ]
  %2460 = sub i64 %2458, %2459
  %2461 = icmp ult i64 %2460, %2445
  br i1 %2461, label %2621, label %2462

2462:                                             ; preds = %2457
  %2463 = icmp eq i64 %2445, 0
  br i1 %2463, label %2624, label %2464

2464:                                             ; preds = %2462
  %2465 = load i16*, i16** %2029, align 8
  %2466 = bitcast %"class.std::__1::basic_string.4"* %35 to i16*
  %2467 = select i1 %2449, i16* %2465, i16* %2466
  %2468 = getelementptr inbounds i16, i16* %2467, i64 %2459
  %2469 = icmp ult i64 %2445, 16
  br i1 %2469, label %2559, label %2470

2470:                                             ; preds = %2464
  %2471 = add i64 %2445, %2459
  %2472 = getelementptr i16, i16* %2467, i64 %2471
  %2473 = getelementptr i16, i16* %2444, i64 %2445
  %2474 = icmp ult i16* %2468, %2473
  %2475 = icmp ult i16* %2444, %2472
  %2476 = and i1 %2474, %2475
  br i1 %2476, label %2559, label %2477

2477:                                             ; preds = %2470
  %2478 = and i64 %2445, -16
  %2479 = sub i64 %2445, %2478
  %2480 = getelementptr i16, i16* %2444, i64 %2478
  %2481 = getelementptr i16, i16* %2468, i64 %2478
  %2482 = add i64 %2478, -16
  %2483 = lshr exact i64 %2482, 4
  %2484 = add nuw nsw i64 %2483, 1
  %2485 = and i64 %2484, 3
  %2486 = icmp ult i64 %2482, 48
  br i1 %2486, label %2538, label %2487

2487:                                             ; preds = %2477
  %2488 = sub nsw i64 %2484, %2485
  br label %2489

2489:                                             ; preds = %2489, %2487
  %2490 = phi i64 [ 0, %2487 ], [ %2535, %2489 ]
  %2491 = phi i64 [ %2488, %2487 ], [ %2536, %2489 ]
  %2492 = getelementptr i16, i16* %2444, i64 %2490
  %2493 = getelementptr i16, i16* %2468, i64 %2490
  %2494 = bitcast i16* %2492 to <8 x i16>*
  %2495 = load <8 x i16>, <8 x i16>* %2494, align 2, !alias.scope !112
  %2496 = getelementptr i16, i16* %2492, i64 8
  %2497 = bitcast i16* %2496 to <8 x i16>*
  %2498 = load <8 x i16>, <8 x i16>* %2497, align 2, !alias.scope !112
  %2499 = bitcast i16* %2493 to <8 x i16>*
  store <8 x i16> %2495, <8 x i16>* %2499, align 2, !alias.scope !115, !noalias !112
  %2500 = getelementptr i16, i16* %2493, i64 8
  %2501 = bitcast i16* %2500 to <8 x i16>*
  store <8 x i16> %2498, <8 x i16>* %2501, align 2, !alias.scope !115, !noalias !112
  %2502 = or i64 %2490, 16
  %2503 = getelementptr i16, i16* %2444, i64 %2502
  %2504 = getelementptr i16, i16* %2468, i64 %2502
  %2505 = bitcast i16* %2503 to <8 x i16>*
  %2506 = load <8 x i16>, <8 x i16>* %2505, align 2, !alias.scope !112
  %2507 = getelementptr i16, i16* %2503, i64 8
  %2508 = bitcast i16* %2507 to <8 x i16>*
  %2509 = load <8 x i16>, <8 x i16>* %2508, align 2, !alias.scope !112
  %2510 = bitcast i16* %2504 to <8 x i16>*
  store <8 x i16> %2506, <8 x i16>* %2510, align 2, !alias.scope !115, !noalias !112
  %2511 = getelementptr i16, i16* %2504, i64 8
  %2512 = bitcast i16* %2511 to <8 x i16>*
  store <8 x i16> %2509, <8 x i16>* %2512, align 2, !alias.scope !115, !noalias !112
  %2513 = or i64 %2490, 32
  %2514 = getelementptr i16, i16* %2444, i64 %2513
  %2515 = getelementptr i16, i16* %2468, i64 %2513
  %2516 = bitcast i16* %2514 to <8 x i16>*
  %2517 = load <8 x i16>, <8 x i16>* %2516, align 2, !alias.scope !112
  %2518 = getelementptr i16, i16* %2514, i64 8
  %2519 = bitcast i16* %2518 to <8 x i16>*
  %2520 = load <8 x i16>, <8 x i16>* %2519, align 2, !alias.scope !112
  %2521 = bitcast i16* %2515 to <8 x i16>*
  store <8 x i16> %2517, <8 x i16>* %2521, align 2, !alias.scope !115, !noalias !112
  %2522 = getelementptr i16, i16* %2515, i64 8
  %2523 = bitcast i16* %2522 to <8 x i16>*
  store <8 x i16> %2520, <8 x i16>* %2523, align 2, !alias.scope !115, !noalias !112
  %2524 = or i64 %2490, 48
  %2525 = getelementptr i16, i16* %2444, i64 %2524
  %2526 = getelementptr i16, i16* %2468, i64 %2524
  %2527 = bitcast i16* %2525 to <8 x i16>*
  %2528 = load <8 x i16>, <8 x i16>* %2527, align 2, !alias.scope !112
  %2529 = getelementptr i16, i16* %2525, i64 8
  %2530 = bitcast i16* %2529 to <8 x i16>*
  %2531 = load <8 x i16>, <8 x i16>* %2530, align 2, !alias.scope !112
  %2532 = bitcast i16* %2526 to <8 x i16>*
  store <8 x i16> %2528, <8 x i16>* %2532, align 2, !alias.scope !115, !noalias !112
  %2533 = getelementptr i16, i16* %2526, i64 8
  %2534 = bitcast i16* %2533 to <8 x i16>*
  store <8 x i16> %2531, <8 x i16>* %2534, align 2, !alias.scope !115, !noalias !112
  %2535 = add i64 %2490, 64
  %2536 = add i64 %2491, -4
  %2537 = icmp eq i64 %2536, 0
  br i1 %2537, label %2538, label %2489, !llvm.loop !117

2538:                                             ; preds = %2489, %2477
  %2539 = phi i64 [ 0, %2477 ], [ %2535, %2489 ]
  %2540 = icmp eq i64 %2485, 0
  br i1 %2540, label %2557, label %2541

2541:                                             ; preds = %2538, %2541
  %2542 = phi i64 [ %2554, %2541 ], [ %2539, %2538 ]
  %2543 = phi i64 [ %2555, %2541 ], [ %2485, %2538 ]
  %2544 = getelementptr i16, i16* %2444, i64 %2542
  %2545 = getelementptr i16, i16* %2468, i64 %2542
  %2546 = bitcast i16* %2544 to <8 x i16>*
  %2547 = load <8 x i16>, <8 x i16>* %2546, align 2, !alias.scope !112
  %2548 = getelementptr i16, i16* %2544, i64 8
  %2549 = bitcast i16* %2548 to <8 x i16>*
  %2550 = load <8 x i16>, <8 x i16>* %2549, align 2, !alias.scope !112
  %2551 = bitcast i16* %2545 to <8 x i16>*
  store <8 x i16> %2547, <8 x i16>* %2551, align 2, !alias.scope !115, !noalias !112
  %2552 = getelementptr i16, i16* %2545, i64 8
  %2553 = bitcast i16* %2552 to <8 x i16>*
  store <8 x i16> %2550, <8 x i16>* %2553, align 2, !alias.scope !115, !noalias !112
  %2554 = add i64 %2542, 16
  %2555 = add i64 %2543, -1
  %2556 = icmp eq i64 %2555, 0
  br i1 %2556, label %2557, label %2541, !llvm.loop !118

2557:                                             ; preds = %2541, %2538
  %2558 = icmp eq i64 %2445, %2478
  br i1 %2558, label %2612, label %2559

2559:                                             ; preds = %2557, %2470, %2464
  %2560 = phi i64 [ %2445, %2470 ], [ %2445, %2464 ], [ %2479, %2557 ]
  %2561 = phi i16* [ %2444, %2470 ], [ %2444, %2464 ], [ %2480, %2557 ]
  %2562 = phi i16* [ %2468, %2470 ], [ %2468, %2464 ], [ %2481, %2557 ]
  %2563 = add i64 %2560, -1
  %2564 = and i64 %2560, 7
  %2565 = icmp eq i64 %2564, 0
  br i1 %2565, label %2577, label %2566

2566:                                             ; preds = %2559, %2566
  %2567 = phi i64 [ %2572, %2566 ], [ %2560, %2559 ]
  %2568 = phi i16* [ %2574, %2566 ], [ %2561, %2559 ]
  %2569 = phi i16* [ %2573, %2566 ], [ %2562, %2559 ]
  %2570 = phi i64 [ %2575, %2566 ], [ %2564, %2559 ]
  %2571 = load i16, i16* %2568, align 2
  store i16 %2571, i16* %2569, align 2
  %2572 = add i64 %2567, -1
  %2573 = getelementptr inbounds i16, i16* %2569, i64 1
  %2574 = getelementptr inbounds i16, i16* %2568, i64 1
  %2575 = add i64 %2570, -1
  %2576 = icmp eq i64 %2575, 0
  br i1 %2576, label %2577, label %2566, !llvm.loop !119

2577:                                             ; preds = %2566, %2559
  %2578 = phi i64 [ %2560, %2559 ], [ %2572, %2566 ]
  %2579 = phi i16* [ %2561, %2559 ], [ %2574, %2566 ]
  %2580 = phi i16* [ %2562, %2559 ], [ %2573, %2566 ]
  %2581 = icmp ult i64 %2563, 7
  br i1 %2581, label %2612, label %2582

2582:                                             ; preds = %2577, %2582
  %2583 = phi i64 [ %2608, %2582 ], [ %2578, %2577 ]
  %2584 = phi i16* [ %2610, %2582 ], [ %2579, %2577 ]
  %2585 = phi i16* [ %2609, %2582 ], [ %2580, %2577 ]
  %2586 = load i16, i16* %2584, align 2
  store i16 %2586, i16* %2585, align 2
  %2587 = getelementptr inbounds i16, i16* %2585, i64 1
  %2588 = getelementptr inbounds i16, i16* %2584, i64 1
  %2589 = load i16, i16* %2588, align 2
  store i16 %2589, i16* %2587, align 2
  %2590 = getelementptr inbounds i16, i16* %2585, i64 2
  %2591 = getelementptr inbounds i16, i16* %2584, i64 2
  %2592 = load i16, i16* %2591, align 2
  store i16 %2592, i16* %2590, align 2
  %2593 = getelementptr inbounds i16, i16* %2585, i64 3
  %2594 = getelementptr inbounds i16, i16* %2584, i64 3
  %2595 = load i16, i16* %2594, align 2
  store i16 %2595, i16* %2593, align 2
  %2596 = getelementptr inbounds i16, i16* %2585, i64 4
  %2597 = getelementptr inbounds i16, i16* %2584, i64 4
  %2598 = load i16, i16* %2597, align 2
  store i16 %2598, i16* %2596, align 2
  %2599 = getelementptr inbounds i16, i16* %2585, i64 5
  %2600 = getelementptr inbounds i16, i16* %2584, i64 5
  %2601 = load i16, i16* %2600, align 2
  store i16 %2601, i16* %2599, align 2
  %2602 = getelementptr inbounds i16, i16* %2585, i64 6
  %2603 = getelementptr inbounds i16, i16* %2584, i64 6
  %2604 = load i16, i16* %2603, align 2
  store i16 %2604, i16* %2602, align 2
  %2605 = getelementptr inbounds i16, i16* %2585, i64 7
  %2606 = getelementptr inbounds i16, i16* %2584, i64 7
  %2607 = load i16, i16* %2606, align 2
  store i16 %2607, i16* %2605, align 2
  %2608 = add i64 %2583, -8
  %2609 = getelementptr inbounds i16, i16* %2585, i64 8
  %2610 = getelementptr inbounds i16, i16* %2584, i64 8
  %2611 = icmp eq i64 %2608, 0
  br i1 %2611, label %2612, label %2582, !llvm.loop !120

2612:                                             ; preds = %2577, %2582, %2557
  %2613 = add i64 %2459, %2445
  %2614 = load i8, i8* %2447, align 1
  %2615 = icmp slt i8 %2614, 0
  br i1 %2615, label %2616, label %2617

2616:                                             ; preds = %2612
  store i64 %2613, i64* %2030, align 8
  br label %2619

2617:                                             ; preds = %2612
  %2618 = trunc i64 %2613 to i8
  store i8 %2618, i8* %2447, align 1
  br label %2619

2619:                                             ; preds = %2617, %2616
  %2620 = getelementptr inbounds i16, i16* %2467, i64 %2613
  store i16 0, i16* %2620, align 2
  br label %2624

2621:                                             ; preds = %2457
  %2622 = add i64 %2459, %2445
  %2623 = sub i64 %2622, %2458
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %35, i64 %2458, i64 %2623, i64 %2459, i64 %2459, i64 0, i64 %2445, i16* %2444) #12
  br label %2624

2624:                                             ; preds = %2621, %2619, %2462, %2437
  %2625 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %2446, %2621 ], [ %2446, %2619 ], [ %2446, %2462 ], [ %2245, %2437 ]
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %35, %"class.gfx::FontList"* %2, float %3, i32 4) #12
  %2626 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2625, i64 0, i32 1, i32 1
  %2627 = load i8, i8* %2626, align 1
  %2628 = icmp slt i8 %2627, 0
  br i1 %2628, label %2629, label %2632

2629:                                             ; preds = %2624
  %2630 = bitcast %"class.std::__1::basic_string.4"* %35 to i8**
  %2631 = load i8*, i8** %2630, align 8
  call void @_ZdlPv(i8* %2631) #14
  br label %2632

2632:                                             ; preds = %2624, %2629
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2028) #12
  br label %2633

2633:                                             ; preds = %2025, %2632
  %2634 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %2026, %2025 ], [ %2032, %2632 ]
  %2635 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2634, i64 0, i32 1, i32 1
  %2636 = load i8, i8* %2635, align 1
  %2637 = icmp slt i8 %2636, 0
  br i1 %2637, label %2638, label %2641

2638:                                             ; preds = %2633
  %2639 = bitcast %"class.std::__1::basic_string.4"* %33 to i8**
  %2640 = load i8*, i8** %2639, align 8
  call void @_ZdlPv(i8* %2640) #14
  br label %2641

2641:                                             ; preds = %2633, %2638
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1974) #12
  br label %2642

2642:                                             ; preds = %1972, %2641
  %2643 = bitcast %"class.std::__1::basic_string.4"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2644 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2643, i64 0, i32 1, i32 1
  %2645 = load i8, i8* %2644, align 1
  %2646 = icmp slt i8 %2645, 0
  br i1 %2646, label %2647, label %2650

2647:                                             ; preds = %2642
  %2648 = bitcast %"class.std::__1::basic_string.4"* %30 to i8**
  %2649 = load i8*, i8** %2648, align 8
  call void @_ZdlPv(i8* %2649) #14
  br label %2650

2650:                                             ; preds = %2642, %2647
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1713) #12
  %2651 = load i8, i8* %1691, align 1
  %2652 = icmp slt i8 %2651, 0
  br i1 %2652, label %2653, label %2656

2653:                                             ; preds = %2650
  %2654 = bitcast %"class.std::__1::basic_string.4"* %28 to i8**
  %2655 = load i8*, i8** %2654, align 8
  call void @_ZdlPv(i8* %2655) #14
  br label %2656

2656:                                             ; preds = %2650, %2653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1487) #12
  %2657 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %1462, align 8
  %2658 = icmp eq %"class.std::__1::basic_string.4"* %2657, null
  br i1 %2658, label %2680, label %2659

2659:                                             ; preds = %2656
  %2660 = bitcast %"class.std::__1::basic_string.4"* %2657 to i8*
  %2661 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %1463, align 8
  %2662 = icmp eq %"class.std::__1::basic_string.4"* %2661, %2657
  br i1 %2662, label %2678, label %2663

2663:                                             ; preds = %2659, %2673
  %2664 = phi %"class.std::__1::basic_string.4"* [ %2665, %2673 ], [ %2661, %2659 ]
  %2665 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2664, i64 -1
  %2666 = bitcast %"class.std::__1::basic_string.4"* %2665 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2667 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2666, i64 0, i32 1, i32 1
  %2668 = load i8, i8* %2667, align 1
  %2669 = icmp slt i8 %2668, 0
  br i1 %2669, label %2670, label %2673

2670:                                             ; preds = %2663
  %2671 = bitcast %"class.std::__1::basic_string.4"* %2665 to i8**
  %2672 = load i8*, i8** %2671, align 8
  call void @_ZdlPv(i8* %2672) #14
  br label %2673

2673:                                             ; preds = %2670, %2663
  %2674 = icmp eq %"class.std::__1::basic_string.4"* %2665, %2657
  br i1 %2674, label %2675, label %2663

2675:                                             ; preds = %2673
  %2676 = bitcast %"class.std::__1::vector"* %26 to i8**
  %2677 = load i8*, i8** %2676, align 8
  br label %2678

2678:                                             ; preds = %2675, %2659
  %2679 = phi i8* [ %2677, %2675 ], [ %2660, %2659 ]
  store %"class.std::__1::basic_string.4"* %2657, %"class.std::__1::basic_string.4"** %1463, align 8
  call void @_ZdlPv(i8* %2679) #14
  br label %2680

2680:                                             ; preds = %2656, %2678
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1461) #12
  %2681 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %2682

2682:                                             ; preds = %2680, %1459
  %2683 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %2681, %2680 ], [ %1228, %1459 ]
  %2684 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2683, i64 0, i32 1, i32 1
  %2685 = load i8, i8* %2684, align 1
  %2686 = icmp slt i8 %2685, 0
  br i1 %2686, label %2687, label %2690

2687:                                             ; preds = %2682
  %2688 = bitcast %"class.std::__1::basic_string.4"* %20 to i8**
  %2689 = load i8*, i8** %2688, align 8
  call void @_ZdlPv(i8* %2689) #14
  br label %2690

2690:                                             ; preds = %2682, %2687
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1002) #12
  br label %2691

2691:                                             ; preds = %999, %2690, %798
  %2692 = bitcast %"class.std::__1::basic_string.4"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2693 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2692, i64 0, i32 1, i32 1
  %2694 = load i8, i8* %2693, align 1
  %2695 = icmp slt i8 %2694, 0
  br i1 %2695, label %2696, label %2699

2696:                                             ; preds = %2691
  %2697 = bitcast %"class.std::__1::basic_string.4"* %14 to i8**
  %2698 = load i8*, i8** %2697, align 8
  call void @_ZdlPv(i8* %2698) #14
  br label %2699

2699:                                             ; preds = %2691, %2696
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %463) #12
  %2700 = bitcast %"class.std::__1::basic_string.4"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2701 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2700, i64 0, i32 1, i32 1
  %2702 = load i8, i8* %2701, align 1
  %2703 = icmp slt i8 %2702, 0
  br i1 %2703, label %2704, label %2707

2704:                                             ; preds = %2699
  %2705 = bitcast %"class.std::__1::basic_string.4"* %13 to i8**
  %2706 = load i8*, i8** %2705, align 8
  call void @_ZdlPv(i8* %2706) #14
  br label %2707

2707:                                             ; preds = %2699, %2704
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %460) #12
  %2708 = bitcast %"class.std::__1::basic_string.4"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2709 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2708, i64 0, i32 1, i32 1
  %2710 = load i8, i8* %2709, align 1
  %2711 = icmp slt i8 %2710, 0
  br i1 %2711, label %2712, label %2715

2712:                                             ; preds = %2707
  %2713 = bitcast %"class.std::__1::basic_string.4"* %12 to i8**
  %2714 = load i8*, i8** %2713, align 8
  call void @_ZdlPv(i8* %2714) #14
  br label %2715

2715:                                             ; preds = %2707, %2712
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %457) #12
  br label %2716

2716:                                             ; preds = %2715, %455
  %2717 = bitcast %"class.std::__1::basic_string.4"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2718 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2717, i64 0, i32 1, i32 1
  %2719 = load i8, i8* %2718, align 1
  %2720 = icmp slt i8 %2719, 0
  br i1 %2720, label %2721, label %2724

2721:                                             ; preds = %2716
  %2722 = bitcast %"class.std::__1::basic_string.4"* %11 to i8**
  %2723 = load i8*, i8** %2722, align 8
  call void @_ZdlPv(i8* %2723) #14
  br label %2724

2724:                                             ; preds = %2716, %2721
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #12
  %2725 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2726 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2725, i64 0, i32 1, i32 1
  %2727 = load i8, i8* %2726, align 1
  %2728 = icmp slt i8 %2727, 0
  br i1 %2728, label %2729, label %2732

2729:                                             ; preds = %2724
  %2730 = bitcast %"class.std::__1::basic_string.4"* %8 to i8**
  %2731 = load i8*, i8** %2730, align 8
  call void @_ZdlPv(i8* %2731) #14
  br label %2732

2732:                                             ; preds = %2724, %2729
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %422) #12
  %2733 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2734 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2733, i64 0, i32 1, i32 1
  %2735 = load i8, i8* %2734, align 1
  %2736 = icmp slt i8 %2735, 0
  br i1 %2736, label %2737, label %2740

2737:                                             ; preds = %2732
  %2738 = bitcast %"class.std::__1::basic_string.4"* %7 to i8**
  %2739 = load i8*, i8** %2738, align 8
  call void @_ZdlPv(i8* %2739) #14
  br label %2740

2740:                                             ; preds = %2732, %2737
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #12
  br label %2741

2741:                                             ; preds = %191, %196, %377, %382, %171, %357, %237, %51, %2740, %228
  %2742 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2743 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2742, i64 0, i32 1, i32 1
  %2744 = load i8, i8* %2743, align 1
  %2745 = icmp slt i8 %2744, 0
  br i1 %2745, label %2746, label %2749

2746:                                             ; preds = %2741
  %2747 = bitcast %"class.std::__1::basic_string.4"* %6 to i8**
  %2748 = load i8*, i8** %2747, align 8
  call void @_ZdlPv(i8* %2748) #14
  br label %2749

2749:                                             ; preds = %2741, %2746
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #12
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %39) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #2

declare void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string.4"* sret, %class.GURL* dereferenceable(120), i32, i32, %"struct.url::Parsed"*, i64*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string.4"* sret, %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.gfx::FontList"*, float, i32) local_unnamed_addr #2

declare float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* dereferenceable(24), %"class.gfx::FontList"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_19SplitHostERK4GURLPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEESA_SA_(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::allocator", align 1
  %6 = alloca %"class.std::__1::allocator", align 1
  %7 = alloca %"class.std::__1::allocator", align 1
  %8 = alloca %"class.std::__1::allocator", align 1
  %9 = alloca %"class.std::__1::basic_string.4", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string.4", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string.4", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string.4", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string.4", align 8
  %21 = alloca %"class.std::__1::basic_string.4", align 8
  %22 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 1
  %25 = load i32, i32* %24, align 4, !noalias !121
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #12, !alias.scope !121
  %28 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %43

29:                                               ; preds = %4
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %31 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 0
  %32 = load i32, i32* %31, align 4, !noalias !121
  %33 = sext i32 %32 to i64
  %34 = sext i32 %25 to i64
  %35 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #12, !noalias !121
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %30, i64 %33, i64 %34, %"class.std::__1::allocator"* nonnull dereferenceable(1) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #12, !noalias !121
  %36 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %27, %29
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %27 ], [ %36, %29 ]
  %45 = phi i64 [ 0, %27 ], [ %42, %29 ]
  %46 = phi i8* [ null, %27 ], [ %40, %29 ]
  %47 = phi i8 [ 0, %27 ], [ %38, %29 ]
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %49 = icmp slt i8 %47, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = select i1 %49, i8* %46, i8* %23
  %52 = zext i8 %47 to i64
  %53 = select i1 %49, i64 %45, i64 %52
  call void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %9, i8* %51, i64 %53) #12
  %54 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %43
  %59 = bitcast %"class.std::__1::basic_string.4"* %1 to i8**
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %58, %43
  %62 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %22, i64 24, i1 false) #12
  %63 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  store i8 0, i8* %64, align 1
  %65 = bitcast %"class.std::__1::basic_string.4"* %9 to i16*
  store i16 0, i16* %65, align 8
  %66 = load i8, i8* %48, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %61, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  %71 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERK4GURLNS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %11, %class.GURL* dereferenceable(120) %0, i32 0) #12
  %75 = bitcast %"class.std::__1::basic_string.4"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %73, align 8
  %81 = zext i8 %78 to i64
  %82 = select i1 %79, i64 %80, i64 %81
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %263

84:                                               ; preds = %70
  %85 = load i8, i8* %55, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 %62, i64 24, i1 false) #12
  br label %266

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, 11
  br i1 %93, label %94, label %99

94:                                               ; preds = %88
  %95 = bitcast %"class.std::__1::basic_string.4"* %12 to i16*
  %96 = trunc i64 %92 to i8
  %97 = bitcast %"class.std::__1::basic_string.4"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  store i8 %96, i8* %98, align 1
  br label %116

99:                                               ; preds = %88
  %100 = icmp ugt i64 %92, 9223372036854775791
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::basic_string.4"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %102) #13
  unreachable

103:                                              ; preds = %99
  %104 = add nuw nsw i64 %92, 8
  %105 = and i64 %104, -8
  %106 = icmp slt i64 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  call void @abort() #13
  unreachable

108:                                              ; preds = %103
  %109 = shl i64 %105, 1
  %110 = call i8* @_Znwm(i64 %109) #14
  %111 = bitcast i8* %110 to i16*
  %112 = bitcast %"class.std::__1::basic_string.4"* %12 to i8**
  store i8* %110, i8** %112, align 8
  %113 = or i64 %105, -9223372036854775808
  %114 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %92, i64* %115, align 8
  br label %116

116:                                              ; preds = %108, %94
  %117 = phi i16* [ %95, %94 ], [ %111, %108 ]
  %118 = add nuw nsw i64 %92, 1
  %119 = add i64 %92, 1
  %120 = icmp ult i64 %119, 16
  br i1 %120, label %210, label %121

121:                                              ; preds = %116
  %122 = add i64 %92, 1
  %123 = getelementptr i16, i16* %117, i64 %122
  %124 = getelementptr i16, i16* %90, i64 %122
  %125 = icmp ult i16* %117, %124
  %126 = icmp ult i16* %90, %123
  %127 = and i1 %125, %126
  br i1 %127, label %210, label %128

128:                                              ; preds = %121
  %129 = and i64 %119, -16
  %130 = sub i64 %118, %129
  %131 = getelementptr i16, i16* %90, i64 %129
  %132 = getelementptr i16, i16* %117, i64 %129
  %133 = add i64 %129, -16
  %134 = lshr exact i64 %133, 4
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 48
  br i1 %137, label %189, label %138

138:                                              ; preds = %128
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %186, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %187, %140 ]
  %143 = getelementptr i16, i16* %90, i64 %141
  %144 = getelementptr i16, i16* %117, i64 %141
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !126
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !126
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !129, !noalias !126
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !129, !noalias !126
  %153 = or i64 %141, 16
  %154 = getelementptr i16, i16* %90, i64 %153
  %155 = getelementptr i16, i16* %117, i64 %153
  %156 = bitcast i16* %154 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !126
  %158 = getelementptr i16, i16* %154, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !126
  %161 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %161, align 2, !alias.scope !129, !noalias !126
  %162 = getelementptr i16, i16* %155, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %163, align 2, !alias.scope !129, !noalias !126
  %164 = or i64 %141, 32
  %165 = getelementptr i16, i16* %90, i64 %164
  %166 = getelementptr i16, i16* %117, i64 %164
  %167 = bitcast i16* %165 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !126
  %169 = getelementptr i16, i16* %165, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !126
  %172 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %172, align 2, !alias.scope !129, !noalias !126
  %173 = getelementptr i16, i16* %166, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %174, align 2, !alias.scope !129, !noalias !126
  %175 = or i64 %141, 48
  %176 = getelementptr i16, i16* %90, i64 %175
  %177 = getelementptr i16, i16* %117, i64 %175
  %178 = bitcast i16* %176 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !126
  %180 = getelementptr i16, i16* %176, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !126
  %183 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %183, align 2, !alias.scope !129, !noalias !126
  %184 = getelementptr i16, i16* %177, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %185, align 2, !alias.scope !129, !noalias !126
  %186 = add i64 %141, 64
  %187 = add i64 %142, -4
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %140, !llvm.loop !131

189:                                              ; preds = %140, %128
  %190 = phi i64 [ 0, %128 ], [ %186, %140 ]
  %191 = icmp eq i64 %136, 0
  br i1 %191, label %208, label %192

192:                                              ; preds = %189, %192
  %193 = phi i64 [ %205, %192 ], [ %190, %189 ]
  %194 = phi i64 [ %206, %192 ], [ %136, %189 ]
  %195 = getelementptr i16, i16* %90, i64 %193
  %196 = getelementptr i16, i16* %117, i64 %193
  %197 = bitcast i16* %195 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !126
  %199 = getelementptr i16, i16* %195, i64 8
  %200 = bitcast i16* %199 to <8 x i16>*
  %201 = load <8 x i16>, <8 x i16>* %200, align 2, !alias.scope !126
  %202 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %202, align 2, !alias.scope !129, !noalias !126
  %203 = getelementptr i16, i16* %196, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  store <8 x i16> %201, <8 x i16>* %204, align 2, !alias.scope !129, !noalias !126
  %205 = add i64 %193, 16
  %206 = add i64 %194, -1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %192, !llvm.loop !132

208:                                              ; preds = %192, %189
  %209 = icmp eq i64 %119, %129
  br i1 %209, label %266, label %210

210:                                              ; preds = %208, %121, %116
  %211 = phi i64 [ %118, %121 ], [ %118, %116 ], [ %130, %208 ]
  %212 = phi i16* [ %90, %121 ], [ %90, %116 ], [ %131, %208 ]
  %213 = phi i16* [ %117, %121 ], [ %117, %116 ], [ %132, %208 ]
  %214 = add i64 %211, -1
  %215 = and i64 %211, 7
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %228, label %217

217:                                              ; preds = %210, %217
  %218 = phi i64 [ %223, %217 ], [ %211, %210 ]
  %219 = phi i16* [ %225, %217 ], [ %212, %210 ]
  %220 = phi i16* [ %224, %217 ], [ %213, %210 ]
  %221 = phi i64 [ %226, %217 ], [ %215, %210 ]
  %222 = load i16, i16* %219, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %218, -1
  %224 = getelementptr inbounds i16, i16* %220, i64 1
  %225 = getelementptr inbounds i16, i16* %219, i64 1
  %226 = add i64 %221, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %217, !llvm.loop !133

228:                                              ; preds = %217, %210
  %229 = phi i64 [ %211, %210 ], [ %223, %217 ]
  %230 = phi i16* [ %212, %210 ], [ %225, %217 ]
  %231 = phi i16* [ %213, %210 ], [ %224, %217 ]
  %232 = icmp ult i64 %214, 7
  br i1 %232, label %266, label %233

233:                                              ; preds = %228, %233
  %234 = phi i64 [ %259, %233 ], [ %229, %228 ]
  %235 = phi i16* [ %261, %233 ], [ %230, %228 ]
  %236 = phi i16* [ %260, %233 ], [ %231, %228 ]
  %237 = load i16, i16* %235, align 2
  store i16 %237, i16* %236, align 2
  %238 = getelementptr inbounds i16, i16* %236, i64 1
  %239 = getelementptr inbounds i16, i16* %235, i64 1
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %236, i64 2
  %242 = getelementptr inbounds i16, i16* %235, i64 2
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = getelementptr inbounds i16, i16* %236, i64 3
  %245 = getelementptr inbounds i16, i16* %235, i64 3
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %236, i64 4
  %248 = getelementptr inbounds i16, i16* %235, i64 4
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = getelementptr inbounds i16, i16* %236, i64 5
  %251 = getelementptr inbounds i16, i16* %235, i64 5
  %252 = load i16, i16* %251, align 2
  store i16 %252, i16* %250, align 2
  %253 = getelementptr inbounds i16, i16* %236, i64 6
  %254 = getelementptr inbounds i16, i16* %235, i64 6
  %255 = load i16, i16* %254, align 2
  store i16 %255, i16* %253, align 2
  %256 = getelementptr inbounds i16, i16* %236, i64 7
  %257 = getelementptr inbounds i16, i16* %235, i64 7
  %258 = load i16, i16* %257, align 2
  store i16 %258, i16* %256, align 2
  %259 = add i64 %234, -8
  %260 = getelementptr inbounds i16, i16* %236, i64 8
  %261 = getelementptr inbounds i16, i16* %235, i64 8
  %262 = icmp eq i64 %259, 0
  br i1 %262, label %266, label %233, !llvm.loop !134

263:                                              ; preds = %70
  %264 = load i8*, i8** %72, align 8
  %265 = select i1 %79, i8* %264, i8* %71
  call void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %12, i8* %265, i64 %82) #12
  br label %266

266:                                              ; preds = %228, %233, %208, %87, %263
  %267 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %267, i64 0, i32 1, i32 1
  %269 = load i8, i8* %268, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %274

271:                                              ; preds = %266
  %272 = bitcast %"class.std::__1::basic_string.4"* %2 to i8**
  %273 = load i8*, i8** %272, align 8
  call void @_ZdlPv(i8* %273) #14
  br label %274

274:                                              ; preds = %271, %266
  %275 = bitcast %"class.std::__1::basic_string.4"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* nonnull align 8 %75, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  %276 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #12
  %277 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 4, i32 1
  %278 = load i32, i32* %277, align 4, !noalias !135
  %279 = icmp slt i32 %278, 1
  br i1 %279, label %280, label %281

280:                                              ; preds = %274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #12
  br label %785

281:                                              ; preds = %274
  %282 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %283 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 4, i32 0
  %284 = load i32, i32* %283, align 4, !noalias !135
  %285 = sext i32 %284 to i64
  %286 = sext i32 %278 to i64
  %287 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %287) #12, !noalias !135
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %13, %"class.std::__1::basic_string"* dereferenceable(24) %282, i64 %285, i64 %286, %"class.std::__1::allocator"* nonnull dereferenceable(1) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %287) #12, !noalias !135
  %288 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %289 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %288, i64 0, i32 1, i32 0
  %290 = load i8, i8* %289, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %294, label %292

292:                                              ; preds = %281
  %293 = icmp eq i8 %290, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #12
  br i1 %293, label %785, label %300

294:                                              ; preds = %281
  %295 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %296 = load i64, i64* %295, align 8
  %297 = icmp eq i64 %296, 0
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  call void @_ZdlPv(i8* %299) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #12
  br i1 %297, label %785, label %300

300:                                              ; preds = %292, %294
  %301 = bitcast %"class.std::__1::basic_string.4"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %301) #12
  %302 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %302) #12
  %303 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #12
  %304 = load i32, i32* %277, align 4, !noalias !140
  %305 = icmp slt i32 %304, 1
  br i1 %305, label %306, label %307

306:                                              ; preds = %300
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %303, i8 0, i64 24, i1 false) #12, !alias.scope !140
  br label %314

307:                                              ; preds = %300
  %308 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %309 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 4, i32 0
  %310 = load i32, i32* %309, align 4, !noalias !140
  %311 = sext i32 %310 to i64
  %312 = sext i32 %304 to i64
  %313 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %313) #12, !noalias !140
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %16, %"class.std::__1::basic_string"* dereferenceable(24) %308, i64 %311, i64 %312, %"class.std::__1::allocator"* nonnull dereferenceable(1) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %313) #12, !noalias !140
  br label %314

314:                                              ; preds = %306, %307
  %315 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %16, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #12, !noalias !145
  %316 = bitcast %"class.std::__1::basic_string"* %315 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %302, i8* align 8 %316, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #12, !noalias !145
  %317 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %318 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %317, i64 0, i32 1, i32 0
  %319 = load i8, i8* %318, align 1
  %320 = icmp slt i8 %319, 0
  %321 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load i8*, i8** %321, align 8
  %323 = select i1 %320, i8* %322, i8* %302
  %324 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %325 = load i64, i64* %324, align 8
  %326 = zext i8 %319 to i64
  %327 = select i1 %320, i64 %325, i64 %326
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %14, i8* %323, i64 %327) #12
  %328 = bitcast %"class.std::__1::basic_string.4"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %328, i64 0, i32 1, i32 1
  %330 = load i8, i8* %329, align 1
  %331 = icmp slt i8 %330, 0
  %332 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i16*, i16** %332, align 8
  %334 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = bitcast %"class.std::__1::basic_string.4"* %14 to i16*
  %337 = zext i8 %330 to i64
  %338 = select i1 %331, i16* %333, i16* %336
  %339 = select i1 %331, i64 %335, i64 %337
  %340 = load i8, i8* %55, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %349

342:                                              ; preds = %314
  %343 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %344 = load i64, i64* %343, align 8
  %345 = and i64 %344, 9223372036854775807
  %346 = add nsw i64 %345, -1
  %347 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %348 = load i64, i64* %347, align 8
  br label %351

349:                                              ; preds = %314
  %350 = zext i8 %340 to i64
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i64 [ %346, %342 ], [ 10, %349 ]
  %353 = phi i64 [ %348, %342 ], [ %350, %349 ]
  %354 = sub i64 %352, %353
  %355 = icmp ult i64 %354, %339
  br i1 %355, label %520, label %356

356:                                              ; preds = %351
  %357 = icmp eq i64 %339, 0
  br i1 %357, label %523, label %358

358:                                              ; preds = %356
  br i1 %341, label %359, label %362

359:                                              ; preds = %358
  %360 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load i16*, i16** %360, align 8
  br label %364

362:                                              ; preds = %358
  %363 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  br label %364

364:                                              ; preds = %362, %359
  %365 = phi i16* [ %361, %359 ], [ %363, %362 ]
  %366 = getelementptr inbounds i16, i16* %365, i64 %353
  %367 = icmp ult i64 %339, 16
  br i1 %367, label %457, label %368

368:                                              ; preds = %364
  %369 = add i64 %339, %353
  %370 = getelementptr i16, i16* %365, i64 %369
  %371 = getelementptr i16, i16* %338, i64 %339
  %372 = icmp ult i16* %366, %371
  %373 = icmp ult i16* %338, %370
  %374 = and i1 %372, %373
  br i1 %374, label %457, label %375

375:                                              ; preds = %368
  %376 = and i64 %339, -16
  %377 = sub i64 %339, %376
  %378 = getelementptr i16, i16* %338, i64 %376
  %379 = getelementptr i16, i16* %366, i64 %376
  %380 = add i64 %376, -16
  %381 = lshr exact i64 %380, 4
  %382 = add nuw nsw i64 %381, 1
  %383 = and i64 %382, 3
  %384 = icmp ult i64 %380, 48
  br i1 %384, label %436, label %385

385:                                              ; preds = %375
  %386 = sub nsw i64 %382, %383
  br label %387

387:                                              ; preds = %387, %385
  %388 = phi i64 [ 0, %385 ], [ %433, %387 ]
  %389 = phi i64 [ %386, %385 ], [ %434, %387 ]
  %390 = getelementptr i16, i16* %338, i64 %388
  %391 = getelementptr i16, i16* %366, i64 %388
  %392 = bitcast i16* %390 to <8 x i16>*
  %393 = load <8 x i16>, <8 x i16>* %392, align 2, !alias.scope !148
  %394 = getelementptr i16, i16* %390, i64 8
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !148
  %397 = bitcast i16* %391 to <8 x i16>*
  store <8 x i16> %393, <8 x i16>* %397, align 2, !alias.scope !151, !noalias !148
  %398 = getelementptr i16, i16* %391, i64 8
  %399 = bitcast i16* %398 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %399, align 2, !alias.scope !151, !noalias !148
  %400 = or i64 %388, 16
  %401 = getelementptr i16, i16* %338, i64 %400
  %402 = getelementptr i16, i16* %366, i64 %400
  %403 = bitcast i16* %401 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !148
  %405 = getelementptr i16, i16* %401, i64 8
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !148
  %408 = bitcast i16* %402 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %408, align 2, !alias.scope !151, !noalias !148
  %409 = getelementptr i16, i16* %402, i64 8
  %410 = bitcast i16* %409 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %410, align 2, !alias.scope !151, !noalias !148
  %411 = or i64 %388, 32
  %412 = getelementptr i16, i16* %338, i64 %411
  %413 = getelementptr i16, i16* %366, i64 %411
  %414 = bitcast i16* %412 to <8 x i16>*
  %415 = load <8 x i16>, <8 x i16>* %414, align 2, !alias.scope !148
  %416 = getelementptr i16, i16* %412, i64 8
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !148
  %419 = bitcast i16* %413 to <8 x i16>*
  store <8 x i16> %415, <8 x i16>* %419, align 2, !alias.scope !151, !noalias !148
  %420 = getelementptr i16, i16* %413, i64 8
  %421 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %421, align 2, !alias.scope !151, !noalias !148
  %422 = or i64 %388, 48
  %423 = getelementptr i16, i16* %338, i64 %422
  %424 = getelementptr i16, i16* %366, i64 %422
  %425 = bitcast i16* %423 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !148
  %427 = getelementptr i16, i16* %423, i64 8
  %428 = bitcast i16* %427 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 2, !alias.scope !148
  %430 = bitcast i16* %424 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %430, align 2, !alias.scope !151, !noalias !148
  %431 = getelementptr i16, i16* %424, i64 8
  %432 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %429, <8 x i16>* %432, align 2, !alias.scope !151, !noalias !148
  %433 = add i64 %388, 64
  %434 = add i64 %389, -4
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %436, label %387, !llvm.loop !153

436:                                              ; preds = %387, %375
  %437 = phi i64 [ 0, %375 ], [ %433, %387 ]
  %438 = icmp eq i64 %383, 0
  br i1 %438, label %455, label %439

439:                                              ; preds = %436, %439
  %440 = phi i64 [ %452, %439 ], [ %437, %436 ]
  %441 = phi i64 [ %453, %439 ], [ %383, %436 ]
  %442 = getelementptr i16, i16* %338, i64 %440
  %443 = getelementptr i16, i16* %366, i64 %440
  %444 = bitcast i16* %442 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !148
  %446 = getelementptr i16, i16* %442, i64 8
  %447 = bitcast i16* %446 to <8 x i16>*
  %448 = load <8 x i16>, <8 x i16>* %447, align 2, !alias.scope !148
  %449 = bitcast i16* %443 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %449, align 2, !alias.scope !151, !noalias !148
  %450 = getelementptr i16, i16* %443, i64 8
  %451 = bitcast i16* %450 to <8 x i16>*
  store <8 x i16> %448, <8 x i16>* %451, align 2, !alias.scope !151, !noalias !148
  %452 = add i64 %440, 16
  %453 = add i64 %441, -1
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %455, label %439, !llvm.loop !154

455:                                              ; preds = %439, %436
  %456 = icmp eq i64 %339, %376
  br i1 %456, label %510, label %457

457:                                              ; preds = %455, %368, %364
  %458 = phi i64 [ %339, %368 ], [ %339, %364 ], [ %377, %455 ]
  %459 = phi i16* [ %338, %368 ], [ %338, %364 ], [ %378, %455 ]
  %460 = phi i16* [ %366, %368 ], [ %366, %364 ], [ %379, %455 ]
  %461 = add i64 %458, -1
  %462 = and i64 %458, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %475, label %464

464:                                              ; preds = %457, %464
  %465 = phi i64 [ %470, %464 ], [ %458, %457 ]
  %466 = phi i16* [ %472, %464 ], [ %459, %457 ]
  %467 = phi i16* [ %471, %464 ], [ %460, %457 ]
  %468 = phi i64 [ %473, %464 ], [ %462, %457 ]
  %469 = load i16, i16* %466, align 2
  store i16 %469, i16* %467, align 2
  %470 = add i64 %465, -1
  %471 = getelementptr inbounds i16, i16* %467, i64 1
  %472 = getelementptr inbounds i16, i16* %466, i64 1
  %473 = add i64 %468, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %464, !llvm.loop !155

475:                                              ; preds = %464, %457
  %476 = phi i64 [ %458, %457 ], [ %470, %464 ]
  %477 = phi i16* [ %459, %457 ], [ %472, %464 ]
  %478 = phi i16* [ %460, %457 ], [ %471, %464 ]
  %479 = icmp ult i64 %461, 7
  br i1 %479, label %510, label %480

480:                                              ; preds = %475, %480
  %481 = phi i64 [ %506, %480 ], [ %476, %475 ]
  %482 = phi i16* [ %508, %480 ], [ %477, %475 ]
  %483 = phi i16* [ %507, %480 ], [ %478, %475 ]
  %484 = load i16, i16* %482, align 2
  store i16 %484, i16* %483, align 2
  %485 = getelementptr inbounds i16, i16* %483, i64 1
  %486 = getelementptr inbounds i16, i16* %482, i64 1
  %487 = load i16, i16* %486, align 2
  store i16 %487, i16* %485, align 2
  %488 = getelementptr inbounds i16, i16* %483, i64 2
  %489 = getelementptr inbounds i16, i16* %482, i64 2
  %490 = load i16, i16* %489, align 2
  store i16 %490, i16* %488, align 2
  %491 = getelementptr inbounds i16, i16* %483, i64 3
  %492 = getelementptr inbounds i16, i16* %482, i64 3
  %493 = load i16, i16* %492, align 2
  store i16 %493, i16* %491, align 2
  %494 = getelementptr inbounds i16, i16* %483, i64 4
  %495 = getelementptr inbounds i16, i16* %482, i64 4
  %496 = load i16, i16* %495, align 2
  store i16 %496, i16* %494, align 2
  %497 = getelementptr inbounds i16, i16* %483, i64 5
  %498 = getelementptr inbounds i16, i16* %482, i64 5
  %499 = load i16, i16* %498, align 2
  store i16 %499, i16* %497, align 2
  %500 = getelementptr inbounds i16, i16* %483, i64 6
  %501 = getelementptr inbounds i16, i16* %482, i64 6
  %502 = load i16, i16* %501, align 2
  store i16 %502, i16* %500, align 2
  %503 = getelementptr inbounds i16, i16* %483, i64 7
  %504 = getelementptr inbounds i16, i16* %482, i64 7
  %505 = load i16, i16* %504, align 2
  store i16 %505, i16* %503, align 2
  %506 = add i64 %481, -8
  %507 = getelementptr inbounds i16, i16* %483, i64 8
  %508 = getelementptr inbounds i16, i16* %482, i64 8
  %509 = icmp eq i64 %506, 0
  br i1 %509, label %510, label %480, !llvm.loop !156

510:                                              ; preds = %475, %480, %455
  %511 = add i64 %353, %339
  %512 = load i8, i8* %55, align 1
  %513 = icmp slt i8 %512, 0
  br i1 %513, label %514, label %516

514:                                              ; preds = %510
  %515 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %511, i64* %515, align 8
  br label %518

516:                                              ; preds = %510
  %517 = trunc i64 %511 to i8
  store i8 %517, i8* %55, align 1
  br label %518

518:                                              ; preds = %516, %514
  %519 = getelementptr inbounds i16, i16* %365, i64 %511
  store i16 0, i16* %519, align 2
  br label %523

520:                                              ; preds = %351
  %521 = add i64 %353, %339
  %522 = sub i64 %521, %352
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %1, i64 %352, i64 %522, i64 %353, i64 %353, i64 0, i64 %339, i16* %338) #12
  br label %523

523:                                              ; preds = %356, %518, %520
  %524 = load i8, i8* %329, align 1
  %525 = icmp slt i8 %524, 0
  br i1 %525, label %526, label %529

526:                                              ; preds = %523
  %527 = bitcast %"class.std::__1::basic_string.4"* %14 to i8**
  %528 = load i8*, i8** %527, align 8
  call void @_ZdlPv(i8* %528) #14
  br label %529

529:                                              ; preds = %523, %526
  %530 = load i8, i8* %318, align 1
  %531 = icmp slt i8 %530, 0
  br i1 %531, label %532, label %534

532:                                              ; preds = %529
  %533 = load i8*, i8** %321, align 8
  call void @_ZdlPv(i8* %533) #14
  br label %534

534:                                              ; preds = %529, %532
  %535 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %536 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %535, i64 0, i32 1, i32 0
  %537 = load i8, i8* %536, align 1
  %538 = icmp slt i8 %537, 0
  br i1 %538, label %539, label %542

539:                                              ; preds = %534
  %540 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = load i8*, i8** %540, align 8
  call void @_ZdlPv(i8* %541) #14
  br label %542

542:                                              ; preds = %534, %539
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %301) #12
  %543 = bitcast %"class.std::__1::basic_string.4"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %543) #12
  %544 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #12
  %545 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #12
  %546 = load i32, i32* %277, align 4, !noalias !157
  %547 = icmp slt i32 %546, 1
  br i1 %547, label %548, label %549

548:                                              ; preds = %542
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %545, i8 0, i64 24, i1 false) #12, !alias.scope !157
  br label %556

549:                                              ; preds = %542
  %550 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %551 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 4, i32 0
  %552 = load i32, i32* %551, align 4, !noalias !157
  %553 = sext i32 %552 to i64
  %554 = sext i32 %546 to i64
  %555 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %555) #12, !noalias !157
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %19, %"class.std::__1::basic_string"* dereferenceable(24) %550, i64 %553, i64 %554, %"class.std::__1::allocator"* nonnull dereferenceable(1) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %555) #12, !noalias !157
  br label %556

556:                                              ; preds = %548, %549
  %557 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %19, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #12, !noalias !162
  %558 = bitcast %"class.std::__1::basic_string"* %557 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %544, i8* align 8 %558, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %558, i8 0, i64 24, i1 false) #12, !noalias !162
  %559 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %560 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %559, i64 0, i32 1, i32 0
  %561 = load i8, i8* %560, align 1
  %562 = icmp slt i8 %561, 0
  %563 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %564 = load i8*, i8** %563, align 8
  %565 = select i1 %562, i8* %564, i8* %544
  %566 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %567 = load i64, i64* %566, align 8
  %568 = zext i8 %561 to i64
  %569 = select i1 %562, i64 %567, i64 %568
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %17, i8* %565, i64 %569) #12
  %570 = bitcast %"class.std::__1::basic_string.4"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %571 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %570, i64 0, i32 1, i32 1
  %572 = load i8, i8* %571, align 1
  %573 = icmp slt i8 %572, 0
  %574 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = load i16*, i16** %574, align 8
  %576 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %577 = load i64, i64* %576, align 8
  %578 = bitcast %"class.std::__1::basic_string.4"* %17 to i16*
  %579 = zext i8 %572 to i64
  %580 = select i1 %573, i16* %575, i16* %578
  %581 = select i1 %573, i64 %577, i64 %579
  %582 = load i8, i8* %268, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %591

584:                                              ; preds = %556
  %585 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %586 = load i64, i64* %585, align 8
  %587 = and i64 %586, 9223372036854775807
  %588 = add nsw i64 %587, -1
  %589 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %590 = load i64, i64* %589, align 8
  br label %593

591:                                              ; preds = %556
  %592 = zext i8 %582 to i64
  br label %593

593:                                              ; preds = %591, %584
  %594 = phi i64 [ %588, %584 ], [ 10, %591 ]
  %595 = phi i64 [ %590, %584 ], [ %592, %591 ]
  %596 = sub i64 %594, %595
  %597 = icmp ult i64 %596, %581
  br i1 %597, label %762, label %598

598:                                              ; preds = %593
  %599 = icmp eq i64 %581, 0
  br i1 %599, label %765, label %600

600:                                              ; preds = %598
  br i1 %583, label %601, label %604

601:                                              ; preds = %600
  %602 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %603 = load i16*, i16** %602, align 8
  br label %606

604:                                              ; preds = %600
  %605 = bitcast %"class.std::__1::basic_string.4"* %2 to i16*
  br label %606

606:                                              ; preds = %604, %601
  %607 = phi i16* [ %603, %601 ], [ %605, %604 ]
  %608 = getelementptr inbounds i16, i16* %607, i64 %595
  %609 = icmp ult i64 %581, 16
  br i1 %609, label %699, label %610

610:                                              ; preds = %606
  %611 = add i64 %581, %595
  %612 = getelementptr i16, i16* %607, i64 %611
  %613 = getelementptr i16, i16* %580, i64 %581
  %614 = icmp ult i16* %608, %613
  %615 = icmp ult i16* %580, %612
  %616 = and i1 %614, %615
  br i1 %616, label %699, label %617

617:                                              ; preds = %610
  %618 = and i64 %581, -16
  %619 = sub i64 %581, %618
  %620 = getelementptr i16, i16* %580, i64 %618
  %621 = getelementptr i16, i16* %608, i64 %618
  %622 = add i64 %618, -16
  %623 = lshr exact i64 %622, 4
  %624 = add nuw nsw i64 %623, 1
  %625 = and i64 %624, 3
  %626 = icmp ult i64 %622, 48
  br i1 %626, label %678, label %627

627:                                              ; preds = %617
  %628 = sub nsw i64 %624, %625
  br label %629

629:                                              ; preds = %629, %627
  %630 = phi i64 [ 0, %627 ], [ %675, %629 ]
  %631 = phi i64 [ %628, %627 ], [ %676, %629 ]
  %632 = getelementptr i16, i16* %580, i64 %630
  %633 = getelementptr i16, i16* %608, i64 %630
  %634 = bitcast i16* %632 to <8 x i16>*
  %635 = load <8 x i16>, <8 x i16>* %634, align 2, !alias.scope !165
  %636 = getelementptr i16, i16* %632, i64 8
  %637 = bitcast i16* %636 to <8 x i16>*
  %638 = load <8 x i16>, <8 x i16>* %637, align 2, !alias.scope !165
  %639 = bitcast i16* %633 to <8 x i16>*
  store <8 x i16> %635, <8 x i16>* %639, align 2, !alias.scope !168, !noalias !165
  %640 = getelementptr i16, i16* %633, i64 8
  %641 = bitcast i16* %640 to <8 x i16>*
  store <8 x i16> %638, <8 x i16>* %641, align 2, !alias.scope !168, !noalias !165
  %642 = or i64 %630, 16
  %643 = getelementptr i16, i16* %580, i64 %642
  %644 = getelementptr i16, i16* %608, i64 %642
  %645 = bitcast i16* %643 to <8 x i16>*
  %646 = load <8 x i16>, <8 x i16>* %645, align 2, !alias.scope !165
  %647 = getelementptr i16, i16* %643, i64 8
  %648 = bitcast i16* %647 to <8 x i16>*
  %649 = load <8 x i16>, <8 x i16>* %648, align 2, !alias.scope !165
  %650 = bitcast i16* %644 to <8 x i16>*
  store <8 x i16> %646, <8 x i16>* %650, align 2, !alias.scope !168, !noalias !165
  %651 = getelementptr i16, i16* %644, i64 8
  %652 = bitcast i16* %651 to <8 x i16>*
  store <8 x i16> %649, <8 x i16>* %652, align 2, !alias.scope !168, !noalias !165
  %653 = or i64 %630, 32
  %654 = getelementptr i16, i16* %580, i64 %653
  %655 = getelementptr i16, i16* %608, i64 %653
  %656 = bitcast i16* %654 to <8 x i16>*
  %657 = load <8 x i16>, <8 x i16>* %656, align 2, !alias.scope !165
  %658 = getelementptr i16, i16* %654, i64 8
  %659 = bitcast i16* %658 to <8 x i16>*
  %660 = load <8 x i16>, <8 x i16>* %659, align 2, !alias.scope !165
  %661 = bitcast i16* %655 to <8 x i16>*
  store <8 x i16> %657, <8 x i16>* %661, align 2, !alias.scope !168, !noalias !165
  %662 = getelementptr i16, i16* %655, i64 8
  %663 = bitcast i16* %662 to <8 x i16>*
  store <8 x i16> %660, <8 x i16>* %663, align 2, !alias.scope !168, !noalias !165
  %664 = or i64 %630, 48
  %665 = getelementptr i16, i16* %580, i64 %664
  %666 = getelementptr i16, i16* %608, i64 %664
  %667 = bitcast i16* %665 to <8 x i16>*
  %668 = load <8 x i16>, <8 x i16>* %667, align 2, !alias.scope !165
  %669 = getelementptr i16, i16* %665, i64 8
  %670 = bitcast i16* %669 to <8 x i16>*
  %671 = load <8 x i16>, <8 x i16>* %670, align 2, !alias.scope !165
  %672 = bitcast i16* %666 to <8 x i16>*
  store <8 x i16> %668, <8 x i16>* %672, align 2, !alias.scope !168, !noalias !165
  %673 = getelementptr i16, i16* %666, i64 8
  %674 = bitcast i16* %673 to <8 x i16>*
  store <8 x i16> %671, <8 x i16>* %674, align 2, !alias.scope !168, !noalias !165
  %675 = add i64 %630, 64
  %676 = add i64 %631, -4
  %677 = icmp eq i64 %676, 0
  br i1 %677, label %678, label %629, !llvm.loop !170

678:                                              ; preds = %629, %617
  %679 = phi i64 [ 0, %617 ], [ %675, %629 ]
  %680 = icmp eq i64 %625, 0
  br i1 %680, label %697, label %681

681:                                              ; preds = %678, %681
  %682 = phi i64 [ %694, %681 ], [ %679, %678 ]
  %683 = phi i64 [ %695, %681 ], [ %625, %678 ]
  %684 = getelementptr i16, i16* %580, i64 %682
  %685 = getelementptr i16, i16* %608, i64 %682
  %686 = bitcast i16* %684 to <8 x i16>*
  %687 = load <8 x i16>, <8 x i16>* %686, align 2, !alias.scope !165
  %688 = getelementptr i16, i16* %684, i64 8
  %689 = bitcast i16* %688 to <8 x i16>*
  %690 = load <8 x i16>, <8 x i16>* %689, align 2, !alias.scope !165
  %691 = bitcast i16* %685 to <8 x i16>*
  store <8 x i16> %687, <8 x i16>* %691, align 2, !alias.scope !168, !noalias !165
  %692 = getelementptr i16, i16* %685, i64 8
  %693 = bitcast i16* %692 to <8 x i16>*
  store <8 x i16> %690, <8 x i16>* %693, align 2, !alias.scope !168, !noalias !165
  %694 = add i64 %682, 16
  %695 = add i64 %683, -1
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %697, label %681, !llvm.loop !171

697:                                              ; preds = %681, %678
  %698 = icmp eq i64 %581, %618
  br i1 %698, label %752, label %699

699:                                              ; preds = %697, %610, %606
  %700 = phi i64 [ %581, %610 ], [ %581, %606 ], [ %619, %697 ]
  %701 = phi i16* [ %580, %610 ], [ %580, %606 ], [ %620, %697 ]
  %702 = phi i16* [ %608, %610 ], [ %608, %606 ], [ %621, %697 ]
  %703 = add i64 %700, -1
  %704 = and i64 %700, 7
  %705 = icmp eq i64 %704, 0
  br i1 %705, label %717, label %706

706:                                              ; preds = %699, %706
  %707 = phi i64 [ %712, %706 ], [ %700, %699 ]
  %708 = phi i16* [ %714, %706 ], [ %701, %699 ]
  %709 = phi i16* [ %713, %706 ], [ %702, %699 ]
  %710 = phi i64 [ %715, %706 ], [ %704, %699 ]
  %711 = load i16, i16* %708, align 2
  store i16 %711, i16* %709, align 2
  %712 = add i64 %707, -1
  %713 = getelementptr inbounds i16, i16* %709, i64 1
  %714 = getelementptr inbounds i16, i16* %708, i64 1
  %715 = add i64 %710, -1
  %716 = icmp eq i64 %715, 0
  br i1 %716, label %717, label %706, !llvm.loop !172

717:                                              ; preds = %706, %699
  %718 = phi i64 [ %700, %699 ], [ %712, %706 ]
  %719 = phi i16* [ %701, %699 ], [ %714, %706 ]
  %720 = phi i16* [ %702, %699 ], [ %713, %706 ]
  %721 = icmp ult i64 %703, 7
  br i1 %721, label %752, label %722

722:                                              ; preds = %717, %722
  %723 = phi i64 [ %748, %722 ], [ %718, %717 ]
  %724 = phi i16* [ %750, %722 ], [ %719, %717 ]
  %725 = phi i16* [ %749, %722 ], [ %720, %717 ]
  %726 = load i16, i16* %724, align 2
  store i16 %726, i16* %725, align 2
  %727 = getelementptr inbounds i16, i16* %725, i64 1
  %728 = getelementptr inbounds i16, i16* %724, i64 1
  %729 = load i16, i16* %728, align 2
  store i16 %729, i16* %727, align 2
  %730 = getelementptr inbounds i16, i16* %725, i64 2
  %731 = getelementptr inbounds i16, i16* %724, i64 2
  %732 = load i16, i16* %731, align 2
  store i16 %732, i16* %730, align 2
  %733 = getelementptr inbounds i16, i16* %725, i64 3
  %734 = getelementptr inbounds i16, i16* %724, i64 3
  %735 = load i16, i16* %734, align 2
  store i16 %735, i16* %733, align 2
  %736 = getelementptr inbounds i16, i16* %725, i64 4
  %737 = getelementptr inbounds i16, i16* %724, i64 4
  %738 = load i16, i16* %737, align 2
  store i16 %738, i16* %736, align 2
  %739 = getelementptr inbounds i16, i16* %725, i64 5
  %740 = getelementptr inbounds i16, i16* %724, i64 5
  %741 = load i16, i16* %740, align 2
  store i16 %741, i16* %739, align 2
  %742 = getelementptr inbounds i16, i16* %725, i64 6
  %743 = getelementptr inbounds i16, i16* %724, i64 6
  %744 = load i16, i16* %743, align 2
  store i16 %744, i16* %742, align 2
  %745 = getelementptr inbounds i16, i16* %725, i64 7
  %746 = getelementptr inbounds i16, i16* %724, i64 7
  %747 = load i16, i16* %746, align 2
  store i16 %747, i16* %745, align 2
  %748 = add i64 %723, -8
  %749 = getelementptr inbounds i16, i16* %725, i64 8
  %750 = getelementptr inbounds i16, i16* %724, i64 8
  %751 = icmp eq i64 %748, 0
  br i1 %751, label %752, label %722, !llvm.loop !173

752:                                              ; preds = %717, %722, %697
  %753 = add i64 %595, %581
  %754 = load i8, i8* %268, align 1
  %755 = icmp slt i8 %754, 0
  br i1 %755, label %756, label %758

756:                                              ; preds = %752
  %757 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %753, i64* %757, align 8
  br label %760

758:                                              ; preds = %752
  %759 = trunc i64 %753 to i8
  store i8 %759, i8* %268, align 1
  br label %760

760:                                              ; preds = %758, %756
  %761 = getelementptr inbounds i16, i16* %607, i64 %753
  store i16 0, i16* %761, align 2
  br label %765

762:                                              ; preds = %593
  %763 = add i64 %595, %581
  %764 = sub i64 %763, %594
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %2, i64 %594, i64 %764, i64 %595, i64 %595, i64 0, i64 %581, i16* %580) #12
  br label %765

765:                                              ; preds = %598, %760, %762
  %766 = load i8, i8* %571, align 1
  %767 = icmp slt i8 %766, 0
  br i1 %767, label %768, label %771

768:                                              ; preds = %765
  %769 = bitcast %"class.std::__1::basic_string.4"* %17 to i8**
  %770 = load i8*, i8** %769, align 8
  call void @_ZdlPv(i8* %770) #14
  br label %771

771:                                              ; preds = %765, %768
  %772 = load i8, i8* %560, align 1
  %773 = icmp slt i8 %772, 0
  br i1 %773, label %774, label %776

774:                                              ; preds = %771
  %775 = load i8*, i8** %563, align 8
  call void @_ZdlPv(i8* %775) #14
  br label %776

776:                                              ; preds = %771, %774
  %777 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %778 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %777, i64 0, i32 1, i32 0
  %779 = load i8, i8* %778, align 1
  %780 = icmp slt i8 %779, 0
  br i1 %780, label %781, label %784

781:                                              ; preds = %776
  %782 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %783 = load i8*, i8** %782, align 8
  call void @_ZdlPv(i8* %783) #14
  br label %784

784:                                              ; preds = %776, %781
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %545) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %544) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %543) #12
  br label %785

785:                                              ; preds = %280, %292, %294, %784
  %786 = load i8, i8* %55, align 1
  %787 = icmp slt i8 %786, 0
  br i1 %787, label %788, label %793

788:                                              ; preds = %785
  %789 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %790 = load i16*, i16** %789, align 8
  %791 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %792 = load i64, i64* %791, align 8
  br label %796

793:                                              ; preds = %785
  %794 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %795 = zext i8 %786 to i64
  br label %796

796:                                              ; preds = %793, %788
  %797 = phi i16* [ %790, %788 ], [ %794, %793 ]
  %798 = phi i64 [ %792, %788 ], [ %795, %793 ]
  %799 = load i8, i8* %268, align 1
  %800 = icmp slt i8 %799, 0
  %801 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %802 = load i16*, i16** %801, align 8
  %803 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %804 = load i64, i64* %803, align 8
  %805 = bitcast %"class.std::__1::basic_string.4"* %2 to i16*
  %806 = zext i8 %799 to i64
  %807 = select i1 %800, i16* %802, i16* %805
  %808 = select i1 %800, i64 %804, i64 %806
  %809 = icmp eq i64 %808, 0
  br i1 %809, label %862, label %810

810:                                              ; preds = %796
  %811 = getelementptr inbounds i16, i16* %797, i64 %798
  %812 = shl nuw i64 %808, 1
  %813 = ashr exact i64 %812, 1
  %814 = ptrtoint i16* %811 to i64
  %815 = ptrtoint i16* %797 to i64
  %816 = shl nuw i64 %798, 1
  %817 = ashr exact i64 %816, 1
  %818 = icmp slt i64 %817, %813
  br i1 %818, label %861, label %819

819:                                              ; preds = %810
  %820 = load i16, i16* %807, align 2
  br label %821

821:                                              ; preds = %850, %819
  %822 = phi i64 [ %817, %819 ], [ %854, %850 ]
  %823 = phi i16* [ %797, %819 ], [ %851, %850 ]
  %824 = sub nsw i64 %822, %813
  %825 = add nsw i64 %824, 1
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %861, label %827

827:                                              ; preds = %821, %832
  %828 = phi i64 [ %834, %832 ], [ %825, %821 ]
  %829 = phi i16* [ %833, %832 ], [ %823, %821 ]
  %830 = load i16, i16* %829, align 2
  %831 = icmp eq i16 %830, %820
  br i1 %831, label %836, label %832

832:                                              ; preds = %827
  %833 = getelementptr inbounds i16, i16* %829, i64 1
  %834 = add i64 %828, -1
  %835 = icmp eq i64 %834, 0
  br i1 %835, label %861, label %827

836:                                              ; preds = %827
  %837 = icmp eq i16* %829, null
  br i1 %837, label %861, label %838

838:                                              ; preds = %836, %845
  %839 = phi i16* [ %843, %845 ], [ %829, %836 ]
  %840 = phi i16* [ %846, %845 ], [ %807, %836 ]
  %841 = phi i64 [ %842, %845 ], [ %813, %836 ]
  %842 = add i64 %841, -1
  %843 = getelementptr inbounds i16, i16* %839, i64 1
  %844 = icmp eq i64 %842, 0
  br i1 %844, label %856, label %845

845:                                              ; preds = %838
  %846 = getelementptr inbounds i16, i16* %840, i64 1
  %847 = load i16, i16* %843, align 2
  %848 = load i16, i16* %846, align 2
  %849 = icmp eq i16 %848, %847
  br i1 %849, label %838, label %850

850:                                              ; preds = %845
  %851 = getelementptr inbounds i16, i16* %829, i64 1
  %852 = ptrtoint i16* %851 to i64
  %853 = sub i64 %814, %852
  %854 = ashr exact i64 %853, 1
  %855 = icmp slt i64 %854, %813
  br i1 %855, label %861, label %821

856:                                              ; preds = %838
  %857 = ptrtoint i16* %829 to i64
  %858 = icmp eq i16* %829, %811
  %859 = sub i64 %857, %815
  %860 = ashr exact i64 %859, 1
  br i1 %858, label %861, label %862

861:                                              ; preds = %850, %836, %821, %832, %810, %856
  br label %862

862:                                              ; preds = %856, %796, %861
  %863 = phi i64 [ 0, %796 ], [ %860, %856 ], [ -1, %861 ]
  %864 = bitcast %"class.std::__1::basic_string.4"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %864) #12
  %865 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %866 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %867 = bitcast %"class.std::__1::basic_string.4"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %867, i8 -86, i64 24, i1 false)
  %868 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %869 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %868, i64 0, i32 1, i32 1
  store i8 4, i8* %869, align 1
  %870 = bitcast %"class.std::__1::basic_string.4"* %20 to i16*
  store i16 119, i16* %870, align 8
  %871 = getelementptr inbounds i16, i16* %870, i64 1
  store i16 119, i16* %871, align 2
  %872 = getelementptr inbounds i16, i16* %870, i64 2
  store i16 119, i16* %872, align 4
  %873 = getelementptr inbounds i16, i16* %870, i64 3
  store i16 46, i16* %873, align 2
  %874 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %875 = bitcast i64* %874 to i16*
  store i16 0, i16* %875, align 8
  %876 = icmp eq i64 %863, -1
  br i1 %876, label %877, label %879

877:                                              ; preds = %862
  %878 = bitcast %"class.std::__1::basic_string.4"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %891

879:                                              ; preds = %862
  %880 = bitcast %"class.std::__1::basic_string.4"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %880) #12
  %881 = bitcast %"class.std::__1::basic_string.4"* %1 to %"class.std::__1::allocator.11"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.4"* nonnull %21, %"class.std::__1::basic_string.4"* dereferenceable(24) %1, i64 0, i64 %863, %"class.std::__1::allocator.11"* dereferenceable(1) %881) #12
  %882 = bitcast %"class.std::__1::basic_string.4"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %883 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %882, i64 0, i32 1, i32 1
  %884 = load i8, i8* %883, align 1
  %885 = icmp slt i8 %884, 0
  br i1 %885, label %886, label %889

886:                                              ; preds = %879
  %887 = bitcast %"class.std::__1::basic_string.4"* %3 to i8**
  %888 = load i8*, i8** %887, align 8
  call void @_ZdlPv(i8* %888) #14
  br label %889

889:                                              ; preds = %886, %879
  %890 = bitcast %"class.std::__1::basic_string.4"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %890, i8* nonnull align 8 %880, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %880) #12
  br label %891

891:                                              ; preds = %877, %889
  %892 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %878, %877 ], [ %882, %889 ]
  %893 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %892, i64 0, i32 1, i32 1
  %894 = load i8, i8* %893, align 1
  %895 = icmp slt i8 %894, 0
  %896 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %897 = load i64, i64* %896, align 8
  %898 = zext i8 %894 to i64
  %899 = select i1 %895, i64 %897, i64 %898
  %900 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %901 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %900, i64 0, i32 1, i32 1
  %902 = load i8, i8* %901, align 1
  %903 = icmp slt i8 %902, 0
  %904 = load i64, i64* %866, align 8
  %905 = zext i8 %902 to i64
  %906 = select i1 %903, i64 %904, i64 %905
  %907 = icmp eq i64 %899, %906
  br i1 %907, label %908, label %930

908:                                              ; preds = %891
  %909 = icmp eq i64 %899, 0
  br i1 %909, label %937, label %910

910:                                              ; preds = %908
  %911 = load i16*, i16** %865, align 8
  %912 = bitcast %"class.std::__1::basic_string.4"* %20 to i16*
  %913 = select i1 %903, i16* %911, i16* %912
  %914 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %915 = load i16*, i16** %914, align 8
  %916 = bitcast %"class.std::__1::basic_string.4"* %3 to i16*
  %917 = select i1 %895, i16* %915, i16* %916
  br label %918

918:                                              ; preds = %925, %910
  %919 = phi i64 [ %926, %925 ], [ %899, %910 ]
  %920 = phi i16* [ %928, %925 ], [ %913, %910 ]
  %921 = phi i16* [ %927, %925 ], [ %917, %910 ]
  %922 = load i16, i16* %921, align 2
  %923 = load i16, i16* %920, align 2
  %924 = icmp eq i16 %923, %922
  br i1 %924, label %925, label %930

925:                                              ; preds = %918
  %926 = add i64 %919, -1
  %927 = getelementptr inbounds i16, i16* %921, i64 1
  %928 = getelementptr inbounds i16, i16* %920, i64 1
  %929 = icmp eq i64 %926, 0
  br i1 %929, label %937, label %918

930:                                              ; preds = %918, %891
  %931 = icmp eq i64 %899, 0
  br i1 %931, label %937, label %932

932:                                              ; preds = %930
  %933 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  %934 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %933) #12
  br i1 %934, label %935, label %945

935:                                              ; preds = %932
  %936 = load i8, i8* %893, align 1
  br label %937

937:                                              ; preds = %925, %935, %908, %930
  %938 = phi i8 [ %936, %935 ], [ %894, %908 ], [ %894, %930 ], [ %894, %925 ]
  %939 = icmp slt i8 %938, 0
  br i1 %939, label %940, label %943

940:                                              ; preds = %937
  %941 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %942 = load i16*, i16** %941, align 8
  store i16 0, i16* %942, align 2
  store i64 0, i64* %896, align 8
  br label %945

943:                                              ; preds = %937
  %944 = bitcast %"class.std::__1::basic_string.4"* %3 to i16*
  store i16 0, i16* %944, align 2
  store i8 0, i8* %893, align 1
  br label %945

945:                                              ; preds = %943, %940, %932
  %946 = load i8, i8* %901, align 1
  %947 = icmp slt i8 %946, 0
  br i1 %947, label %948, label %951

948:                                              ; preds = %945
  %949 = bitcast %"class.std::__1::basic_string.4"* %20 to i8**
  %950 = load i8*, i8** %949, align 8
  call void @_ZdlPv(i8* %950) #14
  br label %951

951:                                              ; preds = %945, %948
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %864) #12
  %952 = load i8, i8* %77, align 1
  %953 = icmp slt i8 %952, 0
  br i1 %953, label %954, label %956

954:                                              ; preds = %951
  %955 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %955) #14
  br label %956

956:                                              ; preds = %951, %954
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  ret void
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.4"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.4"*
  %35 = icmp ugt %"class.std::__1::basic_string.4"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !174
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !174
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !177, !noalias !174
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !177, !noalias !174
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !174
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !174
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !177, !noalias !174
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !177, !noalias !174
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !174
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !174
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !177, !noalias !174
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !177, !noalias !174
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !174
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !174
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !177, !noalias !174
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !177, !noalias !174
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !179

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !174
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !174
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !177, !noalias !174
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !177, !noalias !174
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !180

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !181

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !182

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !183
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !183
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !186, !noalias !183
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !186, !noalias !183
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !183
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !183
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !186, !noalias !183
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !186, !noalias !183
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !183
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !183
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !186, !noalias !183
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !186, !noalias !183
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !183
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !183
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !186, !noalias !183
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !186, !noalias !183
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !188

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !183
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !183
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !186, !noalias !183
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !186, !noalias !183
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !189

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !190

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !191

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !192
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !192
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !195, !noalias !192
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !195, !noalias !192
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !192
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !192
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !195, !noalias !192
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !195, !noalias !192
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !192
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !192
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !195, !noalias !192
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !195, !noalias !192
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !192
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !192
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !195, !noalias !192
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !195, !noalias !192
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !197

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !192
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !192
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !195, !noalias !192
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !195, !noalias !192
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !198

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !199

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !200

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.4"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string.4"* noalias sret, %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #13
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #14
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !201
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !201
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !204, !noalias !201
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !204, !noalias !201
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !201
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !201
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !204, !noalias !201
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !204, !noalias !201
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !201
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !201
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !204, !noalias !201
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !204, !noalias !201
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !201
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !201
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !204, !noalias !201
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !204, !noalias !201
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !206

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !201
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !201
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !204, !noalias !201
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !204, !noalias !201
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !207

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !208

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !209

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string.4"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !210
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !210
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !213, !noalias !210
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !213, !noalias !210
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !210
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !210
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !213, !noalias !210
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !213, !noalias !210
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !210
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !210
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !213, !noalias !210
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !213, !noalias !210
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !210
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !210
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !213, !noalias !210
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !213, !noalias !210
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !215

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !210
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !210
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !213, !noalias !210
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !213, !noalias !210
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !216

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !217

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !218

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #12
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_(%"class.std::__1::basic_string.4"* noalias sret, %"class.std::__1::basic_string.4"* dereferenceable(24), i16 zeroext) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = zext i8 %10 to i64
  %17 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %18 = select i1 %11, i64 %13, i64 %16
  %19 = select i1 %11, i16* %15, i16* %17
  %20 = add i64 %18, 1
  %21 = icmp ugt i64 %20, 9223372036854775791
  br i1 %21, label %22, label %24

22:                                               ; preds = %3
  %23 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %23) #13
  unreachable

24:                                               ; preds = %3
  %25 = icmp ult i64 %20, 11
  br i1 %25, label %37, label %26

26:                                               ; preds = %24
  %27 = add nuw nsw i64 %18, 9
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  store i64 %36, i64* %6, align 8
  store i64 %18, i64* %5, align 8
  br label %43

37:                                               ; preds = %24
  %38 = trunc i64 %18 to i8
  %39 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %42 = icmp eq i64 %18, 0
  br i1 %42, label %187, label %43

43:                                               ; preds = %31, %37
  %44 = phi i16* [ %34, %31 ], [ %41, %37 ]
  %45 = icmp ult i64 %18, 16
  br i1 %45, label %134, label %46

46:                                               ; preds = %43
  %47 = getelementptr i16, i16* %44, i64 %18
  %48 = getelementptr i16, i16* %19, i64 %18
  %49 = icmp ult i16* %44, %48
  %50 = icmp ult i16* %19, %47
  %51 = and i1 %49, %50
  br i1 %51, label %134, label %52

52:                                               ; preds = %46
  %53 = and i64 %18, -16
  %54 = sub i64 %18, %53
  %55 = getelementptr i16, i16* %19, i64 %53
  %56 = getelementptr i16, i16* %44, i64 %53
  %57 = add i64 %53, -16
  %58 = lshr exact i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 48
  br i1 %61, label %113, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i16, i16* %19, i64 %65
  %68 = getelementptr i16, i16* %44, i64 %65
  %69 = bitcast i16* %67 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !219
  %71 = getelementptr i16, i16* %67, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !219
  %74 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %74, align 2, !alias.scope !222, !noalias !219
  %75 = getelementptr i16, i16* %68, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !222, !noalias !219
  %77 = or i64 %65, 16
  %78 = getelementptr i16, i16* %19, i64 %77
  %79 = getelementptr i16, i16* %44, i64 %77
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !219
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !219
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !222, !noalias !219
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !222, !noalias !219
  %88 = or i64 %65, 32
  %89 = getelementptr i16, i16* %19, i64 %88
  %90 = getelementptr i16, i16* %44, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !219
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !219
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !222, !noalias !219
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !222, !noalias !219
  %99 = or i64 %65, 48
  %100 = getelementptr i16, i16* %19, i64 %99
  %101 = getelementptr i16, i16* %44, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !219
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !219
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !222, !noalias !219
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !222, !noalias !219
  %110 = add i64 %65, 64
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !224

113:                                              ; preds = %64, %52
  %114 = phi i64 [ 0, %52 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i16, i16* %19, i64 %117
  %120 = getelementptr i16, i16* %44, i64 %117
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !219
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !219
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !222, !noalias !219
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !222, !noalias !219
  %129 = add i64 %117, 16
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !225

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %18, %53
  br i1 %133, label %187, label %134

134:                                              ; preds = %132, %46, %43
  %135 = phi i64 [ %18, %46 ], [ %18, %43 ], [ %54, %132 ]
  %136 = phi i16* [ %19, %46 ], [ %19, %43 ], [ %55, %132 ]
  %137 = phi i16* [ %44, %46 ], [ %44, %43 ], [ %56, %132 ]
  %138 = add i64 %135, -1
  %139 = and i64 %135, 7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141

141:                                              ; preds = %134, %141
  %142 = phi i64 [ %147, %141 ], [ %135, %134 ]
  %143 = phi i16* [ %149, %141 ], [ %136, %134 ]
  %144 = phi i16* [ %148, %141 ], [ %137, %134 ]
  %145 = phi i64 [ %150, %141 ], [ %139, %134 ]
  %146 = load i16, i16* %143, align 2
  store i16 %146, i16* %144, align 2
  %147 = add i64 %142, -1
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %141, !llvm.loop !226

152:                                              ; preds = %141, %134
  %153 = phi i64 [ %135, %134 ], [ %147, %141 ]
  %154 = phi i16* [ %136, %134 ], [ %149, %141 ]
  %155 = phi i16* [ %137, %134 ], [ %148, %141 ]
  %156 = icmp ult i64 %138, 7
  br i1 %156, label %187, label %157

157:                                              ; preds = %152, %157
  %158 = phi i64 [ %183, %157 ], [ %153, %152 ]
  %159 = phi i16* [ %185, %157 ], [ %154, %152 ]
  %160 = phi i16* [ %184, %157 ], [ %155, %152 ]
  %161 = load i16, i16* %159, align 2
  store i16 %161, i16* %160, align 2
  %162 = getelementptr inbounds i16, i16* %160, i64 1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %162, align 2
  %165 = getelementptr inbounds i16, i16* %160, i64 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %160, i64 3
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %160, i64 4
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %160, i64 5
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %160, i64 6
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %160, i64 7
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %158, -8
  %184 = getelementptr inbounds i16, i16* %160, i64 8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %157, !llvm.loop !227

187:                                              ; preds = %152, %157, %132, %37
  %188 = phi i16* [ %41, %37 ], [ %44, %132 ], [ %44, %157 ], [ %44, %152 ]
  %189 = getelementptr inbounds i16, i16* %188, i64 %18
  store i16 0, i16* %189, align 2
  %190 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %190, i64 0, i32 1, i32 1
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %187
  %195 = zext i8 %192 to i64
  br label %201

196:                                              ; preds = %187
  %197 = load i64, i64* %6, align 8
  %198 = and i64 %197, 9223372036854775807
  %199 = add nsw i64 %198, -1
  %200 = load i64, i64* %5, align 8
  br label %201

201:                                              ; preds = %196, %194
  %202 = phi i64 [ 10, %194 ], [ %199, %196 ]
  %203 = phi i64 [ %195, %194 ], [ %200, %196 ]
  %204 = icmp eq i64 %203, %202
  br i1 %204, label %205, label %208

205:                                              ; preds = %201
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.4"* %0, i64 %202, i64 1, i64 %202, i64 %202, i64 0, i64 0) #12
  %206 = load i8, i8* %191, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %213, label %209

208:                                              ; preds = %201
  br i1 %193, label %213, label %209

209:                                              ; preds = %208, %205
  %210 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %211 = trunc i64 %203 to i8
  %212 = add i8 %211, 1
  store i8 %212, i8* %191, align 1
  br label %216

213:                                              ; preds = %208, %205
  %214 = load i16*, i16** %4, align 8
  %215 = add i64 %203, 1
  store i64 %215, i64* %5, align 8
  br label %216

216:                                              ; preds = %209, %213
  %217 = phi i16* [ %210, %209 ], [ %214, %213 ]
  %218 = getelementptr inbounds i16, i16* %217, i64 %203
  store i16 %2, i16* %218, align 2
  %219 = getelementptr inbounds i16, i16* %218, i64 1
  store i16 0, i16* %219, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_122ElideComponentizedPathERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEES8_S8_RKN3gfx8FontListEf(%"class.std::__1::basic_string.4"* noalias sret, %"class.std::__1::basic_string.4"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.gfx::FontList"*, float) unnamed_addr #0 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.std::__1::basic_string.4", align 8
  %10 = alloca %"class.std::__1::basic_string.4", align 8
  %11 = alloca %"class.std::__1::basic_string.4", align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %14, align 8
  %16 = icmp eq %"class.std::__1::basic_string.4"* %13, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = ptrtoint %"class.std::__1::basic_string.4"* %13 to i64
  %19 = ptrtoint %"class.std::__1::basic_string.4"* %15 to i64
  br label %27

20:                                               ; preds = %7
  %21 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %23 = bitcast %"class.std::__1::basic_string.4"** %14 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %17, %20
  %28 = phi i64 [ %18, %17 ], [ %26, %20 ]
  %29 = phi i64 [ %19, %17 ], [ %24, %20 ]
  %30 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #12
  %31 = sub i64 %29, %28
  %32 = icmp eq i64 %31, 24
  br i1 %32, label %61, label %33

33:                                               ; preds = %27
  %34 = sdiv exact i64 %31, 24
  %35 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  %36 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = bitcast %"class.std::__1::basic_string.4"* %10 to i8**
  %39 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  br label %42

40:                                               ; preds = %58
  %41 = icmp eq i64 %52, 0
  br i1 %41, label %61, label %63

42:                                               ; preds = %33, %58
  %43 = phi i64 [ %34, %33 ], [ %53, %58 ]
  %44 = phi i64 [ 0, %33 ], [ %52, %58 ]
  %45 = add i64 %43, %44
  %46 = lshr i64 %45, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_123BuildPathFromComponentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEES8_m(%"class.std::__1::basic_string.4"* nonnull sret %10, %"class.std::__1::basic_string.4"* dereferenceable(24) %1, %"class.std::__1::vector"* dereferenceable(24) %2, %"class.std::__1::basic_string.4"* dereferenceable(24) %3, i64 %46)
  %47 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %10, %"class.gfx::FontList"* %5) #12
  %48 = fcmp ugt float %47, %6
  br i1 %48, label %51, label %49

49:                                               ; preds = %42
  %50 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* nonnull %9, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %10)
  br label %51

51:                                               ; preds = %42, %49
  %52 = phi i64 [ %46, %49 ], [ %44, %42 ]
  %53 = phi i64 [ %43, %49 ], [ %46, %42 ]
  %54 = load i8, i8* %37, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  %59 = add i64 %53, -1
  %60 = icmp eq i64 %52, %59
  br i1 %60, label %40, label %42

61:                                               ; preds = %27, %40
  %62 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #12
  br label %73

63:                                               ; preds = %40
  %64 = bitcast %"class.std::__1::basic_string.4"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string.4"* nonnull sret %11, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %9, %"class.std::__1::basic_string.4"* dereferenceable(24) %4)
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %11, %"class.gfx::FontList"* %5, float %6, i32 4) #12
  %65 = bitcast %"class.std::__1::basic_string.4"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %65, i64 0, i32 1, i32 1
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = bitcast %"class.std::__1::basic_string.4"* %11 to i8**
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %63, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  br label %73

73:                                               ; preds = %72, %61
  %74 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::basic_string.4"* %9 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %73, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EES6_RKS9_(%"class.std::__1::basic_string.4"* noalias sret, i16 zeroext, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = add i64 %15, 1
  %17 = icmp ugt i64 %16, 9223372036854775791
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %19) #13
  unreachable

20:                                               ; preds = %3
  %21 = icmp ult i64 %16, 11
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 1, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %38

26:                                               ; preds = %20
  %27 = add nuw nsw i64 %15, 9
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  store i64 %36, i64* %6, align 8
  store i64 1, i64* %5, align 8
  %37 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %38

38:                                               ; preds = %31, %22
  %39 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %37, %31 ], [ %23, %22 ]
  %40 = phi i16* [ %34, %31 ], [ %25, %22 ]
  store i16 %1, i16* %40, align 2
  %41 = getelementptr inbounds i16, i16* %40, i64 1
  store i16 0, i16* %41, align 2
  %42 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i16*, i16** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string.4"* %2 to i16*
  %45 = select i1 %11, i16* %43, i16* %44
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %38
  %50 = load i64, i64* %6, align 8
  %51 = and i64 %50, 9223372036854775807
  %52 = add nsw i64 %51, -1
  %53 = load i64, i64* %5, align 8
  br label %56

54:                                               ; preds = %38
  %55 = zext i8 %47 to i64
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i64 [ %52, %49 ], [ 10, %54 ]
  %58 = phi i64 [ %53, %49 ], [ %55, %54 ]
  %59 = sub i64 %57, %58
  %60 = icmp ult i64 %59, %15
  br i1 %60, label %220, label %61

61:                                               ; preds = %56
  %62 = icmp eq i64 %15, 0
  br i1 %62, label %223, label %63

63:                                               ; preds = %61
  %64 = load i16*, i16** %4, align 8
  %65 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %66 = select i1 %48, i16* %64, i16* %65
  %67 = getelementptr inbounds i16, i16* %66, i64 %58
  %68 = icmp ult i64 %15, 16
  br i1 %68, label %158, label %69

69:                                               ; preds = %63
  %70 = add i64 %15, %58
  %71 = getelementptr i16, i16* %66, i64 %70
  %72 = getelementptr i16, i16* %45, i64 %15
  %73 = icmp ult i16* %67, %72
  %74 = icmp ult i16* %45, %71
  %75 = and i1 %73, %74
  br i1 %75, label %158, label %76

76:                                               ; preds = %69
  %77 = and i64 %15, -16
  %78 = sub i64 %15, %77
  %79 = getelementptr i16, i16* %45, i64 %77
  %80 = getelementptr i16, i16* %67, i64 %77
  %81 = add i64 %77, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp ult i64 %81, 48
  br i1 %85, label %137, label %86

86:                                               ; preds = %76
  %87 = sub nsw i64 %83, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 0, %86 ], [ %134, %88 ]
  %90 = phi i64 [ %87, %86 ], [ %135, %88 ]
  %91 = getelementptr i16, i16* %45, i64 %89
  %92 = getelementptr i16, i16* %67, i64 %89
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !228
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !228
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !231, !noalias !228
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !231, !noalias !228
  %101 = or i64 %89, 16
  %102 = getelementptr i16, i16* %45, i64 %101
  %103 = getelementptr i16, i16* %67, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !228
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !228
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !231, !noalias !228
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !231, !noalias !228
  %112 = or i64 %89, 32
  %113 = getelementptr i16, i16* %45, i64 %112
  %114 = getelementptr i16, i16* %67, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !228
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !228
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !231, !noalias !228
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !231, !noalias !228
  %123 = or i64 %89, 48
  %124 = getelementptr i16, i16* %45, i64 %123
  %125 = getelementptr i16, i16* %67, i64 %123
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !228
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !228
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !231, !noalias !228
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !231, !noalias !228
  %134 = add i64 %89, 64
  %135 = add i64 %90, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %88, !llvm.loop !233

137:                                              ; preds = %88, %76
  %138 = phi i64 [ 0, %76 ], [ %134, %88 ]
  %139 = icmp eq i64 %84, 0
  br i1 %139, label %156, label %140

140:                                              ; preds = %137, %140
  %141 = phi i64 [ %153, %140 ], [ %138, %137 ]
  %142 = phi i64 [ %154, %140 ], [ %84, %137 ]
  %143 = getelementptr i16, i16* %45, i64 %141
  %144 = getelementptr i16, i16* %67, i64 %141
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !228
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !228
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !231, !noalias !228
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !231, !noalias !228
  %153 = add i64 %141, 16
  %154 = add i64 %142, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %140, !llvm.loop !234

156:                                              ; preds = %140, %137
  %157 = icmp eq i64 %15, %77
  br i1 %157, label %211, label %158

158:                                              ; preds = %156, %69, %63
  %159 = phi i64 [ %15, %69 ], [ %15, %63 ], [ %78, %156 ]
  %160 = phi i16* [ %45, %69 ], [ %45, %63 ], [ %79, %156 ]
  %161 = phi i16* [ %67, %69 ], [ %67, %63 ], [ %80, %156 ]
  %162 = add i64 %159, -1
  %163 = and i64 %159, 7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %158, %165
  %166 = phi i64 [ %171, %165 ], [ %159, %158 ]
  %167 = phi i16* [ %173, %165 ], [ %160, %158 ]
  %168 = phi i16* [ %172, %165 ], [ %161, %158 ]
  %169 = phi i64 [ %174, %165 ], [ %163, %158 ]
  %170 = load i16, i16* %167, align 2
  store i16 %170, i16* %168, align 2
  %171 = add i64 %166, -1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = getelementptr inbounds i16, i16* %167, i64 1
  %174 = add i64 %169, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %165, !llvm.loop !235

176:                                              ; preds = %165, %158
  %177 = phi i64 [ %159, %158 ], [ %171, %165 ]
  %178 = phi i16* [ %160, %158 ], [ %173, %165 ]
  %179 = phi i16* [ %161, %158 ], [ %172, %165 ]
  %180 = icmp ult i64 %162, 7
  br i1 %180, label %211, label %181

181:                                              ; preds = %176, %181
  %182 = phi i64 [ %207, %181 ], [ %177, %176 ]
  %183 = phi i16* [ %209, %181 ], [ %178, %176 ]
  %184 = phi i16* [ %208, %181 ], [ %179, %176 ]
  %185 = load i16, i16* %183, align 2
  store i16 %185, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %184, i64 1
  %187 = getelementptr inbounds i16, i16* %183, i64 1
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %184, i64 2
  %190 = getelementptr inbounds i16, i16* %183, i64 2
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %184, i64 3
  %193 = getelementptr inbounds i16, i16* %183, i64 3
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %184, i64 4
  %196 = getelementptr inbounds i16, i16* %183, i64 4
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %184, i64 5
  %199 = getelementptr inbounds i16, i16* %183, i64 5
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %184, i64 6
  %202 = getelementptr inbounds i16, i16* %183, i64 6
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %184, i64 7
  %205 = getelementptr inbounds i16, i16* %183, i64 7
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = add i64 %182, -8
  %208 = getelementptr inbounds i16, i16* %184, i64 8
  %209 = getelementptr inbounds i16, i16* %183, i64 8
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %211, label %181, !llvm.loop !236

211:                                              ; preds = %176, %181, %156
  %212 = add i64 %58, %15
  %213 = load i8, i8* %46, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %211
  store i64 %212, i64* %5, align 8
  br label %218

216:                                              ; preds = %211
  %217 = trunc i64 %212 to i8
  store i8 %217, i8* %46, align 1
  br label %218

218:                                              ; preds = %216, %215
  %219 = getelementptr inbounds i16, i16* %66, i64 %212
  store i16 0, i16* %219, align 2
  br label %223

220:                                              ; preds = %56
  %221 = add i64 %58, %15
  %222 = sub i64 %221, %57
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %57, i64 %222, i64 %58, i64 %58, i64 0, i64 %15, i16* %45) #12
  br label %223

223:                                              ; preds = %61, %218, %220
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_123BuildPathFromComponentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEES8_m(%"class.std::__1::basic_string.4"* noalias sret, %"class.std::__1::basic_string.4"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.4"* dereferenceable(24), i64) unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string.4", align 8
  %7 = alloca %"class.std::__1::basic_string.4", align 8
  %8 = alloca %"class.std::__1::basic_string.4", align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 24, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %5
  %18 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %19 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #12
  br label %193

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %46

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #13
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #13
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #14
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  store i64 %45, i64* %11, align 8
  store i64 %24, i64* %10, align 8
  br label %46

46:                                               ; preds = %40, %26
  %47 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %48 = add nuw nsw i64 %24, 1
  %49 = add i64 %24, 1
  %50 = icmp ult i64 %49, 16
  br i1 %50, label %140, label %51

51:                                               ; preds = %46
  %52 = add i64 %24, 1
  %53 = getelementptr i16, i16* %47, i64 %52
  %54 = getelementptr i16, i16* %22, i64 %52
  %55 = icmp ult i16* %47, %54
  %56 = icmp ult i16* %22, %53
  %57 = and i1 %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %51
  %59 = and i64 %49, -16
  %60 = sub i64 %48, %59
  %61 = getelementptr i16, i16* %22, i64 %59
  %62 = getelementptr i16, i16* %47, i64 %59
  %63 = add i64 %59, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 48
  br i1 %67, label %119, label %68

68:                                               ; preds = %58
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr i16, i16* %22, i64 %71
  %74 = getelementptr i16, i16* %47, i64 %71
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !237
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !237
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !240, !noalias !237
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !240, !noalias !237
  %83 = or i64 %71, 16
  %84 = getelementptr i16, i16* %22, i64 %83
  %85 = getelementptr i16, i16* %47, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !237
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !237
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !240, !noalias !237
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !240, !noalias !237
  %94 = or i64 %71, 32
  %95 = getelementptr i16, i16* %22, i64 %94
  %96 = getelementptr i16, i16* %47, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !237
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !237
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !240, !noalias !237
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !240, !noalias !237
  %105 = or i64 %71, 48
  %106 = getelementptr i16, i16* %22, i64 %105
  %107 = getelementptr i16, i16* %47, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !237
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !237
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !240, !noalias !237
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !240, !noalias !237
  %116 = add i64 %71, 64
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !242

119:                                              ; preds = %70, %58
  %120 = phi i64 [ 0, %58 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr i16, i16* %22, i64 %123
  %126 = getelementptr i16, i16* %47, i64 %123
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !237
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !237
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !240, !noalias !237
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !240, !noalias !237
  %135 = add i64 %123, 16
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !243

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %49, %59
  br i1 %139, label %193, label %140

140:                                              ; preds = %138, %51, %46
  %141 = phi i64 [ %48, %51 ], [ %48, %46 ], [ %60, %138 ]
  %142 = phi i16* [ %22, %51 ], [ %22, %46 ], [ %61, %138 ]
  %143 = phi i16* [ %47, %51 ], [ %47, %46 ], [ %62, %138 ]
  %144 = add i64 %141, -1
  %145 = and i64 %141, 7
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i64 [ %153, %147 ], [ %141, %140 ]
  %149 = phi i16* [ %155, %147 ], [ %142, %140 ]
  %150 = phi i16* [ %154, %147 ], [ %143, %140 ]
  %151 = phi i64 [ %156, %147 ], [ %145, %140 ]
  %152 = load i16, i16* %149, align 2
  store i16 %152, i16* %150, align 2
  %153 = add i64 %148, -1
  %154 = getelementptr inbounds i16, i16* %150, i64 1
  %155 = getelementptr inbounds i16, i16* %149, i64 1
  %156 = add i64 %151, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !244

158:                                              ; preds = %147, %140
  %159 = phi i64 [ %141, %140 ], [ %153, %147 ]
  %160 = phi i16* [ %142, %140 ], [ %155, %147 ]
  %161 = phi i16* [ %143, %140 ], [ %154, %147 ]
  %162 = icmp ult i64 %144, 7
  br i1 %162, label %193, label %163

163:                                              ; preds = %158, %163
  %164 = phi i64 [ %189, %163 ], [ %159, %158 ]
  %165 = phi i16* [ %191, %163 ], [ %160, %158 ]
  %166 = phi i16* [ %190, %163 ], [ %161, %158 ]
  %167 = load i16, i16* %165, align 2
  store i16 %167, i16* %166, align 2
  %168 = getelementptr inbounds i16, i16* %166, i64 1
  %169 = getelementptr inbounds i16, i16* %165, i64 1
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %166, i64 2
  %172 = getelementptr inbounds i16, i16* %165, i64 2
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %166, i64 3
  %175 = getelementptr inbounds i16, i16* %165, i64 3
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %166, i64 4
  %178 = getelementptr inbounds i16, i16* %165, i64 4
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %166, i64 5
  %181 = getelementptr inbounds i16, i16* %165, i64 5
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %166, i64 6
  %184 = getelementptr inbounds i16, i16* %165, i64 6
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %166, i64 7
  %187 = getelementptr inbounds i16, i16* %165, i64 7
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %164, -8
  %190 = getelementptr inbounds i16, i16* %166, i64 8
  %191 = getelementptr inbounds i16, i16* %165, i64 8
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %193, label %163, !llvm.loop !245

193:                                              ; preds = %158, %163, %138, %17
  %194 = icmp eq i64 %4, 0
  br i1 %194, label %208, label %195

195:                                              ; preds = %193
  %196 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  %197 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %198 = load i16, i16* @_ZN3gfx13kForwardSlashE, align 2
  %199 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %199, i64 0, i32 1, i32 1
  %201 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = bitcast %"class.std::__1::basic_string.4"* %6 to i16*
  %204 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  %206 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %207 = bitcast %"class.std::__1::basic_string.4"* %6 to i8**
  br label %220

208:                                              ; preds = %411, %193
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %210 = bitcast %"class.std::__1::basic_string.4"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.std::__1::vector"* %2 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = sub i64 %211, %213
  %215 = sdiv exact i64 %214, 24
  %216 = add nsw i64 %215, -1
  %217 = icmp eq i64 %216, %4
  br i1 %217, label %218, label %414

218:                                              ; preds = %208
  %219 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %852

220:                                              ; preds = %411, %195
  %221 = phi i64 [ 0, %195 ], [ %412, %411 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #12
  %222 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %197, align 8
  %223 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %222, i64 %221
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_(%"class.std::__1::basic_string.4"* nonnull sret %6, %"class.std::__1::basic_string.4"* dereferenceable(24) %223, i16 zeroext %198)
  %224 = load i8, i8* %200, align 1
  %225 = icmp slt i8 %224, 0
  %226 = load i16*, i16** %201, align 8
  %227 = load i64, i64* %202, align 8
  %228 = zext i8 %224 to i64
  %229 = select i1 %225, i16* %226, i16* %203
  %230 = select i1 %225, i64 %227, i64 %228
  %231 = load i8, i8* %205, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %238

233:                                              ; preds = %220
  %234 = load i64, i64* %11, align 8
  %235 = and i64 %234, 9223372036854775807
  %236 = add nsw i64 %235, -1
  %237 = load i64, i64* %10, align 8
  br label %240

238:                                              ; preds = %220
  %239 = zext i8 %231 to i64
  br label %240

240:                                              ; preds = %238, %233
  %241 = phi i64 [ %236, %233 ], [ 10, %238 ]
  %242 = phi i64 [ %237, %233 ], [ %239, %238 ]
  %243 = sub i64 %241, %242
  %244 = icmp ult i64 %243, %230
  br i1 %244, label %403, label %245

245:                                              ; preds = %240
  %246 = icmp eq i64 %230, 0
  br i1 %246, label %406, label %247

247:                                              ; preds = %245
  %248 = load i16*, i16** %9, align 8
  %249 = select i1 %232, i16* %248, i16* %206
  %250 = getelementptr inbounds i16, i16* %249, i64 %242
  %251 = icmp ult i64 %230, 16
  br i1 %251, label %341, label %252

252:                                              ; preds = %247
  %253 = add i64 %230, %242
  %254 = getelementptr i16, i16* %249, i64 %253
  %255 = getelementptr i16, i16* %229, i64 %230
  %256 = icmp ult i16* %250, %255
  %257 = icmp ult i16* %229, %254
  %258 = and i1 %256, %257
  br i1 %258, label %341, label %259

259:                                              ; preds = %252
  %260 = and i64 %230, -16
  %261 = sub i64 %230, %260
  %262 = getelementptr i16, i16* %229, i64 %260
  %263 = getelementptr i16, i16* %250, i64 %260
  %264 = add i64 %260, -16
  %265 = lshr exact i64 %264, 4
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 3
  %268 = icmp ult i64 %264, 48
  br i1 %268, label %320, label %269

269:                                              ; preds = %259
  %270 = sub nsw i64 %266, %267
  br label %271

271:                                              ; preds = %271, %269
  %272 = phi i64 [ 0, %269 ], [ %317, %271 ]
  %273 = phi i64 [ %270, %269 ], [ %318, %271 ]
  %274 = getelementptr i16, i16* %229, i64 %272
  %275 = getelementptr i16, i16* %250, i64 %272
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !246
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !246
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !249, !noalias !246
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !249, !noalias !246
  %284 = or i64 %272, 16
  %285 = getelementptr i16, i16* %229, i64 %284
  %286 = getelementptr i16, i16* %250, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !246
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !246
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !249, !noalias !246
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !249, !noalias !246
  %295 = or i64 %272, 32
  %296 = getelementptr i16, i16* %229, i64 %295
  %297 = getelementptr i16, i16* %250, i64 %295
  %298 = bitcast i16* %296 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !246
  %300 = getelementptr i16, i16* %296, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !246
  %303 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %303, align 2, !alias.scope !249, !noalias !246
  %304 = getelementptr i16, i16* %297, i64 8
  %305 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %305, align 2, !alias.scope !249, !noalias !246
  %306 = or i64 %272, 48
  %307 = getelementptr i16, i16* %229, i64 %306
  %308 = getelementptr i16, i16* %250, i64 %306
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !246
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !246
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !249, !noalias !246
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !249, !noalias !246
  %317 = add i64 %272, 64
  %318 = add i64 %273, -4
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %271, !llvm.loop !251

320:                                              ; preds = %271, %259
  %321 = phi i64 [ 0, %259 ], [ %317, %271 ]
  %322 = icmp eq i64 %267, 0
  br i1 %322, label %339, label %323

323:                                              ; preds = %320, %323
  %324 = phi i64 [ %336, %323 ], [ %321, %320 ]
  %325 = phi i64 [ %337, %323 ], [ %267, %320 ]
  %326 = getelementptr i16, i16* %229, i64 %324
  %327 = getelementptr i16, i16* %250, i64 %324
  %328 = bitcast i16* %326 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !246
  %330 = getelementptr i16, i16* %326, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !246
  %333 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %333, align 2, !alias.scope !249, !noalias !246
  %334 = getelementptr i16, i16* %327, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %335, align 2, !alias.scope !249, !noalias !246
  %336 = add i64 %324, 16
  %337 = add i64 %325, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %323, !llvm.loop !252

339:                                              ; preds = %323, %320
  %340 = icmp eq i64 %230, %260
  br i1 %340, label %394, label %341

341:                                              ; preds = %339, %252, %247
  %342 = phi i64 [ %230, %252 ], [ %230, %247 ], [ %261, %339 ]
  %343 = phi i16* [ %229, %252 ], [ %229, %247 ], [ %262, %339 ]
  %344 = phi i16* [ %250, %252 ], [ %250, %247 ], [ %263, %339 ]
  %345 = add i64 %342, -1
  %346 = and i64 %342, 7
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %359, label %348

348:                                              ; preds = %341, %348
  %349 = phi i64 [ %354, %348 ], [ %342, %341 ]
  %350 = phi i16* [ %356, %348 ], [ %343, %341 ]
  %351 = phi i16* [ %355, %348 ], [ %344, %341 ]
  %352 = phi i64 [ %357, %348 ], [ %346, %341 ]
  %353 = load i16, i16* %350, align 2
  store i16 %353, i16* %351, align 2
  %354 = add i64 %349, -1
  %355 = getelementptr inbounds i16, i16* %351, i64 1
  %356 = getelementptr inbounds i16, i16* %350, i64 1
  %357 = add i64 %352, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %348, !llvm.loop !253

359:                                              ; preds = %348, %341
  %360 = phi i64 [ %342, %341 ], [ %354, %348 ]
  %361 = phi i16* [ %343, %341 ], [ %356, %348 ]
  %362 = phi i16* [ %344, %341 ], [ %355, %348 ]
  %363 = icmp ult i64 %345, 7
  br i1 %363, label %394, label %364

364:                                              ; preds = %359, %364
  %365 = phi i64 [ %390, %364 ], [ %360, %359 ]
  %366 = phi i16* [ %392, %364 ], [ %361, %359 ]
  %367 = phi i16* [ %391, %364 ], [ %362, %359 ]
  %368 = load i16, i16* %366, align 2
  store i16 %368, i16* %367, align 2
  %369 = getelementptr inbounds i16, i16* %367, i64 1
  %370 = getelementptr inbounds i16, i16* %366, i64 1
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %367, i64 2
  %373 = getelementptr inbounds i16, i16* %366, i64 2
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %367, i64 3
  %376 = getelementptr inbounds i16, i16* %366, i64 3
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %367, i64 4
  %379 = getelementptr inbounds i16, i16* %366, i64 4
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %367, i64 5
  %382 = getelementptr inbounds i16, i16* %366, i64 5
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %367, i64 6
  %385 = getelementptr inbounds i16, i16* %366, i64 6
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = getelementptr inbounds i16, i16* %367, i64 7
  %388 = getelementptr inbounds i16, i16* %366, i64 7
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = add i64 %365, -8
  %391 = getelementptr inbounds i16, i16* %367, i64 8
  %392 = getelementptr inbounds i16, i16* %366, i64 8
  %393 = icmp eq i64 %390, 0
  br i1 %393, label %394, label %364, !llvm.loop !254

394:                                              ; preds = %359, %364, %339
  %395 = add i64 %242, %230
  %396 = load i8, i8* %205, align 1
  %397 = icmp slt i8 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %394
  store i64 %395, i64* %10, align 8
  br label %401

399:                                              ; preds = %394
  %400 = trunc i64 %395 to i8
  store i8 %400, i8* %205, align 1
  br label %401

401:                                              ; preds = %399, %398
  %402 = getelementptr inbounds i16, i16* %249, i64 %395
  store i16 0, i16* %402, align 2
  br label %406

403:                                              ; preds = %240
  %404 = add i64 %242, %230
  %405 = sub i64 %404, %241
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %241, i64 %405, i64 %242, i64 %242, i64 0, i64 %230, i16* %229) #12
  br label %406

406:                                              ; preds = %245, %401, %403
  %407 = load i8, i8* %200, align 1
  %408 = icmp slt i8 %407, 0
  br i1 %408, label %409, label %411

409:                                              ; preds = %406
  %410 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %410) #14
  br label %411

411:                                              ; preds = %406, %409
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #12
  %412 = add nuw i64 %221, 1
  %413 = icmp eq i64 %412, %4
  br i1 %413, label %208, label %220

414:                                              ; preds = %208
  %415 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %415) #12
  %416 = bitcast %"class.std::__1::basic_string.4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %416) #12
  %417 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  %418 = icmp eq i16 %417, 0
  br i1 %418, label %419, label %423

419:                                              ; preds = %414
  %420 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %421 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %420, i64 0, i32 1, i32 1
  store i8 0, i8* %421, align 1
  %422 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  br label %610

423:                                              ; preds = %414, %423
  %424 = phi i64 [ %426, %423 ], [ 0, %414 ]
  %425 = phi i16* [ %427, %423 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %414 ]
  %426 = add i64 %424, 1
  %427 = getelementptr inbounds i16, i16* %425, i64 1
  %428 = load i16, i16* %427, align 2
  %429 = icmp eq i16 %428, 0
  br i1 %429, label %430, label %423

430:                                              ; preds = %423
  %431 = icmp ugt i64 %426, 9223372036854775791
  br i1 %431, label %432, label %434

432:                                              ; preds = %430
  %433 = bitcast %"class.std::__1::basic_string.4"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %433) #13
  unreachable

434:                                              ; preds = %430
  %435 = icmp ult i64 %426, 11
  br i1 %435, label %449, label %436

436:                                              ; preds = %434
  %437 = add nuw nsw i64 %424, 9
  %438 = and i64 %437, -8
  %439 = icmp slt i64 %438, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %436
  call void @abort() #13
  unreachable

441:                                              ; preds = %436
  %442 = shl i64 %438, 1
  %443 = call i8* @_Znwm(i64 %442) #14
  %444 = bitcast i8* %443 to i16*
  %445 = bitcast %"class.std::__1::basic_string.4"* %8 to i8**
  store i8* %443, i8** %445, align 8
  %446 = or i64 %438, -9223372036854775808
  %447 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %426, i64* %448, align 8
  br label %455

449:                                              ; preds = %434
  %450 = trunc i64 %426 to i8
  %451 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %452 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %451, i64 0, i32 1, i32 1
  store i8 %450, i8* %452, align 1
  %453 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  %454 = icmp eq i64 %426, 0
  br i1 %454, label %610, label %455

455:                                              ; preds = %449, %441
  %456 = phi i16* [ %444, %441 ], [ %453, %449 ]
  store i16 %417, i16* %456, align 2
  %457 = icmp eq i64 %424, 0
  br i1 %457, label %608, label %458

458:                                              ; preds = %455
  %459 = icmp ult i64 %424, 16
  br i1 %459, label %555, label %460

460:                                              ; preds = %458
  %461 = getelementptr i16, i16* %456, i64 1
  %462 = getelementptr i16, i16* %456, i64 %426
  %463 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %426
  %464 = icmp ult i16* %461, %463
  %465 = icmp ugt i16* %462, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %466 = and i1 %464, %465
  br i1 %466, label %555, label %467

467:                                              ; preds = %460
  %468 = and i64 %424, -16
  %469 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %468
  %470 = sub i64 %424, %468
  %471 = getelementptr i16, i16* %456, i64 %468
  %472 = add i64 %468, -16
  %473 = lshr exact i64 %472, 4
  %474 = add nuw nsw i64 %473, 1
  %475 = and i64 %474, 3
  %476 = icmp ult i64 %472, 48
  br i1 %476, label %532, label %477

477:                                              ; preds = %467
  %478 = sub nsw i64 %474, %475
  %479 = getelementptr i16, i16* %456, i64 1
  %480 = getelementptr i16, i16* %456, i64 1
  %481 = getelementptr i16, i16* %456, i64 1
  %482 = getelementptr i16, i16* %456, i64 1
  br label %483

483:                                              ; preds = %483, %477
  %484 = phi i64 [ 0, %477 ], [ %529, %483 ]
  %485 = phi i64 [ %478, %477 ], [ %530, %483 ]
  %486 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %484
  %487 = getelementptr inbounds i16, i16* %479, i64 %484
  %488 = bitcast i16* %486 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 2, !alias.scope !255
  %490 = getelementptr i16, i16* %486, i64 8
  %491 = bitcast i16* %490 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !255
  %493 = bitcast i16* %487 to <8 x i16>*
  store <8 x i16> %489, <8 x i16>* %493, align 2, !alias.scope !258, !noalias !255
  %494 = getelementptr inbounds i16, i16* %487, i64 8
  %495 = bitcast i16* %494 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %495, align 2, !alias.scope !258, !noalias !255
  %496 = or i64 %484, 16
  %497 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %496
  %498 = getelementptr inbounds i16, i16* %480, i64 %496
  %499 = bitcast i16* %497 to <8 x i16>*
  %500 = load <8 x i16>, <8 x i16>* %499, align 2, !alias.scope !255
  %501 = getelementptr i16, i16* %497, i64 8
  %502 = bitcast i16* %501 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !255
  %504 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %500, <8 x i16>* %504, align 2, !alias.scope !258, !noalias !255
  %505 = getelementptr inbounds i16, i16* %498, i64 8
  %506 = bitcast i16* %505 to <8 x i16>*
  store <8 x i16> %503, <8 x i16>* %506, align 2, !alias.scope !258, !noalias !255
  %507 = or i64 %484, 32
  %508 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %507
  %509 = getelementptr inbounds i16, i16* %481, i64 %507
  %510 = bitcast i16* %508 to <8 x i16>*
  %511 = load <8 x i16>, <8 x i16>* %510, align 2, !alias.scope !255
  %512 = getelementptr i16, i16* %508, i64 8
  %513 = bitcast i16* %512 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !255
  %515 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %511, <8 x i16>* %515, align 2, !alias.scope !258, !noalias !255
  %516 = getelementptr inbounds i16, i16* %509, i64 8
  %517 = bitcast i16* %516 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %517, align 2, !alias.scope !258, !noalias !255
  %518 = or i64 %484, 48
  %519 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %518
  %520 = getelementptr inbounds i16, i16* %482, i64 %518
  %521 = bitcast i16* %519 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !255
  %523 = getelementptr i16, i16* %519, i64 8
  %524 = bitcast i16* %523 to <8 x i16>*
  %525 = load <8 x i16>, <8 x i16>* %524, align 2, !alias.scope !255
  %526 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %526, align 2, !alias.scope !258, !noalias !255
  %527 = getelementptr inbounds i16, i16* %520, i64 8
  %528 = bitcast i16* %527 to <8 x i16>*
  store <8 x i16> %525, <8 x i16>* %528, align 2, !alias.scope !258, !noalias !255
  %529 = add i64 %484, 64
  %530 = add i64 %485, -4
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %532, label %483, !llvm.loop !260

532:                                              ; preds = %483, %467
  %533 = phi i64 [ 0, %467 ], [ %529, %483 ]
  %534 = icmp eq i64 %475, 0
  br i1 %534, label %553, label %535

535:                                              ; preds = %532
  %536 = getelementptr i16, i16* %456, i64 1
  br label %537

537:                                              ; preds = %537, %535
  %538 = phi i64 [ %533, %535 ], [ %550, %537 ]
  %539 = phi i64 [ %475, %535 ], [ %551, %537 ]
  %540 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %538
  %541 = getelementptr inbounds i16, i16* %536, i64 %538
  %542 = bitcast i16* %540 to <8 x i16>*
  %543 = load <8 x i16>, <8 x i16>* %542, align 2, !alias.scope !255
  %544 = getelementptr i16, i16* %540, i64 8
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !255
  %547 = bitcast i16* %541 to <8 x i16>*
  store <8 x i16> %543, <8 x i16>* %547, align 2, !alias.scope !258, !noalias !255
  %548 = getelementptr inbounds i16, i16* %541, i64 8
  %549 = bitcast i16* %548 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %549, align 2, !alias.scope !258, !noalias !255
  %550 = add i64 %538, 16
  %551 = add i64 %539, -1
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %553, label %537, !llvm.loop !261

553:                                              ; preds = %537, %532
  %554 = icmp eq i64 %424, %468
  br i1 %554, label %608, label %555

555:                                              ; preds = %553, %460, %458
  %556 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %460 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %458 ], [ %469, %553 ]
  %557 = phi i64 [ %424, %460 ], [ %424, %458 ], [ %470, %553 ]
  %558 = phi i16* [ %456, %460 ], [ %456, %458 ], [ %471, %553 ]
  %559 = add i64 %557, -1
  %560 = and i64 %557, 7
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %573, label %562

562:                                              ; preds = %555, %562
  %563 = phi i16* [ %570, %562 ], [ %556, %555 ]
  %564 = phi i64 [ %569, %562 ], [ %557, %555 ]
  %565 = phi i16* [ %567, %562 ], [ %558, %555 ]
  %566 = phi i64 [ %571, %562 ], [ %560, %555 ]
  %567 = getelementptr inbounds i16, i16* %565, i64 1
  %568 = load i16, i16* %563, align 2
  store i16 %568, i16* %567, align 2
  %569 = add i64 %564, -1
  %570 = getelementptr inbounds i16, i16* %563, i64 1
  %571 = add i64 %566, -1
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %562, !llvm.loop !262

573:                                              ; preds = %562, %555
  %574 = phi i16* [ %556, %555 ], [ %570, %562 ]
  %575 = phi i64 [ %557, %555 ], [ %569, %562 ]
  %576 = phi i16* [ %558, %555 ], [ %567, %562 ]
  %577 = icmp ult i64 %559, 7
  br i1 %577, label %608, label %578

578:                                              ; preds = %573, %578
  %579 = phi i16* [ %606, %578 ], [ %574, %573 ]
  %580 = phi i64 [ %605, %578 ], [ %575, %573 ]
  %581 = phi i16* [ %603, %578 ], [ %576, %573 ]
  %582 = getelementptr inbounds i16, i16* %581, i64 1
  %583 = load i16, i16* %579, align 2
  store i16 %583, i16* %582, align 2
  %584 = getelementptr inbounds i16, i16* %579, i64 1
  %585 = getelementptr inbounds i16, i16* %581, i64 2
  %586 = load i16, i16* %584, align 2
  store i16 %586, i16* %585, align 2
  %587 = getelementptr inbounds i16, i16* %579, i64 2
  %588 = getelementptr inbounds i16, i16* %581, i64 3
  %589 = load i16, i16* %587, align 2
  store i16 %589, i16* %588, align 2
  %590 = getelementptr inbounds i16, i16* %579, i64 3
  %591 = getelementptr inbounds i16, i16* %581, i64 4
  %592 = load i16, i16* %590, align 2
  store i16 %592, i16* %591, align 2
  %593 = getelementptr inbounds i16, i16* %579, i64 4
  %594 = getelementptr inbounds i16, i16* %581, i64 5
  %595 = load i16, i16* %593, align 2
  store i16 %595, i16* %594, align 2
  %596 = getelementptr inbounds i16, i16* %579, i64 5
  %597 = getelementptr inbounds i16, i16* %581, i64 6
  %598 = load i16, i16* %596, align 2
  store i16 %598, i16* %597, align 2
  %599 = getelementptr inbounds i16, i16* %579, i64 6
  %600 = getelementptr inbounds i16, i16* %581, i64 7
  %601 = load i16, i16* %599, align 2
  store i16 %601, i16* %600, align 2
  %602 = getelementptr inbounds i16, i16* %579, i64 7
  %603 = getelementptr inbounds i16, i16* %581, i64 8
  %604 = load i16, i16* %602, align 2
  store i16 %604, i16* %603, align 2
  %605 = add i64 %580, -8
  %606 = getelementptr inbounds i16, i16* %579, i64 8
  %607 = icmp eq i64 %605, 0
  br i1 %607, label %608, label %578, !llvm.loop !263

608:                                              ; preds = %573, %578, %553, %455
  %609 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %610

610:                                              ; preds = %608, %419, %449
  %611 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %609, %608 ], [ %420, %419 ], [ %451, %449 ]
  %612 = phi i64 [ %426, %608 ], [ 0, %419 ], [ 0, %449 ]
  %613 = phi i16* [ %456, %608 ], [ %422, %419 ], [ %453, %449 ]
  %614 = getelementptr inbounds i16, i16* %613, i64 %612
  store i16 0, i16* %614, align 2
  %615 = load i16, i16* @_ZN3gfx13kForwardSlashE, align 2
  %616 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %611, i64 0, i32 1, i32 1
  %617 = load i8, i8* %616, align 1, !noalias !264
  %618 = icmp slt i8 %617, 0
  br i1 %618, label %621, label %619

619:                                              ; preds = %610
  %620 = zext i8 %617 to i64
  br label %628

621:                                              ; preds = %610
  %622 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %623 = load i64, i64* %622, align 8, !noalias !264
  %624 = and i64 %623, 9223372036854775807
  %625 = add nsw i64 %624, -1
  %626 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %627 = load i64, i64* %626, align 8, !noalias !264
  br label %628

628:                                              ; preds = %621, %619
  %629 = phi i64 [ 10, %619 ], [ %625, %621 ]
  %630 = phi i64 [ %620, %619 ], [ %627, %621 ]
  %631 = icmp eq i64 %630, %629
  br i1 %631, label %632, label %635

632:                                              ; preds = %628
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.4"* nonnull %8, i64 %629, i64 1, i64 %629, i64 %629, i64 0, i64 0) #12, !noalias !264
  %633 = load i8, i8* %616, align 1, !noalias !264
  %634 = icmp slt i8 %633, 0
  br i1 %634, label %640, label %636

635:                                              ; preds = %628
  br i1 %618, label %640, label %636

636:                                              ; preds = %635, %632
  %637 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  %638 = trunc i64 %630 to i8
  %639 = add i8 %638, 1
  store i8 %639, i8* %616, align 1, !noalias !264
  br label %645

640:                                              ; preds = %635, %632
  %641 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i16*, i16** %641, align 8, !noalias !264
  %643 = add i64 %630, 1
  %644 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %643, i64* %644, align 8, !noalias !264
  br label %645

645:                                              ; preds = %636, %640
  %646 = phi i16* [ %637, %636 ], [ %642, %640 ]
  %647 = getelementptr inbounds i16, i16* %646, i64 %630
  store i16 %615, i16* %647, align 2, !noalias !264
  %648 = getelementptr inbounds i16, i16* %647, i64 1
  store i16 0, i16* %648, align 2, !noalias !264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %415, i8* nonnull align 8 %416, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 0, i64 24, i1 false) #12, !noalias !264
  %649 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %650 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %649, i64 0, i32 1, i32 1
  %651 = load i8, i8* %650, align 1
  %652 = icmp slt i8 %651, 0
  %653 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load i16*, i16** %653, align 8
  %655 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %656 = load i64, i64* %655, align 8
  %657 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %658 = zext i8 %651 to i64
  %659 = select i1 %652, i16* %654, i16* %657
  %660 = select i1 %652, i64 %656, i64 %658
  %661 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %662 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %661, i64 0, i32 1, i32 1
  %663 = load i8, i8* %662, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %670

665:                                              ; preds = %645
  %666 = load i64, i64* %11, align 8
  %667 = and i64 %666, 9223372036854775807
  %668 = add nsw i64 %667, -1
  %669 = load i64, i64* %10, align 8
  br label %672

670:                                              ; preds = %645
  %671 = zext i8 %663 to i64
  br label %672

672:                                              ; preds = %670, %665
  %673 = phi i64 [ %668, %665 ], [ 10, %670 ]
  %674 = phi i64 [ %669, %665 ], [ %671, %670 ]
  %675 = sub i64 %673, %674
  %676 = icmp ult i64 %675, %660
  br i1 %676, label %836, label %677

677:                                              ; preds = %672
  %678 = icmp eq i64 %660, 0
  br i1 %678, label %839, label %679

679:                                              ; preds = %677
  %680 = load i16*, i16** %9, align 8
  %681 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %682 = select i1 %664, i16* %680, i16* %681
  %683 = getelementptr inbounds i16, i16* %682, i64 %674
  %684 = icmp ult i64 %660, 16
  br i1 %684, label %774, label %685

685:                                              ; preds = %679
  %686 = add i64 %660, %674
  %687 = getelementptr i16, i16* %682, i64 %686
  %688 = getelementptr i16, i16* %659, i64 %660
  %689 = icmp ult i16* %683, %688
  %690 = icmp ult i16* %659, %687
  %691 = and i1 %689, %690
  br i1 %691, label %774, label %692

692:                                              ; preds = %685
  %693 = and i64 %660, -16
  %694 = sub i64 %660, %693
  %695 = getelementptr i16, i16* %659, i64 %693
  %696 = getelementptr i16, i16* %683, i64 %693
  %697 = add i64 %693, -16
  %698 = lshr exact i64 %697, 4
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 3
  %701 = icmp ult i64 %697, 48
  br i1 %701, label %753, label %702

702:                                              ; preds = %692
  %703 = sub nsw i64 %699, %700
  br label %704

704:                                              ; preds = %704, %702
  %705 = phi i64 [ 0, %702 ], [ %750, %704 ]
  %706 = phi i64 [ %703, %702 ], [ %751, %704 ]
  %707 = getelementptr i16, i16* %659, i64 %705
  %708 = getelementptr i16, i16* %683, i64 %705
  %709 = bitcast i16* %707 to <8 x i16>*
  %710 = load <8 x i16>, <8 x i16>* %709, align 2, !alias.scope !267
  %711 = getelementptr i16, i16* %707, i64 8
  %712 = bitcast i16* %711 to <8 x i16>*
  %713 = load <8 x i16>, <8 x i16>* %712, align 2, !alias.scope !267
  %714 = bitcast i16* %708 to <8 x i16>*
  store <8 x i16> %710, <8 x i16>* %714, align 2, !alias.scope !270, !noalias !267
  %715 = getelementptr i16, i16* %708, i64 8
  %716 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> %713, <8 x i16>* %716, align 2, !alias.scope !270, !noalias !267
  %717 = or i64 %705, 16
  %718 = getelementptr i16, i16* %659, i64 %717
  %719 = getelementptr i16, i16* %683, i64 %717
  %720 = bitcast i16* %718 to <8 x i16>*
  %721 = load <8 x i16>, <8 x i16>* %720, align 2, !alias.scope !267
  %722 = getelementptr i16, i16* %718, i64 8
  %723 = bitcast i16* %722 to <8 x i16>*
  %724 = load <8 x i16>, <8 x i16>* %723, align 2, !alias.scope !267
  %725 = bitcast i16* %719 to <8 x i16>*
  store <8 x i16> %721, <8 x i16>* %725, align 2, !alias.scope !270, !noalias !267
  %726 = getelementptr i16, i16* %719, i64 8
  %727 = bitcast i16* %726 to <8 x i16>*
  store <8 x i16> %724, <8 x i16>* %727, align 2, !alias.scope !270, !noalias !267
  %728 = or i64 %705, 32
  %729 = getelementptr i16, i16* %659, i64 %728
  %730 = getelementptr i16, i16* %683, i64 %728
  %731 = bitcast i16* %729 to <8 x i16>*
  %732 = load <8 x i16>, <8 x i16>* %731, align 2, !alias.scope !267
  %733 = getelementptr i16, i16* %729, i64 8
  %734 = bitcast i16* %733 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !267
  %736 = bitcast i16* %730 to <8 x i16>*
  store <8 x i16> %732, <8 x i16>* %736, align 2, !alias.scope !270, !noalias !267
  %737 = getelementptr i16, i16* %730, i64 8
  %738 = bitcast i16* %737 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %738, align 2, !alias.scope !270, !noalias !267
  %739 = or i64 %705, 48
  %740 = getelementptr i16, i16* %659, i64 %739
  %741 = getelementptr i16, i16* %683, i64 %739
  %742 = bitcast i16* %740 to <8 x i16>*
  %743 = load <8 x i16>, <8 x i16>* %742, align 2, !alias.scope !267
  %744 = getelementptr i16, i16* %740, i64 8
  %745 = bitcast i16* %744 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !267
  %747 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> %743, <8 x i16>* %747, align 2, !alias.scope !270, !noalias !267
  %748 = getelementptr i16, i16* %741, i64 8
  %749 = bitcast i16* %748 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %749, align 2, !alias.scope !270, !noalias !267
  %750 = add i64 %705, 64
  %751 = add i64 %706, -4
  %752 = icmp eq i64 %751, 0
  br i1 %752, label %753, label %704, !llvm.loop !272

753:                                              ; preds = %704, %692
  %754 = phi i64 [ 0, %692 ], [ %750, %704 ]
  %755 = icmp eq i64 %700, 0
  br i1 %755, label %772, label %756

756:                                              ; preds = %753, %756
  %757 = phi i64 [ %769, %756 ], [ %754, %753 ]
  %758 = phi i64 [ %770, %756 ], [ %700, %753 ]
  %759 = getelementptr i16, i16* %659, i64 %757
  %760 = getelementptr i16, i16* %683, i64 %757
  %761 = bitcast i16* %759 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !267
  %763 = getelementptr i16, i16* %759, i64 8
  %764 = bitcast i16* %763 to <8 x i16>*
  %765 = load <8 x i16>, <8 x i16>* %764, align 2, !alias.scope !267
  %766 = bitcast i16* %760 to <8 x i16>*
  store <8 x i16> %762, <8 x i16>* %766, align 2, !alias.scope !270, !noalias !267
  %767 = getelementptr i16, i16* %760, i64 8
  %768 = bitcast i16* %767 to <8 x i16>*
  store <8 x i16> %765, <8 x i16>* %768, align 2, !alias.scope !270, !noalias !267
  %769 = add i64 %757, 16
  %770 = add i64 %758, -1
  %771 = icmp eq i64 %770, 0
  br i1 %771, label %772, label %756, !llvm.loop !273

772:                                              ; preds = %756, %753
  %773 = icmp eq i64 %660, %693
  br i1 %773, label %827, label %774

774:                                              ; preds = %772, %685, %679
  %775 = phi i64 [ %660, %685 ], [ %660, %679 ], [ %694, %772 ]
  %776 = phi i16* [ %659, %685 ], [ %659, %679 ], [ %695, %772 ]
  %777 = phi i16* [ %683, %685 ], [ %683, %679 ], [ %696, %772 ]
  %778 = add i64 %775, -1
  %779 = and i64 %775, 7
  %780 = icmp eq i64 %779, 0
  br i1 %780, label %792, label %781

781:                                              ; preds = %774, %781
  %782 = phi i64 [ %787, %781 ], [ %775, %774 ]
  %783 = phi i16* [ %789, %781 ], [ %776, %774 ]
  %784 = phi i16* [ %788, %781 ], [ %777, %774 ]
  %785 = phi i64 [ %790, %781 ], [ %779, %774 ]
  %786 = load i16, i16* %783, align 2
  store i16 %786, i16* %784, align 2
  %787 = add i64 %782, -1
  %788 = getelementptr inbounds i16, i16* %784, i64 1
  %789 = getelementptr inbounds i16, i16* %783, i64 1
  %790 = add i64 %785, -1
  %791 = icmp eq i64 %790, 0
  br i1 %791, label %792, label %781, !llvm.loop !274

792:                                              ; preds = %781, %774
  %793 = phi i64 [ %775, %774 ], [ %787, %781 ]
  %794 = phi i16* [ %776, %774 ], [ %789, %781 ]
  %795 = phi i16* [ %777, %774 ], [ %788, %781 ]
  %796 = icmp ult i64 %778, 7
  br i1 %796, label %827, label %797

797:                                              ; preds = %792, %797
  %798 = phi i64 [ %823, %797 ], [ %793, %792 ]
  %799 = phi i16* [ %825, %797 ], [ %794, %792 ]
  %800 = phi i16* [ %824, %797 ], [ %795, %792 ]
  %801 = load i16, i16* %799, align 2
  store i16 %801, i16* %800, align 2
  %802 = getelementptr inbounds i16, i16* %800, i64 1
  %803 = getelementptr inbounds i16, i16* %799, i64 1
  %804 = load i16, i16* %803, align 2
  store i16 %804, i16* %802, align 2
  %805 = getelementptr inbounds i16, i16* %800, i64 2
  %806 = getelementptr inbounds i16, i16* %799, i64 2
  %807 = load i16, i16* %806, align 2
  store i16 %807, i16* %805, align 2
  %808 = getelementptr inbounds i16, i16* %800, i64 3
  %809 = getelementptr inbounds i16, i16* %799, i64 3
  %810 = load i16, i16* %809, align 2
  store i16 %810, i16* %808, align 2
  %811 = getelementptr inbounds i16, i16* %800, i64 4
  %812 = getelementptr inbounds i16, i16* %799, i64 4
  %813 = load i16, i16* %812, align 2
  store i16 %813, i16* %811, align 2
  %814 = getelementptr inbounds i16, i16* %800, i64 5
  %815 = getelementptr inbounds i16, i16* %799, i64 5
  %816 = load i16, i16* %815, align 2
  store i16 %816, i16* %814, align 2
  %817 = getelementptr inbounds i16, i16* %800, i64 6
  %818 = getelementptr inbounds i16, i16* %799, i64 6
  %819 = load i16, i16* %818, align 2
  store i16 %819, i16* %817, align 2
  %820 = getelementptr inbounds i16, i16* %800, i64 7
  %821 = getelementptr inbounds i16, i16* %799, i64 7
  %822 = load i16, i16* %821, align 2
  store i16 %822, i16* %820, align 2
  %823 = add i64 %798, -8
  %824 = getelementptr inbounds i16, i16* %800, i64 8
  %825 = getelementptr inbounds i16, i16* %799, i64 8
  %826 = icmp eq i64 %823, 0
  br i1 %826, label %827, label %797, !llvm.loop !275

827:                                              ; preds = %792, %797, %772
  %828 = add i64 %674, %660
  %829 = load i8, i8* %662, align 1
  %830 = icmp slt i8 %829, 0
  br i1 %830, label %831, label %832

831:                                              ; preds = %827
  store i64 %828, i64* %10, align 8
  br label %834

832:                                              ; preds = %827
  %833 = trunc i64 %828 to i8
  store i8 %833, i8* %662, align 1
  br label %834

834:                                              ; preds = %832, %831
  %835 = getelementptr inbounds i16, i16* %682, i64 %828
  store i16 0, i16* %835, align 2
  br label %839

836:                                              ; preds = %672
  %837 = add i64 %674, %660
  %838 = sub i64 %837, %673
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %673, i64 %838, i64 %674, i64 %674, i64 0, i64 %660, i16* %659) #12
  br label %839

839:                                              ; preds = %677, %834, %836
  %840 = load i8, i8* %650, align 1
  %841 = icmp slt i8 %840, 0
  br i1 %841, label %842, label %845

842:                                              ; preds = %839
  %843 = bitcast %"class.std::__1::basic_string.4"* %7 to i8**
  %844 = load i8*, i8** %843, align 8
  call void @_ZdlPv(i8* %844) #14
  br label %845

845:                                              ; preds = %839, %842
  %846 = load i8, i8* %616, align 1
  %847 = icmp slt i8 %846, 0
  br i1 %847, label %848, label %851

848:                                              ; preds = %845
  %849 = bitcast %"class.std::__1::basic_string.4"* %8 to i8**
  %850 = load i8*, i8** %849, align 8
  call void @_ZdlPv(i8* %850) #14
  br label %851

851:                                              ; preds = %845, %848
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %416) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %415) #12
  br label %852

852:                                              ; preds = %218, %851
  %853 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %219, %218 ], [ %661, %851 ]
  %854 = bitcast %"class.std::__1::basic_string.4"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %855 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %854, i64 0, i32 1, i32 1
  %856 = load i8, i8* %855, align 1
  %857 = icmp slt i8 %856, 0
  %858 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %859 = load i16*, i16** %858, align 8
  %860 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %861 = load i64, i64* %860, align 8
  %862 = bitcast %"class.std::__1::basic_string.4"* %3 to i16*
  %863 = zext i8 %856 to i64
  %864 = select i1 %857, i16* %859, i16* %862
  %865 = select i1 %857, i64 %861, i64 %863
  %866 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %853, i64 0, i32 1, i32 1
  %867 = load i8, i8* %866, align 1
  %868 = icmp slt i8 %867, 0
  br i1 %868, label %869, label %874

869:                                              ; preds = %852
  %870 = load i64, i64* %11, align 8
  %871 = and i64 %870, 9223372036854775807
  %872 = add nsw i64 %871, -1
  %873 = load i64, i64* %10, align 8
  br label %876

874:                                              ; preds = %852
  %875 = zext i8 %867 to i64
  br label %876

876:                                              ; preds = %874, %869
  %877 = phi i64 [ %872, %869 ], [ 10, %874 ]
  %878 = phi i64 [ %873, %869 ], [ %875, %874 ]
  %879 = sub i64 %877, %878
  %880 = icmp ult i64 %879, %865
  br i1 %880, label %1040, label %881

881:                                              ; preds = %876
  %882 = icmp eq i64 %865, 0
  br i1 %882, label %1043, label %883

883:                                              ; preds = %881
  %884 = load i16*, i16** %9, align 8
  %885 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %886 = select i1 %868, i16* %884, i16* %885
  %887 = getelementptr inbounds i16, i16* %886, i64 %878
  %888 = icmp ult i64 %865, 16
  br i1 %888, label %978, label %889

889:                                              ; preds = %883
  %890 = add i64 %865, %878
  %891 = getelementptr i16, i16* %886, i64 %890
  %892 = getelementptr i16, i16* %864, i64 %865
  %893 = icmp ult i16* %887, %892
  %894 = icmp ult i16* %864, %891
  %895 = and i1 %893, %894
  br i1 %895, label %978, label %896

896:                                              ; preds = %889
  %897 = and i64 %865, -16
  %898 = sub i64 %865, %897
  %899 = getelementptr i16, i16* %864, i64 %897
  %900 = getelementptr i16, i16* %887, i64 %897
  %901 = add i64 %897, -16
  %902 = lshr exact i64 %901, 4
  %903 = add nuw nsw i64 %902, 1
  %904 = and i64 %903, 3
  %905 = icmp ult i64 %901, 48
  br i1 %905, label %957, label %906

906:                                              ; preds = %896
  %907 = sub nsw i64 %903, %904
  br label %908

908:                                              ; preds = %908, %906
  %909 = phi i64 [ 0, %906 ], [ %954, %908 ]
  %910 = phi i64 [ %907, %906 ], [ %955, %908 ]
  %911 = getelementptr i16, i16* %864, i64 %909
  %912 = getelementptr i16, i16* %887, i64 %909
  %913 = bitcast i16* %911 to <8 x i16>*
  %914 = load <8 x i16>, <8 x i16>* %913, align 2, !alias.scope !276
  %915 = getelementptr i16, i16* %911, i64 8
  %916 = bitcast i16* %915 to <8 x i16>*
  %917 = load <8 x i16>, <8 x i16>* %916, align 2, !alias.scope !276
  %918 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %914, <8 x i16>* %918, align 2, !alias.scope !279, !noalias !276
  %919 = getelementptr i16, i16* %912, i64 8
  %920 = bitcast i16* %919 to <8 x i16>*
  store <8 x i16> %917, <8 x i16>* %920, align 2, !alias.scope !279, !noalias !276
  %921 = or i64 %909, 16
  %922 = getelementptr i16, i16* %864, i64 %921
  %923 = getelementptr i16, i16* %887, i64 %921
  %924 = bitcast i16* %922 to <8 x i16>*
  %925 = load <8 x i16>, <8 x i16>* %924, align 2, !alias.scope !276
  %926 = getelementptr i16, i16* %922, i64 8
  %927 = bitcast i16* %926 to <8 x i16>*
  %928 = load <8 x i16>, <8 x i16>* %927, align 2, !alias.scope !276
  %929 = bitcast i16* %923 to <8 x i16>*
  store <8 x i16> %925, <8 x i16>* %929, align 2, !alias.scope !279, !noalias !276
  %930 = getelementptr i16, i16* %923, i64 8
  %931 = bitcast i16* %930 to <8 x i16>*
  store <8 x i16> %928, <8 x i16>* %931, align 2, !alias.scope !279, !noalias !276
  %932 = or i64 %909, 32
  %933 = getelementptr i16, i16* %864, i64 %932
  %934 = getelementptr i16, i16* %887, i64 %932
  %935 = bitcast i16* %933 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !276
  %937 = getelementptr i16, i16* %933, i64 8
  %938 = bitcast i16* %937 to <8 x i16>*
  %939 = load <8 x i16>, <8 x i16>* %938, align 2, !alias.scope !276
  %940 = bitcast i16* %934 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %940, align 2, !alias.scope !279, !noalias !276
  %941 = getelementptr i16, i16* %934, i64 8
  %942 = bitcast i16* %941 to <8 x i16>*
  store <8 x i16> %939, <8 x i16>* %942, align 2, !alias.scope !279, !noalias !276
  %943 = or i64 %909, 48
  %944 = getelementptr i16, i16* %864, i64 %943
  %945 = getelementptr i16, i16* %887, i64 %943
  %946 = bitcast i16* %944 to <8 x i16>*
  %947 = load <8 x i16>, <8 x i16>* %946, align 2, !alias.scope !276
  %948 = getelementptr i16, i16* %944, i64 8
  %949 = bitcast i16* %948 to <8 x i16>*
  %950 = load <8 x i16>, <8 x i16>* %949, align 2, !alias.scope !276
  %951 = bitcast i16* %945 to <8 x i16>*
  store <8 x i16> %947, <8 x i16>* %951, align 2, !alias.scope !279, !noalias !276
  %952 = getelementptr i16, i16* %945, i64 8
  %953 = bitcast i16* %952 to <8 x i16>*
  store <8 x i16> %950, <8 x i16>* %953, align 2, !alias.scope !279, !noalias !276
  %954 = add i64 %909, 64
  %955 = add i64 %910, -4
  %956 = icmp eq i64 %955, 0
  br i1 %956, label %957, label %908, !llvm.loop !281

957:                                              ; preds = %908, %896
  %958 = phi i64 [ 0, %896 ], [ %954, %908 ]
  %959 = icmp eq i64 %904, 0
  br i1 %959, label %976, label %960

960:                                              ; preds = %957, %960
  %961 = phi i64 [ %973, %960 ], [ %958, %957 ]
  %962 = phi i64 [ %974, %960 ], [ %904, %957 ]
  %963 = getelementptr i16, i16* %864, i64 %961
  %964 = getelementptr i16, i16* %887, i64 %961
  %965 = bitcast i16* %963 to <8 x i16>*
  %966 = load <8 x i16>, <8 x i16>* %965, align 2, !alias.scope !276
  %967 = getelementptr i16, i16* %963, i64 8
  %968 = bitcast i16* %967 to <8 x i16>*
  %969 = load <8 x i16>, <8 x i16>* %968, align 2, !alias.scope !276
  %970 = bitcast i16* %964 to <8 x i16>*
  store <8 x i16> %966, <8 x i16>* %970, align 2, !alias.scope !279, !noalias !276
  %971 = getelementptr i16, i16* %964, i64 8
  %972 = bitcast i16* %971 to <8 x i16>*
  store <8 x i16> %969, <8 x i16>* %972, align 2, !alias.scope !279, !noalias !276
  %973 = add i64 %961, 16
  %974 = add i64 %962, -1
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %960, !llvm.loop !282

976:                                              ; preds = %960, %957
  %977 = icmp eq i64 %865, %897
  br i1 %977, label %1031, label %978

978:                                              ; preds = %976, %889, %883
  %979 = phi i64 [ %865, %889 ], [ %865, %883 ], [ %898, %976 ]
  %980 = phi i16* [ %864, %889 ], [ %864, %883 ], [ %899, %976 ]
  %981 = phi i16* [ %887, %889 ], [ %887, %883 ], [ %900, %976 ]
  %982 = add i64 %979, -1
  %983 = and i64 %979, 7
  %984 = icmp eq i64 %983, 0
  br i1 %984, label %996, label %985

985:                                              ; preds = %978, %985
  %986 = phi i64 [ %991, %985 ], [ %979, %978 ]
  %987 = phi i16* [ %993, %985 ], [ %980, %978 ]
  %988 = phi i16* [ %992, %985 ], [ %981, %978 ]
  %989 = phi i64 [ %994, %985 ], [ %983, %978 ]
  %990 = load i16, i16* %987, align 2
  store i16 %990, i16* %988, align 2
  %991 = add i64 %986, -1
  %992 = getelementptr inbounds i16, i16* %988, i64 1
  %993 = getelementptr inbounds i16, i16* %987, i64 1
  %994 = add i64 %989, -1
  %995 = icmp eq i64 %994, 0
  br i1 %995, label %996, label %985, !llvm.loop !283

996:                                              ; preds = %985, %978
  %997 = phi i64 [ %979, %978 ], [ %991, %985 ]
  %998 = phi i16* [ %980, %978 ], [ %993, %985 ]
  %999 = phi i16* [ %981, %978 ], [ %992, %985 ]
  %1000 = icmp ult i64 %982, 7
  br i1 %1000, label %1031, label %1001

1001:                                             ; preds = %996, %1001
  %1002 = phi i64 [ %1027, %1001 ], [ %997, %996 ]
  %1003 = phi i16* [ %1029, %1001 ], [ %998, %996 ]
  %1004 = phi i16* [ %1028, %1001 ], [ %999, %996 ]
  %1005 = load i16, i16* %1003, align 2
  store i16 %1005, i16* %1004, align 2
  %1006 = getelementptr inbounds i16, i16* %1004, i64 1
  %1007 = getelementptr inbounds i16, i16* %1003, i64 1
  %1008 = load i16, i16* %1007, align 2
  store i16 %1008, i16* %1006, align 2
  %1009 = getelementptr inbounds i16, i16* %1004, i64 2
  %1010 = getelementptr inbounds i16, i16* %1003, i64 2
  %1011 = load i16, i16* %1010, align 2
  store i16 %1011, i16* %1009, align 2
  %1012 = getelementptr inbounds i16, i16* %1004, i64 3
  %1013 = getelementptr inbounds i16, i16* %1003, i64 3
  %1014 = load i16, i16* %1013, align 2
  store i16 %1014, i16* %1012, align 2
  %1015 = getelementptr inbounds i16, i16* %1004, i64 4
  %1016 = getelementptr inbounds i16, i16* %1003, i64 4
  %1017 = load i16, i16* %1016, align 2
  store i16 %1017, i16* %1015, align 2
  %1018 = getelementptr inbounds i16, i16* %1004, i64 5
  %1019 = getelementptr inbounds i16, i16* %1003, i64 5
  %1020 = load i16, i16* %1019, align 2
  store i16 %1020, i16* %1018, align 2
  %1021 = getelementptr inbounds i16, i16* %1004, i64 6
  %1022 = getelementptr inbounds i16, i16* %1003, i64 6
  %1023 = load i16, i16* %1022, align 2
  store i16 %1023, i16* %1021, align 2
  %1024 = getelementptr inbounds i16, i16* %1004, i64 7
  %1025 = getelementptr inbounds i16, i16* %1003, i64 7
  %1026 = load i16, i16* %1025, align 2
  store i16 %1026, i16* %1024, align 2
  %1027 = add i64 %1002, -8
  %1028 = getelementptr inbounds i16, i16* %1004, i64 8
  %1029 = getelementptr inbounds i16, i16* %1003, i64 8
  %1030 = icmp eq i64 %1027, 0
  br i1 %1030, label %1031, label %1001, !llvm.loop !284

1031:                                             ; preds = %996, %1001, %976
  %1032 = add i64 %878, %865
  %1033 = load i8, i8* %866, align 1
  %1034 = icmp slt i8 %1033, 0
  br i1 %1034, label %1035, label %1036

1035:                                             ; preds = %1031
  store i64 %1032, i64* %10, align 8
  br label %1038

1036:                                             ; preds = %1031
  %1037 = trunc i64 %1032 to i8
  store i8 %1037, i8* %866, align 1
  br label %1038

1038:                                             ; preds = %1036, %1035
  %1039 = getelementptr inbounds i16, i16* %886, i64 %1032
  store i16 0, i16* %1039, align 2
  br label %1043

1040:                                             ; preds = %876
  %1041 = add i64 %878, %865
  %1042 = sub i64 %1041, %877
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %877, i64 %1042, i64 %878, i64 %878, i64 0, i64 %865, i16* %864) #12
  br label %1043

1043:                                             ; preds = %881, %1038, %1040
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13url_formatter9ElideHostERK4GURLRKN3gfx8FontListEf(%"class.std::__1::basic_string.4"* noalias sret, %class.GURL* dereferenceable(120), %"class.gfx::FontList"*, float) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string.4", align 8
  %6 = alloca %"class.std::__1::basic_string.4", align 8
  %7 = alloca %"class.std::__1::basic_string.4", align 8
  %8 = alloca %"class.std::__1::basic_string.4", align 8
  %9 = alloca %"class.std::__1::basic_string.4", align 8
  %10 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #12
  %11 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #12
  %14 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  call fastcc void @_ZN12_GLOBAL__N_19SplitHostERK4GURLPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEESA_SA_(%class.GURL* dereferenceable(120) %1, %"class.std::__1::basic_string.4"* nonnull %5, %"class.std::__1::basic_string.4"* nonnull %6, %"class.std::__1::basic_string.4"* nonnull %7)
  %15 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %5, %"class.gfx::FontList"* %2) #12
  %16 = fcmp ugt float %15, %3
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %10, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #12
  %19 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %471

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %21, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %11, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #12
  br label %471

32:                                               ; preds = %20
  %33 = call float @_ZN3gfx15GetStringWidthFERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6, %"class.gfx::FontList"* %2) #12
  %34 = fsub float %3, %33
  %35 = fcmp ugt float %34, 0.000000e+00
  br i1 %35, label %470, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::basic_string.4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), align 2
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  store i8 0, i8* %43, align 1
  %44 = bitcast %"class.std::__1::basic_string.4"* %9 to i16*
  br label %232

45:                                               ; preds = %36, %45
  %46 = phi i64 [ %48, %45 ], [ 0, %36 ]
  %47 = phi i16* [ %49, %45 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 0), %36 ]
  %48 = add i64 %46, 1
  %49 = getelementptr inbounds i16, i16* %47, i64 1
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %45

52:                                               ; preds = %45
  %53 = icmp ugt i64 %48, 9223372036854775791
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::basic_string.4"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %55) #13
  unreachable

56:                                               ; preds = %52
  %57 = icmp ult i64 %48, 11
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = add nuw nsw i64 %46, 9
  %60 = and i64 %59, -8
  %61 = icmp slt i64 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @abort() #13
  unreachable

63:                                               ; preds = %58
  %64 = shl i64 %60, 1
  %65 = call i8* @_Znwm(i64 %64) #14
  %66 = bitcast i8* %65 to i16*
  %67 = bitcast %"class.std::__1::basic_string.4"* %9 to i8**
  store i8* %65, i8** %67, align 8
  %68 = or i64 %60, -9223372036854775808
  %69 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %70, align 8
  br label %77

71:                                               ; preds = %56
  %72 = trunc i64 %48 to i8
  %73 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  store i8 %72, i8* %74, align 1
  %75 = bitcast %"class.std::__1::basic_string.4"* %9 to i16*
  %76 = icmp eq i64 %48, 0
  br i1 %76, label %232, label %77

77:                                               ; preds = %71, %63
  %78 = phi i16* [ %66, %63 ], [ %75, %71 ]
  store i16 %39, i16* %78, align 2
  %79 = icmp eq i64 %46, 0
  br i1 %79, label %230, label %80

80:                                               ; preds = %77
  %81 = icmp ult i64 %46, 16
  br i1 %81, label %177, label %82

82:                                               ; preds = %80
  %83 = getelementptr i16, i16* %78, i64 1
  %84 = getelementptr i16, i16* %78, i64 %48
  %85 = getelementptr [0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 %48
  %86 = icmp ult i16* %83, %85
  %87 = icmp ugt i16* %84, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1)
  %88 = and i1 %86, %87
  br i1 %88, label %177, label %89

89:                                               ; preds = %82
  %90 = and i64 %46, -16
  %91 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %90
  %92 = sub i64 %46, %90
  %93 = getelementptr i16, i16* %78, i64 %90
  %94 = add i64 %90, -16
  %95 = lshr exact i64 %94, 4
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 48
  br i1 %98, label %154, label %99

99:                                               ; preds = %89
  %100 = sub nsw i64 %96, %97
  %101 = getelementptr i16, i16* %78, i64 1
  %102 = getelementptr i16, i16* %78, i64 1
  %103 = getelementptr i16, i16* %78, i64 1
  %104 = getelementptr i16, i16* %78, i64 1
  br label %105

105:                                              ; preds = %105, %99
  %106 = phi i64 [ 0, %99 ], [ %151, %105 ]
  %107 = phi i64 [ %100, %99 ], [ %152, %105 ]
  %108 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %106
  %109 = getelementptr inbounds i16, i16* %101, i64 %106
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !285
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !285
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !288, !noalias !285
  %116 = getelementptr inbounds i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !288, !noalias !285
  %118 = or i64 %106, 16
  %119 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %118
  %120 = getelementptr inbounds i16, i16* %102, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !285
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !285
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !288, !noalias !285
  %127 = getelementptr inbounds i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !288, !noalias !285
  %129 = or i64 %106, 32
  %130 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %129
  %131 = getelementptr inbounds i16, i16* %103, i64 %129
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !285
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !285
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !288, !noalias !285
  %138 = getelementptr inbounds i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !288, !noalias !285
  %140 = or i64 %106, 48
  %141 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %140
  %142 = getelementptr inbounds i16, i16* %104, i64 %140
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !285
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !285
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !288, !noalias !285
  %149 = getelementptr inbounds i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !288, !noalias !285
  %151 = add i64 %106, 64
  %152 = add i64 %107, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %105, !llvm.loop !290

154:                                              ; preds = %105, %89
  %155 = phi i64 [ 0, %89 ], [ %151, %105 ]
  %156 = icmp eq i64 %97, 0
  br i1 %156, label %175, label %157

157:                                              ; preds = %154
  %158 = getelementptr i16, i16* %78, i64 1
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ %155, %157 ], [ %172, %159 ]
  %161 = phi i64 [ %97, %157 ], [ %173, %159 ]
  %162 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), i64 %160
  %163 = getelementptr inbounds i16, i16* %158, i64 %160
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !285
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !285
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !288, !noalias !285
  %170 = getelementptr inbounds i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !288, !noalias !285
  %172 = add i64 %160, 16
  %173 = add i64 %161, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !291

175:                                              ; preds = %159, %154
  %176 = icmp eq i64 %46, %90
  br i1 %176, label %230, label %177

177:                                              ; preds = %175, %82, %80
  %178 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %82 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN3gfx14kEllipsisUTF16E, i64 0, i64 1), %80 ], [ %91, %175 ]
  %179 = phi i64 [ %46, %82 ], [ %46, %80 ], [ %92, %175 ]
  %180 = phi i16* [ %78, %82 ], [ %78, %80 ], [ %93, %175 ]
  %181 = add i64 %179, -1
  %182 = and i64 %179, 7
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %195, label %184

184:                                              ; preds = %177, %184
  %185 = phi i16* [ %192, %184 ], [ %178, %177 ]
  %186 = phi i64 [ %191, %184 ], [ %179, %177 ]
  %187 = phi i16* [ %189, %184 ], [ %180, %177 ]
  %188 = phi i64 [ %193, %184 ], [ %182, %177 ]
  %189 = getelementptr inbounds i16, i16* %187, i64 1
  %190 = load i16, i16* %185, align 2
  store i16 %190, i16* %189, align 2
  %191 = add i64 %186, -1
  %192 = getelementptr inbounds i16, i16* %185, i64 1
  %193 = add i64 %188, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %184, !llvm.loop !292

195:                                              ; preds = %184, %177
  %196 = phi i16* [ %178, %177 ], [ %192, %184 ]
  %197 = phi i64 [ %179, %177 ], [ %191, %184 ]
  %198 = phi i16* [ %180, %177 ], [ %189, %184 ]
  %199 = icmp ult i64 %181, 7
  br i1 %199, label %230, label %200

200:                                              ; preds = %195, %200
  %201 = phi i16* [ %228, %200 ], [ %196, %195 ]
  %202 = phi i64 [ %227, %200 ], [ %197, %195 ]
  %203 = phi i16* [ %225, %200 ], [ %198, %195 ]
  %204 = getelementptr inbounds i16, i16* %203, i64 1
  %205 = load i16, i16* %201, align 2
  store i16 %205, i16* %204, align 2
  %206 = getelementptr inbounds i16, i16* %201, i64 1
  %207 = getelementptr inbounds i16, i16* %203, i64 2
  %208 = load i16, i16* %206, align 2
  store i16 %208, i16* %207, align 2
  %209 = getelementptr inbounds i16, i16* %201, i64 2
  %210 = getelementptr inbounds i16, i16* %203, i64 3
  %211 = load i16, i16* %209, align 2
  store i16 %211, i16* %210, align 2
  %212 = getelementptr inbounds i16, i16* %201, i64 3
  %213 = getelementptr inbounds i16, i16* %203, i64 4
  %214 = load i16, i16* %212, align 2
  store i16 %214, i16* %213, align 2
  %215 = getelementptr inbounds i16, i16* %201, i64 4
  %216 = getelementptr inbounds i16, i16* %203, i64 5
  %217 = load i16, i16* %215, align 2
  store i16 %217, i16* %216, align 2
  %218 = getelementptr inbounds i16, i16* %201, i64 5
  %219 = getelementptr inbounds i16, i16* %203, i64 6
  %220 = load i16, i16* %218, align 2
  store i16 %220, i16* %219, align 2
  %221 = getelementptr inbounds i16, i16* %201, i64 6
  %222 = getelementptr inbounds i16, i16* %203, i64 7
  %223 = load i16, i16* %221, align 2
  store i16 %223, i16* %222, align 2
  %224 = getelementptr inbounds i16, i16* %201, i64 7
  %225 = getelementptr inbounds i16, i16* %203, i64 8
  %226 = load i16, i16* %224, align 2
  store i16 %226, i16* %225, align 2
  %227 = add i64 %202, -8
  %228 = getelementptr inbounds i16, i16* %201, i64 8
  %229 = icmp eq i64 %227, 0
  br i1 %229, label %230, label %200, !llvm.loop !293

230:                                              ; preds = %195, %200, %175, %77
  %231 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %232

232:                                              ; preds = %230, %41, %71
  %233 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %231, %230 ], [ %42, %41 ], [ %73, %71 ]
  %234 = phi i64 [ %48, %230 ], [ 0, %41 ], [ 0, %71 ]
  %235 = phi i16* [ %78, %230 ], [ %44, %41 ], [ %75, %71 ]
  %236 = getelementptr inbounds i16, i16* %235, i64 %234
  store i16 0, i16* %236, align 2
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %233, i64 0, i32 1, i32 1
  %238 = load i8, i8* %237, align 1, !noalias !294
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %232
  %241 = zext i8 %238 to i64
  br label %249

242:                                              ; preds = %232
  %243 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %244 = load i64, i64* %243, align 8, !noalias !294
  %245 = and i64 %244, 9223372036854775807
  %246 = add nsw i64 %245, -1
  %247 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %248 = load i64, i64* %247, align 8, !noalias !294
  br label %249

249:                                              ; preds = %242, %240
  %250 = phi i64 [ 10, %240 ], [ %246, %242 ]
  %251 = phi i64 [ %241, %240 ], [ %248, %242 ]
  %252 = icmp eq i64 %251, %250
  br i1 %252, label %253, label %256

253:                                              ; preds = %249
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.4"* nonnull %9, i64 %250, i64 1, i64 %250, i64 %250, i64 0, i64 0) #12, !noalias !294
  %254 = load i8, i8* %237, align 1, !noalias !294
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %261, label %257

256:                                              ; preds = %249
  br i1 %239, label %261, label %257

257:                                              ; preds = %256, %253
  %258 = bitcast %"class.std::__1::basic_string.4"* %9 to i16*
  %259 = trunc i64 %251 to i8
  %260 = add i8 %259, 1
  store i8 %260, i8* %237, align 1, !noalias !294
  br label %266

261:                                              ; preds = %256, %253
  %262 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load i16*, i16** %262, align 8, !noalias !294
  %264 = add i64 %251, 1
  %265 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %264, i64* %265, align 8, !noalias !294
  br label %266

266:                                              ; preds = %257, %261
  %267 = phi i16* [ %258, %257 ], [ %263, %261 ]
  %268 = getelementptr inbounds i16, i16* %267, i64 %251
  store i16 46, i16* %268, align 2, !noalias !294
  %269 = getelementptr inbounds i16, i16* %268, i64 1
  store i16 0, i16* %269, align 2, !noalias !294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %38, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12, !noalias !294
  %270 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %270, i64 0, i32 1, i32 1
  %272 = load i8, i8* %271, align 1, !noalias !297
  %273 = icmp slt i8 %272, 0
  %274 = load i16*, i16** %12, align 8, !noalias !297
  %275 = load i64, i64* %13, align 8, !noalias !297
  %276 = bitcast %"class.std::__1::basic_string.4"* %6 to i16*
  %277 = zext i8 %272 to i64
  %278 = select i1 %273, i16* %274, i16* %276
  %279 = select i1 %273, i64 %275, i64 %277
  %280 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %281 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %280, i64 0, i32 1, i32 1
  %282 = load i8, i8* %281, align 1, !noalias !297
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %284, label %291

284:                                              ; preds = %266
  %285 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %286 = load i64, i64* %285, align 8, !noalias !297
  %287 = and i64 %286, 9223372036854775807
  %288 = add nsw i64 %287, -1
  %289 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %290 = load i64, i64* %289, align 8, !noalias !297
  br label %293

291:                                              ; preds = %266
  %292 = zext i8 %282 to i64
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i64 [ %288, %284 ], [ 10, %291 ]
  %295 = phi i64 [ %290, %284 ], [ %292, %291 ]
  %296 = sub i64 %294, %295
  %297 = icmp ult i64 %296, %279
  br i1 %297, label %459, label %298

298:                                              ; preds = %293
  %299 = icmp eq i64 %279, 0
  br i1 %299, label %462, label %300

300:                                              ; preds = %298
  %301 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load i16*, i16** %301, align 8, !noalias !297
  %303 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  %304 = select i1 %283, i16* %302, i16* %303
  %305 = getelementptr inbounds i16, i16* %304, i64 %295
  %306 = icmp ult i64 %279, 16
  br i1 %306, label %396, label %307

307:                                              ; preds = %300
  %308 = add i64 %279, %295
  %309 = getelementptr i16, i16* %304, i64 %308
  %310 = getelementptr i16, i16* %278, i64 %279
  %311 = icmp ult i16* %305, %310
  %312 = icmp ult i16* %278, %309
  %313 = and i1 %311, %312
  br i1 %313, label %396, label %314

314:                                              ; preds = %307
  %315 = and i64 %279, -16
  %316 = sub i64 %279, %315
  %317 = getelementptr i16, i16* %278, i64 %315
  %318 = getelementptr i16, i16* %305, i64 %315
  %319 = add i64 %315, -16
  %320 = lshr exact i64 %319, 4
  %321 = add nuw nsw i64 %320, 1
  %322 = and i64 %321, 3
  %323 = icmp ult i64 %319, 48
  br i1 %323, label %375, label %324

324:                                              ; preds = %314
  %325 = sub nsw i64 %321, %322
  br label %326

326:                                              ; preds = %326, %324
  %327 = phi i64 [ 0, %324 ], [ %372, %326 ]
  %328 = phi i64 [ %325, %324 ], [ %373, %326 ]
  %329 = getelementptr i16, i16* %278, i64 %327
  %330 = getelementptr i16, i16* %305, i64 %327
  %331 = bitcast i16* %329 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !300, !noalias !297
  %333 = getelementptr i16, i16* %329, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  %335 = load <8 x i16>, <8 x i16>* %334, align 2, !alias.scope !300, !noalias !297
  %336 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %336, align 2, !alias.scope !303, !noalias !305
  %337 = getelementptr i16, i16* %330, i64 8
  %338 = bitcast i16* %337 to <8 x i16>*
  store <8 x i16> %335, <8 x i16>* %338, align 2, !alias.scope !303, !noalias !305
  %339 = or i64 %327, 16
  %340 = getelementptr i16, i16* %278, i64 %339
  %341 = getelementptr i16, i16* %305, i64 %339
  %342 = bitcast i16* %340 to <8 x i16>*
  %343 = load <8 x i16>, <8 x i16>* %342, align 2, !alias.scope !300, !noalias !297
  %344 = getelementptr i16, i16* %340, i64 8
  %345 = bitcast i16* %344 to <8 x i16>*
  %346 = load <8 x i16>, <8 x i16>* %345, align 2, !alias.scope !300, !noalias !297
  %347 = bitcast i16* %341 to <8 x i16>*
  store <8 x i16> %343, <8 x i16>* %347, align 2, !alias.scope !303, !noalias !305
  %348 = getelementptr i16, i16* %341, i64 8
  %349 = bitcast i16* %348 to <8 x i16>*
  store <8 x i16> %346, <8 x i16>* %349, align 2, !alias.scope !303, !noalias !305
  %350 = or i64 %327, 32
  %351 = getelementptr i16, i16* %278, i64 %350
  %352 = getelementptr i16, i16* %305, i64 %350
  %353 = bitcast i16* %351 to <8 x i16>*
  %354 = load <8 x i16>, <8 x i16>* %353, align 2, !alias.scope !300, !noalias !297
  %355 = getelementptr i16, i16* %351, i64 8
  %356 = bitcast i16* %355 to <8 x i16>*
  %357 = load <8 x i16>, <8 x i16>* %356, align 2, !alias.scope !300, !noalias !297
  %358 = bitcast i16* %352 to <8 x i16>*
  store <8 x i16> %354, <8 x i16>* %358, align 2, !alias.scope !303, !noalias !305
  %359 = getelementptr i16, i16* %352, i64 8
  %360 = bitcast i16* %359 to <8 x i16>*
  store <8 x i16> %357, <8 x i16>* %360, align 2, !alias.scope !303, !noalias !305
  %361 = or i64 %327, 48
  %362 = getelementptr i16, i16* %278, i64 %361
  %363 = getelementptr i16, i16* %305, i64 %361
  %364 = bitcast i16* %362 to <8 x i16>*
  %365 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !300, !noalias !297
  %366 = getelementptr i16, i16* %362, i64 8
  %367 = bitcast i16* %366 to <8 x i16>*
  %368 = load <8 x i16>, <8 x i16>* %367, align 2, !alias.scope !300, !noalias !297
  %369 = bitcast i16* %363 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %369, align 2, !alias.scope !303, !noalias !305
  %370 = getelementptr i16, i16* %363, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  store <8 x i16> %368, <8 x i16>* %371, align 2, !alias.scope !303, !noalias !305
  %372 = add i64 %327, 64
  %373 = add i64 %328, -4
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %375, label %326, !llvm.loop !306

375:                                              ; preds = %326, %314
  %376 = phi i64 [ 0, %314 ], [ %372, %326 ]
  %377 = icmp eq i64 %322, 0
  br i1 %377, label %394, label %378

378:                                              ; preds = %375, %378
  %379 = phi i64 [ %391, %378 ], [ %376, %375 ]
  %380 = phi i64 [ %392, %378 ], [ %322, %375 ]
  %381 = getelementptr i16, i16* %278, i64 %379
  %382 = getelementptr i16, i16* %305, i64 %379
  %383 = bitcast i16* %381 to <8 x i16>*
  %384 = load <8 x i16>, <8 x i16>* %383, align 2, !alias.scope !300, !noalias !297
  %385 = getelementptr i16, i16* %381, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !300, !noalias !297
  %388 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %384, <8 x i16>* %388, align 2, !alias.scope !303, !noalias !305
  %389 = getelementptr i16, i16* %382, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %387, <8 x i16>* %390, align 2, !alias.scope !303, !noalias !305
  %391 = add i64 %379, 16
  %392 = add i64 %380, -1
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %378, !llvm.loop !307

394:                                              ; preds = %378, %375
  %395 = icmp eq i64 %279, %315
  br i1 %395, label %449, label %396

396:                                              ; preds = %394, %307, %300
  %397 = phi i64 [ %279, %307 ], [ %279, %300 ], [ %316, %394 ]
  %398 = phi i16* [ %278, %307 ], [ %278, %300 ], [ %317, %394 ]
  %399 = phi i16* [ %305, %307 ], [ %305, %300 ], [ %318, %394 ]
  %400 = add i64 %397, -1
  %401 = and i64 %397, 7
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %414, label %403

403:                                              ; preds = %396, %403
  %404 = phi i64 [ %409, %403 ], [ %397, %396 ]
  %405 = phi i16* [ %411, %403 ], [ %398, %396 ]
  %406 = phi i16* [ %410, %403 ], [ %399, %396 ]
  %407 = phi i64 [ %412, %403 ], [ %401, %396 ]
  %408 = load i16, i16* %405, align 2, !noalias !297
  store i16 %408, i16* %406, align 2, !noalias !297
  %409 = add i64 %404, -1
  %410 = getelementptr inbounds i16, i16* %406, i64 1
  %411 = getelementptr inbounds i16, i16* %405, i64 1
  %412 = add i64 %407, -1
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %414, label %403, !llvm.loop !308

414:                                              ; preds = %403, %396
  %415 = phi i64 [ %397, %396 ], [ %409, %403 ]
  %416 = phi i16* [ %398, %396 ], [ %411, %403 ]
  %417 = phi i16* [ %399, %396 ], [ %410, %403 ]
  %418 = icmp ult i64 %400, 7
  br i1 %418, label %449, label %419

419:                                              ; preds = %414, %419
  %420 = phi i64 [ %445, %419 ], [ %415, %414 ]
  %421 = phi i16* [ %447, %419 ], [ %416, %414 ]
  %422 = phi i16* [ %446, %419 ], [ %417, %414 ]
  %423 = load i16, i16* %421, align 2, !noalias !297
  store i16 %423, i16* %422, align 2, !noalias !297
  %424 = getelementptr inbounds i16, i16* %422, i64 1
  %425 = getelementptr inbounds i16, i16* %421, i64 1
  %426 = load i16, i16* %425, align 2, !noalias !297
  store i16 %426, i16* %424, align 2, !noalias !297
  %427 = getelementptr inbounds i16, i16* %422, i64 2
  %428 = getelementptr inbounds i16, i16* %421, i64 2
  %429 = load i16, i16* %428, align 2, !noalias !297
  store i16 %429, i16* %427, align 2, !noalias !297
  %430 = getelementptr inbounds i16, i16* %422, i64 3
  %431 = getelementptr inbounds i16, i16* %421, i64 3
  %432 = load i16, i16* %431, align 2, !noalias !297
  store i16 %432, i16* %430, align 2, !noalias !297
  %433 = getelementptr inbounds i16, i16* %422, i64 4
  %434 = getelementptr inbounds i16, i16* %421, i64 4
  %435 = load i16, i16* %434, align 2, !noalias !297
  store i16 %435, i16* %433, align 2, !noalias !297
  %436 = getelementptr inbounds i16, i16* %422, i64 5
  %437 = getelementptr inbounds i16, i16* %421, i64 5
  %438 = load i16, i16* %437, align 2, !noalias !297
  store i16 %438, i16* %436, align 2, !noalias !297
  %439 = getelementptr inbounds i16, i16* %422, i64 6
  %440 = getelementptr inbounds i16, i16* %421, i64 6
  %441 = load i16, i16* %440, align 2, !noalias !297
  store i16 %441, i16* %439, align 2, !noalias !297
  %442 = getelementptr inbounds i16, i16* %422, i64 7
  %443 = getelementptr inbounds i16, i16* %421, i64 7
  %444 = load i16, i16* %443, align 2, !noalias !297
  store i16 %444, i16* %442, align 2, !noalias !297
  %445 = add i64 %420, -8
  %446 = getelementptr inbounds i16, i16* %422, i64 8
  %447 = getelementptr inbounds i16, i16* %421, i64 8
  %448 = icmp eq i64 %445, 0
  br i1 %448, label %449, label %419, !llvm.loop !309

449:                                              ; preds = %414, %419, %394
  %450 = add i64 %295, %279
  %451 = load i8, i8* %281, align 1, !noalias !297
  %452 = icmp slt i8 %451, 0
  br i1 %452, label %453, label %455

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %450, i64* %454, align 8, !noalias !297
  br label %457

455:                                              ; preds = %449
  %456 = trunc i64 %450 to i8
  store i8 %456, i8* %281, align 1, !noalias !297
  br label %457

457:                                              ; preds = %455, %453
  %458 = getelementptr inbounds i16, i16* %304, i64 %450
  store i16 0, i16* %458, align 2, !noalias !297
  br label %462

459:                                              ; preds = %293
  %460 = add i64 %295, %279
  %461 = sub i64 %460, %294
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %8, i64 %294, i64 %461, i64 %295, i64 %295, i64 0, i64 %279, i16* %278) #12, !noalias !297
  br label %462

462:                                              ; preds = %298, %457, %459
  %463 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %463, i8* nonnull align 8 %37, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #12, !noalias !297
  %464 = load i8, i8* %237, align 1
  %465 = icmp slt i8 %464, 0
  br i1 %465, label %466, label %469

466:                                              ; preds = %462
  %467 = bitcast %"class.std::__1::basic_string.4"* %9 to i8**
  %468 = load i8*, i8** %467, align 8
  call void @_ZdlPv(i8* %468) #14
  br label %469

469:                                              ; preds = %462, %466
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  br label %471

470:                                              ; preds = %32
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string.4"* sret %0, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %5, %"class.gfx::FontList"* %2, float %3, i32 2) #12
  br label %471

471:                                              ; preds = %469, %470, %30, %17
  %472 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %22, %469 ], [ %22, %470 ], [ %22, %30 ], [ %19, %17 ]
  %473 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %472, i64 0, i32 1, i32 1
  %474 = load i8, i8* %473, align 1
  %475 = icmp slt i8 %474, 0
  br i1 %475, label %476, label %479

476:                                              ; preds = %471
  %477 = bitcast %"class.std::__1::basic_string.4"* %7 to i8**
  %478 = load i8*, i8** %477, align 8
  call void @_ZdlPv(i8* %478) #14
  br label %479

479:                                              ; preds = %471, %476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %480 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %481 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %480, i64 0, i32 1, i32 1
  %482 = load i8, i8* %481, align 1
  %483 = icmp slt i8 %482, 0
  br i1 %483, label %484, label %487

484:                                              ; preds = %479
  %485 = bitcast %"class.std::__1::basic_string.4"* %6 to i8**
  %486 = load i8*, i8** %485, align 8
  call void @_ZdlPv(i8* %486) #14
  br label %487

487:                                              ; preds = %479, %484
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %488 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %489 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %488, i64 0, i32 1, i32 1
  %490 = load i8, i8* %489, align 1
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %487
  %493 = bitcast %"class.std::__1::basic_string.4"* %5 to i8**
  %494 = load i8*, i8** %493, align 8
  call void @_ZdlPv(i8* %494) #14
  br label %495

495:                                              ; preds = %487, %492
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13url_formatter27FormatUrlForSecurityDisplayERK4GURLNS_13SchemeDisplayE(%"class.std::__1::basic_string.4"* noalias sret, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.4", align 8
  %5 = alloca %"class.std::__1::allocator", align 1
  %6 = alloca %"class.std::__1::allocator", align 1
  %7 = alloca %"class.std::__1::basic_string.4", align 8
  %8 = alloca %"class.std::__1::basic_string.4", align 8
  %9 = alloca %"class.std::__1::basic_string.4", align 8
  %10 = alloca %"class.std::__1::basic_string.4", align 8
  %11 = alloca %"class.std::__1::basic_string.4", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string.4", align 8
  %14 = alloca %"class.std::__1::basic_string.4", align 8
  %15 = alloca %"class.std::__1::basic_string.4", align 8
  %16 = alloca %"class.std::__1::basic_string.4", align 8
  %17 = alloca %"class.std::__1::basic_string.4", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string.4", align 8
  %20 = alloca %"class.std::__1::basic_string.4", align 8
  %21 = alloca %"class.std::__1::basic_string.4", align 8
  %22 = alloca %class.GURL, align 8
  %23 = alloca %"class.std::__1::basic_string.4", align 8
  %24 = alloca [15 x i8], align 8
  %25 = alloca %"class.std::__1::basic_string.4", align 8
  %26 = alloca %"class.std::__1::basic_string.4", align 8
  %27 = alloca %"class.std::__1::basic_string.4", align 8
  %28 = alloca %"class.std::__1::basic_string.4", align 8
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %30 = load i8, i8* %29, align 8, !range !310
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %3
  %33 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %32
  %43 = tail call zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL* %1) #12
  br i1 %43, label %46, label %44

44:                                               ; preds = %3, %42, %32
  %45 = load i32, i32* @_ZN13url_formatter22kFormatUrlOmitDefaultsE, align 4, !noalias !311
  tail call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string.4"* sret %0, %class.GURL* dereferenceable(120) %1, i32 %45, i32 2, %"struct.url::Parsed"* null, i64* null, i64* null) #12
  br label %2509

46:                                               ; preds = %42
  %47 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  %51 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  store i8 1, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  store i16 58, i16* %53, align 8
  %54 = getelementptr inbounds i16, i16* %53, i64 1
  store i16 0, i16* %54, align 2
  %55 = bitcast %"class.std::__1::basic_string.4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  %56 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string.4"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 24, i1 false)
  %59 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #12
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0), i64 %59) #12
  %60 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  %61 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %60) #12
  br i1 %61, label %62, label %510

62:                                               ; preds = %46
  %63 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #12
  %64 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %65) #12
  %66 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1, !noalias !314
  %69 = icmp slt i8 %68, 0
  %70 = load i16*, i16** %56, align 8, !noalias !314
  %71 = load i64, i64* %57, align 8, !noalias !314
  %72 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  %73 = zext i8 %68 to i64
  %74 = select i1 %69, i16* %70, i16* %72
  %75 = select i1 %69, i64 %71, i64 %73
  %76 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1, !noalias !314
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %62
  %81 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i64, i64* %81, align 8, !noalias !314
  %83 = and i64 %82, 9223372036854775807
  %84 = add nsw i64 %83, -1
  %85 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8, !noalias !314
  br label %89

87:                                               ; preds = %62
  %88 = zext i8 %78 to i64
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i64 [ %84, %80 ], [ 10, %87 ]
  %91 = phi i64 [ %86, %80 ], [ %88, %87 ]
  %92 = sub i64 %90, %91
  %93 = icmp ult i64 %92, %75
  br i1 %93, label %255, label %94

94:                                               ; preds = %89
  %95 = icmp eq i64 %75, 0
  br i1 %95, label %258, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i16*, i16** %97, align 8, !noalias !314
  %99 = bitcast %"class.std::__1::basic_string.4"* %10 to i16*
  %100 = select i1 %79, i16* %98, i16* %99
  %101 = getelementptr inbounds i16, i16* %100, i64 %91
  %102 = icmp ult i64 %75, 16
  br i1 %102, label %192, label %103

103:                                              ; preds = %96
  %104 = add i64 %75, %91
  %105 = getelementptr i16, i16* %100, i64 %104
  %106 = getelementptr i16, i16* %74, i64 %75
  %107 = icmp ult i16* %101, %106
  %108 = icmp ult i16* %74, %105
  %109 = and i1 %107, %108
  br i1 %109, label %192, label %110

110:                                              ; preds = %103
  %111 = and i64 %75, -16
  %112 = sub i64 %75, %111
  %113 = getelementptr i16, i16* %74, i64 %111
  %114 = getelementptr i16, i16* %101, i64 %111
  %115 = add i64 %111, -16
  %116 = lshr exact i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp ult i64 %115, 48
  br i1 %119, label %171, label %120

120:                                              ; preds = %110
  %121 = sub nsw i64 %117, %118
  br label %122

122:                                              ; preds = %122, %120
  %123 = phi i64 [ 0, %120 ], [ %168, %122 ]
  %124 = phi i64 [ %121, %120 ], [ %169, %122 ]
  %125 = getelementptr i16, i16* %74, i64 %123
  %126 = getelementptr i16, i16* %101, i64 %123
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !317, !noalias !314
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !317, !noalias !314
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !320, !noalias !322
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !320, !noalias !322
  %135 = or i64 %123, 16
  %136 = getelementptr i16, i16* %74, i64 %135
  %137 = getelementptr i16, i16* %101, i64 %135
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !317, !noalias !314
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !317, !noalias !314
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !320, !noalias !322
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !320, !noalias !322
  %146 = or i64 %123, 32
  %147 = getelementptr i16, i16* %74, i64 %146
  %148 = getelementptr i16, i16* %101, i64 %146
  %149 = bitcast i16* %147 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !317, !noalias !314
  %151 = getelementptr i16, i16* %147, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !317, !noalias !314
  %154 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !320, !noalias !322
  %155 = getelementptr i16, i16* %148, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !320, !noalias !322
  %157 = or i64 %123, 48
  %158 = getelementptr i16, i16* %74, i64 %157
  %159 = getelementptr i16, i16* %101, i64 %157
  %160 = bitcast i16* %158 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !317, !noalias !314
  %162 = getelementptr i16, i16* %158, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !317, !noalias !314
  %165 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %165, align 2, !alias.scope !320, !noalias !322
  %166 = getelementptr i16, i16* %159, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %167, align 2, !alias.scope !320, !noalias !322
  %168 = add i64 %123, 64
  %169 = add i64 %124, -4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %122, !llvm.loop !323

171:                                              ; preds = %122, %110
  %172 = phi i64 [ 0, %110 ], [ %168, %122 ]
  %173 = icmp eq i64 %118, 0
  br i1 %173, label %190, label %174

174:                                              ; preds = %171, %174
  %175 = phi i64 [ %187, %174 ], [ %172, %171 ]
  %176 = phi i64 [ %188, %174 ], [ %118, %171 ]
  %177 = getelementptr i16, i16* %74, i64 %175
  %178 = getelementptr i16, i16* %101, i64 %175
  %179 = bitcast i16* %177 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !317, !noalias !314
  %181 = getelementptr i16, i16* %177, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !317, !noalias !314
  %184 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %184, align 2, !alias.scope !320, !noalias !322
  %185 = getelementptr i16, i16* %178, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %186, align 2, !alias.scope !320, !noalias !322
  %187 = add i64 %175, 16
  %188 = add i64 %176, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %174, !llvm.loop !324

190:                                              ; preds = %174, %171
  %191 = icmp eq i64 %75, %111
  br i1 %191, label %245, label %192

192:                                              ; preds = %190, %103, %96
  %193 = phi i64 [ %75, %103 ], [ %75, %96 ], [ %112, %190 ]
  %194 = phi i16* [ %74, %103 ], [ %74, %96 ], [ %113, %190 ]
  %195 = phi i16* [ %101, %103 ], [ %101, %96 ], [ %114, %190 ]
  %196 = add i64 %193, -1
  %197 = and i64 %193, 7
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %210, label %199

199:                                              ; preds = %192, %199
  %200 = phi i64 [ %205, %199 ], [ %193, %192 ]
  %201 = phi i16* [ %207, %199 ], [ %194, %192 ]
  %202 = phi i16* [ %206, %199 ], [ %195, %192 ]
  %203 = phi i64 [ %208, %199 ], [ %197, %192 ]
  %204 = load i16, i16* %201, align 2, !noalias !314
  store i16 %204, i16* %202, align 2, !noalias !314
  %205 = add i64 %200, -1
  %206 = getelementptr inbounds i16, i16* %202, i64 1
  %207 = getelementptr inbounds i16, i16* %201, i64 1
  %208 = add i64 %203, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %199, !llvm.loop !325

210:                                              ; preds = %199, %192
  %211 = phi i64 [ %193, %192 ], [ %205, %199 ]
  %212 = phi i16* [ %194, %192 ], [ %207, %199 ]
  %213 = phi i16* [ %195, %192 ], [ %206, %199 ]
  %214 = icmp ult i64 %196, 7
  br i1 %214, label %245, label %215

215:                                              ; preds = %210, %215
  %216 = phi i64 [ %241, %215 ], [ %211, %210 ]
  %217 = phi i16* [ %243, %215 ], [ %212, %210 ]
  %218 = phi i16* [ %242, %215 ], [ %213, %210 ]
  %219 = load i16, i16* %217, align 2, !noalias !314
  store i16 %219, i16* %218, align 2, !noalias !314
  %220 = getelementptr inbounds i16, i16* %218, i64 1
  %221 = getelementptr inbounds i16, i16* %217, i64 1
  %222 = load i16, i16* %221, align 2, !noalias !314
  store i16 %222, i16* %220, align 2, !noalias !314
  %223 = getelementptr inbounds i16, i16* %218, i64 2
  %224 = getelementptr inbounds i16, i16* %217, i64 2
  %225 = load i16, i16* %224, align 2, !noalias !314
  store i16 %225, i16* %223, align 2, !noalias !314
  %226 = getelementptr inbounds i16, i16* %218, i64 3
  %227 = getelementptr inbounds i16, i16* %217, i64 3
  %228 = load i16, i16* %227, align 2, !noalias !314
  store i16 %228, i16* %226, align 2, !noalias !314
  %229 = getelementptr inbounds i16, i16* %218, i64 4
  %230 = getelementptr inbounds i16, i16* %217, i64 4
  %231 = load i16, i16* %230, align 2, !noalias !314
  store i16 %231, i16* %229, align 2, !noalias !314
  %232 = getelementptr inbounds i16, i16* %218, i64 5
  %233 = getelementptr inbounds i16, i16* %217, i64 5
  %234 = load i16, i16* %233, align 2, !noalias !314
  store i16 %234, i16* %232, align 2, !noalias !314
  %235 = getelementptr inbounds i16, i16* %218, i64 6
  %236 = getelementptr inbounds i16, i16* %217, i64 6
  %237 = load i16, i16* %236, align 2, !noalias !314
  store i16 %237, i16* %235, align 2, !noalias !314
  %238 = getelementptr inbounds i16, i16* %218, i64 7
  %239 = getelementptr inbounds i16, i16* %217, i64 7
  %240 = load i16, i16* %239, align 2, !noalias !314
  store i16 %240, i16* %238, align 2, !noalias !314
  %241 = add i64 %216, -8
  %242 = getelementptr inbounds i16, i16* %218, i64 8
  %243 = getelementptr inbounds i16, i16* %217, i64 8
  %244 = icmp eq i64 %241, 0
  br i1 %244, label %245, label %215, !llvm.loop !326

245:                                              ; preds = %210, %215, %190
  %246 = add i64 %91, %75
  %247 = load i8, i8* %77, align 1, !noalias !314
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %246, i64* %250, align 8, !noalias !314
  br label %253

251:                                              ; preds = %245
  %252 = trunc i64 %246 to i8
  store i8 %252, i8* %77, align 1, !noalias !314
  br label %253

253:                                              ; preds = %251, %249
  %254 = getelementptr inbounds i16, i16* %100, i64 %246
  store i16 0, i16* %254, align 2, !noalias !314
  br label %258

255:                                              ; preds = %89
  %256 = add i64 %91, %75
  %257 = sub i64 %256, %90
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %10, i64 %90, i64 %257, i64 %91, i64 %91, i64 0, i64 %75, i16* %74) #12, !noalias !314
  br label %258

258:                                              ; preds = %94, %253, %255
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 8 %64, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #12, !noalias !314
  %259 = bitcast %"class.std::__1::basic_string.4"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #12
  %260 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260) #12
  %261 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 1
  %262 = load i32, i32* %261, align 4, !noalias !327
  %263 = icmp slt i32 %262, 1
  br i1 %263, label %264, label %266

264:                                              ; preds = %258
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %260, i8 0, i64 24, i1 false) #12, !alias.scope !327
  %265 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %280

266:                                              ; preds = %258
  %267 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %268 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 0
  %269 = load i32, i32* %268, align 4, !noalias !327
  %270 = sext i32 %269 to i64
  %271 = sext i32 %262 to i64
  %272 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %272) #12, !noalias !327
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %267, i64 %270, i64 %271, %"class.std::__1::allocator"* nonnull dereferenceable(1) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %272) #12, !noalias !327
  %273 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  %275 = load i8, i8* %274, align 1
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  br label %280

280:                                              ; preds = %264, %266
  %281 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %265, %264 ], [ %273, %266 ]
  %282 = phi i64 [ 0, %264 ], [ %279, %266 ]
  %283 = phi i8* [ null, %264 ], [ %277, %266 ]
  %284 = phi i8 [ 0, %264 ], [ %275, %266 ]
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %286 = icmp slt i8 %284, 0
  %287 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = select i1 %286, i8* %283, i8* %260
  %289 = zext i8 %284 to i64
  %290 = select i1 %286, i64 %282, i64 %289
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %11, i8* %288, i64 %290) #12
  %291 = bitcast %"class.std::__1::basic_string.4"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %291, i64 0, i32 1, i32 1
  %293 = load i8, i8* %292, align 1, !noalias !332
  %294 = icmp slt i8 %293, 0
  %295 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load i16*, i16** %295, align 8, !noalias !332
  %297 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %298 = load i64, i64* %297, align 8, !noalias !332
  %299 = bitcast %"class.std::__1::basic_string.4"* %11 to i16*
  %300 = zext i8 %293 to i64
  %301 = select i1 %294, i16* %296, i16* %299
  %302 = select i1 %294, i64 %298, i64 %300
  %303 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1, !noalias !332
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %314

307:                                              ; preds = %280
  %308 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %309 = load i64, i64* %308, align 8, !noalias !332
  %310 = and i64 %309, 9223372036854775807
  %311 = add nsw i64 %310, -1
  %312 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %313 = load i64, i64* %312, align 8, !noalias !332
  br label %316

314:                                              ; preds = %280
  %315 = zext i8 %305 to i64
  br label %316

316:                                              ; preds = %314, %307
  %317 = phi i64 [ %311, %307 ], [ 10, %314 ]
  %318 = phi i64 [ %313, %307 ], [ %315, %314 ]
  %319 = sub i64 %317, %318
  %320 = icmp ult i64 %319, %302
  br i1 %320, label %482, label %321

321:                                              ; preds = %316
  %322 = icmp eq i64 %302, 0
  br i1 %322, label %485, label %323

323:                                              ; preds = %321
  %324 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i16*, i16** %324, align 8, !noalias !332
  %326 = bitcast %"class.std::__1::basic_string.4"* %9 to i16*
  %327 = select i1 %306, i16* %325, i16* %326
  %328 = getelementptr inbounds i16, i16* %327, i64 %318
  %329 = icmp ult i64 %302, 16
  br i1 %329, label %419, label %330

330:                                              ; preds = %323
  %331 = add i64 %302, %318
  %332 = getelementptr i16, i16* %327, i64 %331
  %333 = getelementptr i16, i16* %301, i64 %302
  %334 = icmp ult i16* %328, %333
  %335 = icmp ult i16* %301, %332
  %336 = and i1 %334, %335
  br i1 %336, label %419, label %337

337:                                              ; preds = %330
  %338 = and i64 %302, -16
  %339 = sub i64 %302, %338
  %340 = getelementptr i16, i16* %301, i64 %338
  %341 = getelementptr i16, i16* %328, i64 %338
  %342 = add i64 %338, -16
  %343 = lshr exact i64 %342, 4
  %344 = add nuw nsw i64 %343, 1
  %345 = and i64 %344, 3
  %346 = icmp ult i64 %342, 48
  br i1 %346, label %398, label %347

347:                                              ; preds = %337
  %348 = sub nsw i64 %344, %345
  br label %349

349:                                              ; preds = %349, %347
  %350 = phi i64 [ 0, %347 ], [ %395, %349 ]
  %351 = phi i64 [ %348, %347 ], [ %396, %349 ]
  %352 = getelementptr i16, i16* %301, i64 %350
  %353 = getelementptr i16, i16* %328, i64 %350
  %354 = bitcast i16* %352 to <8 x i16>*
  %355 = load <8 x i16>, <8 x i16>* %354, align 2, !alias.scope !335, !noalias !332
  %356 = getelementptr i16, i16* %352, i64 8
  %357 = bitcast i16* %356 to <8 x i16>*
  %358 = load <8 x i16>, <8 x i16>* %357, align 2, !alias.scope !335, !noalias !332
  %359 = bitcast i16* %353 to <8 x i16>*
  store <8 x i16> %355, <8 x i16>* %359, align 2, !alias.scope !338, !noalias !340
  %360 = getelementptr i16, i16* %353, i64 8
  %361 = bitcast i16* %360 to <8 x i16>*
  store <8 x i16> %358, <8 x i16>* %361, align 2, !alias.scope !338, !noalias !340
  %362 = or i64 %350, 16
  %363 = getelementptr i16, i16* %301, i64 %362
  %364 = getelementptr i16, i16* %328, i64 %362
  %365 = bitcast i16* %363 to <8 x i16>*
  %366 = load <8 x i16>, <8 x i16>* %365, align 2, !alias.scope !335, !noalias !332
  %367 = getelementptr i16, i16* %363, i64 8
  %368 = bitcast i16* %367 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !335, !noalias !332
  %370 = bitcast i16* %364 to <8 x i16>*
  store <8 x i16> %366, <8 x i16>* %370, align 2, !alias.scope !338, !noalias !340
  %371 = getelementptr i16, i16* %364, i64 8
  %372 = bitcast i16* %371 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %372, align 2, !alias.scope !338, !noalias !340
  %373 = or i64 %350, 32
  %374 = getelementptr i16, i16* %301, i64 %373
  %375 = getelementptr i16, i16* %328, i64 %373
  %376 = bitcast i16* %374 to <8 x i16>*
  %377 = load <8 x i16>, <8 x i16>* %376, align 2, !alias.scope !335, !noalias !332
  %378 = getelementptr i16, i16* %374, i64 8
  %379 = bitcast i16* %378 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !335, !noalias !332
  %381 = bitcast i16* %375 to <8 x i16>*
  store <8 x i16> %377, <8 x i16>* %381, align 2, !alias.scope !338, !noalias !340
  %382 = getelementptr i16, i16* %375, i64 8
  %383 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %383, align 2, !alias.scope !338, !noalias !340
  %384 = or i64 %350, 48
  %385 = getelementptr i16, i16* %301, i64 %384
  %386 = getelementptr i16, i16* %328, i64 %384
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !335, !noalias !332
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !335, !noalias !332
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !338, !noalias !340
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !338, !noalias !340
  %395 = add i64 %350, 64
  %396 = add i64 %351, -4
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %349, !llvm.loop !341

398:                                              ; preds = %349, %337
  %399 = phi i64 [ 0, %337 ], [ %395, %349 ]
  %400 = icmp eq i64 %345, 0
  br i1 %400, label %417, label %401

401:                                              ; preds = %398, %401
  %402 = phi i64 [ %414, %401 ], [ %399, %398 ]
  %403 = phi i64 [ %415, %401 ], [ %345, %398 ]
  %404 = getelementptr i16, i16* %301, i64 %402
  %405 = getelementptr i16, i16* %328, i64 %402
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !335, !noalias !332
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !335, !noalias !332
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !338, !noalias !340
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !338, !noalias !340
  %414 = add i64 %402, 16
  %415 = add i64 %403, -1
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %417, label %401, !llvm.loop !342

417:                                              ; preds = %401, %398
  %418 = icmp eq i64 %302, %338
  br i1 %418, label %472, label %419

419:                                              ; preds = %417, %330, %323
  %420 = phi i64 [ %302, %330 ], [ %302, %323 ], [ %339, %417 ]
  %421 = phi i16* [ %301, %330 ], [ %301, %323 ], [ %340, %417 ]
  %422 = phi i16* [ %328, %330 ], [ %328, %323 ], [ %341, %417 ]
  %423 = add i64 %420, -1
  %424 = and i64 %420, 7
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %437, label %426

426:                                              ; preds = %419, %426
  %427 = phi i64 [ %432, %426 ], [ %420, %419 ]
  %428 = phi i16* [ %434, %426 ], [ %421, %419 ]
  %429 = phi i16* [ %433, %426 ], [ %422, %419 ]
  %430 = phi i64 [ %435, %426 ], [ %424, %419 ]
  %431 = load i16, i16* %428, align 2, !noalias !332
  store i16 %431, i16* %429, align 2, !noalias !332
  %432 = add i64 %427, -1
  %433 = getelementptr inbounds i16, i16* %429, i64 1
  %434 = getelementptr inbounds i16, i16* %428, i64 1
  %435 = add i64 %430, -1
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %437, label %426, !llvm.loop !343

437:                                              ; preds = %426, %419
  %438 = phi i64 [ %420, %419 ], [ %432, %426 ]
  %439 = phi i16* [ %421, %419 ], [ %434, %426 ]
  %440 = phi i16* [ %422, %419 ], [ %433, %426 ]
  %441 = icmp ult i64 %423, 7
  br i1 %441, label %472, label %442

442:                                              ; preds = %437, %442
  %443 = phi i64 [ %468, %442 ], [ %438, %437 ]
  %444 = phi i16* [ %470, %442 ], [ %439, %437 ]
  %445 = phi i16* [ %469, %442 ], [ %440, %437 ]
  %446 = load i16, i16* %444, align 2, !noalias !332
  store i16 %446, i16* %445, align 2, !noalias !332
  %447 = getelementptr inbounds i16, i16* %445, i64 1
  %448 = getelementptr inbounds i16, i16* %444, i64 1
  %449 = load i16, i16* %448, align 2, !noalias !332
  store i16 %449, i16* %447, align 2, !noalias !332
  %450 = getelementptr inbounds i16, i16* %445, i64 2
  %451 = getelementptr inbounds i16, i16* %444, i64 2
  %452 = load i16, i16* %451, align 2, !noalias !332
  store i16 %452, i16* %450, align 2, !noalias !332
  %453 = getelementptr inbounds i16, i16* %445, i64 3
  %454 = getelementptr inbounds i16, i16* %444, i64 3
  %455 = load i16, i16* %454, align 2, !noalias !332
  store i16 %455, i16* %453, align 2, !noalias !332
  %456 = getelementptr inbounds i16, i16* %445, i64 4
  %457 = getelementptr inbounds i16, i16* %444, i64 4
  %458 = load i16, i16* %457, align 2, !noalias !332
  store i16 %458, i16* %456, align 2, !noalias !332
  %459 = getelementptr inbounds i16, i16* %445, i64 5
  %460 = getelementptr inbounds i16, i16* %444, i64 5
  %461 = load i16, i16* %460, align 2, !noalias !332
  store i16 %461, i16* %459, align 2, !noalias !332
  %462 = getelementptr inbounds i16, i16* %445, i64 6
  %463 = getelementptr inbounds i16, i16* %444, i64 6
  %464 = load i16, i16* %463, align 2, !noalias !332
  store i16 %464, i16* %462, align 2, !noalias !332
  %465 = getelementptr inbounds i16, i16* %445, i64 7
  %466 = getelementptr inbounds i16, i16* %444, i64 7
  %467 = load i16, i16* %466, align 2, !noalias !332
  store i16 %467, i16* %465, align 2, !noalias !332
  %468 = add i64 %443, -8
  %469 = getelementptr inbounds i16, i16* %445, i64 8
  %470 = getelementptr inbounds i16, i16* %444, i64 8
  %471 = icmp eq i64 %468, 0
  br i1 %471, label %472, label %442, !llvm.loop !344

472:                                              ; preds = %437, %442, %417
  %473 = add i64 %318, %302
  %474 = load i8, i8* %304, align 1, !noalias !332
  %475 = icmp slt i8 %474, 0
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %473, i64* %477, align 8, !noalias !332
  br label %480

478:                                              ; preds = %472
  %479 = trunc i64 %473 to i8
  store i8 %479, i8* %304, align 1, !noalias !332
  br label %480

480:                                              ; preds = %478, %476
  %481 = getelementptr inbounds i16, i16* %327, i64 %473
  store i16 0, i16* %481, align 2, !noalias !332
  br label %485

482:                                              ; preds = %316
  %483 = add i64 %318, %302
  %484 = sub i64 %483, %317
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %9, i64 %317, i64 %484, i64 %318, i64 %318, i64 0, i64 %302, i16* %301) #12, !noalias !332
  br label %485

485:                                              ; preds = %321, %480, %482
  %486 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %486, i8* nonnull align 8 %63, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #12, !noalias !332
  %487 = load i8, i8* %292, align 1
  %488 = icmp slt i8 %487, 0
  br i1 %488, label %489, label %492

489:                                              ; preds = %485
  %490 = bitcast %"class.std::__1::basic_string.4"* %11 to i8**
  %491 = load i8*, i8** %490, align 8
  call void @_ZdlPv(i8* %491) #14
  br label %492

492:                                              ; preds = %485, %489
  %493 = load i8, i8* %285, align 1
  %494 = icmp slt i8 %493, 0
  br i1 %494, label %495, label %497

495:                                              ; preds = %492
  %496 = load i8*, i8** %287, align 8
  call void @_ZdlPv(i8* %496) #14
  br label %497

497:                                              ; preds = %492, %495
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #12
  %498 = load i8, i8* %304, align 1
  %499 = icmp slt i8 %498, 0
  br i1 %499, label %500, label %503

500:                                              ; preds = %497
  %501 = bitcast %"class.std::__1::basic_string.4"* %9 to i8**
  %502 = load i8*, i8** %501, align 8
  call void @_ZdlPv(i8* %502) #14
  br label %503

503:                                              ; preds = %497, %500
  %504 = load i8, i8* %77, align 1
  %505 = icmp slt i8 %504, 0
  br i1 %505, label %506, label %509

506:                                              ; preds = %503
  %507 = bitcast %"class.std::__1::basic_string.4"* %10 to i8**
  %508 = load i8*, i8** %507, align 8
  call void @_ZdlPv(i8* %508) #14
  br label %509

509:                                              ; preds = %503, %506
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #12
  br label %2492

510:                                              ; preds = %46
  %511 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #12
  %512 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %511) #12
  br i1 %512, label %513, label %1587

513:                                              ; preds = %510
  %514 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %515 = load %class.GURL*, %class.GURL** %514, align 8
  %516 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  %517 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %515, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %516) #12
  br i1 %517, label %518, label %1175

518:                                              ; preds = %513
  %519 = bitcast %"class.std::__1::basic_string.4"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %519) #12
  %520 = bitcast %"class.std::__1::basic_string.4"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #12
  %521 = bitcast %"class.std::__1::basic_string.4"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %521) #12
  %522 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #12
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %15, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %522) #12
  %523 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %524 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %523, i64 0, i32 1, i32 1
  %525 = load i8, i8* %524, align 1, !noalias !345
  %526 = icmp slt i8 %525, 0
  %527 = load i16*, i16** %48, align 8, !noalias !345
  %528 = load i64, i64* %49, align 8, !noalias !345
  %529 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %530 = zext i8 %525 to i64
  %531 = select i1 %526, i16* %527, i16* %529
  %532 = select i1 %526, i64 %528, i64 %530
  %533 = bitcast %"class.std::__1::basic_string.4"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %534 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %533, i64 0, i32 1, i32 1
  %535 = load i8, i8* %534, align 1, !noalias !345
  %536 = icmp slt i8 %535, 0
  br i1 %536, label %537, label %544

537:                                              ; preds = %518
  %538 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %539 = load i64, i64* %538, align 8, !noalias !345
  %540 = and i64 %539, 9223372036854775807
  %541 = add nsw i64 %540, -1
  %542 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %543 = load i64, i64* %542, align 8, !noalias !345
  br label %546

544:                                              ; preds = %518
  %545 = zext i8 %535 to i64
  br label %546

546:                                              ; preds = %544, %537
  %547 = phi i64 [ %541, %537 ], [ 10, %544 ]
  %548 = phi i64 [ %543, %537 ], [ %545, %544 ]
  %549 = sub i64 %547, %548
  %550 = icmp ult i64 %549, %532
  br i1 %550, label %712, label %551

551:                                              ; preds = %546
  %552 = icmp eq i64 %532, 0
  br i1 %552, label %715, label %553

553:                                              ; preds = %551
  %554 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = load i16*, i16** %554, align 8, !noalias !345
  %556 = bitcast %"class.std::__1::basic_string.4"* %15 to i16*
  %557 = select i1 %536, i16* %555, i16* %556
  %558 = getelementptr inbounds i16, i16* %557, i64 %548
  %559 = icmp ult i64 %532, 16
  br i1 %559, label %649, label %560

560:                                              ; preds = %553
  %561 = add i64 %532, %548
  %562 = getelementptr i16, i16* %557, i64 %561
  %563 = getelementptr i16, i16* %531, i64 %532
  %564 = icmp ult i16* %558, %563
  %565 = icmp ult i16* %531, %562
  %566 = and i1 %564, %565
  br i1 %566, label %649, label %567

567:                                              ; preds = %560
  %568 = and i64 %532, -16
  %569 = sub i64 %532, %568
  %570 = getelementptr i16, i16* %531, i64 %568
  %571 = getelementptr i16, i16* %558, i64 %568
  %572 = add i64 %568, -16
  %573 = lshr exact i64 %572, 4
  %574 = add nuw nsw i64 %573, 1
  %575 = and i64 %574, 3
  %576 = icmp ult i64 %572, 48
  br i1 %576, label %628, label %577

577:                                              ; preds = %567
  %578 = sub nsw i64 %574, %575
  br label %579

579:                                              ; preds = %579, %577
  %580 = phi i64 [ 0, %577 ], [ %625, %579 ]
  %581 = phi i64 [ %578, %577 ], [ %626, %579 ]
  %582 = getelementptr i16, i16* %531, i64 %580
  %583 = getelementptr i16, i16* %558, i64 %580
  %584 = bitcast i16* %582 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !348, !noalias !345
  %586 = getelementptr i16, i16* %582, i64 8
  %587 = bitcast i16* %586 to <8 x i16>*
  %588 = load <8 x i16>, <8 x i16>* %587, align 2, !alias.scope !348, !noalias !345
  %589 = bitcast i16* %583 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %589, align 2, !alias.scope !351, !noalias !353
  %590 = getelementptr i16, i16* %583, i64 8
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %588, <8 x i16>* %591, align 2, !alias.scope !351, !noalias !353
  %592 = or i64 %580, 16
  %593 = getelementptr i16, i16* %531, i64 %592
  %594 = getelementptr i16, i16* %558, i64 %592
  %595 = bitcast i16* %593 to <8 x i16>*
  %596 = load <8 x i16>, <8 x i16>* %595, align 2, !alias.scope !348, !noalias !345
  %597 = getelementptr i16, i16* %593, i64 8
  %598 = bitcast i16* %597 to <8 x i16>*
  %599 = load <8 x i16>, <8 x i16>* %598, align 2, !alias.scope !348, !noalias !345
  %600 = bitcast i16* %594 to <8 x i16>*
  store <8 x i16> %596, <8 x i16>* %600, align 2, !alias.scope !351, !noalias !353
  %601 = getelementptr i16, i16* %594, i64 8
  %602 = bitcast i16* %601 to <8 x i16>*
  store <8 x i16> %599, <8 x i16>* %602, align 2, !alias.scope !351, !noalias !353
  %603 = or i64 %580, 32
  %604 = getelementptr i16, i16* %531, i64 %603
  %605 = getelementptr i16, i16* %558, i64 %603
  %606 = bitcast i16* %604 to <8 x i16>*
  %607 = load <8 x i16>, <8 x i16>* %606, align 2, !alias.scope !348, !noalias !345
  %608 = getelementptr i16, i16* %604, i64 8
  %609 = bitcast i16* %608 to <8 x i16>*
  %610 = load <8 x i16>, <8 x i16>* %609, align 2, !alias.scope !348, !noalias !345
  %611 = bitcast i16* %605 to <8 x i16>*
  store <8 x i16> %607, <8 x i16>* %611, align 2, !alias.scope !351, !noalias !353
  %612 = getelementptr i16, i16* %605, i64 8
  %613 = bitcast i16* %612 to <8 x i16>*
  store <8 x i16> %610, <8 x i16>* %613, align 2, !alias.scope !351, !noalias !353
  %614 = or i64 %580, 48
  %615 = getelementptr i16, i16* %531, i64 %614
  %616 = getelementptr i16, i16* %558, i64 %614
  %617 = bitcast i16* %615 to <8 x i16>*
  %618 = load <8 x i16>, <8 x i16>* %617, align 2, !alias.scope !348, !noalias !345
  %619 = getelementptr i16, i16* %615, i64 8
  %620 = bitcast i16* %619 to <8 x i16>*
  %621 = load <8 x i16>, <8 x i16>* %620, align 2, !alias.scope !348, !noalias !345
  %622 = bitcast i16* %616 to <8 x i16>*
  store <8 x i16> %618, <8 x i16>* %622, align 2, !alias.scope !351, !noalias !353
  %623 = getelementptr i16, i16* %616, i64 8
  %624 = bitcast i16* %623 to <8 x i16>*
  store <8 x i16> %621, <8 x i16>* %624, align 2, !alias.scope !351, !noalias !353
  %625 = add i64 %580, 64
  %626 = add i64 %581, -4
  %627 = icmp eq i64 %626, 0
  br i1 %627, label %628, label %579, !llvm.loop !354

628:                                              ; preds = %579, %567
  %629 = phi i64 [ 0, %567 ], [ %625, %579 ]
  %630 = icmp eq i64 %575, 0
  br i1 %630, label %647, label %631

631:                                              ; preds = %628, %631
  %632 = phi i64 [ %644, %631 ], [ %629, %628 ]
  %633 = phi i64 [ %645, %631 ], [ %575, %628 ]
  %634 = getelementptr i16, i16* %531, i64 %632
  %635 = getelementptr i16, i16* %558, i64 %632
  %636 = bitcast i16* %634 to <8 x i16>*
  %637 = load <8 x i16>, <8 x i16>* %636, align 2, !alias.scope !348, !noalias !345
  %638 = getelementptr i16, i16* %634, i64 8
  %639 = bitcast i16* %638 to <8 x i16>*
  %640 = load <8 x i16>, <8 x i16>* %639, align 2, !alias.scope !348, !noalias !345
  %641 = bitcast i16* %635 to <8 x i16>*
  store <8 x i16> %637, <8 x i16>* %641, align 2, !alias.scope !351, !noalias !353
  %642 = getelementptr i16, i16* %635, i64 8
  %643 = bitcast i16* %642 to <8 x i16>*
  store <8 x i16> %640, <8 x i16>* %643, align 2, !alias.scope !351, !noalias !353
  %644 = add i64 %632, 16
  %645 = add i64 %633, -1
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %647, label %631, !llvm.loop !355

647:                                              ; preds = %631, %628
  %648 = icmp eq i64 %532, %568
  br i1 %648, label %702, label %649

649:                                              ; preds = %647, %560, %553
  %650 = phi i64 [ %532, %560 ], [ %532, %553 ], [ %569, %647 ]
  %651 = phi i16* [ %531, %560 ], [ %531, %553 ], [ %570, %647 ]
  %652 = phi i16* [ %558, %560 ], [ %558, %553 ], [ %571, %647 ]
  %653 = add i64 %650, -1
  %654 = and i64 %650, 7
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %667, label %656

656:                                              ; preds = %649, %656
  %657 = phi i64 [ %662, %656 ], [ %650, %649 ]
  %658 = phi i16* [ %664, %656 ], [ %651, %649 ]
  %659 = phi i16* [ %663, %656 ], [ %652, %649 ]
  %660 = phi i64 [ %665, %656 ], [ %654, %649 ]
  %661 = load i16, i16* %658, align 2, !noalias !345
  store i16 %661, i16* %659, align 2, !noalias !345
  %662 = add i64 %657, -1
  %663 = getelementptr inbounds i16, i16* %659, i64 1
  %664 = getelementptr inbounds i16, i16* %658, i64 1
  %665 = add i64 %660, -1
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %667, label %656, !llvm.loop !356

667:                                              ; preds = %656, %649
  %668 = phi i64 [ %650, %649 ], [ %662, %656 ]
  %669 = phi i16* [ %651, %649 ], [ %664, %656 ]
  %670 = phi i16* [ %652, %649 ], [ %663, %656 ]
  %671 = icmp ult i64 %653, 7
  br i1 %671, label %702, label %672

672:                                              ; preds = %667, %672
  %673 = phi i64 [ %698, %672 ], [ %668, %667 ]
  %674 = phi i16* [ %700, %672 ], [ %669, %667 ]
  %675 = phi i16* [ %699, %672 ], [ %670, %667 ]
  %676 = load i16, i16* %674, align 2, !noalias !345
  store i16 %676, i16* %675, align 2, !noalias !345
  %677 = getelementptr inbounds i16, i16* %675, i64 1
  %678 = getelementptr inbounds i16, i16* %674, i64 1
  %679 = load i16, i16* %678, align 2, !noalias !345
  store i16 %679, i16* %677, align 2, !noalias !345
  %680 = getelementptr inbounds i16, i16* %675, i64 2
  %681 = getelementptr inbounds i16, i16* %674, i64 2
  %682 = load i16, i16* %681, align 2, !noalias !345
  store i16 %682, i16* %680, align 2, !noalias !345
  %683 = getelementptr inbounds i16, i16* %675, i64 3
  %684 = getelementptr inbounds i16, i16* %674, i64 3
  %685 = load i16, i16* %684, align 2, !noalias !345
  store i16 %685, i16* %683, align 2, !noalias !345
  %686 = getelementptr inbounds i16, i16* %675, i64 4
  %687 = getelementptr inbounds i16, i16* %674, i64 4
  %688 = load i16, i16* %687, align 2, !noalias !345
  store i16 %688, i16* %686, align 2, !noalias !345
  %689 = getelementptr inbounds i16, i16* %675, i64 5
  %690 = getelementptr inbounds i16, i16* %674, i64 5
  %691 = load i16, i16* %690, align 2, !noalias !345
  store i16 %691, i16* %689, align 2, !noalias !345
  %692 = getelementptr inbounds i16, i16* %675, i64 6
  %693 = getelementptr inbounds i16, i16* %674, i64 6
  %694 = load i16, i16* %693, align 2, !noalias !345
  store i16 %694, i16* %692, align 2, !noalias !345
  %695 = getelementptr inbounds i16, i16* %675, i64 7
  %696 = getelementptr inbounds i16, i16* %674, i64 7
  %697 = load i16, i16* %696, align 2, !noalias !345
  store i16 %697, i16* %695, align 2, !noalias !345
  %698 = add i64 %673, -8
  %699 = getelementptr inbounds i16, i16* %675, i64 8
  %700 = getelementptr inbounds i16, i16* %674, i64 8
  %701 = icmp eq i64 %698, 0
  br i1 %701, label %702, label %672, !llvm.loop !357

702:                                              ; preds = %667, %672, %647
  %703 = add i64 %548, %532
  %704 = load i8, i8* %534, align 1, !noalias !345
  %705 = icmp slt i8 %704, 0
  br i1 %705, label %706, label %708

706:                                              ; preds = %702
  %707 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %703, i64* %707, align 8, !noalias !345
  br label %710

708:                                              ; preds = %702
  %709 = trunc i64 %703 to i8
  store i8 %709, i8* %534, align 1, !noalias !345
  br label %710

710:                                              ; preds = %708, %706
  %711 = getelementptr inbounds i16, i16* %557, i64 %703
  store i16 0, i16* %711, align 2, !noalias !345
  br label %715

712:                                              ; preds = %546
  %713 = add i64 %548, %532
  %714 = sub i64 %713, %547
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %15, i64 %547, i64 %714, i64 %548, i64 %548, i64 0, i64 %532, i16* %531) #12, !noalias !345
  br label %715

715:                                              ; preds = %551, %710, %712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %520, i8* nonnull align 8 %521, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %521, i8 0, i64 24, i1 false) #12, !noalias !345
  %716 = bitcast %"class.std::__1::basic_string.4"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %716) #12
  call void @_ZN13url_formatter27FormatUrlForSecurityDisplayERK4GURLNS_13SchemeDisplayE(%"class.std::__1::basic_string.4"* nonnull sret %16, %class.GURL* dereferenceable(120) %515, i32 0)
  %717 = bitcast %"class.std::__1::basic_string.4"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %718 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %717, i64 0, i32 1, i32 1
  %719 = load i8, i8* %718, align 1, !noalias !358
  %720 = icmp slt i8 %719, 0
  %721 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %722 = load i16*, i16** %721, align 8, !noalias !358
  %723 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %724 = load i64, i64* %723, align 8, !noalias !358
  %725 = bitcast %"class.std::__1::basic_string.4"* %16 to i16*
  %726 = zext i8 %719 to i64
  %727 = select i1 %720, i16* %722, i16* %725
  %728 = select i1 %720, i64 %724, i64 %726
  %729 = bitcast %"class.std::__1::basic_string.4"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %730 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %729, i64 0, i32 1, i32 1
  %731 = load i8, i8* %730, align 1, !noalias !358
  %732 = icmp slt i8 %731, 0
  br i1 %732, label %733, label %740

733:                                              ; preds = %715
  %734 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %735 = load i64, i64* %734, align 8, !noalias !358
  %736 = and i64 %735, 9223372036854775807
  %737 = add nsw i64 %736, -1
  %738 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %739 = load i64, i64* %738, align 8, !noalias !358
  br label %742

740:                                              ; preds = %715
  %741 = zext i8 %731 to i64
  br label %742

742:                                              ; preds = %740, %733
  %743 = phi i64 [ %737, %733 ], [ 10, %740 ]
  %744 = phi i64 [ %739, %733 ], [ %741, %740 ]
  %745 = sub i64 %743, %744
  %746 = icmp ult i64 %745, %728
  br i1 %746, label %908, label %747

747:                                              ; preds = %742
  %748 = icmp eq i64 %728, 0
  br i1 %748, label %911, label %749

749:                                              ; preds = %747
  %750 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %751 = load i16*, i16** %750, align 8, !noalias !358
  %752 = bitcast %"class.std::__1::basic_string.4"* %14 to i16*
  %753 = select i1 %732, i16* %751, i16* %752
  %754 = getelementptr inbounds i16, i16* %753, i64 %744
  %755 = icmp ult i64 %728, 16
  br i1 %755, label %845, label %756

756:                                              ; preds = %749
  %757 = add i64 %728, %744
  %758 = getelementptr i16, i16* %753, i64 %757
  %759 = getelementptr i16, i16* %727, i64 %728
  %760 = icmp ult i16* %754, %759
  %761 = icmp ult i16* %727, %758
  %762 = and i1 %760, %761
  br i1 %762, label %845, label %763

763:                                              ; preds = %756
  %764 = and i64 %728, -16
  %765 = sub i64 %728, %764
  %766 = getelementptr i16, i16* %727, i64 %764
  %767 = getelementptr i16, i16* %754, i64 %764
  %768 = add i64 %764, -16
  %769 = lshr exact i64 %768, 4
  %770 = add nuw nsw i64 %769, 1
  %771 = and i64 %770, 3
  %772 = icmp ult i64 %768, 48
  br i1 %772, label %824, label %773

773:                                              ; preds = %763
  %774 = sub nsw i64 %770, %771
  br label %775

775:                                              ; preds = %775, %773
  %776 = phi i64 [ 0, %773 ], [ %821, %775 ]
  %777 = phi i64 [ %774, %773 ], [ %822, %775 ]
  %778 = getelementptr i16, i16* %727, i64 %776
  %779 = getelementptr i16, i16* %754, i64 %776
  %780 = bitcast i16* %778 to <8 x i16>*
  %781 = load <8 x i16>, <8 x i16>* %780, align 2, !alias.scope !361, !noalias !358
  %782 = getelementptr i16, i16* %778, i64 8
  %783 = bitcast i16* %782 to <8 x i16>*
  %784 = load <8 x i16>, <8 x i16>* %783, align 2, !alias.scope !361, !noalias !358
  %785 = bitcast i16* %779 to <8 x i16>*
  store <8 x i16> %781, <8 x i16>* %785, align 2, !alias.scope !364, !noalias !366
  %786 = getelementptr i16, i16* %779, i64 8
  %787 = bitcast i16* %786 to <8 x i16>*
  store <8 x i16> %784, <8 x i16>* %787, align 2, !alias.scope !364, !noalias !366
  %788 = or i64 %776, 16
  %789 = getelementptr i16, i16* %727, i64 %788
  %790 = getelementptr i16, i16* %754, i64 %788
  %791 = bitcast i16* %789 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !361, !noalias !358
  %793 = getelementptr i16, i16* %789, i64 8
  %794 = bitcast i16* %793 to <8 x i16>*
  %795 = load <8 x i16>, <8 x i16>* %794, align 2, !alias.scope !361, !noalias !358
  %796 = bitcast i16* %790 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %796, align 2, !alias.scope !364, !noalias !366
  %797 = getelementptr i16, i16* %790, i64 8
  %798 = bitcast i16* %797 to <8 x i16>*
  store <8 x i16> %795, <8 x i16>* %798, align 2, !alias.scope !364, !noalias !366
  %799 = or i64 %776, 32
  %800 = getelementptr i16, i16* %727, i64 %799
  %801 = getelementptr i16, i16* %754, i64 %799
  %802 = bitcast i16* %800 to <8 x i16>*
  %803 = load <8 x i16>, <8 x i16>* %802, align 2, !alias.scope !361, !noalias !358
  %804 = getelementptr i16, i16* %800, i64 8
  %805 = bitcast i16* %804 to <8 x i16>*
  %806 = load <8 x i16>, <8 x i16>* %805, align 2, !alias.scope !361, !noalias !358
  %807 = bitcast i16* %801 to <8 x i16>*
  store <8 x i16> %803, <8 x i16>* %807, align 2, !alias.scope !364, !noalias !366
  %808 = getelementptr i16, i16* %801, i64 8
  %809 = bitcast i16* %808 to <8 x i16>*
  store <8 x i16> %806, <8 x i16>* %809, align 2, !alias.scope !364, !noalias !366
  %810 = or i64 %776, 48
  %811 = getelementptr i16, i16* %727, i64 %810
  %812 = getelementptr i16, i16* %754, i64 %810
  %813 = bitcast i16* %811 to <8 x i16>*
  %814 = load <8 x i16>, <8 x i16>* %813, align 2, !alias.scope !361, !noalias !358
  %815 = getelementptr i16, i16* %811, i64 8
  %816 = bitcast i16* %815 to <8 x i16>*
  %817 = load <8 x i16>, <8 x i16>* %816, align 2, !alias.scope !361, !noalias !358
  %818 = bitcast i16* %812 to <8 x i16>*
  store <8 x i16> %814, <8 x i16>* %818, align 2, !alias.scope !364, !noalias !366
  %819 = getelementptr i16, i16* %812, i64 8
  %820 = bitcast i16* %819 to <8 x i16>*
  store <8 x i16> %817, <8 x i16>* %820, align 2, !alias.scope !364, !noalias !366
  %821 = add i64 %776, 64
  %822 = add i64 %777, -4
  %823 = icmp eq i64 %822, 0
  br i1 %823, label %824, label %775, !llvm.loop !367

824:                                              ; preds = %775, %763
  %825 = phi i64 [ 0, %763 ], [ %821, %775 ]
  %826 = icmp eq i64 %771, 0
  br i1 %826, label %843, label %827

827:                                              ; preds = %824, %827
  %828 = phi i64 [ %840, %827 ], [ %825, %824 ]
  %829 = phi i64 [ %841, %827 ], [ %771, %824 ]
  %830 = getelementptr i16, i16* %727, i64 %828
  %831 = getelementptr i16, i16* %754, i64 %828
  %832 = bitcast i16* %830 to <8 x i16>*
  %833 = load <8 x i16>, <8 x i16>* %832, align 2, !alias.scope !361, !noalias !358
  %834 = getelementptr i16, i16* %830, i64 8
  %835 = bitcast i16* %834 to <8 x i16>*
  %836 = load <8 x i16>, <8 x i16>* %835, align 2, !alias.scope !361, !noalias !358
  %837 = bitcast i16* %831 to <8 x i16>*
  store <8 x i16> %833, <8 x i16>* %837, align 2, !alias.scope !364, !noalias !366
  %838 = getelementptr i16, i16* %831, i64 8
  %839 = bitcast i16* %838 to <8 x i16>*
  store <8 x i16> %836, <8 x i16>* %839, align 2, !alias.scope !364, !noalias !366
  %840 = add i64 %828, 16
  %841 = add i64 %829, -1
  %842 = icmp eq i64 %841, 0
  br i1 %842, label %843, label %827, !llvm.loop !368

843:                                              ; preds = %827, %824
  %844 = icmp eq i64 %728, %764
  br i1 %844, label %898, label %845

845:                                              ; preds = %843, %756, %749
  %846 = phi i64 [ %728, %756 ], [ %728, %749 ], [ %765, %843 ]
  %847 = phi i16* [ %727, %756 ], [ %727, %749 ], [ %766, %843 ]
  %848 = phi i16* [ %754, %756 ], [ %754, %749 ], [ %767, %843 ]
  %849 = add i64 %846, -1
  %850 = and i64 %846, 7
  %851 = icmp eq i64 %850, 0
  br i1 %851, label %863, label %852

852:                                              ; preds = %845, %852
  %853 = phi i64 [ %858, %852 ], [ %846, %845 ]
  %854 = phi i16* [ %860, %852 ], [ %847, %845 ]
  %855 = phi i16* [ %859, %852 ], [ %848, %845 ]
  %856 = phi i64 [ %861, %852 ], [ %850, %845 ]
  %857 = load i16, i16* %854, align 2, !noalias !358
  store i16 %857, i16* %855, align 2, !noalias !358
  %858 = add i64 %853, -1
  %859 = getelementptr inbounds i16, i16* %855, i64 1
  %860 = getelementptr inbounds i16, i16* %854, i64 1
  %861 = add i64 %856, -1
  %862 = icmp eq i64 %861, 0
  br i1 %862, label %863, label %852, !llvm.loop !369

863:                                              ; preds = %852, %845
  %864 = phi i64 [ %846, %845 ], [ %858, %852 ]
  %865 = phi i16* [ %847, %845 ], [ %860, %852 ]
  %866 = phi i16* [ %848, %845 ], [ %859, %852 ]
  %867 = icmp ult i64 %849, 7
  br i1 %867, label %898, label %868

868:                                              ; preds = %863, %868
  %869 = phi i64 [ %894, %868 ], [ %864, %863 ]
  %870 = phi i16* [ %896, %868 ], [ %865, %863 ]
  %871 = phi i16* [ %895, %868 ], [ %866, %863 ]
  %872 = load i16, i16* %870, align 2, !noalias !358
  store i16 %872, i16* %871, align 2, !noalias !358
  %873 = getelementptr inbounds i16, i16* %871, i64 1
  %874 = getelementptr inbounds i16, i16* %870, i64 1
  %875 = load i16, i16* %874, align 2, !noalias !358
  store i16 %875, i16* %873, align 2, !noalias !358
  %876 = getelementptr inbounds i16, i16* %871, i64 2
  %877 = getelementptr inbounds i16, i16* %870, i64 2
  %878 = load i16, i16* %877, align 2, !noalias !358
  store i16 %878, i16* %876, align 2, !noalias !358
  %879 = getelementptr inbounds i16, i16* %871, i64 3
  %880 = getelementptr inbounds i16, i16* %870, i64 3
  %881 = load i16, i16* %880, align 2, !noalias !358
  store i16 %881, i16* %879, align 2, !noalias !358
  %882 = getelementptr inbounds i16, i16* %871, i64 4
  %883 = getelementptr inbounds i16, i16* %870, i64 4
  %884 = load i16, i16* %883, align 2, !noalias !358
  store i16 %884, i16* %882, align 2, !noalias !358
  %885 = getelementptr inbounds i16, i16* %871, i64 5
  %886 = getelementptr inbounds i16, i16* %870, i64 5
  %887 = load i16, i16* %886, align 2, !noalias !358
  store i16 %887, i16* %885, align 2, !noalias !358
  %888 = getelementptr inbounds i16, i16* %871, i64 6
  %889 = getelementptr inbounds i16, i16* %870, i64 6
  %890 = load i16, i16* %889, align 2, !noalias !358
  store i16 %890, i16* %888, align 2, !noalias !358
  %891 = getelementptr inbounds i16, i16* %871, i64 7
  %892 = getelementptr inbounds i16, i16* %870, i64 7
  %893 = load i16, i16* %892, align 2, !noalias !358
  store i16 %893, i16* %891, align 2, !noalias !358
  %894 = add i64 %869, -8
  %895 = getelementptr inbounds i16, i16* %871, i64 8
  %896 = getelementptr inbounds i16, i16* %870, i64 8
  %897 = icmp eq i64 %894, 0
  br i1 %897, label %898, label %868, !llvm.loop !370

898:                                              ; preds = %863, %868, %843
  %899 = add i64 %744, %728
  %900 = load i8, i8* %730, align 1, !noalias !358
  %901 = icmp slt i8 %900, 0
  br i1 %901, label %902, label %904

902:                                              ; preds = %898
  %903 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %899, i64* %903, align 8, !noalias !358
  br label %906

904:                                              ; preds = %898
  %905 = trunc i64 %899 to i8
  store i8 %905, i8* %730, align 1, !noalias !358
  br label %906

906:                                              ; preds = %904, %902
  %907 = getelementptr inbounds i16, i16* %753, i64 %899
  store i16 0, i16* %907, align 2, !noalias !358
  br label %911

908:                                              ; preds = %742
  %909 = add i64 %744, %728
  %910 = sub i64 %909, %743
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %14, i64 %743, i64 %910, i64 %744, i64 %744, i64 0, i64 %728, i16* %727) #12, !noalias !358
  br label %911

911:                                              ; preds = %747, %906, %908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %519, i8* nonnull align 8 %520, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %520, i8 0, i64 24, i1 false) #12, !noalias !358
  %912 = bitcast %"class.std::__1::basic_string.4"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %912) #12
  %913 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %913) #12
  %914 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 1
  %915 = load i32, i32* %914, align 4, !noalias !371
  %916 = icmp slt i32 %915, 1
  br i1 %916, label %917, label %919

917:                                              ; preds = %911
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %913, i8 0, i64 24, i1 false) #12, !alias.scope !371
  %918 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %933

919:                                              ; preds = %911
  %920 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %921 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 0
  %922 = load i32, i32* %921, align 4, !noalias !371
  %923 = sext i32 %922 to i64
  %924 = sext i32 %915 to i64
  %925 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %925) #12, !noalias !371
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %18, %"class.std::__1::basic_string"* dereferenceable(24) %920, i64 %923, i64 %924, %"class.std::__1::allocator"* nonnull dereferenceable(1) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %925) #12, !noalias !371
  %926 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %927 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %926, i64 0, i32 1, i32 0
  %928 = load i8, i8* %927, align 1
  %929 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %930 = load i8*, i8** %929, align 8
  %931 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %932 = load i64, i64* %931, align 8
  br label %933

933:                                              ; preds = %917, %919
  %934 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %918, %917 ], [ %926, %919 ]
  %935 = phi i64 [ 0, %917 ], [ %932, %919 ]
  %936 = phi i8* [ null, %917 ], [ %930, %919 ]
  %937 = phi i8 [ 0, %917 ], [ %928, %919 ]
  %938 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %934, i64 0, i32 1, i32 0
  %939 = icmp slt i8 %937, 0
  %940 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %941 = select i1 %939, i8* %936, i8* %913
  %942 = zext i8 %937 to i64
  %943 = select i1 %939, i64 %935, i64 %942
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %17, i8* %941, i64 %943) #12
  %944 = bitcast %"class.std::__1::basic_string.4"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %945 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %944, i64 0, i32 1, i32 1
  %946 = load i8, i8* %945, align 1, !noalias !376
  %947 = icmp slt i8 %946, 0
  %948 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %949 = load i16*, i16** %948, align 8, !noalias !376
  %950 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %951 = load i64, i64* %950, align 8, !noalias !376
  %952 = bitcast %"class.std::__1::basic_string.4"* %17 to i16*
  %953 = zext i8 %946 to i64
  %954 = select i1 %947, i16* %949, i16* %952
  %955 = select i1 %947, i64 %951, i64 %953
  %956 = bitcast %"class.std::__1::basic_string.4"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %957 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %956, i64 0, i32 1, i32 1
  %958 = load i8, i8* %957, align 1, !noalias !376
  %959 = icmp slt i8 %958, 0
  br i1 %959, label %960, label %967

960:                                              ; preds = %933
  %961 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %962 = load i64, i64* %961, align 8, !noalias !376
  %963 = and i64 %962, 9223372036854775807
  %964 = add nsw i64 %963, -1
  %965 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %966 = load i64, i64* %965, align 8, !noalias !376
  br label %969

967:                                              ; preds = %933
  %968 = zext i8 %958 to i64
  br label %969

969:                                              ; preds = %967, %960
  %970 = phi i64 [ %964, %960 ], [ 10, %967 ]
  %971 = phi i64 [ %966, %960 ], [ %968, %967 ]
  %972 = sub i64 %970, %971
  %973 = icmp ult i64 %972, %955
  br i1 %973, label %1135, label %974

974:                                              ; preds = %969
  %975 = icmp eq i64 %955, 0
  br i1 %975, label %1138, label %976

976:                                              ; preds = %974
  %977 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %978 = load i16*, i16** %977, align 8, !noalias !376
  %979 = bitcast %"class.std::__1::basic_string.4"* %13 to i16*
  %980 = select i1 %959, i16* %978, i16* %979
  %981 = getelementptr inbounds i16, i16* %980, i64 %971
  %982 = icmp ult i64 %955, 16
  br i1 %982, label %1072, label %983

983:                                              ; preds = %976
  %984 = add i64 %955, %971
  %985 = getelementptr i16, i16* %980, i64 %984
  %986 = getelementptr i16, i16* %954, i64 %955
  %987 = icmp ult i16* %981, %986
  %988 = icmp ult i16* %954, %985
  %989 = and i1 %987, %988
  br i1 %989, label %1072, label %990

990:                                              ; preds = %983
  %991 = and i64 %955, -16
  %992 = sub i64 %955, %991
  %993 = getelementptr i16, i16* %954, i64 %991
  %994 = getelementptr i16, i16* %981, i64 %991
  %995 = add i64 %991, -16
  %996 = lshr exact i64 %995, 4
  %997 = add nuw nsw i64 %996, 1
  %998 = and i64 %997, 3
  %999 = icmp ult i64 %995, 48
  br i1 %999, label %1051, label %1000

1000:                                             ; preds = %990
  %1001 = sub nsw i64 %997, %998
  br label %1002

1002:                                             ; preds = %1002, %1000
  %1003 = phi i64 [ 0, %1000 ], [ %1048, %1002 ]
  %1004 = phi i64 [ %1001, %1000 ], [ %1049, %1002 ]
  %1005 = getelementptr i16, i16* %954, i64 %1003
  %1006 = getelementptr i16, i16* %981, i64 %1003
  %1007 = bitcast i16* %1005 to <8 x i16>*
  %1008 = load <8 x i16>, <8 x i16>* %1007, align 2, !alias.scope !379, !noalias !376
  %1009 = getelementptr i16, i16* %1005, i64 8
  %1010 = bitcast i16* %1009 to <8 x i16>*
  %1011 = load <8 x i16>, <8 x i16>* %1010, align 2, !alias.scope !379, !noalias !376
  %1012 = bitcast i16* %1006 to <8 x i16>*
  store <8 x i16> %1008, <8 x i16>* %1012, align 2, !alias.scope !382, !noalias !384
  %1013 = getelementptr i16, i16* %1006, i64 8
  %1014 = bitcast i16* %1013 to <8 x i16>*
  store <8 x i16> %1011, <8 x i16>* %1014, align 2, !alias.scope !382, !noalias !384
  %1015 = or i64 %1003, 16
  %1016 = getelementptr i16, i16* %954, i64 %1015
  %1017 = getelementptr i16, i16* %981, i64 %1015
  %1018 = bitcast i16* %1016 to <8 x i16>*
  %1019 = load <8 x i16>, <8 x i16>* %1018, align 2, !alias.scope !379, !noalias !376
  %1020 = getelementptr i16, i16* %1016, i64 8
  %1021 = bitcast i16* %1020 to <8 x i16>*
  %1022 = load <8 x i16>, <8 x i16>* %1021, align 2, !alias.scope !379, !noalias !376
  %1023 = bitcast i16* %1017 to <8 x i16>*
  store <8 x i16> %1019, <8 x i16>* %1023, align 2, !alias.scope !382, !noalias !384
  %1024 = getelementptr i16, i16* %1017, i64 8
  %1025 = bitcast i16* %1024 to <8 x i16>*
  store <8 x i16> %1022, <8 x i16>* %1025, align 2, !alias.scope !382, !noalias !384
  %1026 = or i64 %1003, 32
  %1027 = getelementptr i16, i16* %954, i64 %1026
  %1028 = getelementptr i16, i16* %981, i64 %1026
  %1029 = bitcast i16* %1027 to <8 x i16>*
  %1030 = load <8 x i16>, <8 x i16>* %1029, align 2, !alias.scope !379, !noalias !376
  %1031 = getelementptr i16, i16* %1027, i64 8
  %1032 = bitcast i16* %1031 to <8 x i16>*
  %1033 = load <8 x i16>, <8 x i16>* %1032, align 2, !alias.scope !379, !noalias !376
  %1034 = bitcast i16* %1028 to <8 x i16>*
  store <8 x i16> %1030, <8 x i16>* %1034, align 2, !alias.scope !382, !noalias !384
  %1035 = getelementptr i16, i16* %1028, i64 8
  %1036 = bitcast i16* %1035 to <8 x i16>*
  store <8 x i16> %1033, <8 x i16>* %1036, align 2, !alias.scope !382, !noalias !384
  %1037 = or i64 %1003, 48
  %1038 = getelementptr i16, i16* %954, i64 %1037
  %1039 = getelementptr i16, i16* %981, i64 %1037
  %1040 = bitcast i16* %1038 to <8 x i16>*
  %1041 = load <8 x i16>, <8 x i16>* %1040, align 2, !alias.scope !379, !noalias !376
  %1042 = getelementptr i16, i16* %1038, i64 8
  %1043 = bitcast i16* %1042 to <8 x i16>*
  %1044 = load <8 x i16>, <8 x i16>* %1043, align 2, !alias.scope !379, !noalias !376
  %1045 = bitcast i16* %1039 to <8 x i16>*
  store <8 x i16> %1041, <8 x i16>* %1045, align 2, !alias.scope !382, !noalias !384
  %1046 = getelementptr i16, i16* %1039, i64 8
  %1047 = bitcast i16* %1046 to <8 x i16>*
  store <8 x i16> %1044, <8 x i16>* %1047, align 2, !alias.scope !382, !noalias !384
  %1048 = add i64 %1003, 64
  %1049 = add i64 %1004, -4
  %1050 = icmp eq i64 %1049, 0
  br i1 %1050, label %1051, label %1002, !llvm.loop !385

1051:                                             ; preds = %1002, %990
  %1052 = phi i64 [ 0, %990 ], [ %1048, %1002 ]
  %1053 = icmp eq i64 %998, 0
  br i1 %1053, label %1070, label %1054

1054:                                             ; preds = %1051, %1054
  %1055 = phi i64 [ %1067, %1054 ], [ %1052, %1051 ]
  %1056 = phi i64 [ %1068, %1054 ], [ %998, %1051 ]
  %1057 = getelementptr i16, i16* %954, i64 %1055
  %1058 = getelementptr i16, i16* %981, i64 %1055
  %1059 = bitcast i16* %1057 to <8 x i16>*
  %1060 = load <8 x i16>, <8 x i16>* %1059, align 2, !alias.scope !379, !noalias !376
  %1061 = getelementptr i16, i16* %1057, i64 8
  %1062 = bitcast i16* %1061 to <8 x i16>*
  %1063 = load <8 x i16>, <8 x i16>* %1062, align 2, !alias.scope !379, !noalias !376
  %1064 = bitcast i16* %1058 to <8 x i16>*
  store <8 x i16> %1060, <8 x i16>* %1064, align 2, !alias.scope !382, !noalias !384
  %1065 = getelementptr i16, i16* %1058, i64 8
  %1066 = bitcast i16* %1065 to <8 x i16>*
  store <8 x i16> %1063, <8 x i16>* %1066, align 2, !alias.scope !382, !noalias !384
  %1067 = add i64 %1055, 16
  %1068 = add i64 %1056, -1
  %1069 = icmp eq i64 %1068, 0
  br i1 %1069, label %1070, label %1054, !llvm.loop !386

1070:                                             ; preds = %1054, %1051
  %1071 = icmp eq i64 %955, %991
  br i1 %1071, label %1125, label %1072

1072:                                             ; preds = %1070, %983, %976
  %1073 = phi i64 [ %955, %983 ], [ %955, %976 ], [ %992, %1070 ]
  %1074 = phi i16* [ %954, %983 ], [ %954, %976 ], [ %993, %1070 ]
  %1075 = phi i16* [ %981, %983 ], [ %981, %976 ], [ %994, %1070 ]
  %1076 = add i64 %1073, -1
  %1077 = and i64 %1073, 7
  %1078 = icmp eq i64 %1077, 0
  br i1 %1078, label %1090, label %1079

1079:                                             ; preds = %1072, %1079
  %1080 = phi i64 [ %1085, %1079 ], [ %1073, %1072 ]
  %1081 = phi i16* [ %1087, %1079 ], [ %1074, %1072 ]
  %1082 = phi i16* [ %1086, %1079 ], [ %1075, %1072 ]
  %1083 = phi i64 [ %1088, %1079 ], [ %1077, %1072 ]
  %1084 = load i16, i16* %1081, align 2, !noalias !376
  store i16 %1084, i16* %1082, align 2, !noalias !376
  %1085 = add i64 %1080, -1
  %1086 = getelementptr inbounds i16, i16* %1082, i64 1
  %1087 = getelementptr inbounds i16, i16* %1081, i64 1
  %1088 = add i64 %1083, -1
  %1089 = icmp eq i64 %1088, 0
  br i1 %1089, label %1090, label %1079, !llvm.loop !387

1090:                                             ; preds = %1079, %1072
  %1091 = phi i64 [ %1073, %1072 ], [ %1085, %1079 ]
  %1092 = phi i16* [ %1074, %1072 ], [ %1087, %1079 ]
  %1093 = phi i16* [ %1075, %1072 ], [ %1086, %1079 ]
  %1094 = icmp ult i64 %1076, 7
  br i1 %1094, label %1125, label %1095

1095:                                             ; preds = %1090, %1095
  %1096 = phi i64 [ %1121, %1095 ], [ %1091, %1090 ]
  %1097 = phi i16* [ %1123, %1095 ], [ %1092, %1090 ]
  %1098 = phi i16* [ %1122, %1095 ], [ %1093, %1090 ]
  %1099 = load i16, i16* %1097, align 2, !noalias !376
  store i16 %1099, i16* %1098, align 2, !noalias !376
  %1100 = getelementptr inbounds i16, i16* %1098, i64 1
  %1101 = getelementptr inbounds i16, i16* %1097, i64 1
  %1102 = load i16, i16* %1101, align 2, !noalias !376
  store i16 %1102, i16* %1100, align 2, !noalias !376
  %1103 = getelementptr inbounds i16, i16* %1098, i64 2
  %1104 = getelementptr inbounds i16, i16* %1097, i64 2
  %1105 = load i16, i16* %1104, align 2, !noalias !376
  store i16 %1105, i16* %1103, align 2, !noalias !376
  %1106 = getelementptr inbounds i16, i16* %1098, i64 3
  %1107 = getelementptr inbounds i16, i16* %1097, i64 3
  %1108 = load i16, i16* %1107, align 2, !noalias !376
  store i16 %1108, i16* %1106, align 2, !noalias !376
  %1109 = getelementptr inbounds i16, i16* %1098, i64 4
  %1110 = getelementptr inbounds i16, i16* %1097, i64 4
  %1111 = load i16, i16* %1110, align 2, !noalias !376
  store i16 %1111, i16* %1109, align 2, !noalias !376
  %1112 = getelementptr inbounds i16, i16* %1098, i64 5
  %1113 = getelementptr inbounds i16, i16* %1097, i64 5
  %1114 = load i16, i16* %1113, align 2, !noalias !376
  store i16 %1114, i16* %1112, align 2, !noalias !376
  %1115 = getelementptr inbounds i16, i16* %1098, i64 6
  %1116 = getelementptr inbounds i16, i16* %1097, i64 6
  %1117 = load i16, i16* %1116, align 2, !noalias !376
  store i16 %1117, i16* %1115, align 2, !noalias !376
  %1118 = getelementptr inbounds i16, i16* %1098, i64 7
  %1119 = getelementptr inbounds i16, i16* %1097, i64 7
  %1120 = load i16, i16* %1119, align 2, !noalias !376
  store i16 %1120, i16* %1118, align 2, !noalias !376
  %1121 = add i64 %1096, -8
  %1122 = getelementptr inbounds i16, i16* %1098, i64 8
  %1123 = getelementptr inbounds i16, i16* %1097, i64 8
  %1124 = icmp eq i64 %1121, 0
  br i1 %1124, label %1125, label %1095, !llvm.loop !388

1125:                                             ; preds = %1090, %1095, %1070
  %1126 = add i64 %971, %955
  %1127 = load i8, i8* %957, align 1, !noalias !376
  %1128 = icmp slt i8 %1127, 0
  br i1 %1128, label %1129, label %1131

1129:                                             ; preds = %1125
  %1130 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1126, i64* %1130, align 8, !noalias !376
  br label %1133

1131:                                             ; preds = %1125
  %1132 = trunc i64 %1126 to i8
  store i8 %1132, i8* %957, align 1, !noalias !376
  br label %1133

1133:                                             ; preds = %1131, %1129
  %1134 = getelementptr inbounds i16, i16* %980, i64 %1126
  store i16 0, i16* %1134, align 2, !noalias !376
  br label %1138

1135:                                             ; preds = %969
  %1136 = add i64 %971, %955
  %1137 = sub i64 %1136, %970
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %13, i64 %970, i64 %1137, i64 %971, i64 %971, i64 0, i64 %955, i16* %954) #12, !noalias !376
  br label %1138

1138:                                             ; preds = %974, %1133, %1135
  %1139 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1139, i8* nonnull align 8 %519, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %519, i8 0, i64 24, i1 false) #12, !noalias !376
  %1140 = load i8, i8* %945, align 1
  %1141 = icmp slt i8 %1140, 0
  br i1 %1141, label %1142, label %1145

1142:                                             ; preds = %1138
  %1143 = bitcast %"class.std::__1::basic_string.4"* %17 to i8**
  %1144 = load i8*, i8** %1143, align 8
  call void @_ZdlPv(i8* %1144) #14
  br label %1145

1145:                                             ; preds = %1138, %1142
  %1146 = load i8, i8* %938, align 1
  %1147 = icmp slt i8 %1146, 0
  br i1 %1147, label %1148, label %1150

1148:                                             ; preds = %1145
  %1149 = load i8*, i8** %940, align 8
  call void @_ZdlPv(i8* %1149) #14
  br label %1150

1150:                                             ; preds = %1145, %1148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %913) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %912) #12
  %1151 = load i8, i8* %957, align 1
  %1152 = icmp slt i8 %1151, 0
  br i1 %1152, label %1153, label %1156

1153:                                             ; preds = %1150
  %1154 = bitcast %"class.std::__1::basic_string.4"* %13 to i8**
  %1155 = load i8*, i8** %1154, align 8
  call void @_ZdlPv(i8* %1155) #14
  br label %1156

1156:                                             ; preds = %1150, %1153
  %1157 = load i8, i8* %718, align 1
  %1158 = icmp slt i8 %1157, 0
  br i1 %1158, label %1159, label %1162

1159:                                             ; preds = %1156
  %1160 = bitcast %"class.std::__1::basic_string.4"* %16 to i8**
  %1161 = load i8*, i8** %1160, align 8
  call void @_ZdlPv(i8* %1161) #14
  br label %1162

1162:                                             ; preds = %1156, %1159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %716) #12
  %1163 = load i8, i8* %730, align 1
  %1164 = icmp slt i8 %1163, 0
  br i1 %1164, label %1165, label %1168

1165:                                             ; preds = %1162
  %1166 = bitcast %"class.std::__1::basic_string.4"* %14 to i8**
  %1167 = load i8*, i8** %1166, align 8
  call void @_ZdlPv(i8* %1167) #14
  br label %1168

1168:                                             ; preds = %1162, %1165
  %1169 = load i8, i8* %534, align 1
  %1170 = icmp slt i8 %1169, 0
  br i1 %1170, label %1171, label %1174

1171:                                             ; preds = %1168
  %1172 = bitcast %"class.std::__1::basic_string.4"* %15 to i8**
  %1173 = load i8*, i8** %1172, align 8
  call void @_ZdlPv(i8* %1173) #14
  br label %1174

1174:                                             ; preds = %1168, %1171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %521) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %519) #12
  br label %2492

1175:                                             ; preds = %513
  %1176 = bitcast %"class.std::__1::basic_string.4"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1176) #12
  %1177 = bitcast %"class.std::__1::basic_string.4"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1177) #12
  %1178 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #12
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %20, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %1178) #12
  %1179 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1180 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1179, i64 0, i32 1, i32 1
  %1181 = load i8, i8* %1180, align 1, !noalias !389
  %1182 = icmp slt i8 %1181, 0
  %1183 = load i16*, i16** %48, align 8, !noalias !389
  %1184 = load i64, i64* %49, align 8, !noalias !389
  %1185 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %1186 = zext i8 %1181 to i64
  %1187 = select i1 %1182, i16* %1183, i16* %1185
  %1188 = select i1 %1182, i64 %1184, i64 %1186
  %1189 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1190 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1189, i64 0, i32 1, i32 1
  %1191 = load i8, i8* %1190, align 1, !noalias !389
  %1192 = icmp slt i8 %1191, 0
  br i1 %1192, label %1193, label %1200

1193:                                             ; preds = %1175
  %1194 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1195 = load i64, i64* %1194, align 8, !noalias !389
  %1196 = and i64 %1195, 9223372036854775807
  %1197 = add nsw i64 %1196, -1
  %1198 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1199 = load i64, i64* %1198, align 8, !noalias !389
  br label %1202

1200:                                             ; preds = %1175
  %1201 = zext i8 %1191 to i64
  br label %1202

1202:                                             ; preds = %1200, %1193
  %1203 = phi i64 [ %1197, %1193 ], [ 10, %1200 ]
  %1204 = phi i64 [ %1199, %1193 ], [ %1201, %1200 ]
  %1205 = sub i64 %1203, %1204
  %1206 = icmp ult i64 %1205, %1188
  br i1 %1206, label %1368, label %1207

1207:                                             ; preds = %1202
  %1208 = icmp eq i64 %1188, 0
  br i1 %1208, label %1371, label %1209

1209:                                             ; preds = %1207
  %1210 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1211 = load i16*, i16** %1210, align 8, !noalias !389
  %1212 = bitcast %"class.std::__1::basic_string.4"* %20 to i16*
  %1213 = select i1 %1192, i16* %1211, i16* %1212
  %1214 = getelementptr inbounds i16, i16* %1213, i64 %1204
  %1215 = icmp ult i64 %1188, 16
  br i1 %1215, label %1305, label %1216

1216:                                             ; preds = %1209
  %1217 = add i64 %1188, %1204
  %1218 = getelementptr i16, i16* %1213, i64 %1217
  %1219 = getelementptr i16, i16* %1187, i64 %1188
  %1220 = icmp ult i16* %1214, %1219
  %1221 = icmp ult i16* %1187, %1218
  %1222 = and i1 %1220, %1221
  br i1 %1222, label %1305, label %1223

1223:                                             ; preds = %1216
  %1224 = and i64 %1188, -16
  %1225 = sub i64 %1188, %1224
  %1226 = getelementptr i16, i16* %1187, i64 %1224
  %1227 = getelementptr i16, i16* %1214, i64 %1224
  %1228 = add i64 %1224, -16
  %1229 = lshr exact i64 %1228, 4
  %1230 = add nuw nsw i64 %1229, 1
  %1231 = and i64 %1230, 3
  %1232 = icmp ult i64 %1228, 48
  br i1 %1232, label %1284, label %1233

1233:                                             ; preds = %1223
  %1234 = sub nsw i64 %1230, %1231
  br label %1235

1235:                                             ; preds = %1235, %1233
  %1236 = phi i64 [ 0, %1233 ], [ %1281, %1235 ]
  %1237 = phi i64 [ %1234, %1233 ], [ %1282, %1235 ]
  %1238 = getelementptr i16, i16* %1187, i64 %1236
  %1239 = getelementptr i16, i16* %1214, i64 %1236
  %1240 = bitcast i16* %1238 to <8 x i16>*
  %1241 = load <8 x i16>, <8 x i16>* %1240, align 2, !alias.scope !392, !noalias !389
  %1242 = getelementptr i16, i16* %1238, i64 8
  %1243 = bitcast i16* %1242 to <8 x i16>*
  %1244 = load <8 x i16>, <8 x i16>* %1243, align 2, !alias.scope !392, !noalias !389
  %1245 = bitcast i16* %1239 to <8 x i16>*
  store <8 x i16> %1241, <8 x i16>* %1245, align 2, !alias.scope !395, !noalias !397
  %1246 = getelementptr i16, i16* %1239, i64 8
  %1247 = bitcast i16* %1246 to <8 x i16>*
  store <8 x i16> %1244, <8 x i16>* %1247, align 2, !alias.scope !395, !noalias !397
  %1248 = or i64 %1236, 16
  %1249 = getelementptr i16, i16* %1187, i64 %1248
  %1250 = getelementptr i16, i16* %1214, i64 %1248
  %1251 = bitcast i16* %1249 to <8 x i16>*
  %1252 = load <8 x i16>, <8 x i16>* %1251, align 2, !alias.scope !392, !noalias !389
  %1253 = getelementptr i16, i16* %1249, i64 8
  %1254 = bitcast i16* %1253 to <8 x i16>*
  %1255 = load <8 x i16>, <8 x i16>* %1254, align 2, !alias.scope !392, !noalias !389
  %1256 = bitcast i16* %1250 to <8 x i16>*
  store <8 x i16> %1252, <8 x i16>* %1256, align 2, !alias.scope !395, !noalias !397
  %1257 = getelementptr i16, i16* %1250, i64 8
  %1258 = bitcast i16* %1257 to <8 x i16>*
  store <8 x i16> %1255, <8 x i16>* %1258, align 2, !alias.scope !395, !noalias !397
  %1259 = or i64 %1236, 32
  %1260 = getelementptr i16, i16* %1187, i64 %1259
  %1261 = getelementptr i16, i16* %1214, i64 %1259
  %1262 = bitcast i16* %1260 to <8 x i16>*
  %1263 = load <8 x i16>, <8 x i16>* %1262, align 2, !alias.scope !392, !noalias !389
  %1264 = getelementptr i16, i16* %1260, i64 8
  %1265 = bitcast i16* %1264 to <8 x i16>*
  %1266 = load <8 x i16>, <8 x i16>* %1265, align 2, !alias.scope !392, !noalias !389
  %1267 = bitcast i16* %1261 to <8 x i16>*
  store <8 x i16> %1263, <8 x i16>* %1267, align 2, !alias.scope !395, !noalias !397
  %1268 = getelementptr i16, i16* %1261, i64 8
  %1269 = bitcast i16* %1268 to <8 x i16>*
  store <8 x i16> %1266, <8 x i16>* %1269, align 2, !alias.scope !395, !noalias !397
  %1270 = or i64 %1236, 48
  %1271 = getelementptr i16, i16* %1187, i64 %1270
  %1272 = getelementptr i16, i16* %1214, i64 %1270
  %1273 = bitcast i16* %1271 to <8 x i16>*
  %1274 = load <8 x i16>, <8 x i16>* %1273, align 2, !alias.scope !392, !noalias !389
  %1275 = getelementptr i16, i16* %1271, i64 8
  %1276 = bitcast i16* %1275 to <8 x i16>*
  %1277 = load <8 x i16>, <8 x i16>* %1276, align 2, !alias.scope !392, !noalias !389
  %1278 = bitcast i16* %1272 to <8 x i16>*
  store <8 x i16> %1274, <8 x i16>* %1278, align 2, !alias.scope !395, !noalias !397
  %1279 = getelementptr i16, i16* %1272, i64 8
  %1280 = bitcast i16* %1279 to <8 x i16>*
  store <8 x i16> %1277, <8 x i16>* %1280, align 2, !alias.scope !395, !noalias !397
  %1281 = add i64 %1236, 64
  %1282 = add i64 %1237, -4
  %1283 = icmp eq i64 %1282, 0
  br i1 %1283, label %1284, label %1235, !llvm.loop !398

1284:                                             ; preds = %1235, %1223
  %1285 = phi i64 [ 0, %1223 ], [ %1281, %1235 ]
  %1286 = icmp eq i64 %1231, 0
  br i1 %1286, label %1303, label %1287

1287:                                             ; preds = %1284, %1287
  %1288 = phi i64 [ %1300, %1287 ], [ %1285, %1284 ]
  %1289 = phi i64 [ %1301, %1287 ], [ %1231, %1284 ]
  %1290 = getelementptr i16, i16* %1187, i64 %1288
  %1291 = getelementptr i16, i16* %1214, i64 %1288
  %1292 = bitcast i16* %1290 to <8 x i16>*
  %1293 = load <8 x i16>, <8 x i16>* %1292, align 2, !alias.scope !392, !noalias !389
  %1294 = getelementptr i16, i16* %1290, i64 8
  %1295 = bitcast i16* %1294 to <8 x i16>*
  %1296 = load <8 x i16>, <8 x i16>* %1295, align 2, !alias.scope !392, !noalias !389
  %1297 = bitcast i16* %1291 to <8 x i16>*
  store <8 x i16> %1293, <8 x i16>* %1297, align 2, !alias.scope !395, !noalias !397
  %1298 = getelementptr i16, i16* %1291, i64 8
  %1299 = bitcast i16* %1298 to <8 x i16>*
  store <8 x i16> %1296, <8 x i16>* %1299, align 2, !alias.scope !395, !noalias !397
  %1300 = add i64 %1288, 16
  %1301 = add i64 %1289, -1
  %1302 = icmp eq i64 %1301, 0
  br i1 %1302, label %1303, label %1287, !llvm.loop !399

1303:                                             ; preds = %1287, %1284
  %1304 = icmp eq i64 %1188, %1224
  br i1 %1304, label %1358, label %1305

1305:                                             ; preds = %1303, %1216, %1209
  %1306 = phi i64 [ %1188, %1216 ], [ %1188, %1209 ], [ %1225, %1303 ]
  %1307 = phi i16* [ %1187, %1216 ], [ %1187, %1209 ], [ %1226, %1303 ]
  %1308 = phi i16* [ %1214, %1216 ], [ %1214, %1209 ], [ %1227, %1303 ]
  %1309 = add i64 %1306, -1
  %1310 = and i64 %1306, 7
  %1311 = icmp eq i64 %1310, 0
  br i1 %1311, label %1323, label %1312

1312:                                             ; preds = %1305, %1312
  %1313 = phi i64 [ %1318, %1312 ], [ %1306, %1305 ]
  %1314 = phi i16* [ %1320, %1312 ], [ %1307, %1305 ]
  %1315 = phi i16* [ %1319, %1312 ], [ %1308, %1305 ]
  %1316 = phi i64 [ %1321, %1312 ], [ %1310, %1305 ]
  %1317 = load i16, i16* %1314, align 2, !noalias !389
  store i16 %1317, i16* %1315, align 2, !noalias !389
  %1318 = add i64 %1313, -1
  %1319 = getelementptr inbounds i16, i16* %1315, i64 1
  %1320 = getelementptr inbounds i16, i16* %1314, i64 1
  %1321 = add i64 %1316, -1
  %1322 = icmp eq i64 %1321, 0
  br i1 %1322, label %1323, label %1312, !llvm.loop !400

1323:                                             ; preds = %1312, %1305
  %1324 = phi i64 [ %1306, %1305 ], [ %1318, %1312 ]
  %1325 = phi i16* [ %1307, %1305 ], [ %1320, %1312 ]
  %1326 = phi i16* [ %1308, %1305 ], [ %1319, %1312 ]
  %1327 = icmp ult i64 %1309, 7
  br i1 %1327, label %1358, label %1328

1328:                                             ; preds = %1323, %1328
  %1329 = phi i64 [ %1354, %1328 ], [ %1324, %1323 ]
  %1330 = phi i16* [ %1356, %1328 ], [ %1325, %1323 ]
  %1331 = phi i16* [ %1355, %1328 ], [ %1326, %1323 ]
  %1332 = load i16, i16* %1330, align 2, !noalias !389
  store i16 %1332, i16* %1331, align 2, !noalias !389
  %1333 = getelementptr inbounds i16, i16* %1331, i64 1
  %1334 = getelementptr inbounds i16, i16* %1330, i64 1
  %1335 = load i16, i16* %1334, align 2, !noalias !389
  store i16 %1335, i16* %1333, align 2, !noalias !389
  %1336 = getelementptr inbounds i16, i16* %1331, i64 2
  %1337 = getelementptr inbounds i16, i16* %1330, i64 2
  %1338 = load i16, i16* %1337, align 2, !noalias !389
  store i16 %1338, i16* %1336, align 2, !noalias !389
  %1339 = getelementptr inbounds i16, i16* %1331, i64 3
  %1340 = getelementptr inbounds i16, i16* %1330, i64 3
  %1341 = load i16, i16* %1340, align 2, !noalias !389
  store i16 %1341, i16* %1339, align 2, !noalias !389
  %1342 = getelementptr inbounds i16, i16* %1331, i64 4
  %1343 = getelementptr inbounds i16, i16* %1330, i64 4
  %1344 = load i16, i16* %1343, align 2, !noalias !389
  store i16 %1344, i16* %1342, align 2, !noalias !389
  %1345 = getelementptr inbounds i16, i16* %1331, i64 5
  %1346 = getelementptr inbounds i16, i16* %1330, i64 5
  %1347 = load i16, i16* %1346, align 2, !noalias !389
  store i16 %1347, i16* %1345, align 2, !noalias !389
  %1348 = getelementptr inbounds i16, i16* %1331, i64 6
  %1349 = getelementptr inbounds i16, i16* %1330, i64 6
  %1350 = load i16, i16* %1349, align 2, !noalias !389
  store i16 %1350, i16* %1348, align 2, !noalias !389
  %1351 = getelementptr inbounds i16, i16* %1331, i64 7
  %1352 = getelementptr inbounds i16, i16* %1330, i64 7
  %1353 = load i16, i16* %1352, align 2, !noalias !389
  store i16 %1353, i16* %1351, align 2, !noalias !389
  %1354 = add i64 %1329, -8
  %1355 = getelementptr inbounds i16, i16* %1331, i64 8
  %1356 = getelementptr inbounds i16, i16* %1330, i64 8
  %1357 = icmp eq i64 %1354, 0
  br i1 %1357, label %1358, label %1328, !llvm.loop !401

1358:                                             ; preds = %1323, %1328, %1303
  %1359 = add i64 %1204, %1188
  %1360 = load i8, i8* %1190, align 1, !noalias !389
  %1361 = icmp slt i8 %1360, 0
  br i1 %1361, label %1362, label %1364

1362:                                             ; preds = %1358
  %1363 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1359, i64* %1363, align 8, !noalias !389
  br label %1366

1364:                                             ; preds = %1358
  %1365 = trunc i64 %1359 to i8
  store i8 %1365, i8* %1190, align 1, !noalias !389
  br label %1366

1366:                                             ; preds = %1364, %1362
  %1367 = getelementptr inbounds i16, i16* %1213, i64 %1359
  store i16 0, i16* %1367, align 2, !noalias !389
  br label %1371

1368:                                             ; preds = %1202
  %1369 = add i64 %1204, %1188
  %1370 = sub i64 %1369, %1203
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %20, i64 %1203, i64 %1370, i64 %1204, i64 %1204, i64 0, i64 %1188, i16* %1187) #12, !noalias !389
  br label %1371

1371:                                             ; preds = %1207, %1366, %1368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1176, i8* nonnull align 8 %1177, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1177, i8 0, i64 24, i1 false) #12, !noalias !389
  %1372 = bitcast %"class.std::__1::basic_string.4"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1372) #12
  call void @_ZN13url_formatter27FormatUrlForSecurityDisplayERK4GURLNS_13SchemeDisplayE(%"class.std::__1::basic_string.4"* nonnull sret %21, %class.GURL* dereferenceable(120) %515, i32 0)
  %1373 = bitcast %"class.std::__1::basic_string.4"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1374 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1373, i64 0, i32 1, i32 1
  %1375 = load i8, i8* %1374, align 1, !noalias !402
  %1376 = icmp slt i8 %1375, 0
  %1377 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1378 = load i16*, i16** %1377, align 8, !noalias !402
  %1379 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1380 = load i64, i64* %1379, align 8, !noalias !402
  %1381 = bitcast %"class.std::__1::basic_string.4"* %21 to i16*
  %1382 = zext i8 %1375 to i64
  %1383 = select i1 %1376, i16* %1378, i16* %1381
  %1384 = select i1 %1376, i64 %1380, i64 %1382
  %1385 = bitcast %"class.std::__1::basic_string.4"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1386 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1385, i64 0, i32 1, i32 1
  %1387 = load i8, i8* %1386, align 1, !noalias !402
  %1388 = icmp slt i8 %1387, 0
  br i1 %1388, label %1389, label %1396

1389:                                             ; preds = %1371
  %1390 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1391 = load i64, i64* %1390, align 8, !noalias !402
  %1392 = and i64 %1391, 9223372036854775807
  %1393 = add nsw i64 %1392, -1
  %1394 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1395 = load i64, i64* %1394, align 8, !noalias !402
  br label %1398

1396:                                             ; preds = %1371
  %1397 = zext i8 %1387 to i64
  br label %1398

1398:                                             ; preds = %1396, %1389
  %1399 = phi i64 [ %1393, %1389 ], [ 10, %1396 ]
  %1400 = phi i64 [ %1395, %1389 ], [ %1397, %1396 ]
  %1401 = sub i64 %1399, %1400
  %1402 = icmp ult i64 %1401, %1384
  br i1 %1402, label %1564, label %1403

1403:                                             ; preds = %1398
  %1404 = icmp eq i64 %1384, 0
  br i1 %1404, label %1567, label %1405

1405:                                             ; preds = %1403
  %1406 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1407 = load i16*, i16** %1406, align 8, !noalias !402
  %1408 = bitcast %"class.std::__1::basic_string.4"* %19 to i16*
  %1409 = select i1 %1388, i16* %1407, i16* %1408
  %1410 = getelementptr inbounds i16, i16* %1409, i64 %1400
  %1411 = icmp ult i64 %1384, 16
  br i1 %1411, label %1501, label %1412

1412:                                             ; preds = %1405
  %1413 = add i64 %1384, %1400
  %1414 = getelementptr i16, i16* %1409, i64 %1413
  %1415 = getelementptr i16, i16* %1383, i64 %1384
  %1416 = icmp ult i16* %1410, %1415
  %1417 = icmp ult i16* %1383, %1414
  %1418 = and i1 %1416, %1417
  br i1 %1418, label %1501, label %1419

1419:                                             ; preds = %1412
  %1420 = and i64 %1384, -16
  %1421 = sub i64 %1384, %1420
  %1422 = getelementptr i16, i16* %1383, i64 %1420
  %1423 = getelementptr i16, i16* %1410, i64 %1420
  %1424 = add i64 %1420, -16
  %1425 = lshr exact i64 %1424, 4
  %1426 = add nuw nsw i64 %1425, 1
  %1427 = and i64 %1426, 3
  %1428 = icmp ult i64 %1424, 48
  br i1 %1428, label %1480, label %1429

1429:                                             ; preds = %1419
  %1430 = sub nsw i64 %1426, %1427
  br label %1431

1431:                                             ; preds = %1431, %1429
  %1432 = phi i64 [ 0, %1429 ], [ %1477, %1431 ]
  %1433 = phi i64 [ %1430, %1429 ], [ %1478, %1431 ]
  %1434 = getelementptr i16, i16* %1383, i64 %1432
  %1435 = getelementptr i16, i16* %1410, i64 %1432
  %1436 = bitcast i16* %1434 to <8 x i16>*
  %1437 = load <8 x i16>, <8 x i16>* %1436, align 2, !alias.scope !405, !noalias !402
  %1438 = getelementptr i16, i16* %1434, i64 8
  %1439 = bitcast i16* %1438 to <8 x i16>*
  %1440 = load <8 x i16>, <8 x i16>* %1439, align 2, !alias.scope !405, !noalias !402
  %1441 = bitcast i16* %1435 to <8 x i16>*
  store <8 x i16> %1437, <8 x i16>* %1441, align 2, !alias.scope !408, !noalias !410
  %1442 = getelementptr i16, i16* %1435, i64 8
  %1443 = bitcast i16* %1442 to <8 x i16>*
  store <8 x i16> %1440, <8 x i16>* %1443, align 2, !alias.scope !408, !noalias !410
  %1444 = or i64 %1432, 16
  %1445 = getelementptr i16, i16* %1383, i64 %1444
  %1446 = getelementptr i16, i16* %1410, i64 %1444
  %1447 = bitcast i16* %1445 to <8 x i16>*
  %1448 = load <8 x i16>, <8 x i16>* %1447, align 2, !alias.scope !405, !noalias !402
  %1449 = getelementptr i16, i16* %1445, i64 8
  %1450 = bitcast i16* %1449 to <8 x i16>*
  %1451 = load <8 x i16>, <8 x i16>* %1450, align 2, !alias.scope !405, !noalias !402
  %1452 = bitcast i16* %1446 to <8 x i16>*
  store <8 x i16> %1448, <8 x i16>* %1452, align 2, !alias.scope !408, !noalias !410
  %1453 = getelementptr i16, i16* %1446, i64 8
  %1454 = bitcast i16* %1453 to <8 x i16>*
  store <8 x i16> %1451, <8 x i16>* %1454, align 2, !alias.scope !408, !noalias !410
  %1455 = or i64 %1432, 32
  %1456 = getelementptr i16, i16* %1383, i64 %1455
  %1457 = getelementptr i16, i16* %1410, i64 %1455
  %1458 = bitcast i16* %1456 to <8 x i16>*
  %1459 = load <8 x i16>, <8 x i16>* %1458, align 2, !alias.scope !405, !noalias !402
  %1460 = getelementptr i16, i16* %1456, i64 8
  %1461 = bitcast i16* %1460 to <8 x i16>*
  %1462 = load <8 x i16>, <8 x i16>* %1461, align 2, !alias.scope !405, !noalias !402
  %1463 = bitcast i16* %1457 to <8 x i16>*
  store <8 x i16> %1459, <8 x i16>* %1463, align 2, !alias.scope !408, !noalias !410
  %1464 = getelementptr i16, i16* %1457, i64 8
  %1465 = bitcast i16* %1464 to <8 x i16>*
  store <8 x i16> %1462, <8 x i16>* %1465, align 2, !alias.scope !408, !noalias !410
  %1466 = or i64 %1432, 48
  %1467 = getelementptr i16, i16* %1383, i64 %1466
  %1468 = getelementptr i16, i16* %1410, i64 %1466
  %1469 = bitcast i16* %1467 to <8 x i16>*
  %1470 = load <8 x i16>, <8 x i16>* %1469, align 2, !alias.scope !405, !noalias !402
  %1471 = getelementptr i16, i16* %1467, i64 8
  %1472 = bitcast i16* %1471 to <8 x i16>*
  %1473 = load <8 x i16>, <8 x i16>* %1472, align 2, !alias.scope !405, !noalias !402
  %1474 = bitcast i16* %1468 to <8 x i16>*
  store <8 x i16> %1470, <8 x i16>* %1474, align 2, !alias.scope !408, !noalias !410
  %1475 = getelementptr i16, i16* %1468, i64 8
  %1476 = bitcast i16* %1475 to <8 x i16>*
  store <8 x i16> %1473, <8 x i16>* %1476, align 2, !alias.scope !408, !noalias !410
  %1477 = add i64 %1432, 64
  %1478 = add i64 %1433, -4
  %1479 = icmp eq i64 %1478, 0
  br i1 %1479, label %1480, label %1431, !llvm.loop !411

1480:                                             ; preds = %1431, %1419
  %1481 = phi i64 [ 0, %1419 ], [ %1477, %1431 ]
  %1482 = icmp eq i64 %1427, 0
  br i1 %1482, label %1499, label %1483

1483:                                             ; preds = %1480, %1483
  %1484 = phi i64 [ %1496, %1483 ], [ %1481, %1480 ]
  %1485 = phi i64 [ %1497, %1483 ], [ %1427, %1480 ]
  %1486 = getelementptr i16, i16* %1383, i64 %1484
  %1487 = getelementptr i16, i16* %1410, i64 %1484
  %1488 = bitcast i16* %1486 to <8 x i16>*
  %1489 = load <8 x i16>, <8 x i16>* %1488, align 2, !alias.scope !405, !noalias !402
  %1490 = getelementptr i16, i16* %1486, i64 8
  %1491 = bitcast i16* %1490 to <8 x i16>*
  %1492 = load <8 x i16>, <8 x i16>* %1491, align 2, !alias.scope !405, !noalias !402
  %1493 = bitcast i16* %1487 to <8 x i16>*
  store <8 x i16> %1489, <8 x i16>* %1493, align 2, !alias.scope !408, !noalias !410
  %1494 = getelementptr i16, i16* %1487, i64 8
  %1495 = bitcast i16* %1494 to <8 x i16>*
  store <8 x i16> %1492, <8 x i16>* %1495, align 2, !alias.scope !408, !noalias !410
  %1496 = add i64 %1484, 16
  %1497 = add i64 %1485, -1
  %1498 = icmp eq i64 %1497, 0
  br i1 %1498, label %1499, label %1483, !llvm.loop !412

1499:                                             ; preds = %1483, %1480
  %1500 = icmp eq i64 %1384, %1420
  br i1 %1500, label %1554, label %1501

1501:                                             ; preds = %1499, %1412, %1405
  %1502 = phi i64 [ %1384, %1412 ], [ %1384, %1405 ], [ %1421, %1499 ]
  %1503 = phi i16* [ %1383, %1412 ], [ %1383, %1405 ], [ %1422, %1499 ]
  %1504 = phi i16* [ %1410, %1412 ], [ %1410, %1405 ], [ %1423, %1499 ]
  %1505 = add i64 %1502, -1
  %1506 = and i64 %1502, 7
  %1507 = icmp eq i64 %1506, 0
  br i1 %1507, label %1519, label %1508

1508:                                             ; preds = %1501, %1508
  %1509 = phi i64 [ %1514, %1508 ], [ %1502, %1501 ]
  %1510 = phi i16* [ %1516, %1508 ], [ %1503, %1501 ]
  %1511 = phi i16* [ %1515, %1508 ], [ %1504, %1501 ]
  %1512 = phi i64 [ %1517, %1508 ], [ %1506, %1501 ]
  %1513 = load i16, i16* %1510, align 2, !noalias !402
  store i16 %1513, i16* %1511, align 2, !noalias !402
  %1514 = add i64 %1509, -1
  %1515 = getelementptr inbounds i16, i16* %1511, i64 1
  %1516 = getelementptr inbounds i16, i16* %1510, i64 1
  %1517 = add i64 %1512, -1
  %1518 = icmp eq i64 %1517, 0
  br i1 %1518, label %1519, label %1508, !llvm.loop !413

1519:                                             ; preds = %1508, %1501
  %1520 = phi i64 [ %1502, %1501 ], [ %1514, %1508 ]
  %1521 = phi i16* [ %1503, %1501 ], [ %1516, %1508 ]
  %1522 = phi i16* [ %1504, %1501 ], [ %1515, %1508 ]
  %1523 = icmp ult i64 %1505, 7
  br i1 %1523, label %1554, label %1524

1524:                                             ; preds = %1519, %1524
  %1525 = phi i64 [ %1550, %1524 ], [ %1520, %1519 ]
  %1526 = phi i16* [ %1552, %1524 ], [ %1521, %1519 ]
  %1527 = phi i16* [ %1551, %1524 ], [ %1522, %1519 ]
  %1528 = load i16, i16* %1526, align 2, !noalias !402
  store i16 %1528, i16* %1527, align 2, !noalias !402
  %1529 = getelementptr inbounds i16, i16* %1527, i64 1
  %1530 = getelementptr inbounds i16, i16* %1526, i64 1
  %1531 = load i16, i16* %1530, align 2, !noalias !402
  store i16 %1531, i16* %1529, align 2, !noalias !402
  %1532 = getelementptr inbounds i16, i16* %1527, i64 2
  %1533 = getelementptr inbounds i16, i16* %1526, i64 2
  %1534 = load i16, i16* %1533, align 2, !noalias !402
  store i16 %1534, i16* %1532, align 2, !noalias !402
  %1535 = getelementptr inbounds i16, i16* %1527, i64 3
  %1536 = getelementptr inbounds i16, i16* %1526, i64 3
  %1537 = load i16, i16* %1536, align 2, !noalias !402
  store i16 %1537, i16* %1535, align 2, !noalias !402
  %1538 = getelementptr inbounds i16, i16* %1527, i64 4
  %1539 = getelementptr inbounds i16, i16* %1526, i64 4
  %1540 = load i16, i16* %1539, align 2, !noalias !402
  store i16 %1540, i16* %1538, align 2, !noalias !402
  %1541 = getelementptr inbounds i16, i16* %1527, i64 5
  %1542 = getelementptr inbounds i16, i16* %1526, i64 5
  %1543 = load i16, i16* %1542, align 2, !noalias !402
  store i16 %1543, i16* %1541, align 2, !noalias !402
  %1544 = getelementptr inbounds i16, i16* %1527, i64 6
  %1545 = getelementptr inbounds i16, i16* %1526, i64 6
  %1546 = load i16, i16* %1545, align 2, !noalias !402
  store i16 %1546, i16* %1544, align 2, !noalias !402
  %1547 = getelementptr inbounds i16, i16* %1527, i64 7
  %1548 = getelementptr inbounds i16, i16* %1526, i64 7
  %1549 = load i16, i16* %1548, align 2, !noalias !402
  store i16 %1549, i16* %1547, align 2, !noalias !402
  %1550 = add i64 %1525, -8
  %1551 = getelementptr inbounds i16, i16* %1527, i64 8
  %1552 = getelementptr inbounds i16, i16* %1526, i64 8
  %1553 = icmp eq i64 %1550, 0
  br i1 %1553, label %1554, label %1524, !llvm.loop !414

1554:                                             ; preds = %1519, %1524, %1499
  %1555 = add i64 %1400, %1384
  %1556 = load i8, i8* %1386, align 1, !noalias !402
  %1557 = icmp slt i8 %1556, 0
  br i1 %1557, label %1558, label %1560

1558:                                             ; preds = %1554
  %1559 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1555, i64* %1559, align 8, !noalias !402
  br label %1562

1560:                                             ; preds = %1554
  %1561 = trunc i64 %1555 to i8
  store i8 %1561, i8* %1386, align 1, !noalias !402
  br label %1562

1562:                                             ; preds = %1560, %1558
  %1563 = getelementptr inbounds i16, i16* %1409, i64 %1555
  store i16 0, i16* %1563, align 2, !noalias !402
  br label %1567

1564:                                             ; preds = %1398
  %1565 = add i64 %1400, %1384
  %1566 = sub i64 %1565, %1399
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %19, i64 %1399, i64 %1566, i64 %1400, i64 %1400, i64 0, i64 %1384, i16* %1383) #12, !noalias !402
  br label %1567

1567:                                             ; preds = %1403, %1562, %1564
  %1568 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1568, i8* nonnull align 8 %1176, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1176, i8 0, i64 24, i1 false) #12, !noalias !402
  %1569 = load i8, i8* %1374, align 1
  %1570 = icmp slt i8 %1569, 0
  br i1 %1570, label %1572, label %1571

1571:                                             ; preds = %1567
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1372) #12
  br label %1580

1572:                                             ; preds = %1567
  %1573 = bitcast %"class.std::__1::basic_string.4"* %21 to i8**
  %1574 = load i8*, i8** %1573, align 8
  call void @_ZdlPv(i8* %1574) #14
  %1575 = load i8, i8* %1386, align 1
  %1576 = icmp slt i8 %1575, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1372) #12
  br i1 %1576, label %1577, label %1580

1577:                                             ; preds = %1572
  %1578 = bitcast %"class.std::__1::basic_string.4"* %19 to i8**
  %1579 = load i8*, i8** %1578, align 8
  call void @_ZdlPv(i8* %1579) #14
  br label %1580

1580:                                             ; preds = %1571, %1572, %1577
  %1581 = load i8, i8* %1190, align 1
  %1582 = icmp slt i8 %1581, 0
  br i1 %1582, label %1583, label %1586

1583:                                             ; preds = %1580
  %1584 = bitcast %"class.std::__1::basic_string.4"* %20 to i8**
  %1585 = load i8*, i8** %1584, align 8
  call void @_ZdlPv(i8* %1585) #14
  br label %1586

1586:                                             ; preds = %1580, %1583
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1177) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1176) #12
  br label %2492

1587:                                             ; preds = %510
  %1588 = bitcast %class.GURL* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %1588) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1588, i8 -86, i64 120, i1 false)
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %22, %class.GURL* %1) #12
  %1589 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 0, i32 1
  %1590 = load i32, i32* %1589, align 4
  %1591 = icmp slt i32 %1590, 1
  br i1 %1591, label %1605, label %1592

1592:                                             ; preds = %1587
  %1593 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 0, i32 0
  %1594 = load i32, i32* %1593, align 8
  %1595 = sext i32 %1594 to i64
  %1596 = bitcast %class.GURL* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1597 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1596, i64 0, i32 1, i32 0
  %1598 = load i8, i8* %1597, align 1
  %1599 = icmp slt i8 %1598, 0
  %1600 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1601 = load i8*, i8** %1600, align 8
  %1602 = select i1 %1599, i8* %1601, i8* %1588
  %1603 = getelementptr inbounds i8, i8* %1602, i64 %1595
  %1604 = sext i32 %1590 to i64
  br label %1605

1605:                                             ; preds = %1587, %1592
  %1606 = phi i8* [ %1603, %1592 ], [ null, %1587 ]
  %1607 = phi i64 [ %1604, %1592 ], [ 0, %1587 ]
  %1608 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 3, i32 1
  %1609 = load i32, i32* %1608, align 4
  %1610 = icmp slt i32 %1609, 1
  br i1 %1610, label %1624, label %1611

1611:                                             ; preds = %1605
  %1612 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 3, i32 0
  %1613 = load i32, i32* %1612, align 8
  %1614 = sext i32 %1613 to i64
  %1615 = bitcast %class.GURL* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1616 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1615, i64 0, i32 1, i32 0
  %1617 = load i8, i8* %1616, align 1
  %1618 = icmp slt i8 %1617, 0
  %1619 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1620 = load i8*, i8** %1619, align 8
  %1621 = select i1 %1618, i8* %1620, i8* %1588
  %1622 = getelementptr inbounds i8, i8* %1621, i64 %1614
  %1623 = sext i32 %1609 to i64
  br label %1624

1624:                                             ; preds = %1605, %1611
  %1625 = phi i8* [ %1622, %1611 ], [ null, %1605 ]
  %1626 = phi i64 [ %1623, %1611 ], [ 0, %1605 ]
  %1627 = bitcast %"class.std::__1::basic_string.4"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1627) #12
  %1628 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1629 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1630 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1627, i8 0, i64 24, i1 false) #12
  %1631 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_116ShouldShowSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEN13url_formatter13SchemeDisplayE(i8* %1606, i64 %1607, i32 %2)
  br i1 %1631, label %1632, label %1854

1632:                                             ; preds = %1624
  %1633 = getelementptr inbounds [15 x i8], [15 x i8]* %24, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %1633)
  %1634 = bitcast %"class.std::__1::basic_string.4"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1634) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %25, i8* %1606, i64 %1607) #12
  %1635 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1636 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1635, i64 0, i32 1, i32 1
  %1637 = load i8, i8* %1636, align 1, !noalias !415
  %1638 = icmp slt i8 %1637, 0
  %1639 = load i16*, i16** %56, align 8, !noalias !415
  %1640 = load i64, i64* %57, align 8, !noalias !415
  %1641 = bitcast %"class.std::__1::basic_string.4"* %8 to i16*
  %1642 = zext i8 %1637 to i64
  %1643 = select i1 %1638, i16* %1639, i16* %1641
  %1644 = select i1 %1638, i64 %1640, i64 %1642
  %1645 = bitcast %"class.std::__1::basic_string.4"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1646 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1645, i64 0, i32 1, i32 1
  %1647 = load i8, i8* %1646, align 1, !noalias !415
  %1648 = icmp slt i8 %1647, 0
  br i1 %1648, label %1649, label %1656

1649:                                             ; preds = %1632
  %1650 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1651 = load i64, i64* %1650, align 8, !noalias !415
  %1652 = and i64 %1651, 9223372036854775807
  %1653 = add nsw i64 %1652, -1
  %1654 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1655 = load i64, i64* %1654, align 8, !noalias !415
  br label %1658

1656:                                             ; preds = %1632
  %1657 = zext i8 %1647 to i64
  br label %1658

1658:                                             ; preds = %1656, %1649
  %1659 = phi i64 [ %1653, %1649 ], [ 10, %1656 ]
  %1660 = phi i64 [ %1655, %1649 ], [ %1657, %1656 ]
  %1661 = sub i64 %1659, %1660
  %1662 = icmp ult i64 %1661, %1644
  br i1 %1662, label %1824, label %1663

1663:                                             ; preds = %1658
  %1664 = icmp eq i64 %1644, 0
  br i1 %1664, label %1827, label %1665

1665:                                             ; preds = %1663
  %1666 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1667 = load i16*, i16** %1666, align 8, !noalias !415
  %1668 = bitcast %"class.std::__1::basic_string.4"* %25 to i16*
  %1669 = select i1 %1648, i16* %1667, i16* %1668
  %1670 = getelementptr inbounds i16, i16* %1669, i64 %1660
  %1671 = icmp ult i64 %1644, 16
  br i1 %1671, label %1761, label %1672

1672:                                             ; preds = %1665
  %1673 = add i64 %1644, %1660
  %1674 = getelementptr i16, i16* %1669, i64 %1673
  %1675 = getelementptr i16, i16* %1643, i64 %1644
  %1676 = icmp ult i16* %1670, %1675
  %1677 = icmp ult i16* %1643, %1674
  %1678 = and i1 %1676, %1677
  br i1 %1678, label %1761, label %1679

1679:                                             ; preds = %1672
  %1680 = and i64 %1644, -16
  %1681 = sub i64 %1644, %1680
  %1682 = getelementptr i16, i16* %1643, i64 %1680
  %1683 = getelementptr i16, i16* %1670, i64 %1680
  %1684 = add i64 %1680, -16
  %1685 = lshr exact i64 %1684, 4
  %1686 = add nuw nsw i64 %1685, 1
  %1687 = and i64 %1686, 3
  %1688 = icmp ult i64 %1684, 48
  br i1 %1688, label %1740, label %1689

1689:                                             ; preds = %1679
  %1690 = sub nsw i64 %1686, %1687
  br label %1691

1691:                                             ; preds = %1691, %1689
  %1692 = phi i64 [ 0, %1689 ], [ %1737, %1691 ]
  %1693 = phi i64 [ %1690, %1689 ], [ %1738, %1691 ]
  %1694 = getelementptr i16, i16* %1643, i64 %1692
  %1695 = getelementptr i16, i16* %1670, i64 %1692
  %1696 = bitcast i16* %1694 to <8 x i16>*
  %1697 = load <8 x i16>, <8 x i16>* %1696, align 2, !alias.scope !418, !noalias !415
  %1698 = getelementptr i16, i16* %1694, i64 8
  %1699 = bitcast i16* %1698 to <8 x i16>*
  %1700 = load <8 x i16>, <8 x i16>* %1699, align 2, !alias.scope !418, !noalias !415
  %1701 = bitcast i16* %1695 to <8 x i16>*
  store <8 x i16> %1697, <8 x i16>* %1701, align 2, !alias.scope !421, !noalias !423
  %1702 = getelementptr i16, i16* %1695, i64 8
  %1703 = bitcast i16* %1702 to <8 x i16>*
  store <8 x i16> %1700, <8 x i16>* %1703, align 2, !alias.scope !421, !noalias !423
  %1704 = or i64 %1692, 16
  %1705 = getelementptr i16, i16* %1643, i64 %1704
  %1706 = getelementptr i16, i16* %1670, i64 %1704
  %1707 = bitcast i16* %1705 to <8 x i16>*
  %1708 = load <8 x i16>, <8 x i16>* %1707, align 2, !alias.scope !418, !noalias !415
  %1709 = getelementptr i16, i16* %1705, i64 8
  %1710 = bitcast i16* %1709 to <8 x i16>*
  %1711 = load <8 x i16>, <8 x i16>* %1710, align 2, !alias.scope !418, !noalias !415
  %1712 = bitcast i16* %1706 to <8 x i16>*
  store <8 x i16> %1708, <8 x i16>* %1712, align 2, !alias.scope !421, !noalias !423
  %1713 = getelementptr i16, i16* %1706, i64 8
  %1714 = bitcast i16* %1713 to <8 x i16>*
  store <8 x i16> %1711, <8 x i16>* %1714, align 2, !alias.scope !421, !noalias !423
  %1715 = or i64 %1692, 32
  %1716 = getelementptr i16, i16* %1643, i64 %1715
  %1717 = getelementptr i16, i16* %1670, i64 %1715
  %1718 = bitcast i16* %1716 to <8 x i16>*
  %1719 = load <8 x i16>, <8 x i16>* %1718, align 2, !alias.scope !418, !noalias !415
  %1720 = getelementptr i16, i16* %1716, i64 8
  %1721 = bitcast i16* %1720 to <8 x i16>*
  %1722 = load <8 x i16>, <8 x i16>* %1721, align 2, !alias.scope !418, !noalias !415
  %1723 = bitcast i16* %1717 to <8 x i16>*
  store <8 x i16> %1719, <8 x i16>* %1723, align 2, !alias.scope !421, !noalias !423
  %1724 = getelementptr i16, i16* %1717, i64 8
  %1725 = bitcast i16* %1724 to <8 x i16>*
  store <8 x i16> %1722, <8 x i16>* %1725, align 2, !alias.scope !421, !noalias !423
  %1726 = or i64 %1692, 48
  %1727 = getelementptr i16, i16* %1643, i64 %1726
  %1728 = getelementptr i16, i16* %1670, i64 %1726
  %1729 = bitcast i16* %1727 to <8 x i16>*
  %1730 = load <8 x i16>, <8 x i16>* %1729, align 2, !alias.scope !418, !noalias !415
  %1731 = getelementptr i16, i16* %1727, i64 8
  %1732 = bitcast i16* %1731 to <8 x i16>*
  %1733 = load <8 x i16>, <8 x i16>* %1732, align 2, !alias.scope !418, !noalias !415
  %1734 = bitcast i16* %1728 to <8 x i16>*
  store <8 x i16> %1730, <8 x i16>* %1734, align 2, !alias.scope !421, !noalias !423
  %1735 = getelementptr i16, i16* %1728, i64 8
  %1736 = bitcast i16* %1735 to <8 x i16>*
  store <8 x i16> %1733, <8 x i16>* %1736, align 2, !alias.scope !421, !noalias !423
  %1737 = add i64 %1692, 64
  %1738 = add i64 %1693, -4
  %1739 = icmp eq i64 %1738, 0
  br i1 %1739, label %1740, label %1691, !llvm.loop !424

1740:                                             ; preds = %1691, %1679
  %1741 = phi i64 [ 0, %1679 ], [ %1737, %1691 ]
  %1742 = icmp eq i64 %1687, 0
  br i1 %1742, label %1759, label %1743

1743:                                             ; preds = %1740, %1743
  %1744 = phi i64 [ %1756, %1743 ], [ %1741, %1740 ]
  %1745 = phi i64 [ %1757, %1743 ], [ %1687, %1740 ]
  %1746 = getelementptr i16, i16* %1643, i64 %1744
  %1747 = getelementptr i16, i16* %1670, i64 %1744
  %1748 = bitcast i16* %1746 to <8 x i16>*
  %1749 = load <8 x i16>, <8 x i16>* %1748, align 2, !alias.scope !418, !noalias !415
  %1750 = getelementptr i16, i16* %1746, i64 8
  %1751 = bitcast i16* %1750 to <8 x i16>*
  %1752 = load <8 x i16>, <8 x i16>* %1751, align 2, !alias.scope !418, !noalias !415
  %1753 = bitcast i16* %1747 to <8 x i16>*
  store <8 x i16> %1749, <8 x i16>* %1753, align 2, !alias.scope !421, !noalias !423
  %1754 = getelementptr i16, i16* %1747, i64 8
  %1755 = bitcast i16* %1754 to <8 x i16>*
  store <8 x i16> %1752, <8 x i16>* %1755, align 2, !alias.scope !421, !noalias !423
  %1756 = add i64 %1744, 16
  %1757 = add i64 %1745, -1
  %1758 = icmp eq i64 %1757, 0
  br i1 %1758, label %1759, label %1743, !llvm.loop !425

1759:                                             ; preds = %1743, %1740
  %1760 = icmp eq i64 %1644, %1680
  br i1 %1760, label %1814, label %1761

1761:                                             ; preds = %1759, %1672, %1665
  %1762 = phi i64 [ %1644, %1672 ], [ %1644, %1665 ], [ %1681, %1759 ]
  %1763 = phi i16* [ %1643, %1672 ], [ %1643, %1665 ], [ %1682, %1759 ]
  %1764 = phi i16* [ %1670, %1672 ], [ %1670, %1665 ], [ %1683, %1759 ]
  %1765 = add i64 %1762, -1
  %1766 = and i64 %1762, 7
  %1767 = icmp eq i64 %1766, 0
  br i1 %1767, label %1779, label %1768

1768:                                             ; preds = %1761, %1768
  %1769 = phi i64 [ %1774, %1768 ], [ %1762, %1761 ]
  %1770 = phi i16* [ %1776, %1768 ], [ %1763, %1761 ]
  %1771 = phi i16* [ %1775, %1768 ], [ %1764, %1761 ]
  %1772 = phi i64 [ %1777, %1768 ], [ %1766, %1761 ]
  %1773 = load i16, i16* %1770, align 2, !noalias !415
  store i16 %1773, i16* %1771, align 2, !noalias !415
  %1774 = add i64 %1769, -1
  %1775 = getelementptr inbounds i16, i16* %1771, i64 1
  %1776 = getelementptr inbounds i16, i16* %1770, i64 1
  %1777 = add i64 %1772, -1
  %1778 = icmp eq i64 %1777, 0
  br i1 %1778, label %1779, label %1768, !llvm.loop !426

1779:                                             ; preds = %1768, %1761
  %1780 = phi i64 [ %1762, %1761 ], [ %1774, %1768 ]
  %1781 = phi i16* [ %1763, %1761 ], [ %1776, %1768 ]
  %1782 = phi i16* [ %1764, %1761 ], [ %1775, %1768 ]
  %1783 = icmp ult i64 %1765, 7
  br i1 %1783, label %1814, label %1784

1784:                                             ; preds = %1779, %1784
  %1785 = phi i64 [ %1810, %1784 ], [ %1780, %1779 ]
  %1786 = phi i16* [ %1812, %1784 ], [ %1781, %1779 ]
  %1787 = phi i16* [ %1811, %1784 ], [ %1782, %1779 ]
  %1788 = load i16, i16* %1786, align 2, !noalias !415
  store i16 %1788, i16* %1787, align 2, !noalias !415
  %1789 = getelementptr inbounds i16, i16* %1787, i64 1
  %1790 = getelementptr inbounds i16, i16* %1786, i64 1
  %1791 = load i16, i16* %1790, align 2, !noalias !415
  store i16 %1791, i16* %1789, align 2, !noalias !415
  %1792 = getelementptr inbounds i16, i16* %1787, i64 2
  %1793 = getelementptr inbounds i16, i16* %1786, i64 2
  %1794 = load i16, i16* %1793, align 2, !noalias !415
  store i16 %1794, i16* %1792, align 2, !noalias !415
  %1795 = getelementptr inbounds i16, i16* %1787, i64 3
  %1796 = getelementptr inbounds i16, i16* %1786, i64 3
  %1797 = load i16, i16* %1796, align 2, !noalias !415
  store i16 %1797, i16* %1795, align 2, !noalias !415
  %1798 = getelementptr inbounds i16, i16* %1787, i64 4
  %1799 = getelementptr inbounds i16, i16* %1786, i64 4
  %1800 = load i16, i16* %1799, align 2, !noalias !415
  store i16 %1800, i16* %1798, align 2, !noalias !415
  %1801 = getelementptr inbounds i16, i16* %1787, i64 5
  %1802 = getelementptr inbounds i16, i16* %1786, i64 5
  %1803 = load i16, i16* %1802, align 2, !noalias !415
  store i16 %1803, i16* %1801, align 2, !noalias !415
  %1804 = getelementptr inbounds i16, i16* %1787, i64 6
  %1805 = getelementptr inbounds i16, i16* %1786, i64 6
  %1806 = load i16, i16* %1805, align 2, !noalias !415
  store i16 %1806, i16* %1804, align 2, !noalias !415
  %1807 = getelementptr inbounds i16, i16* %1787, i64 7
  %1808 = getelementptr inbounds i16, i16* %1786, i64 7
  %1809 = load i16, i16* %1808, align 2, !noalias !415
  store i16 %1809, i16* %1807, align 2, !noalias !415
  %1810 = add i64 %1785, -8
  %1811 = getelementptr inbounds i16, i16* %1787, i64 8
  %1812 = getelementptr inbounds i16, i16* %1786, i64 8
  %1813 = icmp eq i64 %1810, 0
  br i1 %1813, label %1814, label %1784, !llvm.loop !427

1814:                                             ; preds = %1779, %1784, %1759
  %1815 = add i64 %1660, %1644
  %1816 = load i8, i8* %1646, align 1, !noalias !415
  %1817 = icmp slt i8 %1816, 0
  br i1 %1817, label %1818, label %1820

1818:                                             ; preds = %1814
  %1819 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1815, i64* %1819, align 8, !noalias !415
  br label %1822

1820:                                             ; preds = %1814
  %1821 = trunc i64 %1815 to i8
  store i8 %1821, i8* %1646, align 1, !noalias !415
  br label %1822

1822:                                             ; preds = %1820, %1818
  %1823 = getelementptr inbounds i16, i16* %1669, i64 %1815
  store i16 0, i16* %1823, align 2, !noalias !415
  br label %1827

1824:                                             ; preds = %1658
  %1825 = add i64 %1660, %1644
  %1826 = sub i64 %1825, %1659
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %25, i64 %1659, i64 %1826, i64 %1660, i64 %1660, i64 0, i64 %1644, i16* %1643) #12, !noalias !415
  br label %1827

1827:                                             ; preds = %1663, %1822, %1824
  %1828 = bitcast %"class.std::__1::basic_string.4"* %25 to i8**
  %1829 = bitcast %"class.std::__1::basic_string.4"* %25 to i64*
  %1830 = load i64, i64* %1829, align 8
  %1831 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1832 = bitcast i64* %1831 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1633, i8* align 8 %1832, i64 15, i1 false)
  %1833 = getelementptr inbounds i8, i8* %1634, i64 23
  %1834 = load i8, i8* %1833, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1634, i8 0, i64 24, i1 false) #12, !noalias !415
  %1835 = bitcast %"class.std::__1::basic_string.4"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1836 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1835, i64 0, i32 1, i32 1
  %1837 = load i8, i8* %1836, align 1
  %1838 = icmp slt i8 %1837, 0
  br i1 %1838, label %1843, label %1839

1839:                                             ; preds = %1827
  %1840 = bitcast %"class.std::__1::basic_string.4"* %23 to i64*
  store i64 %1830, i64* %1840, align 8
  %1841 = bitcast i64* %1629 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1841, i8* nonnull align 8 %1633, i64 15, i1 false)
  %1842 = getelementptr inbounds i8, i8* %1627, i64 23
  store i8 %1834, i8* %1842, align 1
  br label %1853

1843:                                             ; preds = %1827
  %1844 = bitcast %"class.std::__1::basic_string.4"* %23 to i8**
  %1845 = load i8*, i8** %1844, align 8
  call void @_ZdlPv(i8* %1845) #14
  %1846 = load i8, i8* %1646, align 1
  %1847 = bitcast %"class.std::__1::basic_string.4"* %23 to i64*
  store i64 %1830, i64* %1847, align 8
  %1848 = bitcast i64* %1629 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1848, i8* nonnull align 8 %1633, i64 15, i1 false)
  %1849 = getelementptr inbounds i8, i8* %1627, i64 23
  store i8 %1834, i8* %1849, align 1
  %1850 = icmp slt i8 %1846, 0
  br i1 %1850, label %1851, label %1853

1851:                                             ; preds = %1843
  %1852 = load i8*, i8** %1828, align 8
  call void @_ZdlPv(i8* %1852) #14
  br label %1853

1853:                                             ; preds = %1839, %1843, %1851
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1634) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1633)
  br label %1854

1854:                                             ; preds = %1853, %1624
  %1855 = bitcast %"class.std::__1::basic_string.4"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1855) #12
  %1856 = bitcast %"class.std::__1::basic_string.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1856) #12, !noalias !428
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1856, i8 -86, i64 24, i1 false) #12, !noalias !428
  call void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %4, i8* %1625, i64 %1626) #12, !noalias !428
  %1857 = call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %4) #12, !noalias !428
  br i1 %1857, label %1858, label %1860

1858:                                             ; preds = %1854
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %26, i8* %1625, i64 %1626) #12
  %1859 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %2041

1860:                                             ; preds = %1854
  %1861 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1862 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1861, i64 0, i32 1, i32 1
  %1863 = load i8, i8* %1862, align 1
  %1864 = icmp slt i8 %1863, 0
  br i1 %1864, label %1866, label %1865

1865:                                             ; preds = %1860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1855, i8* nonnull align 8 %1856, i64 24, i1 false) #12
  br label %2041

1866:                                             ; preds = %1860
  %1867 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1868 = load i16*, i16** %1867, align 8
  %1869 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1870 = load i64, i64* %1869, align 8
  %1871 = icmp ult i64 %1870, 11
  br i1 %1871, label %1872, label %1877

1872:                                             ; preds = %1866
  %1873 = bitcast %"class.std::__1::basic_string.4"* %26 to i16*
  %1874 = trunc i64 %1870 to i8
  %1875 = bitcast %"class.std::__1::basic_string.4"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1876 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1875, i64 0, i32 1, i32 1
  store i8 %1874, i8* %1876, align 1
  br label %1894

1877:                                             ; preds = %1866
  %1878 = icmp ugt i64 %1870, 9223372036854775791
  br i1 %1878, label %1879, label %1881

1879:                                             ; preds = %1877
  %1880 = bitcast %"class.std::__1::basic_string.4"* %26 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1880) #13
  unreachable

1881:                                             ; preds = %1877
  %1882 = add nuw nsw i64 %1870, 8
  %1883 = and i64 %1882, -8
  %1884 = icmp slt i64 %1883, 0
  br i1 %1884, label %1885, label %1886

1885:                                             ; preds = %1881
  call void @abort() #13
  unreachable

1886:                                             ; preds = %1881
  %1887 = shl i64 %1883, 1
  %1888 = call i8* @_Znwm(i64 %1887) #14
  %1889 = bitcast i8* %1888 to i16*
  %1890 = bitcast %"class.std::__1::basic_string.4"* %26 to i8**
  store i8* %1888, i8** %1890, align 8
  %1891 = or i64 %1883, -9223372036854775808
  %1892 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1891, i64* %1892, align 8
  %1893 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1870, i64* %1893, align 8
  br label %1894

1894:                                             ; preds = %1886, %1872
  %1895 = phi i16* [ %1873, %1872 ], [ %1889, %1886 ]
  %1896 = add nuw nsw i64 %1870, 1
  %1897 = add i64 %1870, 1
  %1898 = icmp ult i64 %1897, 16
  br i1 %1898, label %1988, label %1899

1899:                                             ; preds = %1894
  %1900 = add i64 %1870, 1
  %1901 = getelementptr i16, i16* %1895, i64 %1900
  %1902 = getelementptr i16, i16* %1868, i64 %1900
  %1903 = icmp ult i16* %1895, %1902
  %1904 = icmp ult i16* %1868, %1901
  %1905 = and i1 %1903, %1904
  br i1 %1905, label %1988, label %1906

1906:                                             ; preds = %1899
  %1907 = and i64 %1897, -16
  %1908 = sub i64 %1896, %1907
  %1909 = getelementptr i16, i16* %1868, i64 %1907
  %1910 = getelementptr i16, i16* %1895, i64 %1907
  %1911 = add i64 %1907, -16
  %1912 = lshr exact i64 %1911, 4
  %1913 = add nuw nsw i64 %1912, 1
  %1914 = and i64 %1913, 3
  %1915 = icmp ult i64 %1911, 48
  br i1 %1915, label %1967, label %1916

1916:                                             ; preds = %1906
  %1917 = sub nsw i64 %1913, %1914
  br label %1918

1918:                                             ; preds = %1918, %1916
  %1919 = phi i64 [ 0, %1916 ], [ %1964, %1918 ]
  %1920 = phi i64 [ %1917, %1916 ], [ %1965, %1918 ]
  %1921 = getelementptr i16, i16* %1868, i64 %1919
  %1922 = getelementptr i16, i16* %1895, i64 %1919
  %1923 = bitcast i16* %1921 to <8 x i16>*
  %1924 = load <8 x i16>, <8 x i16>* %1923, align 2, !alias.scope !431
  %1925 = getelementptr i16, i16* %1921, i64 8
  %1926 = bitcast i16* %1925 to <8 x i16>*
  %1927 = load <8 x i16>, <8 x i16>* %1926, align 2, !alias.scope !431
  %1928 = bitcast i16* %1922 to <8 x i16>*
  store <8 x i16> %1924, <8 x i16>* %1928, align 2, !alias.scope !434, !noalias !431
  %1929 = getelementptr i16, i16* %1922, i64 8
  %1930 = bitcast i16* %1929 to <8 x i16>*
  store <8 x i16> %1927, <8 x i16>* %1930, align 2, !alias.scope !434, !noalias !431
  %1931 = or i64 %1919, 16
  %1932 = getelementptr i16, i16* %1868, i64 %1931
  %1933 = getelementptr i16, i16* %1895, i64 %1931
  %1934 = bitcast i16* %1932 to <8 x i16>*
  %1935 = load <8 x i16>, <8 x i16>* %1934, align 2, !alias.scope !431
  %1936 = getelementptr i16, i16* %1932, i64 8
  %1937 = bitcast i16* %1936 to <8 x i16>*
  %1938 = load <8 x i16>, <8 x i16>* %1937, align 2, !alias.scope !431
  %1939 = bitcast i16* %1933 to <8 x i16>*
  store <8 x i16> %1935, <8 x i16>* %1939, align 2, !alias.scope !434, !noalias !431
  %1940 = getelementptr i16, i16* %1933, i64 8
  %1941 = bitcast i16* %1940 to <8 x i16>*
  store <8 x i16> %1938, <8 x i16>* %1941, align 2, !alias.scope !434, !noalias !431
  %1942 = or i64 %1919, 32
  %1943 = getelementptr i16, i16* %1868, i64 %1942
  %1944 = getelementptr i16, i16* %1895, i64 %1942
  %1945 = bitcast i16* %1943 to <8 x i16>*
  %1946 = load <8 x i16>, <8 x i16>* %1945, align 2, !alias.scope !431
  %1947 = getelementptr i16, i16* %1943, i64 8
  %1948 = bitcast i16* %1947 to <8 x i16>*
  %1949 = load <8 x i16>, <8 x i16>* %1948, align 2, !alias.scope !431
  %1950 = bitcast i16* %1944 to <8 x i16>*
  store <8 x i16> %1946, <8 x i16>* %1950, align 2, !alias.scope !434, !noalias !431
  %1951 = getelementptr i16, i16* %1944, i64 8
  %1952 = bitcast i16* %1951 to <8 x i16>*
  store <8 x i16> %1949, <8 x i16>* %1952, align 2, !alias.scope !434, !noalias !431
  %1953 = or i64 %1919, 48
  %1954 = getelementptr i16, i16* %1868, i64 %1953
  %1955 = getelementptr i16, i16* %1895, i64 %1953
  %1956 = bitcast i16* %1954 to <8 x i16>*
  %1957 = load <8 x i16>, <8 x i16>* %1956, align 2, !alias.scope !431
  %1958 = getelementptr i16, i16* %1954, i64 8
  %1959 = bitcast i16* %1958 to <8 x i16>*
  %1960 = load <8 x i16>, <8 x i16>* %1959, align 2, !alias.scope !431
  %1961 = bitcast i16* %1955 to <8 x i16>*
  store <8 x i16> %1957, <8 x i16>* %1961, align 2, !alias.scope !434, !noalias !431
  %1962 = getelementptr i16, i16* %1955, i64 8
  %1963 = bitcast i16* %1962 to <8 x i16>*
  store <8 x i16> %1960, <8 x i16>* %1963, align 2, !alias.scope !434, !noalias !431
  %1964 = add i64 %1919, 64
  %1965 = add i64 %1920, -4
  %1966 = icmp eq i64 %1965, 0
  br i1 %1966, label %1967, label %1918, !llvm.loop !436

1967:                                             ; preds = %1918, %1906
  %1968 = phi i64 [ 0, %1906 ], [ %1964, %1918 ]
  %1969 = icmp eq i64 %1914, 0
  br i1 %1969, label %1986, label %1970

1970:                                             ; preds = %1967, %1970
  %1971 = phi i64 [ %1983, %1970 ], [ %1968, %1967 ]
  %1972 = phi i64 [ %1984, %1970 ], [ %1914, %1967 ]
  %1973 = getelementptr i16, i16* %1868, i64 %1971
  %1974 = getelementptr i16, i16* %1895, i64 %1971
  %1975 = bitcast i16* %1973 to <8 x i16>*
  %1976 = load <8 x i16>, <8 x i16>* %1975, align 2, !alias.scope !431
  %1977 = getelementptr i16, i16* %1973, i64 8
  %1978 = bitcast i16* %1977 to <8 x i16>*
  %1979 = load <8 x i16>, <8 x i16>* %1978, align 2, !alias.scope !431
  %1980 = bitcast i16* %1974 to <8 x i16>*
  store <8 x i16> %1976, <8 x i16>* %1980, align 2, !alias.scope !434, !noalias !431
  %1981 = getelementptr i16, i16* %1974, i64 8
  %1982 = bitcast i16* %1981 to <8 x i16>*
  store <8 x i16> %1979, <8 x i16>* %1982, align 2, !alias.scope !434, !noalias !431
  %1983 = add i64 %1971, 16
  %1984 = add i64 %1972, -1
  %1985 = icmp eq i64 %1984, 0
  br i1 %1985, label %1986, label %1970, !llvm.loop !437

1986:                                             ; preds = %1970, %1967
  %1987 = icmp eq i64 %1897, %1907
  br i1 %1987, label %2041, label %1988

1988:                                             ; preds = %1986, %1899, %1894
  %1989 = phi i64 [ %1896, %1899 ], [ %1896, %1894 ], [ %1908, %1986 ]
  %1990 = phi i16* [ %1868, %1899 ], [ %1868, %1894 ], [ %1909, %1986 ]
  %1991 = phi i16* [ %1895, %1899 ], [ %1895, %1894 ], [ %1910, %1986 ]
  %1992 = add i64 %1989, -1
  %1993 = and i64 %1989, 7
  %1994 = icmp eq i64 %1993, 0
  br i1 %1994, label %2006, label %1995

1995:                                             ; preds = %1988, %1995
  %1996 = phi i64 [ %2001, %1995 ], [ %1989, %1988 ]
  %1997 = phi i16* [ %2003, %1995 ], [ %1990, %1988 ]
  %1998 = phi i16* [ %2002, %1995 ], [ %1991, %1988 ]
  %1999 = phi i64 [ %2004, %1995 ], [ %1993, %1988 ]
  %2000 = load i16, i16* %1997, align 2
  store i16 %2000, i16* %1998, align 2
  %2001 = add i64 %1996, -1
  %2002 = getelementptr inbounds i16, i16* %1998, i64 1
  %2003 = getelementptr inbounds i16, i16* %1997, i64 1
  %2004 = add i64 %1999, -1
  %2005 = icmp eq i64 %2004, 0
  br i1 %2005, label %2006, label %1995, !llvm.loop !438

2006:                                             ; preds = %1995, %1988
  %2007 = phi i64 [ %1989, %1988 ], [ %2001, %1995 ]
  %2008 = phi i16* [ %1990, %1988 ], [ %2003, %1995 ]
  %2009 = phi i16* [ %1991, %1988 ], [ %2002, %1995 ]
  %2010 = icmp ult i64 %1992, 7
  br i1 %2010, label %2041, label %2011

2011:                                             ; preds = %2006, %2011
  %2012 = phi i64 [ %2037, %2011 ], [ %2007, %2006 ]
  %2013 = phi i16* [ %2039, %2011 ], [ %2008, %2006 ]
  %2014 = phi i16* [ %2038, %2011 ], [ %2009, %2006 ]
  %2015 = load i16, i16* %2013, align 2
  store i16 %2015, i16* %2014, align 2
  %2016 = getelementptr inbounds i16, i16* %2014, i64 1
  %2017 = getelementptr inbounds i16, i16* %2013, i64 1
  %2018 = load i16, i16* %2017, align 2
  store i16 %2018, i16* %2016, align 2
  %2019 = getelementptr inbounds i16, i16* %2014, i64 2
  %2020 = getelementptr inbounds i16, i16* %2013, i64 2
  %2021 = load i16, i16* %2020, align 2
  store i16 %2021, i16* %2019, align 2
  %2022 = getelementptr inbounds i16, i16* %2014, i64 3
  %2023 = getelementptr inbounds i16, i16* %2013, i64 3
  %2024 = load i16, i16* %2023, align 2
  store i16 %2024, i16* %2022, align 2
  %2025 = getelementptr inbounds i16, i16* %2014, i64 4
  %2026 = getelementptr inbounds i16, i16* %2013, i64 4
  %2027 = load i16, i16* %2026, align 2
  store i16 %2027, i16* %2025, align 2
  %2028 = getelementptr inbounds i16, i16* %2014, i64 5
  %2029 = getelementptr inbounds i16, i16* %2013, i64 5
  %2030 = load i16, i16* %2029, align 2
  store i16 %2030, i16* %2028, align 2
  %2031 = getelementptr inbounds i16, i16* %2014, i64 6
  %2032 = getelementptr inbounds i16, i16* %2013, i64 6
  %2033 = load i16, i16* %2032, align 2
  store i16 %2033, i16* %2031, align 2
  %2034 = getelementptr inbounds i16, i16* %2014, i64 7
  %2035 = getelementptr inbounds i16, i16* %2013, i64 7
  %2036 = load i16, i16* %2035, align 2
  store i16 %2036, i16* %2034, align 2
  %2037 = add i64 %2012, -8
  %2038 = getelementptr inbounds i16, i16* %2014, i64 8
  %2039 = getelementptr inbounds i16, i16* %2013, i64 8
  %2040 = icmp eq i64 %2037, 0
  br i1 %2040, label %2041, label %2011, !llvm.loop !439

2041:                                             ; preds = %2006, %2011, %1986, %1865, %1858
  %2042 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %1861, %1865 ], [ %1859, %1858 ], [ %1861, %1986 ], [ %1861, %2011 ], [ %1861, %2006 ]
  %2043 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2042, i64 0, i32 1, i32 1
  %2044 = load i8, i8* %2043, align 1, !noalias !428
  %2045 = icmp slt i8 %2044, 0
  br i1 %2045, label %2046, label %2049

2046:                                             ; preds = %2041
  %2047 = bitcast %"class.std::__1::basic_string.4"* %4 to i8**
  %2048 = load i8*, i8** %2047, align 8, !noalias !428
  call void @_ZdlPv(i8* %2048) #14
  br label %2049

2049:                                             ; preds = %2041, %2046
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1856) #12, !noalias !428
  %2050 = bitcast %"class.std::__1::basic_string.4"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2051 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2050, i64 0, i32 1, i32 1
  %2052 = load i8, i8* %2051, align 1
  %2053 = icmp slt i8 %2052, 0
  %2054 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2055 = load i16*, i16** %2054, align 8
  %2056 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2057 = load i64, i64* %2056, align 8
  %2058 = bitcast %"class.std::__1::basic_string.4"* %26 to i16*
  %2059 = zext i8 %2052 to i64
  %2060 = select i1 %2053, i16* %2055, i16* %2058
  %2061 = select i1 %2053, i64 %2057, i64 %2059
  %2062 = bitcast %"class.std::__1::basic_string.4"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2063 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2062, i64 0, i32 1, i32 1
  %2064 = load i8, i8* %2063, align 1
  %2065 = icmp slt i8 %2064, 0
  br i1 %2065, label %2066, label %2071

2066:                                             ; preds = %2049
  %2067 = load i64, i64* %1630, align 8
  %2068 = and i64 %2067, 9223372036854775807
  %2069 = add nsw i64 %2068, -1
  %2070 = load i64, i64* %1629, align 8
  br label %2073

2071:                                             ; preds = %2049
  %2072 = zext i8 %2064 to i64
  br label %2073

2073:                                             ; preds = %2071, %2066
  %2074 = phi i64 [ %2069, %2066 ], [ 10, %2071 ]
  %2075 = phi i64 [ %2070, %2066 ], [ %2072, %2071 ]
  %2076 = sub i64 %2074, %2075
  %2077 = icmp ult i64 %2076, %2061
  br i1 %2077, label %2237, label %2078

2078:                                             ; preds = %2073
  %2079 = icmp eq i64 %2061, 0
  br i1 %2079, label %2240, label %2080

2080:                                             ; preds = %2078
  %2081 = load i16*, i16** %1628, align 8
  %2082 = bitcast %"class.std::__1::basic_string.4"* %23 to i16*
  %2083 = select i1 %2065, i16* %2081, i16* %2082
  %2084 = getelementptr inbounds i16, i16* %2083, i64 %2075
  %2085 = icmp ult i64 %2061, 16
  br i1 %2085, label %2175, label %2086

2086:                                             ; preds = %2080
  %2087 = add i64 %2061, %2075
  %2088 = getelementptr i16, i16* %2083, i64 %2087
  %2089 = getelementptr i16, i16* %2060, i64 %2061
  %2090 = icmp ult i16* %2084, %2089
  %2091 = icmp ult i16* %2060, %2088
  %2092 = and i1 %2090, %2091
  br i1 %2092, label %2175, label %2093

2093:                                             ; preds = %2086
  %2094 = and i64 %2061, -16
  %2095 = sub i64 %2061, %2094
  %2096 = getelementptr i16, i16* %2060, i64 %2094
  %2097 = getelementptr i16, i16* %2084, i64 %2094
  %2098 = add i64 %2094, -16
  %2099 = lshr exact i64 %2098, 4
  %2100 = add nuw nsw i64 %2099, 1
  %2101 = and i64 %2100, 3
  %2102 = icmp ult i64 %2098, 48
  br i1 %2102, label %2154, label %2103

2103:                                             ; preds = %2093
  %2104 = sub nsw i64 %2100, %2101
  br label %2105

2105:                                             ; preds = %2105, %2103
  %2106 = phi i64 [ 0, %2103 ], [ %2151, %2105 ]
  %2107 = phi i64 [ %2104, %2103 ], [ %2152, %2105 ]
  %2108 = getelementptr i16, i16* %2060, i64 %2106
  %2109 = getelementptr i16, i16* %2084, i64 %2106
  %2110 = bitcast i16* %2108 to <8 x i16>*
  %2111 = load <8 x i16>, <8 x i16>* %2110, align 2, !alias.scope !440
  %2112 = getelementptr i16, i16* %2108, i64 8
  %2113 = bitcast i16* %2112 to <8 x i16>*
  %2114 = load <8 x i16>, <8 x i16>* %2113, align 2, !alias.scope !440
  %2115 = bitcast i16* %2109 to <8 x i16>*
  store <8 x i16> %2111, <8 x i16>* %2115, align 2, !alias.scope !443, !noalias !440
  %2116 = getelementptr i16, i16* %2109, i64 8
  %2117 = bitcast i16* %2116 to <8 x i16>*
  store <8 x i16> %2114, <8 x i16>* %2117, align 2, !alias.scope !443, !noalias !440
  %2118 = or i64 %2106, 16
  %2119 = getelementptr i16, i16* %2060, i64 %2118
  %2120 = getelementptr i16, i16* %2084, i64 %2118
  %2121 = bitcast i16* %2119 to <8 x i16>*
  %2122 = load <8 x i16>, <8 x i16>* %2121, align 2, !alias.scope !440
  %2123 = getelementptr i16, i16* %2119, i64 8
  %2124 = bitcast i16* %2123 to <8 x i16>*
  %2125 = load <8 x i16>, <8 x i16>* %2124, align 2, !alias.scope !440
  %2126 = bitcast i16* %2120 to <8 x i16>*
  store <8 x i16> %2122, <8 x i16>* %2126, align 2, !alias.scope !443, !noalias !440
  %2127 = getelementptr i16, i16* %2120, i64 8
  %2128 = bitcast i16* %2127 to <8 x i16>*
  store <8 x i16> %2125, <8 x i16>* %2128, align 2, !alias.scope !443, !noalias !440
  %2129 = or i64 %2106, 32
  %2130 = getelementptr i16, i16* %2060, i64 %2129
  %2131 = getelementptr i16, i16* %2084, i64 %2129
  %2132 = bitcast i16* %2130 to <8 x i16>*
  %2133 = load <8 x i16>, <8 x i16>* %2132, align 2, !alias.scope !440
  %2134 = getelementptr i16, i16* %2130, i64 8
  %2135 = bitcast i16* %2134 to <8 x i16>*
  %2136 = load <8 x i16>, <8 x i16>* %2135, align 2, !alias.scope !440
  %2137 = bitcast i16* %2131 to <8 x i16>*
  store <8 x i16> %2133, <8 x i16>* %2137, align 2, !alias.scope !443, !noalias !440
  %2138 = getelementptr i16, i16* %2131, i64 8
  %2139 = bitcast i16* %2138 to <8 x i16>*
  store <8 x i16> %2136, <8 x i16>* %2139, align 2, !alias.scope !443, !noalias !440
  %2140 = or i64 %2106, 48
  %2141 = getelementptr i16, i16* %2060, i64 %2140
  %2142 = getelementptr i16, i16* %2084, i64 %2140
  %2143 = bitcast i16* %2141 to <8 x i16>*
  %2144 = load <8 x i16>, <8 x i16>* %2143, align 2, !alias.scope !440
  %2145 = getelementptr i16, i16* %2141, i64 8
  %2146 = bitcast i16* %2145 to <8 x i16>*
  %2147 = load <8 x i16>, <8 x i16>* %2146, align 2, !alias.scope !440
  %2148 = bitcast i16* %2142 to <8 x i16>*
  store <8 x i16> %2144, <8 x i16>* %2148, align 2, !alias.scope !443, !noalias !440
  %2149 = getelementptr i16, i16* %2142, i64 8
  %2150 = bitcast i16* %2149 to <8 x i16>*
  store <8 x i16> %2147, <8 x i16>* %2150, align 2, !alias.scope !443, !noalias !440
  %2151 = add i64 %2106, 64
  %2152 = add i64 %2107, -4
  %2153 = icmp eq i64 %2152, 0
  br i1 %2153, label %2154, label %2105, !llvm.loop !445

2154:                                             ; preds = %2105, %2093
  %2155 = phi i64 [ 0, %2093 ], [ %2151, %2105 ]
  %2156 = icmp eq i64 %2101, 0
  br i1 %2156, label %2173, label %2157

2157:                                             ; preds = %2154, %2157
  %2158 = phi i64 [ %2170, %2157 ], [ %2155, %2154 ]
  %2159 = phi i64 [ %2171, %2157 ], [ %2101, %2154 ]
  %2160 = getelementptr i16, i16* %2060, i64 %2158
  %2161 = getelementptr i16, i16* %2084, i64 %2158
  %2162 = bitcast i16* %2160 to <8 x i16>*
  %2163 = load <8 x i16>, <8 x i16>* %2162, align 2, !alias.scope !440
  %2164 = getelementptr i16, i16* %2160, i64 8
  %2165 = bitcast i16* %2164 to <8 x i16>*
  %2166 = load <8 x i16>, <8 x i16>* %2165, align 2, !alias.scope !440
  %2167 = bitcast i16* %2161 to <8 x i16>*
  store <8 x i16> %2163, <8 x i16>* %2167, align 2, !alias.scope !443, !noalias !440
  %2168 = getelementptr i16, i16* %2161, i64 8
  %2169 = bitcast i16* %2168 to <8 x i16>*
  store <8 x i16> %2166, <8 x i16>* %2169, align 2, !alias.scope !443, !noalias !440
  %2170 = add i64 %2158, 16
  %2171 = add i64 %2159, -1
  %2172 = icmp eq i64 %2171, 0
  br i1 %2172, label %2173, label %2157, !llvm.loop !446

2173:                                             ; preds = %2157, %2154
  %2174 = icmp eq i64 %2061, %2094
  br i1 %2174, label %2228, label %2175

2175:                                             ; preds = %2173, %2086, %2080
  %2176 = phi i64 [ %2061, %2086 ], [ %2061, %2080 ], [ %2095, %2173 ]
  %2177 = phi i16* [ %2060, %2086 ], [ %2060, %2080 ], [ %2096, %2173 ]
  %2178 = phi i16* [ %2084, %2086 ], [ %2084, %2080 ], [ %2097, %2173 ]
  %2179 = add i64 %2176, -1
  %2180 = and i64 %2176, 7
  %2181 = icmp eq i64 %2180, 0
  br i1 %2181, label %2193, label %2182

2182:                                             ; preds = %2175, %2182
  %2183 = phi i64 [ %2188, %2182 ], [ %2176, %2175 ]
  %2184 = phi i16* [ %2190, %2182 ], [ %2177, %2175 ]
  %2185 = phi i16* [ %2189, %2182 ], [ %2178, %2175 ]
  %2186 = phi i64 [ %2191, %2182 ], [ %2180, %2175 ]
  %2187 = load i16, i16* %2184, align 2
  store i16 %2187, i16* %2185, align 2
  %2188 = add i64 %2183, -1
  %2189 = getelementptr inbounds i16, i16* %2185, i64 1
  %2190 = getelementptr inbounds i16, i16* %2184, i64 1
  %2191 = add i64 %2186, -1
  %2192 = icmp eq i64 %2191, 0
  br i1 %2192, label %2193, label %2182, !llvm.loop !447

2193:                                             ; preds = %2182, %2175
  %2194 = phi i64 [ %2176, %2175 ], [ %2188, %2182 ]
  %2195 = phi i16* [ %2177, %2175 ], [ %2190, %2182 ]
  %2196 = phi i16* [ %2178, %2175 ], [ %2189, %2182 ]
  %2197 = icmp ult i64 %2179, 7
  br i1 %2197, label %2228, label %2198

2198:                                             ; preds = %2193, %2198
  %2199 = phi i64 [ %2224, %2198 ], [ %2194, %2193 ]
  %2200 = phi i16* [ %2226, %2198 ], [ %2195, %2193 ]
  %2201 = phi i16* [ %2225, %2198 ], [ %2196, %2193 ]
  %2202 = load i16, i16* %2200, align 2
  store i16 %2202, i16* %2201, align 2
  %2203 = getelementptr inbounds i16, i16* %2201, i64 1
  %2204 = getelementptr inbounds i16, i16* %2200, i64 1
  %2205 = load i16, i16* %2204, align 2
  store i16 %2205, i16* %2203, align 2
  %2206 = getelementptr inbounds i16, i16* %2201, i64 2
  %2207 = getelementptr inbounds i16, i16* %2200, i64 2
  %2208 = load i16, i16* %2207, align 2
  store i16 %2208, i16* %2206, align 2
  %2209 = getelementptr inbounds i16, i16* %2201, i64 3
  %2210 = getelementptr inbounds i16, i16* %2200, i64 3
  %2211 = load i16, i16* %2210, align 2
  store i16 %2211, i16* %2209, align 2
  %2212 = getelementptr inbounds i16, i16* %2201, i64 4
  %2213 = getelementptr inbounds i16, i16* %2200, i64 4
  %2214 = load i16, i16* %2213, align 2
  store i16 %2214, i16* %2212, align 2
  %2215 = getelementptr inbounds i16, i16* %2201, i64 5
  %2216 = getelementptr inbounds i16, i16* %2200, i64 5
  %2217 = load i16, i16* %2216, align 2
  store i16 %2217, i16* %2215, align 2
  %2218 = getelementptr inbounds i16, i16* %2201, i64 6
  %2219 = getelementptr inbounds i16, i16* %2200, i64 6
  %2220 = load i16, i16* %2219, align 2
  store i16 %2220, i16* %2218, align 2
  %2221 = getelementptr inbounds i16, i16* %2201, i64 7
  %2222 = getelementptr inbounds i16, i16* %2200, i64 7
  %2223 = load i16, i16* %2222, align 2
  store i16 %2223, i16* %2221, align 2
  %2224 = add i64 %2199, -8
  %2225 = getelementptr inbounds i16, i16* %2201, i64 8
  %2226 = getelementptr inbounds i16, i16* %2200, i64 8
  %2227 = icmp eq i64 %2224, 0
  br i1 %2227, label %2228, label %2198, !llvm.loop !448

2228:                                             ; preds = %2193, %2198, %2173
  %2229 = add i64 %2075, %2061
  %2230 = load i8, i8* %2063, align 1
  %2231 = icmp slt i8 %2230, 0
  br i1 %2231, label %2232, label %2233

2232:                                             ; preds = %2228
  store i64 %2229, i64* %1629, align 8
  br label %2235

2233:                                             ; preds = %2228
  %2234 = trunc i64 %2229 to i8
  store i8 %2234, i8* %2063, align 1
  br label %2235

2235:                                             ; preds = %2233, %2232
  %2236 = getelementptr inbounds i16, i16* %2083, i64 %2229
  store i16 0, i16* %2236, align 2
  br label %2240

2237:                                             ; preds = %2073
  %2238 = add i64 %2075, %2061
  %2239 = sub i64 %2238, %2074
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %23, i64 %2074, i64 %2239, i64 %2075, i64 %2075, i64 0, i64 %2061, i16* %2060) #12
  br label %2240

2240:                                             ; preds = %2078, %2235, %2237
  %2241 = load i8, i8* %2051, align 1
  %2242 = icmp slt i8 %2241, 0
  br i1 %2242, label %2243, label %2246

2243:                                             ; preds = %2240
  %2244 = bitcast %"class.std::__1::basic_string.4"* %26 to i8**
  %2245 = load i8*, i8** %2244, align 8
  call void @_ZdlPv(i8* %2245) #14
  br label %2246

2246:                                             ; preds = %2240, %2243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1855) #12
  %2247 = call i32 @_ZNK4GURL7IntPortEv(%class.GURL* nonnull %22) #12
  %2248 = trunc i64 %1607 to i32
  %2249 = call i32 @_ZN3url20DefaultPortForSchemeEPKci(i8* %1606, i32 %2248) #12
  %2250 = icmp eq i32 %2247, -1
  %2251 = icmp eq i32 %2247, %2249
  %2252 = or i1 %2250, %2251
  br i1 %2252, label %2490, label %2253

2253:                                             ; preds = %2246
  %2254 = bitcast %"class.std::__1::basic_string.4"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2254) #12
  %2255 = bitcast %"class.std::__1::basic_string.4"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2255) #12
  %2256 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 4, i32 1
  %2257 = load i32, i32* %2256, align 4
  %2258 = icmp slt i32 %2257, 1
  br i1 %2258, label %2272, label %2259

2259:                                             ; preds = %2253
  %2260 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 4, i32 0
  %2261 = load i32, i32* %2260, align 8
  %2262 = sext i32 %2261 to i64
  %2263 = bitcast %class.GURL* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2263, i64 0, i32 1, i32 0
  %2265 = load i8, i8* %2264, align 1
  %2266 = icmp slt i8 %2265, 0
  %2267 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2268 = load i8*, i8** %2267, align 8
  %2269 = select i1 %2266, i8* %2268, i8* %1588
  %2270 = getelementptr inbounds i8, i8* %2269, i64 %2262
  %2271 = sext i32 %2257 to i64
  br label %2272

2272:                                             ; preds = %2253, %2259
  %2273 = phi i8* [ %2270, %2259 ], [ null, %2253 ]
  %2274 = phi i64 [ %2271, %2259 ], [ 0, %2253 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %28, i8* %2273, i64 %2274) #12
  %2275 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2276 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2275, i64 0, i32 1, i32 1
  %2277 = load i8, i8* %2276, align 1, !noalias !449
  %2278 = icmp slt i8 %2277, 0
  %2279 = load i16*, i16** %48, align 8, !noalias !449
  %2280 = load i64, i64* %49, align 8, !noalias !449
  %2281 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %2282 = zext i8 %2277 to i64
  %2283 = select i1 %2278, i16* %2279, i16* %2281
  %2284 = select i1 %2278, i64 %2280, i64 %2282
  %2285 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.4"* nonnull %28, i64 0, i16* %2283, i64 %2284) #12, !noalias !449
  %2286 = bitcast %"class.std::__1::basic_string.4"* %2285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2254, i8* align 8 %2286, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %2286, i8 0, i64 24, i1 false) #12, !noalias !449
  %2287 = bitcast %"class.std::__1::basic_string.4"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2288 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2287, i64 0, i32 1, i32 1
  %2289 = load i8, i8* %2288, align 1
  %2290 = icmp slt i8 %2289, 0
  %2291 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2292 = load i16*, i16** %2291, align 8
  %2293 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2294 = load i64, i64* %2293, align 8
  %2295 = bitcast %"class.std::__1::basic_string.4"* %27 to i16*
  %2296 = zext i8 %2289 to i64
  %2297 = select i1 %2290, i16* %2292, i16* %2295
  %2298 = select i1 %2290, i64 %2294, i64 %2296
  %2299 = load i8, i8* %2063, align 1
  %2300 = icmp slt i8 %2299, 0
  br i1 %2300, label %2301, label %2306

2301:                                             ; preds = %2272
  %2302 = load i64, i64* %1630, align 8
  %2303 = and i64 %2302, 9223372036854775807
  %2304 = add nsw i64 %2303, -1
  %2305 = load i64, i64* %1629, align 8
  br label %2308

2306:                                             ; preds = %2272
  %2307 = zext i8 %2299 to i64
  br label %2308

2308:                                             ; preds = %2306, %2301
  %2309 = phi i64 [ %2304, %2301 ], [ 10, %2306 ]
  %2310 = phi i64 [ %2305, %2301 ], [ %2307, %2306 ]
  %2311 = sub i64 %2309, %2310
  %2312 = icmp ult i64 %2311, %2298
  br i1 %2312, label %2472, label %2313

2313:                                             ; preds = %2308
  %2314 = icmp eq i64 %2298, 0
  br i1 %2314, label %2475, label %2315

2315:                                             ; preds = %2313
  %2316 = load i16*, i16** %1628, align 8
  %2317 = bitcast %"class.std::__1::basic_string.4"* %23 to i16*
  %2318 = select i1 %2300, i16* %2316, i16* %2317
  %2319 = getelementptr inbounds i16, i16* %2318, i64 %2310
  %2320 = icmp ult i64 %2298, 16
  br i1 %2320, label %2410, label %2321

2321:                                             ; preds = %2315
  %2322 = add i64 %2298, %2310
  %2323 = getelementptr i16, i16* %2318, i64 %2322
  %2324 = getelementptr i16, i16* %2297, i64 %2298
  %2325 = icmp ult i16* %2319, %2324
  %2326 = icmp ult i16* %2297, %2323
  %2327 = and i1 %2325, %2326
  br i1 %2327, label %2410, label %2328

2328:                                             ; preds = %2321
  %2329 = and i64 %2298, -16
  %2330 = sub i64 %2298, %2329
  %2331 = getelementptr i16, i16* %2297, i64 %2329
  %2332 = getelementptr i16, i16* %2319, i64 %2329
  %2333 = add i64 %2329, -16
  %2334 = lshr exact i64 %2333, 4
  %2335 = add nuw nsw i64 %2334, 1
  %2336 = and i64 %2335, 3
  %2337 = icmp ult i64 %2333, 48
  br i1 %2337, label %2389, label %2338

2338:                                             ; preds = %2328
  %2339 = sub nsw i64 %2335, %2336
  br label %2340

2340:                                             ; preds = %2340, %2338
  %2341 = phi i64 [ 0, %2338 ], [ %2386, %2340 ]
  %2342 = phi i64 [ %2339, %2338 ], [ %2387, %2340 ]
  %2343 = getelementptr i16, i16* %2297, i64 %2341
  %2344 = getelementptr i16, i16* %2319, i64 %2341
  %2345 = bitcast i16* %2343 to <8 x i16>*
  %2346 = load <8 x i16>, <8 x i16>* %2345, align 2, !alias.scope !452
  %2347 = getelementptr i16, i16* %2343, i64 8
  %2348 = bitcast i16* %2347 to <8 x i16>*
  %2349 = load <8 x i16>, <8 x i16>* %2348, align 2, !alias.scope !452
  %2350 = bitcast i16* %2344 to <8 x i16>*
  store <8 x i16> %2346, <8 x i16>* %2350, align 2, !alias.scope !455, !noalias !452
  %2351 = getelementptr i16, i16* %2344, i64 8
  %2352 = bitcast i16* %2351 to <8 x i16>*
  store <8 x i16> %2349, <8 x i16>* %2352, align 2, !alias.scope !455, !noalias !452
  %2353 = or i64 %2341, 16
  %2354 = getelementptr i16, i16* %2297, i64 %2353
  %2355 = getelementptr i16, i16* %2319, i64 %2353
  %2356 = bitcast i16* %2354 to <8 x i16>*
  %2357 = load <8 x i16>, <8 x i16>* %2356, align 2, !alias.scope !452
  %2358 = getelementptr i16, i16* %2354, i64 8
  %2359 = bitcast i16* %2358 to <8 x i16>*
  %2360 = load <8 x i16>, <8 x i16>* %2359, align 2, !alias.scope !452
  %2361 = bitcast i16* %2355 to <8 x i16>*
  store <8 x i16> %2357, <8 x i16>* %2361, align 2, !alias.scope !455, !noalias !452
  %2362 = getelementptr i16, i16* %2355, i64 8
  %2363 = bitcast i16* %2362 to <8 x i16>*
  store <8 x i16> %2360, <8 x i16>* %2363, align 2, !alias.scope !455, !noalias !452
  %2364 = or i64 %2341, 32
  %2365 = getelementptr i16, i16* %2297, i64 %2364
  %2366 = getelementptr i16, i16* %2319, i64 %2364
  %2367 = bitcast i16* %2365 to <8 x i16>*
  %2368 = load <8 x i16>, <8 x i16>* %2367, align 2, !alias.scope !452
  %2369 = getelementptr i16, i16* %2365, i64 8
  %2370 = bitcast i16* %2369 to <8 x i16>*
  %2371 = load <8 x i16>, <8 x i16>* %2370, align 2, !alias.scope !452
  %2372 = bitcast i16* %2366 to <8 x i16>*
  store <8 x i16> %2368, <8 x i16>* %2372, align 2, !alias.scope !455, !noalias !452
  %2373 = getelementptr i16, i16* %2366, i64 8
  %2374 = bitcast i16* %2373 to <8 x i16>*
  store <8 x i16> %2371, <8 x i16>* %2374, align 2, !alias.scope !455, !noalias !452
  %2375 = or i64 %2341, 48
  %2376 = getelementptr i16, i16* %2297, i64 %2375
  %2377 = getelementptr i16, i16* %2319, i64 %2375
  %2378 = bitcast i16* %2376 to <8 x i16>*
  %2379 = load <8 x i16>, <8 x i16>* %2378, align 2, !alias.scope !452
  %2380 = getelementptr i16, i16* %2376, i64 8
  %2381 = bitcast i16* %2380 to <8 x i16>*
  %2382 = load <8 x i16>, <8 x i16>* %2381, align 2, !alias.scope !452
  %2383 = bitcast i16* %2377 to <8 x i16>*
  store <8 x i16> %2379, <8 x i16>* %2383, align 2, !alias.scope !455, !noalias !452
  %2384 = getelementptr i16, i16* %2377, i64 8
  %2385 = bitcast i16* %2384 to <8 x i16>*
  store <8 x i16> %2382, <8 x i16>* %2385, align 2, !alias.scope !455, !noalias !452
  %2386 = add i64 %2341, 64
  %2387 = add i64 %2342, -4
  %2388 = icmp eq i64 %2387, 0
  br i1 %2388, label %2389, label %2340, !llvm.loop !457

2389:                                             ; preds = %2340, %2328
  %2390 = phi i64 [ 0, %2328 ], [ %2386, %2340 ]
  %2391 = icmp eq i64 %2336, 0
  br i1 %2391, label %2408, label %2392

2392:                                             ; preds = %2389, %2392
  %2393 = phi i64 [ %2405, %2392 ], [ %2390, %2389 ]
  %2394 = phi i64 [ %2406, %2392 ], [ %2336, %2389 ]
  %2395 = getelementptr i16, i16* %2297, i64 %2393
  %2396 = getelementptr i16, i16* %2319, i64 %2393
  %2397 = bitcast i16* %2395 to <8 x i16>*
  %2398 = load <8 x i16>, <8 x i16>* %2397, align 2, !alias.scope !452
  %2399 = getelementptr i16, i16* %2395, i64 8
  %2400 = bitcast i16* %2399 to <8 x i16>*
  %2401 = load <8 x i16>, <8 x i16>* %2400, align 2, !alias.scope !452
  %2402 = bitcast i16* %2396 to <8 x i16>*
  store <8 x i16> %2398, <8 x i16>* %2402, align 2, !alias.scope !455, !noalias !452
  %2403 = getelementptr i16, i16* %2396, i64 8
  %2404 = bitcast i16* %2403 to <8 x i16>*
  store <8 x i16> %2401, <8 x i16>* %2404, align 2, !alias.scope !455, !noalias !452
  %2405 = add i64 %2393, 16
  %2406 = add i64 %2394, -1
  %2407 = icmp eq i64 %2406, 0
  br i1 %2407, label %2408, label %2392, !llvm.loop !458

2408:                                             ; preds = %2392, %2389
  %2409 = icmp eq i64 %2298, %2329
  br i1 %2409, label %2463, label %2410

2410:                                             ; preds = %2408, %2321, %2315
  %2411 = phi i64 [ %2298, %2321 ], [ %2298, %2315 ], [ %2330, %2408 ]
  %2412 = phi i16* [ %2297, %2321 ], [ %2297, %2315 ], [ %2331, %2408 ]
  %2413 = phi i16* [ %2319, %2321 ], [ %2319, %2315 ], [ %2332, %2408 ]
  %2414 = add i64 %2411, -1
  %2415 = and i64 %2411, 7
  %2416 = icmp eq i64 %2415, 0
  br i1 %2416, label %2428, label %2417

2417:                                             ; preds = %2410, %2417
  %2418 = phi i64 [ %2423, %2417 ], [ %2411, %2410 ]
  %2419 = phi i16* [ %2425, %2417 ], [ %2412, %2410 ]
  %2420 = phi i16* [ %2424, %2417 ], [ %2413, %2410 ]
  %2421 = phi i64 [ %2426, %2417 ], [ %2415, %2410 ]
  %2422 = load i16, i16* %2419, align 2
  store i16 %2422, i16* %2420, align 2
  %2423 = add i64 %2418, -1
  %2424 = getelementptr inbounds i16, i16* %2420, i64 1
  %2425 = getelementptr inbounds i16, i16* %2419, i64 1
  %2426 = add i64 %2421, -1
  %2427 = icmp eq i64 %2426, 0
  br i1 %2427, label %2428, label %2417, !llvm.loop !459

2428:                                             ; preds = %2417, %2410
  %2429 = phi i64 [ %2411, %2410 ], [ %2423, %2417 ]
  %2430 = phi i16* [ %2412, %2410 ], [ %2425, %2417 ]
  %2431 = phi i16* [ %2413, %2410 ], [ %2424, %2417 ]
  %2432 = icmp ult i64 %2414, 7
  br i1 %2432, label %2463, label %2433

2433:                                             ; preds = %2428, %2433
  %2434 = phi i64 [ %2459, %2433 ], [ %2429, %2428 ]
  %2435 = phi i16* [ %2461, %2433 ], [ %2430, %2428 ]
  %2436 = phi i16* [ %2460, %2433 ], [ %2431, %2428 ]
  %2437 = load i16, i16* %2435, align 2
  store i16 %2437, i16* %2436, align 2
  %2438 = getelementptr inbounds i16, i16* %2436, i64 1
  %2439 = getelementptr inbounds i16, i16* %2435, i64 1
  %2440 = load i16, i16* %2439, align 2
  store i16 %2440, i16* %2438, align 2
  %2441 = getelementptr inbounds i16, i16* %2436, i64 2
  %2442 = getelementptr inbounds i16, i16* %2435, i64 2
  %2443 = load i16, i16* %2442, align 2
  store i16 %2443, i16* %2441, align 2
  %2444 = getelementptr inbounds i16, i16* %2436, i64 3
  %2445 = getelementptr inbounds i16, i16* %2435, i64 3
  %2446 = load i16, i16* %2445, align 2
  store i16 %2446, i16* %2444, align 2
  %2447 = getelementptr inbounds i16, i16* %2436, i64 4
  %2448 = getelementptr inbounds i16, i16* %2435, i64 4
  %2449 = load i16, i16* %2448, align 2
  store i16 %2449, i16* %2447, align 2
  %2450 = getelementptr inbounds i16, i16* %2436, i64 5
  %2451 = getelementptr inbounds i16, i16* %2435, i64 5
  %2452 = load i16, i16* %2451, align 2
  store i16 %2452, i16* %2450, align 2
  %2453 = getelementptr inbounds i16, i16* %2436, i64 6
  %2454 = getelementptr inbounds i16, i16* %2435, i64 6
  %2455 = load i16, i16* %2454, align 2
  store i16 %2455, i16* %2453, align 2
  %2456 = getelementptr inbounds i16, i16* %2436, i64 7
  %2457 = getelementptr inbounds i16, i16* %2435, i64 7
  %2458 = load i16, i16* %2457, align 2
  store i16 %2458, i16* %2456, align 2
  %2459 = add i64 %2434, -8
  %2460 = getelementptr inbounds i16, i16* %2436, i64 8
  %2461 = getelementptr inbounds i16, i16* %2435, i64 8
  %2462 = icmp eq i64 %2459, 0
  br i1 %2462, label %2463, label %2433, !llvm.loop !460

2463:                                             ; preds = %2428, %2433, %2408
  %2464 = add i64 %2310, %2298
  %2465 = load i8, i8* %2063, align 1
  %2466 = icmp slt i8 %2465, 0
  br i1 %2466, label %2467, label %2468

2467:                                             ; preds = %2463
  store i64 %2464, i64* %1629, align 8
  br label %2470

2468:                                             ; preds = %2463
  %2469 = trunc i64 %2464 to i8
  store i8 %2469, i8* %2063, align 1
  br label %2470

2470:                                             ; preds = %2468, %2467
  %2471 = getelementptr inbounds i16, i16* %2318, i64 %2464
  store i16 0, i16* %2471, align 2
  br label %2475

2472:                                             ; preds = %2308
  %2473 = add i64 %2310, %2298
  %2474 = sub i64 %2473, %2309
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %23, i64 %2309, i64 %2474, i64 %2310, i64 %2310, i64 0, i64 %2298, i16* %2297) #12
  br label %2475

2475:                                             ; preds = %2313, %2470, %2472
  %2476 = load i8, i8* %2288, align 1
  %2477 = icmp slt i8 %2476, 0
  br i1 %2477, label %2478, label %2481

2478:                                             ; preds = %2475
  %2479 = bitcast %"class.std::__1::basic_string.4"* %27 to i8**
  %2480 = load i8*, i8** %2479, align 8
  call void @_ZdlPv(i8* %2480) #14
  br label %2481

2481:                                             ; preds = %2475, %2478
  %2482 = bitcast %"class.std::__1::basic_string.4"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2483 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2482, i64 0, i32 1, i32 1
  %2484 = load i8, i8* %2483, align 1
  %2485 = icmp slt i8 %2484, 0
  br i1 %2485, label %2486, label %2489

2486:                                             ; preds = %2481
  %2487 = bitcast %"class.std::__1::basic_string.4"* %28 to i8**
  %2488 = load i8*, i8** %2487, align 8
  call void @_ZdlPv(i8* %2488) #14
  br label %2489

2489:                                             ; preds = %2481, %2486
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2255) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2254) #12
  br label %2490

2490:                                             ; preds = %2489, %2246
  %2491 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2491, i8* nonnull align 8 %1627, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1627) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %1588) #12
  br label %2492

2492:                                             ; preds = %1174, %1586, %2490, %509
  %2493 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2494 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2493, i64 0, i32 1, i32 1
  %2495 = load i8, i8* %2494, align 1
  %2496 = icmp slt i8 %2495, 0
  br i1 %2496, label %2497, label %2500

2497:                                             ; preds = %2492
  %2498 = bitcast %"class.std::__1::basic_string.4"* %8 to i8**
  %2499 = load i8*, i8** %2498, align 8
  call void @_ZdlPv(i8* %2499) #14
  br label %2500

2500:                                             ; preds = %2492, %2497
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  %2501 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2502 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2501, i64 0, i32 1, i32 1
  %2503 = load i8, i8* %2502, align 1
  %2504 = icmp slt i8 %2503, 0
  br i1 %2504, label %2505, label %2508

2505:                                             ; preds = %2500
  %2506 = bitcast %"class.std::__1::basic_string.4"* %7 to i8**
  %2507 = load i8*, i8** %2506, align 8
  call void @_ZdlPv(i8* %2507) #14
  br label %2508

2508:                                             ; preds = %2500, %2505
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  br label %2509

2509:                                             ; preds = %2508, %44
  ret void
}

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_116ShouldShowSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEN13url_formatter13SchemeDisplayE(i8* nocapture readonly, i64, i32) unnamed_addr #4 {
  switch i32 %2, label %28 [
    i32 2, label %16
    i32 1, label %4
  ]

4:                                                ; preds = %3
  %5 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #12
  %6 = icmp eq i64 %5, %1
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %1) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %7, %4
  %11 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #12
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %13, label %28

13:                                               ; preds = %10
  %14 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %1) #12
  %15 = icmp ne i32 %14, 0
  br label %28

16:                                               ; preds = %3
  %17 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #12
  %18 = icmp eq i64 %17, %1
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %1) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %19, %16
  %23 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kWssSchemeE, i64 0, i64 0)) #12
  %24 = icmp eq i64 %23, %1
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kWssSchemeE, i64 0, i64 0), i64 %1) #12
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %19, %7, %25, %22, %13, %10, %3
  %29 = phi i1 [ false, %7 ], [ false, %19 ], [ true, %3 ], [ true, %10 ], [ %15, %13 ], [ true, %22 ], [ %27, %25 ]
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK4GURL7IntPortEv(%class.GURL*) local_unnamed_addr #2

declare i32 @_ZN3url20DefaultPortForSchemeEPKci(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13url_formatter30FormatOriginForSecurityDisplayERKN3url6OriginENS_13SchemeDisplayE(%"class.std::__1::basic_string.4"* noalias nocapture sret, %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.4", align 8
  %5 = alloca %"class.std::__1::basic_string.4", align 8
  %6 = alloca %"class.std::__1::basic_string.4", align 8
  %7 = alloca %"class.std::__1::basic_string.4", align 8
  %8 = alloca [15 x i8], align 8
  %9 = alloca %"class.std::__1::basic_string.4", align 8
  %10 = alloca %"class.std::__1::basic_string.4", align 8
  %11 = alloca %"class.std::__1::basic_string.4", align 8
  %12 = alloca %"class.std::__1::basic_string.4", align 8
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !310
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %21

18:                                               ; preds = %3
  %19 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #12
  %20 = load i8, i8* %13, align 8, !range !310
  br label %21

21:                                               ; preds = %16, %18
  %22 = phi i8 [ 0, %16 ], [ %20, %18 ]
  %23 = phi %"class.std::__1::basic_string"* [ %17, %16 ], [ %19, %18 ]
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %31 = select i1 %27, i8* %29, i8* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  %36 = icmp eq i8 %22, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %21
  %38 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  br label %41

39:                                               ; preds = %21
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #12
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi %"class.std::__1::basic_string"* [ %38, %37 ], [ %40, %39 ]
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = select i1 %46, i8* %48, i8* %49
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %45 to i64
  %54 = select i1 %46, i64 %52, i64 %53
  %55 = or i64 %54, %35
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #12
  br label %945

59:                                               ; preds = %41
  %60 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %64 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  store i8 1, i8* %65, align 1
  %66 = bitcast %"class.std::__1::basic_string.4"* %5 to i16*
  store i16 58, i16* %66, align 8
  %67 = getelementptr inbounds i16, i16* %66, i64 1
  store i16 0, i16* %67, align 2
  %68 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  %69 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 24, i1 false)
  %70 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #12
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0), i64 %70) #12
  %71 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %72 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #12
  %75 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_116ShouldShowSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEN13url_formatter13SchemeDisplayE(i8* %31, i64 %35, i32 %2)
  br i1 %75, label %76, label %300

76:                                               ; preds = %59
  %77 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %79)
  %80 = bitcast %"class.std::__1::basic_string.4"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %9, i8* %31, i64 %35) #12
  %81 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1, !noalias !461
  %84 = icmp slt i8 %83, 0
  %85 = load i16*, i16** %77, align 8, !noalias !461
  %86 = load i64, i64* %78, align 8, !noalias !461
  %87 = bitcast %"class.std::__1::basic_string.4"* %6 to i16*
  %88 = zext i8 %83 to i64
  %89 = select i1 %84, i16* %85, i16* %87
  %90 = select i1 %84, i64 %86, i64 %88
  %91 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1, !noalias !461
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %76
  %96 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %97 = load i64, i64* %96, align 8, !noalias !461
  %98 = and i64 %97, 9223372036854775807
  %99 = add nsw i64 %98, -1
  %100 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8, !noalias !461
  br label %104

102:                                              ; preds = %76
  %103 = zext i8 %93 to i64
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i64 [ %99, %95 ], [ 10, %102 ]
  %106 = phi i64 [ %101, %95 ], [ %103, %102 ]
  %107 = sub i64 %105, %106
  %108 = icmp ult i64 %107, %90
  br i1 %108, label %270, label %109

109:                                              ; preds = %104
  %110 = icmp eq i64 %90, 0
  br i1 %110, label %273, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i16*, i16** %112, align 8, !noalias !461
  %114 = bitcast %"class.std::__1::basic_string.4"* %9 to i16*
  %115 = select i1 %94, i16* %113, i16* %114
  %116 = getelementptr inbounds i16, i16* %115, i64 %106
  %117 = icmp ult i64 %90, 16
  br i1 %117, label %207, label %118

118:                                              ; preds = %111
  %119 = add i64 %90, %106
  %120 = getelementptr i16, i16* %115, i64 %119
  %121 = getelementptr i16, i16* %89, i64 %90
  %122 = icmp ult i16* %116, %121
  %123 = icmp ult i16* %89, %120
  %124 = and i1 %122, %123
  br i1 %124, label %207, label %125

125:                                              ; preds = %118
  %126 = and i64 %90, -16
  %127 = sub i64 %90, %126
  %128 = getelementptr i16, i16* %89, i64 %126
  %129 = getelementptr i16, i16* %116, i64 %126
  %130 = add i64 %126, -16
  %131 = lshr exact i64 %130, 4
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 3
  %134 = icmp ult i64 %130, 48
  br i1 %134, label %186, label %135

135:                                              ; preds = %125
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %183, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %184, %137 ]
  %140 = getelementptr i16, i16* %89, i64 %138
  %141 = getelementptr i16, i16* %116, i64 %138
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !464, !noalias !461
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !464, !noalias !461
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !467, !noalias !469
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !467, !noalias !469
  %150 = or i64 %138, 16
  %151 = getelementptr i16, i16* %89, i64 %150
  %152 = getelementptr i16, i16* %116, i64 %150
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !464, !noalias !461
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !464, !noalias !461
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !467, !noalias !469
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !467, !noalias !469
  %161 = or i64 %138, 32
  %162 = getelementptr i16, i16* %89, i64 %161
  %163 = getelementptr i16, i16* %116, i64 %161
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !464, !noalias !461
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !464, !noalias !461
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !467, !noalias !469
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !467, !noalias !469
  %172 = or i64 %138, 48
  %173 = getelementptr i16, i16* %89, i64 %172
  %174 = getelementptr i16, i16* %116, i64 %172
  %175 = bitcast i16* %173 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !464, !noalias !461
  %177 = getelementptr i16, i16* %173, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !464, !noalias !461
  %180 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %176, <8 x i16>* %180, align 2, !alias.scope !467, !noalias !469
  %181 = getelementptr i16, i16* %174, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %182, align 2, !alias.scope !467, !noalias !469
  %183 = add i64 %138, 64
  %184 = add i64 %139, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %137, !llvm.loop !470

186:                                              ; preds = %137, %125
  %187 = phi i64 [ 0, %125 ], [ %183, %137 ]
  %188 = icmp eq i64 %133, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %202, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %203, %189 ], [ %133, %186 ]
  %192 = getelementptr i16, i16* %89, i64 %190
  %193 = getelementptr i16, i16* %116, i64 %190
  %194 = bitcast i16* %192 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !464, !noalias !461
  %196 = getelementptr i16, i16* %192, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !464, !noalias !461
  %199 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %199, align 2, !alias.scope !467, !noalias !469
  %200 = getelementptr i16, i16* %193, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %201, align 2, !alias.scope !467, !noalias !469
  %202 = add i64 %190, 16
  %203 = add i64 %191, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %189, !llvm.loop !471

205:                                              ; preds = %189, %186
  %206 = icmp eq i64 %90, %126
  br i1 %206, label %260, label %207

207:                                              ; preds = %205, %118, %111
  %208 = phi i64 [ %90, %118 ], [ %90, %111 ], [ %127, %205 ]
  %209 = phi i16* [ %89, %118 ], [ %89, %111 ], [ %128, %205 ]
  %210 = phi i16* [ %116, %118 ], [ %116, %111 ], [ %129, %205 ]
  %211 = add i64 %208, -1
  %212 = and i64 %208, 7
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %225, label %214

214:                                              ; preds = %207, %214
  %215 = phi i64 [ %220, %214 ], [ %208, %207 ]
  %216 = phi i16* [ %222, %214 ], [ %209, %207 ]
  %217 = phi i16* [ %221, %214 ], [ %210, %207 ]
  %218 = phi i64 [ %223, %214 ], [ %212, %207 ]
  %219 = load i16, i16* %216, align 2, !noalias !461
  store i16 %219, i16* %217, align 2, !noalias !461
  %220 = add i64 %215, -1
  %221 = getelementptr inbounds i16, i16* %217, i64 1
  %222 = getelementptr inbounds i16, i16* %216, i64 1
  %223 = add i64 %218, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %214, !llvm.loop !472

225:                                              ; preds = %214, %207
  %226 = phi i64 [ %208, %207 ], [ %220, %214 ]
  %227 = phi i16* [ %209, %207 ], [ %222, %214 ]
  %228 = phi i16* [ %210, %207 ], [ %221, %214 ]
  %229 = icmp ult i64 %211, 7
  br i1 %229, label %260, label %230

230:                                              ; preds = %225, %230
  %231 = phi i64 [ %256, %230 ], [ %226, %225 ]
  %232 = phi i16* [ %258, %230 ], [ %227, %225 ]
  %233 = phi i16* [ %257, %230 ], [ %228, %225 ]
  %234 = load i16, i16* %232, align 2, !noalias !461
  store i16 %234, i16* %233, align 2, !noalias !461
  %235 = getelementptr inbounds i16, i16* %233, i64 1
  %236 = getelementptr inbounds i16, i16* %232, i64 1
  %237 = load i16, i16* %236, align 2, !noalias !461
  store i16 %237, i16* %235, align 2, !noalias !461
  %238 = getelementptr inbounds i16, i16* %233, i64 2
  %239 = getelementptr inbounds i16, i16* %232, i64 2
  %240 = load i16, i16* %239, align 2, !noalias !461
  store i16 %240, i16* %238, align 2, !noalias !461
  %241 = getelementptr inbounds i16, i16* %233, i64 3
  %242 = getelementptr inbounds i16, i16* %232, i64 3
  %243 = load i16, i16* %242, align 2, !noalias !461
  store i16 %243, i16* %241, align 2, !noalias !461
  %244 = getelementptr inbounds i16, i16* %233, i64 4
  %245 = getelementptr inbounds i16, i16* %232, i64 4
  %246 = load i16, i16* %245, align 2, !noalias !461
  store i16 %246, i16* %244, align 2, !noalias !461
  %247 = getelementptr inbounds i16, i16* %233, i64 5
  %248 = getelementptr inbounds i16, i16* %232, i64 5
  %249 = load i16, i16* %248, align 2, !noalias !461
  store i16 %249, i16* %247, align 2, !noalias !461
  %250 = getelementptr inbounds i16, i16* %233, i64 6
  %251 = getelementptr inbounds i16, i16* %232, i64 6
  %252 = load i16, i16* %251, align 2, !noalias !461
  store i16 %252, i16* %250, align 2, !noalias !461
  %253 = getelementptr inbounds i16, i16* %233, i64 7
  %254 = getelementptr inbounds i16, i16* %232, i64 7
  %255 = load i16, i16* %254, align 2, !noalias !461
  store i16 %255, i16* %253, align 2, !noalias !461
  %256 = add i64 %231, -8
  %257 = getelementptr inbounds i16, i16* %233, i64 8
  %258 = getelementptr inbounds i16, i16* %232, i64 8
  %259 = icmp eq i64 %256, 0
  br i1 %259, label %260, label %230, !llvm.loop !473

260:                                              ; preds = %225, %230, %205
  %261 = add i64 %106, %90
  %262 = load i8, i8* %92, align 1, !noalias !461
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %261, i64* %265, align 8, !noalias !461
  br label %268

266:                                              ; preds = %260
  %267 = trunc i64 %261 to i8
  store i8 %267, i8* %92, align 1, !noalias !461
  br label %268

268:                                              ; preds = %266, %264
  %269 = getelementptr inbounds i16, i16* %115, i64 %261
  store i16 0, i16* %269, align 2, !noalias !461
  br label %273

270:                                              ; preds = %104
  %271 = add i64 %106, %90
  %272 = sub i64 %271, %105
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %9, i64 %105, i64 %272, i64 %106, i64 %106, i64 0, i64 %90, i16* %89) #12, !noalias !461
  br label %273

273:                                              ; preds = %109, %268, %270
  %274 = bitcast %"class.std::__1::basic_string.4"* %9 to i8**
  %275 = bitcast %"class.std::__1::basic_string.4"* %9 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %278 = bitcast i64* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* align 8 %278, i64 15, i1 false)
  %279 = getelementptr inbounds i8, i8* %80, i64 23
  %280 = load i8, i8* %279, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 24, i1 false) #12, !noalias !461
  %281 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %281, i64 0, i32 1, i32 1
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %289, label %285

285:                                              ; preds = %273
  %286 = bitcast %"class.std::__1::basic_string.4"* %7 to i64*
  store i64 %276, i64* %286, align 8
  %287 = bitcast i64* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* nonnull align 8 %79, i64 15, i1 false)
  %288 = getelementptr inbounds i8, i8* %71, i64 23
  store i8 %280, i8* %288, align 1
  br label %299

289:                                              ; preds = %273
  %290 = bitcast %"class.std::__1::basic_string.4"* %7 to i8**
  %291 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %291) #14
  %292 = load i8, i8* %92, align 1
  %293 = bitcast %"class.std::__1::basic_string.4"* %7 to i64*
  store i64 %276, i64* %293, align 8
  %294 = bitcast i64* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* nonnull align 8 %79, i64 15, i1 false)
  %295 = getelementptr inbounds i8, i8* %71, i64 23
  store i8 %280, i8* %295, align 1
  %296 = icmp slt i8 %292, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %289
  %298 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %298) #14
  br label %299

299:                                              ; preds = %285, %289, %297
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %79)
  br label %300

300:                                              ; preds = %299, %59
  %301 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %301) #12
  %302 = bitcast %"class.std::__1::basic_string.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %302) #12, !noalias !474
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %302, i8 -86, i64 24, i1 false) #12, !noalias !474
  call void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %4, i8* %50, i64 %54) #12, !noalias !474
  %303 = call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %4) #12, !noalias !474
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %10, i8* %50, i64 %54) #12
  %305 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %487

306:                                              ; preds = %300
  %307 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %307, i64 0, i32 1, i32 1
  %309 = load i8, i8* %308, align 1
  %310 = icmp slt i8 %309, 0
  br i1 %310, label %312, label %311

311:                                              ; preds = %306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %301, i8* nonnull align 8 %302, i64 24, i1 false) #12
  br label %487

312:                                              ; preds = %306
  %313 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load i16*, i16** %313, align 8
  %315 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = icmp ult i64 %316, 11
  br i1 %317, label %318, label %323

318:                                              ; preds = %312
  %319 = bitcast %"class.std::__1::basic_string.4"* %10 to i16*
  %320 = trunc i64 %316 to i8
  %321 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %321, i64 0, i32 1, i32 1
  store i8 %320, i8* %322, align 1
  br label %340

323:                                              ; preds = %312
  %324 = icmp ugt i64 %316, 9223372036854775791
  br i1 %324, label %325, label %327

325:                                              ; preds = %323
  %326 = bitcast %"class.std::__1::basic_string.4"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %326) #13
  unreachable

327:                                              ; preds = %323
  %328 = add nuw nsw i64 %316, 8
  %329 = and i64 %328, -8
  %330 = icmp slt i64 %329, 0
  br i1 %330, label %331, label %332

331:                                              ; preds = %327
  call void @abort() #13
  unreachable

332:                                              ; preds = %327
  %333 = shl i64 %329, 1
  %334 = call i8* @_Znwm(i64 %333) #14
  %335 = bitcast i8* %334 to i16*
  %336 = bitcast %"class.std::__1::basic_string.4"* %10 to i8**
  store i8* %334, i8** %336, align 8
  %337 = or i64 %329, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %316, i64* %339, align 8
  br label %340

340:                                              ; preds = %332, %318
  %341 = phi i16* [ %319, %318 ], [ %335, %332 ]
  %342 = add nuw nsw i64 %316, 1
  %343 = add i64 %316, 1
  %344 = icmp ult i64 %343, 16
  br i1 %344, label %434, label %345

345:                                              ; preds = %340
  %346 = add i64 %316, 1
  %347 = getelementptr i16, i16* %341, i64 %346
  %348 = getelementptr i16, i16* %314, i64 %346
  %349 = icmp ult i16* %341, %348
  %350 = icmp ult i16* %314, %347
  %351 = and i1 %349, %350
  br i1 %351, label %434, label %352

352:                                              ; preds = %345
  %353 = and i64 %343, -16
  %354 = sub i64 %342, %353
  %355 = getelementptr i16, i16* %314, i64 %353
  %356 = getelementptr i16, i16* %341, i64 %353
  %357 = add i64 %353, -16
  %358 = lshr exact i64 %357, 4
  %359 = add nuw nsw i64 %358, 1
  %360 = and i64 %359, 3
  %361 = icmp ult i64 %357, 48
  br i1 %361, label %413, label %362

362:                                              ; preds = %352
  %363 = sub nsw i64 %359, %360
  br label %364

364:                                              ; preds = %364, %362
  %365 = phi i64 [ 0, %362 ], [ %410, %364 ]
  %366 = phi i64 [ %363, %362 ], [ %411, %364 ]
  %367 = getelementptr i16, i16* %314, i64 %365
  %368 = getelementptr i16, i16* %341, i64 %365
  %369 = bitcast i16* %367 to <8 x i16>*
  %370 = load <8 x i16>, <8 x i16>* %369, align 2, !alias.scope !477
  %371 = getelementptr i16, i16* %367, i64 8
  %372 = bitcast i16* %371 to <8 x i16>*
  %373 = load <8 x i16>, <8 x i16>* %372, align 2, !alias.scope !477
  %374 = bitcast i16* %368 to <8 x i16>*
  store <8 x i16> %370, <8 x i16>* %374, align 2, !alias.scope !480, !noalias !477
  %375 = getelementptr i16, i16* %368, i64 8
  %376 = bitcast i16* %375 to <8 x i16>*
  store <8 x i16> %373, <8 x i16>* %376, align 2, !alias.scope !480, !noalias !477
  %377 = or i64 %365, 16
  %378 = getelementptr i16, i16* %314, i64 %377
  %379 = getelementptr i16, i16* %341, i64 %377
  %380 = bitcast i16* %378 to <8 x i16>*
  %381 = load <8 x i16>, <8 x i16>* %380, align 2, !alias.scope !477
  %382 = getelementptr i16, i16* %378, i64 8
  %383 = bitcast i16* %382 to <8 x i16>*
  %384 = load <8 x i16>, <8 x i16>* %383, align 2, !alias.scope !477
  %385 = bitcast i16* %379 to <8 x i16>*
  store <8 x i16> %381, <8 x i16>* %385, align 2, !alias.scope !480, !noalias !477
  %386 = getelementptr i16, i16* %379, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %384, <8 x i16>* %387, align 2, !alias.scope !480, !noalias !477
  %388 = or i64 %365, 32
  %389 = getelementptr i16, i16* %314, i64 %388
  %390 = getelementptr i16, i16* %341, i64 %388
  %391 = bitcast i16* %389 to <8 x i16>*
  %392 = load <8 x i16>, <8 x i16>* %391, align 2, !alias.scope !477
  %393 = getelementptr i16, i16* %389, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  %395 = load <8 x i16>, <8 x i16>* %394, align 2, !alias.scope !477
  %396 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %392, <8 x i16>* %396, align 2, !alias.scope !480, !noalias !477
  %397 = getelementptr i16, i16* %390, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %395, <8 x i16>* %398, align 2, !alias.scope !480, !noalias !477
  %399 = or i64 %365, 48
  %400 = getelementptr i16, i16* %314, i64 %399
  %401 = getelementptr i16, i16* %341, i64 %399
  %402 = bitcast i16* %400 to <8 x i16>*
  %403 = load <8 x i16>, <8 x i16>* %402, align 2, !alias.scope !477
  %404 = getelementptr i16, i16* %400, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  %406 = load <8 x i16>, <8 x i16>* %405, align 2, !alias.scope !477
  %407 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %403, <8 x i16>* %407, align 2, !alias.scope !480, !noalias !477
  %408 = getelementptr i16, i16* %401, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %406, <8 x i16>* %409, align 2, !alias.scope !480, !noalias !477
  %410 = add i64 %365, 64
  %411 = add i64 %366, -4
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %364, !llvm.loop !482

413:                                              ; preds = %364, %352
  %414 = phi i64 [ 0, %352 ], [ %410, %364 ]
  %415 = icmp eq i64 %360, 0
  br i1 %415, label %432, label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %429, %416 ], [ %414, %413 ]
  %418 = phi i64 [ %430, %416 ], [ %360, %413 ]
  %419 = getelementptr i16, i16* %314, i64 %417
  %420 = getelementptr i16, i16* %341, i64 %417
  %421 = bitcast i16* %419 to <8 x i16>*
  %422 = load <8 x i16>, <8 x i16>* %421, align 2, !alias.scope !477
  %423 = getelementptr i16, i16* %419, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  %425 = load <8 x i16>, <8 x i16>* %424, align 2, !alias.scope !477
  %426 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %422, <8 x i16>* %426, align 2, !alias.scope !480, !noalias !477
  %427 = getelementptr i16, i16* %420, i64 8
  %428 = bitcast i16* %427 to <8 x i16>*
  store <8 x i16> %425, <8 x i16>* %428, align 2, !alias.scope !480, !noalias !477
  %429 = add i64 %417, 16
  %430 = add i64 %418, -1
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %416, !llvm.loop !483

432:                                              ; preds = %416, %413
  %433 = icmp eq i64 %343, %353
  br i1 %433, label %487, label %434

434:                                              ; preds = %432, %345, %340
  %435 = phi i64 [ %342, %345 ], [ %342, %340 ], [ %354, %432 ]
  %436 = phi i16* [ %314, %345 ], [ %314, %340 ], [ %355, %432 ]
  %437 = phi i16* [ %341, %345 ], [ %341, %340 ], [ %356, %432 ]
  %438 = add i64 %435, -1
  %439 = and i64 %435, 7
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %452, label %441

441:                                              ; preds = %434, %441
  %442 = phi i64 [ %447, %441 ], [ %435, %434 ]
  %443 = phi i16* [ %449, %441 ], [ %436, %434 ]
  %444 = phi i16* [ %448, %441 ], [ %437, %434 ]
  %445 = phi i64 [ %450, %441 ], [ %439, %434 ]
  %446 = load i16, i16* %443, align 2
  store i16 %446, i16* %444, align 2
  %447 = add i64 %442, -1
  %448 = getelementptr inbounds i16, i16* %444, i64 1
  %449 = getelementptr inbounds i16, i16* %443, i64 1
  %450 = add i64 %445, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %441, !llvm.loop !484

452:                                              ; preds = %441, %434
  %453 = phi i64 [ %435, %434 ], [ %447, %441 ]
  %454 = phi i16* [ %436, %434 ], [ %449, %441 ]
  %455 = phi i16* [ %437, %434 ], [ %448, %441 ]
  %456 = icmp ult i64 %438, 7
  br i1 %456, label %487, label %457

457:                                              ; preds = %452, %457
  %458 = phi i64 [ %483, %457 ], [ %453, %452 ]
  %459 = phi i16* [ %485, %457 ], [ %454, %452 ]
  %460 = phi i16* [ %484, %457 ], [ %455, %452 ]
  %461 = load i16, i16* %459, align 2
  store i16 %461, i16* %460, align 2
  %462 = getelementptr inbounds i16, i16* %460, i64 1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = load i16, i16* %463, align 2
  store i16 %464, i16* %462, align 2
  %465 = getelementptr inbounds i16, i16* %460, i64 2
  %466 = getelementptr inbounds i16, i16* %459, i64 2
  %467 = load i16, i16* %466, align 2
  store i16 %467, i16* %465, align 2
  %468 = getelementptr inbounds i16, i16* %460, i64 3
  %469 = getelementptr inbounds i16, i16* %459, i64 3
  %470 = load i16, i16* %469, align 2
  store i16 %470, i16* %468, align 2
  %471 = getelementptr inbounds i16, i16* %460, i64 4
  %472 = getelementptr inbounds i16, i16* %459, i64 4
  %473 = load i16, i16* %472, align 2
  store i16 %473, i16* %471, align 2
  %474 = getelementptr inbounds i16, i16* %460, i64 5
  %475 = getelementptr inbounds i16, i16* %459, i64 5
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %474, align 2
  %477 = getelementptr inbounds i16, i16* %460, i64 6
  %478 = getelementptr inbounds i16, i16* %459, i64 6
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %460, i64 7
  %481 = getelementptr inbounds i16, i16* %459, i64 7
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = add i64 %458, -8
  %484 = getelementptr inbounds i16, i16* %460, i64 8
  %485 = getelementptr inbounds i16, i16* %459, i64 8
  %486 = icmp eq i64 %483, 0
  br i1 %486, label %487, label %457, !llvm.loop !485

487:                                              ; preds = %452, %457, %432, %311, %304
  %488 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %307, %311 ], [ %305, %304 ], [ %307, %432 ], [ %307, %457 ], [ %307, %452 ]
  %489 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %488, i64 0, i32 1, i32 1
  %490 = load i8, i8* %489, align 1, !noalias !474
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %487
  %493 = bitcast %"class.std::__1::basic_string.4"* %4 to i8**
  %494 = load i8*, i8** %493, align 8, !noalias !474
  call void @_ZdlPv(i8* %494) #14
  br label %495

495:                                              ; preds = %487, %492
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #12, !noalias !474
  %496 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %497 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %496, i64 0, i32 1, i32 1
  %498 = load i8, i8* %497, align 1
  %499 = icmp slt i8 %498, 0
  %500 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = load i16*, i16** %500, align 8
  %502 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %503 = load i64, i64* %502, align 8
  %504 = bitcast %"class.std::__1::basic_string.4"* %10 to i16*
  %505 = zext i8 %498 to i64
  %506 = select i1 %499, i16* %501, i16* %504
  %507 = select i1 %499, i64 %503, i64 %505
  %508 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %509 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %508, i64 0, i32 1, i32 1
  %510 = load i8, i8* %509, align 1
  %511 = icmp slt i8 %510, 0
  br i1 %511, label %512, label %517

512:                                              ; preds = %495
  %513 = load i64, i64* %74, align 8
  %514 = and i64 %513, 9223372036854775807
  %515 = add nsw i64 %514, -1
  %516 = load i64, i64* %73, align 8
  br label %519

517:                                              ; preds = %495
  %518 = zext i8 %510 to i64
  br label %519

519:                                              ; preds = %517, %512
  %520 = phi i64 [ %515, %512 ], [ 10, %517 ]
  %521 = phi i64 [ %516, %512 ], [ %518, %517 ]
  %522 = sub i64 %520, %521
  %523 = icmp ult i64 %522, %507
  br i1 %523, label %683, label %524

524:                                              ; preds = %519
  %525 = icmp eq i64 %507, 0
  br i1 %525, label %686, label %526

526:                                              ; preds = %524
  %527 = load i16*, i16** %72, align 8
  %528 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %529 = select i1 %511, i16* %527, i16* %528
  %530 = getelementptr inbounds i16, i16* %529, i64 %521
  %531 = icmp ult i64 %507, 16
  br i1 %531, label %621, label %532

532:                                              ; preds = %526
  %533 = add i64 %507, %521
  %534 = getelementptr i16, i16* %529, i64 %533
  %535 = getelementptr i16, i16* %506, i64 %507
  %536 = icmp ult i16* %530, %535
  %537 = icmp ult i16* %506, %534
  %538 = and i1 %536, %537
  br i1 %538, label %621, label %539

539:                                              ; preds = %532
  %540 = and i64 %507, -16
  %541 = sub i64 %507, %540
  %542 = getelementptr i16, i16* %506, i64 %540
  %543 = getelementptr i16, i16* %530, i64 %540
  %544 = add i64 %540, -16
  %545 = lshr exact i64 %544, 4
  %546 = add nuw nsw i64 %545, 1
  %547 = and i64 %546, 3
  %548 = icmp ult i64 %544, 48
  br i1 %548, label %600, label %549

549:                                              ; preds = %539
  %550 = sub nsw i64 %546, %547
  br label %551

551:                                              ; preds = %551, %549
  %552 = phi i64 [ 0, %549 ], [ %597, %551 ]
  %553 = phi i64 [ %550, %549 ], [ %598, %551 ]
  %554 = getelementptr i16, i16* %506, i64 %552
  %555 = getelementptr i16, i16* %530, i64 %552
  %556 = bitcast i16* %554 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !486
  %558 = getelementptr i16, i16* %554, i64 8
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !486
  %561 = bitcast i16* %555 to <8 x i16>*
  store <8 x i16> %557, <8 x i16>* %561, align 2, !alias.scope !489, !noalias !486
  %562 = getelementptr i16, i16* %555, i64 8
  %563 = bitcast i16* %562 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %563, align 2, !alias.scope !489, !noalias !486
  %564 = or i64 %552, 16
  %565 = getelementptr i16, i16* %506, i64 %564
  %566 = getelementptr i16, i16* %530, i64 %564
  %567 = bitcast i16* %565 to <8 x i16>*
  %568 = load <8 x i16>, <8 x i16>* %567, align 2, !alias.scope !486
  %569 = getelementptr i16, i16* %565, i64 8
  %570 = bitcast i16* %569 to <8 x i16>*
  %571 = load <8 x i16>, <8 x i16>* %570, align 2, !alias.scope !486
  %572 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %568, <8 x i16>* %572, align 2, !alias.scope !489, !noalias !486
  %573 = getelementptr i16, i16* %566, i64 8
  %574 = bitcast i16* %573 to <8 x i16>*
  store <8 x i16> %571, <8 x i16>* %574, align 2, !alias.scope !489, !noalias !486
  %575 = or i64 %552, 32
  %576 = getelementptr i16, i16* %506, i64 %575
  %577 = getelementptr i16, i16* %530, i64 %575
  %578 = bitcast i16* %576 to <8 x i16>*
  %579 = load <8 x i16>, <8 x i16>* %578, align 2, !alias.scope !486
  %580 = getelementptr i16, i16* %576, i64 8
  %581 = bitcast i16* %580 to <8 x i16>*
  %582 = load <8 x i16>, <8 x i16>* %581, align 2, !alias.scope !486
  %583 = bitcast i16* %577 to <8 x i16>*
  store <8 x i16> %579, <8 x i16>* %583, align 2, !alias.scope !489, !noalias !486
  %584 = getelementptr i16, i16* %577, i64 8
  %585 = bitcast i16* %584 to <8 x i16>*
  store <8 x i16> %582, <8 x i16>* %585, align 2, !alias.scope !489, !noalias !486
  %586 = or i64 %552, 48
  %587 = getelementptr i16, i16* %506, i64 %586
  %588 = getelementptr i16, i16* %530, i64 %586
  %589 = bitcast i16* %587 to <8 x i16>*
  %590 = load <8 x i16>, <8 x i16>* %589, align 2, !alias.scope !486
  %591 = getelementptr i16, i16* %587, i64 8
  %592 = bitcast i16* %591 to <8 x i16>*
  %593 = load <8 x i16>, <8 x i16>* %592, align 2, !alias.scope !486
  %594 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %590, <8 x i16>* %594, align 2, !alias.scope !489, !noalias !486
  %595 = getelementptr i16, i16* %588, i64 8
  %596 = bitcast i16* %595 to <8 x i16>*
  store <8 x i16> %593, <8 x i16>* %596, align 2, !alias.scope !489, !noalias !486
  %597 = add i64 %552, 64
  %598 = add i64 %553, -4
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %551, !llvm.loop !491

600:                                              ; preds = %551, %539
  %601 = phi i64 [ 0, %539 ], [ %597, %551 ]
  %602 = icmp eq i64 %547, 0
  br i1 %602, label %619, label %603

603:                                              ; preds = %600, %603
  %604 = phi i64 [ %616, %603 ], [ %601, %600 ]
  %605 = phi i64 [ %617, %603 ], [ %547, %600 ]
  %606 = getelementptr i16, i16* %506, i64 %604
  %607 = getelementptr i16, i16* %530, i64 %604
  %608 = bitcast i16* %606 to <8 x i16>*
  %609 = load <8 x i16>, <8 x i16>* %608, align 2, !alias.scope !486
  %610 = getelementptr i16, i16* %606, i64 8
  %611 = bitcast i16* %610 to <8 x i16>*
  %612 = load <8 x i16>, <8 x i16>* %611, align 2, !alias.scope !486
  %613 = bitcast i16* %607 to <8 x i16>*
  store <8 x i16> %609, <8 x i16>* %613, align 2, !alias.scope !489, !noalias !486
  %614 = getelementptr i16, i16* %607, i64 8
  %615 = bitcast i16* %614 to <8 x i16>*
  store <8 x i16> %612, <8 x i16>* %615, align 2, !alias.scope !489, !noalias !486
  %616 = add i64 %604, 16
  %617 = add i64 %605, -1
  %618 = icmp eq i64 %617, 0
  br i1 %618, label %619, label %603, !llvm.loop !492

619:                                              ; preds = %603, %600
  %620 = icmp eq i64 %507, %540
  br i1 %620, label %674, label %621

621:                                              ; preds = %619, %532, %526
  %622 = phi i64 [ %507, %532 ], [ %507, %526 ], [ %541, %619 ]
  %623 = phi i16* [ %506, %532 ], [ %506, %526 ], [ %542, %619 ]
  %624 = phi i16* [ %530, %532 ], [ %530, %526 ], [ %543, %619 ]
  %625 = add i64 %622, -1
  %626 = and i64 %622, 7
  %627 = icmp eq i64 %626, 0
  br i1 %627, label %639, label %628

628:                                              ; preds = %621, %628
  %629 = phi i64 [ %634, %628 ], [ %622, %621 ]
  %630 = phi i16* [ %636, %628 ], [ %623, %621 ]
  %631 = phi i16* [ %635, %628 ], [ %624, %621 ]
  %632 = phi i64 [ %637, %628 ], [ %626, %621 ]
  %633 = load i16, i16* %630, align 2
  store i16 %633, i16* %631, align 2
  %634 = add i64 %629, -1
  %635 = getelementptr inbounds i16, i16* %631, i64 1
  %636 = getelementptr inbounds i16, i16* %630, i64 1
  %637 = add i64 %632, -1
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %639, label %628, !llvm.loop !493

639:                                              ; preds = %628, %621
  %640 = phi i64 [ %622, %621 ], [ %634, %628 ]
  %641 = phi i16* [ %623, %621 ], [ %636, %628 ]
  %642 = phi i16* [ %624, %621 ], [ %635, %628 ]
  %643 = icmp ult i64 %625, 7
  br i1 %643, label %674, label %644

644:                                              ; preds = %639, %644
  %645 = phi i64 [ %670, %644 ], [ %640, %639 ]
  %646 = phi i16* [ %672, %644 ], [ %641, %639 ]
  %647 = phi i16* [ %671, %644 ], [ %642, %639 ]
  %648 = load i16, i16* %646, align 2
  store i16 %648, i16* %647, align 2
  %649 = getelementptr inbounds i16, i16* %647, i64 1
  %650 = getelementptr inbounds i16, i16* %646, i64 1
  %651 = load i16, i16* %650, align 2
  store i16 %651, i16* %649, align 2
  %652 = getelementptr inbounds i16, i16* %647, i64 2
  %653 = getelementptr inbounds i16, i16* %646, i64 2
  %654 = load i16, i16* %653, align 2
  store i16 %654, i16* %652, align 2
  %655 = getelementptr inbounds i16, i16* %647, i64 3
  %656 = getelementptr inbounds i16, i16* %646, i64 3
  %657 = load i16, i16* %656, align 2
  store i16 %657, i16* %655, align 2
  %658 = getelementptr inbounds i16, i16* %647, i64 4
  %659 = getelementptr inbounds i16, i16* %646, i64 4
  %660 = load i16, i16* %659, align 2
  store i16 %660, i16* %658, align 2
  %661 = getelementptr inbounds i16, i16* %647, i64 5
  %662 = getelementptr inbounds i16, i16* %646, i64 5
  %663 = load i16, i16* %662, align 2
  store i16 %663, i16* %661, align 2
  %664 = getelementptr inbounds i16, i16* %647, i64 6
  %665 = getelementptr inbounds i16, i16* %646, i64 6
  %666 = load i16, i16* %665, align 2
  store i16 %666, i16* %664, align 2
  %667 = getelementptr inbounds i16, i16* %647, i64 7
  %668 = getelementptr inbounds i16, i16* %646, i64 7
  %669 = load i16, i16* %668, align 2
  store i16 %669, i16* %667, align 2
  %670 = add i64 %645, -8
  %671 = getelementptr inbounds i16, i16* %647, i64 8
  %672 = getelementptr inbounds i16, i16* %646, i64 8
  %673 = icmp eq i64 %670, 0
  br i1 %673, label %674, label %644, !llvm.loop !494

674:                                              ; preds = %639, %644, %619
  %675 = add i64 %521, %507
  %676 = load i8, i8* %509, align 1
  %677 = icmp slt i8 %676, 0
  br i1 %677, label %678, label %679

678:                                              ; preds = %674
  store i64 %675, i64* %73, align 8
  br label %681

679:                                              ; preds = %674
  %680 = trunc i64 %675 to i8
  store i8 %680, i8* %509, align 1
  br label %681

681:                                              ; preds = %679, %678
  %682 = getelementptr inbounds i16, i16* %529, i64 %675
  store i16 0, i16* %682, align 2
  br label %686

683:                                              ; preds = %519
  %684 = add i64 %521, %507
  %685 = sub i64 %684, %520
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %7, i64 %520, i64 %685, i64 %521, i64 %521, i64 0, i64 %507, i16* %506) #12
  br label %686

686:                                              ; preds = %524, %681, %683
  %687 = load i8, i8* %497, align 1
  %688 = icmp slt i8 %687, 0
  br i1 %688, label %689, label %692

689:                                              ; preds = %686
  %690 = bitcast %"class.std::__1::basic_string.4"* %10 to i8**
  %691 = load i8*, i8** %690, align 8
  call void @_ZdlPv(i8* %691) #14
  br label %692

692:                                              ; preds = %686, %689
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %301) #12
  %693 = load i8, i8* %13, align 8, !range !310
  %694 = icmp eq i8 %693, 0
  %695 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 2
  %696 = load i16, i16* %695, align 8
  %697 = select i1 %694, i16 %696, i16 0
  %698 = trunc i64 %35 to i32
  %699 = call i32 @_ZN3url20DefaultPortForSchemeEPKci(i8* %31, i32 %698) #12
  %700 = icmp eq i16 %697, 0
  %701 = zext i16 %697 to i32
  %702 = icmp eq i32 %699, %701
  %703 = or i1 %700, %702
  br i1 %703, label %927, label %704

704:                                              ; preds = %692
  %705 = bitcast %"class.std::__1::basic_string.4"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %705) #12
  %706 = bitcast %"class.std::__1::basic_string.4"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %706) #12
  %707 = load i8, i8* %13, align 8, !range !310
  %708 = icmp eq i8 %707, 0
  %709 = load i16, i16* %695, align 8
  %710 = zext i16 %709 to i32
  %711 = select i1 %708, i32 %710, i32 0
  call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string.4"* nonnull sret %12, i32 %711) #12
  %712 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %713 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %712, i64 0, i32 1, i32 1
  %714 = load i8, i8* %713, align 1, !noalias !495
  %715 = icmp slt i8 %714, 0
  %716 = load i16*, i16** %61, align 8, !noalias !495
  %717 = load i64, i64* %62, align 8, !noalias !495
  %718 = bitcast %"class.std::__1::basic_string.4"* %5 to i16*
  %719 = zext i8 %714 to i64
  %720 = select i1 %715, i16* %716, i16* %718
  %721 = select i1 %715, i64 %717, i64 %719
  %722 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.4"* nonnull %12, i64 0, i16* %720, i64 %721) #12, !noalias !495
  %723 = bitcast %"class.std::__1::basic_string.4"* %722 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %705, i8* align 8 %723, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %723, i8 0, i64 24, i1 false) #12, !noalias !495
  %724 = bitcast %"class.std::__1::basic_string.4"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %725 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %724, i64 0, i32 1, i32 1
  %726 = load i8, i8* %725, align 1
  %727 = icmp slt i8 %726, 0
  %728 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %729 = load i16*, i16** %728, align 8
  %730 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %731 = load i64, i64* %730, align 8
  %732 = bitcast %"class.std::__1::basic_string.4"* %11 to i16*
  %733 = zext i8 %726 to i64
  %734 = select i1 %727, i16* %729, i16* %732
  %735 = select i1 %727, i64 %731, i64 %733
  %736 = load i8, i8* %509, align 1
  %737 = icmp slt i8 %736, 0
  br i1 %737, label %738, label %743

738:                                              ; preds = %704
  %739 = load i64, i64* %74, align 8
  %740 = and i64 %739, 9223372036854775807
  %741 = add nsw i64 %740, -1
  %742 = load i64, i64* %73, align 8
  br label %745

743:                                              ; preds = %704
  %744 = zext i8 %736 to i64
  br label %745

745:                                              ; preds = %743, %738
  %746 = phi i64 [ %741, %738 ], [ 10, %743 ]
  %747 = phi i64 [ %742, %738 ], [ %744, %743 ]
  %748 = sub i64 %746, %747
  %749 = icmp ult i64 %748, %735
  br i1 %749, label %909, label %750

750:                                              ; preds = %745
  %751 = icmp eq i64 %735, 0
  br i1 %751, label %912, label %752

752:                                              ; preds = %750
  %753 = load i16*, i16** %72, align 8
  %754 = bitcast %"class.std::__1::basic_string.4"* %7 to i16*
  %755 = select i1 %737, i16* %753, i16* %754
  %756 = getelementptr inbounds i16, i16* %755, i64 %747
  %757 = icmp ult i64 %735, 16
  br i1 %757, label %847, label %758

758:                                              ; preds = %752
  %759 = add i64 %735, %747
  %760 = getelementptr i16, i16* %755, i64 %759
  %761 = getelementptr i16, i16* %734, i64 %735
  %762 = icmp ult i16* %756, %761
  %763 = icmp ult i16* %734, %760
  %764 = and i1 %762, %763
  br i1 %764, label %847, label %765

765:                                              ; preds = %758
  %766 = and i64 %735, -16
  %767 = sub i64 %735, %766
  %768 = getelementptr i16, i16* %734, i64 %766
  %769 = getelementptr i16, i16* %756, i64 %766
  %770 = add i64 %766, -16
  %771 = lshr exact i64 %770, 4
  %772 = add nuw nsw i64 %771, 1
  %773 = and i64 %772, 3
  %774 = icmp ult i64 %770, 48
  br i1 %774, label %826, label %775

775:                                              ; preds = %765
  %776 = sub nsw i64 %772, %773
  br label %777

777:                                              ; preds = %777, %775
  %778 = phi i64 [ 0, %775 ], [ %823, %777 ]
  %779 = phi i64 [ %776, %775 ], [ %824, %777 ]
  %780 = getelementptr i16, i16* %734, i64 %778
  %781 = getelementptr i16, i16* %756, i64 %778
  %782 = bitcast i16* %780 to <8 x i16>*
  %783 = load <8 x i16>, <8 x i16>* %782, align 2, !alias.scope !498
  %784 = getelementptr i16, i16* %780, i64 8
  %785 = bitcast i16* %784 to <8 x i16>*
  %786 = load <8 x i16>, <8 x i16>* %785, align 2, !alias.scope !498
  %787 = bitcast i16* %781 to <8 x i16>*
  store <8 x i16> %783, <8 x i16>* %787, align 2, !alias.scope !501, !noalias !498
  %788 = getelementptr i16, i16* %781, i64 8
  %789 = bitcast i16* %788 to <8 x i16>*
  store <8 x i16> %786, <8 x i16>* %789, align 2, !alias.scope !501, !noalias !498
  %790 = or i64 %778, 16
  %791 = getelementptr i16, i16* %734, i64 %790
  %792 = getelementptr i16, i16* %756, i64 %790
  %793 = bitcast i16* %791 to <8 x i16>*
  %794 = load <8 x i16>, <8 x i16>* %793, align 2, !alias.scope !498
  %795 = getelementptr i16, i16* %791, i64 8
  %796 = bitcast i16* %795 to <8 x i16>*
  %797 = load <8 x i16>, <8 x i16>* %796, align 2, !alias.scope !498
  %798 = bitcast i16* %792 to <8 x i16>*
  store <8 x i16> %794, <8 x i16>* %798, align 2, !alias.scope !501, !noalias !498
  %799 = getelementptr i16, i16* %792, i64 8
  %800 = bitcast i16* %799 to <8 x i16>*
  store <8 x i16> %797, <8 x i16>* %800, align 2, !alias.scope !501, !noalias !498
  %801 = or i64 %778, 32
  %802 = getelementptr i16, i16* %734, i64 %801
  %803 = getelementptr i16, i16* %756, i64 %801
  %804 = bitcast i16* %802 to <8 x i16>*
  %805 = load <8 x i16>, <8 x i16>* %804, align 2, !alias.scope !498
  %806 = getelementptr i16, i16* %802, i64 8
  %807 = bitcast i16* %806 to <8 x i16>*
  %808 = load <8 x i16>, <8 x i16>* %807, align 2, !alias.scope !498
  %809 = bitcast i16* %803 to <8 x i16>*
  store <8 x i16> %805, <8 x i16>* %809, align 2, !alias.scope !501, !noalias !498
  %810 = getelementptr i16, i16* %803, i64 8
  %811 = bitcast i16* %810 to <8 x i16>*
  store <8 x i16> %808, <8 x i16>* %811, align 2, !alias.scope !501, !noalias !498
  %812 = or i64 %778, 48
  %813 = getelementptr i16, i16* %734, i64 %812
  %814 = getelementptr i16, i16* %756, i64 %812
  %815 = bitcast i16* %813 to <8 x i16>*
  %816 = load <8 x i16>, <8 x i16>* %815, align 2, !alias.scope !498
  %817 = getelementptr i16, i16* %813, i64 8
  %818 = bitcast i16* %817 to <8 x i16>*
  %819 = load <8 x i16>, <8 x i16>* %818, align 2, !alias.scope !498
  %820 = bitcast i16* %814 to <8 x i16>*
  store <8 x i16> %816, <8 x i16>* %820, align 2, !alias.scope !501, !noalias !498
  %821 = getelementptr i16, i16* %814, i64 8
  %822 = bitcast i16* %821 to <8 x i16>*
  store <8 x i16> %819, <8 x i16>* %822, align 2, !alias.scope !501, !noalias !498
  %823 = add i64 %778, 64
  %824 = add i64 %779, -4
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %826, label %777, !llvm.loop !503

826:                                              ; preds = %777, %765
  %827 = phi i64 [ 0, %765 ], [ %823, %777 ]
  %828 = icmp eq i64 %773, 0
  br i1 %828, label %845, label %829

829:                                              ; preds = %826, %829
  %830 = phi i64 [ %842, %829 ], [ %827, %826 ]
  %831 = phi i64 [ %843, %829 ], [ %773, %826 ]
  %832 = getelementptr i16, i16* %734, i64 %830
  %833 = getelementptr i16, i16* %756, i64 %830
  %834 = bitcast i16* %832 to <8 x i16>*
  %835 = load <8 x i16>, <8 x i16>* %834, align 2, !alias.scope !498
  %836 = getelementptr i16, i16* %832, i64 8
  %837 = bitcast i16* %836 to <8 x i16>*
  %838 = load <8 x i16>, <8 x i16>* %837, align 2, !alias.scope !498
  %839 = bitcast i16* %833 to <8 x i16>*
  store <8 x i16> %835, <8 x i16>* %839, align 2, !alias.scope !501, !noalias !498
  %840 = getelementptr i16, i16* %833, i64 8
  %841 = bitcast i16* %840 to <8 x i16>*
  store <8 x i16> %838, <8 x i16>* %841, align 2, !alias.scope !501, !noalias !498
  %842 = add i64 %830, 16
  %843 = add i64 %831, -1
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %845, label %829, !llvm.loop !504

845:                                              ; preds = %829, %826
  %846 = icmp eq i64 %735, %766
  br i1 %846, label %900, label %847

847:                                              ; preds = %845, %758, %752
  %848 = phi i64 [ %735, %758 ], [ %735, %752 ], [ %767, %845 ]
  %849 = phi i16* [ %734, %758 ], [ %734, %752 ], [ %768, %845 ]
  %850 = phi i16* [ %756, %758 ], [ %756, %752 ], [ %769, %845 ]
  %851 = add i64 %848, -1
  %852 = and i64 %848, 7
  %853 = icmp eq i64 %852, 0
  br i1 %853, label %865, label %854

854:                                              ; preds = %847, %854
  %855 = phi i64 [ %860, %854 ], [ %848, %847 ]
  %856 = phi i16* [ %862, %854 ], [ %849, %847 ]
  %857 = phi i16* [ %861, %854 ], [ %850, %847 ]
  %858 = phi i64 [ %863, %854 ], [ %852, %847 ]
  %859 = load i16, i16* %856, align 2
  store i16 %859, i16* %857, align 2
  %860 = add i64 %855, -1
  %861 = getelementptr inbounds i16, i16* %857, i64 1
  %862 = getelementptr inbounds i16, i16* %856, i64 1
  %863 = add i64 %858, -1
  %864 = icmp eq i64 %863, 0
  br i1 %864, label %865, label %854, !llvm.loop !505

865:                                              ; preds = %854, %847
  %866 = phi i64 [ %848, %847 ], [ %860, %854 ]
  %867 = phi i16* [ %849, %847 ], [ %862, %854 ]
  %868 = phi i16* [ %850, %847 ], [ %861, %854 ]
  %869 = icmp ult i64 %851, 7
  br i1 %869, label %900, label %870

870:                                              ; preds = %865, %870
  %871 = phi i64 [ %896, %870 ], [ %866, %865 ]
  %872 = phi i16* [ %898, %870 ], [ %867, %865 ]
  %873 = phi i16* [ %897, %870 ], [ %868, %865 ]
  %874 = load i16, i16* %872, align 2
  store i16 %874, i16* %873, align 2
  %875 = getelementptr inbounds i16, i16* %873, i64 1
  %876 = getelementptr inbounds i16, i16* %872, i64 1
  %877 = load i16, i16* %876, align 2
  store i16 %877, i16* %875, align 2
  %878 = getelementptr inbounds i16, i16* %873, i64 2
  %879 = getelementptr inbounds i16, i16* %872, i64 2
  %880 = load i16, i16* %879, align 2
  store i16 %880, i16* %878, align 2
  %881 = getelementptr inbounds i16, i16* %873, i64 3
  %882 = getelementptr inbounds i16, i16* %872, i64 3
  %883 = load i16, i16* %882, align 2
  store i16 %883, i16* %881, align 2
  %884 = getelementptr inbounds i16, i16* %873, i64 4
  %885 = getelementptr inbounds i16, i16* %872, i64 4
  %886 = load i16, i16* %885, align 2
  store i16 %886, i16* %884, align 2
  %887 = getelementptr inbounds i16, i16* %873, i64 5
  %888 = getelementptr inbounds i16, i16* %872, i64 5
  %889 = load i16, i16* %888, align 2
  store i16 %889, i16* %887, align 2
  %890 = getelementptr inbounds i16, i16* %873, i64 6
  %891 = getelementptr inbounds i16, i16* %872, i64 6
  %892 = load i16, i16* %891, align 2
  store i16 %892, i16* %890, align 2
  %893 = getelementptr inbounds i16, i16* %873, i64 7
  %894 = getelementptr inbounds i16, i16* %872, i64 7
  %895 = load i16, i16* %894, align 2
  store i16 %895, i16* %893, align 2
  %896 = add i64 %871, -8
  %897 = getelementptr inbounds i16, i16* %873, i64 8
  %898 = getelementptr inbounds i16, i16* %872, i64 8
  %899 = icmp eq i64 %896, 0
  br i1 %899, label %900, label %870, !llvm.loop !506

900:                                              ; preds = %865, %870, %845
  %901 = add i64 %747, %735
  %902 = load i8, i8* %509, align 1
  %903 = icmp slt i8 %902, 0
  br i1 %903, label %904, label %905

904:                                              ; preds = %900
  store i64 %901, i64* %73, align 8
  br label %907

905:                                              ; preds = %900
  %906 = trunc i64 %901 to i8
  store i8 %906, i8* %509, align 1
  br label %907

907:                                              ; preds = %905, %904
  %908 = getelementptr inbounds i16, i16* %755, i64 %901
  store i16 0, i16* %908, align 2
  br label %912

909:                                              ; preds = %745
  %910 = add i64 %747, %735
  %911 = sub i64 %910, %746
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* nonnull %7, i64 %746, i64 %911, i64 %747, i64 %747, i64 0, i64 %735, i16* %734) #12
  br label %912

912:                                              ; preds = %750, %907, %909
  %913 = load i8, i8* %725, align 1
  %914 = icmp slt i8 %913, 0
  br i1 %914, label %915, label %918

915:                                              ; preds = %912
  %916 = bitcast %"class.std::__1::basic_string.4"* %11 to i8**
  %917 = load i8*, i8** %916, align 8
  call void @_ZdlPv(i8* %917) #14
  br label %918

918:                                              ; preds = %912, %915
  %919 = bitcast %"class.std::__1::basic_string.4"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %920 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %919, i64 0, i32 1, i32 1
  %921 = load i8, i8* %920, align 1
  %922 = icmp slt i8 %921, 0
  br i1 %922, label %923, label %926

923:                                              ; preds = %918
  %924 = bitcast %"class.std::__1::basic_string.4"* %12 to i8**
  %925 = load i8*, i8** %924, align 8
  call void @_ZdlPv(i8* %925) #14
  br label %926

926:                                              ; preds = %918, %923
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %706) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %705) #12
  br label %927

927:                                              ; preds = %692, %926
  %928 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %928, i8* nonnull align 8 %71, i64 24, i1 false) #12
  %929 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %930 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %929, i64 0, i32 1, i32 1
  %931 = load i8, i8* %930, align 1
  %932 = icmp slt i8 %931, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  br i1 %932, label %933, label %936

933:                                              ; preds = %927
  %934 = bitcast %"class.std::__1::basic_string.4"* %6 to i8**
  %935 = load i8*, i8** %934, align 8
  call void @_ZdlPv(i8* %935) #14
  br label %936

936:                                              ; preds = %927, %933
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  %937 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %938 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %937, i64 0, i32 1, i32 1
  %939 = load i8, i8* %938, align 1
  %940 = icmp slt i8 %939, 0
  br i1 %940, label %941, label %944

941:                                              ; preds = %936
  %942 = bitcast %"class.std::__1::basic_string.4"* %5 to i8**
  %943 = load i8*, i8** %942, align 8
  call void @_ZdlPv(i8* %943) #14
  br label %944

944:                                              ; preds = %936, %941
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  br label %945

945:                                              ; preds = %944, %57
  ret void
}

declare void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string.4"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13url_formatter53FormatUrlForDisplayOmitSchemePathAndTrivialSubdomainsERK4GURL(%"class.std::__1::basic_string.4"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = load i32, i32* @_ZN13url_formatter22kFormatUrlOmitDefaultsE, align 4
  %4 = load i32, i32* @_ZN13url_formatter23kFormatUrlTrimAfterHostE, align 4
  %5 = or i32 %4, %3
  %6 = load i32, i32* @_ZN13url_formatter19kFormatUrlOmitHTTPSE, align 4
  %7 = or i32 %5, %6
  %8 = load i32, i32* @_ZN13url_formatter31kFormatUrlOmitTrivialSubdomainsE, align 4
  %9 = or i32 %7, %8
  tail call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string.4"* sret %0, %class.GURL* dereferenceable(120) %1, i32 %9, i32 2, %"struct.url::Parsed"* null, i64* null, i64* null) #12
  ret void
}

declare void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERK4GURLNS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.4"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #14
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !507
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !507
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !510, !noalias !507
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !510, !noalias !507
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !507
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !507
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !510, !noalias !507
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !510, !noalias !507
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !507
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !507
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !510, !noalias !507
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !510, !noalias !507
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !507
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !507
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !510, !noalias !507
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !510, !noalias !507
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !512

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !507
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !507
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !510, !noalias !507
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !510, !noalias !507
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !513

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !514

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !515

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !516
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !516
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !519, !noalias !516
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !519, !noalias !516
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !516
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !516
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !519, !noalias !516
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !519, !noalias !516
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !516
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !516
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !519, !noalias !516
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !519, !noalias !516
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !516
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !516
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !519, !noalias !516
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !519, !noalias !516
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !521

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !516
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !516
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !519, !noalias !516
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !519, !noalias !516
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !522

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !523

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !524

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #14
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !525
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !525
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !528, !noalias !525
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !528, !noalias !525
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !525
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !525
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !528, !noalias !525
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !528, !noalias !525
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !525
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !525
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !528, !noalias !525
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !528, !noalias !525
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !525
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !525
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !528, !noalias !525
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !528, !noalias !525
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !530

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !525
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !525
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !528, !noalias !525
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !528, !noalias !525
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !531

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !532

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !533

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !534

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !535

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !536

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !538
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !538
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !541, !noalias !538
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !541, !noalias !538
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !538
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !538
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !541, !noalias !538
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !541, !noalias !538
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !538
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !538
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !541, !noalias !538
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !541, !noalias !538
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !538
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !538
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !541, !noalias !538
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !541, !noalias !538
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !543

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !538
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !538
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !541, !noalias !538
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !541, !noalias !538
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !544

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !545

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !546

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.11"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #13
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #13
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #13
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #14
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !547
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !547
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !550, !noalias !547
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !550, !noalias !547
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !547
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !547
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !550, !noalias !547
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !550, !noalias !547
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !547
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !547
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !550, !noalias !547
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !550, !noalias !547
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !547
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !547
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !550, !noalias !547
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !550, !noalias !547
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !552

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !547
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !547
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !550, !noalias !547
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !550, !noalias !547
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !553

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !554

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !555

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.4"*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #13
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !556
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !556
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !559, !noalias !556
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !559, !noalias !556
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !556
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !556
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !559, !noalias !556
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !559, !noalias !556
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !556
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !556
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !559, !noalias !556
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !559, !noalias !556
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !556
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !556
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !559, !noalias !556
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !559, !noalias !556
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !561

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !556
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !556
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !559, !noalias !556
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !559, !noalias !556
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !562

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !563

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !564

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !565
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !565
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !568, !noalias !565
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !568, !noalias !565
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !565
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !565
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !568, !noalias !565
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !568, !noalias !565
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !570

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !565
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !565
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !568, !noalias !565
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !568, !noalias !565
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !571

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !572

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !573
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !573
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !576, !noalias !573
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !576, !noalias !573
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !573
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !573
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !576, !noalias !573
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !576, !noalias !573
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !573
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !573
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !576, !noalias !573
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !576, !noalias !573
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !573
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !573
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !576, !noalias !573
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !576, !noalias !573
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !578

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !573
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !573
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !576, !noalias !573
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !576, !noalias !573
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !579

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !580

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !581

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !582
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !582
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !585, !noalias !582
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !585, !noalias !582
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !582
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !582
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !585, !noalias !582
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !585, !noalias !582
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !587

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !582
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !582
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !585, !noalias !582
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !585, !noalias !582
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !588

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !589

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string.4"* %0
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = !{!23, !26}
!31 = distinct !{!31, !8}
!32 = distinct !{!32, !10}
!33 = distinct !{!33, !10}
!34 = distinct !{!34, !8}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = !{!36, !39}
!44 = distinct !{!44, !8}
!45 = distinct !{!45, !10}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !8}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !8}
!54 = distinct !{!54, !10}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !8}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = !{!61, !64}
!69 = distinct !{!69, !8}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !10}
!72 = distinct !{!72, !8}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !8}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !10}
!81 = distinct !{!81, !8}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !8}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !10}
!90 = distinct !{!90, !8}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!93 = distinct !{!93, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !8}
!100 = distinct !{!100, !10}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !8}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !8}
!109 = distinct !{!109, !10}
!110 = distinct !{!110, !10}
!111 = distinct !{!111, !8}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !8}
!118 = distinct !{!118, !10}
!119 = distinct !{!119, !10}
!120 = distinct !{!120, !8}
!121 = !{!122, !124}
!122 = distinct !{!122, !123, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!123 = distinct !{!123, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!124 = distinct !{!124, !125, !"_ZNK4GURL4hostEv: argument 0"}
!125 = distinct !{!125, !"_ZNK4GURL4hostEv"}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !8}
!132 = distinct !{!132, !10}
!133 = distinct !{!133, !10}
!134 = distinct !{!134, !8}
!135 = !{!136, !138}
!136 = distinct !{!136, !137, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!137 = distinct !{!137, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!138 = distinct !{!138, !139, !"_ZNK4GURL4portEv: argument 0"}
!139 = distinct !{!139, !"_ZNK4GURL4portEv"}
!140 = !{!141, !143}
!141 = distinct !{!141, !142, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!142 = distinct !{!142, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!143 = distinct !{!143, !144, !"_ZNK4GURL4portEv: argument 0"}
!144 = distinct !{!144, !"_ZNK4GURL4portEv"}
!145 = !{!146}
!146 = distinct !{!146, !147, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!147 = distinct !{!147, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!148 = !{!149}
!149 = distinct !{!149, !150}
!150 = distinct !{!150, !"LVerDomain"}
!151 = !{!152}
!152 = distinct !{!152, !150}
!153 = distinct !{!153, !8}
!154 = distinct !{!154, !10}
!155 = distinct !{!155, !10}
!156 = distinct !{!156, !8}
!157 = !{!158, !160}
!158 = distinct !{!158, !159, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!159 = distinct !{!159, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!160 = distinct !{!160, !161, !"_ZNK4GURL4portEv: argument 0"}
!161 = distinct !{!161, !"_ZNK4GURL4portEv"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!164 = distinct !{!164, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!165 = !{!166}
!166 = distinct !{!166, !167}
!167 = distinct !{!167, !"LVerDomain"}
!168 = !{!169}
!169 = distinct !{!169, !167}
!170 = distinct !{!170, !8}
!171 = distinct !{!171, !10}
!172 = distinct !{!172, !10}
!173 = distinct !{!173, !8}
!174 = !{!175}
!175 = distinct !{!175, !176}
!176 = distinct !{!176, !"LVerDomain"}
!177 = !{!178}
!178 = distinct !{!178, !176}
!179 = distinct !{!179, !8}
!180 = distinct !{!180, !10}
!181 = distinct !{!181, !10}
!182 = distinct !{!182, !8}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = distinct !{!188, !8}
!189 = distinct !{!189, !10}
!190 = distinct !{!190, !10}
!191 = distinct !{!191, !8}
!192 = !{!193}
!193 = distinct !{!193, !194}
!194 = distinct !{!194, !"LVerDomain"}
!195 = !{!196}
!196 = distinct !{!196, !194}
!197 = distinct !{!197, !8}
!198 = distinct !{!198, !10}
!199 = distinct !{!199, !10}
!200 = distinct !{!200, !8}
!201 = !{!202}
!202 = distinct !{!202, !203}
!203 = distinct !{!203, !"LVerDomain"}
!204 = !{!205}
!205 = distinct !{!205, !203}
!206 = distinct !{!206, !8}
!207 = distinct !{!207, !10}
!208 = distinct !{!208, !10}
!209 = distinct !{!209, !8}
!210 = !{!211}
!211 = distinct !{!211, !212}
!212 = distinct !{!212, !"LVerDomain"}
!213 = !{!214}
!214 = distinct !{!214, !212}
!215 = distinct !{!215, !8}
!216 = distinct !{!216, !10}
!217 = distinct !{!217, !10}
!218 = distinct !{!218, !8}
!219 = !{!220}
!220 = distinct !{!220, !221}
!221 = distinct !{!221, !"LVerDomain"}
!222 = !{!223}
!223 = distinct !{!223, !221}
!224 = distinct !{!224, !8}
!225 = distinct !{!225, !10}
!226 = distinct !{!226, !10}
!227 = distinct !{!227, !8}
!228 = !{!229}
!229 = distinct !{!229, !230}
!230 = distinct !{!230, !"LVerDomain"}
!231 = !{!232}
!232 = distinct !{!232, !230}
!233 = distinct !{!233, !8}
!234 = distinct !{!234, !10}
!235 = distinct !{!235, !10}
!236 = distinct !{!236, !8}
!237 = !{!238}
!238 = distinct !{!238, !239}
!239 = distinct !{!239, !"LVerDomain"}
!240 = !{!241}
!241 = distinct !{!241, !239}
!242 = distinct !{!242, !8}
!243 = distinct !{!243, !10}
!244 = distinct !{!244, !10}
!245 = distinct !{!245, !8}
!246 = !{!247}
!247 = distinct !{!247, !248}
!248 = distinct !{!248, !"LVerDomain"}
!249 = !{!250}
!250 = distinct !{!250, !248}
!251 = distinct !{!251, !8}
!252 = distinct !{!252, !10}
!253 = distinct !{!253, !10}
!254 = distinct !{!254, !8}
!255 = !{!256}
!256 = distinct !{!256, !257}
!257 = distinct !{!257, !"LVerDomain"}
!258 = !{!259}
!259 = distinct !{!259, !257}
!260 = distinct !{!260, !8}
!261 = distinct !{!261, !10}
!262 = distinct !{!262, !10}
!263 = distinct !{!263, !8}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!266 = distinct !{!266, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!267 = !{!268}
!268 = distinct !{!268, !269}
!269 = distinct !{!269, !"LVerDomain"}
!270 = !{!271}
!271 = distinct !{!271, !269}
!272 = distinct !{!272, !8}
!273 = distinct !{!273, !10}
!274 = distinct !{!274, !10}
!275 = distinct !{!275, !8}
!276 = !{!277}
!277 = distinct !{!277, !278}
!278 = distinct !{!278, !"LVerDomain"}
!279 = !{!280}
!280 = distinct !{!280, !278}
!281 = distinct !{!281, !8}
!282 = distinct !{!282, !10}
!283 = distinct !{!283, !10}
!284 = distinct !{!284, !8}
!285 = !{!286}
!286 = distinct !{!286, !287}
!287 = distinct !{!287, !"LVerDomain"}
!288 = !{!289}
!289 = distinct !{!289, !287}
!290 = distinct !{!290, !8}
!291 = distinct !{!291, !10}
!292 = distinct !{!292, !10}
!293 = distinct !{!293, !8}
!294 = !{!295}
!295 = distinct !{!295, !296, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!296 = distinct !{!296, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!299 = distinct !{!299, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!300 = !{!301}
!301 = distinct !{!301, !302}
!302 = distinct !{!302, !"LVerDomain"}
!303 = !{!304}
!304 = distinct !{!304, !302}
!305 = !{!298, !301}
!306 = distinct !{!306, !8}
!307 = distinct !{!307, !10}
!308 = distinct !{!308, !10}
!309 = distinct !{!309, !8}
!310 = !{i8 0, i8 2}
!311 = !{!312}
!312 = distinct !{!312, !313, !"_ZN13url_formatter9FormatUrlERK4GURL: argument 0"}
!313 = distinct !{!313, !"_ZN13url_formatter9FormatUrlERK4GURL"}
!314 = !{!315}
!315 = distinct !{!315, !316, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!316 = distinct !{!316, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!317 = !{!318}
!318 = distinct !{!318, !319}
!319 = distinct !{!319, !"LVerDomain"}
!320 = !{!321}
!321 = distinct !{!321, !319}
!322 = !{!315, !318}
!323 = distinct !{!323, !8}
!324 = distinct !{!324, !10}
!325 = distinct !{!325, !10}
!326 = distinct !{!326, !8}
!327 = !{!328, !330}
!328 = distinct !{!328, !329, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!329 = distinct !{!329, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!330 = distinct !{!330, !331, !"_ZNK4GURL4pathEv: argument 0"}
!331 = distinct !{!331, !"_ZNK4GURL4pathEv"}
!332 = !{!333}
!333 = distinct !{!333, !334, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!334 = distinct !{!334, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!335 = !{!336}
!336 = distinct !{!336, !337}
!337 = distinct !{!337, !"LVerDomain"}
!338 = !{!339}
!339 = distinct !{!339, !337}
!340 = !{!333, !336}
!341 = distinct !{!341, !8}
!342 = distinct !{!342, !10}
!343 = distinct !{!343, !10}
!344 = distinct !{!344, !8}
!345 = !{!346}
!346 = distinct !{!346, !347, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!347 = distinct !{!347, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!348 = !{!349}
!349 = distinct !{!349, !350}
!350 = distinct !{!350, !"LVerDomain"}
!351 = !{!352}
!352 = distinct !{!352, !350}
!353 = !{!346, !349}
!354 = distinct !{!354, !8}
!355 = distinct !{!355, !10}
!356 = distinct !{!356, !10}
!357 = distinct !{!357, !8}
!358 = !{!359}
!359 = distinct !{!359, !360, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!360 = distinct !{!360, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!361 = !{!362}
!362 = distinct !{!362, !363}
!363 = distinct !{!363, !"LVerDomain"}
!364 = !{!365}
!365 = distinct !{!365, !363}
!366 = !{!359, !362}
!367 = distinct !{!367, !8}
!368 = distinct !{!368, !10}
!369 = distinct !{!369, !10}
!370 = distinct !{!370, !8}
!371 = !{!372, !374}
!372 = distinct !{!372, !373, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!373 = distinct !{!373, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!374 = distinct !{!374, !375, !"_ZNK4GURL4pathEv: argument 0"}
!375 = distinct !{!375, !"_ZNK4GURL4pathEv"}
!376 = !{!377}
!377 = distinct !{!377, !378, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!378 = distinct !{!378, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!379 = !{!380}
!380 = distinct !{!380, !381}
!381 = distinct !{!381, !"LVerDomain"}
!382 = !{!383}
!383 = distinct !{!383, !381}
!384 = !{!377, !380}
!385 = distinct !{!385, !8}
!386 = distinct !{!386, !10}
!387 = distinct !{!387, !10}
!388 = distinct !{!388, !8}
!389 = !{!390}
!390 = distinct !{!390, !391, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!391 = distinct !{!391, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!392 = !{!393}
!393 = distinct !{!393, !394}
!394 = distinct !{!394, !"LVerDomain"}
!395 = !{!396}
!396 = distinct !{!396, !394}
!397 = !{!390, !393}
!398 = distinct !{!398, !8}
!399 = distinct !{!399, !10}
!400 = distinct !{!400, !10}
!401 = distinct !{!401, !8}
!402 = !{!403}
!403 = distinct !{!403, !404, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!404 = distinct !{!404, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!405 = !{!406}
!406 = distinct !{!406, !407}
!407 = distinct !{!407, !"LVerDomain"}
!408 = !{!409}
!409 = distinct !{!409, !407}
!410 = !{!403, !406}
!411 = distinct !{!411, !8}
!412 = distinct !{!412, !10}
!413 = distinct !{!413, !10}
!414 = distinct !{!414, !8}
!415 = !{!416}
!416 = distinct !{!416, !417, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!417 = distinct !{!417, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!418 = !{!419}
!419 = distinct !{!419, !420}
!420 = distinct !{!420, !"LVerDomain"}
!421 = !{!422}
!422 = distinct !{!422, !420}
!423 = !{!416, !419}
!424 = distinct !{!424, !8}
!425 = distinct !{!425, !10}
!426 = distinct !{!426, !10}
!427 = distinct !{!427, !8}
!428 = !{!429}
!429 = distinct !{!429, !430, !"_ZN12_GLOBAL__N_114HostForDisplayEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!430 = distinct !{!430, !"_ZN12_GLOBAL__N_114HostForDisplayEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!431 = !{!432}
!432 = distinct !{!432, !433}
!433 = distinct !{!433, !"LVerDomain"}
!434 = !{!435}
!435 = distinct !{!435, !433}
!436 = distinct !{!436, !8}
!437 = distinct !{!437, !10}
!438 = distinct !{!438, !10}
!439 = distinct !{!439, !8}
!440 = !{!441}
!441 = distinct !{!441, !442}
!442 = distinct !{!442, !"LVerDomain"}
!443 = !{!444}
!444 = distinct !{!444, !442}
!445 = distinct !{!445, !8}
!446 = distinct !{!446, !10}
!447 = distinct !{!447, !10}
!448 = distinct !{!448, !8}
!449 = !{!450}
!450 = distinct !{!450, !451, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!451 = distinct !{!451, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!452 = !{!453}
!453 = distinct !{!453, !454}
!454 = distinct !{!454, !"LVerDomain"}
!455 = !{!456}
!456 = distinct !{!456, !454}
!457 = distinct !{!457, !8}
!458 = distinct !{!458, !10}
!459 = distinct !{!459, !10}
!460 = distinct !{!460, !8}
!461 = !{!462}
!462 = distinct !{!462, !463, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!463 = distinct !{!463, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!464 = !{!465}
!465 = distinct !{!465, !466}
!466 = distinct !{!466, !"LVerDomain"}
!467 = !{!468}
!468 = distinct !{!468, !466}
!469 = !{!462, !465}
!470 = distinct !{!470, !8}
!471 = distinct !{!471, !10}
!472 = distinct !{!472, !10}
!473 = distinct !{!473, !8}
!474 = !{!475}
!475 = distinct !{!475, !476, !"_ZN12_GLOBAL__N_114HostForDisplayEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!476 = distinct !{!476, !"_ZN12_GLOBAL__N_114HostForDisplayEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!477 = !{!478}
!478 = distinct !{!478, !479}
!479 = distinct !{!479, !"LVerDomain"}
!480 = !{!481}
!481 = distinct !{!481, !479}
!482 = distinct !{!482, !8}
!483 = distinct !{!483, !10}
!484 = distinct !{!484, !10}
!485 = distinct !{!485, !8}
!486 = !{!487}
!487 = distinct !{!487, !488}
!488 = distinct !{!488, !"LVerDomain"}
!489 = !{!490}
!490 = distinct !{!490, !488}
!491 = distinct !{!491, !8}
!492 = distinct !{!492, !10}
!493 = distinct !{!493, !10}
!494 = distinct !{!494, !8}
!495 = !{!496}
!496 = distinct !{!496, !497, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!497 = distinct !{!497, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!498 = !{!499}
!499 = distinct !{!499, !500}
!500 = distinct !{!500, !"LVerDomain"}
!501 = !{!502}
!502 = distinct !{!502, !500}
!503 = distinct !{!503, !8}
!504 = distinct !{!504, !10}
!505 = distinct !{!505, !10}
!506 = distinct !{!506, !8}
!507 = !{!508}
!508 = distinct !{!508, !509}
!509 = distinct !{!509, !"LVerDomain"}
!510 = !{!511}
!511 = distinct !{!511, !509}
!512 = distinct !{!512, !8}
!513 = distinct !{!513, !10}
!514 = distinct !{!514, !10}
!515 = distinct !{!515, !8}
!516 = !{!517}
!517 = distinct !{!517, !518}
!518 = distinct !{!518, !"LVerDomain"}
!519 = !{!520}
!520 = distinct !{!520, !518}
!521 = distinct !{!521, !8}
!522 = distinct !{!522, !10}
!523 = distinct !{!523, !10}
!524 = distinct !{!524, !8}
!525 = !{!526}
!526 = distinct !{!526, !527}
!527 = distinct !{!527, !"LVerDomain"}
!528 = !{!529}
!529 = distinct !{!529, !527}
!530 = distinct !{!530, !8}
!531 = distinct !{!531, !10}
!532 = distinct !{!532, !10}
!533 = distinct !{!533, !8}
!534 = distinct !{!534, !8}
!535 = distinct !{!535, !10}
!536 = distinct !{!536, !537, !8}
!537 = !{!"llvm.loop.unroll.runtime.disable"}
!538 = !{!539}
!539 = distinct !{!539, !540}
!540 = distinct !{!540, !"LVerDomain"}
!541 = !{!542}
!542 = distinct !{!542, !540}
!543 = distinct !{!543, !8}
!544 = distinct !{!544, !10}
!545 = distinct !{!545, !10}
!546 = distinct !{!546, !8}
!547 = !{!548}
!548 = distinct !{!548, !549}
!549 = distinct !{!549, !"LVerDomain"}
!550 = !{!551}
!551 = distinct !{!551, !549}
!552 = distinct !{!552, !8}
!553 = distinct !{!553, !10}
!554 = distinct !{!554, !10}
!555 = distinct !{!555, !8}
!556 = !{!557}
!557 = distinct !{!557, !558}
!558 = distinct !{!558, !"LVerDomain"}
!559 = !{!560}
!560 = distinct !{!560, !558}
!561 = distinct !{!561, !8}
!562 = distinct !{!562, !10}
!563 = distinct !{!563, !10}
!564 = distinct !{!564, !8}
!565 = !{!566}
!566 = distinct !{!566, !567}
!567 = distinct !{!567, !"LVerDomain"}
!568 = !{!569}
!569 = distinct !{!569, !567}
!570 = distinct !{!570, !8}
!571 = distinct !{!571, !10}
!572 = distinct !{!572, !8}
!573 = !{!574}
!574 = distinct !{!574, !575}
!575 = distinct !{!575, !"LVerDomain"}
!576 = !{!577}
!577 = distinct !{!577, !575}
!578 = distinct !{!578, !8}
!579 = distinct !{!579, !10}
!580 = distinct !{!580, !10}
!581 = distinct !{!581, !8}
!582 = !{!583}
!583 = distinct !{!583, !584}
!584 = distinct !{!584, !"LVerDomain"}
!585 = !{!586}
!586 = distinct !{!586, !584}
!587 = distinct !{!587, !8}
!588 = distinct !{!588, !10}
!589 = distinct !{!589, !8}
