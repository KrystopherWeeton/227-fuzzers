; ModuleID = '../../media/base/wait_and_replace_sync_token_client.cc'
source_filename = "../../media/base/wait_and_replace_sync_token_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::WaitAndReplaceSyncTokenClient" = type { %"class.media::VideoFrame::SyncTokenClient", %"class.gpu::InterfaceBase"* }
%"class.media::VideoFrame::SyncTokenClient" = type { i32 (...)** }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }

$_ZN5media10VideoFrame15SyncTokenClientD2Ev = comdat any

$_ZN5media29WaitAndReplaceSyncTokenClientD0Ev = comdat any

@_ZTVN5media29WaitAndReplaceSyncTokenClientE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::WaitAndReplaceSyncTokenClient"*, %"struct.gpu::SyncToken"*)* @_ZN5media29WaitAndReplaceSyncTokenClient17GenerateSyncTokenEPN3gpu9SyncTokenE to i8*), i8* bitcast (void (%"class.media::WaitAndReplaceSyncTokenClient"*, %"struct.gpu::SyncToken"*)* @_ZN5media29WaitAndReplaceSyncTokenClient13WaitSyncTokenERKN3gpu9SyncTokenE to i8*), i8* bitcast (void (%"class.media::VideoFrame::SyncTokenClient"*)* @_ZN5media10VideoFrame15SyncTokenClientD2Ev to i8*), i8* bitcast (void (%"class.media::WaitAndReplaceSyncTokenClient"*)* @_ZN5media29WaitAndReplaceSyncTokenClientD0Ev to i8*)] }, align 8

@_ZN5media29WaitAndReplaceSyncTokenClientC1EPN3gpu13InterfaceBaseE = hidden unnamed_addr alias void (%"class.media::WaitAndReplaceSyncTokenClient"*, %"class.gpu::InterfaceBase"*), void (%"class.media::WaitAndReplaceSyncTokenClient"*, %"class.gpu::InterfaceBase"*)* @_ZN5media29WaitAndReplaceSyncTokenClientC2EPN3gpu13InterfaceBaseE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media29WaitAndReplaceSyncTokenClientC2EPN3gpu13InterfaceBaseE(%"class.media::WaitAndReplaceSyncTokenClient"* nocapture, %"class.gpu::InterfaceBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::WaitAndReplaceSyncTokenClient", %"class.media::WaitAndReplaceSyncTokenClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media29WaitAndReplaceSyncTokenClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media::WaitAndReplaceSyncTokenClient", %"class.media::WaitAndReplaceSyncTokenClient"* %0, i64 0, i32 1
  store %"class.gpu::InterfaceBase"* %1, %"class.gpu::InterfaceBase"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media29WaitAndReplaceSyncTokenClient17GenerateSyncTokenEPN3gpu9SyncTokenE(%"class.media::WaitAndReplaceSyncTokenClient"* nocapture readonly, %"struct.gpu::SyncToken"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::WaitAndReplaceSyncTokenClient", %"class.media::WaitAndReplaceSyncTokenClient"* %0, i64 0, i32 1
  %4 = load %"class.gpu::InterfaceBase"*, %"class.gpu::InterfaceBase"** %3, align 8
  %5 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %1, i64 0, i32 0
  %6 = bitcast %"class.gpu::InterfaceBase"* %4 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %7 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %6, align 8
  %8 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %7, align 8
  tail call void %8(%"class.gpu::InterfaceBase"* %4, i8* %5) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media29WaitAndReplaceSyncTokenClient13WaitSyncTokenERKN3gpu9SyncTokenE(%"class.media::WaitAndReplaceSyncTokenClient"* nocapture readonly, %"struct.gpu::SyncToken"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::WaitAndReplaceSyncTokenClient", %"class.media::WaitAndReplaceSyncTokenClient"* %0, i64 0, i32 1
  %4 = load %"class.gpu::InterfaceBase"*, %"class.gpu::InterfaceBase"** %3, align 8
  %5 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %1, i64 0, i32 0
  %6 = bitcast %"class.gpu::InterfaceBase"* %4 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %7 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %7, i64 3
  %9 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %8, align 8
  tail call void %9(%"class.gpu::InterfaceBase"* %4, i8* %5) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media10VideoFrame15SyncTokenClientD2Ev(%"class.media::VideoFrame::SyncTokenClient"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media29WaitAndReplaceSyncTokenClientD0Ev(%"class.media::WaitAndReplaceSyncTokenClient"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.media::WaitAndReplaceSyncTokenClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
