; ModuleID = '../../chrome/browser/extensions/extension_assets_manager.cc'
source_filename = "../../chrome/browser/extensions/extension_assets_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ExtensionAssetsManager" = type { i32 (...)** }
%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl" = type { %"class.extensions::ExtensionAssetsManager" }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.18", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.42", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.24" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.29" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i32*, i32*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.48" }
%"union.absl::variant_internal::DestructibleUnionImpl.48" = type { %"union.absl::variant_internal::DestructibleUnionImpl.49" }
%"union.absl::variant_internal::DestructibleUnionImpl.49" = type { %"union.absl::variant_internal::DestructibleUnionImpl.50" }
%"union.absl::variant_internal::DestructibleUnionImpl.50" = type { %"union.absl::variant_internal::DestructibleUnionImpl.51" }
%"union.absl::variant_internal::DestructibleUnionImpl.51" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%class.Profile = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.92", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN10extensions22ExtensionAssetsManagerD2Ev = comdat any

@_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E = internal global i64 0, align 8
@_ZTVN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*, %"class.extensions::Extension"*, %"class.base::FilePath"*, %"class.base::FilePath"*, %class.Profile*, %"class.base::OnceCallback"*, i1)* @_ZN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImpl16InstallExtensionEPKNS_9ExtensionERKN4base8FilePathES8_P7ProfileNS5_12OnceCallbackIFvS8_EEEb to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*, %"class.std::__1::basic_string"*, %class.Profile*, %"class.base::FilePath"*, %"class.base::FilePath"*)* @_ZN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImpl18UninstallExtensionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEP7ProfileRKN4base8FilePathESG_ to i8*), i8* bitcast (void (%"class.extensions::ExtensionAssetsManager"*)* @_ZN10extensions22ExtensionAssetsManagerD2Ev to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)* @_ZN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::ExtensionAssetsManager"* @_ZN10extensions22ExtensionAssetsManager11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E) #6
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 8) #7
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E, i64 %8, void (i8*)* nonnull @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E6OnExitEPv, i8* null) #6
  br label %11

9:                                                ; preds = %3
  %10 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %11

11:                                               ; preds = %0, %5, %9
  %12 = phi i64 [ %1, %0 ], [ %8, %5 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*
  %14 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl", %"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"* %13, i64 0, i32 0
  ret %"class.extensions::ExtensionAssetsManager"* %14
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E6OnExitEPv(i8* nocapture readnone) #0 align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to %"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*
  %6 = inttoptr i64 %2 to void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)***
  %7 = load void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)**, void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)*, void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)** %7, i64 3
  %9 = load void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)*, void (%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*)** %8, align 8
  tail call void %9(%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"* nonnull %5) #6
  br label %10

10:                                               ; preds = %1, %4
  store i64 0, i64* @_ZN4base9SingletonIN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplENS_22DefaultSingletonTraitsIS3_EES3_E9instance_E, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImpl16InstallExtensionEPKNS_9ExtensionERKN4base8FilePathES8_P7ProfileNS5_12OnceCallbackIFvS8_EEEb(%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"* nocapture readnone, %"class.extensions::Extension"*, %"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), %class.Profile* nocapture readnone, %"class.base::OnceCallback"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::FilePath", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.base::FilePath"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #6
  %13 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #6
  call void @_ZNK10extensions9Extension13VersionStringEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.extensions::Extension"* %1) #6
  call void @_ZN10extensions9file_util16InstallExtensionERKN4base8FilePathERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_S4_(%"class.base::FilePath"* nonnull sret %9, %"class.base::FilePath"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.base::FilePath"* dereferenceable(24) %3) #6
  %14 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %20 = inttoptr i64 %17 to %"class.base::internal::BindStateBase"*
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %20, i64 0, i32 1
  %22 = bitcast void ()** %21 to void (%"class.base::internal::BindStateBase"*, %"class.base::FilePath"*)**
  %23 = load void (%"class.base::internal::BindStateBase"*, %"class.base::FilePath"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::FilePath"*)** %22, align 8
  call void %23(%"class.base::internal::BindStateBase"* %20, %"class.base::FilePath"* nonnull dereferenceable(24) %9) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %9) #6
  %24 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %7, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImpl18UninstallExtensionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEP7ProfileRKN4base8FilePathESG_(%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24), %class.Profile* nocapture readnone, %"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions9file_util18UninstallExtensionERKN4base8FilePathERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions22ExtensionAssetsManagerD2Ev(%"class.extensions::ExtensionAssetsManager"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_126ExtensionAssetsManagerImplD0Ev(%"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.extensions::(anonymous namespace)::ExtensionAssetsManagerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare void @_ZN10extensions9file_util16InstallExtensionERKN4base8FilePathERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_S4_(%"class.base::FilePath"* sret, %"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #2

declare void @_ZNK10extensions9Extension13VersionStringEv(%"class.std::__1::basic_string"* sret, %"class.extensions::Extension"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN10extensions9file_util18UninstallExtensionERKN4base8FilePathERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
