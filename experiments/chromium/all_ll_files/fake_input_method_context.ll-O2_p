; ModuleID = '../../ui/base/ime/linux/fake_input_method_context.cc'
source_filename = "../../ui/base/ime/linux/fake_input_method_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ui::FakeInputMethodContext" = type { %"class.ui::LinuxInputMethodContext" }
%"class.ui::LinuxInputMethodContext" = type { i32 (...)** }
%"class.ui::KeyEvent" = type opaque
%"class.gfx::Rect" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::Range" = type opaque

$_ZN2ui23LinuxInputMethodContextD2Ev = comdat any

$_ZN2ui22FakeInputMethodContextD0Ev = comdat any

@_ZTVN2ui22FakeInputMethodContextE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::LinuxInputMethodContext"*)* @_ZN2ui23LinuxInputMethodContextD2Ev to i8*), i8* bitcast (void (%"class.ui::FakeInputMethodContext"*)* @_ZN2ui22FakeInputMethodContextD0Ev to i8*), i8* bitcast (i1 (%"class.ui::FakeInputMethodContext"*, %"class.ui::KeyEvent"*)* @_ZN2ui22FakeInputMethodContext16DispatchKeyEventERKNS_8KeyEventE to i8*), i8* bitcast (void (%"class.ui::FakeInputMethodContext"*, %"class.gfx::Rect"*)* @_ZN2ui22FakeInputMethodContext17SetCursorLocationERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.ui::FakeInputMethodContext"*, %"class.std::__1::basic_string"*, %"class.gfx::Range"*)* @_ZN2ui22FakeInputMethodContext18SetSurroundingTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN3gfx5RangeE to i8*), i8* bitcast (void (%"class.ui::FakeInputMethodContext"*)* @_ZN2ui22FakeInputMethodContext5ResetEv to i8*), i8* bitcast (void (%"class.ui::FakeInputMethodContext"*)* @_ZN2ui22FakeInputMethodContext5FocusEv to i8*), i8* bitcast (void (%"class.ui::FakeInputMethodContext"*)* @_ZN2ui22FakeInputMethodContext4BlurEv to i8*)] }, align 8

@_ZN2ui22FakeInputMethodContextC1Ev = hidden unnamed_addr alias void (%"class.ui::FakeInputMethodContext"*), void (%"class.ui::FakeInputMethodContext"*)* @_ZN2ui22FakeInputMethodContextC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui22FakeInputMethodContextC2Ev(%"class.ui::FakeInputMethodContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::FakeInputMethodContext", %"class.ui::FakeInputMethodContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui22FakeInputMethodContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2ui22FakeInputMethodContext16DispatchKeyEventERKNS_8KeyEventE(%"class.ui::FakeInputMethodContext"* nocapture readnone, %"class.ui::KeyEvent"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22FakeInputMethodContext5ResetEv(%"class.ui::FakeInputMethodContext"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22FakeInputMethodContext5FocusEv(%"class.ui::FakeInputMethodContext"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22FakeInputMethodContext4BlurEv(%"class.ui::FakeInputMethodContext"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22FakeInputMethodContext17SetCursorLocationERKN3gfx4RectE(%"class.ui::FakeInputMethodContext"* nocapture, %"class.gfx::Rect"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22FakeInputMethodContext18SetSurroundingTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN3gfx5RangeE(%"class.ui::FakeInputMethodContext"* nocapture, %"class.std::__1::basic_string"* nocapture dereferenceable(24), %"class.gfx::Range"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui23LinuxInputMethodContextD2Ev(%"class.ui::LinuxInputMethodContext"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22FakeInputMethodContextD0Ev(%"class.ui::FakeInputMethodContext"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.ui::FakeInputMethodContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
