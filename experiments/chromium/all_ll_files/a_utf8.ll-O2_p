; ModuleID = '../../third_party/boringssl/src/crypto/asn1/a_utf8.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/a_utf8.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @UTF8_getc(i8* readonly, i32, i32* nocapture) local_unnamed_addr #0 {
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %189, label %5

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = icmp sgt i8 %6, -1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = and i32 %7, 127
  br label %186

11:                                               ; preds = %5
  %12 = and i32 %7, 224
  %13 = icmp eq i32 %12, 192
  br i1 %13, label %14, label %28

14:                                               ; preds = %11
  %15 = icmp slt i32 %1, 2
  br i1 %15, label %189, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds i8, i8* %0, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, -64
  %20 = icmp eq i8 %19, -128
  br i1 %20, label %21, label %189

21:                                               ; preds = %16
  %22 = shl nuw nsw i32 %7, 6
  %23 = and i32 %22, 1984
  %24 = and i8 %18, 63
  %25 = zext i8 %24 to i32
  %26 = or i32 %23, %25
  %27 = icmp ult i32 %26, 128
  br i1 %27, label %189, label %186

28:                                               ; preds = %11
  %29 = and i32 %7, 240
  %30 = icmp eq i32 %29, 224
  br i1 %30, label %31, label %54

31:                                               ; preds = %28
  %32 = icmp slt i32 %1, 3
  br i1 %32, label %189, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %0, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = and i8 %35, -64
  %37 = icmp eq i8 %36, -128
  br i1 %37, label %38, label %189

38:                                               ; preds = %33
  %39 = getelementptr inbounds i8, i8* %0, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, -64
  %42 = icmp eq i8 %41, -128
  br i1 %42, label %43, label %189

43:                                               ; preds = %38
  %44 = shl nuw nsw i32 %7, 12
  %45 = and i32 %44, 61440
  %46 = and i8 %35, 63
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 6
  %49 = or i32 %48, %45
  %50 = and i8 %40, 63
  %51 = zext i8 %50 to i32
  %52 = or i32 %49, %51
  %53 = icmp ult i32 %52, 2048
  br i1 %53, label %189, label %186

54:                                               ; preds = %28
  %55 = and i32 %7, 248
  %56 = icmp eq i32 %55, 240
  br i1 %56, label %57, label %89

57:                                               ; preds = %54
  %58 = icmp slt i32 %1, 4
  br i1 %58, label %189, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds i8, i8* %0, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = and i8 %61, -64
  %63 = icmp eq i8 %62, -128
  br i1 %63, label %64, label %189

64:                                               ; preds = %59
  %65 = getelementptr inbounds i8, i8* %0, i64 2
  %66 = load i8, i8* %65, align 1
  %67 = and i8 %66, -64
  %68 = icmp eq i8 %67, -128
  br i1 %68, label %69, label %189

69:                                               ; preds = %64
  %70 = getelementptr inbounds i8, i8* %0, i64 3
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, -64
  %73 = icmp eq i8 %72, -128
  br i1 %73, label %74, label %189

74:                                               ; preds = %69
  %75 = shl nuw nsw i32 %7, 18
  %76 = and i32 %75, 1835008
  %77 = and i8 %61, 63
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 12
  %80 = or i32 %79, %76
  %81 = and i8 %66, 63
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 6
  %84 = or i32 %80, %83
  %85 = and i8 %71, 63
  %86 = zext i8 %85 to i32
  %87 = or i32 %84, %86
  %88 = icmp ult i32 %87, 65536
  br i1 %88, label %189, label %186

89:                                               ; preds = %54
  %90 = and i32 %7, 252
  %91 = icmp eq i32 %90, 248
  br i1 %91, label %92, label %133

92:                                               ; preds = %89
  %93 = icmp slt i32 %1, 5
  br i1 %93, label %189, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds i8, i8* %0, i64 1
  %96 = load i8, i8* %95, align 1
  %97 = and i8 %96, -64
  %98 = icmp eq i8 %97, -128
  br i1 %98, label %99, label %189

99:                                               ; preds = %94
  %100 = getelementptr inbounds i8, i8* %0, i64 2
  %101 = load i8, i8* %100, align 1
  %102 = and i8 %101, -64
  %103 = icmp eq i8 %102, -128
  br i1 %103, label %104, label %189

104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %0, i64 3
  %106 = load i8, i8* %105, align 1
  %107 = and i8 %106, -64
  %108 = icmp eq i8 %107, -128
  br i1 %108, label %109, label %189

109:                                              ; preds = %104
  %110 = getelementptr inbounds i8, i8* %0, i64 4
  %111 = load i8, i8* %110, align 1
  %112 = and i8 %111, -64
  %113 = icmp eq i8 %112, -128
  br i1 %113, label %114, label %189

114:                                              ; preds = %109
  %115 = shl nuw i32 %7, 24
  %116 = and i32 %115, 50331648
  %117 = and i8 %96, 63
  %118 = zext i8 %117 to i32
  %119 = shl nuw nsw i32 %118, 18
  %120 = or i32 %119, %116
  %121 = and i8 %101, 63
  %122 = zext i8 %121 to i32
  %123 = shl nuw nsw i32 %122, 12
  %124 = or i32 %120, %123
  %125 = and i8 %106, 63
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 6
  %128 = or i32 %124, %127
  %129 = and i8 %111, 63
  %130 = zext i8 %129 to i32
  %131 = or i32 %128, %130
  %132 = icmp ult i32 %131, 2097152
  br i1 %132, label %189, label %186

133:                                              ; preds = %89
  %134 = and i32 %7, 254
  %135 = icmp eq i32 %134, 252
  br i1 %135, label %136, label %189

136:                                              ; preds = %133
  %137 = icmp slt i32 %1, 6
  br i1 %137, label %189, label %138

138:                                              ; preds = %136
  %139 = getelementptr inbounds i8, i8* %0, i64 1
  %140 = load i8, i8* %139, align 1
  %141 = and i8 %140, -64
  %142 = icmp eq i8 %141, -128
  br i1 %142, label %143, label %189

143:                                              ; preds = %138
  %144 = getelementptr inbounds i8, i8* %0, i64 2
  %145 = load i8, i8* %144, align 1
  %146 = and i8 %145, -64
  %147 = icmp eq i8 %146, -128
  br i1 %147, label %148, label %189

148:                                              ; preds = %143
  %149 = getelementptr inbounds i8, i8* %0, i64 3
  %150 = load i8, i8* %149, align 1
  %151 = and i8 %150, -64
  %152 = icmp eq i8 %151, -128
  br i1 %152, label %153, label %189

153:                                              ; preds = %148
  %154 = getelementptr inbounds i8, i8* %0, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = and i8 %155, -64
  %157 = icmp eq i8 %156, -128
  br i1 %157, label %158, label %189

158:                                              ; preds = %153
  %159 = getelementptr inbounds i8, i8* %0, i64 5
  %160 = load i8, i8* %159, align 1
  %161 = and i8 %160, -64
  %162 = icmp eq i8 %161, -128
  br i1 %162, label %163, label %189

163:                                              ; preds = %158
  %164 = shl i32 %7, 30
  %165 = and i32 %164, 1073741824
  %166 = and i8 %140, 63
  %167 = zext i8 %166 to i32
  %168 = shl nuw nsw i32 %167, 24
  %169 = or i32 %168, %165
  %170 = and i8 %145, 63
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 18
  %173 = or i32 %169, %172
  %174 = and i8 %150, 63
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 12
  %177 = or i32 %173, %176
  %178 = and i8 %155, 63
  %179 = zext i8 %178 to i32
  %180 = shl nuw nsw i32 %179, 6
  %181 = or i32 %177, %180
  %182 = and i8 %160, 63
  %183 = zext i8 %182 to i32
  %184 = or i32 %181, %183
  %185 = icmp ult i32 %184, 67108864
  br i1 %185, label %189, label %186

186:                                              ; preds = %163, %114, %74, %43, %21, %9
  %187 = phi i32 [ %10, %9 ], [ %26, %21 ], [ %52, %43 ], [ %87, %74 ], [ %131, %114 ], [ %184, %163 ]
  %188 = phi i32 [ 1, %9 ], [ 2, %21 ], [ 3, %43 ], [ 4, %74 ], [ 5, %114 ], [ 6, %163 ]
  store i32 %187, i32* %2, align 4
  br label %189

189:                                              ; preds = %133, %163, %138, %143, %148, %153, %158, %136, %114, %94, %99, %104, %109, %92, %74, %59, %64, %69, %57, %43, %33, %38, %31, %21, %16, %14, %3, %186
  %190 = phi i32 [ %188, %186 ], [ 0, %3 ], [ -1, %14 ], [ -3, %16 ], [ -4, %21 ], [ -1, %31 ], [ -3, %38 ], [ -3, %33 ], [ -4, %43 ], [ -1, %57 ], [ -3, %69 ], [ -3, %64 ], [ -3, %59 ], [ -4, %74 ], [ -1, %92 ], [ -3, %109 ], [ -3, %104 ], [ -3, %99 ], [ -3, %94 ], [ -4, %114 ], [ -1, %136 ], [ -3, %158 ], [ -3, %153 ], [ -3, %148 ], [ -3, %143 ], [ -3, %138 ], [ -4, %163 ], [ -2, %133 ]
  ret i32 %190
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @UTF8_putc(i8*, i32, i32) local_unnamed_addr #1 {
  %4 = icmp ne i8* %0, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %141, label %7

7:                                                ; preds = %3, %5
  %8 = phi i32 [ %1, %5 ], [ 6, %3 ]
  %9 = icmp ult i32 %2, 128
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  br i1 %4, label %11, label %141

11:                                               ; preds = %10
  %12 = trunc i32 %2 to i8
  store i8 %12, i8* %0, align 1
  br label %141

13:                                               ; preds = %7
  %14 = icmp ult i32 %2, 2048
  br i1 %14, label %15, label %29

15:                                               ; preds = %13
  %16 = icmp slt i32 %8, 2
  %17 = xor i1 %4, true
  %18 = or i1 %16, %17
  %19 = select i1 %16, i32 -1, i32 2
  br i1 %18, label %141, label %20

20:                                               ; preds = %15
  %21 = lshr i32 %2, 6
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 31
  %24 = or i8 %23, -64
  %25 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %24, i8* %0, align 1
  %26 = trunc i32 %2 to i8
  %27 = and i8 %26, 63
  %28 = or i8 %27, -128
  store i8 %28, i8* %25, align 1
  br label %141

29:                                               ; preds = %13
  %30 = icmp ult i32 %2, 65536
  br i1 %30, label %31, label %50

31:                                               ; preds = %29
  %32 = icmp slt i32 %8, 3
  %33 = xor i1 %4, true
  %34 = or i1 %32, %33
  %35 = select i1 %32, i32 -1, i32 3
  br i1 %34, label %141, label %36

36:                                               ; preds = %31
  %37 = lshr i32 %2, 12
  %38 = trunc i32 %37 to i8
  %39 = and i8 %38, 15
  %40 = or i8 %39, -32
  %41 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %40, i8* %0, align 1
  %42 = lshr i32 %2, 6
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 63
  %45 = or i8 %44, -128
  %46 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %45, i8* %41, align 1
  %47 = trunc i32 %2 to i8
  %48 = and i8 %47, 63
  %49 = or i8 %48, -128
  store i8 %49, i8* %46, align 1
  br label %141

50:                                               ; preds = %29
  %51 = icmp ult i32 %2, 2097152
  br i1 %51, label %52, label %76

52:                                               ; preds = %50
  %53 = icmp slt i32 %8, 4
  %54 = xor i1 %4, true
  %55 = or i1 %53, %54
  %56 = select i1 %53, i32 -1, i32 4
  br i1 %55, label %141, label %57

57:                                               ; preds = %52
  %58 = lshr i32 %2, 18
  %59 = trunc i32 %58 to i8
  %60 = and i8 %59, 7
  %61 = or i8 %60, -16
  %62 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %61, i8* %0, align 1
  %63 = lshr i32 %2, 12
  %64 = trunc i32 %63 to i8
  %65 = and i8 %64, 63
  %66 = or i8 %65, -128
  %67 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %66, i8* %62, align 1
  %68 = lshr i32 %2, 6
  %69 = trunc i32 %68 to i8
  %70 = and i8 %69, 63
  %71 = or i8 %70, -128
  %72 = getelementptr inbounds i8, i8* %0, i64 3
  store i8 %71, i8* %67, align 1
  %73 = trunc i32 %2 to i8
  %74 = and i8 %73, 63
  %75 = or i8 %74, -128
  store i8 %75, i8* %72, align 1
  br label %141

76:                                               ; preds = %50
  %77 = icmp ult i32 %2, 67108864
  br i1 %77, label %78, label %107

78:                                               ; preds = %76
  %79 = icmp slt i32 %8, 5
  %80 = xor i1 %4, true
  %81 = or i1 %79, %80
  %82 = select i1 %79, i32 -1, i32 5
  br i1 %81, label %141, label %83

83:                                               ; preds = %78
  %84 = lshr i32 %2, 24
  %85 = trunc i32 %84 to i8
  %86 = and i8 %85, 3
  %87 = or i8 %86, -8
  %88 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %87, i8* %0, align 1
  %89 = lshr i32 %2, 18
  %90 = trunc i32 %89 to i8
  %91 = and i8 %90, 63
  %92 = or i8 %91, -128
  %93 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %92, i8* %88, align 1
  %94 = lshr i32 %2, 12
  %95 = trunc i32 %94 to i8
  %96 = and i8 %95, 63
  %97 = or i8 %96, -128
  %98 = getelementptr inbounds i8, i8* %0, i64 3
  store i8 %97, i8* %93, align 1
  %99 = lshr i32 %2, 6
  %100 = trunc i32 %99 to i8
  %101 = and i8 %100, 63
  %102 = or i8 %101, -128
  %103 = getelementptr inbounds i8, i8* %0, i64 4
  store i8 %102, i8* %98, align 1
  %104 = trunc i32 %2 to i8
  %105 = and i8 %104, 63
  %106 = or i8 %105, -128
  store i8 %106, i8* %103, align 1
  br label %141

107:                                              ; preds = %76
  %108 = icmp slt i32 %8, 6
  %109 = xor i1 %4, true
  %110 = or i1 %108, %109
  %111 = select i1 %108, i32 -1, i32 6
  br i1 %110, label %141, label %112

112:                                              ; preds = %107
  %113 = lshr i32 %2, 30
  %114 = trunc i32 %113 to i8
  %115 = and i8 %114, 1
  %116 = or i8 %115, -4
  %117 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %116, i8* %0, align 1
  %118 = lshr i32 %2, 24
  %119 = trunc i32 %118 to i8
  %120 = and i8 %119, 63
  %121 = or i8 %120, -128
  %122 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %121, i8* %117, align 1
  %123 = lshr i32 %2, 18
  %124 = trunc i32 %123 to i8
  %125 = and i8 %124, 63
  %126 = or i8 %125, -128
  %127 = getelementptr inbounds i8, i8* %0, i64 3
  store i8 %126, i8* %122, align 1
  %128 = lshr i32 %2, 12
  %129 = trunc i32 %128 to i8
  %130 = and i8 %129, 63
  %131 = or i8 %130, -128
  %132 = getelementptr inbounds i8, i8* %0, i64 4
  store i8 %131, i8* %127, align 1
  %133 = lshr i32 %2, 6
  %134 = trunc i32 %133 to i8
  %135 = and i8 %134, 63
  %136 = or i8 %135, -128
  %137 = getelementptr inbounds i8, i8* %0, i64 5
  store i8 %136, i8* %132, align 1
  %138 = trunc i32 %2 to i8
  %139 = and i8 %138, 63
  %140 = or i8 %139, -128
  store i8 %140, i8* %137, align 1
  br label %141

141:                                              ; preds = %107, %78, %52, %31, %15, %112, %83, %57, %36, %20, %10, %11, %5
  %142 = phi i32 [ -1, %5 ], [ 1, %11 ], [ 1, %10 ], [ %19, %15 ], [ 2, %20 ], [ %35, %31 ], [ 3, %36 ], [ %56, %52 ], [ 4, %57 ], [ %82, %78 ], [ 5, %83 ], [ %111, %107 ], [ 6, %112 ]
  ret i32 %142
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
