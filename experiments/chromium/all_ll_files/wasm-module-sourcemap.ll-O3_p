; ModuleID = '../../v8/src/wasm/wasm-module-sourcemap.cc'
source_filename = "../../v8/src/wasm/wasm-module-sourcemap.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.v8::Isolate" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.340", %"class.std::__1::unique_ptr.341", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.347", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.374", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.381", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.390", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.395", %"struct.std::__1::atomic.64", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.421", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.438"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.439", i32, i8, i8, i32, i32, %"class.std::__1::vector.445", %"class.std::__1::vector.445", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.452", i64, %"class.std::__1::unordered_map.453", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.213", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.72", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.512", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.518", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.552", %"class.std::__1::vector.556", %"class.std::__1::vector.556", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type opaque
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.37", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.37", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.37", i64, i64, %"struct.std::__1::atomic.37", %"struct.std::__1::atomic.47", %"class.std::__1::vector.51", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.73", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.37", i64, i8, %"struct.std::__1::atomic.37", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.77", %"class.std::__1::vector.77", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.std::__1::shared_ptr.174", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.175", %"class.std::__1::unique_ptr.201", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.207", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.220", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.275", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.299", %"class.std::__1::vector.327", i8, %"class.std::__1::unique_ptr.334", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.42", %"struct.std::__1::atomic.42", %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i64 }
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i32 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.64", %"struct.std::__1::atomic.68", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.37" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.37", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.72" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__cxx_atomic_impl.75" }
%"struct.std::__1::__cxx_atomic_impl.75" = type { %"struct.std::__1::__cxx_atomic_base_impl.76" }
%"struct.std::__1::__cxx_atomic_base_impl.76" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i64 }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.79" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.174" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.175" = type { %"class.std::__1::__hash_table.176" }
%"class.std::__1::__hash_table.176" = type <{ %"class.std::__1::unique_ptr.177", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179", %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::__hash_node_base.180"** }
%"struct.std::__1::__hash_node_base.180" = type { %"struct.std::__1::__hash_node_base.180"* }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::__bucket_list_deallocator.182" }
%"class.std::__1::__bucket_list_deallocator.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::__hash_node_base.180" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.213", %"class.std::__1::vector.213" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.244", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.275" = type { %"class.std::__1::__hash_table.276" }
%"class.std::__1::__hash_table.276" = type <{ %"class.std::__1::unique_ptr.277", %"class.std::__1::__compressed_pair.287", %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.295", [4 x i8] }>
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279", %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::__hash_node_base.280"** }
%"struct.std::__1::__hash_node_base.280" = type { %"struct.std::__1::__hash_node_base.280"* }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::__bucket_list_deallocator.282" }
%"class.std::__1::__bucket_list_deallocator.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::__hash_node_base.280" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.299" = type { %"class.std::__1::__hash_table.300" }
%"class.std::__1::__hash_table.300" = type <{ %"class.std::__1::unique_ptr.301", %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", [4 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303", %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base.304"** }
%"struct.std::__1::__hash_node_base.304" = type { %"struct.std::__1::__hash_node_base.304"* }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.std::__1::__bucket_list_deallocator.306" }
%"class.std::__1::__bucket_list_deallocator.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::__hash_node_base.304" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::vector.327" = type { %"class.std::__1::__vector_base.328" }
%"class.std::__1::__vector_base.328" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.329" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.213" }
%"class.std::__1::shared_ptr.340" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.347" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.360", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.366", %"class.v8::internal::DetachableVector.367", %"class.v8::internal::DetachableVector.366", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.367" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.366" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.37", %"struct.std::__1::atomic.37", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.354" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.368" }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.374" = type { %"class.std::__1::__vector_base.375" }
%"class.std::__1::__vector_base.375" = type { i32*, i32*, %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.381" = type { %"struct.std::__1::__atomic_base.382" }
%"struct.std::__1::__atomic_base.382" = type { %"struct.std::__1::__cxx_atomic_impl.383" }
%"struct.std::__1::__cxx_atomic_impl.383" = type { %"struct.std::__1::__cxx_atomic_base_impl.384" }
%"struct.std::__1::__cxx_atomic_base_impl.384" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.390" = type { %"struct.std::__1::__atomic_base.391" }
%"struct.std::__1::__atomic_base.391" = type { %"struct.std::__1::__cxx_atomic_impl.392" }
%"struct.std::__1::__cxx_atomic_impl.392" = type { %"struct.std::__1::__cxx_atomic_base_impl.393" }
%"struct.std::__1::__cxx_atomic_base_impl.393" = type { i32 }
%"class.std::__1::unordered_map.395" = type { %"class.std::__1::__hash_table.396" }
%"class.std::__1::__hash_table.396" = type <{ %"class.std::__1::unique_ptr.397", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.415", [4 x i8] }>
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399", %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.std::__1::__hash_node_base.400"** }
%"struct.std::__1::__hash_node_base.400" = type { %"struct.std::__1::__hash_node_base.400"* }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::__bucket_list_deallocator.402" }
%"class.std::__1::__bucket_list_deallocator.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.400" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::atomic.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl.66" }
%"struct.std::__1::__cxx_atomic_impl.66" = type { %"struct.std::__1::__cxx_atomic_base_impl.67" }
%"struct.std::__1::__cxx_atomic_base_impl.67" = type { i8 }
%"class.v8::internal::Debug" = type opaque
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.433" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.427"**, %"struct.std::__1::pair.427"**, %"struct.std::__1::pair.427"**, %"class.std::__1::__compressed_pair.428" }
%"struct.std::__1::pair.427" = type opaque
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"struct.std::__1::pair.427"** }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.438" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.386", i32, %"class.v8::Local.14" }
%"class.v8::Local.386" = type { %"class.v8::Promise"* }
%"class.v8::Local.14" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.445" = type { %"class.std::__1::__vector_base.446" }
%"class.std::__1::__vector_base.446" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.452" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.453" = type { %"class.std::__1::__hash_table.454" }
%"class.std::__1::__hash_table.454" = type <{ %"class.std::__1::unique_ptr.455", %"class.std::__1::__compressed_pair.465", %"class.std::__1::__compressed_pair.470", %"class.std::__1::__compressed_pair.475", [4 x i8] }>
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457", %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::__hash_node_base.458"** }
%"struct.std::__1::__hash_node_base.458" = type { %"struct.std::__1::__hash_node_base.458"* }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.std::__1::__bucket_list_deallocator.460" }
%"class.std::__1::__bucket_list_deallocator.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.std::__1::__hash_node_base.458" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.72" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.481", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.510", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.481" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.506, %union.anon.508, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.506 = type { i64 }
%union.anon.508 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.510" = type { %"class.v8::PersistentBase.511" }
%"class.v8::PersistentBase.511" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.482", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.482" = type { %"class.std::__1::__hash_table.483" }
%"class.std::__1::__hash_table.483" = type <{ %"class.std::__1::unique_ptr.484", %"class.std::__1::__compressed_pair.494", %"class.std::__1::__compressed_pair.499", %"class.std::__1::__compressed_pair.502", [4 x i8] }>
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486", %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::__hash_node_base.487"** }
%"struct.std::__1::__hash_node_base.487" = type { %"struct.std::__1::__hash_node_base.487"* }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.std::__1::__bucket_list_deallocator.489" }
%"class.std::__1::__bucket_list_deallocator.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.std::__1::__hash_node_base.487" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type opaque
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.387", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.387" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.526" }
%"class.std::__1::unordered_map.526" = type { %"class.std::__1::__hash_table.527" }
%"class.std::__1::__hash_table.527" = type <{ %"class.std::__1::unique_ptr.528", %"class.std::__1::__compressed_pair.538", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.546", [4 x i8] }>
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530", %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"struct.std::__1::__hash_node_base.531"** }
%"struct.std::__1::__hash_node_base.531" = type { %"struct.std::__1::__hash_node_base.531"* }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.std::__1::__bucket_list_deallocator.533" }
%"class.std::__1::__bucket_list_deallocator.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"struct.std::__1::__hash_node_base.531" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.552" = type { %"struct.std::__1::__atomic_base.553" }
%"struct.std::__1::__atomic_base.553" = type { %"struct.std::__1::__cxx_atomic_impl.554" }
%"struct.std::__1::__cxx_atomic_impl.554" = type { %"struct.std::__1::__cxx_atomic_base_impl.555" }
%"struct.std::__1::__cxx_atomic_base_impl.555" = type { %"class.std::__1::vector.556"* }
%"class.std::__1::vector.556" = type { %"class.std::__1::__vector_base.557" }
%"class.std::__1::__vector_base.557" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.558" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.v8::MemoryRange"* }
%"class.v8::ExtensionConfiguration" = type { i32, i8** }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPcEEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"sources\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"mappings\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"offsets.begin() != up\00", align 1

@_ZN2v88internal4wasm19WasmModuleSourceMapC1EPNS_7IsolateENS_5LocalINS_6StringEEE = hidden unnamed_addr alias void (%"class.v8::internal::wasm::WasmModuleSourceMap"*, %"class.v8::Isolate"*, %"class.v8::String"*), void (%"class.v8::internal::wasm::WasmModuleSourceMap"*, %"class.v8::Isolate"*, %"class.v8::String"*)* @_ZN2v88internal4wasm19WasmModuleSourceMapC2EPNS_7IsolateENS_5LocalINS_6StringEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm19WasmModuleSourceMapC2EPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::internal::wasm::WasmModuleSourceMap"*, %"class.v8::Isolate"*, %"class.v8::String"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 4
  %9 = bitcast %"class.v8::HandleScope"* %4 to i8*
  %10 = bitcast %"class.v8::internal::wasm::WasmModuleSourceMap"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 97, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %1) #11
  %11 = call %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"* %1, %"class.v8::ExtensionConfiguration"* null, %"class.v8::ObjectTemplate"* null, %"class.v8::Value"* null, void (%"class.v8::Object"*, i32, i8*, i32, i8*)* null, i8* null, %"class.v8::MicrotaskQueue"* null) #11
  %12 = call %"class.v8::Value"* @_ZN2v84JSON5ParseENS_5LocalINS_7ContextEEENS1_INS_6StringEEE(%"class.v8::Context"* %11, %"class.v8::String"* %2) #11
  %13 = icmp eq %"class.v8::Value"* %12, null
  br i1 %13, label %186, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.v8::Value"* %12 to %"class.v8::Object"*
  %16 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 0, i32 7) #11
  %17 = bitcast %"class.v8::String"* %16 to %"class.v8::Value"*
  %18 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %15, %"class.v8::Context"* %11, %"class.v8::Value"* %17) #11
  %19 = icmp eq %"class.v8::Value"* %18, null
  br i1 %19, label %186, label %20

20:                                               ; preds = %14
  %21 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %18) #11
  br i1 %21, label %22, label %186

22:                                               ; preds = %20
  %23 = call i64 @_ZNK2v85Value11Uint32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %18, %"class.v8::Context"* %11) #11
  %24 = trunc i64 %23 to i8
  %25 = icmp ne i8 %24, 0
  %26 = and i64 %23, -4294967296
  %27 = icmp eq i64 %26, 12884901888
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %186, !prof !2

29:                                               ; preds = %22
  %30 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 7) #11
  %31 = bitcast %"class.v8::String"* %30 to %"class.v8::Value"*
  %32 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %15, %"class.v8::Context"* %11, %"class.v8::Value"* %31) #11
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %186, label %34

34:                                               ; preds = %29
  %35 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* nonnull %32) #11
  br i1 %35, label %36, label %186

36:                                               ; preds = %34
  %37 = bitcast %"class.v8::Value"* %32 to %"class.v8::Object"*
  %38 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 6) #11
  %39 = bitcast %"class.v8::String"* %38 to %"class.v8::Value"*
  %40 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %37, %"class.v8::Context"* %11, %"class.v8::Value"* %39) #11
  %41 = icmp eq %"class.v8::Value"* %40, null
  br i1 %41, label %186, label %42

42:                                               ; preds = %36
  %43 = call i64 @_ZNK2v85Value11Uint32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %40, %"class.v8::Context"* %11) #11
  %44 = trunc i64 %43 to i8
  %45 = lshr i64 %43, 32
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i8 %44, 0
  br i1 %47, label %186, label %48, !prof !3

48:                                               ; preds = %42
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %119, label %50

50:                                               ; preds = %48
  %51 = bitcast i8** %5 to i8*
  %52 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 1, i32 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.std::__1::basic_string"** %52 to i64*
  br label %55

55:                                               ; preds = %116, %50
  %56 = phi i32 [ 0, %50 ], [ %117, %116 ]
  %57 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %37, %"class.v8::Context"* %11, i32 %56) #11
  %58 = icmp eq %"class.v8::Value"* %57, null
  br i1 %58, label %186, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.v8::Value"* %57 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 1
  br i1 %63, label %64, label %186

64:                                               ; preds = %59
  %65 = add i64 %61, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = and i64 %61, -4294967296
  %69 = zext i32 %67 to i64
  %70 = or i64 %68, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp ult i16 %73, 64
  br i1 %74, label %75, label %186

75:                                               ; preds = %64
  %76 = bitcast %"class.v8::Value"* %57 to %"class.v8::String"*
  %77 = call i32 @_ZNK2v86String10Utf8LengthEPNS_7IsolateE(%"class.v8::String"* nonnull %76, %"class.v8::Isolate"* %1) #11
  %78 = add nsw i32 %77, 1
  %79 = sext i32 %78 to i64
  %80 = call i8* @_Znam(i64 %79) #12
  %81 = call i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"* nonnull %76, %"class.v8::Isolate"* %1, i8* nonnull %80, i32 -1, i32* null, i32 0) #11
  %82 = sext i32 %77 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  store i8 0, i8* %83, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store i8* %80, i8** %5, align 8
  %84 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %86 = icmp ult %"class.std::__1::basic_string"* %84, %85
  br i1 %86, label %87, label %115

87:                                               ; preds = %75
  %88 = call i64 @strlen(i8* nonnull %80) #11
  %89 = icmp ugt i64 %88, -17
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = bitcast %"class.std::__1::basic_string"* %84 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %91) #13
  unreachable

92:                                               ; preds = %87
  %93 = icmp ult i64 %88, 23
  br i1 %93, label %102, label %94

94:                                               ; preds = %92
  %95 = add nuw i64 %88, 16
  %96 = and i64 %95, -16
  %97 = call i8* @_Znwm(i64 %96) #12
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %97, i8** %98, align 8
  %99 = or i64 %96, -9223372036854775808
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %88, i64* %101, align 8
  br label %108

102:                                              ; preds = %92
  %103 = trunc i64 %88 to i8
  %104 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  store i8 %103, i8* %105, align 1
  %106 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %107 = icmp eq i64 %88, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %102, %94
  %109 = phi i8* [ %97, %94 ], [ %106, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* nonnull align 1 %80, i64 %88, i1 false) #11
  br label %110

110:                                              ; preds = %108, %102
  %111 = phi i8* [ %106, %102 ], [ %109, %108 ]
  %112 = getelementptr inbounds i8, i8* %111, i64 %88
  store i8 0, i8* %112, align 1
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 1
  %114 = ptrtoint %"class.std::__1::basic_string"* %113 to i64
  store i64 %114, i64* %54, align 8
  br label %116

115:                                              ; preds = %75
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPcEEEvDpOT_(%"class.std::__1::vector.1"* %7, i8** nonnull dereferenceable(8) %5) #11
  br label %116

116:                                              ; preds = %110, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZdaPv(i8* nonnull %80) #12
  %117 = add nuw i32 %56, 1
  %118 = icmp eq i32 %117, %46
  br i1 %118, label %119, label %55

119:                                              ; preds = %116, %48
  %120 = call %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 8) #11
  %121 = bitcast %"class.v8::String"* %120 to %"class.v8::Value"*
  %122 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %15, %"class.v8::Context"* %11, %"class.v8::Value"* %121) #11
  %123 = icmp eq %"class.v8::Value"* %122, null
  br i1 %123, label %186, label %124

124:                                              ; preds = %119
  %125 = bitcast %"class.v8::Value"* %122 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 3
  %128 = icmp eq i64 %127, 1
  br i1 %128, label %129, label %186

129:                                              ; preds = %124
  %130 = add i64 %126, -1
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i64 %126, -4294967296
  %134 = zext i32 %132 to i64
  %135 = or i64 %133, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load i16, i16* %137, align 2
  %139 = icmp ult i16 %138, 64
  br i1 %139, label %140, label %186

140:                                              ; preds = %129
  %141 = bitcast %"class.v8::Value"* %122 to %"class.v8::String"*
  %142 = call i32 @_ZNK2v86String10Utf8LengthEPNS_7IsolateE(%"class.v8::String"* nonnull %141, %"class.v8::Isolate"* %1) #11
  %143 = add nsw i32 %142, 1
  %144 = sext i32 %143 to i64
  %145 = call i8* @_Znam(i64 %144) #12
  %146 = call i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"* nonnull %141, %"class.v8::Isolate"* %1, i8* nonnull %145, i32 -1, i32* null, i32 0) #11
  %147 = sext i32 %142 to i64
  %148 = getelementptr inbounds i8, i8* %145, i64 %147
  store i8 0, i8* %148, align 1
  %149 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #11
  %150 = call i64 @strlen(i8* nonnull %145) #11
  %151 = icmp ugt i64 %150, -17
  br i1 %151, label %152, label %154

152:                                              ; preds = %140
  %153 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %153) #13
  unreachable

154:                                              ; preds = %140
  %155 = icmp ult i64 %150, 23
  br i1 %155, label %165, label %156

156:                                              ; preds = %154
  %157 = add nuw i64 %150, 16
  %158 = and i64 %157, -16
  %159 = call i8* @_Znwm(i64 %158) #12
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %159, i8** %160, align 8
  %161 = or i64 %158, -9223372036854775808
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %150, i64* %163, align 8
  %164 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %170

165:                                              ; preds = %154
  %166 = trunc i64 %150 to i8
  %167 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  store i8 %166, i8* %168, align 1
  %169 = icmp eq i64 %150, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %165, %156
  %171 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %167, %165 ], [ %164, %156 ]
  %172 = phi i8* [ %149, %165 ], [ %159, %156 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %172, i8* nonnull align 1 %145, i64 %150, i1 false) #11
  br label %173

173:                                              ; preds = %165, %170
  %174 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %167, %165 ], [ %171, %170 ]
  %175 = phi i8* [ %149, %165 ], [ %172, %170 ]
  %176 = getelementptr inbounds i8, i8* %175, i64 %150
  store i8 0, i8* %176, align 1
  %177 = call zeroext i1 @_ZN2v88internal4wasm19WasmModuleSourceMap13DecodeMappingERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::wasm::WasmModuleSourceMap"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %8, align 8
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %174, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %173, %182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #11
  call void @_ZdaPv(i8* nonnull %145) #12
  br label %186

186:                                              ; preds = %55, %59, %64, %119, %36, %29, %14, %3, %22, %124, %42, %34, %20, %129, %185
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"*, %"class.v8::ExtensionConfiguration"*, %"class.v8::ObjectTemplate"*, %"class.v8::Value"*, void (%"class.v8::Object"*, i32, i8*, i32, i8*)*, i8*, %"class.v8::MicrotaskQueue"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v84JSON5ParseENS_5LocalINS_7ContextEEENS1_INS_6StringEEE(%"class.v8::Context"*, %"class.v8::String"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i64 @_ZNK2v85Value11Uint32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

declare i32 @_ZNK2v86String10Utf8LengthEPNS_7IsolateE(%"class.v8::String"*, %"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

declare i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"*, %"class.v8::Isolate"*, i8*, i32, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm19WasmModuleSourceMap13DecodeMappingERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::wasm::WasmModuleSourceMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  store i64 0, i64* %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %303, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i64** %18 to i64*
  %21 = bitcast %"class.std::__1::vector"* %17 to i64*
  %22 = bitcast i64** %19 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 3, i32 0, i32 1
  %26 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i64** %25 to i64*
  %28 = bitcast %"class.std::__1::vector"* %24 to i64*
  %29 = bitcast i64** %26 to i64*
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i64** %31 to i64*
  %34 = bitcast %"class.v8::internal::wasm::WasmModuleSourceMap"* %0 to i64*
  %35 = bitcast i64** %32 to i64*
  %36 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %14, %295
  %38 = phi i64 [ %10, %14 ], [ %299, %295 ]
  %39 = phi i1 [ %8, %14 ], [ %298, %295 ]
  %40 = phi i8 [ %7, %14 ], [ %297, %295 ]
  %41 = phi i64 [ 0, %14 ], [ %296, %295 ]
  %42 = phi i64 [ 0, %14 ], [ %90, %295 ]
  %43 = phi i64 [ 0, %14 ], [ %78, %295 ]
  %44 = phi i64 [ 0, %14 ], [ %66, %295 ]
  %45 = load i8*, i8** %15, align 8
  %46 = icmp slt i8 %40, 0
  %47 = zext i8 %40 to i64
  %48 = select i1 %46, i64 %38, i64 %47
  br label %49

49:                                               ; preds = %37, %56
  %50 = phi i1 [ %39, %37 ], [ %46, %56 ]
  %51 = phi i64 [ %41, %37 ], [ %57, %56 ]
  %52 = select i1 %50, i8* %45, i8* %16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 44
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = add nuw i64 %51, 1
  store i64 %57, i64* %3, align 8
  %58 = icmp ult i64 %57, %48
  br i1 %58, label %49, label %303

59:                                               ; preds = %49
  %60 = zext i8 %40 to i64
  %61 = select i1 %50, i64 %38, i64 %60
  %62 = call i32 @_ZN2v84base15VLQBase64DecodeEPKcmPm(i8* %52, i64 %61, i64* nonnull %3) #11
  %63 = icmp eq i32 %62, -2147483648
  br i1 %63, label %303, label %64

64:                                               ; preds = %59
  %65 = sext i32 %62 to i64
  %66 = add i64 %44, %65
  %67 = load i8, i8* %6, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i8*, i8** %15, align 8
  %70 = load i64, i64* %9, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i8* %69, i8* %16
  %73 = select i1 %68, i64 %70, i64 %71
  %74 = call i32 @_ZN2v84base15VLQBase64DecodeEPKcmPm(i8* %72, i64 %73, i64* nonnull %3) #11
  %75 = icmp eq i32 %74, -2147483648
  br i1 %75, label %303, label %76

76:                                               ; preds = %64
  %77 = sext i32 %74 to i64
  %78 = add i64 %43, %77
  %79 = load i8, i8* %6, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i8*, i8** %15, align 8
  %82 = load i64, i64* %9, align 8
  %83 = zext i8 %79 to i64
  %84 = select i1 %80, i8* %81, i8* %16
  %85 = select i1 %80, i64 %82, i64 %83
  %86 = call i32 @_ZN2v84base15VLQBase64DecodeEPKcmPm(i8* %84, i64 %85, i64* nonnull %3) #11
  %87 = icmp eq i32 %86, -2147483648
  br i1 %87, label %303, label %88

88:                                               ; preds = %76
  %89 = sext i32 %86 to i64
  %90 = add i64 %42, %89
  %91 = load i8, i8* %6, align 1
  %92 = icmp slt i8 %91, 0
  %93 = load i8*, i8** %15, align 8
  %94 = load i64, i64* %9, align 8
  %95 = zext i8 %91 to i64
  %96 = select i1 %92, i8* %93, i8* %16
  %97 = select i1 %92, i64 %94, i64 %95
  %98 = call i32 @_ZN2v84base15VLQBase64DecodeEPKcmPm(i8* %96, i64 %97, i64* nonnull %3) #11
  %99 = icmp eq i32 %98, -2147483648
  br i1 %99, label %303, label %100

100:                                              ; preds = %88
  %101 = load i64, i64* %3, align 8
  %102 = load i8, i8* %6, align 1
  %103 = icmp slt i8 %102, 0
  %104 = load i64, i64* %9, align 8
  %105 = zext i8 %102 to i64
  %106 = select i1 %103, i64 %104, i64 %105
  %107 = icmp ult i64 %101, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %100
  %109 = load i8*, i8** %15, align 8
  %110 = select i1 %103, i8* %109, i8* %16
  %111 = getelementptr inbounds i8, i8* %110, i64 %101
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 44
  br i1 %113, label %114, label %303

114:                                              ; preds = %108, %100
  %115 = add i64 %101, 1
  store i64 %115, i64* %3, align 8
  %116 = load i64*, i64** %18, align 8
  %117 = load i64*, i64** %19, align 8
  %118 = icmp eq i64* %116, %117
  %119 = ptrtoint i64* %117 to i64
  br i1 %118, label %123, label %120

120:                                              ; preds = %114
  store i64 %78, i64* %116, align 8
  %121 = getelementptr inbounds i64, i64* %116, i64 1
  %122 = ptrtoint i64* %121 to i64
  store i64 %122, i64* %20, align 8
  br label %175

123:                                              ; preds = %114
  %124 = ptrtoint i64* %116 to i64
  %125 = load i64, i64* %21, align 8
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = add nsw i64 %127, 1
  %129 = icmp ugt i64 %128, 2305843009213693951
  br i1 %129, label %130, label %132

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %131) #13
  unreachable

132:                                              ; preds = %123
  %133 = sub i64 %119, %125
  %134 = ashr exact i64 %133, 3
  %135 = icmp ult i64 %134, 1152921504606846975
  br i1 %135, label %136, label %144

136:                                              ; preds = %132
  %137 = ashr exact i64 %133, 2
  %138 = icmp ult i64 %137, %128
  %139 = select i1 %138, i64 %128, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %136
  %142 = icmp ugt i64 %139, 2305843009213693951
  br i1 %142, label %143, label %144

143:                                              ; preds = %141
  call void @abort() #13
  unreachable

144:                                              ; preds = %141, %132
  %145 = phi i64 [ %139, %141 ], [ 2305843009213693951, %132 ]
  %146 = shl i64 %145, 3
  %147 = call i8* @_Znwm(i64 %146) #12
  %148 = bitcast i8* %147 to i64*
  br label %149

149:                                              ; preds = %144, %136
  %150 = phi i64 [ %145, %144 ], [ 0, %136 ]
  %151 = phi i64* [ %148, %144 ], [ null, %136 ]
  %152 = getelementptr inbounds i64, i64* %151, i64 %127
  %153 = getelementptr inbounds i64, i64* %151, i64 %150
  %154 = ptrtoint i64* %153 to i64
  store i64 %78, i64* %152, align 8
  %155 = getelementptr inbounds i64, i64* %152, i64 1
  %156 = ptrtoint i64* %155 to i64
  %157 = load i64*, i64** %23, align 8
  %158 = load i64, i64* %20, align 8
  %159 = ptrtoint i64* %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 3
  %162 = sub nsw i64 0, %161
  %163 = getelementptr inbounds i64, i64* %152, i64 %162
  %164 = ptrtoint i64* %163 to i64
  %165 = icmp sgt i64 %160, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %149
  %167 = bitcast i64* %163 to i8*
  %168 = bitcast i64* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 %160, i1 false) #11
  %169 = load i64*, i64** %23, align 8
  br label %170

170:                                              ; preds = %166, %149
  %171 = phi i64* [ %157, %149 ], [ %169, %166 ]
  store i64 %164, i64* %21, align 8
  store i64 %156, i64* %20, align 8
  store i64 %154, i64* %22, align 8
  %172 = icmp eq i64* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = bitcast i64* %171 to i8*
  call void @_ZdlPv(i8* %174) #12
  br label %175

175:                                              ; preds = %120, %170, %173
  %176 = load i64*, i64** %25, align 8
  %177 = load i64*, i64** %26, align 8
  %178 = icmp eq i64* %176, %177
  %179 = ptrtoint i64* %177 to i64
  br i1 %178, label %183, label %180

180:                                              ; preds = %175
  store i64 %90, i64* %176, align 8
  %181 = getelementptr inbounds i64, i64* %176, i64 1
  %182 = ptrtoint i64* %181 to i64
  store i64 %182, i64* %27, align 8
  br label %235

183:                                              ; preds = %175
  %184 = ptrtoint i64* %176 to i64
  %185 = load i64, i64* %28, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 3
  %188 = add nsw i64 %187, 1
  %189 = icmp ugt i64 %188, 2305843009213693951
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = bitcast %"class.std::__1::vector"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %191) #13
  unreachable

192:                                              ; preds = %183
  %193 = sub i64 %179, %185
  %194 = ashr exact i64 %193, 3
  %195 = icmp ult i64 %194, 1152921504606846975
  br i1 %195, label %196, label %204

196:                                              ; preds = %192
  %197 = ashr exact i64 %193, 2
  %198 = icmp ult i64 %197, %188
  %199 = select i1 %198, i64 %188, i64 %197
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %196
  %202 = icmp ugt i64 %199, 2305843009213693951
  br i1 %202, label %203, label %204

203:                                              ; preds = %201
  call void @abort() #13
  unreachable

204:                                              ; preds = %201, %192
  %205 = phi i64 [ %199, %201 ], [ 2305843009213693951, %192 ]
  %206 = shl i64 %205, 3
  %207 = call i8* @_Znwm(i64 %206) #12
  %208 = bitcast i8* %207 to i64*
  br label %209

209:                                              ; preds = %204, %196
  %210 = phi i64 [ %205, %204 ], [ 0, %196 ]
  %211 = phi i64* [ %208, %204 ], [ null, %196 ]
  %212 = getelementptr inbounds i64, i64* %211, i64 %187
  %213 = getelementptr inbounds i64, i64* %211, i64 %210
  %214 = ptrtoint i64* %213 to i64
  store i64 %90, i64* %212, align 8
  %215 = getelementptr inbounds i64, i64* %212, i64 1
  %216 = ptrtoint i64* %215 to i64
  %217 = load i64*, i64** %30, align 8
  %218 = load i64, i64* %27, align 8
  %219 = ptrtoint i64* %217 to i64
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 3
  %222 = sub nsw i64 0, %221
  %223 = getelementptr inbounds i64, i64* %212, i64 %222
  %224 = ptrtoint i64* %223 to i64
  %225 = icmp sgt i64 %220, 0
  br i1 %225, label %226, label %230

226:                                              ; preds = %209
  %227 = bitcast i64* %223 to i8*
  %228 = bitcast i64* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 %220, i1 false) #11
  %229 = load i64*, i64** %30, align 8
  br label %230

230:                                              ; preds = %226, %209
  %231 = phi i64* [ %217, %209 ], [ %229, %226 ]
  store i64 %224, i64* %28, align 8
  store i64 %216, i64* %27, align 8
  store i64 %214, i64* %29, align 8
  %232 = icmp eq i64* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %230
  %234 = bitcast i64* %231 to i8*
  call void @_ZdlPv(i8* %234) #12
  br label %235

235:                                              ; preds = %180, %230, %233
  %236 = load i64*, i64** %31, align 8
  %237 = load i64*, i64** %32, align 8
  %238 = icmp eq i64* %236, %237
  %239 = ptrtoint i64* %237 to i64
  br i1 %238, label %243, label %240

240:                                              ; preds = %235
  store i64 %66, i64* %236, align 8
  %241 = getelementptr inbounds i64, i64* %236, i64 1
  %242 = ptrtoint i64* %241 to i64
  store i64 %242, i64* %33, align 8
  br label %295

243:                                              ; preds = %235
  %244 = ptrtoint i64* %236 to i64
  %245 = load i64, i64* %34, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 3
  %248 = add nsw i64 %247, 1
  %249 = icmp ugt i64 %248, 2305843009213693951
  br i1 %249, label %250, label %252

250:                                              ; preds = %243
  %251 = bitcast %"class.v8::internal::wasm::WasmModuleSourceMap"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %251) #13
  unreachable

252:                                              ; preds = %243
  %253 = sub i64 %239, %245
  %254 = ashr exact i64 %253, 3
  %255 = icmp ult i64 %254, 1152921504606846975
  br i1 %255, label %256, label %264

256:                                              ; preds = %252
  %257 = ashr exact i64 %253, 2
  %258 = icmp ult i64 %257, %248
  %259 = select i1 %258, i64 %248, i64 %257
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %256
  %262 = icmp ugt i64 %259, 2305843009213693951
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @abort() #13
  unreachable

264:                                              ; preds = %261, %252
  %265 = phi i64 [ %259, %261 ], [ 2305843009213693951, %252 ]
  %266 = shl i64 %265, 3
  %267 = call i8* @_Znwm(i64 %266) #12
  %268 = bitcast i8* %267 to i64*
  br label %269

269:                                              ; preds = %264, %256
  %270 = phi i64 [ %265, %264 ], [ 0, %256 ]
  %271 = phi i64* [ %268, %264 ], [ null, %256 ]
  %272 = getelementptr inbounds i64, i64* %271, i64 %247
  %273 = getelementptr inbounds i64, i64* %271, i64 %270
  %274 = ptrtoint i64* %273 to i64
  store i64 %66, i64* %272, align 8
  %275 = getelementptr inbounds i64, i64* %272, i64 1
  %276 = ptrtoint i64* %275 to i64
  %277 = load i64*, i64** %36, align 8
  %278 = load i64, i64* %33, align 8
  %279 = ptrtoint i64* %277 to i64
  %280 = sub i64 %278, %279
  %281 = ashr exact i64 %280, 3
  %282 = sub nsw i64 0, %281
  %283 = getelementptr inbounds i64, i64* %272, i64 %282
  %284 = ptrtoint i64* %283 to i64
  %285 = icmp sgt i64 %280, 0
  br i1 %285, label %286, label %290

286:                                              ; preds = %269
  %287 = bitcast i64* %283 to i8*
  %288 = bitcast i64* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %288, i64 %280, i1 false) #11
  %289 = load i64*, i64** %36, align 8
  br label %290

290:                                              ; preds = %286, %269
  %291 = phi i64* [ %277, %269 ], [ %289, %286 ]
  store i64 %284, i64* %34, align 8
  store i64 %276, i64* %33, align 8
  store i64 %274, i64* %35, align 8
  %292 = icmp eq i64* %291, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %290
  %294 = bitcast i64* %291 to i8*
  call void @_ZdlPv(i8* %294) #12
  br label %295

295:                                              ; preds = %240, %290, %293
  %296 = load i64, i64* %3, align 8
  %297 = load i8, i8* %6, align 1
  %298 = icmp slt i8 %297, 0
  %299 = load i64, i64* %9, align 8
  %300 = zext i8 %297 to i64
  %301 = select i1 %298, i64 %299, i64 %300
  %302 = icmp ult i64 %296, %301
  br i1 %302, label %37, label %303

303:                                              ; preds = %108, %88, %76, %64, %59, %295, %56, %2
  %304 = phi i1 [ true, %2 ], [ true, %56 ], [ true, %295 ], [ false, %59 ], [ false, %64 ], [ false, %76 ], [ false, %88 ], [ false, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret i1 %304
}

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4wasm19WasmModuleSourceMap13GetSourceLineEm(%"class.v8::internal::wasm::WasmModuleSourceMap"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i64** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i64* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = ashr exact i64 %9, 3
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64* [ %4, %11 ], [ %24, %13 ]
  %15 = phi i64 [ %12, %11 ], [ %23, %13 ]
  %16 = lshr i64 %15, 1
  %17 = getelementptr inbounds i64, i64* %14, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, %1
  %20 = getelementptr inbounds i64, i64* %17, i64 1
  %21 = xor i64 %16, -1
  %22 = add i64 %15, %21
  %23 = select i1 %19, i64 %16, i64 %22
  %24 = select i1 %19, i64* %14, i64* %20
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %26, label %13

26:                                               ; preds = %13
  %27 = icmp eq i64* %4, %24
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %26, %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

29:                                               ; preds = %26
  %30 = ptrtoint i64* %24 to i64
  %31 = sub i64 %30, %8
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, -1
  %34 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 3, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 %33
  %37 = load i64, i64* %36, align 8
  ret i64 %37
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal4wasm19WasmModuleSourceMap11GetFilenameEm(%"class.std::__1::basic_string"* noalias sret, %"class.v8::internal::wasm::WasmModuleSourceMap"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint i64* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = ashr exact i64 %10, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64* [ %5, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds i64, i64* %15, i64 %17
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, %2
  %21 = getelementptr inbounds i64, i64* %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %17, i64 %23
  %25 = select i1 %20, i64* %15, i64* %21
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14
  %28 = icmp eq i64* %5, %25
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %27, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

30:                                               ; preds = %27
  %31 = ptrtoint i64* %25 to i64
  %32 = sub i64 %31, %9
  %33 = ashr exact i64 %32, 3
  %34 = add nsw i64 %33, -1
  %35 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %1, i64 0, i32 2, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 %34
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %1, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 %38
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %30
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #11
  br label %54

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 %38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %51, i64 %53) #11
  br label %54

54:                                               ; preds = %46, %49
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal4wasm19WasmModuleSourceMap9HasSourceEmm(%"class.v8::internal::wasm::WasmModuleSourceMap"* nocapture readonly, i64, i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %2
  br label %14

14:                                               ; preds = %3, %9
  %15 = phi i1 [ false, %3 ], [ %13, %9 ]
  ret i1 %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal4wasm19WasmModuleSourceMap13HasValidEntryEmm(%"class.v8::internal::wasm::WasmModuleSourceMap"* nocapture readonly, i64, i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::WasmModuleSourceMap", %"class.v8::internal::wasm::WasmModuleSourceMap"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint i64* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %3
  %13 = ashr exact i64 %10, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64* [ %5, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds i64, i64* %15, i64 %17
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, %2
  %21 = getelementptr inbounds i64, i64* %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %17, i64 %23
  %25 = select i1 %20, i64* %15, i64* %21
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14
  %28 = icmp eq i64* %25, %5
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = ptrtoint i64* %25 to i64
  %31 = sub i64 %30, %9
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, -1
  %34 = getelementptr inbounds i64, i64* %5, i64 %33
  %35 = load i64, i64* %34, align 8
  %36 = icmp uge i64 %35, %1
  br label %37

37:                                               ; preds = %3, %27, %29
  %38 = phi i1 [ %36, %29 ], [ false, %27 ], [ false, %3 ]
  ret i1 %38
}

declare i32 @_ZN2v84base15VLQBase64DecodeEPKcmPm(i8*, i64, i64*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare %"class.v8::String"* @_ZN2v86String18NewFromUtf8LiteralEPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPcEEEvDpOT_(%"class.std::__1::vector.1"*, i8** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = load i8*, i8** %1, align 8
  %38 = tail call i64 @strlen(i8* %37) #11
  %39 = icmp ugt i64 %38, -17
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %41) #13
  unreachable

42:                                               ; preds = %31
  %43 = icmp ult i64 %38, 23
  br i1 %43, label %52, label %44

44:                                               ; preds = %42
  %45 = add nuw i64 %38, 16
  %46 = and i64 %45, -16
  %47 = tail call i8* @_Znwm(i64 %46) #12
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %47, i8** %48, align 8
  %49 = or i64 %46, -9223372036854775808
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %51, align 8
  br label %58

52:                                               ; preds = %42
  %53 = trunc i64 %38 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1
  %56 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %57 = icmp eq i64 %38, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %52, %44
  %59 = phi i8* [ %47, %44 ], [ %56, %52 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %37, i64 %38, i1 false) #11
  br label %60

60:                                               ; preds = %52, %58
  %61 = phi i8* [ %56, %52 ], [ %59, %58 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %38
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %64 = ptrtoint %"class.std::__1::basic_string"* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %65, align 8
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %67, %66
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = ptrtoint %"class.std::__1::basic_string"* %66 to i64
  br label %82

71:                                               ; preds = %60, %71
  %72 = phi %"class.std::__1::basic_string"* [ %74, %71 ], [ %34, %60 ]
  %73 = phi %"class.std::__1::basic_string"* [ %75, %71 ], [ %67, %60 ]
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 -1
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %76 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %77 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #11
  %78 = icmp eq %"class.std::__1::basic_string"* %75, %66
  br i1 %78, label %79, label %71

79:                                               ; preds = %71
  %80 = load i64, i64* %6, align 8
  %81 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %82

82:                                               ; preds = %69, %79
  %83 = phi %"class.std::__1::basic_string"* [ %66, %69 ], [ %81, %79 ]
  %84 = phi %"class.std::__1::basic_string"* [ %34, %69 ], [ %74, %79 ]
  %85 = phi i64 [ %70, %69 ], [ %80, %79 ]
  %86 = ptrtoint %"class.std::__1::basic_string"* %84 to i64
  store i64 %86, i64* %6, align 8
  store i64 %64, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %87 = inttoptr i64 %85 to %"class.std::__1::basic_string"*
  %88 = icmp eq %"class.std::__1::basic_string"* %83, %87
  br i1 %88, label %101, label %89

89:                                               ; preds = %82, %99
  %90 = phi %"class.std::__1::basic_string"* [ %91, %99 ], [ %83, %82 ]
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 -1
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %96, %89
  %100 = icmp eq %"class.std::__1::basic_string"* %91, %87
  br i1 %100, label %101, label %89

101:                                              ; preds = %99, %82
  %102 = icmp eq i64 %85, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = inttoptr i64 %85 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %101, %103
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 2002}
!3 = !{!"branch_weights", i32 1, i32 2000}
